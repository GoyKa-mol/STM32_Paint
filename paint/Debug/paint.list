
paint.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000fadc  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002150  0800fcac  0800fcac  0001fcac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08011dfc  08011dfc  00031428  2**0
                  CONTENTS
  4 .ARM          00000008  08011dfc  08011dfc  00021dfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08011e04  08011e04  00031428  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08011e04  08011e04  00021e04  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08011e08  08011e08  00021e08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00001428  20000000  08011e0c  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00008d2c  20001428  08013234  00031428  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000a154  08013234  0003a154  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00031428  2**0
                  CONTENTS, READONLY
 12 .debug_info   0002d2a1  00000000  00000000  00031458  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000055a5  00000000  00000000  0005e6f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00002660  00000000  00000000  00063ca0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000023c8  00000000  00000000  00066300  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0002e422  00000000  00000000  000686c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0001f9bb  00000000  00000000  00096aea  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    001154ce  00000000  00000000  000b64a5  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  001cb973  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000a590  00000000  00000000  001cb9f0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20001428 	.word	0x20001428
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800fc94 	.word	0x0800fc94

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000142c 	.word	0x2000142c
 800020c:	0800fc94 	.word	0x0800fc94

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b972 	b.w	80005ac <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9e08      	ldr	r6, [sp, #32]
 80002e6:	4604      	mov	r4, r0
 80002e8:	4688      	mov	r8, r1
 80002ea:	2b00      	cmp	r3, #0
 80002ec:	d14b      	bne.n	8000386 <__udivmoddi4+0xa6>
 80002ee:	428a      	cmp	r2, r1
 80002f0:	4615      	mov	r5, r2
 80002f2:	d967      	bls.n	80003c4 <__udivmoddi4+0xe4>
 80002f4:	fab2 f282 	clz	r2, r2
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0720 	rsb	r7, r2, #32
 80002fe:	fa01 f302 	lsl.w	r3, r1, r2
 8000302:	fa20 f707 	lsr.w	r7, r0, r7
 8000306:	4095      	lsls	r5, r2
 8000308:	ea47 0803 	orr.w	r8, r7, r3
 800030c:	4094      	lsls	r4, r2
 800030e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000312:	0c23      	lsrs	r3, r4, #16
 8000314:	fbb8 f7fe 	udiv	r7, r8, lr
 8000318:	fa1f fc85 	uxth.w	ip, r5
 800031c:	fb0e 8817 	mls	r8, lr, r7, r8
 8000320:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000324:	fb07 f10c 	mul.w	r1, r7, ip
 8000328:	4299      	cmp	r1, r3
 800032a:	d909      	bls.n	8000340 <__udivmoddi4+0x60>
 800032c:	18eb      	adds	r3, r5, r3
 800032e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000332:	f080 811b 	bcs.w	800056c <__udivmoddi4+0x28c>
 8000336:	4299      	cmp	r1, r3
 8000338:	f240 8118 	bls.w	800056c <__udivmoddi4+0x28c>
 800033c:	3f02      	subs	r7, #2
 800033e:	442b      	add	r3, r5
 8000340:	1a5b      	subs	r3, r3, r1
 8000342:	b2a4      	uxth	r4, r4
 8000344:	fbb3 f0fe 	udiv	r0, r3, lr
 8000348:	fb0e 3310 	mls	r3, lr, r0, r3
 800034c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000350:	fb00 fc0c 	mul.w	ip, r0, ip
 8000354:	45a4      	cmp	ip, r4
 8000356:	d909      	bls.n	800036c <__udivmoddi4+0x8c>
 8000358:	192c      	adds	r4, r5, r4
 800035a:	f100 33ff 	add.w	r3, r0, #4294967295
 800035e:	f080 8107 	bcs.w	8000570 <__udivmoddi4+0x290>
 8000362:	45a4      	cmp	ip, r4
 8000364:	f240 8104 	bls.w	8000570 <__udivmoddi4+0x290>
 8000368:	3802      	subs	r0, #2
 800036a:	442c      	add	r4, r5
 800036c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000370:	eba4 040c 	sub.w	r4, r4, ip
 8000374:	2700      	movs	r7, #0
 8000376:	b11e      	cbz	r6, 8000380 <__udivmoddi4+0xa0>
 8000378:	40d4      	lsrs	r4, r2
 800037a:	2300      	movs	r3, #0
 800037c:	e9c6 4300 	strd	r4, r3, [r6]
 8000380:	4639      	mov	r1, r7
 8000382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000386:	428b      	cmp	r3, r1
 8000388:	d909      	bls.n	800039e <__udivmoddi4+0xbe>
 800038a:	2e00      	cmp	r6, #0
 800038c:	f000 80eb 	beq.w	8000566 <__udivmoddi4+0x286>
 8000390:	2700      	movs	r7, #0
 8000392:	e9c6 0100 	strd	r0, r1, [r6]
 8000396:	4638      	mov	r0, r7
 8000398:	4639      	mov	r1, r7
 800039a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039e:	fab3 f783 	clz	r7, r3
 80003a2:	2f00      	cmp	r7, #0
 80003a4:	d147      	bne.n	8000436 <__udivmoddi4+0x156>
 80003a6:	428b      	cmp	r3, r1
 80003a8:	d302      	bcc.n	80003b0 <__udivmoddi4+0xd0>
 80003aa:	4282      	cmp	r2, r0
 80003ac:	f200 80fa 	bhi.w	80005a4 <__udivmoddi4+0x2c4>
 80003b0:	1a84      	subs	r4, r0, r2
 80003b2:	eb61 0303 	sbc.w	r3, r1, r3
 80003b6:	2001      	movs	r0, #1
 80003b8:	4698      	mov	r8, r3
 80003ba:	2e00      	cmp	r6, #0
 80003bc:	d0e0      	beq.n	8000380 <__udivmoddi4+0xa0>
 80003be:	e9c6 4800 	strd	r4, r8, [r6]
 80003c2:	e7dd      	b.n	8000380 <__udivmoddi4+0xa0>
 80003c4:	b902      	cbnz	r2, 80003c8 <__udivmoddi4+0xe8>
 80003c6:	deff      	udf	#255	; 0xff
 80003c8:	fab2 f282 	clz	r2, r2
 80003cc:	2a00      	cmp	r2, #0
 80003ce:	f040 808f 	bne.w	80004f0 <__udivmoddi4+0x210>
 80003d2:	1b49      	subs	r1, r1, r5
 80003d4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003d8:	fa1f f885 	uxth.w	r8, r5
 80003dc:	2701      	movs	r7, #1
 80003de:	fbb1 fcfe 	udiv	ip, r1, lr
 80003e2:	0c23      	lsrs	r3, r4, #16
 80003e4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003e8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003ec:	fb08 f10c 	mul.w	r1, r8, ip
 80003f0:	4299      	cmp	r1, r3
 80003f2:	d907      	bls.n	8000404 <__udivmoddi4+0x124>
 80003f4:	18eb      	adds	r3, r5, r3
 80003f6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003fa:	d202      	bcs.n	8000402 <__udivmoddi4+0x122>
 80003fc:	4299      	cmp	r1, r3
 80003fe:	f200 80cd 	bhi.w	800059c <__udivmoddi4+0x2bc>
 8000402:	4684      	mov	ip, r0
 8000404:	1a59      	subs	r1, r3, r1
 8000406:	b2a3      	uxth	r3, r4
 8000408:	fbb1 f0fe 	udiv	r0, r1, lr
 800040c:	fb0e 1410 	mls	r4, lr, r0, r1
 8000410:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000414:	fb08 f800 	mul.w	r8, r8, r0
 8000418:	45a0      	cmp	r8, r4
 800041a:	d907      	bls.n	800042c <__udivmoddi4+0x14c>
 800041c:	192c      	adds	r4, r5, r4
 800041e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000422:	d202      	bcs.n	800042a <__udivmoddi4+0x14a>
 8000424:	45a0      	cmp	r8, r4
 8000426:	f200 80b6 	bhi.w	8000596 <__udivmoddi4+0x2b6>
 800042a:	4618      	mov	r0, r3
 800042c:	eba4 0408 	sub.w	r4, r4, r8
 8000430:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000434:	e79f      	b.n	8000376 <__udivmoddi4+0x96>
 8000436:	f1c7 0c20 	rsb	ip, r7, #32
 800043a:	40bb      	lsls	r3, r7
 800043c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000440:	ea4e 0e03 	orr.w	lr, lr, r3
 8000444:	fa01 f407 	lsl.w	r4, r1, r7
 8000448:	fa20 f50c 	lsr.w	r5, r0, ip
 800044c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000450:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000454:	4325      	orrs	r5, r4
 8000456:	fbb3 f9f8 	udiv	r9, r3, r8
 800045a:	0c2c      	lsrs	r4, r5, #16
 800045c:	fb08 3319 	mls	r3, r8, r9, r3
 8000460:	fa1f fa8e 	uxth.w	sl, lr
 8000464:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000468:	fb09 f40a 	mul.w	r4, r9, sl
 800046c:	429c      	cmp	r4, r3
 800046e:	fa02 f207 	lsl.w	r2, r2, r7
 8000472:	fa00 f107 	lsl.w	r1, r0, r7
 8000476:	d90b      	bls.n	8000490 <__udivmoddi4+0x1b0>
 8000478:	eb1e 0303 	adds.w	r3, lr, r3
 800047c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000480:	f080 8087 	bcs.w	8000592 <__udivmoddi4+0x2b2>
 8000484:	429c      	cmp	r4, r3
 8000486:	f240 8084 	bls.w	8000592 <__udivmoddi4+0x2b2>
 800048a:	f1a9 0902 	sub.w	r9, r9, #2
 800048e:	4473      	add	r3, lr
 8000490:	1b1b      	subs	r3, r3, r4
 8000492:	b2ad      	uxth	r5, r5
 8000494:	fbb3 f0f8 	udiv	r0, r3, r8
 8000498:	fb08 3310 	mls	r3, r8, r0, r3
 800049c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 80004a0:	fb00 fa0a 	mul.w	sl, r0, sl
 80004a4:	45a2      	cmp	sl, r4
 80004a6:	d908      	bls.n	80004ba <__udivmoddi4+0x1da>
 80004a8:	eb1e 0404 	adds.w	r4, lr, r4
 80004ac:	f100 33ff 	add.w	r3, r0, #4294967295
 80004b0:	d26b      	bcs.n	800058a <__udivmoddi4+0x2aa>
 80004b2:	45a2      	cmp	sl, r4
 80004b4:	d969      	bls.n	800058a <__udivmoddi4+0x2aa>
 80004b6:	3802      	subs	r0, #2
 80004b8:	4474      	add	r4, lr
 80004ba:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80004be:	fba0 8902 	umull	r8, r9, r0, r2
 80004c2:	eba4 040a 	sub.w	r4, r4, sl
 80004c6:	454c      	cmp	r4, r9
 80004c8:	46c2      	mov	sl, r8
 80004ca:	464b      	mov	r3, r9
 80004cc:	d354      	bcc.n	8000578 <__udivmoddi4+0x298>
 80004ce:	d051      	beq.n	8000574 <__udivmoddi4+0x294>
 80004d0:	2e00      	cmp	r6, #0
 80004d2:	d069      	beq.n	80005a8 <__udivmoddi4+0x2c8>
 80004d4:	ebb1 050a 	subs.w	r5, r1, sl
 80004d8:	eb64 0403 	sbc.w	r4, r4, r3
 80004dc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004e0:	40fd      	lsrs	r5, r7
 80004e2:	40fc      	lsrs	r4, r7
 80004e4:	ea4c 0505 	orr.w	r5, ip, r5
 80004e8:	e9c6 5400 	strd	r5, r4, [r6]
 80004ec:	2700      	movs	r7, #0
 80004ee:	e747      	b.n	8000380 <__udivmoddi4+0xa0>
 80004f0:	f1c2 0320 	rsb	r3, r2, #32
 80004f4:	fa20 f703 	lsr.w	r7, r0, r3
 80004f8:	4095      	lsls	r5, r2
 80004fa:	fa01 f002 	lsl.w	r0, r1, r2
 80004fe:	fa21 f303 	lsr.w	r3, r1, r3
 8000502:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000506:	4338      	orrs	r0, r7
 8000508:	0c01      	lsrs	r1, r0, #16
 800050a:	fbb3 f7fe 	udiv	r7, r3, lr
 800050e:	fa1f f885 	uxth.w	r8, r5
 8000512:	fb0e 3317 	mls	r3, lr, r7, r3
 8000516:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800051a:	fb07 f308 	mul.w	r3, r7, r8
 800051e:	428b      	cmp	r3, r1
 8000520:	fa04 f402 	lsl.w	r4, r4, r2
 8000524:	d907      	bls.n	8000536 <__udivmoddi4+0x256>
 8000526:	1869      	adds	r1, r5, r1
 8000528:	f107 3cff 	add.w	ip, r7, #4294967295
 800052c:	d22f      	bcs.n	800058e <__udivmoddi4+0x2ae>
 800052e:	428b      	cmp	r3, r1
 8000530:	d92d      	bls.n	800058e <__udivmoddi4+0x2ae>
 8000532:	3f02      	subs	r7, #2
 8000534:	4429      	add	r1, r5
 8000536:	1acb      	subs	r3, r1, r3
 8000538:	b281      	uxth	r1, r0
 800053a:	fbb3 f0fe 	udiv	r0, r3, lr
 800053e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000542:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000546:	fb00 f308 	mul.w	r3, r0, r8
 800054a:	428b      	cmp	r3, r1
 800054c:	d907      	bls.n	800055e <__udivmoddi4+0x27e>
 800054e:	1869      	adds	r1, r5, r1
 8000550:	f100 3cff 	add.w	ip, r0, #4294967295
 8000554:	d217      	bcs.n	8000586 <__udivmoddi4+0x2a6>
 8000556:	428b      	cmp	r3, r1
 8000558:	d915      	bls.n	8000586 <__udivmoddi4+0x2a6>
 800055a:	3802      	subs	r0, #2
 800055c:	4429      	add	r1, r5
 800055e:	1ac9      	subs	r1, r1, r3
 8000560:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000564:	e73b      	b.n	80003de <__udivmoddi4+0xfe>
 8000566:	4637      	mov	r7, r6
 8000568:	4630      	mov	r0, r6
 800056a:	e709      	b.n	8000380 <__udivmoddi4+0xa0>
 800056c:	4607      	mov	r7, r0
 800056e:	e6e7      	b.n	8000340 <__udivmoddi4+0x60>
 8000570:	4618      	mov	r0, r3
 8000572:	e6fb      	b.n	800036c <__udivmoddi4+0x8c>
 8000574:	4541      	cmp	r1, r8
 8000576:	d2ab      	bcs.n	80004d0 <__udivmoddi4+0x1f0>
 8000578:	ebb8 0a02 	subs.w	sl, r8, r2
 800057c:	eb69 020e 	sbc.w	r2, r9, lr
 8000580:	3801      	subs	r0, #1
 8000582:	4613      	mov	r3, r2
 8000584:	e7a4      	b.n	80004d0 <__udivmoddi4+0x1f0>
 8000586:	4660      	mov	r0, ip
 8000588:	e7e9      	b.n	800055e <__udivmoddi4+0x27e>
 800058a:	4618      	mov	r0, r3
 800058c:	e795      	b.n	80004ba <__udivmoddi4+0x1da>
 800058e:	4667      	mov	r7, ip
 8000590:	e7d1      	b.n	8000536 <__udivmoddi4+0x256>
 8000592:	4681      	mov	r9, r0
 8000594:	e77c      	b.n	8000490 <__udivmoddi4+0x1b0>
 8000596:	3802      	subs	r0, #2
 8000598:	442c      	add	r4, r5
 800059a:	e747      	b.n	800042c <__udivmoddi4+0x14c>
 800059c:	f1ac 0c02 	sub.w	ip, ip, #2
 80005a0:	442b      	add	r3, r5
 80005a2:	e72f      	b.n	8000404 <__udivmoddi4+0x124>
 80005a4:	4638      	mov	r0, r7
 80005a6:	e708      	b.n	80003ba <__udivmoddi4+0xda>
 80005a8:	4637      	mov	r7, r6
 80005aa:	e6e9      	b.n	8000380 <__udivmoddi4+0xa0>

080005ac <__aeabi_idiv0>:
 80005ac:	4770      	bx	lr
 80005ae:	bf00      	nop

080005b0 <vApplicationIdleHook>:
 80005b0:	b480      	push	{r7}
 80005b2:	af00      	add	r7, sp, #0
 80005b4:	bf00      	nop
 80005b6:	46bd      	mov	sp, r7
 80005b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005bc:	4770      	bx	lr

080005be <vApplicationStackOverflowHook>:
 80005be:	b480      	push	{r7}
 80005c0:	b083      	sub	sp, #12
 80005c2:	af00      	add	r7, sp, #0
 80005c4:	6078      	str	r0, [r7, #4]
 80005c6:	6039      	str	r1, [r7, #0]
 80005c8:	bf00      	nop
 80005ca:	370c      	adds	r7, #12
 80005cc:	46bd      	mov	sp, r7
 80005ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d2:	4770      	bx	lr

080005d4 <vApplicationMallocFailedHook>:
 80005d4:	b480      	push	{r7}
 80005d6:	af00      	add	r7, sp, #0
 80005d8:	bf00      	nop
 80005da:	46bd      	mov	sp, r7
 80005dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e0:	4770      	bx	lr
	...

080005e4 <vApplicationGetIdleTaskMemory>:
 80005e4:	b480      	push	{r7}
 80005e6:	b085      	sub	sp, #20
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	60f8      	str	r0, [r7, #12]
 80005ec:	60b9      	str	r1, [r7, #8]
 80005ee:	607a      	str	r2, [r7, #4]
 80005f0:	68fb      	ldr	r3, [r7, #12]
 80005f2:	4a07      	ldr	r2, [pc, #28]	; (8000610 <vApplicationGetIdleTaskMemory+0x2c>)
 80005f4:	601a      	str	r2, [r3, #0]
 80005f6:	68bb      	ldr	r3, [r7, #8]
 80005f8:	4a06      	ldr	r2, [pc, #24]	; (8000614 <vApplicationGetIdleTaskMemory+0x30>)
 80005fa:	601a      	str	r2, [r3, #0]
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	2280      	movs	r2, #128	; 0x80
 8000600:	601a      	str	r2, [r3, #0]
 8000602:	bf00      	nop
 8000604:	3714      	adds	r7, #20
 8000606:	46bd      	mov	sp, r7
 8000608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800060c:	4770      	bx	lr
 800060e:	bf00      	nop
 8000610:	20001444 	.word	0x20001444
 8000614:	2000149c 	.word	0x2000149c

08000618 <ft5336_Init>:
  *         from MCU to FT5336 : ie I2C channel initialization (if required).
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Init(uint16_t DeviceAddr)
{
 8000618:	b580      	push	{r7, lr}
 800061a:	b082      	sub	sp, #8
 800061c:	af00      	add	r7, sp, #0
 800061e:	4603      	mov	r3, r0
 8000620:	80fb      	strh	r3, [r7, #6]
  /* Wait at least 200ms after power up before accessing registers
   * Trsi timing (Time of starting to report point after resetting) from FT5336GQQ datasheet */
  TS_IO_Delay(200);
 8000622:	20c8      	movs	r0, #200	; 0xc8
 8000624:	f003 fbb2 	bl	8003d8c <TS_IO_Delay>

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 8000628:	f000 fa7a 	bl	8000b20 <ft5336_I2C_InitializeIfRequired>
}
 800062c:	bf00      	nop
 800062e:	3708      	adds	r7, #8
 8000630:	46bd      	mov	sp, r7
 8000632:	bd80      	pop	{r7, pc}

08000634 <ft5336_Reset>:
  *         @note : Not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
 8000634:	b480      	push	{r7}
 8000636:	b083      	sub	sp, #12
 8000638:	af00      	add	r7, sp, #0
 800063a:	4603      	mov	r3, r0
 800063c:	80fb      	strh	r3, [r7, #6]
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 800063e:	bf00      	nop
 8000640:	370c      	adds	r7, #12
 8000642:	46bd      	mov	sp, r7
 8000644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000648:	4770      	bx	lr

0800064a <ft5336_ReadID>:
  *         able to read the FT5336 device ID, and verify this is a FT5336.
  * @param  DeviceAddr: I2C FT5336 Slave address.
  * @retval The Device ID (two bytes).
  */
uint16_t ft5336_ReadID(uint16_t DeviceAddr)
{
 800064a:	b580      	push	{r7, lr}
 800064c:	b084      	sub	sp, #16
 800064e:	af00      	add	r7, sp, #0
 8000650:	4603      	mov	r3, r0
 8000652:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t ucReadId = 0;
 8000654:	2300      	movs	r3, #0
 8000656:	737b      	strb	r3, [r7, #13]
  uint8_t nbReadAttempts = 0;
 8000658:	2300      	movs	r3, #0
 800065a:	73fb      	strb	r3, [r7, #15]
  uint8_t bFoundDevice = 0; /* Device not found by default */
 800065c:	2300      	movs	r3, #0
 800065e:	73bb      	strb	r3, [r7, #14]

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 8000660:	f000 fa5e 	bl	8000b20 <ft5336_I2C_InitializeIfRequired>

  /* At maximum 4 attempts to read ID : exit at first finding of the searched device ID */
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8000664:	2300      	movs	r3, #0
 8000666:	73fb      	strb	r3, [r7, #15]
 8000668:	e010      	b.n	800068c <ft5336_ReadID+0x42>
  {
    /* Read register FT5336_CHIP_ID_REG as DeviceID detection */
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 800066a:	88fb      	ldrh	r3, [r7, #6]
 800066c:	b2db      	uxtb	r3, r3
 800066e:	21a8      	movs	r1, #168	; 0xa8
 8000670:	4618      	mov	r0, r3
 8000672:	f003 fb6d 	bl	8003d50 <TS_IO_Read>
 8000676:	4603      	mov	r3, r0
 8000678:	737b      	strb	r3, [r7, #13]

    /* Found the searched device ID ? */
    if(ucReadId == FT5336_ID_VALUE)
 800067a:	7b7b      	ldrb	r3, [r7, #13]
 800067c:	b2db      	uxtb	r3, r3
 800067e:	2b51      	cmp	r3, #81	; 0x51
 8000680:	d101      	bne.n	8000686 <ft5336_ReadID+0x3c>
    {
      /* Set device as found */
      bFoundDevice = 1;
 8000682:	2301      	movs	r3, #1
 8000684:	73bb      	strb	r3, [r7, #14]
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8000686:	7bfb      	ldrb	r3, [r7, #15]
 8000688:	3301      	adds	r3, #1
 800068a:	73fb      	strb	r3, [r7, #15]
 800068c:	7bfb      	ldrb	r3, [r7, #15]
 800068e:	2b02      	cmp	r3, #2
 8000690:	d802      	bhi.n	8000698 <ft5336_ReadID+0x4e>
 8000692:	7bbb      	ldrb	r3, [r7, #14]
 8000694:	2b00      	cmp	r3, #0
 8000696:	d0e8      	beq.n	800066a <ft5336_ReadID+0x20>
    }
  }

  /* Return the device ID value */
  return (ucReadId);
 8000698:	7b7b      	ldrb	r3, [r7, #13]
 800069a:	b2db      	uxtb	r3, r3
 800069c:	b29b      	uxth	r3, r3
}
 800069e:	4618      	mov	r0, r3
 80006a0:	3710      	adds	r7, #16
 80006a2:	46bd      	mov	sp, r7
 80006a4:	bd80      	pop	{r7, pc}

080006a6 <ft5336_TS_Start>:
  * @brief  Configures the touch Screen IC device to start detecting touches
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address).
  * @retval None.
  */
void ft5336_TS_Start(uint16_t DeviceAddr)
{
 80006a6:	b580      	push	{r7, lr}
 80006a8:	b082      	sub	sp, #8
 80006aa:	af00      	add	r7, sp, #0
 80006ac:	4603      	mov	r3, r0
 80006ae:	80fb      	strh	r3, [r7, #6]
  /* Minimum static configuration of FT5336 */
  FT5336_ASSERT(ft5336_TS_Configure(DeviceAddr));
 80006b0:	88fb      	ldrh	r3, [r7, #6]
 80006b2:	4618      	mov	r0, r3
 80006b4:	f000 fa44 	bl	8000b40 <ft5336_TS_Configure>

  /* By default set FT5336 IC in Polling mode : no INT generation on FT5336 for new touch available */
  /* Note TS_INT is active low                                                                      */
  ft5336_TS_DisableIT(DeviceAddr);
 80006b8:	88fb      	ldrh	r3, [r7, #6]
 80006ba:	4618      	mov	r0, r3
 80006bc:	f000 f932 	bl	8000924 <ft5336_TS_DisableIT>
}
 80006c0:	bf00      	nop
 80006c2:	3708      	adds	r7, #8
 80006c4:	46bd      	mov	sp, r7
 80006c6:	bd80      	pop	{r7, pc}

080006c8 <ft5336_TS_DetectTouch>:
  *         variables).
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval : Number of active touches detected (can be 0, 1 or 2).
  */
uint8_t ft5336_TS_DetectTouch(uint16_t DeviceAddr)
{
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b084      	sub	sp, #16
 80006cc:	af00      	add	r7, sp, #0
 80006ce:	4603      	mov	r3, r0
 80006d0:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t nbTouch = 0;
 80006d2:	2300      	movs	r3, #0
 80006d4:	73fb      	strb	r3, [r7, #15]

  /* Read register FT5336_TD_STAT_REG to check number of touches detection */
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 80006d6:	88fb      	ldrh	r3, [r7, #6]
 80006d8:	b2db      	uxtb	r3, r3
 80006da:	2102      	movs	r1, #2
 80006dc:	4618      	mov	r0, r3
 80006de:	f003 fb37 	bl	8003d50 <TS_IO_Read>
 80006e2:	4603      	mov	r3, r0
 80006e4:	73fb      	strb	r3, [r7, #15]
  nbTouch &= FT5336_TD_STAT_MASK;
 80006e6:	7bfb      	ldrb	r3, [r7, #15]
 80006e8:	b2db      	uxtb	r3, r3
 80006ea:	f003 030f 	and.w	r3, r3, #15
 80006ee:	b2db      	uxtb	r3, r3
 80006f0:	73fb      	strb	r3, [r7, #15]

  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 80006f2:	7bfb      	ldrb	r3, [r7, #15]
 80006f4:	b2db      	uxtb	r3, r3
 80006f6:	2b05      	cmp	r3, #5
 80006f8:	d901      	bls.n	80006fe <ft5336_TS_DetectTouch+0x36>
  {
    /* If invalid number of touch detected, set it to zero */
    nbTouch = 0;
 80006fa:	2300      	movs	r3, #0
 80006fc:	73fb      	strb	r3, [r7, #15]
  }

  /* Update ft5336 driver internal global : current number of active touches */
  ft5336_handle.currActiveTouchNb = nbTouch;
 80006fe:	7bfb      	ldrb	r3, [r7, #15]
 8000700:	b2da      	uxtb	r2, r3
 8000702:	4b05      	ldr	r3, [pc, #20]	; (8000718 <ft5336_TS_DetectTouch+0x50>)
 8000704:	705a      	strb	r2, [r3, #1]

  /* Reset current active touch index on which to work on */
  ft5336_handle.currActiveTouchIdx = 0;
 8000706:	4b04      	ldr	r3, [pc, #16]	; (8000718 <ft5336_TS_DetectTouch+0x50>)
 8000708:	2200      	movs	r2, #0
 800070a:	709a      	strb	r2, [r3, #2]

  return(nbTouch);
 800070c:	7bfb      	ldrb	r3, [r7, #15]
 800070e:	b2db      	uxtb	r3, r3
}
 8000710:	4618      	mov	r0, r3
 8000712:	3710      	adds	r7, #16
 8000714:	46bd      	mov	sp, r7
 8000716:	bd80      	pop	{r7, pc}
 8000718:	2000169c 	.word	0x2000169c

0800071c <ft5336_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value
  * @retval None.
  */
void ft5336_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800071c:	b580      	push	{r7, lr}
 800071e:	b086      	sub	sp, #24
 8000720:	af00      	add	r7, sp, #0
 8000722:	4603      	mov	r3, r0
 8000724:	60b9      	str	r1, [r7, #8]
 8000726:	607a      	str	r2, [r7, #4]
 8000728:	81fb      	strh	r3, [r7, #14]
  volatile uint8_t ucReadData = 0;
 800072a:	2300      	movs	r3, #0
 800072c:	74fb      	strb	r3, [r7, #19]
  static uint16_t coord;
  uint8_t regAddressXLow = 0;
 800072e:	2300      	movs	r3, #0
 8000730:	75fb      	strb	r3, [r7, #23]
  uint8_t regAddressXHigh = 0;
 8000732:	2300      	movs	r3, #0
 8000734:	75bb      	strb	r3, [r7, #22]
  uint8_t regAddressYLow = 0;
 8000736:	2300      	movs	r3, #0
 8000738:	757b      	strb	r3, [r7, #21]
  uint8_t regAddressYHigh = 0;
 800073a:	2300      	movs	r3, #0
 800073c:	753b      	strb	r3, [r7, #20]

  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 800073e:	4b6d      	ldr	r3, [pc, #436]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 8000740:	789a      	ldrb	r2, [r3, #2]
 8000742:	4b6c      	ldr	r3, [pc, #432]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 8000744:	785b      	ldrb	r3, [r3, #1]
 8000746:	429a      	cmp	r2, r3
 8000748:	f080 80cf 	bcs.w	80008ea <ft5336_TS_GetXY+0x1ce>
  {
    switch(ft5336_handle.currActiveTouchIdx)
 800074c:	4b69      	ldr	r3, [pc, #420]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 800074e:	789b      	ldrb	r3, [r3, #2]
 8000750:	2b09      	cmp	r3, #9
 8000752:	d871      	bhi.n	8000838 <ft5336_TS_GetXY+0x11c>
 8000754:	a201      	add	r2, pc, #4	; (adr r2, 800075c <ft5336_TS_GetXY+0x40>)
 8000756:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800075a:	bf00      	nop
 800075c:	08000785 	.word	0x08000785
 8000760:	08000797 	.word	0x08000797
 8000764:	080007a9 	.word	0x080007a9
 8000768:	080007bb 	.word	0x080007bb
 800076c:	080007cd 	.word	0x080007cd
 8000770:	080007df 	.word	0x080007df
 8000774:	080007f1 	.word	0x080007f1
 8000778:	08000803 	.word	0x08000803
 800077c:	08000815 	.word	0x08000815
 8000780:	08000827 	.word	0x08000827
    {
    case 0 :
      regAddressXLow  = FT5336_P1_XL_REG;
 8000784:	2304      	movs	r3, #4
 8000786:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P1_XH_REG;
 8000788:	2303      	movs	r3, #3
 800078a:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P1_YL_REG;
 800078c:	2306      	movs	r3, #6
 800078e:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P1_YH_REG;
 8000790:	2305      	movs	r3, #5
 8000792:	753b      	strb	r3, [r7, #20]
      break;
 8000794:	e051      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 1 :
      regAddressXLow  = FT5336_P2_XL_REG;
 8000796:	230a      	movs	r3, #10
 8000798:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P2_XH_REG;
 800079a:	2309      	movs	r3, #9
 800079c:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P2_YL_REG;
 800079e:	230c      	movs	r3, #12
 80007a0:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P2_YH_REG;
 80007a2:	230b      	movs	r3, #11
 80007a4:	753b      	strb	r3, [r7, #20]
      break;
 80007a6:	e048      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 2 :
      regAddressXLow  = FT5336_P3_XL_REG;
 80007a8:	2310      	movs	r3, #16
 80007aa:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P3_XH_REG;
 80007ac:	230f      	movs	r3, #15
 80007ae:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P3_YL_REG;
 80007b0:	2312      	movs	r3, #18
 80007b2:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P3_YH_REG;
 80007b4:	2311      	movs	r3, #17
 80007b6:	753b      	strb	r3, [r7, #20]
      break;
 80007b8:	e03f      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 3 :
      regAddressXLow  = FT5336_P4_XL_REG;
 80007ba:	2316      	movs	r3, #22
 80007bc:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P4_XH_REG;
 80007be:	2315      	movs	r3, #21
 80007c0:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P4_YL_REG;
 80007c2:	2318      	movs	r3, #24
 80007c4:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P4_YH_REG;
 80007c6:	2317      	movs	r3, #23
 80007c8:	753b      	strb	r3, [r7, #20]
      break;
 80007ca:	e036      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 4 :
      regAddressXLow  = FT5336_P5_XL_REG;
 80007cc:	231c      	movs	r3, #28
 80007ce:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P5_XH_REG;
 80007d0:	231b      	movs	r3, #27
 80007d2:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P5_YL_REG;
 80007d4:	231e      	movs	r3, #30
 80007d6:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P5_YH_REG;
 80007d8:	231d      	movs	r3, #29
 80007da:	753b      	strb	r3, [r7, #20]
      break;
 80007dc:	e02d      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 5 :
      regAddressXLow  = FT5336_P6_XL_REG;
 80007de:	2322      	movs	r3, #34	; 0x22
 80007e0:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P6_XH_REG;
 80007e2:	2321      	movs	r3, #33	; 0x21
 80007e4:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P6_YL_REG;
 80007e6:	2324      	movs	r3, #36	; 0x24
 80007e8:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P6_YH_REG;
 80007ea:	2323      	movs	r3, #35	; 0x23
 80007ec:	753b      	strb	r3, [r7, #20]
      break;
 80007ee:	e024      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 6 :
      regAddressXLow  = FT5336_P7_XL_REG;
 80007f0:	2328      	movs	r3, #40	; 0x28
 80007f2:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P7_XH_REG;
 80007f4:	2327      	movs	r3, #39	; 0x27
 80007f6:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P7_YL_REG;
 80007f8:	232a      	movs	r3, #42	; 0x2a
 80007fa:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P7_YH_REG;
 80007fc:	2329      	movs	r3, #41	; 0x29
 80007fe:	753b      	strb	r3, [r7, #20]
      break;
 8000800:	e01b      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 7 :
      regAddressXLow  = FT5336_P8_XL_REG;
 8000802:	232e      	movs	r3, #46	; 0x2e
 8000804:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P8_XH_REG;
 8000806:	232d      	movs	r3, #45	; 0x2d
 8000808:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P8_YL_REG;
 800080a:	2330      	movs	r3, #48	; 0x30
 800080c:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P8_YH_REG;
 800080e:	232f      	movs	r3, #47	; 0x2f
 8000810:	753b      	strb	r3, [r7, #20]
      break;
 8000812:	e012      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 8 :
      regAddressXLow  = FT5336_P9_XL_REG;
 8000814:	2334      	movs	r3, #52	; 0x34
 8000816:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P9_XH_REG;
 8000818:	2333      	movs	r3, #51	; 0x33
 800081a:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P9_YL_REG;
 800081c:	2336      	movs	r3, #54	; 0x36
 800081e:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P9_YH_REG;
 8000820:	2335      	movs	r3, #53	; 0x35
 8000822:	753b      	strb	r3, [r7, #20]
      break;
 8000824:	e009      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 9 :
      regAddressXLow  = FT5336_P10_XL_REG;
 8000826:	233a      	movs	r3, #58	; 0x3a
 8000828:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P10_XH_REG;
 800082a:	2339      	movs	r3, #57	; 0x39
 800082c:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P10_YL_REG;
 800082e:	233c      	movs	r3, #60	; 0x3c
 8000830:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P10_YH_REG;
 8000832:	233b      	movs	r3, #59	; 0x3b
 8000834:	753b      	strb	r3, [r7, #20]
      break;
 8000836:	e000      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    default :
      break;
 8000838:	bf00      	nop

    } /* end switch(ft5336_handle.currActiveTouchIdx) */

    /* Read low part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 800083a:	89fb      	ldrh	r3, [r7, #14]
 800083c:	b2db      	uxtb	r3, r3
 800083e:	7dfa      	ldrb	r2, [r7, #23]
 8000840:	4611      	mov	r1, r2
 8000842:	4618      	mov	r0, r3
 8000844:	f003 fa84 	bl	8003d50 <TS_IO_Read>
 8000848:	4603      	mov	r3, r0
 800084a:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 800084c:	7cfb      	ldrb	r3, [r7, #19]
 800084e:	b2db      	uxtb	r3, r3
 8000850:	b29a      	uxth	r2, r3
 8000852:	4b29      	ldr	r3, [pc, #164]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 8000854:	801a      	strh	r2, [r3, #0]

    /* Read high part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8000856:	89fb      	ldrh	r3, [r7, #14]
 8000858:	b2db      	uxtb	r3, r3
 800085a:	7dba      	ldrb	r2, [r7, #22]
 800085c:	4611      	mov	r1, r2
 800085e:	4618      	mov	r0, r3
 8000860:	f003 fa76 	bl	8003d50 <TS_IO_Read>
 8000864:	4603      	mov	r3, r0
 8000866:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8000868:	7cfb      	ldrb	r3, [r7, #19]
 800086a:	b2db      	uxtb	r3, r3
 800086c:	021b      	lsls	r3, r3, #8
 800086e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8000872:	b21a      	sxth	r2, r3
 8000874:	4b20      	ldr	r3, [pc, #128]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 8000876:	881b      	ldrh	r3, [r3, #0]
 8000878:	b21b      	sxth	r3, r3
 800087a:	4313      	orrs	r3, r2
 800087c:	b21b      	sxth	r3, r3
 800087e:	b29a      	uxth	r2, r3
 8000880:	4b1d      	ldr	r3, [pc, #116]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 8000882:	801a      	strh	r2, [r3, #0]

    /* Send back ready X position to caller */
    *X = coord;
 8000884:	4b1c      	ldr	r3, [pc, #112]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 8000886:	881a      	ldrh	r2, [r3, #0]
 8000888:	68bb      	ldr	r3, [r7, #8]
 800088a:	801a      	strh	r2, [r3, #0]

    /* Read low part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 800088c:	89fb      	ldrh	r3, [r7, #14]
 800088e:	b2db      	uxtb	r3, r3
 8000890:	7d7a      	ldrb	r2, [r7, #21]
 8000892:	4611      	mov	r1, r2
 8000894:	4618      	mov	r0, r3
 8000896:	f003 fa5b 	bl	8003d50 <TS_IO_Read>
 800089a:	4603      	mov	r3, r0
 800089c:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 800089e:	7cfb      	ldrb	r3, [r7, #19]
 80008a0:	b2db      	uxtb	r3, r3
 80008a2:	b29a      	uxth	r2, r3
 80008a4:	4b14      	ldr	r3, [pc, #80]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 80008a6:	801a      	strh	r2, [r3, #0]

    /* Read high part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 80008a8:	89fb      	ldrh	r3, [r7, #14]
 80008aa:	b2db      	uxtb	r3, r3
 80008ac:	7d3a      	ldrb	r2, [r7, #20]
 80008ae:	4611      	mov	r1, r2
 80008b0:	4618      	mov	r0, r3
 80008b2:	f003 fa4d 	bl	8003d50 <TS_IO_Read>
 80008b6:	4603      	mov	r3, r0
 80008b8:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 80008ba:	7cfb      	ldrb	r3, [r7, #19]
 80008bc:	b2db      	uxtb	r3, r3
 80008be:	021b      	lsls	r3, r3, #8
 80008c0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80008c4:	b21a      	sxth	r2, r3
 80008c6:	4b0c      	ldr	r3, [pc, #48]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 80008c8:	881b      	ldrh	r3, [r3, #0]
 80008ca:	b21b      	sxth	r3, r3
 80008cc:	4313      	orrs	r3, r2
 80008ce:	b21b      	sxth	r3, r3
 80008d0:	b29a      	uxth	r2, r3
 80008d2:	4b09      	ldr	r3, [pc, #36]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 80008d4:	801a      	strh	r2, [r3, #0]

    /* Send back ready Y position to caller */
    *Y = coord;
 80008d6:	4b08      	ldr	r3, [pc, #32]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 80008d8:	881a      	ldrh	r2, [r3, #0]
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	801a      	strh	r2, [r3, #0]

    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 80008de:	4b05      	ldr	r3, [pc, #20]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 80008e0:	789b      	ldrb	r3, [r3, #2]
 80008e2:	3301      	adds	r3, #1
 80008e4:	b2da      	uxtb	r2, r3
 80008e6:	4b03      	ldr	r3, [pc, #12]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 80008e8:	709a      	strb	r2, [r3, #2]

  } /* of if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb) */
}
 80008ea:	bf00      	nop
 80008ec:	3718      	adds	r7, #24
 80008ee:	46bd      	mov	sp, r7
 80008f0:	bd80      	pop	{r7, pc}
 80008f2:	bf00      	nop
 80008f4:	2000169c 	.word	0x2000169c
 80008f8:	200016a0 	.word	0x200016a0

080008fc <ft5336_TS_EnableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_EnableIT(uint16_t DeviceAddr)
{
 80008fc:	b580      	push	{r7, lr}
 80008fe:	b084      	sub	sp, #16
 8000900:	af00      	add	r7, sp, #0
 8000902:	4603      	mov	r3, r0
 8000904:	80fb      	strh	r3, [r7, #6]
   uint8_t regValue = 0;
 8000906:	2300      	movs	r3, #0
 8000908:	73fb      	strb	r3, [r7, #15]
   regValue = (FT5336_G_MODE_INTERRUPT_TRIGGER & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 800090a:	2301      	movs	r3, #1
 800090c:	73fb      	strb	r3, [r7, #15]

   /* Set interrupt trigger mode in FT5336_GMODE_REG */
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 800090e:	88fb      	ldrh	r3, [r7, #6]
 8000910:	b2db      	uxtb	r3, r3
 8000912:	7bfa      	ldrb	r2, [r7, #15]
 8000914:	21a4      	movs	r1, #164	; 0xa4
 8000916:	4618      	mov	r0, r3
 8000918:	f003 fa00 	bl	8003d1c <TS_IO_Write>
}
 800091c:	bf00      	nop
 800091e:	3710      	adds	r7, #16
 8000920:	46bd      	mov	sp, r7
 8000922:	bd80      	pop	{r7, pc}

08000924 <ft5336_TS_DisableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_DisableIT(uint16_t DeviceAddr)
{
 8000924:	b580      	push	{r7, lr}
 8000926:	b084      	sub	sp, #16
 8000928:	af00      	add	r7, sp, #0
 800092a:	4603      	mov	r3, r0
 800092c:	80fb      	strh	r3, [r7, #6]
  uint8_t regValue = 0;
 800092e:	2300      	movs	r3, #0
 8000930:	73fb      	strb	r3, [r7, #15]
  regValue = (FT5336_G_MODE_INTERRUPT_POLLING & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 8000932:	2300      	movs	r3, #0
 8000934:	73fb      	strb	r3, [r7, #15]

  /* Set interrupt polling mode in FT5336_GMODE_REG */
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8000936:	88fb      	ldrh	r3, [r7, #6]
 8000938:	b2db      	uxtb	r3, r3
 800093a:	7bfa      	ldrb	r2, [r7, #15]
 800093c:	21a4      	movs	r1, #164	; 0xa4
 800093e:	4618      	mov	r0, r3
 8000940:	f003 f9ec 	bl	8003d1c <TS_IO_Write>
}
 8000944:	bf00      	nop
 8000946:	3710      	adds	r7, #16
 8000948:	46bd      	mov	sp, r7
 800094a:	bd80      	pop	{r7, pc}

0800094c <ft5336_TS_ITStatus>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval TS interrupts status : always return 0 here
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
 800094c:	b480      	push	{r7}
 800094e:	b083      	sub	sp, #12
 8000950:	af00      	add	r7, sp, #0
 8000952:	4603      	mov	r3, r0
 8000954:	80fb      	strh	r3, [r7, #6]
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
 8000956:	2300      	movs	r3, #0
}
 8000958:	4618      	mov	r0, r3
 800095a:	370c      	adds	r7, #12
 800095c:	46bd      	mov	sp, r7
 800095e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000962:	4770      	bx	lr

08000964 <ft5336_TS_ClearIT>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
{
 8000964:	b480      	push	{r7}
 8000966:	b083      	sub	sp, #12
 8000968:	af00      	add	r7, sp, #0
 800096a:	4603      	mov	r3, r0
 800096c:	80fb      	strh	r3, [r7, #6]
  /* Nothing to be done here for FT5336 */
}
 800096e:	bf00      	nop
 8000970:	370c      	adds	r7, #12
 8000972:	46bd      	mov	sp, r7
 8000974:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000978:	4770      	bx	lr

0800097a <ft5336_TS_GetGestureID>:
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @param  pGestureId : Pointer to get last touch gesture Identification.
  * @retval None.
  */
void ft5336_TS_GetGestureID(uint16_t DeviceAddr, uint32_t * pGestureId)
{
 800097a:	b580      	push	{r7, lr}
 800097c:	b084      	sub	sp, #16
 800097e:	af00      	add	r7, sp, #0
 8000980:	4603      	mov	r3, r0
 8000982:	6039      	str	r1, [r7, #0]
 8000984:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t ucReadData = 0;
 8000986:	2300      	movs	r3, #0
 8000988:	73fb      	strb	r3, [r7, #15]

  ucReadData = TS_IO_Read(DeviceAddr, FT5336_GEST_ID_REG);
 800098a:	88fb      	ldrh	r3, [r7, #6]
 800098c:	b2db      	uxtb	r3, r3
 800098e:	2101      	movs	r1, #1
 8000990:	4618      	mov	r0, r3
 8000992:	f003 f9dd 	bl	8003d50 <TS_IO_Read>
 8000996:	4603      	mov	r3, r0
 8000998:	73fb      	strb	r3, [r7, #15]

  * pGestureId = ucReadData;
 800099a:	7bfb      	ldrb	r3, [r7, #15]
 800099c:	b2db      	uxtb	r3, r3
 800099e:	461a      	mov	r2, r3
 80009a0:	683b      	ldr	r3, [r7, #0]
 80009a2:	601a      	str	r2, [r3, #0]
}
 80009a4:	bf00      	nop
 80009a6:	3710      	adds	r7, #16
 80009a8:	46bd      	mov	sp, r7
 80009aa:	bd80      	pop	{r7, pc}

080009ac <ft5336_TS_GetTouchInfo>:
void ft5336_TS_GetTouchInfo(uint16_t   DeviceAddr,
                            uint32_t   touchIdx,
                            uint32_t * pWeight,
                            uint32_t * pArea,
                            uint32_t * pEvent)
{
 80009ac:	b580      	push	{r7, lr}
 80009ae:	b086      	sub	sp, #24
 80009b0:	af00      	add	r7, sp, #0
 80009b2:	60b9      	str	r1, [r7, #8]
 80009b4:	607a      	str	r2, [r7, #4]
 80009b6:	603b      	str	r3, [r7, #0]
 80009b8:	4603      	mov	r3, r0
 80009ba:	81fb      	strh	r3, [r7, #14]
  volatile uint8_t ucReadData = 0;
 80009bc:	2300      	movs	r3, #0
 80009be:	753b      	strb	r3, [r7, #20]
  uint8_t regAddressXHigh = 0;
 80009c0:	2300      	movs	r3, #0
 80009c2:	75fb      	strb	r3, [r7, #23]
  uint8_t regAddressPWeight = 0;
 80009c4:	2300      	movs	r3, #0
 80009c6:	75bb      	strb	r3, [r7, #22]
  uint8_t regAddressPMisc = 0;
 80009c8:	2300      	movs	r3, #0
 80009ca:	757b      	strb	r3, [r7, #21]

  if(touchIdx < ft5336_handle.currActiveTouchNb)
 80009cc:	4b4d      	ldr	r3, [pc, #308]	; (8000b04 <ft5336_TS_GetTouchInfo+0x158>)
 80009ce:	785b      	ldrb	r3, [r3, #1]
 80009d0:	461a      	mov	r2, r3
 80009d2:	68bb      	ldr	r3, [r7, #8]
 80009d4:	4293      	cmp	r3, r2
 80009d6:	f080 8090 	bcs.w	8000afa <ft5336_TS_GetTouchInfo+0x14e>
  {
    switch(touchIdx)
 80009da:	68bb      	ldr	r3, [r7, #8]
 80009dc:	2b09      	cmp	r3, #9
 80009de:	d85d      	bhi.n	8000a9c <ft5336_TS_GetTouchInfo+0xf0>
 80009e0:	a201      	add	r2, pc, #4	; (adr r2, 80009e8 <ft5336_TS_GetTouchInfo+0x3c>)
 80009e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80009e6:	bf00      	nop
 80009e8:	08000a11 	.word	0x08000a11
 80009ec:	08000a1f 	.word	0x08000a1f
 80009f0:	08000a2d 	.word	0x08000a2d
 80009f4:	08000a3b 	.word	0x08000a3b
 80009f8:	08000a49 	.word	0x08000a49
 80009fc:	08000a57 	.word	0x08000a57
 8000a00:	08000a65 	.word	0x08000a65
 8000a04:	08000a73 	.word	0x08000a73
 8000a08:	08000a81 	.word	0x08000a81
 8000a0c:	08000a8f 	.word	0x08000a8f
    {
    case 0 :
      regAddressXHigh   = FT5336_P1_XH_REG;
 8000a10:	2303      	movs	r3, #3
 8000a12:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P1_WEIGHT_REG;
 8000a14:	2307      	movs	r3, #7
 8000a16:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P1_MISC_REG;
 8000a18:	2308      	movs	r3, #8
 8000a1a:	757b      	strb	r3, [r7, #21]
      break;
 8000a1c:	e03f      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 1 :
      regAddressXHigh   = FT5336_P2_XH_REG;
 8000a1e:	2309      	movs	r3, #9
 8000a20:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P2_WEIGHT_REG;
 8000a22:	230d      	movs	r3, #13
 8000a24:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P2_MISC_REG;
 8000a26:	230e      	movs	r3, #14
 8000a28:	757b      	strb	r3, [r7, #21]
      break;
 8000a2a:	e038      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 2 :
      regAddressXHigh   = FT5336_P3_XH_REG;
 8000a2c:	230f      	movs	r3, #15
 8000a2e:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P3_WEIGHT_REG;
 8000a30:	2313      	movs	r3, #19
 8000a32:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P3_MISC_REG;
 8000a34:	2314      	movs	r3, #20
 8000a36:	757b      	strb	r3, [r7, #21]
      break;
 8000a38:	e031      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 3 :
      regAddressXHigh   = FT5336_P4_XH_REG;
 8000a3a:	2315      	movs	r3, #21
 8000a3c:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P4_WEIGHT_REG;
 8000a3e:	2319      	movs	r3, #25
 8000a40:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P4_MISC_REG;
 8000a42:	231a      	movs	r3, #26
 8000a44:	757b      	strb	r3, [r7, #21]
      break;
 8000a46:	e02a      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 4 :
      regAddressXHigh   = FT5336_P5_XH_REG;
 8000a48:	231b      	movs	r3, #27
 8000a4a:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P5_WEIGHT_REG;
 8000a4c:	231f      	movs	r3, #31
 8000a4e:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P5_MISC_REG;
 8000a50:	2320      	movs	r3, #32
 8000a52:	757b      	strb	r3, [r7, #21]
      break;
 8000a54:	e023      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 5 :
      regAddressXHigh   = FT5336_P6_XH_REG;
 8000a56:	2321      	movs	r3, #33	; 0x21
 8000a58:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P6_WEIGHT_REG;
 8000a5a:	2325      	movs	r3, #37	; 0x25
 8000a5c:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P6_MISC_REG;
 8000a5e:	2326      	movs	r3, #38	; 0x26
 8000a60:	757b      	strb	r3, [r7, #21]
      break;
 8000a62:	e01c      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 6 :
      regAddressXHigh   = FT5336_P7_XH_REG;
 8000a64:	2327      	movs	r3, #39	; 0x27
 8000a66:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P7_WEIGHT_REG;
 8000a68:	232b      	movs	r3, #43	; 0x2b
 8000a6a:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P7_MISC_REG;
 8000a6c:	232c      	movs	r3, #44	; 0x2c
 8000a6e:	757b      	strb	r3, [r7, #21]
      break;
 8000a70:	e015      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 7 :
      regAddressXHigh   = FT5336_P8_XH_REG;
 8000a72:	232d      	movs	r3, #45	; 0x2d
 8000a74:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P8_WEIGHT_REG;
 8000a76:	2331      	movs	r3, #49	; 0x31
 8000a78:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P8_MISC_REG;
 8000a7a:	2332      	movs	r3, #50	; 0x32
 8000a7c:	757b      	strb	r3, [r7, #21]
      break;
 8000a7e:	e00e      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 8 :
      regAddressXHigh   = FT5336_P9_XH_REG;
 8000a80:	2333      	movs	r3, #51	; 0x33
 8000a82:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P9_WEIGHT_REG;
 8000a84:	2337      	movs	r3, #55	; 0x37
 8000a86:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P9_MISC_REG;
 8000a88:	2338      	movs	r3, #56	; 0x38
 8000a8a:	757b      	strb	r3, [r7, #21]
      break;
 8000a8c:	e007      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 9 :
      regAddressXHigh   = FT5336_P10_XH_REG;
 8000a8e:	2339      	movs	r3, #57	; 0x39
 8000a90:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P10_WEIGHT_REG;
 8000a92:	233d      	movs	r3, #61	; 0x3d
 8000a94:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P10_MISC_REG;
 8000a96:	233e      	movs	r3, #62	; 0x3e
 8000a98:	757b      	strb	r3, [r7, #21]
      break;
 8000a9a:	e000      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    default :
      break;
 8000a9c:	bf00      	nop

    } /* end switch(touchIdx) */

    /* Read Event Id of touch index */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8000a9e:	89fb      	ldrh	r3, [r7, #14]
 8000aa0:	b2db      	uxtb	r3, r3
 8000aa2:	7dfa      	ldrb	r2, [r7, #23]
 8000aa4:	4611      	mov	r1, r2
 8000aa6:	4618      	mov	r0, r3
 8000aa8:	f003 f952 	bl	8003d50 <TS_IO_Read>
 8000aac:	4603      	mov	r3, r0
 8000aae:	753b      	strb	r3, [r7, #20]
    * pEvent = (ucReadData & FT5336_TOUCH_EVT_FLAG_MASK) >> FT5336_TOUCH_EVT_FLAG_SHIFT;
 8000ab0:	7d3b      	ldrb	r3, [r7, #20]
 8000ab2:	b2db      	uxtb	r3, r3
 8000ab4:	119b      	asrs	r3, r3, #6
 8000ab6:	f003 0203 	and.w	r2, r3, #3
 8000aba:	6a3b      	ldr	r3, [r7, #32]
 8000abc:	601a      	str	r2, [r3, #0]

    /* Read weight of touch index */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPWeight);
 8000abe:	89fb      	ldrh	r3, [r7, #14]
 8000ac0:	b2db      	uxtb	r3, r3
 8000ac2:	7dba      	ldrb	r2, [r7, #22]
 8000ac4:	4611      	mov	r1, r2
 8000ac6:	4618      	mov	r0, r3
 8000ac8:	f003 f942 	bl	8003d50 <TS_IO_Read>
 8000acc:	4603      	mov	r3, r0
 8000ace:	753b      	strb	r3, [r7, #20]
    * pWeight = (ucReadData & FT5336_TOUCH_WEIGHT_MASK) >> FT5336_TOUCH_WEIGHT_SHIFT;
 8000ad0:	7d3b      	ldrb	r3, [r7, #20]
 8000ad2:	b2db      	uxtb	r3, r3
 8000ad4:	461a      	mov	r2, r3
 8000ad6:	687b      	ldr	r3, [r7, #4]
 8000ad8:	601a      	str	r2, [r3, #0]

    /* Read area of touch index */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPMisc);
 8000ada:	89fb      	ldrh	r3, [r7, #14]
 8000adc:	b2db      	uxtb	r3, r3
 8000ade:	7d7a      	ldrb	r2, [r7, #21]
 8000ae0:	4611      	mov	r1, r2
 8000ae2:	4618      	mov	r0, r3
 8000ae4:	f003 f934 	bl	8003d50 <TS_IO_Read>
 8000ae8:	4603      	mov	r3, r0
 8000aea:	753b      	strb	r3, [r7, #20]
    * pArea = (ucReadData & FT5336_TOUCH_AREA_MASK) >> FT5336_TOUCH_AREA_SHIFT;
 8000aec:	7d3b      	ldrb	r3, [r7, #20]
 8000aee:	b2db      	uxtb	r3, r3
 8000af0:	111b      	asrs	r3, r3, #4
 8000af2:	f003 0204 	and.w	r2, r3, #4
 8000af6:	683b      	ldr	r3, [r7, #0]
 8000af8:	601a      	str	r2, [r3, #0]

  } /* of if(touchIdx < ft5336_handle.currActiveTouchNb) */
}
 8000afa:	bf00      	nop
 8000afc:	3718      	adds	r7, #24
 8000afe:	46bd      	mov	sp, r7
 8000b00:	bd80      	pop	{r7, pc}
 8000b02:	bf00      	nop
 8000b04:	2000169c 	.word	0x2000169c

08000b08 <ft5336_Get_I2C_InitializedStatus>:
  * @brief  Return the status of I2C was initialized or not.
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
 8000b08:	b480      	push	{r7}
 8000b0a:	af00      	add	r7, sp, #0
  return(ft5336_handle.i2cInitialized);
 8000b0c:	4b03      	ldr	r3, [pc, #12]	; (8000b1c <ft5336_Get_I2C_InitializedStatus+0x14>)
 8000b0e:	781b      	ldrb	r3, [r3, #0]
}
 8000b10:	4618      	mov	r0, r3
 8000b12:	46bd      	mov	sp, r7
 8000b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b18:	4770      	bx	lr
 8000b1a:	bf00      	nop
 8000b1c:	2000169c 	.word	0x2000169c

08000b20 <ft5336_I2C_InitializeIfRequired>:
  * @brief  I2C initialize if needed.
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
 8000b20:	b580      	push	{r7, lr}
 8000b22:	af00      	add	r7, sp, #0
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8000b24:	f7ff fff0 	bl	8000b08 <ft5336_Get_I2C_InitializedStatus>
 8000b28:	4603      	mov	r3, r0
 8000b2a:	2b00      	cmp	r3, #0
 8000b2c:	d104      	bne.n	8000b38 <ft5336_I2C_InitializeIfRequired+0x18>
  {
    /* Initialize TS IO BUS layer (I2C) */
    TS_IO_Init();
 8000b2e:	f003 f8eb 	bl	8003d08 <TS_IO_Init>

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8000b32:	4b02      	ldr	r3, [pc, #8]	; (8000b3c <ft5336_I2C_InitializeIfRequired+0x1c>)
 8000b34:	2201      	movs	r2, #1
 8000b36:	701a      	strb	r2, [r3, #0]
  }
}
 8000b38:	bf00      	nop
 8000b3a:	bd80      	pop	{r7, pc}
 8000b3c:	2000169c 	.word	0x2000169c

08000b40 <ft5336_TS_Configure>:
  * @brief  Basic static configuration of TouchScreen
  * @param  DeviceAddr: FT5336 Device address for communication on I2C Bus.
  * @retval Status FT5336_STATUS_OK or FT5336_STATUS_NOT_OK.
  */
static uint32_t ft5336_TS_Configure(uint16_t DeviceAddr)
{
 8000b40:	b480      	push	{r7}
 8000b42:	b085      	sub	sp, #20
 8000b44:	af00      	add	r7, sp, #0
 8000b46:	4603      	mov	r3, r0
 8000b48:	80fb      	strh	r3, [r7, #6]
  uint32_t status = FT5336_STATUS_OK;
 8000b4a:	2300      	movs	r3, #0
 8000b4c:	60fb      	str	r3, [r7, #12]

  /* Nothing special to be done for FT5336 */

  return(status);
 8000b4e:	68fb      	ldr	r3, [r7, #12]
}
 8000b50:	4618      	mov	r0, r3
 8000b52:	3714      	adds	r7, #20
 8000b54:	46bd      	mov	sp, r7
 8000b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b5a:	4770      	bx	lr

08000b5c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000b5c:	b5b0      	push	{r4, r5, r7, lr}
 8000b5e:	b0b6      	sub	sp, #216	; 0xd8
 8000b60:	af02      	add	r7, sp, #8
  /* USER CODE BEGIN 1 */
	char text[50]={};
 8000b62:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000b66:	2232      	movs	r2, #50	; 0x32
 8000b68:	2100      	movs	r1, #0
 8000b6a:	4618      	mov	r0, r3
 8000b6c:	f00e fc8d 	bl	800f48a <memset>
	static TS_StateTypeDef  TS_State;
	uint32_t potl,potr,joystick_h, joystick_v;
	ADC_ChannelConfTypeDef sConfig = {0};
 8000b70:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000b74:	2200      	movs	r2, #0
 8000b76:	601a      	str	r2, [r3, #0]
 8000b78:	605a      	str	r2, [r3, #4]
 8000b7a:	609a      	str	r2, [r3, #8]
 8000b7c:	60da      	str	r2, [r3, #12]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 8000b7e:	2301      	movs	r3, #1
 8000b80:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000b84:	2300      	movs	r3, #0
 8000b86:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000b8a:	f005 fbf6 	bl	800637a <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000b8e:	f000 f999 	bl	8000ec4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000b92:	f001 f833 	bl	8001bfc <MX_GPIO_Init>
  MX_ADC3_Init();
 8000b96:	f000 fa97 	bl	80010c8 <MX_ADC3_Init>
  MX_I2C1_Init();
 8000b9a:	f000 fb43 	bl	8001224 <MX_I2C1_Init>
  MX_I2C3_Init();
 8000b9e:	f000 fb81 	bl	80012a4 <MX_I2C3_Init>
  MX_LTDC_Init();
 8000ba2:	f000 fbbf 	bl	8001324 <MX_LTDC_Init>
  MX_RTC_Init();
 8000ba6:	f000 fc3f 	bl	8001428 <MX_RTC_Init>
  MX_SPI2_Init();
 8000baa:	f000 fce3 	bl	8001574 <MX_SPI2_Init>
  MX_TIM1_Init();
 8000bae:	f000 fd1f 	bl	80015f0 <MX_TIM1_Init>
  MX_TIM2_Init();
 8000bb2:	f000 fd71 	bl	8001698 <MX_TIM2_Init>
  MX_TIM3_Init();
 8000bb6:	f000 fdbd 	bl	8001734 <MX_TIM3_Init>
  MX_TIM5_Init();
 8000bba:	f000 fe49 	bl	8001850 <MX_TIM5_Init>
  MX_TIM8_Init();
 8000bbe:	f000 fe95 	bl	80018ec <MX_TIM8_Init>
  MX_USART1_UART_Init();
 8000bc2:	f000 ff6d 	bl	8001aa0 <MX_USART1_UART_Init>
  MX_USART6_UART_Init();
 8000bc6:	f000 ff9b 	bl	8001b00 <MX_USART6_UART_Init>
  MX_ADC1_Init();
 8000bca:	f000 fa2b 	bl	8001024 <MX_ADC1_Init>
  MX_DAC_Init();
 8000bce:	f000 facd 	bl	800116c <MX_DAC_Init>
  MX_UART7_Init();
 8000bd2:	f000 ff35 	bl	8001a40 <MX_UART7_Init>
  MX_FMC_Init();
 8000bd6:	f000 ffc3 	bl	8001b60 <MX_FMC_Init>
  MX_DMA2D_Init();
 8000bda:	f000 faf1 	bl	80011c0 <MX_DMA2D_Init>
  /* USER CODE BEGIN 2 */
  BSP_LCD_Init();
 8000bde:	f003 f8e1 	bl	8003da4 <BSP_LCD_Init>
  BSP_LCD_LayerDefaultInit(0, LCD_FB_START_ADDRESS);
 8000be2:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8000be6:	2000      	movs	r0, #0
 8000be8:	f003 f974 	bl	8003ed4 <BSP_LCD_LayerDefaultInit>
  BSP_LCD_LayerDefaultInit(1, LCD_FB_START_ADDRESS+ BSP_LCD_GetXSize()*BSP_LCD_GetYSize()*4);
 8000bec:	f003 f94a 	bl	8003e84 <BSP_LCD_GetXSize>
 8000bf0:	4604      	mov	r4, r0
 8000bf2:	f003 f95b 	bl	8003eac <BSP_LCD_GetYSize>
 8000bf6:	4603      	mov	r3, r0
 8000bf8:	fb03 f304 	mul.w	r3, r3, r4
 8000bfc:	f103 5340 	add.w	r3, r3, #805306368	; 0x30000000
 8000c00:	009b      	lsls	r3, r3, #2
 8000c02:	4619      	mov	r1, r3
 8000c04:	2001      	movs	r0, #1
 8000c06:	f003 f965 	bl	8003ed4 <BSP_LCD_LayerDefaultInit>
  BSP_LCD_DisplayOn();
 8000c0a:	f003 ff35 	bl	8004a78 <BSP_LCD_DisplayOn>
  BSP_LCD_SetFont(&Font12);
 8000c0e:	489a      	ldr	r0, [pc, #616]	; (8000e78 <main+0x31c>)
 8000c10:	f003 fa02 	bl	8004018 <BSP_LCD_SetFont>
  BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 8000c14:	f04f 30ff 	mov.w	r0, #4294967295
 8000c18:	f003 f9e4 	bl	8003fe4 <BSP_LCD_SetBackColor>
  BSP_LCD_SelectLayer(1);
 8000c1c:	2001      	movs	r0, #1
 8000c1e:	f003 f9b9 	bl	8003f94 <BSP_LCD_SelectLayer>
  BSP_LCD_Clear(LCD_COLOR_TRANSPARENT);
 8000c22:	2000      	movs	r0, #0
 8000c24:	f003 face 	bl	80041c4 <BSP_LCD_Clear>
  BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8000c28:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8000c2c:	f003 f9c2 	bl	8003fb4 <BSP_LCD_SetTextColor>
  BSP_LCD_FillRect(0, 245, 480, 5);
 8000c30:	2305      	movs	r3, #5
 8000c32:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8000c36:	21f5      	movs	r1, #245	; 0xf5
 8000c38:	2000      	movs	r0, #0
 8000c3a:	f003 fe03 	bl	8004844 <BSP_LCD_FillRect>
  BSP_LCD_FillRect(480-5-taille_menu, 0, 5, 245);
 8000c3e:	23f5      	movs	r3, #245	; 0xf5
 8000c40:	2205      	movs	r2, #5
 8000c42:	2100      	movs	r1, #0
 8000c44:	f240 10a9 	movw	r0, #425	; 0x1a9
 8000c48:	f003 fdfc 	bl	8004844 <BSP_LCD_FillRect>
  BSP_LCD_SelectLayer(0);
 8000c4c:	2000      	movs	r0, #0
 8000c4e:	f003 f9a1 	bl	8003f94 <BSP_LCD_SelectLayer>
  BSP_LCD_Clear(LCD_COLOR_WHITE);
 8000c52:	f04f 30ff 	mov.w	r0, #4294967295
 8000c56:	f003 fab5 	bl	80041c4 <BSP_LCD_Clear>
  BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8000c5a:	4888      	ldr	r0, [pc, #544]	; (8000e7c <main+0x320>)
 8000c5c:	f003 f9aa 	bl	8003fb4 <BSP_LCD_SetTextColor>

  BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 8000c60:	f003 f910 	bl	8003e84 <BSP_LCD_GetXSize>
 8000c64:	4603      	mov	r3, r0
 8000c66:	b29c      	uxth	r4, r3
 8000c68:	f003 f920 	bl	8003eac <BSP_LCD_GetYSize>
 8000c6c:	4603      	mov	r3, r0
 8000c6e:	b29b      	uxth	r3, r3
 8000c70:	4619      	mov	r1, r3
 8000c72:	4620      	mov	r0, r4
 8000c74:	f004 face 	bl	8005214 <BSP_TS_Init>
  /* USER CODE END 2 */

  /* Create the mutex(es) */
  /* definition and creation of myMutexLCD */
  osMutexDef(myMutexLCD);
 8000c78:	2300      	movs	r3, #0
 8000c7a:	677b      	str	r3, [r7, #116]	; 0x74
 8000c7c:	2300      	movs	r3, #0
 8000c7e:	67bb      	str	r3, [r7, #120]	; 0x78
  myMutexLCDHandle = osMutexCreate(osMutex(myMutexLCD));
 8000c80:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8000c84:	4618      	mov	r0, r3
 8000c86:	f00c f9b6 	bl	800cff6 <osMutexCreate>
 8000c8a:	4602      	mov	r2, r0
 8000c8c:	4b7c      	ldr	r3, [pc, #496]	; (8000e80 <main+0x324>)
 8000c8e:	601a      	str	r2, [r3, #0]
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityIdle, 0, 128);
 8000c90:	4b7c      	ldr	r3, [pc, #496]	; (8000e84 <main+0x328>)
 8000c92:	f107 0458 	add.w	r4, r7, #88	; 0x58
 8000c96:	461d      	mov	r5, r3
 8000c98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000c9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000c9c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000ca0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8000ca4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000ca8:	2100      	movs	r1, #0
 8000caa:	4618      	mov	r0, r3
 8000cac:	f00c f943 	bl	800cf36 <osThreadCreate>
 8000cb0:	4602      	mov	r2, r0
 8000cb2:	4b75      	ldr	r3, [pc, #468]	; (8000e88 <main+0x32c>)
 8000cb4:	601a      	str	r2, [r3, #0]

  /* definition and creation of Mode */
  osThreadDef(Mode, StartMode, osPriorityAboveNormal, 0, 4096);
 8000cb6:	4b75      	ldr	r3, [pc, #468]	; (8000e8c <main+0x330>)
 8000cb8:	f107 043c 	add.w	r4, r7, #60	; 0x3c
 8000cbc:	461d      	mov	r5, r3
 8000cbe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000cc0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000cc2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000cc6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  ModeHandle = osThreadCreate(osThread(Mode), NULL);
 8000cca:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000cce:	2100      	movs	r1, #0
 8000cd0:	4618      	mov	r0, r3
 8000cd2:	f00c f930 	bl	800cf36 <osThreadCreate>
 8000cd6:	4602      	mov	r2, r0
 8000cd8:	4b6d      	ldr	r3, [pc, #436]	; (8000e90 <main+0x334>)
 8000cda:	601a      	str	r2, [r3, #0]

  /* definition and creation of Peindre */
  osThreadDef(Peindre, StartPeindre, osPriorityLow, 0, 1024);
 8000cdc:	4b6d      	ldr	r3, [pc, #436]	; (8000e94 <main+0x338>)
 8000cde:	f107 0420 	add.w	r4, r7, #32
 8000ce2:	461d      	mov	r5, r3
 8000ce4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000ce6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000ce8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000cec:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  PeindreHandle = osThreadCreate(osThread(Peindre), NULL);
 8000cf0:	f107 0320 	add.w	r3, r7, #32
 8000cf4:	2100      	movs	r1, #0
 8000cf6:	4618      	mov	r0, r3
 8000cf8:	f00c f91d 	bl	800cf36 <osThreadCreate>
 8000cfc:	4602      	mov	r2, r0
 8000cfe:	4b66      	ldr	r3, [pc, #408]	; (8000e98 <main+0x33c>)
 8000d00:	601a      	str	r2, [r3, #0]

  /* definition and creation of TaskEtat */
  osThreadDef(TaskEtat, StartTaskEtat, osPriorityHigh, 0, 1024);
 8000d02:	4b66      	ldr	r3, [pc, #408]	; (8000e9c <main+0x340>)
 8000d04:	1d3c      	adds	r4, r7, #4
 8000d06:	461d      	mov	r5, r3
 8000d08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000d0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000d0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000d10:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  TaskEtatHandle = osThreadCreate(osThread(TaskEtat), NULL);
 8000d14:	1d3b      	adds	r3, r7, #4
 8000d16:	2100      	movs	r1, #0
 8000d18:	4618      	mov	r0, r3
 8000d1a:	f00c f90c 	bl	800cf36 <osThreadCreate>
 8000d1e:	4602      	mov	r2, r0
 8000d20:	4b5f      	ldr	r3, [pc, #380]	; (8000ea0 <main+0x344>)
 8000d22:	601a      	str	r2, [r3, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 8000d24:	f00c f900 	bl	800cf28 <osKernelStart>
  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  HAL_GPIO_WritePin(LED13_GPIO_Port,LED13_Pin,HAL_GPIO_ReadPin(BP1_GPIO_Port,BP1_Pin));
 8000d28:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000d2c:	485d      	ldr	r0, [pc, #372]	; (8000ea4 <main+0x348>)
 8000d2e:	f007 f81b 	bl	8007d68 <HAL_GPIO_ReadPin>
 8000d32:	4603      	mov	r3, r0
 8000d34:	461a      	mov	r2, r3
 8000d36:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000d3a:	485b      	ldr	r0, [pc, #364]	; (8000ea8 <main+0x34c>)
 8000d3c:	f007 f82c 	bl	8007d98 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(LED14_GPIO_Port,LED14_Pin,HAL_GPIO_ReadPin(BP2_GPIO_Port,BP2_Pin));
 8000d40:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000d44:	4857      	ldr	r0, [pc, #348]	; (8000ea4 <main+0x348>)
 8000d46:	f007 f80f 	bl	8007d68 <HAL_GPIO_ReadPin>
 8000d4a:	4603      	mov	r3, r0
 8000d4c:	461a      	mov	r2, r3
 8000d4e:	2120      	movs	r1, #32
 8000d50:	4856      	ldr	r0, [pc, #344]	; (8000eac <main+0x350>)
 8000d52:	f007 f821 	bl	8007d98 <HAL_GPIO_WritePin>
	  sprintf(text,"BP1 : %d",HAL_GPIO_ReadPin(BP1_GPIO_Port,BP1_Pin));
 8000d56:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000d5a:	4852      	ldr	r0, [pc, #328]	; (8000ea4 <main+0x348>)
 8000d5c:	f007 f804 	bl	8007d68 <HAL_GPIO_ReadPin>
 8000d60:	4603      	mov	r3, r0
 8000d62:	461a      	mov	r2, r3
 8000d64:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000d68:	4951      	ldr	r1, [pc, #324]	; (8000eb0 <main+0x354>)
 8000d6a:	4618      	mov	r0, r3
 8000d6c:	f00e fb96 	bl	800f49c <siprintf>
	  BSP_LCD_DisplayStringAtLine(5,(uint8_t*) text);
 8000d70:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000d74:	4619      	mov	r1, r3
 8000d76:	2005      	movs	r0, #5
 8000d78:	f003 fb54 	bl	8004424 <BSP_LCD_DisplayStringAtLine>

	  sConfig.Channel = ADC_CHANNEL_6;
 8000d7c:	2306      	movs	r3, #6
 8000d7e:	67fb      	str	r3, [r7, #124]	; 0x7c
	  HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8000d80:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000d84:	4619      	mov	r1, r3
 8000d86:	484b      	ldr	r0, [pc, #300]	; (8000eb4 <main+0x358>)
 8000d88:	f005 fcdc 	bl	8006744 <HAL_ADC_ConfigChannel>
	  HAL_ADC_Start(&hadc3);
 8000d8c:	4849      	ldr	r0, [pc, #292]	; (8000eb4 <main+0x358>)
 8000d8e:	f005 fb87 	bl	80064a0 <HAL_ADC_Start>
	  while(HAL_ADC_PollForConversion(&hadc3, 100)!=HAL_OK);
 8000d92:	bf00      	nop
 8000d94:	2164      	movs	r1, #100	; 0x64
 8000d96:	4847      	ldr	r0, [pc, #284]	; (8000eb4 <main+0x358>)
 8000d98:	f005 fc42 	bl	8006620 <HAL_ADC_PollForConversion>
 8000d9c:	4603      	mov	r3, r0
 8000d9e:	2b00      	cmp	r3, #0
 8000da0:	d1f8      	bne.n	8000d94 <main+0x238>
	  potr = HAL_ADC_GetValue(&hadc3);
 8000da2:	4844      	ldr	r0, [pc, #272]	; (8000eb4 <main+0x358>)
 8000da4:	f005 fcc0 	bl	8006728 <HAL_ADC_GetValue>
 8000da8:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc

	  sConfig.Channel = ADC_CHANNEL_7;
 8000dac:	2307      	movs	r3, #7
 8000dae:	67fb      	str	r3, [r7, #124]	; 0x7c
	  HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8000db0:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000db4:	4619      	mov	r1, r3
 8000db6:	483f      	ldr	r0, [pc, #252]	; (8000eb4 <main+0x358>)
 8000db8:	f005 fcc4 	bl	8006744 <HAL_ADC_ConfigChannel>
	  HAL_ADC_Start(&hadc3);
 8000dbc:	483d      	ldr	r0, [pc, #244]	; (8000eb4 <main+0x358>)
 8000dbe:	f005 fb6f 	bl	80064a0 <HAL_ADC_Start>
	  while(HAL_ADC_PollForConversion(&hadc3, 100)!=HAL_OK);
 8000dc2:	bf00      	nop
 8000dc4:	2164      	movs	r1, #100	; 0x64
 8000dc6:	483b      	ldr	r0, [pc, #236]	; (8000eb4 <main+0x358>)
 8000dc8:	f005 fc2a 	bl	8006620 <HAL_ADC_PollForConversion>
 8000dcc:	4603      	mov	r3, r0
 8000dce:	2b00      	cmp	r3, #0
 8000dd0:	d1f8      	bne.n	8000dc4 <main+0x268>
	  potl = HAL_ADC_GetValue(&hadc3);
 8000dd2:	4838      	ldr	r0, [pc, #224]	; (8000eb4 <main+0x358>)
 8000dd4:	f005 fca8 	bl	8006728 <HAL_ADC_GetValue>
 8000dd8:	f8c7 00c8 	str.w	r0, [r7, #200]	; 0xc8

	  sConfig.Channel = ADC_CHANNEL_8;
 8000ddc:	2308      	movs	r3, #8
 8000dde:	67fb      	str	r3, [r7, #124]	; 0x7c
	  HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8000de0:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000de4:	4619      	mov	r1, r3
 8000de6:	4833      	ldr	r0, [pc, #204]	; (8000eb4 <main+0x358>)
 8000de8:	f005 fcac 	bl	8006744 <HAL_ADC_ConfigChannel>
	  HAL_ADC_Start(&hadc3);
 8000dec:	4831      	ldr	r0, [pc, #196]	; (8000eb4 <main+0x358>)
 8000dee:	f005 fb57 	bl	80064a0 <HAL_ADC_Start>
	  while(HAL_ADC_PollForConversion(&hadc3, 100)!=HAL_OK);
 8000df2:	bf00      	nop
 8000df4:	2164      	movs	r1, #100	; 0x64
 8000df6:	482f      	ldr	r0, [pc, #188]	; (8000eb4 <main+0x358>)
 8000df8:	f005 fc12 	bl	8006620 <HAL_ADC_PollForConversion>
 8000dfc:	4603      	mov	r3, r0
 8000dfe:	2b00      	cmp	r3, #0
 8000e00:	d1f8      	bne.n	8000df4 <main+0x298>
	  joystick_v = HAL_ADC_GetValue(&hadc3);
 8000e02:	482c      	ldr	r0, [pc, #176]	; (8000eb4 <main+0x358>)
 8000e04:	f005 fc90 	bl	8006728 <HAL_ADC_GetValue>
 8000e08:	f8c7 00c4 	str.w	r0, [r7, #196]	; 0xc4

	  HAL_ADC_Start(&hadc1);
 8000e0c:	482a      	ldr	r0, [pc, #168]	; (8000eb8 <main+0x35c>)
 8000e0e:	f005 fb47 	bl	80064a0 <HAL_ADC_Start>
	  while(HAL_ADC_PollForConversion(&hadc1, 100)!=HAL_OK);
 8000e12:	bf00      	nop
 8000e14:	2164      	movs	r1, #100	; 0x64
 8000e16:	4828      	ldr	r0, [pc, #160]	; (8000eb8 <main+0x35c>)
 8000e18:	f005 fc02 	bl	8006620 <HAL_ADC_PollForConversion>
 8000e1c:	4603      	mov	r3, r0
 8000e1e:	2b00      	cmp	r3, #0
 8000e20:	d1f8      	bne.n	8000e14 <main+0x2b8>
	  joystick_h = HAL_ADC_GetValue(&hadc1);
 8000e22:	4825      	ldr	r0, [pc, #148]	; (8000eb8 <main+0x35c>)
 8000e24:	f005 fc80 	bl	8006728 <HAL_ADC_GetValue>
 8000e28:	f8c7 00c0 	str.w	r0, [r7, #192]	; 0xc0

	  sprintf(text,"POTL : %4u POTR : %4u joy_v : %4u joy_h : %4u",(uint)potl,(uint)potr,(uint)joystick_v,(uint)joystick_h);
 8000e2c:	f107 008c 	add.w	r0, r7, #140	; 0x8c
 8000e30:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8000e34:	9301      	str	r3, [sp, #4]
 8000e36:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8000e3a:	9300      	str	r3, [sp, #0]
 8000e3c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8000e40:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8000e44:	491d      	ldr	r1, [pc, #116]	; (8000ebc <main+0x360>)
 8000e46:	f00e fb29 	bl	800f49c <siprintf>
	  BSP_LCD_DisplayStringAtLine(9,(uint8_t*) text);
 8000e4a:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000e4e:	4619      	mov	r1, r3
 8000e50:	2009      	movs	r0, #9
 8000e52:	f003 fae7 	bl	8004424 <BSP_LCD_DisplayStringAtLine>

	  BSP_TS_GetState(&TS_State);
 8000e56:	481a      	ldr	r0, [pc, #104]	; (8000ec0 <main+0x364>)
 8000e58:	f004 fa1c 	bl	8005294 <BSP_TS_GetState>
	  if(TS_State.touchDetected){
 8000e5c:	4b18      	ldr	r3, [pc, #96]	; (8000ec0 <main+0x364>)
 8000e5e:	781b      	ldrb	r3, [r3, #0]
 8000e60:	2b00      	cmp	r3, #0
 8000e62:	f43f af61 	beq.w	8000d28 <main+0x1cc>
		  BSP_LCD_FillCircle(TS_State.touchX[0],TS_State.touchY[0],4);
 8000e66:	4b16      	ldr	r3, [pc, #88]	; (8000ec0 <main+0x364>)
 8000e68:	8858      	ldrh	r0, [r3, #2]
 8000e6a:	4b15      	ldr	r3, [pc, #84]	; (8000ec0 <main+0x364>)
 8000e6c:	899b      	ldrh	r3, [r3, #12]
 8000e6e:	2204      	movs	r2, #4
 8000e70:	4619      	mov	r1, r3
 8000e72:	f003 fd61 	bl	8004938 <BSP_LCD_FillCircle>
	  HAL_GPIO_WritePin(LED13_GPIO_Port,LED13_Pin,HAL_GPIO_ReadPin(BP1_GPIO_Port,BP1_Pin));
 8000e76:	e757      	b.n	8000d28 <main+0x1cc>
 8000e78:	200013a8 	.word	0x200013a8
 8000e7c:	ffff0000 	.word	0xffff0000
 8000e80:	20009c34 	.word	0x20009c34
 8000e84:	0800fcf4 	.word	0x0800fcf4
 8000e88:	20009a70 	.word	0x20009a70
 8000e8c:	0800fd18 	.word	0x0800fd18
 8000e90:	2000a020 	.word	0x2000a020
 8000e94:	0800fd3c 	.word	0x0800fd3c
 8000e98:	20009ba4 	.word	0x20009ba4
 8000e9c:	0800fd64 	.word	0x0800fd64
 8000ea0:	20009f68 	.word	0x20009f68
 8000ea4:	40020000 	.word	0x40020000
 8000ea8:	40021c00 	.word	0x40021c00
 8000eac:	40021000 	.word	0x40021000
 8000eb0:	0800fcac 	.word	0x0800fcac
 8000eb4:	20009da8 	.word	0x20009da8
 8000eb8:	20009d60 	.word	0x20009d60
 8000ebc:	0800fcb8 	.word	0x0800fcb8
 8000ec0:	200016a4 	.word	0x200016a4

08000ec4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ec4:	b580      	push	{r7, lr}
 8000ec6:	b0b4      	sub	sp, #208	; 0xd0
 8000ec8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000eca:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8000ece:	2230      	movs	r2, #48	; 0x30
 8000ed0:	2100      	movs	r1, #0
 8000ed2:	4618      	mov	r0, r3
 8000ed4:	f00e fad9 	bl	800f48a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ed8:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000edc:	2200      	movs	r2, #0
 8000ede:	601a      	str	r2, [r3, #0]
 8000ee0:	605a      	str	r2, [r3, #4]
 8000ee2:	609a      	str	r2, [r3, #8]
 8000ee4:	60da      	str	r2, [r3, #12]
 8000ee6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ee8:	f107 0308 	add.w	r3, r7, #8
 8000eec:	2284      	movs	r2, #132	; 0x84
 8000eee:	2100      	movs	r1, #0
 8000ef0:	4618      	mov	r0, r3
 8000ef2:	f00e faca 	bl	800f48a <memset>

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 8000ef6:	f008 f8a9 	bl	800904c <HAL_PWR_EnableBkUpAccess>
  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000efa:	4b47      	ldr	r3, [pc, #284]	; (8001018 <SystemClock_Config+0x154>)
 8000efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000efe:	4a46      	ldr	r2, [pc, #280]	; (8001018 <SystemClock_Config+0x154>)
 8000f00:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000f04:	6413      	str	r3, [r2, #64]	; 0x40
 8000f06:	4b44      	ldr	r3, [pc, #272]	; (8001018 <SystemClock_Config+0x154>)
 8000f08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f0a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000f0e:	607b      	str	r3, [r7, #4]
 8000f10:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000f12:	4b42      	ldr	r3, [pc, #264]	; (800101c <SystemClock_Config+0x158>)
 8000f14:	681b      	ldr	r3, [r3, #0]
 8000f16:	4a41      	ldr	r2, [pc, #260]	; (800101c <SystemClock_Config+0x158>)
 8000f18:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000f1c:	6013      	str	r3, [r2, #0]
 8000f1e:	4b3f      	ldr	r3, [pc, #252]	; (800101c <SystemClock_Config+0x158>)
 8000f20:	681b      	ldr	r3, [r3, #0]
 8000f22:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000f26:	603b      	str	r3, [r7, #0]
 8000f28:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 8000f2a:	2309      	movs	r3, #9
 8000f2c:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000f30:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000f34:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8000f38:	2301      	movs	r3, #1
 8000f3a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000f3e:	2302      	movs	r3, #2
 8000f40:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000f44:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000f48:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 25;
 8000f4c:	2319      	movs	r3, #25
 8000f4e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 400;
 8000f52:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000f56:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000f5a:	2302      	movs	r3, #2
 8000f5c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 9;
 8000f60:	2309      	movs	r3, #9
 8000f62:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000f66:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8000f6a:	4618      	mov	r0, r3
 8000f6c:	f008 f8ce 	bl	800910c <HAL_RCC_OscConfig>
 8000f70:	4603      	mov	r3, r0
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	d001      	beq.n	8000f7a <SystemClock_Config+0xb6>
  {
    Error_Handler();
 8000f76:	f002 fd6d 	bl	8003a54 <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000f7a:	f008 f877 	bl	800906c <HAL_PWREx_EnableOverDrive>
 8000f7e:	4603      	mov	r3, r0
 8000f80:	2b00      	cmp	r3, #0
 8000f82:	d001      	beq.n	8000f88 <SystemClock_Config+0xc4>
  {
    Error_Handler();
 8000f84:	f002 fd66 	bl	8003a54 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000f88:	230f      	movs	r3, #15
 8000f8a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000f8e:	2302      	movs	r3, #2
 8000f90:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000f94:	2300      	movs	r3, #0
 8000f96:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000f9a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000f9e:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000fa2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000fa6:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 8000faa:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000fae:	2106      	movs	r1, #6
 8000fb0:	4618      	mov	r0, r3
 8000fb2:	f008 fb4f 	bl	8009654 <HAL_RCC_ClockConfig>
 8000fb6:	4603      	mov	r3, r0
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d001      	beq.n	8000fc0 <SystemClock_Config+0xfc>
  {
    Error_Handler();
 8000fbc:	f002 fd4a 	bl	8003a54 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC|RCC_PERIPHCLK_RTC
 8000fc0:	4b17      	ldr	r3, [pc, #92]	; (8001020 <SystemClock_Config+0x15c>)
 8000fc2:	60bb      	str	r3, [r7, #8]
                              |RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART6
                              |RCC_PERIPHCLK_UART7|RCC_PERIPHCLK_I2C1
                              |RCC_PERIPHCLK_I2C3;
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000fc4:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8000fc8:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 8000fca:	2305      	movs	r3, #5
 8000fcc:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000fce:	2302      	movs	r3, #2
 8000fd0:	623b      	str	r3, [r7, #32]
  PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV8;
 8000fd2:	2303      	movs	r3, #3
 8000fd4:	62bb      	str	r3, [r7, #40]	; 0x28
  PeriphClkInitStruct.PLLSAIDivQ = 1;
 8000fd6:	2301      	movs	r3, #1
 8000fd8:	633b      	str	r3, [r7, #48]	; 0x30
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000fda:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8000fde:	637b      	str	r3, [r7, #52]	; 0x34
  PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 8000fe0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000fe4:	63bb      	str	r3, [r7, #56]	; 0x38
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8000fe6:	2300      	movs	r3, #0
 8000fe8:	64fb      	str	r3, [r7, #76]	; 0x4c
  PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 8000fea:	2300      	movs	r3, #0
 8000fec:	663b      	str	r3, [r7, #96]	; 0x60
  PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 8000fee:	2300      	movs	r3, #0
 8000ff0:	667b      	str	r3, [r7, #100]	; 0x64
  PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	66fb      	str	r3, [r7, #108]	; 0x6c
  PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	677b      	str	r3, [r7, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000ffa:	f107 0308 	add.w	r3, r7, #8
 8000ffe:	4618      	mov	r0, r3
 8001000:	f008 fd2c 	bl	8009a5c <HAL_RCCEx_PeriphCLKConfig>
 8001004:	4603      	mov	r3, r0
 8001006:	2b00      	cmp	r3, #0
 8001008:	d001      	beq.n	800100e <SystemClock_Config+0x14a>
  {
    Error_Handler();
 800100a:	f002 fd23 	bl	8003a54 <Error_Handler>
  }
}
 800100e:	bf00      	nop
 8001010:	37d0      	adds	r7, #208	; 0xd0
 8001012:	46bd      	mov	sp, r7
 8001014:	bd80      	pop	{r7, pc}
 8001016:	bf00      	nop
 8001018:	40023800 	.word	0x40023800
 800101c:	40007000 	.word	0x40007000
 8001020:	00015868 	.word	0x00015868

08001024 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001024:	b580      	push	{r7, lr}
 8001026:	b084      	sub	sp, #16
 8001028:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800102a:	463b      	mov	r3, r7
 800102c:	2200      	movs	r2, #0
 800102e:	601a      	str	r2, [r3, #0]
 8001030:	605a      	str	r2, [r3, #4]
 8001032:	609a      	str	r2, [r3, #8]
 8001034:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC1_Init 1 */

  /* USER CODE END ADC1_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8001036:	4b21      	ldr	r3, [pc, #132]	; (80010bc <MX_ADC1_Init+0x98>)
 8001038:	4a21      	ldr	r2, [pc, #132]	; (80010c0 <MX_ADC1_Init+0x9c>)
 800103a:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800103c:	4b1f      	ldr	r3, [pc, #124]	; (80010bc <MX_ADC1_Init+0x98>)
 800103e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8001042:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001044:	4b1d      	ldr	r3, [pc, #116]	; (80010bc <MX_ADC1_Init+0x98>)
 8001046:	2200      	movs	r2, #0
 8001048:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 800104a:	4b1c      	ldr	r3, [pc, #112]	; (80010bc <MX_ADC1_Init+0x98>)
 800104c:	2200      	movs	r2, #0
 800104e:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001050:	4b1a      	ldr	r3, [pc, #104]	; (80010bc <MX_ADC1_Init+0x98>)
 8001052:	2200      	movs	r2, #0
 8001054:	619a      	str	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001056:	4b19      	ldr	r3, [pc, #100]	; (80010bc <MX_ADC1_Init+0x98>)
 8001058:	2200      	movs	r2, #0
 800105a:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800105e:	4b17      	ldr	r3, [pc, #92]	; (80010bc <MX_ADC1_Init+0x98>)
 8001060:	2200      	movs	r2, #0
 8001062:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001064:	4b15      	ldr	r3, [pc, #84]	; (80010bc <MX_ADC1_Init+0x98>)
 8001066:	4a17      	ldr	r2, [pc, #92]	; (80010c4 <MX_ADC1_Init+0xa0>)
 8001068:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800106a:	4b14      	ldr	r3, [pc, #80]	; (80010bc <MX_ADC1_Init+0x98>)
 800106c:	2200      	movs	r2, #0
 800106e:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001070:	4b12      	ldr	r3, [pc, #72]	; (80010bc <MX_ADC1_Init+0x98>)
 8001072:	2201      	movs	r2, #1
 8001074:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001076:	4b11      	ldr	r3, [pc, #68]	; (80010bc <MX_ADC1_Init+0x98>)
 8001078:	2200      	movs	r2, #0
 800107a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800107e:	4b0f      	ldr	r3, [pc, #60]	; (80010bc <MX_ADC1_Init+0x98>)
 8001080:	2201      	movs	r2, #1
 8001082:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001084:	480d      	ldr	r0, [pc, #52]	; (80010bc <MX_ADC1_Init+0x98>)
 8001086:	f005 f9c7 	bl	8006418 <HAL_ADC_Init>
 800108a:	4603      	mov	r3, r0
 800108c:	2b00      	cmp	r3, #0
 800108e:	d001      	beq.n	8001094 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8001090:	f002 fce0 	bl	8003a54 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8001094:	2300      	movs	r3, #0
 8001096:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8001098:	2301      	movs	r3, #1
 800109a:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800109c:	2300      	movs	r3, #0
 800109e:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80010a0:	463b      	mov	r3, r7
 80010a2:	4619      	mov	r1, r3
 80010a4:	4805      	ldr	r0, [pc, #20]	; (80010bc <MX_ADC1_Init+0x98>)
 80010a6:	f005 fb4d 	bl	8006744 <HAL_ADC_ConfigChannel>
 80010aa:	4603      	mov	r3, r0
 80010ac:	2b00      	cmp	r3, #0
 80010ae:	d001      	beq.n	80010b4 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 80010b0:	f002 fcd0 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80010b4:	bf00      	nop
 80010b6:	3710      	adds	r7, #16
 80010b8:	46bd      	mov	sp, r7
 80010ba:	bd80      	pop	{r7, pc}
 80010bc:	20009d60 	.word	0x20009d60
 80010c0:	40012000 	.word	0x40012000
 80010c4:	0f000001 	.word	0x0f000001

080010c8 <MX_ADC3_Init>:
  * @brief ADC3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC3_Init(void)
{
 80010c8:	b580      	push	{r7, lr}
 80010ca:	b084      	sub	sp, #16
 80010cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80010ce:	463b      	mov	r3, r7
 80010d0:	2200      	movs	r2, #0
 80010d2:	601a      	str	r2, [r3, #0]
 80010d4:	605a      	str	r2, [r3, #4]
 80010d6:	609a      	str	r2, [r3, #8]
 80010d8:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC3_Init 1 */

  /* USER CODE END ADC3_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc3.Instance = ADC3;
 80010da:	4b21      	ldr	r3, [pc, #132]	; (8001160 <MX_ADC3_Init+0x98>)
 80010dc:	4a21      	ldr	r2, [pc, #132]	; (8001164 <MX_ADC3_Init+0x9c>)
 80010de:	601a      	str	r2, [r3, #0]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80010e0:	4b1f      	ldr	r3, [pc, #124]	; (8001160 <MX_ADC3_Init+0x98>)
 80010e2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80010e6:	605a      	str	r2, [r3, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 80010e8:	4b1d      	ldr	r3, [pc, #116]	; (8001160 <MX_ADC3_Init+0x98>)
 80010ea:	2200      	movs	r2, #0
 80010ec:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80010ee:	4b1c      	ldr	r3, [pc, #112]	; (8001160 <MX_ADC3_Init+0x98>)
 80010f0:	2200      	movs	r2, #0
 80010f2:	611a      	str	r2, [r3, #16]
  hadc3.Init.ContinuousConvMode = DISABLE;
 80010f4:	4b1a      	ldr	r3, [pc, #104]	; (8001160 <MX_ADC3_Init+0x98>)
 80010f6:	2200      	movs	r2, #0
 80010f8:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 80010fa:	4b19      	ldr	r3, [pc, #100]	; (8001160 <MX_ADC3_Init+0x98>)
 80010fc:	2200      	movs	r2, #0
 80010fe:	f883 2020 	strb.w	r2, [r3, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001102:	4b17      	ldr	r3, [pc, #92]	; (8001160 <MX_ADC3_Init+0x98>)
 8001104:	2200      	movs	r2, #0
 8001106:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001108:	4b15      	ldr	r3, [pc, #84]	; (8001160 <MX_ADC3_Init+0x98>)
 800110a:	4a17      	ldr	r2, [pc, #92]	; (8001168 <MX_ADC3_Init+0xa0>)
 800110c:	629a      	str	r2, [r3, #40]	; 0x28
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800110e:	4b14      	ldr	r3, [pc, #80]	; (8001160 <MX_ADC3_Init+0x98>)
 8001110:	2200      	movs	r2, #0
 8001112:	60da      	str	r2, [r3, #12]
  hadc3.Init.NbrOfConversion = 1;
 8001114:	4b12      	ldr	r3, [pc, #72]	; (8001160 <MX_ADC3_Init+0x98>)
 8001116:	2201      	movs	r2, #1
 8001118:	61da      	str	r2, [r3, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 800111a:	4b11      	ldr	r3, [pc, #68]	; (8001160 <MX_ADC3_Init+0x98>)
 800111c:	2200      	movs	r2, #0
 800111e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001122:	4b0f      	ldr	r3, [pc, #60]	; (8001160 <MX_ADC3_Init+0x98>)
 8001124:	2201      	movs	r2, #1
 8001126:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8001128:	480d      	ldr	r0, [pc, #52]	; (8001160 <MX_ADC3_Init+0x98>)
 800112a:	f005 f975 	bl	8006418 <HAL_ADC_Init>
 800112e:	4603      	mov	r3, r0
 8001130:	2b00      	cmp	r3, #0
 8001132:	d001      	beq.n	8001138 <MX_ADC3_Init+0x70>
  {
    Error_Handler();
 8001134:	f002 fc8e 	bl	8003a54 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_6;
 8001138:	2306      	movs	r3, #6
 800113a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800113c:	2301      	movs	r3, #1
 800113e:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001140:	2300      	movs	r3, #0
 8001142:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001144:	463b      	mov	r3, r7
 8001146:	4619      	mov	r1, r3
 8001148:	4805      	ldr	r0, [pc, #20]	; (8001160 <MX_ADC3_Init+0x98>)
 800114a:	f005 fafb 	bl	8006744 <HAL_ADC_ConfigChannel>
 800114e:	4603      	mov	r3, r0
 8001150:	2b00      	cmp	r3, #0
 8001152:	d001      	beq.n	8001158 <MX_ADC3_Init+0x90>
  {
    Error_Handler();
 8001154:	f002 fc7e 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 8001158:	bf00      	nop
 800115a:	3710      	adds	r7, #16
 800115c:	46bd      	mov	sp, r7
 800115e:	bd80      	pop	{r7, pc}
 8001160:	20009da8 	.word	0x20009da8
 8001164:	40012200 	.word	0x40012200
 8001168:	0f000001 	.word	0x0f000001

0800116c <MX_DAC_Init>:
  * @brief DAC Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC_Init(void)
{
 800116c:	b580      	push	{r7, lr}
 800116e:	b082      	sub	sp, #8
 8001170:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC_Init 0 */

  /* USER CODE END DAC_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 8001172:	463b      	mov	r3, r7
 8001174:	2200      	movs	r2, #0
 8001176:	601a      	str	r2, [r3, #0]
 8001178:	605a      	str	r2, [r3, #4]
  /* USER CODE BEGIN DAC_Init 1 */

  /* USER CODE END DAC_Init 1 */
  /** DAC Initialization
  */
  hdac.Instance = DAC;
 800117a:	4b0f      	ldr	r3, [pc, #60]	; (80011b8 <MX_DAC_Init+0x4c>)
 800117c:	4a0f      	ldr	r2, [pc, #60]	; (80011bc <MX_DAC_Init+0x50>)
 800117e:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001180:	480d      	ldr	r0, [pc, #52]	; (80011b8 <MX_DAC_Init+0x4c>)
 8001182:	f005 fe05 	bl	8006d90 <HAL_DAC_Init>
 8001186:	4603      	mov	r3, r0
 8001188:	2b00      	cmp	r3, #0
 800118a:	d001      	beq.n	8001190 <MX_DAC_Init+0x24>
  {
    Error_Handler();
 800118c:	f002 fc62 	bl	8003a54 <Error_Handler>
  }
  /** DAC channel OUT1 config
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 8001190:	2300      	movs	r3, #0
 8001192:	603b      	str	r3, [r7, #0]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001194:	2300      	movs	r3, #0
 8001196:	607b      	str	r3, [r7, #4]
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 8001198:	463b      	mov	r3, r7
 800119a:	2200      	movs	r2, #0
 800119c:	4619      	mov	r1, r3
 800119e:	4806      	ldr	r0, [pc, #24]	; (80011b8 <MX_DAC_Init+0x4c>)
 80011a0:	f005 fe6c 	bl	8006e7c <HAL_DAC_ConfigChannel>
 80011a4:	4603      	mov	r3, r0
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	d001      	beq.n	80011ae <MX_DAC_Init+0x42>
  {
    Error_Handler();
 80011aa:	f002 fc53 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN DAC_Init 2 */

  /* USER CODE END DAC_Init 2 */

}
 80011ae:	bf00      	nop
 80011b0:	3708      	adds	r7, #8
 80011b2:	46bd      	mov	sp, r7
 80011b4:	bd80      	pop	{r7, pc}
 80011b6:	bf00      	nop
 80011b8:	20009e70 	.word	0x20009e70
 80011bc:	40007400 	.word	0x40007400

080011c0 <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 80011c0:	b580      	push	{r7, lr}
 80011c2:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 80011c4:	4b15      	ldr	r3, [pc, #84]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011c6:	4a16      	ldr	r2, [pc, #88]	; (8001220 <MX_DMA2D_Init+0x60>)
 80011c8:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 80011ca:	4b14      	ldr	r3, [pc, #80]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011cc:	2200      	movs	r2, #0
 80011ce:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 80011d0:	4b12      	ldr	r3, [pc, #72]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011d2:	2200      	movs	r2, #0
 80011d4:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 80011d6:	4b11      	ldr	r3, [pc, #68]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011d8:	2200      	movs	r2, #0
 80011da:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 80011dc:	4b0f      	ldr	r3, [pc, #60]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011de:	2200      	movs	r2, #0
 80011e0:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 80011e2:	4b0e      	ldr	r3, [pc, #56]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011e4:	2200      	movs	r2, #0
 80011e6:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80011e8:	4b0c      	ldr	r3, [pc, #48]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011ea:	2200      	movs	r2, #0
 80011ec:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80011ee:	4b0b      	ldr	r3, [pc, #44]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011f0:	2200      	movs	r2, #0
 80011f2:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80011f4:	4809      	ldr	r0, [pc, #36]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011f6:	f006 f877 	bl	80072e8 <HAL_DMA2D_Init>
 80011fa:	4603      	mov	r3, r0
 80011fc:	2b00      	cmp	r3, #0
 80011fe:	d001      	beq.n	8001204 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 8001200:	f002 fc28 	bl	8003a54 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001204:	2101      	movs	r1, #1
 8001206:	4805      	ldr	r0, [pc, #20]	; (800121c <MX_DMA2D_Init+0x5c>)
 8001208:	f006 f9cc 	bl	80075a4 <HAL_DMA2D_ConfigLayer>
 800120c:	4603      	mov	r3, r0
 800120e:	2b00      	cmp	r3, #0
 8001210:	d001      	beq.n	8001216 <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 8001212:	f002 fc1f 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 8001216:	bf00      	nop
 8001218:	bd80      	pop	{r7, pc}
 800121a:	bf00      	nop
 800121c:	20009f6c 	.word	0x20009f6c
 8001220:	4002b000 	.word	0x4002b000

08001224 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001224:	b580      	push	{r7, lr}
 8001226:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001228:	4b1b      	ldr	r3, [pc, #108]	; (8001298 <MX_I2C1_Init+0x74>)
 800122a:	4a1c      	ldr	r2, [pc, #112]	; (800129c <MX_I2C1_Init+0x78>)
 800122c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00C0EAFF;
 800122e:	4b1a      	ldr	r3, [pc, #104]	; (8001298 <MX_I2C1_Init+0x74>)
 8001230:	4a1b      	ldr	r2, [pc, #108]	; (80012a0 <MX_I2C1_Init+0x7c>)
 8001232:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001234:	4b18      	ldr	r3, [pc, #96]	; (8001298 <MX_I2C1_Init+0x74>)
 8001236:	2200      	movs	r2, #0
 8001238:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800123a:	4b17      	ldr	r3, [pc, #92]	; (8001298 <MX_I2C1_Init+0x74>)
 800123c:	2201      	movs	r2, #1
 800123e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001240:	4b15      	ldr	r3, [pc, #84]	; (8001298 <MX_I2C1_Init+0x74>)
 8001242:	2200      	movs	r2, #0
 8001244:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001246:	4b14      	ldr	r3, [pc, #80]	; (8001298 <MX_I2C1_Init+0x74>)
 8001248:	2200      	movs	r2, #0
 800124a:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 800124c:	4b12      	ldr	r3, [pc, #72]	; (8001298 <MX_I2C1_Init+0x74>)
 800124e:	2200      	movs	r2, #0
 8001250:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001252:	4b11      	ldr	r3, [pc, #68]	; (8001298 <MX_I2C1_Init+0x74>)
 8001254:	2200      	movs	r2, #0
 8001256:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001258:	4b0f      	ldr	r3, [pc, #60]	; (8001298 <MX_I2C1_Init+0x74>)
 800125a:	2200      	movs	r2, #0
 800125c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800125e:	480e      	ldr	r0, [pc, #56]	; (8001298 <MX_I2C1_Init+0x74>)
 8001260:	f006 fdcc 	bl	8007dfc <HAL_I2C_Init>
 8001264:	4603      	mov	r3, r0
 8001266:	2b00      	cmp	r3, #0
 8001268:	d001      	beq.n	800126e <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 800126a:	f002 fbf3 	bl	8003a54 <Error_Handler>
  }
  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800126e:	2100      	movs	r1, #0
 8001270:	4809      	ldr	r0, [pc, #36]	; (8001298 <MX_I2C1_Init+0x74>)
 8001272:	f007 fadb 	bl	800882c <HAL_I2CEx_ConfigAnalogFilter>
 8001276:	4603      	mov	r3, r0
 8001278:	2b00      	cmp	r3, #0
 800127a:	d001      	beq.n	8001280 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 800127c:	f002 fbea 	bl	8003a54 <Error_Handler>
  }
  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001280:	2100      	movs	r1, #0
 8001282:	4805      	ldr	r0, [pc, #20]	; (8001298 <MX_I2C1_Init+0x74>)
 8001284:	f007 fb1d 	bl	80088c2 <HAL_I2CEx_ConfigDigitalFilter>
 8001288:	4603      	mov	r3, r0
 800128a:	2b00      	cmp	r3, #0
 800128c:	d001      	beq.n	8001292 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 800128e:	f002 fbe1 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001292:	bf00      	nop
 8001294:	bd80      	pop	{r7, pc}
 8001296:	bf00      	nop
 8001298:	20009be8 	.word	0x20009be8
 800129c:	40005400 	.word	0x40005400
 80012a0:	00c0eaff 	.word	0x00c0eaff

080012a4 <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 80012a4:	b580      	push	{r7, lr}
 80012a6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 80012a8:	4b1b      	ldr	r3, [pc, #108]	; (8001318 <MX_I2C3_Init+0x74>)
 80012aa:	4a1c      	ldr	r2, [pc, #112]	; (800131c <MX_I2C3_Init+0x78>)
 80012ac:	601a      	str	r2, [r3, #0]
  hi2c3.Init.Timing = 0x00C0EAFF;
 80012ae:	4b1a      	ldr	r3, [pc, #104]	; (8001318 <MX_I2C3_Init+0x74>)
 80012b0:	4a1b      	ldr	r2, [pc, #108]	; (8001320 <MX_I2C3_Init+0x7c>)
 80012b2:	605a      	str	r2, [r3, #4]
  hi2c3.Init.OwnAddress1 = 0;
 80012b4:	4b18      	ldr	r3, [pc, #96]	; (8001318 <MX_I2C3_Init+0x74>)
 80012b6:	2200      	movs	r2, #0
 80012b8:	609a      	str	r2, [r3, #8]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012ba:	4b17      	ldr	r3, [pc, #92]	; (8001318 <MX_I2C3_Init+0x74>)
 80012bc:	2201      	movs	r2, #1
 80012be:	60da      	str	r2, [r3, #12]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012c0:	4b15      	ldr	r3, [pc, #84]	; (8001318 <MX_I2C3_Init+0x74>)
 80012c2:	2200      	movs	r2, #0
 80012c4:	611a      	str	r2, [r3, #16]
  hi2c3.Init.OwnAddress2 = 0;
 80012c6:	4b14      	ldr	r3, [pc, #80]	; (8001318 <MX_I2C3_Init+0x74>)
 80012c8:	2200      	movs	r2, #0
 80012ca:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80012cc:	4b12      	ldr	r3, [pc, #72]	; (8001318 <MX_I2C3_Init+0x74>)
 80012ce:	2200      	movs	r2, #0
 80012d0:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012d2:	4b11      	ldr	r3, [pc, #68]	; (8001318 <MX_I2C3_Init+0x74>)
 80012d4:	2200      	movs	r2, #0
 80012d6:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012d8:	4b0f      	ldr	r3, [pc, #60]	; (8001318 <MX_I2C3_Init+0x74>)
 80012da:	2200      	movs	r2, #0
 80012dc:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80012de:	480e      	ldr	r0, [pc, #56]	; (8001318 <MX_I2C3_Init+0x74>)
 80012e0:	f006 fd8c 	bl	8007dfc <HAL_I2C_Init>
 80012e4:	4603      	mov	r3, r0
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d001      	beq.n	80012ee <MX_I2C3_Init+0x4a>
  {
    Error_Handler();
 80012ea:	f002 fbb3 	bl	8003a54 <Error_Handler>
  }
  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80012ee:	2100      	movs	r1, #0
 80012f0:	4809      	ldr	r0, [pc, #36]	; (8001318 <MX_I2C3_Init+0x74>)
 80012f2:	f007 fa9b 	bl	800882c <HAL_I2CEx_ConfigAnalogFilter>
 80012f6:	4603      	mov	r3, r0
 80012f8:	2b00      	cmp	r3, #0
 80012fa:	d001      	beq.n	8001300 <MX_I2C3_Init+0x5c>
  {
    Error_Handler();
 80012fc:	f002 fbaa 	bl	8003a54 <Error_Handler>
  }
  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001300:	2100      	movs	r1, #0
 8001302:	4805      	ldr	r0, [pc, #20]	; (8001318 <MX_I2C3_Init+0x74>)
 8001304:	f007 fadd 	bl	80088c2 <HAL_I2CEx_ConfigDigitalFilter>
 8001308:	4603      	mov	r3, r0
 800130a:	2b00      	cmp	r3, #0
 800130c:	d001      	beq.n	8001312 <MX_I2C3_Init+0x6e>
  {
    Error_Handler();
 800130e:	f002 fba1 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8001312:	bf00      	nop
 8001314:	bd80      	pop	{r7, pc}
 8001316:	bf00      	nop
 8001318:	20009a74 	.word	0x20009a74
 800131c:	40005c00 	.word	0x40005c00
 8001320:	00c0eaff 	.word	0x00c0eaff

08001324 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 8001324:	b580      	push	{r7, lr}
 8001326:	b08e      	sub	sp, #56	; 0x38
 8001328:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800132a:	1d3b      	adds	r3, r7, #4
 800132c:	2234      	movs	r2, #52	; 0x34
 800132e:	2100      	movs	r1, #0
 8001330:	4618      	mov	r0, r3
 8001332:	f00e f8aa 	bl	800f48a <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8001336:	4b3a      	ldr	r3, [pc, #232]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001338:	4a3a      	ldr	r2, [pc, #232]	; (8001424 <MX_LTDC_Init+0x100>)
 800133a:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800133c:	4b38      	ldr	r3, [pc, #224]	; (8001420 <MX_LTDC_Init+0xfc>)
 800133e:	2200      	movs	r2, #0
 8001340:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001342:	4b37      	ldr	r3, [pc, #220]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001344:	2200      	movs	r2, #0
 8001346:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001348:	4b35      	ldr	r3, [pc, #212]	; (8001420 <MX_LTDC_Init+0xfc>)
 800134a:	2200      	movs	r2, #0
 800134c:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800134e:	4b34      	ldr	r3, [pc, #208]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001350:	2200      	movs	r2, #0
 8001352:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 40;
 8001354:	4b32      	ldr	r3, [pc, #200]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001356:	2228      	movs	r2, #40	; 0x28
 8001358:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 9;
 800135a:	4b31      	ldr	r3, [pc, #196]	; (8001420 <MX_LTDC_Init+0xfc>)
 800135c:	2209      	movs	r2, #9
 800135e:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 53;
 8001360:	4b2f      	ldr	r3, [pc, #188]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001362:	2235      	movs	r2, #53	; 0x35
 8001364:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 11;
 8001366:	4b2e      	ldr	r3, [pc, #184]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001368:	220b      	movs	r2, #11
 800136a:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 533;
 800136c:	4b2c      	ldr	r3, [pc, #176]	; (8001420 <MX_LTDC_Init+0xfc>)
 800136e:	f240 2215 	movw	r2, #533	; 0x215
 8001372:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 283;
 8001374:	4b2a      	ldr	r3, [pc, #168]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001376:	f240 121b 	movw	r2, #283	; 0x11b
 800137a:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 565;
 800137c:	4b28      	ldr	r3, [pc, #160]	; (8001420 <MX_LTDC_Init+0xfc>)
 800137e:	f240 2235 	movw	r2, #565	; 0x235
 8001382:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 285;
 8001384:	4b26      	ldr	r3, [pc, #152]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001386:	f240 121d 	movw	r2, #285	; 0x11d
 800138a:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 800138c:	4b24      	ldr	r3, [pc, #144]	; (8001420 <MX_LTDC_Init+0xfc>)
 800138e:	2200      	movs	r2, #0
 8001390:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001394:	4b22      	ldr	r3, [pc, #136]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001396:	2200      	movs	r2, #0
 8001398:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 800139c:	4b20      	ldr	r3, [pc, #128]	; (8001420 <MX_LTDC_Init+0xfc>)
 800139e:	2200      	movs	r2, #0
 80013a0:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80013a4:	481e      	ldr	r0, [pc, #120]	; (8001420 <MX_LTDC_Init+0xfc>)
 80013a6:	f007 fad9 	bl	800895c <HAL_LTDC_Init>
 80013aa:	4603      	mov	r3, r0
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d001      	beq.n	80013b4 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 80013b0:	f002 fb50 	bl	8003a54 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 80013b4:	2300      	movs	r3, #0
 80013b6:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 480;
 80013b8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80013bc:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 80013be:	2300      	movs	r3, #0
 80013c0:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 272;
 80013c2:	f44f 7388 	mov.w	r3, #272	; 0x110
 80013c6:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80013c8:	2302      	movs	r3, #2
 80013ca:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 80013cc:	23ff      	movs	r3, #255	; 0xff
 80013ce:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 80013d0:	2300      	movs	r3, #0
 80013d2:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 80013d4:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80013d8:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 80013da:	2307      	movs	r3, #7
 80013dc:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xC0000000;
 80013de:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
 80013e2:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 480;
 80013e4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80013e8:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 272;
 80013ea:	f44f 7388 	mov.w	r3, #272	; 0x110
 80013ee:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 80013f0:	2300      	movs	r3, #0
 80013f2:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 80013f6:	2300      	movs	r3, #0
 80013f8:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 80013fc:	2300      	movs	r3, #0
 80013fe:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001402:	1d3b      	adds	r3, r7, #4
 8001404:	2200      	movs	r2, #0
 8001406:	4619      	mov	r1, r3
 8001408:	4805      	ldr	r0, [pc, #20]	; (8001420 <MX_LTDC_Init+0xfc>)
 800140a:	f007 fc39 	bl	8008c80 <HAL_LTDC_ConfigLayer>
 800140e:	4603      	mov	r3, r0
 8001410:	2b00      	cmp	r3, #0
 8001412:	d001      	beq.n	8001418 <MX_LTDC_Init+0xf4>
  {
    Error_Handler();
 8001414:	f002 fb1e 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8001418:	bf00      	nop
 800141a:	3738      	adds	r7, #56	; 0x38
 800141c:	46bd      	mov	sp, r7
 800141e:	bd80      	pop	{r7, pc}
 8001420:	20009cb8 	.word	0x20009cb8
 8001424:	40016800 	.word	0x40016800

08001428 <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 8001428:	b580      	push	{r7, lr}
 800142a:	b092      	sub	sp, #72	; 0x48
 800142c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_TimeTypeDef sTime = {0};
 800142e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001432:	2200      	movs	r2, #0
 8001434:	601a      	str	r2, [r3, #0]
 8001436:	605a      	str	r2, [r3, #4]
 8001438:	609a      	str	r2, [r3, #8]
 800143a:	60da      	str	r2, [r3, #12]
 800143c:	611a      	str	r2, [r3, #16]
 800143e:	615a      	str	r2, [r3, #20]
  RTC_DateTypeDef sDate = {0};
 8001440:	2300      	movs	r3, #0
 8001442:	62fb      	str	r3, [r7, #44]	; 0x2c
  RTC_AlarmTypeDef sAlarm = {0};
 8001444:	463b      	mov	r3, r7
 8001446:	222c      	movs	r2, #44	; 0x2c
 8001448:	2100      	movs	r1, #0
 800144a:	4618      	mov	r0, r3
 800144c:	f00e f81d 	bl	800f48a <memset>
  /* USER CODE BEGIN RTC_Init 1 */

  /* USER CODE END RTC_Init 1 */
  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8001450:	4b46      	ldr	r3, [pc, #280]	; (800156c <MX_RTC_Init+0x144>)
 8001452:	4a47      	ldr	r2, [pc, #284]	; (8001570 <MX_RTC_Init+0x148>)
 8001454:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8001456:	4b45      	ldr	r3, [pc, #276]	; (800156c <MX_RTC_Init+0x144>)
 8001458:	2200      	movs	r2, #0
 800145a:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 800145c:	4b43      	ldr	r3, [pc, #268]	; (800156c <MX_RTC_Init+0x144>)
 800145e:	227f      	movs	r2, #127	; 0x7f
 8001460:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 8001462:	4b42      	ldr	r3, [pc, #264]	; (800156c <MX_RTC_Init+0x144>)
 8001464:	22ff      	movs	r2, #255	; 0xff
 8001466:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8001468:	4b40      	ldr	r3, [pc, #256]	; (800156c <MX_RTC_Init+0x144>)
 800146a:	2200      	movs	r2, #0
 800146c:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 800146e:	4b3f      	ldr	r3, [pc, #252]	; (800156c <MX_RTC_Init+0x144>)
 8001470:	2200      	movs	r2, #0
 8001472:	615a      	str	r2, [r3, #20]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8001474:	4b3d      	ldr	r3, [pc, #244]	; (800156c <MX_RTC_Init+0x144>)
 8001476:	2200      	movs	r2, #0
 8001478:	619a      	str	r2, [r3, #24]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 800147a:	483c      	ldr	r0, [pc, #240]	; (800156c <MX_RTC_Init+0x144>)
 800147c:	f008 fedc 	bl	800a238 <HAL_RTC_Init>
 8001480:	4603      	mov	r3, r0
 8001482:	2b00      	cmp	r3, #0
 8001484:	d001      	beq.n	800148a <MX_RTC_Init+0x62>
  {
    Error_Handler();
 8001486:	f002 fae5 	bl	8003a54 <Error_Handler>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 800148a:	2300      	movs	r3, #0
 800148c:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
  sTime.Minutes = 0x0;
 8001490:	2300      	movs	r3, #0
 8001492:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
  sTime.Seconds = 0x0;
 8001496:	2300      	movs	r3, #0
 8001498:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 800149c:	2300      	movs	r3, #0
 800149e:	643b      	str	r3, [r7, #64]	; 0x40
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 80014a0:	2300      	movs	r3, #0
 80014a2:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80014a4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80014a8:	2201      	movs	r2, #1
 80014aa:	4619      	mov	r1, r3
 80014ac:	482f      	ldr	r0, [pc, #188]	; (800156c <MX_RTC_Init+0x144>)
 80014ae:	f008 ff3f 	bl	800a330 <HAL_RTC_SetTime>
 80014b2:	4603      	mov	r3, r0
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d001      	beq.n	80014bc <MX_RTC_Init+0x94>
  {
    Error_Handler();
 80014b8:	f002 facc 	bl	8003a54 <Error_Handler>
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80014bc:	2301      	movs	r3, #1
 80014be:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
  sDate.Month = RTC_MONTH_JANUARY;
 80014c2:	2301      	movs	r3, #1
 80014c4:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
  sDate.Date = 0x1;
 80014c8:	2301      	movs	r3, #1
 80014ca:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
  sDate.Year = 0x0;
 80014ce:	2300      	movs	r3, #0
 80014d0:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80014d4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80014d8:	2201      	movs	r2, #1
 80014da:	4619      	mov	r1, r3
 80014dc:	4823      	ldr	r0, [pc, #140]	; (800156c <MX_RTC_Init+0x144>)
 80014de:	f008 ffe5 	bl	800a4ac <HAL_RTC_SetDate>
 80014e2:	4603      	mov	r3, r0
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d001      	beq.n	80014ec <MX_RTC_Init+0xc4>
  {
    Error_Handler();
 80014e8:	f002 fab4 	bl	8003a54 <Error_Handler>
  }
  /** Enable the Alarm A
  */
  sAlarm.AlarmTime.Hours = 0x0;
 80014ec:	2300      	movs	r3, #0
 80014ee:	703b      	strb	r3, [r7, #0]
  sAlarm.AlarmTime.Minutes = 0x0;
 80014f0:	2300      	movs	r3, #0
 80014f2:	707b      	strb	r3, [r7, #1]
  sAlarm.AlarmTime.Seconds = 0x0;
 80014f4:	2300      	movs	r3, #0
 80014f6:	70bb      	strb	r3, [r7, #2]
  sAlarm.AlarmTime.SubSeconds = 0x0;
 80014f8:	2300      	movs	r3, #0
 80014fa:	607b      	str	r3, [r7, #4]
  sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 80014fc:	2300      	movs	r3, #0
 80014fe:	613b      	str	r3, [r7, #16]
  sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8001500:	2300      	movs	r3, #0
 8001502:	617b      	str	r3, [r7, #20]
  sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 8001504:	2300      	movs	r3, #0
 8001506:	61bb      	str	r3, [r7, #24]
  sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 8001508:	2300      	movs	r3, #0
 800150a:	61fb      	str	r3, [r7, #28]
  sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 800150c:	2300      	movs	r3, #0
 800150e:	623b      	str	r3, [r7, #32]
  sAlarm.AlarmDateWeekDay = 0x1;
 8001510:	2301      	movs	r3, #1
 8001512:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
  sAlarm.Alarm = RTC_ALARM_A;
 8001516:	f44f 7380 	mov.w	r3, #256	; 0x100
 800151a:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 800151c:	463b      	mov	r3, r7
 800151e:	2201      	movs	r2, #1
 8001520:	4619      	mov	r1, r3
 8001522:	4812      	ldr	r0, [pc, #72]	; (800156c <MX_RTC_Init+0x144>)
 8001524:	f009 f86a 	bl	800a5fc <HAL_RTC_SetAlarm>
 8001528:	4603      	mov	r3, r0
 800152a:	2b00      	cmp	r3, #0
 800152c:	d001      	beq.n	8001532 <MX_RTC_Init+0x10a>
  {
    Error_Handler();
 800152e:	f002 fa91 	bl	8003a54 <Error_Handler>
  }
  /** Enable the Alarm B
  */
  sAlarm.Alarm = RTC_ALARM_B;
 8001532:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001536:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 8001538:	463b      	mov	r3, r7
 800153a:	2201      	movs	r2, #1
 800153c:	4619      	mov	r1, r3
 800153e:	480b      	ldr	r0, [pc, #44]	; (800156c <MX_RTC_Init+0x144>)
 8001540:	f009 f85c 	bl	800a5fc <HAL_RTC_SetAlarm>
 8001544:	4603      	mov	r3, r0
 8001546:	2b00      	cmp	r3, #0
 8001548:	d001      	beq.n	800154e <MX_RTC_Init+0x126>
  {
    Error_Handler();
 800154a:	f002 fa83 	bl	8003a54 <Error_Handler>
  }
  /** Enable the TimeStamp
  */
  if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK)
 800154e:	2202      	movs	r2, #2
 8001550:	2100      	movs	r1, #0
 8001552:	4806      	ldr	r0, [pc, #24]	; (800156c <MX_RTC_Init+0x144>)
 8001554:	f009 f9dc 	bl	800a910 <HAL_RTCEx_SetTimeStamp>
 8001558:	4603      	mov	r3, r0
 800155a:	2b00      	cmp	r3, #0
 800155c:	d001      	beq.n	8001562 <MX_RTC_Init+0x13a>
  {
    Error_Handler();
 800155e:	f002 fa79 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 8001562:	bf00      	nop
 8001564:	3748      	adds	r7, #72	; 0x48
 8001566:	46bd      	mov	sp, r7
 8001568:	bd80      	pop	{r7, pc}
 800156a:	bf00      	nop
 800156c:	20009e88 	.word	0x20009e88
 8001570:	40002800 	.word	0x40002800

08001574 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8001574:	b580      	push	{r7, lr}
 8001576:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8001578:	4b1b      	ldr	r3, [pc, #108]	; (80015e8 <MX_SPI2_Init+0x74>)
 800157a:	4a1c      	ldr	r2, [pc, #112]	; (80015ec <MX_SPI2_Init+0x78>)
 800157c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800157e:	4b1a      	ldr	r3, [pc, #104]	; (80015e8 <MX_SPI2_Init+0x74>)
 8001580:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001584:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001586:	4b18      	ldr	r3, [pc, #96]	; (80015e8 <MX_SPI2_Init+0x74>)
 8001588:	2200      	movs	r2, #0
 800158a:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 800158c:	4b16      	ldr	r3, [pc, #88]	; (80015e8 <MX_SPI2_Init+0x74>)
 800158e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001592:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001594:	4b14      	ldr	r3, [pc, #80]	; (80015e8 <MX_SPI2_Init+0x74>)
 8001596:	2200      	movs	r2, #0
 8001598:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 800159a:	4b13      	ldr	r3, [pc, #76]	; (80015e8 <MX_SPI2_Init+0x74>)
 800159c:	2200      	movs	r2, #0
 800159e:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_HARD_OUTPUT;
 80015a0:	4b11      	ldr	r3, [pc, #68]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015a2:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80015a6:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80015a8:	4b0f      	ldr	r3, [pc, #60]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015aa:	2200      	movs	r2, #0
 80015ac:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80015ae:	4b0e      	ldr	r3, [pc, #56]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015b0:	2200      	movs	r2, #0
 80015b2:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80015b4:	4b0c      	ldr	r3, [pc, #48]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80015ba:	4b0b      	ldr	r3, [pc, #44]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015bc:	2200      	movs	r2, #0
 80015be:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 7;
 80015c0:	4b09      	ldr	r3, [pc, #36]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015c2:	2207      	movs	r2, #7
 80015c4:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 80015c6:	4b08      	ldr	r3, [pc, #32]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015c8:	2200      	movs	r2, #0
 80015ca:	631a      	str	r2, [r3, #48]	; 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 80015cc:	4b06      	ldr	r3, [pc, #24]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015ce:	2208      	movs	r2, #8
 80015d0:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80015d2:	4805      	ldr	r0, [pc, #20]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015d4:	f009 fa71 	bl	800aaba <HAL_SPI_Init>
 80015d8:	4603      	mov	r3, r0
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d001      	beq.n	80015e2 <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 80015de:	f002 fa39 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 80015e2:	bf00      	nop
 80015e4:	bd80      	pop	{r7, pc}
 80015e6:	bf00      	nop
 80015e8:	20009ac0 	.word	0x20009ac0
 80015ec:	40003800 	.word	0x40003800

080015f0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80015f0:	b580      	push	{r7, lr}
 80015f2:	b088      	sub	sp, #32
 80015f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80015f6:	f107 0310 	add.w	r3, r7, #16
 80015fa:	2200      	movs	r2, #0
 80015fc:	601a      	str	r2, [r3, #0]
 80015fe:	605a      	str	r2, [r3, #4]
 8001600:	609a      	str	r2, [r3, #8]
 8001602:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001604:	1d3b      	adds	r3, r7, #4
 8001606:	2200      	movs	r2, #0
 8001608:	601a      	str	r2, [r3, #0]
 800160a:	605a      	str	r2, [r3, #4]
 800160c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 800160e:	4b20      	ldr	r3, [pc, #128]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001610:	4a20      	ldr	r2, [pc, #128]	; (8001694 <MX_TIM1_Init+0xa4>)
 8001612:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8001614:	4b1e      	ldr	r3, [pc, #120]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001616:	2200      	movs	r2, #0
 8001618:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800161a:	4b1d      	ldr	r3, [pc, #116]	; (8001690 <MX_TIM1_Init+0xa0>)
 800161c:	2200      	movs	r2, #0
 800161e:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8001620:	4b1b      	ldr	r3, [pc, #108]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001622:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001626:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001628:	4b19      	ldr	r3, [pc, #100]	; (8001690 <MX_TIM1_Init+0xa0>)
 800162a:	2200      	movs	r2, #0
 800162c:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800162e:	4b18      	ldr	r3, [pc, #96]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001630:	2200      	movs	r2, #0
 8001632:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001634:	4b16      	ldr	r3, [pc, #88]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001636:	2200      	movs	r2, #0
 8001638:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800163a:	4815      	ldr	r0, [pc, #84]	; (8001690 <MX_TIM1_Init+0xa0>)
 800163c:	f009 facf 	bl	800abde <HAL_TIM_Base_Init>
 8001640:	4603      	mov	r3, r0
 8001642:	2b00      	cmp	r3, #0
 8001644:	d001      	beq.n	800164a <MX_TIM1_Init+0x5a>
  {
    Error_Handler();
 8001646:	f002 fa05 	bl	8003a54 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800164a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800164e:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001650:	f107 0310 	add.w	r3, r7, #16
 8001654:	4619      	mov	r1, r3
 8001656:	480e      	ldr	r0, [pc, #56]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001658:	f009 fd82 	bl	800b160 <HAL_TIM_ConfigClockSource>
 800165c:	4603      	mov	r3, r0
 800165e:	2b00      	cmp	r3, #0
 8001660:	d001      	beq.n	8001666 <MX_TIM1_Init+0x76>
  {
    Error_Handler();
 8001662:	f002 f9f7 	bl	8003a54 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001666:	2300      	movs	r3, #0
 8001668:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 800166a:	2300      	movs	r3, #0
 800166c:	60bb      	str	r3, [r7, #8]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800166e:	2300      	movs	r3, #0
 8001670:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001672:	1d3b      	adds	r3, r7, #4
 8001674:	4619      	mov	r1, r3
 8001676:	4806      	ldr	r0, [pc, #24]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001678:	f00a fab6 	bl	800bbe8 <HAL_TIMEx_MasterConfigSynchronization>
 800167c:	4603      	mov	r3, r0
 800167e:	2b00      	cmp	r3, #0
 8001680:	d001      	beq.n	8001686 <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 8001682:	f002 f9e7 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8001686:	bf00      	nop
 8001688:	3720      	adds	r7, #32
 800168a:	46bd      	mov	sp, r7
 800168c:	bd80      	pop	{r7, pc}
 800168e:	bf00      	nop
 8001690:	20009ea8 	.word	0x20009ea8
 8001694:	40010000 	.word	0x40010000

08001698 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001698:	b580      	push	{r7, lr}
 800169a:	b088      	sub	sp, #32
 800169c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800169e:	f107 0310 	add.w	r3, r7, #16
 80016a2:	2200      	movs	r2, #0
 80016a4:	601a      	str	r2, [r3, #0]
 80016a6:	605a      	str	r2, [r3, #4]
 80016a8:	609a      	str	r2, [r3, #8]
 80016aa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016ac:	1d3b      	adds	r3, r7, #4
 80016ae:	2200      	movs	r2, #0
 80016b0:	601a      	str	r2, [r3, #0]
 80016b2:	605a      	str	r2, [r3, #4]
 80016b4:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80016b6:	4b1e      	ldr	r3, [pc, #120]	; (8001730 <MX_TIM2_Init+0x98>)
 80016b8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016bc:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 80016be:	4b1c      	ldr	r3, [pc, #112]	; (8001730 <MX_TIM2_Init+0x98>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016c4:	4b1a      	ldr	r3, [pc, #104]	; (8001730 <MX_TIM2_Init+0x98>)
 80016c6:	2200      	movs	r2, #0
 80016c8:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 80016ca:	4b19      	ldr	r3, [pc, #100]	; (8001730 <MX_TIM2_Init+0x98>)
 80016cc:	f04f 32ff 	mov.w	r2, #4294967295
 80016d0:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016d2:	4b17      	ldr	r3, [pc, #92]	; (8001730 <MX_TIM2_Init+0x98>)
 80016d4:	2200      	movs	r2, #0
 80016d6:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016d8:	4b15      	ldr	r3, [pc, #84]	; (8001730 <MX_TIM2_Init+0x98>)
 80016da:	2200      	movs	r2, #0
 80016dc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80016de:	4814      	ldr	r0, [pc, #80]	; (8001730 <MX_TIM2_Init+0x98>)
 80016e0:	f009 fa7d 	bl	800abde <HAL_TIM_Base_Init>
 80016e4:	4603      	mov	r3, r0
 80016e6:	2b00      	cmp	r3, #0
 80016e8:	d001      	beq.n	80016ee <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 80016ea:	f002 f9b3 	bl	8003a54 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80016ee:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80016f2:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80016f4:	f107 0310 	add.w	r3, r7, #16
 80016f8:	4619      	mov	r1, r3
 80016fa:	480d      	ldr	r0, [pc, #52]	; (8001730 <MX_TIM2_Init+0x98>)
 80016fc:	f009 fd30 	bl	800b160 <HAL_TIM_ConfigClockSource>
 8001700:	4603      	mov	r3, r0
 8001702:	2b00      	cmp	r3, #0
 8001704:	d001      	beq.n	800170a <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8001706:	f002 f9a5 	bl	8003a54 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800170a:	2300      	movs	r3, #0
 800170c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800170e:	2300      	movs	r3, #0
 8001710:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001712:	1d3b      	adds	r3, r7, #4
 8001714:	4619      	mov	r1, r3
 8001716:	4806      	ldr	r0, [pc, #24]	; (8001730 <MX_TIM2_Init+0x98>)
 8001718:	f00a fa66 	bl	800bbe8 <HAL_TIMEx_MasterConfigSynchronization>
 800171c:	4603      	mov	r3, r0
 800171e:	2b00      	cmp	r3, #0
 8001720:	d001      	beq.n	8001726 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8001722:	f002 f997 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001726:	bf00      	nop
 8001728:	3720      	adds	r7, #32
 800172a:	46bd      	mov	sp, r7
 800172c:	bd80      	pop	{r7, pc}
 800172e:	bf00      	nop
 8001730:	20009fac 	.word	0x20009fac

08001734 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001734:	b580      	push	{r7, lr}
 8001736:	b094      	sub	sp, #80	; 0x50
 8001738:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800173a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800173e:	2200      	movs	r2, #0
 8001740:	601a      	str	r2, [r3, #0]
 8001742:	605a      	str	r2, [r3, #4]
 8001744:	609a      	str	r2, [r3, #8]
 8001746:	60da      	str	r2, [r3, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001748:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800174c:	2200      	movs	r2, #0
 800174e:	601a      	str	r2, [r3, #0]
 8001750:	605a      	str	r2, [r3, #4]
 8001752:	609a      	str	r2, [r3, #8]
 8001754:	60da      	str	r2, [r3, #12]
 8001756:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001758:	f107 0320 	add.w	r3, r7, #32
 800175c:	2200      	movs	r2, #0
 800175e:	601a      	str	r2, [r3, #0]
 8001760:	605a      	str	r2, [r3, #4]
 8001762:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001764:	1d3b      	adds	r3, r7, #4
 8001766:	2200      	movs	r2, #0
 8001768:	601a      	str	r2, [r3, #0]
 800176a:	605a      	str	r2, [r3, #4]
 800176c:	609a      	str	r2, [r3, #8]
 800176e:	60da      	str	r2, [r3, #12]
 8001770:	611a      	str	r2, [r3, #16]
 8001772:	615a      	str	r2, [r3, #20]
 8001774:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001776:	4b34      	ldr	r3, [pc, #208]	; (8001848 <MX_TIM3_Init+0x114>)
 8001778:	4a34      	ldr	r2, [pc, #208]	; (800184c <MX_TIM3_Init+0x118>)
 800177a:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 800177c:	4b32      	ldr	r3, [pc, #200]	; (8001848 <MX_TIM3_Init+0x114>)
 800177e:	2200      	movs	r2, #0
 8001780:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001782:	4b31      	ldr	r3, [pc, #196]	; (8001848 <MX_TIM3_Init+0x114>)
 8001784:	2200      	movs	r2, #0
 8001786:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8001788:	4b2f      	ldr	r3, [pc, #188]	; (8001848 <MX_TIM3_Init+0x114>)
 800178a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800178e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001790:	4b2d      	ldr	r3, [pc, #180]	; (8001848 <MX_TIM3_Init+0x114>)
 8001792:	2200      	movs	r2, #0
 8001794:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001796:	4b2c      	ldr	r3, [pc, #176]	; (8001848 <MX_TIM3_Init+0x114>)
 8001798:	2200      	movs	r2, #0
 800179a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800179c:	482a      	ldr	r0, [pc, #168]	; (8001848 <MX_TIM3_Init+0x114>)
 800179e:	f009 fa1e 	bl	800abde <HAL_TIM_Base_Init>
 80017a2:	4603      	mov	r3, r0
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d001      	beq.n	80017ac <MX_TIM3_Init+0x78>
  {
    Error_Handler();
 80017a8:	f002 f954 	bl	8003a54 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80017b0:	643b      	str	r3, [r7, #64]	; 0x40
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80017b2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80017b6:	4619      	mov	r1, r3
 80017b8:	4823      	ldr	r0, [pc, #140]	; (8001848 <MX_TIM3_Init+0x114>)
 80017ba:	f009 fcd1 	bl	800b160 <HAL_TIM_ConfigClockSource>
 80017be:	4603      	mov	r3, r0
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d001      	beq.n	80017c8 <MX_TIM3_Init+0x94>
  {
    Error_Handler();
 80017c4:	f002 f946 	bl	8003a54 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80017c8:	481f      	ldr	r0, [pc, #124]	; (8001848 <MX_TIM3_Init+0x114>)
 80017ca:	f009 fa5d 	bl	800ac88 <HAL_TIM_PWM_Init>
 80017ce:	4603      	mov	r3, r0
 80017d0:	2b00      	cmp	r3, #0
 80017d2:	d001      	beq.n	80017d8 <MX_TIM3_Init+0xa4>
  {
    Error_Handler();
 80017d4:	f002 f93e 	bl	8003a54 <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 80017d8:	2300      	movs	r3, #0
 80017da:	62fb      	str	r3, [r7, #44]	; 0x2c
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80017dc:	2300      	movs	r3, #0
 80017de:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80017e0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80017e4:	4619      	mov	r1, r3
 80017e6:	4818      	ldr	r0, [pc, #96]	; (8001848 <MX_TIM3_Init+0x114>)
 80017e8:	f009 fd74 	bl	800b2d4 <HAL_TIM_SlaveConfigSynchro>
 80017ec:	4603      	mov	r3, r0
 80017ee:	2b00      	cmp	r3, #0
 80017f0:	d001      	beq.n	80017f6 <MX_TIM3_Init+0xc2>
  {
    Error_Handler();
 80017f2:	f002 f92f 	bl	8003a54 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80017f6:	2300      	movs	r3, #0
 80017f8:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017fa:	2300      	movs	r3, #0
 80017fc:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80017fe:	f107 0320 	add.w	r3, r7, #32
 8001802:	4619      	mov	r1, r3
 8001804:	4810      	ldr	r0, [pc, #64]	; (8001848 <MX_TIM3_Init+0x114>)
 8001806:	f00a f9ef 	bl	800bbe8 <HAL_TIMEx_MasterConfigSynchronization>
 800180a:	4603      	mov	r3, r0
 800180c:	2b00      	cmp	r3, #0
 800180e:	d001      	beq.n	8001814 <MX_TIM3_Init+0xe0>
  {
    Error_Handler();
 8001810:	f002 f920 	bl	8003a54 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001814:	2360      	movs	r3, #96	; 0x60
 8001816:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001818:	2300      	movs	r3, #0
 800181a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800181c:	2300      	movs	r3, #0
 800181e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001820:	2300      	movs	r3, #0
 8001822:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001824:	1d3b      	adds	r3, r7, #4
 8001826:	2200      	movs	r2, #0
 8001828:	4619      	mov	r1, r3
 800182a:	4807      	ldr	r0, [pc, #28]	; (8001848 <MX_TIM3_Init+0x114>)
 800182c:	f009 fb80 	bl	800af30 <HAL_TIM_PWM_ConfigChannel>
 8001830:	4603      	mov	r3, r0
 8001832:	2b00      	cmp	r3, #0
 8001834:	d001      	beq.n	800183a <MX_TIM3_Init+0x106>
  {
    Error_Handler();
 8001836:	f002 f90d 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 800183a:	4803      	ldr	r0, [pc, #12]	; (8001848 <MX_TIM3_Init+0x114>)
 800183c:	f004 fabe 	bl	8005dbc <HAL_TIM_MspPostInit>

}
 8001840:	bf00      	nop
 8001842:	3750      	adds	r7, #80	; 0x50
 8001844:	46bd      	mov	sp, r7
 8001846:	bd80      	pop	{r7, pc}
 8001848:	20009c78 	.word	0x20009c78
 800184c:	40000400 	.word	0x40000400

08001850 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8001850:	b580      	push	{r7, lr}
 8001852:	b088      	sub	sp, #32
 8001854:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001856:	f107 0310 	add.w	r3, r7, #16
 800185a:	2200      	movs	r2, #0
 800185c:	601a      	str	r2, [r3, #0]
 800185e:	605a      	str	r2, [r3, #4]
 8001860:	609a      	str	r2, [r3, #8]
 8001862:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001864:	1d3b      	adds	r3, r7, #4
 8001866:	2200      	movs	r2, #0
 8001868:	601a      	str	r2, [r3, #0]
 800186a:	605a      	str	r2, [r3, #4]
 800186c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 800186e:	4b1d      	ldr	r3, [pc, #116]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001870:	4a1d      	ldr	r2, [pc, #116]	; (80018e8 <MX_TIM5_Init+0x98>)
 8001872:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 8001874:	4b1b      	ldr	r3, [pc, #108]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001876:	2200      	movs	r2, #0
 8001878:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800187a:	4b1a      	ldr	r3, [pc, #104]	; (80018e4 <MX_TIM5_Init+0x94>)
 800187c:	2200      	movs	r2, #0
 800187e:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8001880:	4b18      	ldr	r3, [pc, #96]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001882:	f04f 32ff 	mov.w	r2, #4294967295
 8001886:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001888:	4b16      	ldr	r3, [pc, #88]	; (80018e4 <MX_TIM5_Init+0x94>)
 800188a:	2200      	movs	r2, #0
 800188c:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800188e:	4b15      	ldr	r3, [pc, #84]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001890:	2200      	movs	r2, #0
 8001892:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001894:	4813      	ldr	r0, [pc, #76]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001896:	f009 f9a2 	bl	800abde <HAL_TIM_Base_Init>
 800189a:	4603      	mov	r3, r0
 800189c:	2b00      	cmp	r3, #0
 800189e:	d001      	beq.n	80018a4 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 80018a0:	f002 f8d8 	bl	8003a54 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018a4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80018a8:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 80018aa:	f107 0310 	add.w	r3, r7, #16
 80018ae:	4619      	mov	r1, r3
 80018b0:	480c      	ldr	r0, [pc, #48]	; (80018e4 <MX_TIM5_Init+0x94>)
 80018b2:	f009 fc55 	bl	800b160 <HAL_TIM_ConfigClockSource>
 80018b6:	4603      	mov	r3, r0
 80018b8:	2b00      	cmp	r3, #0
 80018ba:	d001      	beq.n	80018c0 <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 80018bc:	f002 f8ca 	bl	8003a54 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80018c0:	2300      	movs	r3, #0
 80018c2:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018c4:	2300      	movs	r3, #0
 80018c6:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80018c8:	1d3b      	adds	r3, r7, #4
 80018ca:	4619      	mov	r1, r3
 80018cc:	4805      	ldr	r0, [pc, #20]	; (80018e4 <MX_TIM5_Init+0x94>)
 80018ce:	f00a f98b 	bl	800bbe8 <HAL_TIMEx_MasterConfigSynchronization>
 80018d2:	4603      	mov	r3, r0
 80018d4:	2b00      	cmp	r3, #0
 80018d6:	d001      	beq.n	80018dc <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 80018d8:	f002 f8bc 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80018dc:	bf00      	nop
 80018de:	3720      	adds	r7, #32
 80018e0:	46bd      	mov	sp, r7
 80018e2:	bd80      	pop	{r7, pc}
 80018e4:	20009c38 	.word	0x20009c38
 80018e8:	40000c00 	.word	0x40000c00

080018ec <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 80018ec:	b580      	push	{r7, lr}
 80018ee:	b09a      	sub	sp, #104	; 0x68
 80018f0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018f2:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80018f6:	2200      	movs	r2, #0
 80018f8:	601a      	str	r2, [r3, #0]
 80018fa:	605a      	str	r2, [r3, #4]
 80018fc:	609a      	str	r2, [r3, #8]
 80018fe:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001900:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8001904:	2200      	movs	r2, #0
 8001906:	601a      	str	r2, [r3, #0]
 8001908:	605a      	str	r2, [r3, #4]
 800190a:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800190c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001910:	2200      	movs	r2, #0
 8001912:	601a      	str	r2, [r3, #0]
 8001914:	605a      	str	r2, [r3, #4]
 8001916:	609a      	str	r2, [r3, #8]
 8001918:	60da      	str	r2, [r3, #12]
 800191a:	611a      	str	r2, [r3, #16]
 800191c:	615a      	str	r2, [r3, #20]
 800191e:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001920:	1d3b      	adds	r3, r7, #4
 8001922:	222c      	movs	r2, #44	; 0x2c
 8001924:	2100      	movs	r1, #0
 8001926:	4618      	mov	r0, r3
 8001928:	f00d fdaf 	bl	800f48a <memset>

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 800192c:	4b42      	ldr	r3, [pc, #264]	; (8001a38 <MX_TIM8_Init+0x14c>)
 800192e:	4a43      	ldr	r2, [pc, #268]	; (8001a3c <MX_TIM8_Init+0x150>)
 8001930:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 8001932:	4b41      	ldr	r3, [pc, #260]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001934:	2200      	movs	r2, #0
 8001936:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001938:	4b3f      	ldr	r3, [pc, #252]	; (8001a38 <MX_TIM8_Init+0x14c>)
 800193a:	2200      	movs	r2, #0
 800193c:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 800193e:	4b3e      	ldr	r3, [pc, #248]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001940:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001944:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001946:	4b3c      	ldr	r3, [pc, #240]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001948:	2200      	movs	r2, #0
 800194a:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 800194c:	4b3a      	ldr	r3, [pc, #232]	; (8001a38 <MX_TIM8_Init+0x14c>)
 800194e:	2200      	movs	r2, #0
 8001950:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001952:	4b39      	ldr	r3, [pc, #228]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001954:	2200      	movs	r2, #0
 8001956:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 8001958:	4837      	ldr	r0, [pc, #220]	; (8001a38 <MX_TIM8_Init+0x14c>)
 800195a:	f009 f940 	bl	800abde <HAL_TIM_Base_Init>
 800195e:	4603      	mov	r3, r0
 8001960:	2b00      	cmp	r3, #0
 8001962:	d001      	beq.n	8001968 <MX_TIM8_Init+0x7c>
  {
    Error_Handler();
 8001964:	f002 f876 	bl	8003a54 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001968:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800196c:	65bb      	str	r3, [r7, #88]	; 0x58
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 800196e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8001972:	4619      	mov	r1, r3
 8001974:	4830      	ldr	r0, [pc, #192]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001976:	f009 fbf3 	bl	800b160 <HAL_TIM_ConfigClockSource>
 800197a:	4603      	mov	r3, r0
 800197c:	2b00      	cmp	r3, #0
 800197e:	d001      	beq.n	8001984 <MX_TIM8_Init+0x98>
  {
    Error_Handler();
 8001980:	f002 f868 	bl	8003a54 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 8001984:	482c      	ldr	r0, [pc, #176]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001986:	f009 f97f 	bl	800ac88 <HAL_TIM_PWM_Init>
 800198a:	4603      	mov	r3, r0
 800198c:	2b00      	cmp	r3, #0
 800198e:	d001      	beq.n	8001994 <MX_TIM8_Init+0xa8>
  {
    Error_Handler();
 8001990:	f002 f860 	bl	8003a54 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001994:	2300      	movs	r3, #0
 8001996:	64fb      	str	r3, [r7, #76]	; 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001998:	2300      	movs	r3, #0
 800199a:	653b      	str	r3, [r7, #80]	; 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800199c:	2300      	movs	r3, #0
 800199e:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 80019a0:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80019a4:	4619      	mov	r1, r3
 80019a6:	4824      	ldr	r0, [pc, #144]	; (8001a38 <MX_TIM8_Init+0x14c>)
 80019a8:	f00a f91e 	bl	800bbe8 <HAL_TIMEx_MasterConfigSynchronization>
 80019ac:	4603      	mov	r3, r0
 80019ae:	2b00      	cmp	r3, #0
 80019b0:	d001      	beq.n	80019b6 <MX_TIM8_Init+0xca>
  {
    Error_Handler();
 80019b2:	f002 f84f 	bl	8003a54 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80019b6:	2360      	movs	r3, #96	; 0x60
 80019b8:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.Pulse = 0;
 80019ba:	2300      	movs	r3, #0
 80019bc:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80019be:	2300      	movs	r3, #0
 80019c0:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80019c2:	2300      	movs	r3, #0
 80019c4:	643b      	str	r3, [r7, #64]	; 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80019c6:	2300      	movs	r3, #0
 80019c8:	647b      	str	r3, [r7, #68]	; 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80019ca:	2300      	movs	r3, #0
 80019cc:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 80019ce:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80019d2:	220c      	movs	r2, #12
 80019d4:	4619      	mov	r1, r3
 80019d6:	4818      	ldr	r0, [pc, #96]	; (8001a38 <MX_TIM8_Init+0x14c>)
 80019d8:	f009 faaa 	bl	800af30 <HAL_TIM_PWM_ConfigChannel>
 80019dc:	4603      	mov	r3, r0
 80019de:	2b00      	cmp	r3, #0
 80019e0:	d001      	beq.n	80019e6 <MX_TIM8_Init+0xfa>
  {
    Error_Handler();
 80019e2:	f002 f837 	bl	8003a54 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80019e6:	2300      	movs	r3, #0
 80019e8:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80019ea:	2300      	movs	r3, #0
 80019ec:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80019ee:	2300      	movs	r3, #0
 80019f0:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80019f2:	2300      	movs	r3, #0
 80019f4:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80019f6:	2300      	movs	r3, #0
 80019f8:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80019fa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80019fe:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 8001a00:	2300      	movs	r3, #0
 8001a02:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8001a04:	2300      	movs	r3, #0
 8001a06:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8001a08:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001a0c:	627b      	str	r3, [r7, #36]	; 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 8001a0e:	2300      	movs	r3, #0
 8001a10:	62bb      	str	r3, [r7, #40]	; 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001a12:	2300      	movs	r3, #0
 8001a14:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 8001a16:	1d3b      	adds	r3, r7, #4
 8001a18:	4619      	mov	r1, r3
 8001a1a:	4807      	ldr	r0, [pc, #28]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001a1c:	f00a f972 	bl	800bd04 <HAL_TIMEx_ConfigBreakDeadTime>
 8001a20:	4603      	mov	r3, r0
 8001a22:	2b00      	cmp	r3, #0
 8001a24:	d001      	beq.n	8001a2a <MX_TIM8_Init+0x13e>
  {
    Error_Handler();
 8001a26:	f002 f815 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */
  HAL_TIM_MspPostInit(&htim8);
 8001a2a:	4803      	ldr	r0, [pc, #12]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001a2c:	f004 f9c6 	bl	8005dbc <HAL_TIM_MspPostInit>

}
 8001a30:	bf00      	nop
 8001a32:	3768      	adds	r7, #104	; 0x68
 8001a34:	46bd      	mov	sp, r7
 8001a36:	bd80      	pop	{r7, pc}
 8001a38:	20009ba8 	.word	0x20009ba8
 8001a3c:	40010400 	.word	0x40010400

08001a40 <MX_UART7_Init>:
  * @brief UART7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART7_Init(void)
{
 8001a40:	b580      	push	{r7, lr}
 8001a42:	af00      	add	r7, sp, #0
  /* USER CODE END UART7_Init 0 */

  /* USER CODE BEGIN UART7_Init 1 */

  /* USER CODE END UART7_Init 1 */
  huart7.Instance = UART7;
 8001a44:	4b14      	ldr	r3, [pc, #80]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a46:	4a15      	ldr	r2, [pc, #84]	; (8001a9c <MX_UART7_Init+0x5c>)
 8001a48:	601a      	str	r2, [r3, #0]
  huart7.Init.BaudRate = 115200;
 8001a4a:	4b13      	ldr	r3, [pc, #76]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a4c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001a50:	605a      	str	r2, [r3, #4]
  huart7.Init.WordLength = UART_WORDLENGTH_8B;
 8001a52:	4b11      	ldr	r3, [pc, #68]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a54:	2200      	movs	r2, #0
 8001a56:	609a      	str	r2, [r3, #8]
  huart7.Init.StopBits = UART_STOPBITS_1;
 8001a58:	4b0f      	ldr	r3, [pc, #60]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	60da      	str	r2, [r3, #12]
  huart7.Init.Parity = UART_PARITY_NONE;
 8001a5e:	4b0e      	ldr	r3, [pc, #56]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a60:	2200      	movs	r2, #0
 8001a62:	611a      	str	r2, [r3, #16]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8001a64:	4b0c      	ldr	r3, [pc, #48]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a66:	220c      	movs	r2, #12
 8001a68:	615a      	str	r2, [r3, #20]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001a6a:	4b0b      	ldr	r3, [pc, #44]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a6c:	2200      	movs	r2, #0
 8001a6e:	619a      	str	r2, [r3, #24]
  huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 8001a70:	4b09      	ldr	r3, [pc, #36]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a72:	2200      	movs	r2, #0
 8001a74:	61da      	str	r2, [r3, #28]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001a76:	4b08      	ldr	r3, [pc, #32]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a78:	2200      	movs	r2, #0
 8001a7a:	621a      	str	r2, [r3, #32]
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001a7c:	4b06      	ldr	r3, [pc, #24]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a7e:	2200      	movs	r2, #0
 8001a80:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8001a82:	4805      	ldr	r0, [pc, #20]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a84:	f00a f9da 	bl	800be3c <HAL_UART_Init>
 8001a88:	4603      	mov	r3, r0
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d001      	beq.n	8001a92 <MX_UART7_Init+0x52>
  {
    Error_Handler();
 8001a8e:	f001 ffe1 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN UART7_Init 2 */

  /* USER CODE END UART7_Init 2 */

}
 8001a92:	bf00      	nop
 8001a94:	bd80      	pop	{r7, pc}
 8001a96:	bf00      	nop
 8001a98:	20009b24 	.word	0x20009b24
 8001a9c:	40007800 	.word	0x40007800

08001aa0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001aa0:	b580      	push	{r7, lr}
 8001aa2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001aa4:	4b14      	ldr	r3, [pc, #80]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001aa6:	4a15      	ldr	r2, [pc, #84]	; (8001afc <MX_USART1_UART_Init+0x5c>)
 8001aa8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8001aaa:	4b13      	ldr	r3, [pc, #76]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001aac:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001ab0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001ab2:	4b11      	ldr	r3, [pc, #68]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ab4:	2200      	movs	r2, #0
 8001ab6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001ab8:	4b0f      	ldr	r3, [pc, #60]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001aba:	2200      	movs	r2, #0
 8001abc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001abe:	4b0e      	ldr	r3, [pc, #56]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ac0:	2200      	movs	r2, #0
 8001ac2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001ac4:	4b0c      	ldr	r3, [pc, #48]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ac6:	220c      	movs	r2, #12
 8001ac8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001aca:	4b0b      	ldr	r3, [pc, #44]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001acc:	2200      	movs	r2, #0
 8001ace:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001ad0:	4b09      	ldr	r3, [pc, #36]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ad2:	2200      	movs	r2, #0
 8001ad4:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001ad6:	4b08      	ldr	r3, [pc, #32]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ad8:	2200      	movs	r2, #0
 8001ada:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001adc:	4b06      	ldr	r3, [pc, #24]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ade:	2200      	movs	r2, #0
 8001ae0:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001ae2:	4805      	ldr	r0, [pc, #20]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ae4:	f00a f9aa 	bl	800be3c <HAL_UART_Init>
 8001ae8:	4603      	mov	r3, r0
 8001aea:	2b00      	cmp	r3, #0
 8001aec:	d001      	beq.n	8001af2 <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 8001aee:	f001 ffb1 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001af2:	bf00      	nop
 8001af4:	bd80      	pop	{r7, pc}
 8001af6:	bf00      	nop
 8001af8:	20009df0 	.word	0x20009df0
 8001afc:	40011000 	.word	0x40011000

08001b00 <MX_USART6_UART_Init>:
  * @brief USART6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART6_UART_Init(void)
{
 8001b00:	b580      	push	{r7, lr}
 8001b02:	af00      	add	r7, sp, #0
  /* USER CODE END USART6_Init 0 */

  /* USER CODE BEGIN USART6_Init 1 */

  /* USER CODE END USART6_Init 1 */
  huart6.Instance = USART6;
 8001b04:	4b14      	ldr	r3, [pc, #80]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b06:	4a15      	ldr	r2, [pc, #84]	; (8001b5c <MX_USART6_UART_Init+0x5c>)
 8001b08:	601a      	str	r2, [r3, #0]
  huart6.Init.BaudRate = 115200;
 8001b0a:	4b13      	ldr	r3, [pc, #76]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b0c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001b10:	605a      	str	r2, [r3, #4]
  huart6.Init.WordLength = UART_WORDLENGTH_8B;
 8001b12:	4b11      	ldr	r3, [pc, #68]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b14:	2200      	movs	r2, #0
 8001b16:	609a      	str	r2, [r3, #8]
  huart6.Init.StopBits = UART_STOPBITS_1;
 8001b18:	4b0f      	ldr	r3, [pc, #60]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b1a:	2200      	movs	r2, #0
 8001b1c:	60da      	str	r2, [r3, #12]
  huart6.Init.Parity = UART_PARITY_NONE;
 8001b1e:	4b0e      	ldr	r3, [pc, #56]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b20:	2200      	movs	r2, #0
 8001b22:	611a      	str	r2, [r3, #16]
  huart6.Init.Mode = UART_MODE_TX_RX;
 8001b24:	4b0c      	ldr	r3, [pc, #48]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b26:	220c      	movs	r2, #12
 8001b28:	615a      	str	r2, [r3, #20]
  huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001b2a:	4b0b      	ldr	r3, [pc, #44]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	619a      	str	r2, [r3, #24]
  huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 8001b30:	4b09      	ldr	r3, [pc, #36]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b32:	2200      	movs	r2, #0
 8001b34:	61da      	str	r2, [r3, #28]
  huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001b36:	4b08      	ldr	r3, [pc, #32]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b38:	2200      	movs	r2, #0
 8001b3a:	621a      	str	r2, [r3, #32]
  huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001b3c:	4b06      	ldr	r3, [pc, #24]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b3e:	2200      	movs	r2, #0
 8001b40:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart6) != HAL_OK)
 8001b42:	4805      	ldr	r0, [pc, #20]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b44:	f00a f97a 	bl	800be3c <HAL_UART_Init>
 8001b48:	4603      	mov	r3, r0
 8001b4a:	2b00      	cmp	r3, #0
 8001b4c:	d001      	beq.n	8001b52 <MX_USART6_UART_Init+0x52>
  {
    Error_Handler();
 8001b4e:	f001 ff81 	bl	8003a54 <Error_Handler>
  }
  /* USER CODE BEGIN USART6_Init 2 */

  /* USER CODE END USART6_Init 2 */

}
 8001b52:	bf00      	nop
 8001b54:	bd80      	pop	{r7, pc}
 8001b56:	bf00      	nop
 8001b58:	20009ee8 	.word	0x20009ee8
 8001b5c:	40011400 	.word	0x40011400

08001b60 <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 8001b60:	b580      	push	{r7, lr}
 8001b62:	b088      	sub	sp, #32
 8001b64:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 8001b66:	1d3b      	adds	r3, r7, #4
 8001b68:	2200      	movs	r2, #0
 8001b6a:	601a      	str	r2, [r3, #0]
 8001b6c:	605a      	str	r2, [r3, #4]
 8001b6e:	609a      	str	r2, [r3, #8]
 8001b70:	60da      	str	r2, [r3, #12]
 8001b72:	611a      	str	r2, [r3, #16]
 8001b74:	615a      	str	r2, [r3, #20]
 8001b76:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001b78:	4b1e      	ldr	r3, [pc, #120]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b7a:	4a1f      	ldr	r2, [pc, #124]	; (8001bf8 <MX_FMC_Init+0x98>)
 8001b7c:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001b7e:	4b1d      	ldr	r3, [pc, #116]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b80:	2200      	movs	r2, #0
 8001b82:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001b84:	4b1b      	ldr	r3, [pc, #108]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b86:	2200      	movs	r2, #0
 8001b88:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001b8a:	4b1a      	ldr	r3, [pc, #104]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b8c:	2204      	movs	r2, #4
 8001b8e:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001b90:	4b18      	ldr	r3, [pc, #96]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b92:	2210      	movs	r2, #16
 8001b94:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001b96:	4b17      	ldr	r3, [pc, #92]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b98:	2240      	movs	r2, #64	; 0x40
 8001b9a:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_1;
 8001b9c:	4b15      	ldr	r3, [pc, #84]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b9e:	2280      	movs	r2, #128	; 0x80
 8001ba0:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001ba2:	4b14      	ldr	r3, [pc, #80]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001ba4:	2200      	movs	r2, #0
 8001ba6:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001ba8:	4b12      	ldr	r3, [pc, #72]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001baa:	2200      	movs	r2, #0
 8001bac:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001bae:	4b11      	ldr	r3, [pc, #68]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001bb0:	2200      	movs	r2, #0
 8001bb2:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8001bb4:	4b0f      	ldr	r3, [pc, #60]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001bb6:	2200      	movs	r2, #0
 8001bb8:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 16;
 8001bba:	2310      	movs	r3, #16
 8001bbc:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 16;
 8001bbe:	2310      	movs	r3, #16
 8001bc0:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 16;
 8001bc2:	2310      	movs	r3, #16
 8001bc4:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 16;
 8001bc6:	2310      	movs	r3, #16
 8001bc8:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 16;
 8001bca:	2310      	movs	r3, #16
 8001bcc:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 16;
 8001bce:	2310      	movs	r3, #16
 8001bd0:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 16;
 8001bd2:	2310      	movs	r3, #16
 8001bd4:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001bd6:	1d3b      	adds	r3, r7, #4
 8001bd8:	4619      	mov	r1, r3
 8001bda:	4806      	ldr	r0, [pc, #24]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001bdc:	f008 feee 	bl	800a9bc <HAL_SDRAM_Init>
 8001be0:	4603      	mov	r3, r0
 8001be2:	2b00      	cmp	r3, #0
 8001be4:	d001      	beq.n	8001bea <MX_FMC_Init+0x8a>
  {
    Error_Handler( );
 8001be6:	f001 ff35 	bl	8003a54 <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */

  /* USER CODE END FMC_Init 2 */
}
 8001bea:	bf00      	nop
 8001bec:	3720      	adds	r7, #32
 8001bee:	46bd      	mov	sp, r7
 8001bf0:	bd80      	pop	{r7, pc}
 8001bf2:	bf00      	nop
 8001bf4:	20009fec 	.word	0x20009fec
 8001bf8:	a0000140 	.word	0xa0000140

08001bfc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001bfc:	b580      	push	{r7, lr}
 8001bfe:	b090      	sub	sp, #64	; 0x40
 8001c00:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c02:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001c06:	2200      	movs	r2, #0
 8001c08:	601a      	str	r2, [r3, #0]
 8001c0a:	605a      	str	r2, [r3, #4]
 8001c0c:	609a      	str	r2, [r3, #8]
 8001c0e:	60da      	str	r2, [r3, #12]
 8001c10:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001c12:	4bb0      	ldr	r3, [pc, #704]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c16:	4aaf      	ldr	r2, [pc, #700]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c18:	f043 0310 	orr.w	r3, r3, #16
 8001c1c:	6313      	str	r3, [r2, #48]	; 0x30
 8001c1e:	4bad      	ldr	r3, [pc, #692]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c22:	f003 0310 	and.w	r3, r3, #16
 8001c26:	62bb      	str	r3, [r7, #40]	; 0x28
 8001c28:	6abb      	ldr	r3, [r7, #40]	; 0x28
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c2a:	4baa      	ldr	r3, [pc, #680]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c2e:	4aa9      	ldr	r2, [pc, #676]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c30:	f043 0302 	orr.w	r3, r3, #2
 8001c34:	6313      	str	r3, [r2, #48]	; 0x30
 8001c36:	4ba7      	ldr	r3, [pc, #668]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c3a:	f003 0302 	and.w	r3, r3, #2
 8001c3e:	627b      	str	r3, [r7, #36]	; 0x24
 8001c40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c42:	4ba4      	ldr	r3, [pc, #656]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c46:	4aa3      	ldr	r2, [pc, #652]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c48:	f043 0301 	orr.w	r3, r3, #1
 8001c4c:	6313      	str	r3, [r2, #48]	; 0x30
 8001c4e:	4ba1      	ldr	r3, [pc, #644]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c52:	f003 0301 	and.w	r3, r3, #1
 8001c56:	623b      	str	r3, [r7, #32]
 8001c58:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c5a:	4b9e      	ldr	r3, [pc, #632]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c5e:	4a9d      	ldr	r2, [pc, #628]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c60:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001c64:	6313      	str	r3, [r2, #48]	; 0x30
 8001c66:	4b9b      	ldr	r3, [pc, #620]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c6a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001c6e:	61fb      	str	r3, [r7, #28]
 8001c70:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001c72:	4b98      	ldr	r3, [pc, #608]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c76:	4a97      	ldr	r2, [pc, #604]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c78:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001c7c:	6313      	str	r3, [r2, #48]	; 0x30
 8001c7e:	4b95      	ldr	r3, [pc, #596]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c82:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001c86:	61bb      	str	r3, [r7, #24]
 8001c88:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c8a:	4b92      	ldr	r3, [pc, #584]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c8e:	4a91      	ldr	r2, [pc, #580]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c90:	f043 0308 	orr.w	r3, r3, #8
 8001c94:	6313      	str	r3, [r2, #48]	; 0x30
 8001c96:	4b8f      	ldr	r3, [pc, #572]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c9a:	f003 0308 	and.w	r3, r3, #8
 8001c9e:	617b      	str	r3, [r7, #20]
 8001ca0:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001ca2:	4b8c      	ldr	r3, [pc, #560]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001ca4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ca6:	4a8b      	ldr	r2, [pc, #556]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001ca8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001cac:	6313      	str	r3, [r2, #48]	; 0x30
 8001cae:	4b89      	ldr	r3, [pc, #548]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cb2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001cb6:	613b      	str	r3, [r7, #16]
 8001cb8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001cba:	4b86      	ldr	r3, [pc, #536]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cbe:	4a85      	ldr	r2, [pc, #532]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cc0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001cc4:	6313      	str	r3, [r2, #48]	; 0x30
 8001cc6:	4b83      	ldr	r3, [pc, #524]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cca:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001cce:	60fb      	str	r3, [r7, #12]
 8001cd0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cd2:	4b80      	ldr	r3, [pc, #512]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cd6:	4a7f      	ldr	r2, [pc, #508]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cd8:	f043 0304 	orr.w	r3, r3, #4
 8001cdc:	6313      	str	r3, [r2, #48]	; 0x30
 8001cde:	4b7d      	ldr	r3, [pc, #500]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001ce0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ce2:	f003 0304 	and.w	r3, r3, #4
 8001ce6:	60bb      	str	r3, [r7, #8]
 8001ce8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cea:	4b7a      	ldr	r3, [pc, #488]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cee:	4a79      	ldr	r2, [pc, #484]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cf0:	f043 0320 	orr.w	r3, r3, #32
 8001cf4:	6313      	str	r3, [r2, #48]	; 0x30
 8001cf6:	4b77      	ldr	r3, [pc, #476]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cfa:	f003 0320 	and.w	r3, r3, #32
 8001cfe:	607b      	str	r3, [r7, #4]
 8001d00:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001d02:	4b74      	ldr	r3, [pc, #464]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001d04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d06:	4a73      	ldr	r2, [pc, #460]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001d08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001d0c:	6313      	str	r3, [r2, #48]	; 0x30
 8001d0e:	4b71      	ldr	r3, [pc, #452]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001d10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d12:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001d16:	603b      	str	r3, [r7, #0]
 8001d18:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, LED14_Pin|LED15_Pin, GPIO_PIN_RESET);
 8001d1a:	2200      	movs	r2, #0
 8001d1c:	2160      	movs	r1, #96	; 0x60
 8001d1e:	486e      	ldr	r0, [pc, #440]	; (8001ed8 <MX_GPIO_Init+0x2dc>)
 8001d20:	f006 f83a 	bl	8007d98 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 8001d24:	2201      	movs	r2, #1
 8001d26:	2120      	movs	r1, #32
 8001d28:	486c      	ldr	r0, [pc, #432]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001d2a:	f006 f835 	bl	8007d98 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED16_GPIO_Port, LED16_Pin, GPIO_PIN_RESET);
 8001d2e:	2200      	movs	r2, #0
 8001d30:	2108      	movs	r1, #8
 8001d32:	486a      	ldr	r0, [pc, #424]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001d34:	f006 f830 	bl	8007d98 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED3_GPIO_Port, LED3_Pin, GPIO_PIN_RESET);
 8001d38:	2200      	movs	r2, #0
 8001d3a:	2108      	movs	r1, #8
 8001d3c:	4868      	ldr	r0, [pc, #416]	; (8001ee0 <MX_GPIO_Init+0x2e4>)
 8001d3e:	f006 f82b 	bl	8007d98 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8001d42:	2201      	movs	r2, #1
 8001d44:	2108      	movs	r1, #8
 8001d46:	4867      	ldr	r0, [pc, #412]	; (8001ee4 <MX_GPIO_Init+0x2e8>)
 8001d48:	f006 f826 	bl	8007d98 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8001d4c:	2201      	movs	r2, #1
 8001d4e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001d52:	4863      	ldr	r0, [pc, #396]	; (8001ee0 <MX_GPIO_Init+0x2e4>)
 8001d54:	f006 f820 	bl	8007d98 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOH, LED13_Pin|LED17_Pin|LED11_Pin|LED12_Pin
 8001d58:	2200      	movs	r2, #0
 8001d5a:	f645 6140 	movw	r1, #24128	; 0x5e40
 8001d5e:	4862      	ldr	r0, [pc, #392]	; (8001ee8 <MX_GPIO_Init+0x2ec>)
 8001d60:	f006 f81a 	bl	8007d98 <HAL_GPIO_WritePin>
                          |LED2_Pin|LED18_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(EXT_RST_GPIO_Port, EXT_RST_Pin, GPIO_PIN_RESET);
 8001d64:	2200      	movs	r2, #0
 8001d66:	2108      	movs	r1, #8
 8001d68:	4860      	ldr	r0, [pc, #384]	; (8001eec <MX_GPIO_Init+0x2f0>)
 8001d6a:	f006 f815 	bl	8007d98 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PE3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001d6e:	2308      	movs	r3, #8
 8001d70:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001d72:	2300      	movs	r3, #0
 8001d74:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d76:	2300      	movs	r3, #0
 8001d78:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d7a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001d7e:	4619      	mov	r1, r3
 8001d80:	4855      	ldr	r0, [pc, #340]	; (8001ed8 <MX_GPIO_Init+0x2dc>)
 8001d82:	f005 fd3d 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D2_Pin
                           ULPI_D1_Pin ULPI_D4_Pin */
  GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D2_Pin
 8001d86:	f643 0323 	movw	r3, #14371	; 0x3823
 8001d8a:	62fb      	str	r3, [r7, #44]	; 0x2c
                          |ULPI_D1_Pin|ULPI_D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d8c:	2302      	movs	r3, #2
 8001d8e:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d90:	2300      	movs	r3, #0
 8001d92:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d94:	2303      	movs	r3, #3
 8001d96:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001d98:	230a      	movs	r3, #10
 8001d9a:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d9c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001da0:	4619      	mov	r1, r3
 8001da2:	4853      	ldr	r0, [pc, #332]	; (8001ef0 <MX_GPIO_Init+0x2f4>)
 8001da4:	f005 fd2c 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pins : BP2_Pin BP1_Pin */
  GPIO_InitStruct.Pin = BP2_Pin|BP1_Pin;
 8001da8:	f44f 4301 	mov.w	r3, #33024	; 0x8100
 8001dac:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001dae:	4b51      	ldr	r3, [pc, #324]	; (8001ef4 <MX_GPIO_Init+0x2f8>)
 8001db0:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001db2:	2300      	movs	r3, #0
 8001db4:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001db6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001dba:	4619      	mov	r1, r3
 8001dbc:	484e      	ldr	r0, [pc, #312]	; (8001ef8 <MX_GPIO_Init+0x2fc>)
 8001dbe:	f005 fd1f 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED14_Pin LED15_Pin */
  GPIO_InitStruct.Pin = LED14_Pin|LED15_Pin;
 8001dc2:	2360      	movs	r3, #96	; 0x60
 8001dc4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001dc6:	2301      	movs	r3, #1
 8001dc8:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dca:	2300      	movs	r3, #0
 8001dcc:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001dce:	2300      	movs	r3, #0
 8001dd0:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dd2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001dd6:	4619      	mov	r1, r3
 8001dd8:	483f      	ldr	r0, [pc, #252]	; (8001ed8 <MX_GPIO_Init+0x2dc>)
 8001dda:	f005 fd11 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_VBUS_Pin */
  GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 8001dde:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001de2:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001de4:	2300      	movs	r3, #0
 8001de6:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001de8:	2300      	movs	r3, #0
 8001dea:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 8001dec:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001df0:	4619      	mov	r1, r3
 8001df2:	4842      	ldr	r0, [pc, #264]	; (8001efc <MX_GPIO_Init+0x300>)
 8001df4:	f005 fd04 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pin : Audio_INT_Pin */
  GPIO_InitStruct.Pin = Audio_INT_Pin;
 8001df8:	2340      	movs	r3, #64	; 0x40
 8001dfa:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8001dfc:	4b40      	ldr	r3, [pc, #256]	; (8001f00 <MX_GPIO_Init+0x304>)
 8001dfe:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e00:	2300      	movs	r3, #0
 8001e02:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 8001e04:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e08:	4619      	mov	r1, r3
 8001e0a:	4834      	ldr	r0, [pc, #208]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001e0c:	f005 fcf8 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pins : OTG_FS_PowerSwitchOn_Pin LED16_Pin */
  GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin|LED16_Pin;
 8001e10:	2328      	movs	r3, #40	; 0x28
 8001e12:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e14:	2301      	movs	r3, #1
 8001e16:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e18:	2300      	movs	r3, #0
 8001e1a:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e1c:	2300      	movs	r3, #0
 8001e1e:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e20:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e24:	4619      	mov	r1, r3
 8001e26:	482d      	ldr	r0, [pc, #180]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001e28:	f005 fcea 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED3_Pin LCD_DISP_Pin */
  GPIO_InitStruct.Pin = LED3_Pin|LCD_DISP_Pin;
 8001e2c:	f241 0308 	movw	r3, #4104	; 0x1008
 8001e30:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e32:	2301      	movs	r3, #1
 8001e34:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e36:	2300      	movs	r3, #0
 8001e38:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e3a:	2300      	movs	r3, #0
 8001e3c:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e3e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e42:	4619      	mov	r1, r3
 8001e44:	4826      	ldr	r0, [pc, #152]	; (8001ee0 <MX_GPIO_Init+0x2e4>)
 8001e46:	f005 fcdb 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pin : uSD_Detect_Pin */
  GPIO_InitStruct.Pin = uSD_Detect_Pin;
 8001e4a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001e4e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e50:	2300      	movs	r3, #0
 8001e52:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e54:	2300      	movs	r3, #0
 8001e56:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 8001e58:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e5c:	4619      	mov	r1, r3
 8001e5e:	4829      	ldr	r0, [pc, #164]	; (8001f04 <MX_GPIO_Init+0x308>)
 8001e60:	f005 fcce 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_BL_CTRL_Pin */
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 8001e64:	2308      	movs	r3, #8
 8001e66:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e68:	2301      	movs	r3, #1
 8001e6a:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e6c:	2300      	movs	r3, #0
 8001e6e:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e70:	2300      	movs	r3, #0
 8001e72:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001e74:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e78:	4619      	mov	r1, r3
 8001e7a:	481a      	ldr	r0, [pc, #104]	; (8001ee4 <MX_GPIO_Init+0x2e8>)
 8001e7c:	f005 fcc0 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
  GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 8001e80:	2310      	movs	r3, #16
 8001e82:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e84:	2300      	movs	r3, #0
 8001e86:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e88:	2300      	movs	r3, #0
 8001e8a:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 8001e8c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e90:	4619      	mov	r1, r3
 8001e92:	4812      	ldr	r0, [pc, #72]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001e94:	f005 fcb4 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pins : TP3_Pin NC2_Pin */
  GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 8001e98:	f248 0304 	movw	r3, #32772	; 0x8004
 8001e9c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ea2:	2300      	movs	r3, #0
 8001ea4:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001ea6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001eaa:	4619      	mov	r1, r3
 8001eac:	480e      	ldr	r0, [pc, #56]	; (8001ee8 <MX_GPIO_Init+0x2ec>)
 8001eae:	f005 fca7 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED13_Pin LED17_Pin LED11_Pin LED12_Pin
                           LED2_Pin LED18_Pin */
  GPIO_InitStruct.Pin = LED13_Pin|LED17_Pin|LED11_Pin|LED12_Pin
 8001eb2:	f645 6340 	movw	r3, #24128	; 0x5e40
 8001eb6:	62fb      	str	r3, [r7, #44]	; 0x2c
                          |LED2_Pin|LED18_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001eb8:	2301      	movs	r3, #1
 8001eba:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ec0:	2300      	movs	r3, #0
 8001ec2:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001ec4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001ec8:	4619      	mov	r1, r3
 8001eca:	4807      	ldr	r0, [pc, #28]	; (8001ee8 <MX_GPIO_Init+0x2ec>)
 8001ecc:	f005 fc98 	bl	8007800 <HAL_GPIO_Init>
 8001ed0:	e01a      	b.n	8001f08 <MX_GPIO_Init+0x30c>
 8001ed2:	bf00      	nop
 8001ed4:	40023800 	.word	0x40023800
 8001ed8:	40021000 	.word	0x40021000
 8001edc:	40020c00 	.word	0x40020c00
 8001ee0:	40022000 	.word	0x40022000
 8001ee4:	40022800 	.word	0x40022800
 8001ee8:	40021c00 	.word	0x40021c00
 8001eec:	40021800 	.word	0x40021800
 8001ef0:	40020400 	.word	0x40020400
 8001ef4:	10110000 	.word	0x10110000
 8001ef8:	40020000 	.word	0x40020000
 8001efc:	40022400 	.word	0x40022400
 8001f00:	10120000 	.word	0x10120000
 8001f04:	40020800 	.word	0x40020800

  /*Configure GPIO pin : LCD_INT_Pin */
  GPIO_InitStruct.Pin = LCD_INT_Pin;
 8001f08:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f0c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8001f0e:	4b3a      	ldr	r3, [pc, #232]	; (8001ff8 <MX_GPIO_Init+0x3fc>)
 8001f10:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f12:	2300      	movs	r3, #0
 8001f14:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 8001f16:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f1a:	4619      	mov	r1, r3
 8001f1c:	4837      	ldr	r0, [pc, #220]	; (8001ffc <MX_GPIO_Init+0x400>)
 8001f1e:	f005 fc6f 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pin : ULPI_NXT_Pin */
  GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 8001f22:	2310      	movs	r3, #16
 8001f24:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f26:	2302      	movs	r3, #2
 8001f28:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f2a:	2300      	movs	r3, #0
 8001f2c:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f2e:	2303      	movs	r3, #3
 8001f30:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001f32:	230a      	movs	r3, #10
 8001f34:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 8001f36:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f3a:	4619      	mov	r1, r3
 8001f3c:	4830      	ldr	r0, [pc, #192]	; (8002000 <MX_GPIO_Init+0x404>)
 8001f3e:	f005 fc5f 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pin : BP_joystick_Pin */
  GPIO_InitStruct.Pin = BP_joystick_Pin;
 8001f42:	2380      	movs	r3, #128	; 0x80
 8001f44:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001f46:	4b2f      	ldr	r3, [pc, #188]	; (8002004 <MX_GPIO_Init+0x408>)
 8001f48:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(BP_joystick_GPIO_Port, &GPIO_InitStruct);
 8001f4e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f52:	4619      	mov	r1, r3
 8001f54:	482c      	ldr	r0, [pc, #176]	; (8002008 <MX_GPIO_Init+0x40c>)
 8001f56:	f005 fc53 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
  GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 8001f5a:	2305      	movs	r3, #5
 8001f5c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f5e:	2302      	movs	r3, #2
 8001f60:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f62:	2300      	movs	r3, #0
 8001f64:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f66:	2303      	movs	r3, #3
 8001f68:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001f6a:	230a      	movs	r3, #10
 8001f6c:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f6e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f72:	4619      	mov	r1, r3
 8001f74:	4825      	ldr	r0, [pc, #148]	; (800200c <MX_GPIO_Init+0x410>)
 8001f76:	f005 fc43 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pin : EXT_RST_Pin */
  GPIO_InitStruct.Pin = EXT_RST_Pin;
 8001f7a:	2308      	movs	r3, #8
 8001f7c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f7e:	2301      	movs	r3, #1
 8001f80:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f82:	2300      	movs	r3, #0
 8001f84:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f86:	2300      	movs	r3, #0
 8001f88:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(EXT_RST_GPIO_Port, &GPIO_InitStruct);
 8001f8a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f8e:	4619      	mov	r1, r3
 8001f90:	481d      	ldr	r0, [pc, #116]	; (8002008 <MX_GPIO_Init+0x40c>)
 8001f92:	f005 fc35 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pin : RMII_RXER_Pin */
  GPIO_InitStruct.Pin = RMII_RXER_Pin;
 8001f96:	2304      	movs	r3, #4
 8001f98:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001f9a:	2300      	movs	r3, #0
 8001f9c:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 8001fa2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001fa6:	4619      	mov	r1, r3
 8001fa8:	4817      	ldr	r0, [pc, #92]	; (8002008 <MX_GPIO_Init+0x40c>)
 8001faa:	f005 fc29 	bl	8007800 <HAL_GPIO_Init>

  /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
  GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 8001fae:	2328      	movs	r3, #40	; 0x28
 8001fb0:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fb2:	2302      	movs	r3, #2
 8001fb4:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fb6:	2300      	movs	r3, #0
 8001fb8:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fba:	2303      	movs	r3, #3
 8001fbc:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001fbe:	230a      	movs	r3, #10
 8001fc0:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fc2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001fc6:	4619      	mov	r1, r3
 8001fc8:	4811      	ldr	r0, [pc, #68]	; (8002010 <MX_GPIO_Init+0x414>)
 8001fca:	f005 fc19 	bl	8007800 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 8001fce:	2200      	movs	r2, #0
 8001fd0:	2105      	movs	r1, #5
 8001fd2:	2017      	movs	r0, #23
 8001fd4:	f004 feb2 	bl	8006d3c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001fd8:	2017      	movs	r0, #23
 8001fda:	f004 fecb 	bl	8006d74 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8001fde:	2200      	movs	r2, #0
 8001fe0:	2105      	movs	r1, #5
 8001fe2:	2028      	movs	r0, #40	; 0x28
 8001fe4:	f004 feaa 	bl	8006d3c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001fe8:	2028      	movs	r0, #40	; 0x28
 8001fea:	f004 fec3 	bl	8006d74 <HAL_NVIC_EnableIRQ>

}
 8001fee:	bf00      	nop
 8001ff0:	3740      	adds	r7, #64	; 0x40
 8001ff2:	46bd      	mov	sp, r7
 8001ff4:	bd80      	pop	{r7, pc}
 8001ff6:	bf00      	nop
 8001ff8:	10120000 	.word	0x10120000
 8001ffc:	40022000 	.word	0x40022000
 8002000:	40021c00 	.word	0x40021c00
 8002004:	10110000 	.word	0x10110000
 8002008:	40021800 	.word	0x40021800
 800200c:	40020800 	.word	0x40020800
 8002010:	40020000 	.word	0x40020000

08002014 <HAL_GPIO_EXTI_Callback>:

/*
 * Fonction d'interuption
 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8002014:	b480      	push	{r7}
 8002016:	b083      	sub	sp, #12
 8002018:	af00      	add	r7, sp, #0
 800201a:	4603      	mov	r3, r0
 800201c:	80fb      	strh	r3, [r7, #6]
	// PIN_7 : appuie joystick, on passe au menu sélectionné
	if(GPIO_Pin == GPIO_PIN_7) etat = etat_int;
 800201e:	88fb      	ldrh	r3, [r7, #6]
 8002020:	2b80      	cmp	r3, #128	; 0x80
 8002022:	d104      	bne.n	800202e <HAL_GPIO_EXTI_Callback+0x1a>
 8002024:	4b0c      	ldr	r3, [pc, #48]	; (8002058 <HAL_GPIO_EXTI_Callback+0x44>)
 8002026:	781a      	ldrb	r2, [r3, #0]
 8002028:	4b0c      	ldr	r3, [pc, #48]	; (800205c <HAL_GPIO_EXTI_Callback+0x48>)
 800202a:	701a      	strb	r2, [r3, #0]
	// PIN_8 : appuie bouton 1, on démarre l'enregistrement sur PC
	else if(GPIO_Pin==GPIO_PIN_8) etat = 8;
	// PIN_15 : appuie sur le bouton 2, on clear l'écran de dessin
	else if(GPIO_Pin==GPIO_PIN_15) etat = 7;
}
 800202c:	e00e      	b.n	800204c <HAL_GPIO_EXTI_Callback+0x38>
	else if(GPIO_Pin==GPIO_PIN_8) etat = 8;
 800202e:	88fb      	ldrh	r3, [r7, #6]
 8002030:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002034:	d103      	bne.n	800203e <HAL_GPIO_EXTI_Callback+0x2a>
 8002036:	4b09      	ldr	r3, [pc, #36]	; (800205c <HAL_GPIO_EXTI_Callback+0x48>)
 8002038:	2208      	movs	r2, #8
 800203a:	701a      	strb	r2, [r3, #0]
}
 800203c:	e006      	b.n	800204c <HAL_GPIO_EXTI_Callback+0x38>
	else if(GPIO_Pin==GPIO_PIN_15) etat = 7;
 800203e:	88fb      	ldrh	r3, [r7, #6]
 8002040:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002044:	d102      	bne.n	800204c <HAL_GPIO_EXTI_Callback+0x38>
 8002046:	4b05      	ldr	r3, [pc, #20]	; (800205c <HAL_GPIO_EXTI_Callback+0x48>)
 8002048:	2207      	movs	r2, #7
 800204a:	701a      	strb	r2, [r3, #0]
}
 800204c:	bf00      	nop
 800204e:	370c      	adds	r7, #12
 8002050:	46bd      	mov	sp, r7
 8002052:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002056:	4770      	bx	lr
 8002058:	2000139f 	.word	0x2000139f
 800205c:	2000139e 	.word	0x2000139e

08002060 <TestConditionBord>:
/*
test les condition de bord en un point pour ne pas ecrire
hors de l'écran.
*/
char TestConditionBord(uint16_t x, uint16_t y, uint16_t rad)
{
 8002060:	b480      	push	{r7}
 8002062:	b085      	sub	sp, #20
 8002064:	af00      	add	r7, sp, #0
 8002066:	4603      	mov	r3, r0
 8002068:	80fb      	strh	r3, [r7, #6]
 800206a:	460b      	mov	r3, r1
 800206c:	80bb      	strh	r3, [r7, #4]
 800206e:	4613      	mov	r3, r2
 8002070:	807b      	strh	r3, [r7, #2]
	char bool = 0;
 8002072:	2300      	movs	r3, #0
 8002074:	73fb      	strb	r3, [r7, #15]
	if(((x-rad)>=0) && ((x+rad)<=480-5-taille_menu) && ((y-rad)>=0) && ((y+rad)<246))
 8002076:	88fa      	ldrh	r2, [r7, #6]
 8002078:	887b      	ldrh	r3, [r7, #2]
 800207a:	1ad3      	subs	r3, r2, r3
 800207c:	2b00      	cmp	r3, #0
 800207e:	db11      	blt.n	80020a4 <TestConditionBord+0x44>
 8002080:	88fa      	ldrh	r2, [r7, #6]
 8002082:	887b      	ldrh	r3, [r7, #2]
 8002084:	4413      	add	r3, r2
 8002086:	f5b3 7fd5 	cmp.w	r3, #426	; 0x1aa
 800208a:	da0b      	bge.n	80020a4 <TestConditionBord+0x44>
 800208c:	88ba      	ldrh	r2, [r7, #4]
 800208e:	887b      	ldrh	r3, [r7, #2]
 8002090:	1ad3      	subs	r3, r2, r3
 8002092:	2b00      	cmp	r3, #0
 8002094:	db06      	blt.n	80020a4 <TestConditionBord+0x44>
 8002096:	88ba      	ldrh	r2, [r7, #4]
 8002098:	887b      	ldrh	r3, [r7, #2]
 800209a:	4413      	add	r3, r2
 800209c:	2bf5      	cmp	r3, #245	; 0xf5
 800209e:	dc01      	bgt.n	80020a4 <TestConditionBord+0x44>
	{
		bool = 1;
 80020a0:	2301      	movs	r3, #1
 80020a2:	73fb      	strb	r3, [r7, #15]
	}
	return bool;
 80020a4:	7bfb      	ldrb	r3, [r7, #15]
}
 80020a6:	4618      	mov	r0, r3
 80020a8:	3714      	adds	r7, #20
 80020aa:	46bd      	mov	sp, r7
 80020ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020b0:	4770      	bx	lr
	...

080020b4 <LCD_PAINTBRUSH>:
/*
 * dessine la forme du pinceau actuel pour la zone de dessin
 */
void LCD_PAINTBRUSH(uint16_t x, uint16_t y,uint16_t rad)
{
 80020b4:	b580      	push	{r7, lr}
 80020b6:	b084      	sub	sp, #16
 80020b8:	af00      	add	r7, sp, #0
 80020ba:	4603      	mov	r3, r0
 80020bc:	80fb      	strh	r3, [r7, #6]
 80020be:	460b      	mov	r3, r1
 80020c0:	80bb      	strh	r3, [r7, #4]
 80020c2:	4613      	mov	r3, r2
 80020c4:	807b      	strh	r3, [r7, #2]
	uint32_t px_color;
	switch(brush)
 80020c6:	4b53      	ldr	r3, [pc, #332]	; (8002214 <LCD_PAINTBRUSH+0x160>)
 80020c8:	781b      	ldrb	r3, [r3, #0]
 80020ca:	2b01      	cmp	r3, #1
 80020cc:	d00b      	beq.n	80020e6 <LCD_PAINTBRUSH+0x32>
 80020ce:	2b02      	cmp	r3, #2
 80020d0:	d011      	beq.n	80020f6 <LCD_PAINTBRUSH+0x42>
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	d000      	beq.n	80020d8 <LCD_PAINTBRUSH+0x24>
		if ((BSP_LCD_ReadPixel(x, y - 1) == px_color)
				&& TestConditionBord(x, y-1, 0))
			LCD_PAINTBRUSH(x, y - 1, rad);
		break;
	}
}
 80020d6:	e099      	b.n	800220c <LCD_PAINTBRUSH+0x158>
		BSP_LCD_FillCircle(x, y, rad);
 80020d8:	887a      	ldrh	r2, [r7, #2]
 80020da:	88b9      	ldrh	r1, [r7, #4]
 80020dc:	88fb      	ldrh	r3, [r7, #6]
 80020de:	4618      	mov	r0, r3
 80020e0:	f002 fc2a 	bl	8004938 <BSP_LCD_FillCircle>
		break;
 80020e4:	e092      	b.n	800220c <LCD_PAINTBRUSH+0x158>
		BSP_LCD_FillRect(0, 0, 425, 246);
 80020e6:	23f6      	movs	r3, #246	; 0xf6
 80020e8:	f240 12a9 	movw	r2, #425	; 0x1a9
 80020ec:	2100      	movs	r1, #0
 80020ee:	2000      	movs	r0, #0
 80020f0:	f002 fba8 	bl	8004844 <BSP_LCD_FillRect>
		break;
 80020f4:	e08a      	b.n	800220c <LCD_PAINTBRUSH+0x158>
		px_color = BSP_LCD_ReadPixel(x, y);
 80020f6:	88ba      	ldrh	r2, [r7, #4]
 80020f8:	88fb      	ldrh	r3, [r7, #6]
 80020fa:	4611      	mov	r1, r2
 80020fc:	4618      	mov	r0, r3
 80020fe:	f001 ffbb 	bl	8004078 <BSP_LCD_ReadPixel>
 8002102:	60f8      	str	r0, [r7, #12]
		BSP_LCD_DrawPixel(x, y, couleur);
 8002104:	4b44      	ldr	r3, [pc, #272]	; (8002218 <LCD_PAINTBRUSH+0x164>)
 8002106:	681a      	ldr	r2, [r3, #0]
 8002108:	88b9      	ldrh	r1, [r7, #4]
 800210a:	88fb      	ldrh	r3, [r7, #6]
 800210c:	4618      	mov	r0, r3
 800210e:	f002 fb51 	bl	80047b4 <BSP_LCD_DrawPixel>
		if ((BSP_LCD_ReadPixel(x + 1, y) == px_color)
 8002112:	88fb      	ldrh	r3, [r7, #6]
 8002114:	3301      	adds	r3, #1
 8002116:	b29b      	uxth	r3, r3
 8002118:	88ba      	ldrh	r2, [r7, #4]
 800211a:	4611      	mov	r1, r2
 800211c:	4618      	mov	r0, r3
 800211e:	f001 ffab 	bl	8004078 <BSP_LCD_ReadPixel>
 8002122:	4602      	mov	r2, r0
 8002124:	68fb      	ldr	r3, [r7, #12]
 8002126:	4293      	cmp	r3, r2
 8002128:	d112      	bne.n	8002150 <LCD_PAINTBRUSH+0x9c>
				&& TestConditionBord(x + 1, y, 0))
 800212a:	88fb      	ldrh	r3, [r7, #6]
 800212c:	3301      	adds	r3, #1
 800212e:	b29b      	uxth	r3, r3
 8002130:	88b9      	ldrh	r1, [r7, #4]
 8002132:	2200      	movs	r2, #0
 8002134:	4618      	mov	r0, r3
 8002136:	f7ff ff93 	bl	8002060 <TestConditionBord>
 800213a:	4603      	mov	r3, r0
 800213c:	2b00      	cmp	r3, #0
 800213e:	d007      	beq.n	8002150 <LCD_PAINTBRUSH+0x9c>
			LCD_PAINTBRUSH(x + 1, y, rad);
 8002140:	88fb      	ldrh	r3, [r7, #6]
 8002142:	3301      	adds	r3, #1
 8002144:	b29b      	uxth	r3, r3
 8002146:	887a      	ldrh	r2, [r7, #2]
 8002148:	88b9      	ldrh	r1, [r7, #4]
 800214a:	4618      	mov	r0, r3
 800214c:	f7ff ffb2 	bl	80020b4 <LCD_PAINTBRUSH>
		if ((BSP_LCD_ReadPixel(x - 1, y) == px_color)
 8002150:	88fb      	ldrh	r3, [r7, #6]
 8002152:	3b01      	subs	r3, #1
 8002154:	b29b      	uxth	r3, r3
 8002156:	88ba      	ldrh	r2, [r7, #4]
 8002158:	4611      	mov	r1, r2
 800215a:	4618      	mov	r0, r3
 800215c:	f001 ff8c 	bl	8004078 <BSP_LCD_ReadPixel>
 8002160:	4602      	mov	r2, r0
 8002162:	68fb      	ldr	r3, [r7, #12]
 8002164:	4293      	cmp	r3, r2
 8002166:	d112      	bne.n	800218e <LCD_PAINTBRUSH+0xda>
				&& TestConditionBord(x - 1, y, 0))
 8002168:	88fb      	ldrh	r3, [r7, #6]
 800216a:	3b01      	subs	r3, #1
 800216c:	b29b      	uxth	r3, r3
 800216e:	88b9      	ldrh	r1, [r7, #4]
 8002170:	2200      	movs	r2, #0
 8002172:	4618      	mov	r0, r3
 8002174:	f7ff ff74 	bl	8002060 <TestConditionBord>
 8002178:	4603      	mov	r3, r0
 800217a:	2b00      	cmp	r3, #0
 800217c:	d007      	beq.n	800218e <LCD_PAINTBRUSH+0xda>
			LCD_PAINTBRUSH(x - 1, y, rad);
 800217e:	88fb      	ldrh	r3, [r7, #6]
 8002180:	3b01      	subs	r3, #1
 8002182:	b29b      	uxth	r3, r3
 8002184:	887a      	ldrh	r2, [r7, #2]
 8002186:	88b9      	ldrh	r1, [r7, #4]
 8002188:	4618      	mov	r0, r3
 800218a:	f7ff ff93 	bl	80020b4 <LCD_PAINTBRUSH>
		if ((BSP_LCD_ReadPixel(x, y + 1) == px_color)
 800218e:	88bb      	ldrh	r3, [r7, #4]
 8002190:	3301      	adds	r3, #1
 8002192:	b29a      	uxth	r2, r3
 8002194:	88fb      	ldrh	r3, [r7, #6]
 8002196:	4611      	mov	r1, r2
 8002198:	4618      	mov	r0, r3
 800219a:	f001 ff6d 	bl	8004078 <BSP_LCD_ReadPixel>
 800219e:	4602      	mov	r2, r0
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	4293      	cmp	r3, r2
 80021a4:	d112      	bne.n	80021cc <LCD_PAINTBRUSH+0x118>
				&& TestConditionBord(x, y+1, 0))
 80021a6:	88bb      	ldrh	r3, [r7, #4]
 80021a8:	3301      	adds	r3, #1
 80021aa:	b299      	uxth	r1, r3
 80021ac:	88fb      	ldrh	r3, [r7, #6]
 80021ae:	2200      	movs	r2, #0
 80021b0:	4618      	mov	r0, r3
 80021b2:	f7ff ff55 	bl	8002060 <TestConditionBord>
 80021b6:	4603      	mov	r3, r0
 80021b8:	2b00      	cmp	r3, #0
 80021ba:	d007      	beq.n	80021cc <LCD_PAINTBRUSH+0x118>
			LCD_PAINTBRUSH(x, y + 1, rad);
 80021bc:	88bb      	ldrh	r3, [r7, #4]
 80021be:	3301      	adds	r3, #1
 80021c0:	b299      	uxth	r1, r3
 80021c2:	887a      	ldrh	r2, [r7, #2]
 80021c4:	88fb      	ldrh	r3, [r7, #6]
 80021c6:	4618      	mov	r0, r3
 80021c8:	f7ff ff74 	bl	80020b4 <LCD_PAINTBRUSH>
		if ((BSP_LCD_ReadPixel(x, y - 1) == px_color)
 80021cc:	88bb      	ldrh	r3, [r7, #4]
 80021ce:	3b01      	subs	r3, #1
 80021d0:	b29a      	uxth	r2, r3
 80021d2:	88fb      	ldrh	r3, [r7, #6]
 80021d4:	4611      	mov	r1, r2
 80021d6:	4618      	mov	r0, r3
 80021d8:	f001 ff4e 	bl	8004078 <BSP_LCD_ReadPixel>
 80021dc:	4602      	mov	r2, r0
 80021de:	68fb      	ldr	r3, [r7, #12]
 80021e0:	4293      	cmp	r3, r2
 80021e2:	d112      	bne.n	800220a <LCD_PAINTBRUSH+0x156>
				&& TestConditionBord(x, y-1, 0))
 80021e4:	88bb      	ldrh	r3, [r7, #4]
 80021e6:	3b01      	subs	r3, #1
 80021e8:	b299      	uxth	r1, r3
 80021ea:	88fb      	ldrh	r3, [r7, #6]
 80021ec:	2200      	movs	r2, #0
 80021ee:	4618      	mov	r0, r3
 80021f0:	f7ff ff36 	bl	8002060 <TestConditionBord>
 80021f4:	4603      	mov	r3, r0
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d007      	beq.n	800220a <LCD_PAINTBRUSH+0x156>
			LCD_PAINTBRUSH(x, y - 1, rad);
 80021fa:	88bb      	ldrh	r3, [r7, #4]
 80021fc:	3b01      	subs	r3, #1
 80021fe:	b299      	uxth	r1, r3
 8002200:	887a      	ldrh	r2, [r7, #2]
 8002202:	88fb      	ldrh	r3, [r7, #6]
 8002204:	4618      	mov	r0, r3
 8002206:	f7ff ff55 	bl	80020b4 <LCD_PAINTBRUSH>
		break;
 800220a:	bf00      	nop
}
 800220c:	bf00      	nop
 800220e:	3710      	adds	r7, #16
 8002210:	46bd      	mov	sp, r7
 8002212:	bd80      	pop	{r7, pc}
 8002214:	2000139d 	.word	0x2000139d
 8002218:	20009e84 	.word	0x20009e84

0800221c <LCD_PAINTBRUSH_SAMPLE>:
/*
 * Dessine la forme du pinceau actuel pour la zone menu (fonction séparé car
 * pour la fonction de remplissage du fond on veut juste afficher un logo).
 */
void LCD_PAINTBRUSH_SAMPLE(uint16_t x, uint16_t y,uint16_t rad)
{
 800221c:	b580      	push	{r7, lr}
 800221e:	b088      	sub	sp, #32
 8002220:	af00      	add	r7, sp, #0
 8002222:	4603      	mov	r3, r0
 8002224:	80fb      	strh	r3, [r7, #6]
 8002226:	460b      	mov	r3, r1
 8002228:	80bb      	strh	r3, [r7, #4]
 800222a:	4613      	mov	r3, r2
 800222c:	807b      	strh	r3, [r7, #2]
	uint32_t color;
	switch(brush)
 800222e:	4b48      	ldr	r3, [pc, #288]	; (8002350 <LCD_PAINTBRUSH_SAMPLE+0x134>)
 8002230:	781b      	ldrb	r3, [r3, #0]
 8002232:	2b01      	cmp	r3, #1
 8002234:	d00b      	beq.n	800224e <LCD_PAINTBRUSH_SAMPLE+0x32>
 8002236:	2b02      	cmp	r3, #2
 8002238:	d03b      	beq.n	80022b2 <LCD_PAINTBRUSH_SAMPLE+0x96>
 800223a:	2b00      	cmp	r3, #0
 800223c:	d000      	beq.n	8002240 <LCD_PAINTBRUSH_SAMPLE+0x24>
				BSP_LCD_DrawPixel(x-15+j, y-15+i, color);
			}
		}
		break;
	}
}
 800223e:	e082      	b.n	8002346 <LCD_PAINTBRUSH_SAMPLE+0x12a>
		BSP_LCD_FillCircle(x, y, rad);
 8002240:	887a      	ldrh	r2, [r7, #2]
 8002242:	88b9      	ldrh	r1, [r7, #4]
 8002244:	88fb      	ldrh	r3, [r7, #6]
 8002246:	4618      	mov	r0, r3
 8002248:	f002 fb76 	bl	8004938 <BSP_LCD_FillCircle>
		break;
 800224c:	e07b      	b.n	8002346 <LCD_PAINTBRUSH_SAMPLE+0x12a>
		for(int i=0; i<30;i++)
 800224e:	2300      	movs	r3, #0
 8002250:	61fb      	str	r3, [r7, #28]
 8002252:	e02a      	b.n	80022aa <LCD_PAINTBRUSH_SAMPLE+0x8e>
			for(int j=0; j<30;j++)
 8002254:	2300      	movs	r3, #0
 8002256:	61bb      	str	r3, [r7, #24]
 8002258:	e021      	b.n	800229e <LCD_PAINTBRUSH_SAMPLE+0x82>
				if(brush_background[i][j]==0) BSP_LCD_DrawPixel(x-15+j, y-15+i, LCD_COLOR_BLACK);
 800225a:	493e      	ldr	r1, [pc, #248]	; (8002354 <LCD_PAINTBRUSH_SAMPLE+0x138>)
 800225c:	69fa      	ldr	r2, [r7, #28]
 800225e:	4613      	mov	r3, r2
 8002260:	011b      	lsls	r3, r3, #4
 8002262:	1a9b      	subs	r3, r3, r2
 8002264:	005b      	lsls	r3, r3, #1
 8002266:	18ca      	adds	r2, r1, r3
 8002268:	69bb      	ldr	r3, [r7, #24]
 800226a:	4413      	add	r3, r2
 800226c:	781b      	ldrb	r3, [r3, #0]
 800226e:	2b00      	cmp	r3, #0
 8002270:	d112      	bne.n	8002298 <LCD_PAINTBRUSH_SAMPLE+0x7c>
 8002272:	69bb      	ldr	r3, [r7, #24]
 8002274:	b29a      	uxth	r2, r3
 8002276:	88fb      	ldrh	r3, [r7, #6]
 8002278:	4413      	add	r3, r2
 800227a:	b29b      	uxth	r3, r3
 800227c:	3b0f      	subs	r3, #15
 800227e:	b298      	uxth	r0, r3
 8002280:	69fb      	ldr	r3, [r7, #28]
 8002282:	b29a      	uxth	r2, r3
 8002284:	88bb      	ldrh	r3, [r7, #4]
 8002286:	4413      	add	r3, r2
 8002288:	b29b      	uxth	r3, r3
 800228a:	3b0f      	subs	r3, #15
 800228c:	b29b      	uxth	r3, r3
 800228e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8002292:	4619      	mov	r1, r3
 8002294:	f002 fa8e 	bl	80047b4 <BSP_LCD_DrawPixel>
			for(int j=0; j<30;j++)
 8002298:	69bb      	ldr	r3, [r7, #24]
 800229a:	3301      	adds	r3, #1
 800229c:	61bb      	str	r3, [r7, #24]
 800229e:	69bb      	ldr	r3, [r7, #24]
 80022a0:	2b1d      	cmp	r3, #29
 80022a2:	ddda      	ble.n	800225a <LCD_PAINTBRUSH_SAMPLE+0x3e>
		for(int i=0; i<30;i++)
 80022a4:	69fb      	ldr	r3, [r7, #28]
 80022a6:	3301      	adds	r3, #1
 80022a8:	61fb      	str	r3, [r7, #28]
 80022aa:	69fb      	ldr	r3, [r7, #28]
 80022ac:	2b1d      	cmp	r3, #29
 80022ae:	ddd1      	ble.n	8002254 <LCD_PAINTBRUSH_SAMPLE+0x38>
		break;
 80022b0:	e049      	b.n	8002346 <LCD_PAINTBRUSH_SAMPLE+0x12a>
		for(int i=0; i<34;i++)
 80022b2:	2300      	movs	r3, #0
 80022b4:	617b      	str	r3, [r7, #20]
 80022b6:	e042      	b.n	800233e <LCD_PAINTBRUSH_SAMPLE+0x122>
			for(int j=0; j<30;j++)
 80022b8:	2300      	movs	r3, #0
 80022ba:	613b      	str	r3, [r7, #16]
 80022bc:	e039      	b.n	8002332 <LCD_PAINTBRUSH_SAMPLE+0x116>
				color = brush_remplir[i][j] | (brush_remplir[i][j]<<8) | (brush_remplir[i][j]<<16) | 0xFF000000;
 80022be:	4926      	ldr	r1, [pc, #152]	; (8002358 <LCD_PAINTBRUSH_SAMPLE+0x13c>)
 80022c0:	697a      	ldr	r2, [r7, #20]
 80022c2:	4613      	mov	r3, r2
 80022c4:	011b      	lsls	r3, r3, #4
 80022c6:	1a9b      	subs	r3, r3, r2
 80022c8:	005b      	lsls	r3, r3, #1
 80022ca:	693a      	ldr	r2, [r7, #16]
 80022cc:	4413      	add	r3, r2
 80022ce:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80022d2:	4821      	ldr	r0, [pc, #132]	; (8002358 <LCD_PAINTBRUSH_SAMPLE+0x13c>)
 80022d4:	697a      	ldr	r2, [r7, #20]
 80022d6:	4613      	mov	r3, r2
 80022d8:	011b      	lsls	r3, r3, #4
 80022da:	1a9b      	subs	r3, r3, r2
 80022dc:	005b      	lsls	r3, r3, #1
 80022de:	693a      	ldr	r2, [r7, #16]
 80022e0:	4413      	add	r3, r2
 80022e2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80022e6:	021b      	lsls	r3, r3, #8
 80022e8:	4319      	orrs	r1, r3
 80022ea:	481b      	ldr	r0, [pc, #108]	; (8002358 <LCD_PAINTBRUSH_SAMPLE+0x13c>)
 80022ec:	697a      	ldr	r2, [r7, #20]
 80022ee:	4613      	mov	r3, r2
 80022f0:	011b      	lsls	r3, r3, #4
 80022f2:	1a9b      	subs	r3, r3, r2
 80022f4:	005b      	lsls	r3, r3, #1
 80022f6:	693a      	ldr	r2, [r7, #16]
 80022f8:	4413      	add	r3, r2
 80022fa:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80022fe:	041b      	lsls	r3, r3, #16
 8002300:	430b      	orrs	r3, r1
 8002302:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002306:	60fb      	str	r3, [r7, #12]
				BSP_LCD_DrawPixel(x-15+j, y-15+i, color);
 8002308:	693b      	ldr	r3, [r7, #16]
 800230a:	b29a      	uxth	r2, r3
 800230c:	88fb      	ldrh	r3, [r7, #6]
 800230e:	4413      	add	r3, r2
 8002310:	b29b      	uxth	r3, r3
 8002312:	3b0f      	subs	r3, #15
 8002314:	b298      	uxth	r0, r3
 8002316:	697b      	ldr	r3, [r7, #20]
 8002318:	b29a      	uxth	r2, r3
 800231a:	88bb      	ldrh	r3, [r7, #4]
 800231c:	4413      	add	r3, r2
 800231e:	b29b      	uxth	r3, r3
 8002320:	3b0f      	subs	r3, #15
 8002322:	b29b      	uxth	r3, r3
 8002324:	68fa      	ldr	r2, [r7, #12]
 8002326:	4619      	mov	r1, r3
 8002328:	f002 fa44 	bl	80047b4 <BSP_LCD_DrawPixel>
			for(int j=0; j<30;j++)
 800232c:	693b      	ldr	r3, [r7, #16]
 800232e:	3301      	adds	r3, #1
 8002330:	613b      	str	r3, [r7, #16]
 8002332:	693b      	ldr	r3, [r7, #16]
 8002334:	2b1d      	cmp	r3, #29
 8002336:	ddc2      	ble.n	80022be <LCD_PAINTBRUSH_SAMPLE+0xa2>
		for(int i=0; i<34;i++)
 8002338:	697b      	ldr	r3, [r7, #20]
 800233a:	3301      	adds	r3, #1
 800233c:	617b      	str	r3, [r7, #20]
 800233e:	697b      	ldr	r3, [r7, #20]
 8002340:	2b21      	cmp	r3, #33	; 0x21
 8002342:	ddb9      	ble.n	80022b8 <LCD_PAINTBRUSH_SAMPLE+0x9c>
		break;
 8002344:	bf00      	nop
}
 8002346:	bf00      	nop
 8002348:	3720      	adds	r7, #32
 800234a:	46bd      	mov	sp, r7
 800234c:	bd80      	pop	{r7, pc}
 800234e:	bf00      	nop
 8002350:	2000139d 	.word	0x2000139d
 8002354:	20001018 	.word	0x20001018
 8002358:	20000028 	.word	0x20000028

0800235c <AfficheTonalite>:
 * pour afficher toutes les tonalité il faudrait 256*6 = 1536 pixels, on prend donc que
 * 64 niveaux de tonalité pour chaque mélange (R+V, V+R, V+B, B+V, B+R, R+B). Soit un total
 * de 64*6 = 384 pixels nécessaire
 */
void AfficheTonalite()
{
 800235c:	b580      	push	{r7, lr}
 800235e:	b08e      	sub	sp, #56	; 0x38
 8002360:	af00      	add	r7, sp, #0
	uint32_t RVB = 0x0;
 8002362:	2300      	movs	r3, #0
 8002364:	607b      	str	r3, [r7, #4]
	BSP_LCD_SelectLayer(1);
 8002366:	2001      	movs	r0, #1
 8002368:	f001 fe14 	bl	8003f94 <BSP_LCD_SelectLayer>
	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 800236c:	f04f 30ff 	mov.w	r0, #4294967295
 8002370:	f001 fe20 	bl	8003fb4 <BSP_LCD_SetTextColor>
	BSP_LCD_FillRect(0, 251, 480, 21);
 8002374:	2315      	movs	r3, #21
 8002376:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800237a:	21fb      	movs	r1, #251	; 0xfb
 800237c:	2000      	movs	r0, #0
 800237e:	f002 fa61 	bl	8004844 <BSP_LCD_FillRect>
	//affichage R+V :
	for(uint32_t i = 0;i<256; i = i+4)
 8002382:	2300      	movs	r3, #0
 8002384:	637b      	str	r3, [r7, #52]	; 0x34
 8002386:	e022      	b.n	80023ce <AfficheTonalite+0x72>
   {
		RVB = 0xFFFF0000 | (i<<8); //Red à 255, Vert augmente
 8002388:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800238a:	021a      	lsls	r2, r3, #8
 800238c:	4b76      	ldr	r3, [pc, #472]	; (8002568 <AfficheTonalite+0x20c>)
 800238e:	4313      	orrs	r3, r2
 8002390:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 8002392:	2300      	movs	r3, #0
 8002394:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8002398:	e012      	b.n	80023c0 <AfficheTonalite+0x64>
		{
			BSP_LCD_DrawPixel(50+i/4, 252+j, RVB);
 800239a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800239c:	089b      	lsrs	r3, r3, #2
 800239e:	b29b      	uxth	r3, r3
 80023a0:	3332      	adds	r3, #50	; 0x32
 80023a2:	b298      	uxth	r0, r3
 80023a4:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80023a8:	b29b      	uxth	r3, r3
 80023aa:	33fc      	adds	r3, #252	; 0xfc
 80023ac:	b29b      	uxth	r3, r3
 80023ae:	687a      	ldr	r2, [r7, #4]
 80023b0:	4619      	mov	r1, r3
 80023b2:	f002 f9ff 	bl	80047b4 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 80023b6:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80023ba:	3301      	adds	r3, #1
 80023bc:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80023c0:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80023c4:	2b11      	cmp	r3, #17
 80023c6:	d9e8      	bls.n	800239a <AfficheTonalite+0x3e>
	for(uint32_t i = 0;i<256; i = i+4)
 80023c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80023ca:	3304      	adds	r3, #4
 80023cc:	637b      	str	r3, [r7, #52]	; 0x34
 80023ce:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80023d0:	2bff      	cmp	r3, #255	; 0xff
 80023d2:	d9d9      	bls.n	8002388 <AfficheTonalite+0x2c>
		}
   }
	//affichage V+R :
	for(uint32_t i = 252;i<253; i = i-4)
 80023d4:	23fc      	movs	r3, #252	; 0xfc
 80023d6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80023d8:	e023      	b.n	8002422 <AfficheTonalite+0xc6>
		// i est un uint donc quand i passe en dessus de 0 il est interprèter comme un grand nombre d'où le i<253
   {
		RVB = 0xFF00FF00 | (i<<16); //Vert à 255, Red diminue
 80023da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80023dc:	041b      	lsls	r3, r3, #16
 80023de:	f043 23ff 	orr.w	r3, r3, #4278255360	; 0xff00ff00
 80023e2:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 80023e4:	2300      	movs	r3, #0
 80023e6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80023ea:	e013      	b.n	8002414 <AfficheTonalite+0xb8>
		{
			BSP_LCD_DrawPixel(114+(63-i/4), 252+j, RVB);
 80023ec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80023ee:	089b      	lsrs	r3, r3, #2
 80023f0:	b29b      	uxth	r3, r3
 80023f2:	f1c3 03b1 	rsb	r3, r3, #177	; 0xb1
 80023f6:	b298      	uxth	r0, r3
 80023f8:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80023fc:	b29b      	uxth	r3, r3
 80023fe:	33fc      	adds	r3, #252	; 0xfc
 8002400:	b29b      	uxth	r3, r3
 8002402:	687a      	ldr	r2, [r7, #4]
 8002404:	4619      	mov	r1, r3
 8002406:	f002 f9d5 	bl	80047b4 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 800240a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800240e:	3301      	adds	r3, #1
 8002410:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002414:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8002418:	2b11      	cmp	r3, #17
 800241a:	d9e7      	bls.n	80023ec <AfficheTonalite+0x90>
	for(uint32_t i = 252;i<253; i = i-4)
 800241c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800241e:	3b04      	subs	r3, #4
 8002420:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002422:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002424:	2bfc      	cmp	r3, #252	; 0xfc
 8002426:	d9d8      	bls.n	80023da <AfficheTonalite+0x7e>
		}
   }
	//affichage V+B :
	for(uint32_t i = 0;i<256; i = i+4)
 8002428:	2300      	movs	r3, #0
 800242a:	627b      	str	r3, [r7, #36]	; 0x24
 800242c:	e021      	b.n	8002472 <AfficheTonalite+0x116>
   {
		RVB = 0xFF00FF00 | i; // Vert à 255, Bleu augmente
 800242e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002430:	f043 23ff 	orr.w	r3, r3, #4278255360	; 0xff00ff00
 8002434:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 8002436:	2300      	movs	r3, #0
 8002438:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800243c:	e012      	b.n	8002464 <AfficheTonalite+0x108>
		{
			BSP_LCD_DrawPixel(178+i/4, 252+j, RVB);
 800243e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002440:	089b      	lsrs	r3, r3, #2
 8002442:	b29b      	uxth	r3, r3
 8002444:	33b2      	adds	r3, #178	; 0xb2
 8002446:	b298      	uxth	r0, r3
 8002448:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800244c:	b29b      	uxth	r3, r3
 800244e:	33fc      	adds	r3, #252	; 0xfc
 8002450:	b29b      	uxth	r3, r3
 8002452:	687a      	ldr	r2, [r7, #4]
 8002454:	4619      	mov	r1, r3
 8002456:	f002 f9ad 	bl	80047b4 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 800245a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800245e:	3301      	adds	r3, #1
 8002460:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8002464:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8002468:	2b11      	cmp	r3, #17
 800246a:	d9e8      	bls.n	800243e <AfficheTonalite+0xe2>
	for(uint32_t i = 0;i<256; i = i+4)
 800246c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800246e:	3304      	adds	r3, #4
 8002470:	627b      	str	r3, [r7, #36]	; 0x24
 8002472:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002474:	2bff      	cmp	r3, #255	; 0xff
 8002476:	d9da      	bls.n	800242e <AfficheTonalite+0xd2>
		}
   }
	//affichage B+V :
	for(uint32_t i = 252;i<253; i = i-4)
 8002478:	23fc      	movs	r3, #252	; 0xfc
 800247a:	61fb      	str	r3, [r7, #28]
 800247c:	e01f      	b.n	80024be <AfficheTonalite+0x162>
   {
		RVB = 0xFF0000FF | (i<<8); // Bleu à 255, Vert diminue
 800247e:	69fb      	ldr	r3, [r7, #28]
 8002480:	021a      	lsls	r2, r3, #8
 8002482:	4b3a      	ldr	r3, [pc, #232]	; (800256c <AfficheTonalite+0x210>)
 8002484:	4313      	orrs	r3, r2
 8002486:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 8002488:	2300      	movs	r3, #0
 800248a:	76fb      	strb	r3, [r7, #27]
 800248c:	e011      	b.n	80024b2 <AfficheTonalite+0x156>
		{
			BSP_LCD_DrawPixel(242+(63-i/4), 252+j, RVB);
 800248e:	69fb      	ldr	r3, [r7, #28]
 8002490:	089b      	lsrs	r3, r3, #2
 8002492:	b29a      	uxth	r2, r3
 8002494:	f240 1331 	movw	r3, #305	; 0x131
 8002498:	1a9b      	subs	r3, r3, r2
 800249a:	b298      	uxth	r0, r3
 800249c:	7efb      	ldrb	r3, [r7, #27]
 800249e:	b29b      	uxth	r3, r3
 80024a0:	33fc      	adds	r3, #252	; 0xfc
 80024a2:	b29b      	uxth	r3, r3
 80024a4:	687a      	ldr	r2, [r7, #4]
 80024a6:	4619      	mov	r1, r3
 80024a8:	f002 f984 	bl	80047b4 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 80024ac:	7efb      	ldrb	r3, [r7, #27]
 80024ae:	3301      	adds	r3, #1
 80024b0:	76fb      	strb	r3, [r7, #27]
 80024b2:	7efb      	ldrb	r3, [r7, #27]
 80024b4:	2b11      	cmp	r3, #17
 80024b6:	d9ea      	bls.n	800248e <AfficheTonalite+0x132>
	for(uint32_t i = 252;i<253; i = i-4)
 80024b8:	69fb      	ldr	r3, [r7, #28]
 80024ba:	3b04      	subs	r3, #4
 80024bc:	61fb      	str	r3, [r7, #28]
 80024be:	69fb      	ldr	r3, [r7, #28]
 80024c0:	2bfc      	cmp	r3, #252	; 0xfc
 80024c2:	d9dc      	bls.n	800247e <AfficheTonalite+0x122>
		}
   }
	//affichage B+R :
	for(uint32_t i = 0;i<256; i = i+4)
 80024c4:	2300      	movs	r3, #0
 80024c6:	617b      	str	r3, [r7, #20]
 80024c8:	e01e      	b.n	8002508 <AfficheTonalite+0x1ac>
   {
		RVB = 0xFF0000FF | (i<<16);// Bleu à 255, Red augmente
 80024ca:	697b      	ldr	r3, [r7, #20]
 80024cc:	041a      	lsls	r2, r3, #16
 80024ce:	4b27      	ldr	r3, [pc, #156]	; (800256c <AfficheTonalite+0x210>)
 80024d0:	4313      	orrs	r3, r2
 80024d2:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 80024d4:	2300      	movs	r3, #0
 80024d6:	74fb      	strb	r3, [r7, #19]
 80024d8:	e010      	b.n	80024fc <AfficheTonalite+0x1a0>
		{
			BSP_LCD_DrawPixel(306+i/4, 252+j, RVB);
 80024da:	697b      	ldr	r3, [r7, #20]
 80024dc:	089b      	lsrs	r3, r3, #2
 80024de:	b29b      	uxth	r3, r3
 80024e0:	f503 7399 	add.w	r3, r3, #306	; 0x132
 80024e4:	b298      	uxth	r0, r3
 80024e6:	7cfb      	ldrb	r3, [r7, #19]
 80024e8:	b29b      	uxth	r3, r3
 80024ea:	33fc      	adds	r3, #252	; 0xfc
 80024ec:	b29b      	uxth	r3, r3
 80024ee:	687a      	ldr	r2, [r7, #4]
 80024f0:	4619      	mov	r1, r3
 80024f2:	f002 f95f 	bl	80047b4 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 80024f6:	7cfb      	ldrb	r3, [r7, #19]
 80024f8:	3301      	adds	r3, #1
 80024fa:	74fb      	strb	r3, [r7, #19]
 80024fc:	7cfb      	ldrb	r3, [r7, #19]
 80024fe:	2b11      	cmp	r3, #17
 8002500:	d9eb      	bls.n	80024da <AfficheTonalite+0x17e>
	for(uint32_t i = 0;i<256; i = i+4)
 8002502:	697b      	ldr	r3, [r7, #20]
 8002504:	3304      	adds	r3, #4
 8002506:	617b      	str	r3, [r7, #20]
 8002508:	697b      	ldr	r3, [r7, #20]
 800250a:	2bff      	cmp	r3, #255	; 0xff
 800250c:	d9dd      	bls.n	80024ca <AfficheTonalite+0x16e>
		}
   }
	//affichage R+B :
	for(uint32_t i = 252;i<253; i = i-4)
 800250e:	23fc      	movs	r3, #252	; 0xfc
 8002510:	60fb      	str	r3, [r7, #12]
 8002512:	e01e      	b.n	8002552 <AfficheTonalite+0x1f6>
   {
		RVB = 0xFFFF0000 | (i);// Red à 255, Bleu diminue
 8002514:	68fa      	ldr	r2, [r7, #12]
 8002516:	4b14      	ldr	r3, [pc, #80]	; (8002568 <AfficheTonalite+0x20c>)
 8002518:	4313      	orrs	r3, r2
 800251a:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 800251c:	2300      	movs	r3, #0
 800251e:	72fb      	strb	r3, [r7, #11]
 8002520:	e011      	b.n	8002546 <AfficheTonalite+0x1ea>
		{
			BSP_LCD_DrawPixel(370+(63-i/4), 252+j, RVB);
 8002522:	68fb      	ldr	r3, [r7, #12]
 8002524:	089b      	lsrs	r3, r3, #2
 8002526:	b29a      	uxth	r2, r3
 8002528:	f240 13b1 	movw	r3, #433	; 0x1b1
 800252c:	1a9b      	subs	r3, r3, r2
 800252e:	b298      	uxth	r0, r3
 8002530:	7afb      	ldrb	r3, [r7, #11]
 8002532:	b29b      	uxth	r3, r3
 8002534:	33fc      	adds	r3, #252	; 0xfc
 8002536:	b29b      	uxth	r3, r3
 8002538:	687a      	ldr	r2, [r7, #4]
 800253a:	4619      	mov	r1, r3
 800253c:	f002 f93a 	bl	80047b4 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 8002540:	7afb      	ldrb	r3, [r7, #11]
 8002542:	3301      	adds	r3, #1
 8002544:	72fb      	strb	r3, [r7, #11]
 8002546:	7afb      	ldrb	r3, [r7, #11]
 8002548:	2b11      	cmp	r3, #17
 800254a:	d9ea      	bls.n	8002522 <AfficheTonalite+0x1c6>
	for(uint32_t i = 252;i<253; i = i-4)
 800254c:	68fb      	ldr	r3, [r7, #12]
 800254e:	3b04      	subs	r3, #4
 8002550:	60fb      	str	r3, [r7, #12]
 8002552:	68fb      	ldr	r3, [r7, #12]
 8002554:	2bfc      	cmp	r3, #252	; 0xfc
 8002556:	d9dd      	bls.n	8002514 <AfficheTonalite+0x1b8>
		}
   }
	osDelay(200);
 8002558:	20c8      	movs	r0, #200	; 0xc8
 800255a:	f00a fd38 	bl	800cfce <osDelay>
}
 800255e:	bf00      	nop
 8002560:	3738      	adds	r7, #56	; 0x38
 8002562:	46bd      	mov	sp, r7
 8002564:	bd80      	pop	{r7, pc}
 8002566:	bf00      	nop
 8002568:	ffff0000 	.word	0xffff0000
 800256c:	ff0000ff 	.word	0xff0000ff

08002570 <AfficheLuminosite>:

/*
 * Affiche le dégradé de luminosité pour que l'utilisateur puisse faire son choix
 */
void AfficheLuminosite(float ton, float sat)
{
 8002570:	b580      	push	{r7, lr}
 8002572:	b086      	sub	sp, #24
 8002574:	af00      	add	r7, sp, #0
 8002576:	ed87 0a01 	vstr	s0, [r7, #4]
 800257a:	edc7 0a00 	vstr	s1, [r7]
	float lum;
	uint32_t color;
	BSP_LCD_SelectLayer(1);
 800257e:	2001      	movs	r0, #1
 8002580:	f001 fd08 	bl	8003f94 <BSP_LCD_SelectLayer>
	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002584:	f04f 30ff 	mov.w	r0, #4294967295
 8002588:	f001 fd14 	bl	8003fb4 <BSP_LCD_SetTextColor>
	BSP_LCD_FillRect(0, 251, 480, 21);
 800258c:	2315      	movs	r3, #21
 800258e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002592:	21fb      	movs	r1, #251	; 0xfb
 8002594:	2000      	movs	r0, #0
 8002596:	f002 f955 	bl	8004844 <BSP_LCD_FillRect>
	for(uint32_t i = 0;i<256;i++)
 800259a:	2300      	movs	r3, #0
 800259c:	617b      	str	r3, [r7, #20]
 800259e:	e02e      	b.n	80025fe <AfficheLuminosite+0x8e>
    {
		lum = (float)i/255;
 80025a0:	697b      	ldr	r3, [r7, #20]
 80025a2:	ee07 3a90 	vmov	s15, r3
 80025a6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80025aa:	eddf 6a1a 	vldr	s13, [pc, #104]	; 8002614 <AfficheLuminosite+0xa4>
 80025ae:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80025b2:	edc7 7a03 	vstr	s15, [r7, #12]
		color = FindCouleur(ton, sat, lum) | 0xFF000000;
 80025b6:	ed97 1a03 	vldr	s2, [r7, #12]
 80025ba:	edd7 0a00 	vldr	s1, [r7]
 80025be:	ed97 0a01 	vldr	s0, [r7, #4]
 80025c2:	f000 f87d 	bl	80026c0 <FindCouleur>
 80025c6:	4603      	mov	r3, r0
 80025c8:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80025cc:	60bb      	str	r3, [r7, #8]
		for(char j = 0; j<18; j++)
 80025ce:	2300      	movs	r3, #0
 80025d0:	74fb      	strb	r3, [r7, #19]
 80025d2:	e00e      	b.n	80025f2 <AfficheLuminosite+0x82>
		{
			BSP_LCD_DrawPixel(100+i, 252+j, color);
 80025d4:	697b      	ldr	r3, [r7, #20]
 80025d6:	b29b      	uxth	r3, r3
 80025d8:	3364      	adds	r3, #100	; 0x64
 80025da:	b298      	uxth	r0, r3
 80025dc:	7cfb      	ldrb	r3, [r7, #19]
 80025de:	b29b      	uxth	r3, r3
 80025e0:	33fc      	adds	r3, #252	; 0xfc
 80025e2:	b29b      	uxth	r3, r3
 80025e4:	68ba      	ldr	r2, [r7, #8]
 80025e6:	4619      	mov	r1, r3
 80025e8:	f002 f8e4 	bl	80047b4 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 80025ec:	7cfb      	ldrb	r3, [r7, #19]
 80025ee:	3301      	adds	r3, #1
 80025f0:	74fb      	strb	r3, [r7, #19]
 80025f2:	7cfb      	ldrb	r3, [r7, #19]
 80025f4:	2b11      	cmp	r3, #17
 80025f6:	d9ed      	bls.n	80025d4 <AfficheLuminosite+0x64>
	for(uint32_t i = 0;i<256;i++)
 80025f8:	697b      	ldr	r3, [r7, #20]
 80025fa:	3301      	adds	r3, #1
 80025fc:	617b      	str	r3, [r7, #20]
 80025fe:	697b      	ldr	r3, [r7, #20]
 8002600:	2bff      	cmp	r3, #255	; 0xff
 8002602:	d9cd      	bls.n	80025a0 <AfficheLuminosite+0x30>
		}
    }
	osDelay(200);
 8002604:	20c8      	movs	r0, #200	; 0xc8
 8002606:	f00a fce2 	bl	800cfce <osDelay>
}
 800260a:	bf00      	nop
 800260c:	3718      	adds	r7, #24
 800260e:	46bd      	mov	sp, r7
 8002610:	bd80      	pop	{r7, pc}
 8002612:	bf00      	nop
 8002614:	437f0000 	.word	0x437f0000

08002618 <AfficheSaturation>:

/*
 * Affiche le dégradé de saturation pour que l'utilisateur puisse faire son choix
 */
void AfficheSaturation(float ton, float lum)
{
 8002618:	b580      	push	{r7, lr}
 800261a:	b086      	sub	sp, #24
 800261c:	af00      	add	r7, sp, #0
 800261e:	ed87 0a01 	vstr	s0, [r7, #4]
 8002622:	edc7 0a00 	vstr	s1, [r7]
	float sat;
	uint32_t color;
	BSP_LCD_SelectLayer(1);
 8002626:	2001      	movs	r0, #1
 8002628:	f001 fcb4 	bl	8003f94 <BSP_LCD_SelectLayer>
	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 800262c:	f04f 30ff 	mov.w	r0, #4294967295
 8002630:	f001 fcc0 	bl	8003fb4 <BSP_LCD_SetTextColor>
	BSP_LCD_FillRect(0, 251, 480, 21);
 8002634:	2315      	movs	r3, #21
 8002636:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800263a:	21fb      	movs	r1, #251	; 0xfb
 800263c:	2000      	movs	r0, #0
 800263e:	f002 f901 	bl	8004844 <BSP_LCD_FillRect>
	for(uint32_t i = 0;i<256;i++)
 8002642:	2300      	movs	r3, #0
 8002644:	617b      	str	r3, [r7, #20]
 8002646:	e02e      	b.n	80026a6 <AfficheSaturation+0x8e>
    {
		sat = (float)i/255;
 8002648:	697b      	ldr	r3, [r7, #20]
 800264a:	ee07 3a90 	vmov	s15, r3
 800264e:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002652:	eddf 6a1a 	vldr	s13, [pc, #104]	; 80026bc <AfficheSaturation+0xa4>
 8002656:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800265a:	edc7 7a03 	vstr	s15, [r7, #12]
		color = FindCouleur(ton, sat, lum) | 0xFF000000;
 800265e:	ed97 1a00 	vldr	s2, [r7]
 8002662:	edd7 0a03 	vldr	s1, [r7, #12]
 8002666:	ed97 0a01 	vldr	s0, [r7, #4]
 800266a:	f000 f829 	bl	80026c0 <FindCouleur>
 800266e:	4603      	mov	r3, r0
 8002670:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002674:	60bb      	str	r3, [r7, #8]
		for(char j = 0; j<18; j++)
 8002676:	2300      	movs	r3, #0
 8002678:	74fb      	strb	r3, [r7, #19]
 800267a:	e00e      	b.n	800269a <AfficheSaturation+0x82>
		{
			BSP_LCD_DrawPixel(100+i, 252+j, color);
 800267c:	697b      	ldr	r3, [r7, #20]
 800267e:	b29b      	uxth	r3, r3
 8002680:	3364      	adds	r3, #100	; 0x64
 8002682:	b298      	uxth	r0, r3
 8002684:	7cfb      	ldrb	r3, [r7, #19]
 8002686:	b29b      	uxth	r3, r3
 8002688:	33fc      	adds	r3, #252	; 0xfc
 800268a:	b29b      	uxth	r3, r3
 800268c:	68ba      	ldr	r2, [r7, #8]
 800268e:	4619      	mov	r1, r3
 8002690:	f002 f890 	bl	80047b4 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 8002694:	7cfb      	ldrb	r3, [r7, #19]
 8002696:	3301      	adds	r3, #1
 8002698:	74fb      	strb	r3, [r7, #19]
 800269a:	7cfb      	ldrb	r3, [r7, #19]
 800269c:	2b11      	cmp	r3, #17
 800269e:	d9ed      	bls.n	800267c <AfficheSaturation+0x64>
	for(uint32_t i = 0;i<256;i++)
 80026a0:	697b      	ldr	r3, [r7, #20]
 80026a2:	3301      	adds	r3, #1
 80026a4:	617b      	str	r3, [r7, #20]
 80026a6:	697b      	ldr	r3, [r7, #20]
 80026a8:	2bff      	cmp	r3, #255	; 0xff
 80026aa:	d9cd      	bls.n	8002648 <AfficheSaturation+0x30>
		}
    }
	osDelay(200);
 80026ac:	20c8      	movs	r0, #200	; 0xc8
 80026ae:	f00a fc8e 	bl	800cfce <osDelay>
}
 80026b2:	bf00      	nop
 80026b4:	3718      	adds	r7, #24
 80026b6:	46bd      	mov	sp, r7
 80026b8:	bd80      	pop	{r7, pc}
 80026ba:	bf00      	nop
 80026bc:	437f0000 	.word	0x437f0000

080026c0 <FindCouleur>:
/*
 * trouve la couleur RVB à partir de la couleur TSL:
 * renvoi un entier de la forme RGB-888 : 0xRRVVBB
 */
uint32_t FindCouleur(float ton, float sat, float lum)
{
 80026c0:	b580      	push	{r7, lr}
 80026c2:	b08e      	sub	sp, #56	; 0x38
 80026c4:	af00      	add	r7, sp, #0
 80026c6:	ed87 0a03 	vstr	s0, [r7, #12]
 80026ca:	edc7 0a02 	vstr	s1, [r7, #8]
 80026ce:	ed87 1a01 	vstr	s2, [r7, #4]
	char Red, Green, Blue;
	uint32_t color = 0;
 80026d2:	2300      	movs	r3, #0
 80026d4:	62bb      	str	r3, [r7, #40]	; 0x28
	float R = 0;
 80026d6:	f04f 0300 	mov.w	r3, #0
 80026da:	637b      	str	r3, [r7, #52]	; 0x34
	float V = 0;
 80026dc:	f04f 0300 	mov.w	r3, #0
 80026e0:	633b      	str	r3, [r7, #48]	; 0x30
	float B = 0;
 80026e2:	f04f 0300 	mov.w	r3, #0
 80026e6:	62fb      	str	r3, [r7, #44]	; 0x2c
	float C;
	float m;
	float T_prime;
	float X;
	C = lum*sat;
 80026e8:	ed97 7a01 	vldr	s14, [r7, #4]
 80026ec:	edd7 7a02 	vldr	s15, [r7, #8]
 80026f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80026f4:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
	m = lum-C;
 80026f8:	ed97 7a01 	vldr	s14, [r7, #4]
 80026fc:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8002700:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002704:	edc7 7a08 	vstr	s15, [r7, #32]
	T_prime = ton/60;
 8002708:	ed97 7a03 	vldr	s14, [r7, #12]
 800270c:	eddf 6a61 	vldr	s13, [pc, #388]	; 8002894 <FindCouleur+0x1d4>
 8002710:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002714:	edc7 7a07 	vstr	s15, [r7, #28]
	X = C*(1-absolu((modulo(T_prime, 2))-1));
 8002718:	2002      	movs	r0, #2
 800271a:	ed97 0a07 	vldr	s0, [r7, #28]
 800271e:	f000 f917 	bl	8002950 <modulo>
 8002722:	eeb0 7a40 	vmov.f32	s14, s0
 8002726:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800272a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800272e:	eeb0 0a67 	vmov.f32	s0, s15
 8002732:	f000 f92f 	bl	8002994 <absolu>
 8002736:	eeb0 7a40 	vmov.f32	s14, s0
 800273a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800273e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002742:	ed97 7a09 	vldr	s14, [r7, #36]	; 0x24
 8002746:	ee67 7a27 	vmul.f32	s15, s14, s15
 800274a:	edc7 7a06 	vstr	s15, [r7, #24]
	if((T_prime>=0) && (T_prime<1))
 800274e:	edd7 7a07 	vldr	s15, [r7, #28]
 8002752:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800275a:	db0d      	blt.n	8002778 <FindCouleur+0xb8>
 800275c:	edd7 7a07 	vldr	s15, [r7, #28]
 8002760:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8002764:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002768:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800276c:	d504      	bpl.n	8002778 <FindCouleur+0xb8>
	{
		R = C;
 800276e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002770:	637b      	str	r3, [r7, #52]	; 0x34
		V = X;
 8002772:	69bb      	ldr	r3, [r7, #24]
 8002774:	633b      	str	r3, [r7, #48]	; 0x30
 8002776:	e044      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<2)
 8002778:	edd7 7a07 	vldr	s15, [r7, #28]
 800277c:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 8002780:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002784:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002788:	d504      	bpl.n	8002794 <FindCouleur+0xd4>
	{
		R = X;
 800278a:	69bb      	ldr	r3, [r7, #24]
 800278c:	637b      	str	r3, [r7, #52]	; 0x34
		V = C;
 800278e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002790:	633b      	str	r3, [r7, #48]	; 0x30
 8002792:	e036      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<3)
 8002794:	edd7 7a07 	vldr	s15, [r7, #28]
 8002798:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
 800279c:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027a4:	d504      	bpl.n	80027b0 <FindCouleur+0xf0>
	{
		B = X;
 80027a6:	69bb      	ldr	r3, [r7, #24]
 80027a8:	62fb      	str	r3, [r7, #44]	; 0x2c
		V = C;
 80027aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027ac:	633b      	str	r3, [r7, #48]	; 0x30
 80027ae:	e028      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<4)
 80027b0:	edd7 7a07 	vldr	s15, [r7, #28]
 80027b4:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 80027b8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027c0:	d504      	bpl.n	80027cc <FindCouleur+0x10c>
	{
		B = C;
 80027c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027c4:	62fb      	str	r3, [r7, #44]	; 0x2c
		V = X;
 80027c6:	69bb      	ldr	r3, [r7, #24]
 80027c8:	633b      	str	r3, [r7, #48]	; 0x30
 80027ca:	e01a      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<5)
 80027cc:	edd7 7a07 	vldr	s15, [r7, #28]
 80027d0:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 80027d4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027dc:	d504      	bpl.n	80027e8 <FindCouleur+0x128>
	{
		B = C;
 80027de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027e0:	62fb      	str	r3, [r7, #44]	; 0x2c
		R = X;
 80027e2:	69bb      	ldr	r3, [r7, #24]
 80027e4:	637b      	str	r3, [r7, #52]	; 0x34
 80027e6:	e00c      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<6)
 80027e8:	edd7 7a07 	vldr	s15, [r7, #28]
 80027ec:	eeb1 7a08 	vmov.f32	s14, #24	; 0x40c00000  6.0
 80027f0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027f8:	d503      	bpl.n	8002802 <FindCouleur+0x142>
	{
		R = C;
 80027fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027fc:	637b      	str	r3, [r7, #52]	; 0x34
		B = X;
 80027fe:	69bb      	ldr	r3, [r7, #24]
 8002800:	62fb      	str	r3, [r7, #44]	; 0x2c
	}
	R = (R+m)*255;
 8002802:	ed97 7a0d 	vldr	s14, [r7, #52]	; 0x34
 8002806:	edd7 7a08 	vldr	s15, [r7, #32]
 800280a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800280e:	ed9f 7a22 	vldr	s14, [pc, #136]	; 8002898 <FindCouleur+0x1d8>
 8002812:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002816:	edc7 7a0d 	vstr	s15, [r7, #52]	; 0x34
	V = (V+m)*255;
 800281a:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800281e:	edd7 7a08 	vldr	s15, [r7, #32]
 8002822:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002826:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8002898 <FindCouleur+0x1d8>
 800282a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800282e:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
	B = (B+m)*255;
 8002832:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8002836:	edd7 7a08 	vldr	s15, [r7, #32]
 800283a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800283e:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8002898 <FindCouleur+0x1d8>
 8002842:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002846:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
	Red = (int)R;
 800284a:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800284e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002852:	edc7 7a00 	vstr	s15, [r7]
 8002856:	683b      	ldr	r3, [r7, #0]
 8002858:	75fb      	strb	r3, [r7, #23]
	Green = (int)V;
 800285a:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 800285e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002862:	edc7 7a00 	vstr	s15, [r7]
 8002866:	683b      	ldr	r3, [r7, #0]
 8002868:	75bb      	strb	r3, [r7, #22]
	Blue = (int)B;
 800286a:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800286e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002872:	edc7 7a00 	vstr	s15, [r7]
 8002876:	683b      	ldr	r3, [r7, #0]
 8002878:	757b      	strb	r3, [r7, #21]
	color = (Red<<16)+(Green<<8)+Blue;
 800287a:	7dfb      	ldrb	r3, [r7, #23]
 800287c:	041a      	lsls	r2, r3, #16
 800287e:	7dbb      	ldrb	r3, [r7, #22]
 8002880:	021b      	lsls	r3, r3, #8
 8002882:	441a      	add	r2, r3
 8002884:	7d7b      	ldrb	r3, [r7, #21]
 8002886:	4413      	add	r3, r2
 8002888:	62bb      	str	r3, [r7, #40]	; 0x28
	return color;
 800288a:	6abb      	ldr	r3, [r7, #40]	; 0x28
}
 800288c:	4618      	mov	r0, r3
 800288e:	3738      	adds	r7, #56	; 0x38
 8002890:	46bd      	mov	sp, r7
 8002892:	bd80      	pop	{r7, pc}
 8002894:	42700000 	.word	0x42700000
 8002898:	437f0000 	.word	0x437f0000

0800289c <FindTonalite>:
/*
 * Renvoi la tonalité entre 0° et 360° à partir de la position du doigt sur la barre
 */
float FindTonalite(uint16_t pos)
{
 800289c:	b480      	push	{r7}
 800289e:	b085      	sub	sp, #20
 80028a0:	af00      	add	r7, sp, #0
 80028a2:	4603      	mov	r3, r0
 80028a4:	80fb      	strh	r3, [r7, #6]
	float ton;
	ton = (float)pos;
 80028a6:	88fb      	ldrh	r3, [r7, #6]
 80028a8:	ee07 3a90 	vmov	s15, r3
 80028ac:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80028b0:	edc7 7a03 	vstr	s15, [r7, #12]
	ton = (ton/383)*360;
 80028b4:	ed97 7a03 	vldr	s14, [r7, #12]
 80028b8:	eddf 6a09 	vldr	s13, [pc, #36]	; 80028e0 <FindTonalite+0x44>
 80028bc:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80028c0:	ed9f 7a08 	vldr	s14, [pc, #32]	; 80028e4 <FindTonalite+0x48>
 80028c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80028c8:	edc7 7a03 	vstr	s15, [r7, #12]
	return ton;
 80028cc:	68fb      	ldr	r3, [r7, #12]
 80028ce:	ee07 3a90 	vmov	s15, r3
}
 80028d2:	eeb0 0a67 	vmov.f32	s0, s15
 80028d6:	3714      	adds	r7, #20
 80028d8:	46bd      	mov	sp, r7
 80028da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028de:	4770      	bx	lr
 80028e0:	43bf8000 	.word	0x43bf8000
 80028e4:	43b40000 	.word	0x43b40000

080028e8 <FindLuminosite>:

/*
 * Renvoi la Luminosité entre 0 et 1 à partir de la position du doigt sur la barre
 */
float FindLuminosite(uint16_t pos)
{
 80028e8:	b480      	push	{r7}
 80028ea:	b083      	sub	sp, #12
 80028ec:	af00      	add	r7, sp, #0
 80028ee:	4603      	mov	r3, r0
 80028f0:	80fb      	strh	r3, [r7, #6]
	return (float) pos/255;
 80028f2:	88fb      	ldrh	r3, [r7, #6]
 80028f4:	ee07 3a90 	vmov	s15, r3
 80028f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80028fc:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8002918 <FindLuminosite+0x30>
 8002900:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8002904:	eef0 7a66 	vmov.f32	s15, s13
}
 8002908:	eeb0 0a67 	vmov.f32	s0, s15
 800290c:	370c      	adds	r7, #12
 800290e:	46bd      	mov	sp, r7
 8002910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002914:	4770      	bx	lr
 8002916:	bf00      	nop
 8002918:	437f0000 	.word	0x437f0000

0800291c <FindSaturation>:

/*
 * Renvoi la Saturation entre 0 et 1 à partir de la position du doigt sur la barre
 */
float FindSaturation(uint16_t pos)
{
 800291c:	b480      	push	{r7}
 800291e:	b083      	sub	sp, #12
 8002920:	af00      	add	r7, sp, #0
 8002922:	4603      	mov	r3, r0
 8002924:	80fb      	strh	r3, [r7, #6]
	return (float)pos/255;
 8002926:	88fb      	ldrh	r3, [r7, #6]
 8002928:	ee07 3a90 	vmov	s15, r3
 800292c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002930:	ed9f 7a06 	vldr	s14, [pc, #24]	; 800294c <FindSaturation+0x30>
 8002934:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8002938:	eef0 7a66 	vmov.f32	s15, s13
}
 800293c:	eeb0 0a67 	vmov.f32	s0, s15
 8002940:	370c      	adds	r7, #12
 8002942:	46bd      	mov	sp, r7
 8002944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002948:	4770      	bx	lr
 800294a:	bf00      	nop
 800294c:	437f0000 	.word	0x437f0000

08002950 <modulo>:

float modulo(float val, char mod)
{
 8002950:	b480      	push	{r7}
 8002952:	b085      	sub	sp, #20
 8002954:	af00      	add	r7, sp, #0
 8002956:	ed87 0a01 	vstr	s0, [r7, #4]
 800295a:	4603      	mov	r3, r0
 800295c:	70fb      	strb	r3, [r7, #3]
	uint32_t q;
	q = (int) val/mod;
 800295e:	edd7 7a01 	vldr	s15, [r7, #4]
 8002962:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002966:	ee17 2a90 	vmov	r2, s15
 800296a:	78fb      	ldrb	r3, [r7, #3]
 800296c:	fb92 f3f3 	sdiv	r3, r2, r3
 8002970:	60fb      	str	r3, [r7, #12]
	return(val - 2*q);
 8002972:	68fb      	ldr	r3, [r7, #12]
 8002974:	005b      	lsls	r3, r3, #1
 8002976:	ee07 3a90 	vmov	s15, r3
 800297a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800297e:	ed97 7a01 	vldr	s14, [r7, #4]
 8002982:	ee77 7a67 	vsub.f32	s15, s14, s15
}
 8002986:	eeb0 0a67 	vmov.f32	s0, s15
 800298a:	3714      	adds	r7, #20
 800298c:	46bd      	mov	sp, r7
 800298e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002992:	4770      	bx	lr

08002994 <absolu>:

float absolu(float val)
{
 8002994:	b480      	push	{r7}
 8002996:	b083      	sub	sp, #12
 8002998:	af00      	add	r7, sp, #0
 800299a:	ed87 0a01 	vstr	s0, [r7, #4]
	if(val<0) return -val;
 800299e:	edd7 7a01 	vldr	s15, [r7, #4]
 80029a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80029a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80029aa:	d504      	bpl.n	80029b6 <absolu+0x22>
 80029ac:	edd7 7a01 	vldr	s15, [r7, #4]
 80029b0:	eef1 7a67 	vneg.f32	s15, s15
 80029b4:	e001      	b.n	80029ba <absolu+0x26>
	else return val;
 80029b6:	edd7 7a01 	vldr	s15, [r7, #4]
}
 80029ba:	eeb0 0a67 	vmov.f32	s0, s15
 80029be:	370c      	adds	r7, #12
 80029c0:	46bd      	mov	sp, r7
 80029c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029c6:	4770      	bx	lr

080029c8 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 80029c8:	b580      	push	{r7, lr}
 80029ca:	b082      	sub	sp, #8
 80029cc:	af00      	add	r7, sp, #0
 80029ce:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80029d0:	2001      	movs	r0, #1
 80029d2:	f00a fafc 	bl	800cfce <osDelay>
 80029d6:	e7fb      	b.n	80029d0 <StartDefaultTask+0x8>

080029d8 <StartMode>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartMode */
void StartMode(void const * argument)
{
 80029d8:	b5b0      	push	{r4, r5, r7, lr}
 80029da:	b0cc      	sub	sp, #304	; 0x130
 80029dc:	af00      	add	r7, sp, #0
 80029de:	1d3b      	adds	r3, r7, #4
 80029e0:	6018      	str	r0, [r3, #0]
  /* USER CODE BEGIN StartMode */
  /* Infinite loop */
  TickType_t xLastWakeTime;
  xLastWakeTime = xTaskGetTickCount();
 80029e2:	f00b fbe3 	bl	800e1ac <xTaskGetTickCount>
 80029e6:	4603      	mov	r3, r0
 80029e8:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
  static TS_StateTypeDef  TS_State;
  char radius_prec; //rayon précédent pour supprimer le curseur dans la sélection
  char sous_menu = 0; // permet de savoir si on est dans un sous menu
 80029ec:	2300      	movs	r3, #0
 80029ee:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
  char menu_couleur = 0; // permet de savoir si on est dans un des sous_menu couleur (tonalité, saturation, luminosité)
 80029f2:	2300      	movs	r3, #0
 80029f4:	f887 312e 	strb.w	r3, [r7, #302]	; 0x12e
  //valeur TSL pour la couleur
  float ton = 180.0;
 80029f8:	4bb1      	ldr	r3, [pc, #708]	; (8002cc0 <StartMode+0x2e8>)
 80029fa:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
  float lum = 0.5;
 80029fe:	f04f 537c 	mov.w	r3, #1056964608	; 0x3f000000
 8002a02:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
  float sat = 0.5;
 8002a06:	f04f 537c 	mov.w	r3, #1056964608	; 0x3f000000
 8002a0a:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
  char text[] = "   Layer   |   Pinceau   | Transparence |   Couleur   |    Taille   ";
 8002a0e:	4aad      	ldr	r2, [pc, #692]	; (8002cc4 <StartMode+0x2ec>)
 8002a10:	f107 03bc 	add.w	r3, r7, #188	; 0xbc
 8002a14:	4611      	mov	r1, r2
 8002a16:	2245      	movs	r2, #69	; 0x45
 8002a18:	4618      	mov	r0, r3
 8002a1a:	f00c fd2b 	bl	800f474 <memcpy>
  char text_layer[] = "Calque 1        |        Calque 2";
 8002a1e:	4baa      	ldr	r3, [pc, #680]	; (8002cc8 <StartMode+0x2f0>)
 8002a20:	f107 0498 	add.w	r4, r7, #152	; 0x98
 8002a24:	461d      	mov	r5, r3
 8002a26:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a28:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a2a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a2c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a2e:	682b      	ldr	r3, [r5, #0]
 8002a30:	8023      	strh	r3, [r4, #0]
  char text_alpha[] = "Choisir la transparence : ";
 8002a32:	4ba6      	ldr	r3, [pc, #664]	; (8002ccc <StartMode+0x2f4>)
 8002a34:	f107 047c 	add.w	r4, r7, #124	; 0x7c
 8002a38:	461d      	mov	r5, r3
 8002a3a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a3c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a3e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a42:	c403      	stmia	r4!, {r0, r1}
 8002a44:	8022      	strh	r2, [r4, #0]
 8002a46:	3402      	adds	r4, #2
 8002a48:	0c13      	lsrs	r3, r2, #16
 8002a4a:	7023      	strb	r3, [r4, #0]
  char text_couleur[] = "Tonalite  |    Saturation    | Luminosite";
 8002a4c:	4ba0      	ldr	r3, [pc, #640]	; (8002cd0 <StartMode+0x2f8>)
 8002a4e:	f107 0450 	add.w	r4, r7, #80	; 0x50
 8002a52:	461d      	mov	r5, r3
 8002a54:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a56:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a58:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a5c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a60:	c403      	stmia	r4!, {r0, r1}
 8002a62:	8022      	strh	r2, [r4, #0]
  couleur = FindCouleur(180,0.5,0.5)|0xFF000000;
 8002a64:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
 8002a68:	eef6 0a00 	vmov.f32	s1, #96	; 0x3f000000  0.5
 8002a6c:	ed9f 0a99 	vldr	s0, [pc, #612]	; 8002cd4 <StartMode+0x2fc>
 8002a70:	f7ff fe26 	bl	80026c0 <FindCouleur>
 8002a74:	4603      	mov	r3, r0
 8002a76:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002a7a:	4a97      	ldr	r2, [pc, #604]	; (8002cd8 <StartMode+0x300>)
 8002a7c:	6013      	str	r3, [r2, #0]
  char text_taille[] = "Taille du pinceau :";
 8002a7e:	4b97      	ldr	r3, [pc, #604]	; (8002cdc <StartMode+0x304>)
 8002a80:	f107 043c 	add.w	r4, r7, #60	; 0x3c
 8002a84:	461d      	mov	r5, r3
 8002a86:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a88:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a8a:	682b      	ldr	r3, [r5, #0]
 8002a8c:	6023      	str	r3, [r4, #0]
  char text_brush[] = " <<<<            Valider            >>>>";
 8002a8e:	f107 0310 	add.w	r3, r7, #16
 8002a92:	4a93      	ldr	r2, [pc, #588]	; (8002ce0 <StartMode+0x308>)
 8002a94:	461c      	mov	r4, r3
 8002a96:	4615      	mov	r5, r2
 8002a98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a9e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002aa0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002aa4:	c403      	stmia	r4!, {r0, r1}
 8002aa6:	7022      	strb	r2, [r4, #0]
  char demande_envoi[] = "d";
 8002aa8:	f107 030c 	add.w	r3, r7, #12
 8002aac:	2264      	movs	r2, #100	; 0x64
 8002aae:	801a      	strh	r2, [r3, #0]
  char confirmation;
  uint32_t pixel;
  char R,V,B;
  for(;;)
  {
	  switch(etat)
 8002ab0:	4b8c      	ldr	r3, [pc, #560]	; (8002ce4 <StartMode+0x30c>)
 8002ab2:	781b      	ldrb	r3, [r3, #0]
 8002ab4:	2b08      	cmp	r3, #8
 8002ab6:	f200 8655 	bhi.w	8003764 <StartMode+0xd8c>
 8002aba:	a201      	add	r2, pc, #4	; (adr r2, 8002ac0 <StartMode+0xe8>)
 8002abc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002ac0:	08003765 	.word	0x08003765
 8002ac4:	08002ae5 	.word	0x08002ae5
 8002ac8:	08002bf7 	.word	0x08002bf7
 8002acc:	08002d05 	.word	0x08002d05
 8002ad0:	08002eeb 	.word	0x08002eeb
 8002ad4:	0800306f 	.word	0x0800306f
 8002ad8:	08003451 	.word	0x08003451
 8002adc:	08003617 	.word	0x08003617
 8002ae0:	0800367d 	.word	0x0800367d
		  break;
	  /*
	   * etat d'affichage du menu
	   */
	  case 1 :
		  if(myMutexLCDHandle != NULL)
 8002ae4:	4b80      	ldr	r3, [pc, #512]	; (8002ce8 <StartMode+0x310>)
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	2b00      	cmp	r3, #0
 8002aea:	d07f      	beq.n	8002bec <StartMode+0x214>
		  {
			   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002aec:	4b7e      	ldr	r3, [pc, #504]	; (8002ce8 <StartMode+0x310>)
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	2101      	movs	r1, #1
 8002af2:	4618      	mov	r0, r3
 8002af4:	f00a fde2 	bl	800d6bc <xQueueSemaphoreTake>
 8002af8:	4603      	mov	r3, r0
 8002afa:	2b01      	cmp	r3, #1
 8002afc:	d176      	bne.n	8002bec <StartMode+0x214>
			   {
				   BSP_LCD_SelectLayer(1);
 8002afe:	2001      	movs	r0, #1
 8002b00:	f001 fa48 	bl	8003f94 <BSP_LCD_SelectLayer>
				   BSP_LCD_SetFont(&Font12);
 8002b04:	4879      	ldr	r0, [pc, #484]	; (8002cec <StartMode+0x314>)
 8002b06:	f001 fa87 	bl	8004018 <BSP_LCD_SetFont>
				   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002b0a:	f04f 30ff 	mov.w	r0, #4294967295
 8002b0e:	f001 fa51 	bl	8003fb4 <BSP_LCD_SetTextColor>
				   BSP_LCD_FillRect(0, 251, 480, 21);
 8002b12:	2315      	movs	r3, #21
 8002b14:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002b18:	21fb      	movs	r1, #251	; 0xfb
 8002b1a:	2000      	movs	r0, #0
 8002b1c:	f001 fe92 	bl	8004844 <BSP_LCD_FillRect>
				   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8002b20:	4873      	ldr	r0, [pc, #460]	; (8002cf0 <StartMode+0x318>)
 8002b22:	f001 fa47 	bl	8003fb4 <BSP_LCD_SetTextColor>
				   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text, CENTER_MODE);
 8002b26:	f107 02bc 	add.w	r2, r7, #188	; 0xbc
 8002b2a:	2301      	movs	r3, #1
 8002b2c:	21fc      	movs	r1, #252	; 0xfc
 8002b2e:	2000      	movs	r0, #0
 8002b30:	f001 fbb4 	bl	800429c <BSP_LCD_DisplayStringAt>
				   BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8002b34:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8002b38:	f001 fa3c 	bl	8003fb4 <BSP_LCD_SetTextColor>
				   LCD_PAINTBRUSH_SAMPLE(480-taille_menu/2, 3*taille_menu/2, taille_menu/2-5);
 8002b3c:	2214      	movs	r2, #20
 8002b3e:	214b      	movs	r1, #75	; 0x4b
 8002b40:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002b44:	f7ff fb6a 	bl	800221c <LCD_PAINTBRUSH_SAMPLE>
				   BSP_LCD_SetTextColor(0xFFFF00FF); //violet
 8002b48:	f46f 407f 	mvn.w	r0, #65280	; 0xff00
 8002b4c:	f001 fa32 	bl	8003fb4 <BSP_LCD_SetTextColor>
				   BSP_LCD_FillRect(98*etat_int-170, 265, 35, 5);
 8002b50:	4b68      	ldr	r3, [pc, #416]	; (8002cf4 <StartMode+0x31c>)
 8002b52:	781b      	ldrb	r3, [r3, #0]
 8002b54:	b29b      	uxth	r3, r3
 8002b56:	461a      	mov	r2, r3
 8002b58:	00d2      	lsls	r2, r2, #3
 8002b5a:	1ad3      	subs	r3, r2, r3
 8002b5c:	461a      	mov	r2, r3
 8002b5e:	00d2      	lsls	r2, r2, #3
 8002b60:	1ad3      	subs	r3, r2, r3
 8002b62:	005b      	lsls	r3, r3, #1
 8002b64:	b29b      	uxth	r3, r3
 8002b66:	3baa      	subs	r3, #170	; 0xaa
 8002b68:	b298      	uxth	r0, r3
 8002b6a:	2305      	movs	r3, #5
 8002b6c:	2223      	movs	r2, #35	; 0x23
 8002b6e:	f240 1109 	movw	r1, #265	; 0x109
 8002b72:	f001 fe67 	bl	8004844 <BSP_LCD_FillRect>
				   BSP_LCD_SetTextColor(couleur | 0xFF000000);
 8002b76:	4b58      	ldr	r3, [pc, #352]	; (8002cd8 <StartMode+0x300>)
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002b7e:	4618      	mov	r0, r3
 8002b80:	f001 fa18 	bl	8003fb4 <BSP_LCD_SetTextColor>
				   BSP_LCD_FillCircle(480-taille_menu/2, taille_menu/2, taille_menu/2-5);
 8002b84:	2214      	movs	r2, #20
 8002b86:	2119      	movs	r1, #25
 8002b88:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002b8c:	f001 fed4 	bl	8004938 <BSP_LCD_FillCircle>
				   BSP_LCD_SetTextColor(couleur & 0xFF000000);
 8002b90:	4b51      	ldr	r3, [pc, #324]	; (8002cd8 <StartMode+0x300>)
 8002b92:	681b      	ldr	r3, [r3, #0]
 8002b94:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002b98:	4618      	mov	r0, r3
 8002b9a:	f001 fa0b 	bl	8003fb4 <BSP_LCD_SetTextColor>
				   BSP_LCD_FillCircle(480-taille_menu/2, 5*taille_menu/2, taille_menu/2-5);
 8002b9e:	2214      	movs	r2, #20
 8002ba0:	217d      	movs	r1, #125	; 0x7d
 8002ba2:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002ba6:	f001 fec7 	bl	8004938 <BSP_LCD_FillCircle>
				   BSP_LCD_SetFont(&Font24);
 8002baa:	4853      	ldr	r0, [pc, #332]	; (8002cf8 <StartMode+0x320>)
 8002bac:	f001 fa34 	bl	8004018 <BSP_LCD_SetFont>
				   BSP_LCD_DisplayChar(480-taille_menu+15, 6*taille_menu/2, 49+layer);
 8002bb0:	4b52      	ldr	r3, [pc, #328]	; (8002cfc <StartMode+0x324>)
 8002bb2:	781b      	ldrb	r3, [r3, #0]
 8002bb4:	3331      	adds	r3, #49	; 0x31
 8002bb6:	b2db      	uxtb	r3, r3
 8002bb8:	461a      	mov	r2, r3
 8002bba:	2196      	movs	r1, #150	; 0x96
 8002bbc:	f240 10bd 	movw	r0, #445	; 0x1bd
 8002bc0:	f001 fb28 	bl	8004214 <BSP_LCD_DisplayChar>
				   BSP_LCD_SetFont(&Font12);
 8002bc4:	4849      	ldr	r0, [pc, #292]	; (8002cec <StartMode+0x314>)
 8002bc6:	f001 fa27 	bl	8004018 <BSP_LCD_SetFont>
				   BSP_LCD_SelectLayer(layer);
 8002bca:	4b4c      	ldr	r3, [pc, #304]	; (8002cfc <StartMode+0x324>)
 8002bcc:	781b      	ldrb	r3, [r3, #0]
 8002bce:	4618      	mov	r0, r3
 8002bd0:	f001 f9e0 	bl	8003f94 <BSP_LCD_SelectLayer>
				   BSP_LCD_SetTextColor(couleur);
 8002bd4:	4b40      	ldr	r3, [pc, #256]	; (8002cd8 <StartMode+0x300>)
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	4618      	mov	r0, r3
 8002bda:	f001 f9eb 	bl	8003fb4 <BSP_LCD_SetTextColor>
				   xSemaphoreGive(myMutexLCDHandle);
 8002bde:	4b42      	ldr	r3, [pc, #264]	; (8002ce8 <StartMode+0x310>)
 8002be0:	6818      	ldr	r0, [r3, #0]
 8002be2:	2300      	movs	r3, #0
 8002be4:	2200      	movs	r2, #0
 8002be6:	2100      	movs	r1, #0
 8002be8:	f00a fc66 	bl	800d4b8 <xQueueGenericSend>
			   }
		   }
		  etat = 0;
 8002bec:	4b3d      	ldr	r3, [pc, #244]	; (8002ce4 <StartMode+0x30c>)
 8002bee:	2200      	movs	r2, #0
 8002bf0:	701a      	strb	r2, [r3, #0]
		  break;
 8002bf2:	f000 bdb7 	b.w	8003764 <StartMode+0xd8c>
	  /*
	   * etat de sélection du calque
	   */
	  case 2 :
		  if(sous_menu == 0)
 8002bf6:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8002bfa:	2b00      	cmp	r3, #0
 8002bfc:	d12e      	bne.n	8002c5c <StartMode+0x284>
		  {
			  if(myMutexLCDHandle != NULL)
 8002bfe:	4b3a      	ldr	r3, [pc, #232]	; (8002ce8 <StartMode+0x310>)
 8002c00:	681b      	ldr	r3, [r3, #0]
 8002c02:	2b00      	cmp	r3, #0
 8002c04:	d02a      	beq.n	8002c5c <StartMode+0x284>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002c06:	4b38      	ldr	r3, [pc, #224]	; (8002ce8 <StartMode+0x310>)
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	2101      	movs	r1, #1
 8002c0c:	4618      	mov	r0, r3
 8002c0e:	f00a fd55 	bl	800d6bc <xQueueSemaphoreTake>
 8002c12:	4603      	mov	r3, r0
 8002c14:	2b01      	cmp	r3, #1
 8002c16:	d121      	bne.n	8002c5c <StartMode+0x284>
				   {
					   BSP_LCD_SelectLayer(1);
 8002c18:	2001      	movs	r0, #1
 8002c1a:	f001 f9bb 	bl	8003f94 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetFont(&Font12);
 8002c1e:	4833      	ldr	r0, [pc, #204]	; (8002cec <StartMode+0x314>)
 8002c20:	f001 f9fa 	bl	8004018 <BSP_LCD_SetFont>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002c24:	f04f 30ff 	mov.w	r0, #4294967295
 8002c28:	f001 f9c4 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 8002c2c:	2315      	movs	r3, #21
 8002c2e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002c32:	21fb      	movs	r1, #251	; 0xfb
 8002c34:	2000      	movs	r0, #0
 8002c36:	f001 fe05 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8002c3a:	482d      	ldr	r0, [pc, #180]	; (8002cf0 <StartMode+0x318>)
 8002c3c:	f001 f9ba 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_layer, CENTER_MODE);
 8002c40:	f107 0298 	add.w	r2, r7, #152	; 0x98
 8002c44:	2301      	movs	r3, #1
 8002c46:	21fc      	movs	r1, #252	; 0xfc
 8002c48:	2000      	movs	r0, #0
 8002c4a:	f001 fb27 	bl	800429c <BSP_LCD_DisplayStringAt>
					   xSemaphoreGive(myMutexLCDHandle);
 8002c4e:	4b26      	ldr	r3, [pc, #152]	; (8002ce8 <StartMode+0x310>)
 8002c50:	6818      	ldr	r0, [r3, #0]
 8002c52:	2300      	movs	r3, #0
 8002c54:	2200      	movs	r2, #0
 8002c56:	2100      	movs	r1, #0
 8002c58:	f00a fc2e 	bl	800d4b8 <xQueueGenericSend>
				   }
			   }

		  }
		  sous_menu = 1;
 8002c5c:	2301      	movs	r3, #1
 8002c5e:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
		  BSP_TS_GetState(&TS_State);
 8002c62:	4827      	ldr	r0, [pc, #156]	; (8002d00 <StartMode+0x328>)
 8002c64:	f002 fb16 	bl	8005294 <BSP_TS_GetState>
		  if(TS_State.touchDetected)
 8002c68:	4b25      	ldr	r3, [pc, #148]	; (8002d00 <StartMode+0x328>)
 8002c6a:	781b      	ldrb	r3, [r3, #0]
 8002c6c:	2b00      	cmp	r3, #0
 8002c6e:	d01c      	beq.n	8002caa <StartMode+0x2d2>
		  {
			  if((TS_State.touchX[0]<240) && TS_State.touchY[0] > 272-haut_menu)
 8002c70:	4b23      	ldr	r3, [pc, #140]	; (8002d00 <StartMode+0x328>)
 8002c72:	885b      	ldrh	r3, [r3, #2]
 8002c74:	2bef      	cmp	r3, #239	; 0xef
 8002c76:	d80a      	bhi.n	8002c8e <StartMode+0x2b6>
 8002c78:	4b21      	ldr	r3, [pc, #132]	; (8002d00 <StartMode+0x328>)
 8002c7a:	899b      	ldrh	r3, [r3, #12]
 8002c7c:	2bf0      	cmp	r3, #240	; 0xf0
 8002c7e:	d906      	bls.n	8002c8e <StartMode+0x2b6>
			  {
				  layer = 0;
 8002c80:	4b1e      	ldr	r3, [pc, #120]	; (8002cfc <StartMode+0x324>)
 8002c82:	2200      	movs	r2, #0
 8002c84:	701a      	strb	r2, [r3, #0]
				  sous_menu = 0;
 8002c86:	2300      	movs	r3, #0
 8002c88:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
 8002c8c:	e00d      	b.n	8002caa <StartMode+0x2d2>
			  }
			  else if((TS_State.touchX[0]>240) && TS_State.touchY[0] > 272-haut_menu)
 8002c8e:	4b1c      	ldr	r3, [pc, #112]	; (8002d00 <StartMode+0x328>)
 8002c90:	885b      	ldrh	r3, [r3, #2]
 8002c92:	2bf0      	cmp	r3, #240	; 0xf0
 8002c94:	d909      	bls.n	8002caa <StartMode+0x2d2>
 8002c96:	4b1a      	ldr	r3, [pc, #104]	; (8002d00 <StartMode+0x328>)
 8002c98:	899b      	ldrh	r3, [r3, #12]
 8002c9a:	2bf0      	cmp	r3, #240	; 0xf0
 8002c9c:	d905      	bls.n	8002caa <StartMode+0x2d2>
			  {
				  layer = 1;
 8002c9e:	4b17      	ldr	r3, [pc, #92]	; (8002cfc <StartMode+0x324>)
 8002ca0:	2201      	movs	r2, #1
 8002ca2:	701a      	strb	r2, [r3, #0]
				  sous_menu = 0;
 8002ca4:	2300      	movs	r3, #0
 8002ca6:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
			  }
		  }
		  if(sous_menu == 0) etat = 1; //on revient au menu de base
 8002caa:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8002cae:	2b00      	cmp	r3, #0
 8002cb0:	f040 854f 	bne.w	8003752 <StartMode+0xd7a>
 8002cb4:	4b0b      	ldr	r3, [pc, #44]	; (8002ce4 <StartMode+0x30c>)
 8002cb6:	2201      	movs	r2, #1
 8002cb8:	701a      	strb	r2, [r3, #0]
		  break;
 8002cba:	f000 bd4a 	b.w	8003752 <StartMode+0xd7a>
 8002cbe:	bf00      	nop
 8002cc0:	43340000 	.word	0x43340000
 8002cc4:	0800fd80 	.word	0x0800fd80
 8002cc8:	0800fdc8 	.word	0x0800fdc8
 8002ccc:	0800fdec 	.word	0x0800fdec
 8002cd0:	0800fe08 	.word	0x0800fe08
 8002cd4:	43340000 	.word	0x43340000
 8002cd8:	20009e84 	.word	0x20009e84
 8002cdc:	0800fe34 	.word	0x0800fe34
 8002ce0:	0800fe48 	.word	0x0800fe48
 8002ce4:	2000139e 	.word	0x2000139e
 8002ce8:	20009c34 	.word	0x20009c34
 8002cec:	200013a8 	.word	0x200013a8
 8002cf0:	ffff0000 	.word	0xffff0000
 8002cf4:	2000139f 	.word	0x2000139f
 8002cf8:	200013a0 	.word	0x200013a0
 8002cfc:	200016a2 	.word	0x200016a2
 8002d00:	200016d0 	.word	0x200016d0
	  /*
	   * etat de sélection du pinceau
	   */
	  case 3 :
		  if(sous_menu == 0)
 8002d04:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	d12e      	bne.n	8002d6a <StartMode+0x392>
		  {
			  if(myMutexLCDHandle != NULL)
 8002d0c:	4ba8      	ldr	r3, [pc, #672]	; (8002fb0 <StartMode+0x5d8>)
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	d02a      	beq.n	8002d6a <StartMode+0x392>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002d14:	4ba6      	ldr	r3, [pc, #664]	; (8002fb0 <StartMode+0x5d8>)
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	2101      	movs	r1, #1
 8002d1a:	4618      	mov	r0, r3
 8002d1c:	f00a fcce 	bl	800d6bc <xQueueSemaphoreTake>
 8002d20:	4603      	mov	r3, r0
 8002d22:	2b01      	cmp	r3, #1
 8002d24:	d121      	bne.n	8002d6a <StartMode+0x392>
				   {
					   BSP_LCD_SelectLayer(1);
 8002d26:	2001      	movs	r0, #1
 8002d28:	f001 f934 	bl	8003f94 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetFont(&Font12);
 8002d2c:	48a1      	ldr	r0, [pc, #644]	; (8002fb4 <StartMode+0x5dc>)
 8002d2e:	f001 f973 	bl	8004018 <BSP_LCD_SetFont>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002d32:	f04f 30ff 	mov.w	r0, #4294967295
 8002d36:	f001 f93d 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 8002d3a:	2315      	movs	r3, #21
 8002d3c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002d40:	21fb      	movs	r1, #251	; 0xfb
 8002d42:	2000      	movs	r0, #0
 8002d44:	f001 fd7e 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8002d48:	489b      	ldr	r0, [pc, #620]	; (8002fb8 <StartMode+0x5e0>)
 8002d4a:	f001 f933 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_brush, CENTER_MODE);
 8002d4e:	f107 0210 	add.w	r2, r7, #16
 8002d52:	2301      	movs	r3, #1
 8002d54:	21fc      	movs	r1, #252	; 0xfc
 8002d56:	2000      	movs	r0, #0
 8002d58:	f001 faa0 	bl	800429c <BSP_LCD_DisplayStringAt>
					   xSemaphoreGive(myMutexLCDHandle);
 8002d5c:	4b94      	ldr	r3, [pc, #592]	; (8002fb0 <StartMode+0x5d8>)
 8002d5e:	6818      	ldr	r0, [r3, #0]
 8002d60:	2300      	movs	r3, #0
 8002d62:	2200      	movs	r2, #0
 8002d64:	2100      	movs	r1, #0
 8002d66:	f00a fba7 	bl	800d4b8 <xQueueGenericSend>
				   }
			   }

		  }
		  sous_menu = 1;
 8002d6a:	2301      	movs	r3, #1
 8002d6c:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
		  BSP_TS_GetState(&TS_State);
 8002d70:	4892      	ldr	r0, [pc, #584]	; (8002fbc <StartMode+0x5e4>)
 8002d72:	f002 fa8f 	bl	8005294 <BSP_TS_GetState>
		  if(TS_State.touchDetected)
 8002d76:	4b91      	ldr	r3, [pc, #580]	; (8002fbc <StartMode+0x5e4>)
 8002d78:	781b      	ldrb	r3, [r3, #0]
 8002d7a:	2b00      	cmp	r3, #0
 8002d7c:	f000 80ab 	beq.w	8002ed6 <StartMode+0x4fe>
		  {
			  if((TS_State.touchX[0]<190) && TS_State.touchY[0] > 272-haut_menu)
 8002d80:	4b8e      	ldr	r3, [pc, #568]	; (8002fbc <StartMode+0x5e4>)
 8002d82:	885b      	ldrh	r3, [r3, #2]
 8002d84:	2bbd      	cmp	r3, #189	; 0xbd
 8002d86:	d848      	bhi.n	8002e1a <StartMode+0x442>
 8002d88:	4b8c      	ldr	r3, [pc, #560]	; (8002fbc <StartMode+0x5e4>)
 8002d8a:	899b      	ldrh	r3, [r3, #12]
 8002d8c:	2bf0      	cmp	r3, #240	; 0xf0
 8002d8e:	d944      	bls.n	8002e1a <StartMode+0x442>
			  {
				  if(brush==0) brush = max_brush;
 8002d90:	4b8b      	ldr	r3, [pc, #556]	; (8002fc0 <StartMode+0x5e8>)
 8002d92:	781b      	ldrb	r3, [r3, #0]
 8002d94:	2b00      	cmp	r3, #0
 8002d96:	d103      	bne.n	8002da0 <StartMode+0x3c8>
 8002d98:	4b89      	ldr	r3, [pc, #548]	; (8002fc0 <StartMode+0x5e8>)
 8002d9a:	2202      	movs	r2, #2
 8002d9c:	701a      	strb	r2, [r3, #0]
 8002d9e:	e005      	b.n	8002dac <StartMode+0x3d4>
				  else brush -= 1;
 8002da0:	4b87      	ldr	r3, [pc, #540]	; (8002fc0 <StartMode+0x5e8>)
 8002da2:	781b      	ldrb	r3, [r3, #0]
 8002da4:	3b01      	subs	r3, #1
 8002da6:	b2da      	uxtb	r2, r3
 8002da8:	4b85      	ldr	r3, [pc, #532]	; (8002fc0 <StartMode+0x5e8>)
 8002daa:	701a      	strb	r2, [r3, #0]
				  if(myMutexLCDHandle != NULL)
 8002dac:	4b80      	ldr	r3, [pc, #512]	; (8002fb0 <StartMode+0x5d8>)
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	d02d      	beq.n	8002e10 <StartMode+0x438>
				  {
					   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002db4:	4b7e      	ldr	r3, [pc, #504]	; (8002fb0 <StartMode+0x5d8>)
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	2101      	movs	r1, #1
 8002dba:	4618      	mov	r0, r3
 8002dbc:	f00a fc7e 	bl	800d6bc <xQueueSemaphoreTake>
 8002dc0:	4603      	mov	r3, r0
 8002dc2:	2b01      	cmp	r3, #1
 8002dc4:	d124      	bne.n	8002e10 <StartMode+0x438>
					   {
						  BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002dc6:	f04f 30ff 	mov.w	r0, #4294967295
 8002dca:	f001 f8f3 	bl	8003fb4 <BSP_LCD_SetTextColor>
						  BSP_LCD_FillRect(480-taille_menu , taille_menu, taille_menu-1, taille_menu);
 8002dce:	2332      	movs	r3, #50	; 0x32
 8002dd0:	2231      	movs	r2, #49	; 0x31
 8002dd2:	2132      	movs	r1, #50	; 0x32
 8002dd4:	f44f 70d7 	mov.w	r0, #430	; 0x1ae
 8002dd8:	f001 fd34 	bl	8004844 <BSP_LCD_FillRect>
						  BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8002ddc:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8002de0:	f001 f8e8 	bl	8003fb4 <BSP_LCD_SetTextColor>
						  LCD_PAINTBRUSH_SAMPLE(480-taille_menu/2, 3*taille_menu/2, taille_menu/2-5);
 8002de4:	2214      	movs	r2, #20
 8002de6:	214b      	movs	r1, #75	; 0x4b
 8002de8:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002dec:	f7ff fa16 	bl	800221c <LCD_PAINTBRUSH_SAMPLE>
						  BSP_LCD_SetTextColor(couleur);
 8002df0:	4b74      	ldr	r3, [pc, #464]	; (8002fc4 <StartMode+0x5ec>)
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	4618      	mov	r0, r3
 8002df6:	f001 f8dd 	bl	8003fb4 <BSP_LCD_SetTextColor>
						  xSemaphoreGive(myMutexLCDHandle);
 8002dfa:	4b6d      	ldr	r3, [pc, #436]	; (8002fb0 <StartMode+0x5d8>)
 8002dfc:	6818      	ldr	r0, [r3, #0]
 8002dfe:	2300      	movs	r3, #0
 8002e00:	2200      	movs	r2, #0
 8002e02:	2100      	movs	r1, #0
 8002e04:	f00a fb58 	bl	800d4b8 <xQueueGenericSend>
					   }
				  }
				  while(TS_State.touchDetected) BSP_TS_GetState(&TS_State);;
 8002e08:	e002      	b.n	8002e10 <StartMode+0x438>
 8002e0a:	486c      	ldr	r0, [pc, #432]	; (8002fbc <StartMode+0x5e4>)
 8002e0c:	f002 fa42 	bl	8005294 <BSP_TS_GetState>
 8002e10:	4b6a      	ldr	r3, [pc, #424]	; (8002fbc <StartMode+0x5e4>)
 8002e12:	781b      	ldrb	r3, [r3, #0]
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	d1f8      	bne.n	8002e0a <StartMode+0x432>
			  if((TS_State.touchX[0]<190) && TS_State.touchY[0] > 272-haut_menu)
 8002e18:	e05d      	b.n	8002ed6 <StartMode+0x4fe>
			  }
			  else if((TS_State.touchX[0]>290) && TS_State.touchY[0] > 272-haut_menu)
 8002e1a:	4b68      	ldr	r3, [pc, #416]	; (8002fbc <StartMode+0x5e4>)
 8002e1c:	885b      	ldrh	r3, [r3, #2]
 8002e1e:	f5b3 7f91 	cmp.w	r3, #290	; 0x122
 8002e22:	d948      	bls.n	8002eb6 <StartMode+0x4de>
 8002e24:	4b65      	ldr	r3, [pc, #404]	; (8002fbc <StartMode+0x5e4>)
 8002e26:	899b      	ldrh	r3, [r3, #12]
 8002e28:	2bf0      	cmp	r3, #240	; 0xf0
 8002e2a:	d944      	bls.n	8002eb6 <StartMode+0x4de>
			  {
				  if(brush==max_brush) brush = 0;
 8002e2c:	4b64      	ldr	r3, [pc, #400]	; (8002fc0 <StartMode+0x5e8>)
 8002e2e:	781b      	ldrb	r3, [r3, #0]
 8002e30:	2b02      	cmp	r3, #2
 8002e32:	d103      	bne.n	8002e3c <StartMode+0x464>
 8002e34:	4b62      	ldr	r3, [pc, #392]	; (8002fc0 <StartMode+0x5e8>)
 8002e36:	2200      	movs	r2, #0
 8002e38:	701a      	strb	r2, [r3, #0]
 8002e3a:	e005      	b.n	8002e48 <StartMode+0x470>
				  else brush += 1;
 8002e3c:	4b60      	ldr	r3, [pc, #384]	; (8002fc0 <StartMode+0x5e8>)
 8002e3e:	781b      	ldrb	r3, [r3, #0]
 8002e40:	3301      	adds	r3, #1
 8002e42:	b2da      	uxtb	r2, r3
 8002e44:	4b5e      	ldr	r3, [pc, #376]	; (8002fc0 <StartMode+0x5e8>)
 8002e46:	701a      	strb	r2, [r3, #0]
				  if(myMutexLCDHandle != NULL)
 8002e48:	4b59      	ldr	r3, [pc, #356]	; (8002fb0 <StartMode+0x5d8>)
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	2b00      	cmp	r3, #0
 8002e4e:	d02d      	beq.n	8002eac <StartMode+0x4d4>
				  {
					   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002e50:	4b57      	ldr	r3, [pc, #348]	; (8002fb0 <StartMode+0x5d8>)
 8002e52:	681b      	ldr	r3, [r3, #0]
 8002e54:	2101      	movs	r1, #1
 8002e56:	4618      	mov	r0, r3
 8002e58:	f00a fc30 	bl	800d6bc <xQueueSemaphoreTake>
 8002e5c:	4603      	mov	r3, r0
 8002e5e:	2b01      	cmp	r3, #1
 8002e60:	d124      	bne.n	8002eac <StartMode+0x4d4>
					   {
						  BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002e62:	f04f 30ff 	mov.w	r0, #4294967295
 8002e66:	f001 f8a5 	bl	8003fb4 <BSP_LCD_SetTextColor>
						  BSP_LCD_FillRect(480-taille_menu , taille_menu, taille_menu-1, taille_menu);
 8002e6a:	2332      	movs	r3, #50	; 0x32
 8002e6c:	2231      	movs	r2, #49	; 0x31
 8002e6e:	2132      	movs	r1, #50	; 0x32
 8002e70:	f44f 70d7 	mov.w	r0, #430	; 0x1ae
 8002e74:	f001 fce6 	bl	8004844 <BSP_LCD_FillRect>
						  BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8002e78:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8002e7c:	f001 f89a 	bl	8003fb4 <BSP_LCD_SetTextColor>
						  LCD_PAINTBRUSH_SAMPLE(480-taille_menu/2, 3*taille_menu/2, taille_menu/2-5);
 8002e80:	2214      	movs	r2, #20
 8002e82:	214b      	movs	r1, #75	; 0x4b
 8002e84:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002e88:	f7ff f9c8 	bl	800221c <LCD_PAINTBRUSH_SAMPLE>
						  BSP_LCD_SetTextColor(couleur);
 8002e8c:	4b4d      	ldr	r3, [pc, #308]	; (8002fc4 <StartMode+0x5ec>)
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	4618      	mov	r0, r3
 8002e92:	f001 f88f 	bl	8003fb4 <BSP_LCD_SetTextColor>
						  xSemaphoreGive(myMutexLCDHandle);
 8002e96:	4b46      	ldr	r3, [pc, #280]	; (8002fb0 <StartMode+0x5d8>)
 8002e98:	6818      	ldr	r0, [r3, #0]
 8002e9a:	2300      	movs	r3, #0
 8002e9c:	2200      	movs	r2, #0
 8002e9e:	2100      	movs	r1, #0
 8002ea0:	f00a fb0a 	bl	800d4b8 <xQueueGenericSend>
					   }
				  }
				  while(TS_State.touchDetected) BSP_TS_GetState(&TS_State);;
 8002ea4:	e002      	b.n	8002eac <StartMode+0x4d4>
 8002ea6:	4845      	ldr	r0, [pc, #276]	; (8002fbc <StartMode+0x5e4>)
 8002ea8:	f002 f9f4 	bl	8005294 <BSP_TS_GetState>
 8002eac:	4b43      	ldr	r3, [pc, #268]	; (8002fbc <StartMode+0x5e4>)
 8002eae:	781b      	ldrb	r3, [r3, #0]
 8002eb0:	2b00      	cmp	r3, #0
 8002eb2:	d1f8      	bne.n	8002ea6 <StartMode+0x4ce>
			  else if((TS_State.touchX[0]>290) && TS_State.touchY[0] > 272-haut_menu)
 8002eb4:	e00f      	b.n	8002ed6 <StartMode+0x4fe>
			  }
			  else if((TS_State.touchX[0]>190) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<290))
 8002eb6:	4b41      	ldr	r3, [pc, #260]	; (8002fbc <StartMode+0x5e4>)
 8002eb8:	885b      	ldrh	r3, [r3, #2]
 8002eba:	2bbe      	cmp	r3, #190	; 0xbe
 8002ebc:	d90b      	bls.n	8002ed6 <StartMode+0x4fe>
 8002ebe:	4b3f      	ldr	r3, [pc, #252]	; (8002fbc <StartMode+0x5e4>)
 8002ec0:	899b      	ldrh	r3, [r3, #12]
 8002ec2:	2bf0      	cmp	r3, #240	; 0xf0
 8002ec4:	d907      	bls.n	8002ed6 <StartMode+0x4fe>
 8002ec6:	4b3d      	ldr	r3, [pc, #244]	; (8002fbc <StartMode+0x5e4>)
 8002ec8:	885b      	ldrh	r3, [r3, #2]
 8002eca:	f5b3 7f91 	cmp.w	r3, #290	; 0x122
 8002ece:	d202      	bcs.n	8002ed6 <StartMode+0x4fe>
			  {
				  sous_menu = 0;
 8002ed0:	2300      	movs	r3, #0
 8002ed2:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
			  }
		  }
		  if(sous_menu == 0) etat = 1; //on revient au menu de base
 8002ed6:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	f040 843b 	bne.w	8003756 <StartMode+0xd7e>
 8002ee0:	4b39      	ldr	r3, [pc, #228]	; (8002fc8 <StartMode+0x5f0>)
 8002ee2:	2201      	movs	r2, #1
 8002ee4:	701a      	strb	r2, [r3, #0]
		  break;
 8002ee6:	f000 bc36 	b.w	8003756 <StartMode+0xd7e>
	  /*
	   * etat de sélection de la transparence
	   */
	  case 4 :
		  if(sous_menu == 0)
 8002eea:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	d156      	bne.n	8002fa0 <StartMode+0x5c8>
		  {
			  if(myMutexLCDHandle != NULL)
 8002ef2:	4b2f      	ldr	r3, [pc, #188]	; (8002fb0 <StartMode+0x5d8>)
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	2b00      	cmp	r3, #0
 8002ef8:	d052      	beq.n	8002fa0 <StartMode+0x5c8>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 8002efa:	4b2d      	ldr	r3, [pc, #180]	; (8002fb0 <StartMode+0x5d8>)
 8002efc:	681b      	ldr	r3, [r3, #0]
 8002efe:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002f02:	4618      	mov	r0, r3
 8002f04:	f00a fbda 	bl	800d6bc <xQueueSemaphoreTake>
 8002f08:	4603      	mov	r3, r0
 8002f0a:	2b01      	cmp	r3, #1
 8002f0c:	d148      	bne.n	8002fa0 <StartMode+0x5c8>
				   {
					   BSP_LCD_SelectLayer(1);
 8002f0e:	2001      	movs	r0, #1
 8002f10:	f001 f840 	bl	8003f94 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002f14:	f04f 30ff 	mov.w	r0, #4294967295
 8002f18:	f001 f84c 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 8002f1c:	2315      	movs	r3, #21
 8002f1e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002f22:	21fb      	movs	r1, #251	; 0xfb
 8002f24:	2000      	movs	r0, #0
 8002f26:	f001 fc8d 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8002f2a:	4823      	ldr	r0, [pc, #140]	; (8002fb8 <StartMode+0x5e0>)
 8002f2c:	f001 f842 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_alpha, LEFT_MODE);
 8002f30:	f107 027c 	add.w	r2, r7, #124	; 0x7c
 8002f34:	2303      	movs	r3, #3
 8002f36:	21fc      	movs	r1, #252	; 0xfc
 8002f38:	2000      	movs	r0, #0
 8002f3a:	f001 f9af 	bl	800429c <BSP_LCD_DisplayStringAt>
					   for(uint32_t i = 0;i<256; i++)
 8002f3e:	2300      	movs	r3, #0
 8002f40:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8002f44:	e021      	b.n	8002f8a <StartMode+0x5b2>
					   {
						   for(char j = 0; j<18; j++)
 8002f46:	2300      	movs	r3, #0
 8002f48:	f887 311b 	strb.w	r3, [r7, #283]	; 0x11b
 8002f4c:	e014      	b.n	8002f78 <StartMode+0x5a0>
						   {
							   BSP_LCD_DrawPixel(200+i, 252+j, i << 24);
 8002f4e:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8002f52:	b29b      	uxth	r3, r3
 8002f54:	33c8      	adds	r3, #200	; 0xc8
 8002f56:	b298      	uxth	r0, r3
 8002f58:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 8002f5c:	b29b      	uxth	r3, r3
 8002f5e:	33fc      	adds	r3, #252	; 0xfc
 8002f60:	b299      	uxth	r1, r3
 8002f62:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8002f66:	061b      	lsls	r3, r3, #24
 8002f68:	461a      	mov	r2, r3
 8002f6a:	f001 fc23 	bl	80047b4 <BSP_LCD_DrawPixel>
						   for(char j = 0; j<18; j++)
 8002f6e:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 8002f72:	3301      	adds	r3, #1
 8002f74:	f887 311b 	strb.w	r3, [r7, #283]	; 0x11b
 8002f78:	f897 311b 	ldrb.w	r3, [r7, #283]	; 0x11b
 8002f7c:	2b11      	cmp	r3, #17
 8002f7e:	d9e6      	bls.n	8002f4e <StartMode+0x576>
					   for(uint32_t i = 0;i<256; i++)
 8002f80:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8002f84:	3301      	adds	r3, #1
 8002f86:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8002f8a:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8002f8e:	2bff      	cmp	r3, #255	; 0xff
 8002f90:	d9d9      	bls.n	8002f46 <StartMode+0x56e>
						   }
					   }
					   xSemaphoreGive(myMutexLCDHandle);
 8002f92:	4b07      	ldr	r3, [pc, #28]	; (8002fb0 <StartMode+0x5d8>)
 8002f94:	6818      	ldr	r0, [r3, #0]
 8002f96:	2300      	movs	r3, #0
 8002f98:	2200      	movs	r2, #0
 8002f9a:	2100      	movs	r1, #0
 8002f9c:	f00a fa8c 	bl	800d4b8 <xQueueGenericSend>
				   }
			   }
		  }
		  sous_menu = 1;
 8002fa0:	2301      	movs	r3, #1
 8002fa2:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
		  BSP_TS_GetState(&TS_State);
 8002fa6:	4805      	ldr	r0, [pc, #20]	; (8002fbc <StartMode+0x5e4>)
 8002fa8:	f002 f974 	bl	8005294 <BSP_TS_GetState>
		  while(TS_State.touchDetected)
 8002fac:	e052      	b.n	8003054 <StartMode+0x67c>
 8002fae:	bf00      	nop
 8002fb0:	20009c34 	.word	0x20009c34
 8002fb4:	200013a8 	.word	0x200013a8
 8002fb8:	ffff0000 	.word	0xffff0000
 8002fbc:	200016d0 	.word	0x200016d0
 8002fc0:	2000139d 	.word	0x2000139d
 8002fc4:	20009e84 	.word	0x20009e84
 8002fc8:	2000139e 	.word	0x2000139e
		  {
			  if((TS_State.touchX[0]>200) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<455))
 8002fcc:	4bbd      	ldr	r3, [pc, #756]	; (80032c4 <StartMode+0x8ec>)
 8002fce:	885b      	ldrh	r3, [r3, #2]
 8002fd0:	2bc8      	cmp	r3, #200	; 0xc8
 8002fd2:	d939      	bls.n	8003048 <StartMode+0x670>
 8002fd4:	4bbb      	ldr	r3, [pc, #748]	; (80032c4 <StartMode+0x8ec>)
 8002fd6:	899b      	ldrh	r3, [r3, #12]
 8002fd8:	2bf0      	cmp	r3, #240	; 0xf0
 8002fda:	d935      	bls.n	8003048 <StartMode+0x670>
 8002fdc:	4bb9      	ldr	r3, [pc, #740]	; (80032c4 <StartMode+0x8ec>)
 8002fde:	885b      	ldrh	r3, [r3, #2]
 8002fe0:	f5b3 7fe3 	cmp.w	r3, #454	; 0x1c6
 8002fe4:	d830      	bhi.n	8003048 <StartMode+0x670>
			  {
				  couleur &= 0x00FFFFFF; //on enlève l'ancienne transparence
 8002fe6:	4bb8      	ldr	r3, [pc, #736]	; (80032c8 <StartMode+0x8f0>)
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8002fee:	4ab6      	ldr	r2, [pc, #728]	; (80032c8 <StartMode+0x8f0>)
 8002ff0:	6013      	str	r3, [r2, #0]
				  couleur |= ((TS_State.touchX[0]-200)<<24);
 8002ff2:	4bb4      	ldr	r3, [pc, #720]	; (80032c4 <StartMode+0x8ec>)
 8002ff4:	885b      	ldrh	r3, [r3, #2]
 8002ff6:	3bc8      	subs	r3, #200	; 0xc8
 8002ff8:	061b      	lsls	r3, r3, #24
 8002ffa:	461a      	mov	r2, r3
 8002ffc:	4bb2      	ldr	r3, [pc, #712]	; (80032c8 <StartMode+0x8f0>)
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	4313      	orrs	r3, r2
 8003002:	4ab1      	ldr	r2, [pc, #708]	; (80032c8 <StartMode+0x8f0>)
 8003004:	6013      	str	r3, [r2, #0]
				  if(myMutexLCDHandle != NULL)
 8003006:	4bb1      	ldr	r3, [pc, #708]	; (80032cc <StartMode+0x8f4>)
 8003008:	681b      	ldr	r3, [r3, #0]
 800300a:	2b00      	cmp	r3, #0
 800300c:	d01c      	beq.n	8003048 <StartMode+0x670>
				  {
					   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 800300e:	4baf      	ldr	r3, [pc, #700]	; (80032cc <StartMode+0x8f4>)
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	2164      	movs	r1, #100	; 0x64
 8003014:	4618      	mov	r0, r3
 8003016:	f00a fb51 	bl	800d6bc <xQueueSemaphoreTake>
 800301a:	4603      	mov	r3, r0
 800301c:	2b01      	cmp	r3, #1
 800301e:	d113      	bne.n	8003048 <StartMode+0x670>
					   {
						   BSP_LCD_SetTextColor(couleur & 0xFF000000);
 8003020:	4ba9      	ldr	r3, [pc, #676]	; (80032c8 <StartMode+0x8f0>)
 8003022:	681b      	ldr	r3, [r3, #0]
 8003024:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003028:	4618      	mov	r0, r3
 800302a:	f000 ffc3 	bl	8003fb4 <BSP_LCD_SetTextColor>
						   BSP_LCD_FillCircle(480-taille_menu/2, 5*taille_menu/2, taille_menu/2-5);
 800302e:	2214      	movs	r2, #20
 8003030:	217d      	movs	r1, #125	; 0x7d
 8003032:	f240 10c7 	movw	r0, #455	; 0x1c7
 8003036:	f001 fc7f 	bl	8004938 <BSP_LCD_FillCircle>
						   xSemaphoreGive(myMutexLCDHandle);
 800303a:	4ba4      	ldr	r3, [pc, #656]	; (80032cc <StartMode+0x8f4>)
 800303c:	6818      	ldr	r0, [r3, #0]
 800303e:	2300      	movs	r3, #0
 8003040:	2200      	movs	r2, #0
 8003042:	2100      	movs	r1, #0
 8003044:	f00a fa38 	bl	800d4b8 <xQueueGenericSend>
					   }
				   }
			  }
			  sous_menu = 0;
 8003048:	2300      	movs	r3, #0
 800304a:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
			  BSP_TS_GetState(&TS_State);
 800304e:	489d      	ldr	r0, [pc, #628]	; (80032c4 <StartMode+0x8ec>)
 8003050:	f002 f920 	bl	8005294 <BSP_TS_GetState>
		  while(TS_State.touchDetected)
 8003054:	4b9b      	ldr	r3, [pc, #620]	; (80032c4 <StartMode+0x8ec>)
 8003056:	781b      	ldrb	r3, [r3, #0]
 8003058:	2b00      	cmp	r3, #0
 800305a:	d1b7      	bne.n	8002fcc <StartMode+0x5f4>
		  }
		  if(sous_menu == 0) etat = 1;
 800305c:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8003060:	2b00      	cmp	r3, #0
 8003062:	f040 837a 	bne.w	800375a <StartMode+0xd82>
 8003066:	4b9a      	ldr	r3, [pc, #616]	; (80032d0 <StartMode+0x8f8>)
 8003068:	2201      	movs	r2, #1
 800306a:	701a      	strb	r2, [r3, #0]
		  break;
 800306c:	e375      	b.n	800375a <StartMode+0xd82>
	  /*
	   * etat de sélection de la couleur
	   */
	  case 5 :
		  if(sous_menu == 0)
 800306e:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8003072:	2b00      	cmp	r3, #0
 8003074:	d12c      	bne.n	80030d0 <StartMode+0x6f8>
		  {
			  if(myMutexLCDHandle != NULL)
 8003076:	4b95      	ldr	r3, [pc, #596]	; (80032cc <StartMode+0x8f4>)
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	2b00      	cmp	r3, #0
 800307c:	d028      	beq.n	80030d0 <StartMode+0x6f8>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 800307e:	4b93      	ldr	r3, [pc, #588]	; (80032cc <StartMode+0x8f4>)
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003086:	4618      	mov	r0, r3
 8003088:	f00a fb18 	bl	800d6bc <xQueueSemaphoreTake>
 800308c:	4603      	mov	r3, r0
 800308e:	2b01      	cmp	r3, #1
 8003090:	d11e      	bne.n	80030d0 <StartMode+0x6f8>
				   {
					   BSP_LCD_SelectLayer(1);
 8003092:	2001      	movs	r0, #1
 8003094:	f000 ff7e 	bl	8003f94 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8003098:	f04f 30ff 	mov.w	r0, #4294967295
 800309c:	f000 ff8a 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 80030a0:	2315      	movs	r3, #21
 80030a2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80030a6:	21fb      	movs	r1, #251	; 0xfb
 80030a8:	2000      	movs	r0, #0
 80030aa:	f001 fbcb 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 80030ae:	4889      	ldr	r0, [pc, #548]	; (80032d4 <StartMode+0x8fc>)
 80030b0:	f000 ff80 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_couleur, CENTER_MODE);
 80030b4:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80030b8:	2301      	movs	r3, #1
 80030ba:	21fc      	movs	r1, #252	; 0xfc
 80030bc:	2000      	movs	r0, #0
 80030be:	f001 f8ed 	bl	800429c <BSP_LCD_DisplayStringAt>
					   xSemaphoreGive(myMutexLCDHandle);
 80030c2:	4b82      	ldr	r3, [pc, #520]	; (80032cc <StartMode+0x8f4>)
 80030c4:	6818      	ldr	r0, [r3, #0]
 80030c6:	2300      	movs	r3, #0
 80030c8:	2200      	movs	r2, #0
 80030ca:	2100      	movs	r1, #0
 80030cc:	f00a f9f4 	bl	800d4b8 <xQueueGenericSend>
				   }
			  }
		  }
		  sous_menu = 1;
 80030d0:	2301      	movs	r3, #1
 80030d2:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
		  switch(menu_couleur)
 80030d6:	f897 312e 	ldrb.w	r3, [r7, #302]	; 0x12e
 80030da:	2b03      	cmp	r3, #3
 80030dc:	f200 81af 	bhi.w	800343e <StartMode+0xa66>
 80030e0:	a201      	add	r2, pc, #4	; (adr r2, 80030e8 <StartMode+0x710>)
 80030e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80030e6:	bf00      	nop
 80030e8:	080030f9 	.word	0x080030f9
 80030ec:	08003213 	.word	0x08003213
 80030f0:	080032d9 	.word	0x080032d9
 80030f4:	0800338b 	.word	0x0800338b
		  {
		  /*
		   * premier sous_menu : choix entre tonalité, saturation et luminosité
		   */
		  case 0 :
			  BSP_TS_GetState(&TS_State);
 80030f8:	4872      	ldr	r0, [pc, #456]	; (80032c4 <StartMode+0x8ec>)
 80030fa:	f002 f8cb 	bl	8005294 <BSP_TS_GetState>
			  if(TS_State.touchDetected && menu_couleur == 0)
 80030fe:	4b71      	ldr	r3, [pc, #452]	; (80032c4 <StartMode+0x8ec>)
 8003100:	781b      	ldrb	r3, [r3, #0]
 8003102:	2b00      	cmp	r3, #0
 8003104:	f000 819a 	beq.w	800343c <StartMode+0xa64>
 8003108:	f897 312e 	ldrb.w	r3, [r7, #302]	; 0x12e
 800310c:	2b00      	cmp	r3, #0
 800310e:	f040 8195 	bne.w	800343c <StartMode+0xa64>
			  {
				  if((TS_State.touchX[0]<170) && TS_State.touchY[0] > 272-haut_menu)
 8003112:	4b6c      	ldr	r3, [pc, #432]	; (80032c4 <StartMode+0x8ec>)
 8003114:	885b      	ldrh	r3, [r3, #2]
 8003116:	2ba9      	cmp	r3, #169	; 0xa9
 8003118:	d81e      	bhi.n	8003158 <StartMode+0x780>
 800311a:	4b6a      	ldr	r3, [pc, #424]	; (80032c4 <StartMode+0x8ec>)
 800311c:	899b      	ldrh	r3, [r3, #12]
 800311e:	2bf0      	cmp	r3, #240	; 0xf0
 8003120:	d91a      	bls.n	8003158 <StartMode+0x780>
					  // clique sur tonalité
				  {
					  menu_couleur = 1;
 8003122:	2301      	movs	r3, #1
 8003124:	f887 312e 	strb.w	r3, [r7, #302]	; 0x12e
					  if(myMutexLCDHandle != NULL)
 8003128:	4b68      	ldr	r3, [pc, #416]	; (80032cc <StartMode+0x8f4>)
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	2b00      	cmp	r3, #0
 800312e:	d06c      	beq.n	800320a <StartMode+0x832>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 8003130:	4b66      	ldr	r3, [pc, #408]	; (80032cc <StartMode+0x8f4>)
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003138:	4618      	mov	r0, r3
 800313a:	f00a fabf 	bl	800d6bc <xQueueSemaphoreTake>
 800313e:	4603      	mov	r3, r0
 8003140:	2b01      	cmp	r3, #1
 8003142:	d162      	bne.n	800320a <StartMode+0x832>
						   {
							   AfficheTonalite();
 8003144:	f7ff f90a 	bl	800235c <AfficheTonalite>
							   xSemaphoreGive(myMutexLCDHandle);
 8003148:	4b60      	ldr	r3, [pc, #384]	; (80032cc <StartMode+0x8f4>)
 800314a:	6818      	ldr	r0, [r3, #0]
 800314c:	2300      	movs	r3, #0
 800314e:	2200      	movs	r2, #0
 8003150:	2100      	movs	r1, #0
 8003152:	f00a f9b1 	bl	800d4b8 <xQueueGenericSend>
					  if(myMutexLCDHandle != NULL)
 8003156:	e058      	b.n	800320a <StartMode+0x832>
						   }
					  }
				  }
				  else if((TS_State.touchX[0]>310) && TS_State.touchY[0] > 272-haut_menu)
 8003158:	4b5a      	ldr	r3, [pc, #360]	; (80032c4 <StartMode+0x8ec>)
 800315a:	885b      	ldrh	r3, [r3, #2]
 800315c:	f5b3 7f9b 	cmp.w	r3, #310	; 0x136
 8003160:	d922      	bls.n	80031a8 <StartMode+0x7d0>
 8003162:	4b58      	ldr	r3, [pc, #352]	; (80032c4 <StartMode+0x8ec>)
 8003164:	899b      	ldrh	r3, [r3, #12]
 8003166:	2bf0      	cmp	r3, #240	; 0xf0
 8003168:	d91e      	bls.n	80031a8 <StartMode+0x7d0>
					  //clique sur luminosité
				  {
					  menu_couleur = 2;
 800316a:	2302      	movs	r3, #2
 800316c:	f887 312e 	strb.w	r3, [r7, #302]	; 0x12e
					  if(myMutexLCDHandle != NULL)
 8003170:	4b56      	ldr	r3, [pc, #344]	; (80032cc <StartMode+0x8f4>)
 8003172:	681b      	ldr	r3, [r3, #0]
 8003174:	2b00      	cmp	r3, #0
 8003176:	d04a      	beq.n	800320e <StartMode+0x836>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 8003178:	4b54      	ldr	r3, [pc, #336]	; (80032cc <StartMode+0x8f4>)
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003180:	4618      	mov	r0, r3
 8003182:	f00a fa9b 	bl	800d6bc <xQueueSemaphoreTake>
 8003186:	4603      	mov	r3, r0
 8003188:	2b01      	cmp	r3, #1
 800318a:	d140      	bne.n	800320e <StartMode+0x836>
						   {
							   AfficheLuminosite(ton, sat);
 800318c:	edd7 0a48 	vldr	s1, [r7, #288]	; 0x120
 8003190:	ed97 0a4a 	vldr	s0, [r7, #296]	; 0x128
 8003194:	f7ff f9ec 	bl	8002570 <AfficheLuminosite>
							   xSemaphoreGive(myMutexLCDHandle);
 8003198:	4b4c      	ldr	r3, [pc, #304]	; (80032cc <StartMode+0x8f4>)
 800319a:	6818      	ldr	r0, [r3, #0]
 800319c:	2300      	movs	r3, #0
 800319e:	2200      	movs	r2, #0
 80031a0:	2100      	movs	r1, #0
 80031a2:	f00a f989 	bl	800d4b8 <xQueueGenericSend>
					  if(myMutexLCDHandle != NULL)
 80031a6:	e032      	b.n	800320e <StartMode+0x836>
						   }
					  }
				  }
				  else if((TS_State.touchX[0]<310) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]>170))
 80031a8:	4b46      	ldr	r3, [pc, #280]	; (80032c4 <StartMode+0x8ec>)
 80031aa:	885b      	ldrh	r3, [r3, #2]
 80031ac:	f5b3 7f9b 	cmp.w	r3, #310	; 0x136
 80031b0:	f080 8144 	bcs.w	800343c <StartMode+0xa64>
 80031b4:	4b43      	ldr	r3, [pc, #268]	; (80032c4 <StartMode+0x8ec>)
 80031b6:	899b      	ldrh	r3, [r3, #12]
 80031b8:	2bf0      	cmp	r3, #240	; 0xf0
 80031ba:	f240 813f 	bls.w	800343c <StartMode+0xa64>
 80031be:	4b41      	ldr	r3, [pc, #260]	; (80032c4 <StartMode+0x8ec>)
 80031c0:	885b      	ldrh	r3, [r3, #2]
 80031c2:	2baa      	cmp	r3, #170	; 0xaa
 80031c4:	f240 813a 	bls.w	800343c <StartMode+0xa64>
					  //clique sur saturation
				  {
					  menu_couleur = 3;
 80031c8:	2303      	movs	r3, #3
 80031ca:	f887 312e 	strb.w	r3, [r7, #302]	; 0x12e
					  if(myMutexLCDHandle != NULL)
 80031ce:	4b3f      	ldr	r3, [pc, #252]	; (80032cc <StartMode+0x8f4>)
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	2b00      	cmp	r3, #0
 80031d4:	f000 8132 	beq.w	800343c <StartMode+0xa64>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 80031d8:	4b3c      	ldr	r3, [pc, #240]	; (80032cc <StartMode+0x8f4>)
 80031da:	681b      	ldr	r3, [r3, #0]
 80031dc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80031e0:	4618      	mov	r0, r3
 80031e2:	f00a fa6b 	bl	800d6bc <xQueueSemaphoreTake>
 80031e6:	4603      	mov	r3, r0
 80031e8:	2b01      	cmp	r3, #1
 80031ea:	f040 8127 	bne.w	800343c <StartMode+0xa64>
						   {
							   AfficheSaturation(ton, lum);
 80031ee:	edd7 0a49 	vldr	s1, [r7, #292]	; 0x124
 80031f2:	ed97 0a4a 	vldr	s0, [r7, #296]	; 0x128
 80031f6:	f7ff fa0f 	bl	8002618 <AfficheSaturation>
							   xSemaphoreGive(myMutexLCDHandle);
 80031fa:	4b34      	ldr	r3, [pc, #208]	; (80032cc <StartMode+0x8f4>)
 80031fc:	6818      	ldr	r0, [r3, #0]
 80031fe:	2300      	movs	r3, #0
 8003200:	2200      	movs	r2, #0
 8003202:	2100      	movs	r1, #0
 8003204:	f00a f958 	bl	800d4b8 <xQueueGenericSend>
						   }
					  }
				  }
			  }
			  break;
 8003208:	e118      	b.n	800343c <StartMode+0xa64>
					  if(myMutexLCDHandle != NULL)
 800320a:	bf00      	nop
 800320c:	e116      	b.n	800343c <StartMode+0xa64>
					  if(myMutexLCDHandle != NULL)
 800320e:	bf00      	nop
			  break;
 8003210:	e114      	b.n	800343c <StartMode+0xa64>
		  /*
		   * on a affiché l'arc en ciel des tonalités, l'utilisateur choisit maintenant celle-ci.
		   */
		  case 1:
			  BSP_TS_GetState(&TS_State);
 8003212:	482c      	ldr	r0, [pc, #176]	; (80032c4 <StartMode+0x8ec>)
 8003214:	f002 f83e 	bl	8005294 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 8003218:	e04f      	b.n	80032ba <StartMode+0x8e2>
			  {
				  if((TS_State.touchX[0]>=50) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<433))
 800321a:	4b2a      	ldr	r3, [pc, #168]	; (80032c4 <StartMode+0x8ec>)
 800321c:	885b      	ldrh	r3, [r3, #2]
 800321e:	2b31      	cmp	r3, #49	; 0x31
 8003220:	d942      	bls.n	80032a8 <StartMode+0x8d0>
 8003222:	4b28      	ldr	r3, [pc, #160]	; (80032c4 <StartMode+0x8ec>)
 8003224:	899b      	ldrh	r3, [r3, #12]
 8003226:	2bf0      	cmp	r3, #240	; 0xf0
 8003228:	d93e      	bls.n	80032a8 <StartMode+0x8d0>
 800322a:	4b26      	ldr	r3, [pc, #152]	; (80032c4 <StartMode+0x8ec>)
 800322c:	885b      	ldrh	r3, [r3, #2]
 800322e:	f5b3 7fd8 	cmp.w	r3, #432	; 0x1b0
 8003232:	d839      	bhi.n	80032a8 <StartMode+0x8d0>
				  {
					  ton = FindTonalite(TS_State.touchX[0]-50);
 8003234:	4b23      	ldr	r3, [pc, #140]	; (80032c4 <StartMode+0x8ec>)
 8003236:	885b      	ldrh	r3, [r3, #2]
 8003238:	3b32      	subs	r3, #50	; 0x32
 800323a:	b29b      	uxth	r3, r3
 800323c:	4618      	mov	r0, r3
 800323e:	f7ff fb2d 	bl	800289c <FindTonalite>
 8003242:	ed87 0a4a 	vstr	s0, [r7, #296]	; 0x128
					  couleur = FindCouleur(ton, sat, lum) | (couleur & 0xFF000000);
 8003246:	ed97 1a49 	vldr	s2, [r7, #292]	; 0x124
 800324a:	edd7 0a48 	vldr	s1, [r7, #288]	; 0x120
 800324e:	ed97 0a4a 	vldr	s0, [r7, #296]	; 0x128
 8003252:	f7ff fa35 	bl	80026c0 <FindCouleur>
 8003256:	4602      	mov	r2, r0
 8003258:	4b1b      	ldr	r3, [pc, #108]	; (80032c8 <StartMode+0x8f0>)
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003260:	4313      	orrs	r3, r2
 8003262:	4a19      	ldr	r2, [pc, #100]	; (80032c8 <StartMode+0x8f0>)
 8003264:	6013      	str	r3, [r2, #0]
					  if(myMutexLCDHandle != NULL)
 8003266:	4b19      	ldr	r3, [pc, #100]	; (80032cc <StartMode+0x8f4>)
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	2b00      	cmp	r3, #0
 800326c:	d01c      	beq.n	80032a8 <StartMode+0x8d0>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 800326e:	4b17      	ldr	r3, [pc, #92]	; (80032cc <StartMode+0x8f4>)
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	2164      	movs	r1, #100	; 0x64
 8003274:	4618      	mov	r0, r3
 8003276:	f00a fa21 	bl	800d6bc <xQueueSemaphoreTake>
 800327a:	4603      	mov	r3, r0
 800327c:	2b01      	cmp	r3, #1
 800327e:	d113      	bne.n	80032a8 <StartMode+0x8d0>
						   {
							   BSP_LCD_SetTextColor(couleur | 0xFF000000);
 8003280:	4b11      	ldr	r3, [pc, #68]	; (80032c8 <StartMode+0x8f0>)
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003288:	4618      	mov	r0, r3
 800328a:	f000 fe93 	bl	8003fb4 <BSP_LCD_SetTextColor>
							   BSP_LCD_FillCircle(480-taille_menu/2, taille_menu/2, taille_menu/2-5);
 800328e:	2214      	movs	r2, #20
 8003290:	2119      	movs	r1, #25
 8003292:	f240 10c7 	movw	r0, #455	; 0x1c7
 8003296:	f001 fb4f 	bl	8004938 <BSP_LCD_FillCircle>
							   xSemaphoreGive(myMutexLCDHandle);
 800329a:	4b0c      	ldr	r3, [pc, #48]	; (80032cc <StartMode+0x8f4>)
 800329c:	6818      	ldr	r0, [r3, #0]
 800329e:	2300      	movs	r3, #0
 80032a0:	2200      	movs	r2, #0
 80032a2:	2100      	movs	r1, #0
 80032a4:	f00a f908 	bl	800d4b8 <xQueueGenericSend>
						   }
					   }
				  }
				  menu_couleur = 0;
 80032a8:	2300      	movs	r3, #0
 80032aa:	f887 312e 	strb.w	r3, [r7, #302]	; 0x12e
				  sous_menu = 0;
 80032ae:	2300      	movs	r3, #0
 80032b0:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
				  BSP_TS_GetState(&TS_State);
 80032b4:	4803      	ldr	r0, [pc, #12]	; (80032c4 <StartMode+0x8ec>)
 80032b6:	f001 ffed 	bl	8005294 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 80032ba:	4b02      	ldr	r3, [pc, #8]	; (80032c4 <StartMode+0x8ec>)
 80032bc:	781b      	ldrb	r3, [r3, #0]
 80032be:	2b00      	cmp	r3, #0
 80032c0:	d1ab      	bne.n	800321a <StartMode+0x842>
			  }
			  break;
 80032c2:	e0bc      	b.n	800343e <StartMode+0xa66>
 80032c4:	200016d0 	.word	0x200016d0
 80032c8:	20009e84 	.word	0x20009e84
 80032cc:	20009c34 	.word	0x20009c34
 80032d0:	2000139e 	.word	0x2000139e
 80032d4:	ffff0000 	.word	0xffff0000
		  /*
		   * On a Affiché le dégradé de luminosité, l'utilisateur chosit maintenant celle-ci
		   */
		  case 2:
			  BSP_TS_GetState(&TS_State);
 80032d8:	488f      	ldr	r0, [pc, #572]	; (8003518 <StartMode+0xb40>)
 80032da:	f001 ffdb 	bl	8005294 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 80032de:	e04f      	b.n	8003380 <StartMode+0x9a8>
			  {
				  if((TS_State.touchX[0]>=100) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<=356))
 80032e0:	4b8d      	ldr	r3, [pc, #564]	; (8003518 <StartMode+0xb40>)
 80032e2:	885b      	ldrh	r3, [r3, #2]
 80032e4:	2b63      	cmp	r3, #99	; 0x63
 80032e6:	d942      	bls.n	800336e <StartMode+0x996>
 80032e8:	4b8b      	ldr	r3, [pc, #556]	; (8003518 <StartMode+0xb40>)
 80032ea:	899b      	ldrh	r3, [r3, #12]
 80032ec:	2bf0      	cmp	r3, #240	; 0xf0
 80032ee:	d93e      	bls.n	800336e <StartMode+0x996>
 80032f0:	4b89      	ldr	r3, [pc, #548]	; (8003518 <StartMode+0xb40>)
 80032f2:	885b      	ldrh	r3, [r3, #2]
 80032f4:	f5b3 7fb2 	cmp.w	r3, #356	; 0x164
 80032f8:	d839      	bhi.n	800336e <StartMode+0x996>
				  {
					  lum = FindLuminosite(TS_State.touchX[0]-100);
 80032fa:	4b87      	ldr	r3, [pc, #540]	; (8003518 <StartMode+0xb40>)
 80032fc:	885b      	ldrh	r3, [r3, #2]
 80032fe:	3b64      	subs	r3, #100	; 0x64
 8003300:	b29b      	uxth	r3, r3
 8003302:	4618      	mov	r0, r3
 8003304:	f7ff faf0 	bl	80028e8 <FindLuminosite>
 8003308:	ed87 0a49 	vstr	s0, [r7, #292]	; 0x124
					  couleur = FindCouleur(ton, sat, lum) | (couleur & 0xFF000000);
 800330c:	ed97 1a49 	vldr	s2, [r7, #292]	; 0x124
 8003310:	edd7 0a48 	vldr	s1, [r7, #288]	; 0x120
 8003314:	ed97 0a4a 	vldr	s0, [r7, #296]	; 0x128
 8003318:	f7ff f9d2 	bl	80026c0 <FindCouleur>
 800331c:	4602      	mov	r2, r0
 800331e:	4b7f      	ldr	r3, [pc, #508]	; (800351c <StartMode+0xb44>)
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003326:	4313      	orrs	r3, r2
 8003328:	4a7c      	ldr	r2, [pc, #496]	; (800351c <StartMode+0xb44>)
 800332a:	6013      	str	r3, [r2, #0]
					  if(myMutexLCDHandle != NULL)
 800332c:	4b7c      	ldr	r3, [pc, #496]	; (8003520 <StartMode+0xb48>)
 800332e:	681b      	ldr	r3, [r3, #0]
 8003330:	2b00      	cmp	r3, #0
 8003332:	d01c      	beq.n	800336e <StartMode+0x996>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 8003334:	4b7a      	ldr	r3, [pc, #488]	; (8003520 <StartMode+0xb48>)
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	2164      	movs	r1, #100	; 0x64
 800333a:	4618      	mov	r0, r3
 800333c:	f00a f9be 	bl	800d6bc <xQueueSemaphoreTake>
 8003340:	4603      	mov	r3, r0
 8003342:	2b01      	cmp	r3, #1
 8003344:	d113      	bne.n	800336e <StartMode+0x996>
						   {
							   BSP_LCD_SetTextColor(couleur | 0xFF000000);
 8003346:	4b75      	ldr	r3, [pc, #468]	; (800351c <StartMode+0xb44>)
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800334e:	4618      	mov	r0, r3
 8003350:	f000 fe30 	bl	8003fb4 <BSP_LCD_SetTextColor>
							   BSP_LCD_FillCircle(480-taille_menu/2, taille_menu/2, taille_menu/2-5);
 8003354:	2214      	movs	r2, #20
 8003356:	2119      	movs	r1, #25
 8003358:	f240 10c7 	movw	r0, #455	; 0x1c7
 800335c:	f001 faec 	bl	8004938 <BSP_LCD_FillCircle>
							   xSemaphoreGive(myMutexLCDHandle);
 8003360:	4b6f      	ldr	r3, [pc, #444]	; (8003520 <StartMode+0xb48>)
 8003362:	6818      	ldr	r0, [r3, #0]
 8003364:	2300      	movs	r3, #0
 8003366:	2200      	movs	r2, #0
 8003368:	2100      	movs	r1, #0
 800336a:	f00a f8a5 	bl	800d4b8 <xQueueGenericSend>
						   }
					   }
				  }
				  menu_couleur = 0;
 800336e:	2300      	movs	r3, #0
 8003370:	f887 312e 	strb.w	r3, [r7, #302]	; 0x12e
				  sous_menu = 0;
 8003374:	2300      	movs	r3, #0
 8003376:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
				  BSP_TS_GetState(&TS_State);
 800337a:	4867      	ldr	r0, [pc, #412]	; (8003518 <StartMode+0xb40>)
 800337c:	f001 ff8a 	bl	8005294 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 8003380:	4b65      	ldr	r3, [pc, #404]	; (8003518 <StartMode+0xb40>)
 8003382:	781b      	ldrb	r3, [r3, #0]
 8003384:	2b00      	cmp	r3, #0
 8003386:	d1ab      	bne.n	80032e0 <StartMode+0x908>
			  }
			  break;
 8003388:	e059      	b.n	800343e <StartMode+0xa66>
		  /*
		   * On a Affiché le dégradé de saturation, l'utilisateur chosit maintenant celle-ci
		   */
		  case 3:
			  BSP_TS_GetState(&TS_State);
 800338a:	4863      	ldr	r0, [pc, #396]	; (8003518 <StartMode+0xb40>)
 800338c:	f001 ff82 	bl	8005294 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 8003390:	e04f      	b.n	8003432 <StartMode+0xa5a>
			  {
				  if((TS_State.touchX[0]>=100) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<=356))
 8003392:	4b61      	ldr	r3, [pc, #388]	; (8003518 <StartMode+0xb40>)
 8003394:	885b      	ldrh	r3, [r3, #2]
 8003396:	2b63      	cmp	r3, #99	; 0x63
 8003398:	d942      	bls.n	8003420 <StartMode+0xa48>
 800339a:	4b5f      	ldr	r3, [pc, #380]	; (8003518 <StartMode+0xb40>)
 800339c:	899b      	ldrh	r3, [r3, #12]
 800339e:	2bf0      	cmp	r3, #240	; 0xf0
 80033a0:	d93e      	bls.n	8003420 <StartMode+0xa48>
 80033a2:	4b5d      	ldr	r3, [pc, #372]	; (8003518 <StartMode+0xb40>)
 80033a4:	885b      	ldrh	r3, [r3, #2]
 80033a6:	f5b3 7fb2 	cmp.w	r3, #356	; 0x164
 80033aa:	d839      	bhi.n	8003420 <StartMode+0xa48>
				  {
					  sat = FindSaturation(TS_State.touchX[0]-100);
 80033ac:	4b5a      	ldr	r3, [pc, #360]	; (8003518 <StartMode+0xb40>)
 80033ae:	885b      	ldrh	r3, [r3, #2]
 80033b0:	3b64      	subs	r3, #100	; 0x64
 80033b2:	b29b      	uxth	r3, r3
 80033b4:	4618      	mov	r0, r3
 80033b6:	f7ff fab1 	bl	800291c <FindSaturation>
 80033ba:	ed87 0a48 	vstr	s0, [r7, #288]	; 0x120
					  couleur = FindCouleur(ton, sat, lum) | (couleur & 0xFF000000);
 80033be:	ed97 1a49 	vldr	s2, [r7, #292]	; 0x124
 80033c2:	edd7 0a48 	vldr	s1, [r7, #288]	; 0x120
 80033c6:	ed97 0a4a 	vldr	s0, [r7, #296]	; 0x128
 80033ca:	f7ff f979 	bl	80026c0 <FindCouleur>
 80033ce:	4602      	mov	r2, r0
 80033d0:	4b52      	ldr	r3, [pc, #328]	; (800351c <StartMode+0xb44>)
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80033d8:	4313      	orrs	r3, r2
 80033da:	4a50      	ldr	r2, [pc, #320]	; (800351c <StartMode+0xb44>)
 80033dc:	6013      	str	r3, [r2, #0]
					  if(myMutexLCDHandle != NULL)
 80033de:	4b50      	ldr	r3, [pc, #320]	; (8003520 <StartMode+0xb48>)
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	2b00      	cmp	r3, #0
 80033e4:	d01c      	beq.n	8003420 <StartMode+0xa48>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 80033e6:	4b4e      	ldr	r3, [pc, #312]	; (8003520 <StartMode+0xb48>)
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	2164      	movs	r1, #100	; 0x64
 80033ec:	4618      	mov	r0, r3
 80033ee:	f00a f965 	bl	800d6bc <xQueueSemaphoreTake>
 80033f2:	4603      	mov	r3, r0
 80033f4:	2b01      	cmp	r3, #1
 80033f6:	d113      	bne.n	8003420 <StartMode+0xa48>
						   {
							   BSP_LCD_SetTextColor(couleur | 0xFF000000);
 80033f8:	4b48      	ldr	r3, [pc, #288]	; (800351c <StartMode+0xb44>)
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003400:	4618      	mov	r0, r3
 8003402:	f000 fdd7 	bl	8003fb4 <BSP_LCD_SetTextColor>
							   BSP_LCD_FillCircle(480-taille_menu/2, taille_menu/2, taille_menu/2-5);
 8003406:	2214      	movs	r2, #20
 8003408:	2119      	movs	r1, #25
 800340a:	f240 10c7 	movw	r0, #455	; 0x1c7
 800340e:	f001 fa93 	bl	8004938 <BSP_LCD_FillCircle>
							   xSemaphoreGive(myMutexLCDHandle);
 8003412:	4b43      	ldr	r3, [pc, #268]	; (8003520 <StartMode+0xb48>)
 8003414:	6818      	ldr	r0, [r3, #0]
 8003416:	2300      	movs	r3, #0
 8003418:	2200      	movs	r2, #0
 800341a:	2100      	movs	r1, #0
 800341c:	f00a f84c 	bl	800d4b8 <xQueueGenericSend>
						   }
					   }
				  }
				  menu_couleur = 0;
 8003420:	2300      	movs	r3, #0
 8003422:	f887 312e 	strb.w	r3, [r7, #302]	; 0x12e
				  sous_menu = 0;
 8003426:	2300      	movs	r3, #0
 8003428:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
				  BSP_TS_GetState(&TS_State);
 800342c:	483a      	ldr	r0, [pc, #232]	; (8003518 <StartMode+0xb40>)
 800342e:	f001 ff31 	bl	8005294 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 8003432:	4b39      	ldr	r3, [pc, #228]	; (8003518 <StartMode+0xb40>)
 8003434:	781b      	ldrb	r3, [r3, #0]
 8003436:	2b00      	cmp	r3, #0
 8003438:	d1ab      	bne.n	8003392 <StartMode+0x9ba>
			  }
			  break;
 800343a:	e000      	b.n	800343e <StartMode+0xa66>
			  break;
 800343c:	bf00      	nop
		  }
		  if(sous_menu==0) etat = 1;
 800343e:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8003442:	2b00      	cmp	r3, #0
 8003444:	f040 818b 	bne.w	800375e <StartMode+0xd86>
 8003448:	4b36      	ldr	r3, [pc, #216]	; (8003524 <StartMode+0xb4c>)
 800344a:	2201      	movs	r2, #1
 800344c:	701a      	strb	r2, [r3, #0]
		  break;
 800344e:	e186      	b.n	800375e <StartMode+0xd86>
	  /*
	   * etat de sélection de la taille
	   */
	  case 6 :
		  if(sous_menu == 0)
 8003450:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8003454:	2b00      	cmp	r3, #0
 8003456:	d158      	bne.n	800350a <StartMode+0xb32>
		  {
			  if(myMutexLCDHandle != NULL)
 8003458:	4b31      	ldr	r3, [pc, #196]	; (8003520 <StartMode+0xb48>)
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	2b00      	cmp	r3, #0
 800345e:	d054      	beq.n	800350a <StartMode+0xb32>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 8003460:	4b2f      	ldr	r3, [pc, #188]	; (8003520 <StartMode+0xb48>)
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003468:	4618      	mov	r0, r3
 800346a:	f00a f927 	bl	800d6bc <xQueueSemaphoreTake>
 800346e:	4603      	mov	r3, r0
 8003470:	2b01      	cmp	r3, #1
 8003472:	d14a      	bne.n	800350a <StartMode+0xb32>
				   {
					   BSP_LCD_SelectLayer(1);
 8003474:	2001      	movs	r0, #1
 8003476:	f000 fd8d 	bl	8003f94 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 800347a:	f04f 30ff 	mov.w	r0, #4294967295
 800347e:	f000 fd99 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 8003482:	2315      	movs	r3, #21
 8003484:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003488:	21fb      	movs	r1, #251	; 0xfb
 800348a:	2000      	movs	r0, #0
 800348c:	f001 f9da 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8003490:	4825      	ldr	r0, [pc, #148]	; (8003528 <StartMode+0xb50>)
 8003492:	f000 fd8f 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_taille, LEFT_MODE);
 8003496:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800349a:	2303      	movs	r3, #3
 800349c:	21fc      	movs	r1, #252	; 0xfc
 800349e:	2000      	movs	r0, #0
 80034a0:	f000 fefc 	bl	800429c <BSP_LCD_DisplayStringAt>
					   BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 80034a4:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 80034a8:	f000 fd84 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_DrawHLine(220, 261, 240);
 80034ac:	22f0      	movs	r2, #240	; 0xf0
 80034ae:	f240 1105 	movw	r1, #261	; 0x105
 80034b2:	20dc      	movs	r0, #220	; 0xdc
 80034b4:	f000 ffce 	bl	8004454 <BSP_LCD_DrawHLine>
					   BSP_LCD_DrawVLine(220, 252, 18);
 80034b8:	2212      	movs	r2, #18
 80034ba:	21fc      	movs	r1, #252	; 0xfc
 80034bc:	20dc      	movs	r0, #220	; 0xdc
 80034be:	f001 f827 	bl	8004510 <BSP_LCD_DrawVLine>
					   BSP_LCD_DrawVLine(460, 252, 18);
 80034c2:	2212      	movs	r2, #18
 80034c4:	21fc      	movs	r1, #252	; 0xfc
 80034c6:	f44f 70e6 	mov.w	r0, #460	; 0x1cc
 80034ca:	f001 f821 	bl	8004510 <BSP_LCD_DrawVLine>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 80034ce:	4816      	ldr	r0, [pc, #88]	; (8003528 <StartMode+0xb50>)
 80034d0:	f000 fd70 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(220+12*radius, 252, 5, 18);
 80034d4:	4b15      	ldr	r3, [pc, #84]	; (800352c <StartMode+0xb54>)
 80034d6:	781b      	ldrb	r3, [r3, #0]
 80034d8:	b29b      	uxth	r3, r3
 80034da:	461a      	mov	r2, r3
 80034dc:	0052      	lsls	r2, r2, #1
 80034de:	4413      	add	r3, r2
 80034e0:	009b      	lsls	r3, r3, #2
 80034e2:	b29b      	uxth	r3, r3
 80034e4:	33dc      	adds	r3, #220	; 0xdc
 80034e6:	b298      	uxth	r0, r3
 80034e8:	2312      	movs	r3, #18
 80034ea:	2205      	movs	r2, #5
 80034ec:	21fc      	movs	r1, #252	; 0xfc
 80034ee:	f001 f9a9 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(couleur);
 80034f2:	4b0a      	ldr	r3, [pc, #40]	; (800351c <StartMode+0xb44>)
 80034f4:	681b      	ldr	r3, [r3, #0]
 80034f6:	4618      	mov	r0, r3
 80034f8:	f000 fd5c 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   xSemaphoreGive(myMutexLCDHandle);
 80034fc:	4b08      	ldr	r3, [pc, #32]	; (8003520 <StartMode+0xb48>)
 80034fe:	6818      	ldr	r0, [r3, #0]
 8003500:	2300      	movs	r3, #0
 8003502:	2200      	movs	r2, #0
 8003504:	2100      	movs	r1, #0
 8003506:	f009 ffd7 	bl	800d4b8 <xQueueGenericSend>
				   }
			  }
		  }
		  sous_menu = 1;
 800350a:	2301      	movs	r3, #1
 800350c:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
		  BSP_TS_GetState(&TS_State);
 8003510:	4801      	ldr	r0, [pc, #4]	; (8003518 <StartMode+0xb40>)
 8003512:	f001 febf 	bl	8005294 <BSP_TS_GetState>
		  while(TS_State.touchDetected)
 8003516:	e071      	b.n	80035fc <StartMode+0xc24>
 8003518:	200016d0 	.word	0x200016d0
 800351c:	20009e84 	.word	0x20009e84
 8003520:	20009c34 	.word	0x20009c34
 8003524:	2000139e 	.word	0x2000139e
 8003528:	ffff0000 	.word	0xffff0000
 800352c:	2000139c 	.word	0x2000139c
		  {
			  if((TS_State.touchX[0]>220) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<460))
 8003530:	4b90      	ldr	r3, [pc, #576]	; (8003774 <StartMode+0xd9c>)
 8003532:	885b      	ldrh	r3, [r3, #2]
 8003534:	2bdc      	cmp	r3, #220	; 0xdc
 8003536:	d95b      	bls.n	80035f0 <StartMode+0xc18>
 8003538:	4b8e      	ldr	r3, [pc, #568]	; (8003774 <StartMode+0xd9c>)
 800353a:	899b      	ldrh	r3, [r3, #12]
 800353c:	2bf0      	cmp	r3, #240	; 0xf0
 800353e:	d957      	bls.n	80035f0 <StartMode+0xc18>
 8003540:	4b8c      	ldr	r3, [pc, #560]	; (8003774 <StartMode+0xd9c>)
 8003542:	885b      	ldrh	r3, [r3, #2]
 8003544:	f5b3 7fe6 	cmp.w	r3, #460	; 0x1cc
 8003548:	d252      	bcs.n	80035f0 <StartMode+0xc18>
			  {
				  radius_prec = radius;
 800354a:	4b8b      	ldr	r3, [pc, #556]	; (8003778 <StartMode+0xda0>)
 800354c:	781b      	ldrb	r3, [r3, #0]
 800354e:	f887 310b 	strb.w	r3, [r7, #267]	; 0x10b
				  radius = (TS_State.touchX[0]-208)/12;
 8003552:	4b88      	ldr	r3, [pc, #544]	; (8003774 <StartMode+0xd9c>)
 8003554:	885b      	ldrh	r3, [r3, #2]
 8003556:	3bd0      	subs	r3, #208	; 0xd0
 8003558:	4a88      	ldr	r2, [pc, #544]	; (800377c <StartMode+0xda4>)
 800355a:	fb82 1203 	smull	r1, r2, r2, r3
 800355e:	1052      	asrs	r2, r2, #1
 8003560:	17db      	asrs	r3, r3, #31
 8003562:	1ad3      	subs	r3, r2, r3
 8003564:	b2da      	uxtb	r2, r3
 8003566:	4b84      	ldr	r3, [pc, #528]	; (8003778 <StartMode+0xda0>)
 8003568:	701a      	strb	r2, [r3, #0]
				  if(myMutexLCDHandle != NULL)
 800356a:	4b85      	ldr	r3, [pc, #532]	; (8003780 <StartMode+0xda8>)
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	2b00      	cmp	r3, #0
 8003570:	d03e      	beq.n	80035f0 <StartMode+0xc18>
				  {
					   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 8003572:	4b83      	ldr	r3, [pc, #524]	; (8003780 <StartMode+0xda8>)
 8003574:	681b      	ldr	r3, [r3, #0]
 8003576:	2164      	movs	r1, #100	; 0x64
 8003578:	4618      	mov	r0, r3
 800357a:	f00a f89f 	bl	800d6bc <xQueueSemaphoreTake>
 800357e:	4603      	mov	r3, r0
 8003580:	2b01      	cmp	r3, #1
 8003582:	d135      	bne.n	80035f0 <StartMode+0xc18>
					   {
						   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8003584:	f04f 30ff 	mov.w	r0, #4294967295
 8003588:	f000 fd14 	bl	8003fb4 <BSP_LCD_SetTextColor>
						   BSP_LCD_FillRect(220+12*radius_prec, 252, 5, 18);
 800358c:	f897 310b 	ldrb.w	r3, [r7, #267]	; 0x10b
 8003590:	b29b      	uxth	r3, r3
 8003592:	461a      	mov	r2, r3
 8003594:	0052      	lsls	r2, r2, #1
 8003596:	4413      	add	r3, r2
 8003598:	009b      	lsls	r3, r3, #2
 800359a:	b29b      	uxth	r3, r3
 800359c:	33dc      	adds	r3, #220	; 0xdc
 800359e:	b298      	uxth	r0, r3
 80035a0:	2312      	movs	r3, #18
 80035a2:	2205      	movs	r2, #5
 80035a4:	21fc      	movs	r1, #252	; 0xfc
 80035a6:	f001 f94d 	bl	8004844 <BSP_LCD_FillRect>
						   BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 80035aa:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 80035ae:	f000 fd01 	bl	8003fb4 <BSP_LCD_SetTextColor>
						   BSP_LCD_DrawHLine(220, 261, 240);
 80035b2:	22f0      	movs	r2, #240	; 0xf0
 80035b4:	f240 1105 	movw	r1, #261	; 0x105
 80035b8:	20dc      	movs	r0, #220	; 0xdc
 80035ba:	f000 ff4b 	bl	8004454 <BSP_LCD_DrawHLine>
						   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 80035be:	4871      	ldr	r0, [pc, #452]	; (8003784 <StartMode+0xdac>)
 80035c0:	f000 fcf8 	bl	8003fb4 <BSP_LCD_SetTextColor>
						   BSP_LCD_FillRect(220+12*radius, 252, 5, 18);
 80035c4:	4b6c      	ldr	r3, [pc, #432]	; (8003778 <StartMode+0xda0>)
 80035c6:	781b      	ldrb	r3, [r3, #0]
 80035c8:	b29b      	uxth	r3, r3
 80035ca:	461a      	mov	r2, r3
 80035cc:	0052      	lsls	r2, r2, #1
 80035ce:	4413      	add	r3, r2
 80035d0:	009b      	lsls	r3, r3, #2
 80035d2:	b29b      	uxth	r3, r3
 80035d4:	33dc      	adds	r3, #220	; 0xdc
 80035d6:	b298      	uxth	r0, r3
 80035d8:	2312      	movs	r3, #18
 80035da:	2205      	movs	r2, #5
 80035dc:	21fc      	movs	r1, #252	; 0xfc
 80035de:	f001 f931 	bl	8004844 <BSP_LCD_FillRect>
						   xSemaphoreGive(myMutexLCDHandle);
 80035e2:	4b67      	ldr	r3, [pc, #412]	; (8003780 <StartMode+0xda8>)
 80035e4:	6818      	ldr	r0, [r3, #0]
 80035e6:	2300      	movs	r3, #0
 80035e8:	2200      	movs	r2, #0
 80035ea:	2100      	movs	r1, #0
 80035ec:	f009 ff64 	bl	800d4b8 <xQueueGenericSend>
					   }
				   }
			  }
			  sous_menu = 0;
 80035f0:	2300      	movs	r3, #0
 80035f2:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f
			  BSP_TS_GetState(&TS_State);
 80035f6:	485f      	ldr	r0, [pc, #380]	; (8003774 <StartMode+0xd9c>)
 80035f8:	f001 fe4c 	bl	8005294 <BSP_TS_GetState>
		  while(TS_State.touchDetected)
 80035fc:	4b5d      	ldr	r3, [pc, #372]	; (8003774 <StartMode+0xd9c>)
 80035fe:	781b      	ldrb	r3, [r3, #0]
 8003600:	2b00      	cmp	r3, #0
 8003602:	d195      	bne.n	8003530 <StartMode+0xb58>
		  }
		  if(sous_menu==0) etat = 1;
 8003604:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8003608:	2b00      	cmp	r3, #0
 800360a:	f040 80aa 	bne.w	8003762 <StartMode+0xd8a>
 800360e:	4b5e      	ldr	r3, [pc, #376]	; (8003788 <StartMode+0xdb0>)
 8003610:	2201      	movs	r2, #1
 8003612:	701a      	strb	r2, [r3, #0]
		  break;
 8003614:	e0a5      	b.n	8003762 <StartMode+0xd8a>
	  /*
	   * etat de clear de la page de dessin.
	   */
	  case 7 :
		  if(myMutexLCDHandle != NULL)
 8003616:	4b5a      	ldr	r3, [pc, #360]	; (8003780 <StartMode+0xda8>)
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	2b00      	cmp	r3, #0
 800361c:	d02a      	beq.n	8003674 <StartMode+0xc9c>
		  {
			   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 800361e:	4b58      	ldr	r3, [pc, #352]	; (8003780 <StartMode+0xda8>)
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	2164      	movs	r1, #100	; 0x64
 8003624:	4618      	mov	r0, r3
 8003626:	f00a f849 	bl	800d6bc <xQueueSemaphoreTake>
 800362a:	4603      	mov	r3, r0
 800362c:	2b01      	cmp	r3, #1
 800362e:	d121      	bne.n	8003674 <StartMode+0xc9c>
			   {
				  BSP_LCD_SelectLayer(0);
 8003630:	2000      	movs	r0, #0
 8003632:	f000 fcaf 	bl	8003f94 <BSP_LCD_SelectLayer>
				  BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8003636:	f04f 30ff 	mov.w	r0, #4294967295
 800363a:	f000 fcbb 	bl	8003fb4 <BSP_LCD_SetTextColor>
				  BSP_LCD_FillRect(0, 0, 480-taille_menu-5, 246);
 800363e:	23f6      	movs	r3, #246	; 0xf6
 8003640:	f240 12a9 	movw	r2, #425	; 0x1a9
 8003644:	2100      	movs	r1, #0
 8003646:	2000      	movs	r0, #0
 8003648:	f001 f8fc 	bl	8004844 <BSP_LCD_FillRect>
				  BSP_LCD_SelectLayer(1);
 800364c:	2001      	movs	r0, #1
 800364e:	f000 fca1 	bl	8003f94 <BSP_LCD_SelectLayer>
				  BSP_LCD_SetTextColor(LCD_COLOR_TRANSPARENT);
 8003652:	2000      	movs	r0, #0
 8003654:	f000 fcae 	bl	8003fb4 <BSP_LCD_SetTextColor>
				  BSP_LCD_FillRect(0, 0, 480-taille_menu-5, 246);
 8003658:	23f6      	movs	r3, #246	; 0xf6
 800365a:	f240 12a9 	movw	r2, #425	; 0x1a9
 800365e:	2100      	movs	r1, #0
 8003660:	2000      	movs	r0, #0
 8003662:	f001 f8ef 	bl	8004844 <BSP_LCD_FillRect>
				  xSemaphoreGive(myMutexLCDHandle);
 8003666:	4b46      	ldr	r3, [pc, #280]	; (8003780 <StartMode+0xda8>)
 8003668:	6818      	ldr	r0, [r3, #0]
 800366a:	2300      	movs	r3, #0
 800366c:	2200      	movs	r2, #0
 800366e:	2100      	movs	r1, #0
 8003670:	f009 ff22 	bl	800d4b8 <xQueueGenericSend>
			   }
		   }
		  etat = 1;
 8003674:	4b44      	ldr	r3, [pc, #272]	; (8003788 <StartMode+0xdb0>)
 8003676:	2201      	movs	r2, #1
 8003678:	701a      	strb	r2, [r3, #0]
		  break;
 800367a:	e073      	b.n	8003764 <StartMode+0xd8c>
	  /*
	   * etat d'enregistrement du dessin
	   */
	  case 8 :
		  HAL_UART_Transmit(&huart1, demande_envoi, 1, 100);
 800367c:	f107 010c 	add.w	r1, r7, #12
 8003680:	2364      	movs	r3, #100	; 0x64
 8003682:	2201      	movs	r2, #1
 8003684:	4841      	ldr	r0, [pc, #260]	; (800378c <StartMode+0xdb4>)
 8003686:	f008 fc27 	bl	800bed8 <HAL_UART_Transmit>
		  HAL_UART_Receive(&huart1, &confirmation, 1, 250);
 800368a:	f107 010b 	add.w	r1, r7, #11
 800368e:	23fa      	movs	r3, #250	; 0xfa
 8003690:	2201      	movs	r2, #1
 8003692:	483e      	ldr	r0, [pc, #248]	; (800378c <StartMode+0xdb4>)
 8003694:	f008 fcb1 	bl	800bffa <HAL_UART_Receive>
		  if(confirmation=='a')
 8003698:	f107 030b 	add.w	r3, r7, #11
 800369c:	781b      	ldrb	r3, [r3, #0]
 800369e:	2b61      	cmp	r3, #97	; 0x61
 80036a0:	d153      	bne.n	800374a <StartMode+0xd72>
		  {
			  for(int i = 0; i<246; i++)
 80036a2:	2300      	movs	r3, #0
 80036a4:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 80036a8:	e047      	b.n	800373a <StartMode+0xd62>
			  {
				  for(int j = 0; j<425;j++)
 80036aa:	2300      	movs	r3, #0
 80036ac:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 80036b0:	e039      	b.n	8003726 <StartMode+0xd4e>
				  {
					  pixel = BSP_LCD_ReadPixel(j, i);
 80036b2:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80036b6:	b29b      	uxth	r3, r3
 80036b8:	f8d7 2114 	ldr.w	r2, [r7, #276]	; 0x114
 80036bc:	b292      	uxth	r2, r2
 80036be:	4611      	mov	r1, r2
 80036c0:	4618      	mov	r0, r3
 80036c2:	f000 fcd9 	bl	8004078 <BSP_LCD_ReadPixel>
 80036c6:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c
					  R = (pixel >> 16) & 0xFF;
 80036ca:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80036ce:	0c1b      	lsrs	r3, r3, #16
 80036d0:	b2da      	uxtb	r2, r3
 80036d2:	f107 030a 	add.w	r3, r7, #10
 80036d6:	701a      	strb	r2, [r3, #0]
					  V = (pixel >> 8) & 0xFF;
 80036d8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80036dc:	0a1b      	lsrs	r3, r3, #8
 80036de:	b2da      	uxtb	r2, r3
 80036e0:	f107 0309 	add.w	r3, r7, #9
 80036e4:	701a      	strb	r2, [r3, #0]
					  B = pixel & 0xFF;
 80036e6:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80036ea:	b2da      	uxtb	r2, r3
 80036ec:	f107 0308 	add.w	r3, r7, #8
 80036f0:	701a      	strb	r2, [r3, #0]
					  HAL_UART_Transmit(&huart1, &R, 1, 100);
 80036f2:	f107 010a 	add.w	r1, r7, #10
 80036f6:	2364      	movs	r3, #100	; 0x64
 80036f8:	2201      	movs	r2, #1
 80036fa:	4824      	ldr	r0, [pc, #144]	; (800378c <StartMode+0xdb4>)
 80036fc:	f008 fbec 	bl	800bed8 <HAL_UART_Transmit>
					  HAL_UART_Transmit(&huart1, &V, 1, 100);
 8003700:	f107 0109 	add.w	r1, r7, #9
 8003704:	2364      	movs	r3, #100	; 0x64
 8003706:	2201      	movs	r2, #1
 8003708:	4820      	ldr	r0, [pc, #128]	; (800378c <StartMode+0xdb4>)
 800370a:	f008 fbe5 	bl	800bed8 <HAL_UART_Transmit>
					  HAL_UART_Transmit(&huart1, &B, 1, 100);
 800370e:	f107 0108 	add.w	r1, r7, #8
 8003712:	2364      	movs	r3, #100	; 0x64
 8003714:	2201      	movs	r2, #1
 8003716:	481d      	ldr	r0, [pc, #116]	; (800378c <StartMode+0xdb4>)
 8003718:	f008 fbde 	bl	800bed8 <HAL_UART_Transmit>
				  for(int j = 0; j<425;j++)
 800371c:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8003720:	3301      	adds	r3, #1
 8003722:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 8003726:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 800372a:	f5b3 7fd4 	cmp.w	r3, #424	; 0x1a8
 800372e:	ddc0      	ble.n	80036b2 <StartMode+0xcda>
			  for(int i = 0; i<246; i++)
 8003730:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8003734:	3301      	adds	r3, #1
 8003736:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 800373a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800373e:	2bf5      	cmp	r3, #245	; 0xf5
 8003740:	ddb3      	ble.n	80036aa <StartMode+0xcd2>
				  }
			  }
			  confirmation = 'n';
 8003742:	f107 030b 	add.w	r3, r7, #11
 8003746:	226e      	movs	r2, #110	; 0x6e
 8003748:	701a      	strb	r2, [r3, #0]
		  }
		  etat = 1;
 800374a:	4b0f      	ldr	r3, [pc, #60]	; (8003788 <StartMode+0xdb0>)
 800374c:	2201      	movs	r2, #1
 800374e:	701a      	strb	r2, [r3, #0]
		  break;
 8003750:	e008      	b.n	8003764 <StartMode+0xd8c>
		  break;
 8003752:	bf00      	nop
 8003754:	e006      	b.n	8003764 <StartMode+0xd8c>
		  break;
 8003756:	bf00      	nop
 8003758:	e004      	b.n	8003764 <StartMode+0xd8c>
		  break;
 800375a:	bf00      	nop
 800375c:	e002      	b.n	8003764 <StartMode+0xd8c>
		  break;
 800375e:	bf00      	nop
 8003760:	e000      	b.n	8003764 <StartMode+0xd8c>
		  break;
 8003762:	bf00      	nop
	  }
	  vTaskDelayUntil(&xLastWakeTime, 100);
 8003764:	f507 7382 	add.w	r3, r7, #260	; 0x104
 8003768:	2164      	movs	r1, #100	; 0x64
 800376a:	4618      	mov	r0, r3
 800376c:	f00a fb5a 	bl	800de24 <vTaskDelayUntil>
	  switch(etat)
 8003770:	f7ff b99e 	b.w	8002ab0 <StartMode+0xd8>
 8003774:	200016d0 	.word	0x200016d0
 8003778:	2000139c 	.word	0x2000139c
 800377c:	2aaaaaab 	.word	0x2aaaaaab
 8003780:	20009c34 	.word	0x20009c34
 8003784:	ffff0000 	.word	0xffff0000
 8003788:	2000139e 	.word	0x2000139e
 800378c:	20009df0 	.word	0x20009df0

08003790 <StartPeindre>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartPeindre */
void StartPeindre(void const * argument)
{
 8003790:	b580      	push	{r7, lr}
 8003792:	b082      	sub	sp, #8
 8003794:	af00      	add	r7, sp, #0
 8003796:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartPeindre */
	static TS_StateTypeDef  TS_State;
	/* Infinite loop */
	for(;;)
	{
	  BSP_TS_GetState(&TS_State);
 8003798:	4819      	ldr	r0, [pc, #100]	; (8003800 <StartPeindre+0x70>)
 800379a:	f001 fd7b 	bl	8005294 <BSP_TS_GetState>
	  if(TS_State.touchDetected && (TestConditionBord(TS_State.touchX[0], TS_State.touchY[0], radius)))
 800379e:	4b18      	ldr	r3, [pc, #96]	; (8003800 <StartPeindre+0x70>)
 80037a0:	781b      	ldrb	r3, [r3, #0]
 80037a2:	2b00      	cmp	r3, #0
 80037a4:	d0f8      	beq.n	8003798 <StartPeindre+0x8>
 80037a6:	4b16      	ldr	r3, [pc, #88]	; (8003800 <StartPeindre+0x70>)
 80037a8:	8858      	ldrh	r0, [r3, #2]
 80037aa:	4b15      	ldr	r3, [pc, #84]	; (8003800 <StartPeindre+0x70>)
 80037ac:	8999      	ldrh	r1, [r3, #12]
 80037ae:	4b15      	ldr	r3, [pc, #84]	; (8003804 <StartPeindre+0x74>)
 80037b0:	781b      	ldrb	r3, [r3, #0]
 80037b2:	b29b      	uxth	r3, r3
 80037b4:	461a      	mov	r2, r3
 80037b6:	f7fe fc53 	bl	8002060 <TestConditionBord>
 80037ba:	4603      	mov	r3, r0
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d0eb      	beq.n	8003798 <StartPeindre+0x8>
	  {
		  if(myMutexLCDHandle != NULL)
 80037c0:	4b11      	ldr	r3, [pc, #68]	; (8003808 <StartPeindre+0x78>)
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	2b00      	cmp	r3, #0
 80037c6:	d0e7      	beq.n	8003798 <StartPeindre+0x8>
		   {
			   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 80037c8:	4b0f      	ldr	r3, [pc, #60]	; (8003808 <StartPeindre+0x78>)
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	2101      	movs	r1, #1
 80037ce:	4618      	mov	r0, r3
 80037d0:	f009 ff74 	bl	800d6bc <xQueueSemaphoreTake>
 80037d4:	4603      	mov	r3, r0
 80037d6:	2b01      	cmp	r3, #1
 80037d8:	d1de      	bne.n	8003798 <StartPeindre+0x8>
			   {
				   LCD_PAINTBRUSH(TS_State.touchX[0],TS_State.touchY[0],radius);
 80037da:	4b09      	ldr	r3, [pc, #36]	; (8003800 <StartPeindre+0x70>)
 80037dc:	8858      	ldrh	r0, [r3, #2]
 80037de:	4b08      	ldr	r3, [pc, #32]	; (8003800 <StartPeindre+0x70>)
 80037e0:	8999      	ldrh	r1, [r3, #12]
 80037e2:	4b08      	ldr	r3, [pc, #32]	; (8003804 <StartPeindre+0x74>)
 80037e4:	781b      	ldrb	r3, [r3, #0]
 80037e6:	b29b      	uxth	r3, r3
 80037e8:	461a      	mov	r2, r3
 80037ea:	f7fe fc63 	bl	80020b4 <LCD_PAINTBRUSH>
				   xSemaphoreGive(myMutexLCDHandle);
 80037ee:	4b06      	ldr	r3, [pc, #24]	; (8003808 <StartPeindre+0x78>)
 80037f0:	6818      	ldr	r0, [r3, #0]
 80037f2:	2300      	movs	r3, #0
 80037f4:	2200      	movs	r2, #0
 80037f6:	2100      	movs	r1, #0
 80037f8:	f009 fe5e 	bl	800d4b8 <xQueueGenericSend>
	  BSP_TS_GetState(&TS_State);
 80037fc:	e7cc      	b.n	8003798 <StartPeindre+0x8>
 80037fe:	bf00      	nop
 8003800:	200016fc 	.word	0x200016fc
 8003804:	2000139c 	.word	0x2000139c
 8003808:	20009c34 	.word	0x20009c34

0800380c <StartTaskEtat>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTaskEtat */
void StartTaskEtat(void const * argument)
{
 800380c:	b580      	push	{r7, lr}
 800380e:	b088      	sub	sp, #32
 8003810:	af00      	add	r7, sp, #0
 8003812:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartTaskEtat */
	TickType_t xLastWakeTime;
	xLastWakeTime = xTaskGetTickCount();
 8003814:	f00a fcca 	bl	800e1ac <xTaskGetTickCount>
 8003818:	4603      	mov	r3, r0
 800381a:	61bb      	str	r3, [r7, #24]
	ADC_ChannelConfTypeDef sConfig = {0};
 800381c:	f107 0308 	add.w	r3, r7, #8
 8003820:	2200      	movs	r2, #0
 8003822:	601a      	str	r2, [r3, #0]
 8003824:	605a      	str	r2, [r3, #4]
 8003826:	609a      	str	r2, [r3, #8]
 8003828:	60da      	str	r2, [r3, #12]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 800382a:	2301      	movs	r3, #1
 800382c:	60fb      	str	r3, [r7, #12]
	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800382e:	2300      	movs	r3, #0
 8003830:	613b      	str	r3, [r7, #16]
	sConfig.Channel = ADC_CHANNEL_8;
 8003832:	2308      	movs	r3, #8
 8003834:	60bb      	str	r3, [r7, #8]
	HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8003836:	f107 0308 	add.w	r3, r7, #8
 800383a:	4619      	mov	r1, r3
 800383c:	4875      	ldr	r0, [pc, #468]	; (8003a14 <StartTaskEtat+0x208>)
 800383e:	f002 ff81 	bl	8006744 <HAL_ADC_ConfigChannel>
	char etat_prec = 2;
 8003842:	2302      	movs	r3, #2
 8003844:	77fb      	strb	r3, [r7, #31]
	uint16_t joystick_h;
	/* Infinite loop */
	for(;;)
	{
	  if(etat == 0)
 8003846:	4b74      	ldr	r3, [pc, #464]	; (8003a18 <StartTaskEtat+0x20c>)
 8003848:	781b      	ldrb	r3, [r3, #0]
 800384a:	2b00      	cmp	r3, #0
 800384c:	f040 80d9 	bne.w	8003a02 <StartTaskEtat+0x1f6>
	  {
		  HAL_ADC_Start(&hadc1);
 8003850:	4872      	ldr	r0, [pc, #456]	; (8003a1c <StartTaskEtat+0x210>)
 8003852:	f002 fe25 	bl	80064a0 <HAL_ADC_Start>
		  while(HAL_ADC_PollForConversion(&hadc1, 100)!=HAL_OK);
 8003856:	bf00      	nop
 8003858:	2164      	movs	r1, #100	; 0x64
 800385a:	4870      	ldr	r0, [pc, #448]	; (8003a1c <StartTaskEtat+0x210>)
 800385c:	f002 fee0 	bl	8006620 <HAL_ADC_PollForConversion>
 8003860:	4603      	mov	r3, r0
 8003862:	2b00      	cmp	r3, #0
 8003864:	d1f8      	bne.n	8003858 <StartTaskEtat+0x4c>
		  joystick_h = HAL_ADC_GetValue(&hadc1);
 8003866:	486d      	ldr	r0, [pc, #436]	; (8003a1c <StartTaskEtat+0x210>)
 8003868:	f002 ff5e 	bl	8006728 <HAL_ADC_GetValue>
 800386c:	4603      	mov	r3, r0
 800386e:	83bb      	strh	r3, [r7, #28]
		  if(joystick_h > 2500)
 8003870:	8bbb      	ldrh	r3, [r7, #28]
 8003872:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8003876:	4293      	cmp	r3, r2
 8003878:	d960      	bls.n	800393c <StartTaskEtat+0x130>
		  {
			  etat_prec = etat_int;
 800387a:	4b69      	ldr	r3, [pc, #420]	; (8003a20 <StartTaskEtat+0x214>)
 800387c:	781b      	ldrb	r3, [r3, #0]
 800387e:	77fb      	strb	r3, [r7, #31]
			  etat_int -= 1;
 8003880:	4b67      	ldr	r3, [pc, #412]	; (8003a20 <StartTaskEtat+0x214>)
 8003882:	781b      	ldrb	r3, [r3, #0]
 8003884:	3b01      	subs	r3, #1
 8003886:	b2da      	uxtb	r2, r3
 8003888:	4b65      	ldr	r3, [pc, #404]	; (8003a20 <StartTaskEtat+0x214>)
 800388a:	701a      	strb	r2, [r3, #0]
			  if(etat_int < 2) etat_int = etat_max;
 800388c:	4b64      	ldr	r3, [pc, #400]	; (8003a20 <StartTaskEtat+0x214>)
 800388e:	781b      	ldrb	r3, [r3, #0]
 8003890:	2b01      	cmp	r3, #1
 8003892:	d802      	bhi.n	800389a <StartTaskEtat+0x8e>
 8003894:	4b62      	ldr	r3, [pc, #392]	; (8003a20 <StartTaskEtat+0x214>)
 8003896:	2206      	movs	r2, #6
 8003898:	701a      	strb	r2, [r3, #0]
			  if(myMutexLCDHandle != NULL)
 800389a:	4b62      	ldr	r3, [pc, #392]	; (8003a24 <StartTaskEtat+0x218>)
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	2b00      	cmp	r3, #0
 80038a0:	f000 80af 	beq.w	8003a02 <StartTaskEtat+0x1f6>
			   {
				   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 80038a4:	4b5f      	ldr	r3, [pc, #380]	; (8003a24 <StartTaskEtat+0x218>)
 80038a6:	681b      	ldr	r3, [r3, #0]
 80038a8:	2101      	movs	r1, #1
 80038aa:	4618      	mov	r0, r3
 80038ac:	f009 ff06 	bl	800d6bc <xQueueSemaphoreTake>
 80038b0:	4603      	mov	r3, r0
 80038b2:	2b01      	cmp	r3, #1
 80038b4:	f040 80a5 	bne.w	8003a02 <StartTaskEtat+0x1f6>
				   {
					   BSP_LCD_SelectLayer(1);
 80038b8:	2001      	movs	r0, #1
 80038ba:	f000 fb6b 	bl	8003f94 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 80038be:	f04f 30ff 	mov.w	r0, #4294967295
 80038c2:	f000 fb77 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(98*etat_prec-170, 265, 35, 5);
 80038c6:	7ffb      	ldrb	r3, [r7, #31]
 80038c8:	b29b      	uxth	r3, r3
 80038ca:	461a      	mov	r2, r3
 80038cc:	00d2      	lsls	r2, r2, #3
 80038ce:	1ad3      	subs	r3, r2, r3
 80038d0:	461a      	mov	r2, r3
 80038d2:	00d2      	lsls	r2, r2, #3
 80038d4:	1ad3      	subs	r3, r2, r3
 80038d6:	005b      	lsls	r3, r3, #1
 80038d8:	b29b      	uxth	r3, r3
 80038da:	3baa      	subs	r3, #170	; 0xaa
 80038dc:	b298      	uxth	r0, r3
 80038de:	2305      	movs	r3, #5
 80038e0:	2223      	movs	r2, #35	; 0x23
 80038e2:	f240 1109 	movw	r1, #265	; 0x109
 80038e6:	f000 ffad 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(0xFFFF00FF);
 80038ea:	f46f 407f 	mvn.w	r0, #65280	; 0xff00
 80038ee:	f000 fb61 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(98*etat_int-170, 265, 35, 5);
 80038f2:	4b4b      	ldr	r3, [pc, #300]	; (8003a20 <StartTaskEtat+0x214>)
 80038f4:	781b      	ldrb	r3, [r3, #0]
 80038f6:	b29b      	uxth	r3, r3
 80038f8:	461a      	mov	r2, r3
 80038fa:	00d2      	lsls	r2, r2, #3
 80038fc:	1ad3      	subs	r3, r2, r3
 80038fe:	461a      	mov	r2, r3
 8003900:	00d2      	lsls	r2, r2, #3
 8003902:	1ad3      	subs	r3, r2, r3
 8003904:	005b      	lsls	r3, r3, #1
 8003906:	b29b      	uxth	r3, r3
 8003908:	3baa      	subs	r3, #170	; 0xaa
 800390a:	b298      	uxth	r0, r3
 800390c:	2305      	movs	r3, #5
 800390e:	2223      	movs	r2, #35	; 0x23
 8003910:	f240 1109 	movw	r1, #265	; 0x109
 8003914:	f000 ff96 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SelectLayer(layer);
 8003918:	4b43      	ldr	r3, [pc, #268]	; (8003a28 <StartTaskEtat+0x21c>)
 800391a:	781b      	ldrb	r3, [r3, #0]
 800391c:	4618      	mov	r0, r3
 800391e:	f000 fb39 	bl	8003f94 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(couleur);
 8003922:	4b42      	ldr	r3, [pc, #264]	; (8003a2c <StartTaskEtat+0x220>)
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	4618      	mov	r0, r3
 8003928:	f000 fb44 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   xSemaphoreGive(myMutexLCDHandle);
 800392c:	4b3d      	ldr	r3, [pc, #244]	; (8003a24 <StartTaskEtat+0x218>)
 800392e:	6818      	ldr	r0, [r3, #0]
 8003930:	2300      	movs	r3, #0
 8003932:	2200      	movs	r2, #0
 8003934:	2100      	movs	r1, #0
 8003936:	f009 fdbf 	bl	800d4b8 <xQueueGenericSend>
 800393a:	e062      	b.n	8003a02 <StartTaskEtat+0x1f6>
				   }
			   }
		  }
		  else if(joystick_h < 1500)
 800393c:	8bbb      	ldrh	r3, [r7, #28]
 800393e:	f240 52db 	movw	r2, #1499	; 0x5db
 8003942:	4293      	cmp	r3, r2
 8003944:	d85d      	bhi.n	8003a02 <StartTaskEtat+0x1f6>
		  {
			  etat_prec = etat_int;
 8003946:	4b36      	ldr	r3, [pc, #216]	; (8003a20 <StartTaskEtat+0x214>)
 8003948:	781b      	ldrb	r3, [r3, #0]
 800394a:	77fb      	strb	r3, [r7, #31]
			  etat_int += 1;
 800394c:	4b34      	ldr	r3, [pc, #208]	; (8003a20 <StartTaskEtat+0x214>)
 800394e:	781b      	ldrb	r3, [r3, #0]
 8003950:	3301      	adds	r3, #1
 8003952:	b2da      	uxtb	r2, r3
 8003954:	4b32      	ldr	r3, [pc, #200]	; (8003a20 <StartTaskEtat+0x214>)
 8003956:	701a      	strb	r2, [r3, #0]
			  if (etat_int > etat_max) etat_int = 2;
 8003958:	4b31      	ldr	r3, [pc, #196]	; (8003a20 <StartTaskEtat+0x214>)
 800395a:	781b      	ldrb	r3, [r3, #0]
 800395c:	2b06      	cmp	r3, #6
 800395e:	d902      	bls.n	8003966 <StartTaskEtat+0x15a>
 8003960:	4b2f      	ldr	r3, [pc, #188]	; (8003a20 <StartTaskEtat+0x214>)
 8003962:	2202      	movs	r2, #2
 8003964:	701a      	strb	r2, [r3, #0]
			  if(myMutexLCDHandle != NULL)
 8003966:	4b2f      	ldr	r3, [pc, #188]	; (8003a24 <StartTaskEtat+0x218>)
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	2b00      	cmp	r3, #0
 800396c:	d049      	beq.n	8003a02 <StartTaskEtat+0x1f6>
			   {
				   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 800396e:	4b2d      	ldr	r3, [pc, #180]	; (8003a24 <StartTaskEtat+0x218>)
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	2101      	movs	r1, #1
 8003974:	4618      	mov	r0, r3
 8003976:	f009 fea1 	bl	800d6bc <xQueueSemaphoreTake>
 800397a:	4603      	mov	r3, r0
 800397c:	2b01      	cmp	r3, #1
 800397e:	d140      	bne.n	8003a02 <StartTaskEtat+0x1f6>
				   {
					   BSP_LCD_SelectLayer(1);
 8003980:	2001      	movs	r0, #1
 8003982:	f000 fb07 	bl	8003f94 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8003986:	f04f 30ff 	mov.w	r0, #4294967295
 800398a:	f000 fb13 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(98*etat_prec-170, 265, 35, 5);
 800398e:	7ffb      	ldrb	r3, [r7, #31]
 8003990:	b29b      	uxth	r3, r3
 8003992:	461a      	mov	r2, r3
 8003994:	00d2      	lsls	r2, r2, #3
 8003996:	1ad3      	subs	r3, r2, r3
 8003998:	461a      	mov	r2, r3
 800399a:	00d2      	lsls	r2, r2, #3
 800399c:	1ad3      	subs	r3, r2, r3
 800399e:	005b      	lsls	r3, r3, #1
 80039a0:	b29b      	uxth	r3, r3
 80039a2:	3baa      	subs	r3, #170	; 0xaa
 80039a4:	b298      	uxth	r0, r3
 80039a6:	2305      	movs	r3, #5
 80039a8:	2223      	movs	r2, #35	; 0x23
 80039aa:	f240 1109 	movw	r1, #265	; 0x109
 80039ae:	f000 ff49 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(0xFFFF00FF); //violet
 80039b2:	f46f 407f 	mvn.w	r0, #65280	; 0xff00
 80039b6:	f000 fafd 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(98*etat_int-170, 265, 35, 5);
 80039ba:	4b19      	ldr	r3, [pc, #100]	; (8003a20 <StartTaskEtat+0x214>)
 80039bc:	781b      	ldrb	r3, [r3, #0]
 80039be:	b29b      	uxth	r3, r3
 80039c0:	461a      	mov	r2, r3
 80039c2:	00d2      	lsls	r2, r2, #3
 80039c4:	1ad3      	subs	r3, r2, r3
 80039c6:	461a      	mov	r2, r3
 80039c8:	00d2      	lsls	r2, r2, #3
 80039ca:	1ad3      	subs	r3, r2, r3
 80039cc:	005b      	lsls	r3, r3, #1
 80039ce:	b29b      	uxth	r3, r3
 80039d0:	3baa      	subs	r3, #170	; 0xaa
 80039d2:	b298      	uxth	r0, r3
 80039d4:	2305      	movs	r3, #5
 80039d6:	2223      	movs	r2, #35	; 0x23
 80039d8:	f240 1109 	movw	r1, #265	; 0x109
 80039dc:	f000 ff32 	bl	8004844 <BSP_LCD_FillRect>
					   BSP_LCD_SelectLayer(layer);
 80039e0:	4b11      	ldr	r3, [pc, #68]	; (8003a28 <StartTaskEtat+0x21c>)
 80039e2:	781b      	ldrb	r3, [r3, #0]
 80039e4:	4618      	mov	r0, r3
 80039e6:	f000 fad5 	bl	8003f94 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(couleur);
 80039ea:	4b10      	ldr	r3, [pc, #64]	; (8003a2c <StartTaskEtat+0x220>)
 80039ec:	681b      	ldr	r3, [r3, #0]
 80039ee:	4618      	mov	r0, r3
 80039f0:	f000 fae0 	bl	8003fb4 <BSP_LCD_SetTextColor>
					   xSemaphoreGive(myMutexLCDHandle);
 80039f4:	4b0b      	ldr	r3, [pc, #44]	; (8003a24 <StartTaskEtat+0x218>)
 80039f6:	6818      	ldr	r0, [r3, #0]
 80039f8:	2300      	movs	r3, #0
 80039fa:	2200      	movs	r2, #0
 80039fc:	2100      	movs	r1, #0
 80039fe:	f009 fd5b 	bl	800d4b8 <xQueueGenericSend>
				   }
			   }
		  }
	  }
	  vTaskDelayUntil(&xLastWakeTime, 300);
 8003a02:	f107 0318 	add.w	r3, r7, #24
 8003a06:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8003a0a:	4618      	mov	r0, r3
 8003a0c:	f00a fa0a 	bl	800de24 <vTaskDelayUntil>
	  if(etat == 0)
 8003a10:	e719      	b.n	8003846 <StartTaskEtat+0x3a>
 8003a12:	bf00      	nop
 8003a14:	20009da8 	.word	0x20009da8
 8003a18:	2000139e 	.word	0x2000139e
 8003a1c:	20009d60 	.word	0x20009d60
 8003a20:	2000139f 	.word	0x2000139f
 8003a24:	20009c34 	.word	0x20009c34
 8003a28:	200016a2 	.word	0x200016a2
 8003a2c:	20009e84 	.word	0x20009e84

08003a30 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003a30:	b580      	push	{r7, lr}
 8003a32:	b082      	sub	sp, #8
 8003a34:	af00      	add	r7, sp, #0
 8003a36:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	4a04      	ldr	r2, [pc, #16]	; (8003a50 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8003a3e:	4293      	cmp	r3, r2
 8003a40:	d101      	bne.n	8003a46 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8003a42:	f002 fca7 	bl	8006394 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8003a46:	bf00      	nop
 8003a48:	3708      	adds	r7, #8
 8003a4a:	46bd      	mov	sp, r7
 8003a4c:	bd80      	pop	{r7, pc}
 8003a4e:	bf00      	nop
 8003a50:	40001000 	.word	0x40001000

08003a54 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003a54:	b480      	push	{r7}
 8003a56:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003a58:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8003a5a:	e7fe      	b.n	8003a5a <Error_Handler+0x6>

08003a5c <I2Cx_MspInit>:
 8003a5c:	b580      	push	{r7, lr}
 8003a5e:	b08c      	sub	sp, #48	; 0x30
 8003a60:	af00      	add	r7, sp, #0
 8003a62:	6078      	str	r0, [r7, #4]
 8003a64:	687b      	ldr	r3, [r7, #4]
 8003a66:	4a51      	ldr	r2, [pc, #324]	; (8003bac <I2Cx_MspInit+0x150>)
 8003a68:	4293      	cmp	r3, r2
 8003a6a:	d14d      	bne.n	8003b08 <I2Cx_MspInit+0xac>
 8003a6c:	4b50      	ldr	r3, [pc, #320]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003a6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a70:	4a4f      	ldr	r2, [pc, #316]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003a72:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003a76:	6313      	str	r3, [r2, #48]	; 0x30
 8003a78:	4b4d      	ldr	r3, [pc, #308]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003a7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003a80:	61bb      	str	r3, [r7, #24]
 8003a82:	69bb      	ldr	r3, [r7, #24]
 8003a84:	2380      	movs	r3, #128	; 0x80
 8003a86:	61fb      	str	r3, [r7, #28]
 8003a88:	2312      	movs	r3, #18
 8003a8a:	623b      	str	r3, [r7, #32]
 8003a8c:	2300      	movs	r3, #0
 8003a8e:	627b      	str	r3, [r7, #36]	; 0x24
 8003a90:	2302      	movs	r3, #2
 8003a92:	62bb      	str	r3, [r7, #40]	; 0x28
 8003a94:	2304      	movs	r3, #4
 8003a96:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003a98:	f107 031c 	add.w	r3, r7, #28
 8003a9c:	4619      	mov	r1, r3
 8003a9e:	4845      	ldr	r0, [pc, #276]	; (8003bb4 <I2Cx_MspInit+0x158>)
 8003aa0:	f003 feae 	bl	8007800 <HAL_GPIO_Init>
 8003aa4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003aa8:	61fb      	str	r3, [r7, #28]
 8003aaa:	f107 031c 	add.w	r3, r7, #28
 8003aae:	4619      	mov	r1, r3
 8003ab0:	4840      	ldr	r0, [pc, #256]	; (8003bb4 <I2Cx_MspInit+0x158>)
 8003ab2:	f003 fea5 	bl	8007800 <HAL_GPIO_Init>
 8003ab6:	4b3e      	ldr	r3, [pc, #248]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003ab8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003aba:	4a3d      	ldr	r2, [pc, #244]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003abc:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003ac0:	6413      	str	r3, [r2, #64]	; 0x40
 8003ac2:	4b3b      	ldr	r3, [pc, #236]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003ac4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003ac6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003aca:	617b      	str	r3, [r7, #20]
 8003acc:	697b      	ldr	r3, [r7, #20]
 8003ace:	4b38      	ldr	r3, [pc, #224]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003ad0:	6a1b      	ldr	r3, [r3, #32]
 8003ad2:	4a37      	ldr	r2, [pc, #220]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003ad4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003ad8:	6213      	str	r3, [r2, #32]
 8003ada:	4b35      	ldr	r3, [pc, #212]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003adc:	6a1b      	ldr	r3, [r3, #32]
 8003ade:	4a34      	ldr	r2, [pc, #208]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003ae0:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8003ae4:	6213      	str	r3, [r2, #32]
 8003ae6:	2200      	movs	r2, #0
 8003ae8:	210f      	movs	r1, #15
 8003aea:	2048      	movs	r0, #72	; 0x48
 8003aec:	f003 f926 	bl	8006d3c <HAL_NVIC_SetPriority>
 8003af0:	2048      	movs	r0, #72	; 0x48
 8003af2:	f003 f93f 	bl	8006d74 <HAL_NVIC_EnableIRQ>
 8003af6:	2200      	movs	r2, #0
 8003af8:	210f      	movs	r1, #15
 8003afa:	2049      	movs	r0, #73	; 0x49
 8003afc:	f003 f91e 	bl	8006d3c <HAL_NVIC_SetPriority>
 8003b00:	2049      	movs	r0, #73	; 0x49
 8003b02:	f003 f937 	bl	8006d74 <HAL_NVIC_EnableIRQ>
 8003b06:	e04d      	b.n	8003ba4 <I2Cx_MspInit+0x148>
 8003b08:	4b29      	ldr	r3, [pc, #164]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b0c:	4a28      	ldr	r2, [pc, #160]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b0e:	f043 0302 	orr.w	r3, r3, #2
 8003b12:	6313      	str	r3, [r2, #48]	; 0x30
 8003b14:	4b26      	ldr	r3, [pc, #152]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b18:	f003 0302 	and.w	r3, r3, #2
 8003b1c:	613b      	str	r3, [r7, #16]
 8003b1e:	693b      	ldr	r3, [r7, #16]
 8003b20:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003b24:	61fb      	str	r3, [r7, #28]
 8003b26:	2312      	movs	r3, #18
 8003b28:	623b      	str	r3, [r7, #32]
 8003b2a:	2300      	movs	r3, #0
 8003b2c:	627b      	str	r3, [r7, #36]	; 0x24
 8003b2e:	2302      	movs	r3, #2
 8003b30:	62bb      	str	r3, [r7, #40]	; 0x28
 8003b32:	2304      	movs	r3, #4
 8003b34:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003b36:	f107 031c 	add.w	r3, r7, #28
 8003b3a:	4619      	mov	r1, r3
 8003b3c:	481e      	ldr	r0, [pc, #120]	; (8003bb8 <I2Cx_MspInit+0x15c>)
 8003b3e:	f003 fe5f 	bl	8007800 <HAL_GPIO_Init>
 8003b42:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003b46:	61fb      	str	r3, [r7, #28]
 8003b48:	f107 031c 	add.w	r3, r7, #28
 8003b4c:	4619      	mov	r1, r3
 8003b4e:	481a      	ldr	r0, [pc, #104]	; (8003bb8 <I2Cx_MspInit+0x15c>)
 8003b50:	f003 fe56 	bl	8007800 <HAL_GPIO_Init>
 8003b54:	4b16      	ldr	r3, [pc, #88]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b56:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b58:	4a15      	ldr	r2, [pc, #84]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b5a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003b5e:	6413      	str	r3, [r2, #64]	; 0x40
 8003b60:	4b13      	ldr	r3, [pc, #76]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b64:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003b68:	60fb      	str	r3, [r7, #12]
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	4b10      	ldr	r3, [pc, #64]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b6e:	6a1b      	ldr	r3, [r3, #32]
 8003b70:	4a0f      	ldr	r2, [pc, #60]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b72:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003b76:	6213      	str	r3, [r2, #32]
 8003b78:	4b0d      	ldr	r3, [pc, #52]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b7a:	6a1b      	ldr	r3, [r3, #32]
 8003b7c:	4a0c      	ldr	r2, [pc, #48]	; (8003bb0 <I2Cx_MspInit+0x154>)
 8003b7e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003b82:	6213      	str	r3, [r2, #32]
 8003b84:	2200      	movs	r2, #0
 8003b86:	210f      	movs	r1, #15
 8003b88:	201f      	movs	r0, #31
 8003b8a:	f003 f8d7 	bl	8006d3c <HAL_NVIC_SetPriority>
 8003b8e:	201f      	movs	r0, #31
 8003b90:	f003 f8f0 	bl	8006d74 <HAL_NVIC_EnableIRQ>
 8003b94:	2200      	movs	r2, #0
 8003b96:	210f      	movs	r1, #15
 8003b98:	2020      	movs	r0, #32
 8003b9a:	f003 f8cf 	bl	8006d3c <HAL_NVIC_SetPriority>
 8003b9e:	2020      	movs	r0, #32
 8003ba0:	f003 f8e8 	bl	8006d74 <HAL_NVIC_EnableIRQ>
 8003ba4:	bf00      	nop
 8003ba6:	3730      	adds	r7, #48	; 0x30
 8003ba8:	46bd      	mov	sp, r7
 8003baa:	bd80      	pop	{r7, pc}
 8003bac:	20001728 	.word	0x20001728
 8003bb0:	40023800 	.word	0x40023800
 8003bb4:	40021c00 	.word	0x40021c00
 8003bb8:	40020400 	.word	0x40020400

08003bbc <I2Cx_Init>:
 8003bbc:	b580      	push	{r7, lr}
 8003bbe:	b082      	sub	sp, #8
 8003bc0:	af00      	add	r7, sp, #0
 8003bc2:	6078      	str	r0, [r7, #4]
 8003bc4:	6878      	ldr	r0, [r7, #4]
 8003bc6:	f004 fc07 	bl	80083d8 <HAL_I2C_GetState>
 8003bca:	4603      	mov	r3, r0
 8003bcc:	2b00      	cmp	r3, #0
 8003bce:	d125      	bne.n	8003c1c <I2Cx_Init+0x60>
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	4a14      	ldr	r2, [pc, #80]	; (8003c24 <I2Cx_Init+0x68>)
 8003bd4:	4293      	cmp	r3, r2
 8003bd6:	d103      	bne.n	8003be0 <I2Cx_Init+0x24>
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	4a13      	ldr	r2, [pc, #76]	; (8003c28 <I2Cx_Init+0x6c>)
 8003bdc:	601a      	str	r2, [r3, #0]
 8003bde:	e002      	b.n	8003be6 <I2Cx_Init+0x2a>
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	4a12      	ldr	r2, [pc, #72]	; (8003c2c <I2Cx_Init+0x70>)
 8003be4:	601a      	str	r2, [r3, #0]
 8003be6:	687b      	ldr	r3, [r7, #4]
 8003be8:	4a11      	ldr	r2, [pc, #68]	; (8003c30 <I2Cx_Init+0x74>)
 8003bea:	605a      	str	r2, [r3, #4]
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	2200      	movs	r2, #0
 8003bf0:	609a      	str	r2, [r3, #8]
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	2201      	movs	r2, #1
 8003bf6:	60da      	str	r2, [r3, #12]
 8003bf8:	687b      	ldr	r3, [r7, #4]
 8003bfa:	2200      	movs	r2, #0
 8003bfc:	611a      	str	r2, [r3, #16]
 8003bfe:	687b      	ldr	r3, [r7, #4]
 8003c00:	2200      	movs	r2, #0
 8003c02:	615a      	str	r2, [r3, #20]
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	2200      	movs	r2, #0
 8003c08:	61da      	str	r2, [r3, #28]
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	2200      	movs	r2, #0
 8003c0e:	621a      	str	r2, [r3, #32]
 8003c10:	6878      	ldr	r0, [r7, #4]
 8003c12:	f7ff ff23 	bl	8003a5c <I2Cx_MspInit>
 8003c16:	6878      	ldr	r0, [r7, #4]
 8003c18:	f004 f8f0 	bl	8007dfc <HAL_I2C_Init>
 8003c1c:	bf00      	nop
 8003c1e:	3708      	adds	r7, #8
 8003c20:	46bd      	mov	sp, r7
 8003c22:	bd80      	pop	{r7, pc}
 8003c24:	20001728 	.word	0x20001728
 8003c28:	40005c00 	.word	0x40005c00
 8003c2c:	40005400 	.word	0x40005400
 8003c30:	40912732 	.word	0x40912732

08003c34 <I2Cx_ReadMultiple>:
 8003c34:	b580      	push	{r7, lr}
 8003c36:	b08a      	sub	sp, #40	; 0x28
 8003c38:	af04      	add	r7, sp, #16
 8003c3a:	60f8      	str	r0, [r7, #12]
 8003c3c:	4608      	mov	r0, r1
 8003c3e:	4611      	mov	r1, r2
 8003c40:	461a      	mov	r2, r3
 8003c42:	4603      	mov	r3, r0
 8003c44:	72fb      	strb	r3, [r7, #11]
 8003c46:	460b      	mov	r3, r1
 8003c48:	813b      	strh	r3, [r7, #8]
 8003c4a:	4613      	mov	r3, r2
 8003c4c:	80fb      	strh	r3, [r7, #6]
 8003c4e:	2300      	movs	r3, #0
 8003c50:	75fb      	strb	r3, [r7, #23]
 8003c52:	7afb      	ldrb	r3, [r7, #11]
 8003c54:	b299      	uxth	r1, r3
 8003c56:	88f8      	ldrh	r0, [r7, #6]
 8003c58:	893a      	ldrh	r2, [r7, #8]
 8003c5a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003c5e:	9302      	str	r3, [sp, #8]
 8003c60:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003c62:	9301      	str	r3, [sp, #4]
 8003c64:	6a3b      	ldr	r3, [r7, #32]
 8003c66:	9300      	str	r3, [sp, #0]
 8003c68:	4603      	mov	r3, r0
 8003c6a:	68f8      	ldr	r0, [r7, #12]
 8003c6c:	f004 fa9a 	bl	80081a4 <HAL_I2C_Mem_Read>
 8003c70:	4603      	mov	r3, r0
 8003c72:	75fb      	strb	r3, [r7, #23]
 8003c74:	7dfb      	ldrb	r3, [r7, #23]
 8003c76:	2b00      	cmp	r3, #0
 8003c78:	d004      	beq.n	8003c84 <I2Cx_ReadMultiple+0x50>
 8003c7a:	7afb      	ldrb	r3, [r7, #11]
 8003c7c:	4619      	mov	r1, r3
 8003c7e:	68f8      	ldr	r0, [r7, #12]
 8003c80:	f000 f832 	bl	8003ce8 <I2Cx_Error>
 8003c84:	7dfb      	ldrb	r3, [r7, #23]
 8003c86:	4618      	mov	r0, r3
 8003c88:	3718      	adds	r7, #24
 8003c8a:	46bd      	mov	sp, r7
 8003c8c:	bd80      	pop	{r7, pc}

08003c8e <I2Cx_WriteMultiple>:
 8003c8e:	b580      	push	{r7, lr}
 8003c90:	b08a      	sub	sp, #40	; 0x28
 8003c92:	af04      	add	r7, sp, #16
 8003c94:	60f8      	str	r0, [r7, #12]
 8003c96:	4608      	mov	r0, r1
 8003c98:	4611      	mov	r1, r2
 8003c9a:	461a      	mov	r2, r3
 8003c9c:	4603      	mov	r3, r0
 8003c9e:	72fb      	strb	r3, [r7, #11]
 8003ca0:	460b      	mov	r3, r1
 8003ca2:	813b      	strh	r3, [r7, #8]
 8003ca4:	4613      	mov	r3, r2
 8003ca6:	80fb      	strh	r3, [r7, #6]
 8003ca8:	2300      	movs	r3, #0
 8003caa:	75fb      	strb	r3, [r7, #23]
 8003cac:	7afb      	ldrb	r3, [r7, #11]
 8003cae:	b299      	uxth	r1, r3
 8003cb0:	88f8      	ldrh	r0, [r7, #6]
 8003cb2:	893a      	ldrh	r2, [r7, #8]
 8003cb4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003cb8:	9302      	str	r3, [sp, #8]
 8003cba:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003cbc:	9301      	str	r3, [sp, #4]
 8003cbe:	6a3b      	ldr	r3, [r7, #32]
 8003cc0:	9300      	str	r3, [sp, #0]
 8003cc2:	4603      	mov	r3, r0
 8003cc4:	68f8      	ldr	r0, [r7, #12]
 8003cc6:	f004 f959 	bl	8007f7c <HAL_I2C_Mem_Write>
 8003cca:	4603      	mov	r3, r0
 8003ccc:	75fb      	strb	r3, [r7, #23]
 8003cce:	7dfb      	ldrb	r3, [r7, #23]
 8003cd0:	2b00      	cmp	r3, #0
 8003cd2:	d004      	beq.n	8003cde <I2Cx_WriteMultiple+0x50>
 8003cd4:	7afb      	ldrb	r3, [r7, #11]
 8003cd6:	4619      	mov	r1, r3
 8003cd8:	68f8      	ldr	r0, [r7, #12]
 8003cda:	f000 f805 	bl	8003ce8 <I2Cx_Error>
 8003cde:	7dfb      	ldrb	r3, [r7, #23]
 8003ce0:	4618      	mov	r0, r3
 8003ce2:	3718      	adds	r7, #24
 8003ce4:	46bd      	mov	sp, r7
 8003ce6:	bd80      	pop	{r7, pc}

08003ce8 <I2Cx_Error>:
 8003ce8:	b580      	push	{r7, lr}
 8003cea:	b082      	sub	sp, #8
 8003cec:	af00      	add	r7, sp, #0
 8003cee:	6078      	str	r0, [r7, #4]
 8003cf0:	460b      	mov	r3, r1
 8003cf2:	70fb      	strb	r3, [r7, #3]
 8003cf4:	6878      	ldr	r0, [r7, #4]
 8003cf6:	f004 f911 	bl	8007f1c <HAL_I2C_DeInit>
 8003cfa:	6878      	ldr	r0, [r7, #4]
 8003cfc:	f7ff ff5e 	bl	8003bbc <I2Cx_Init>
 8003d00:	bf00      	nop
 8003d02:	3708      	adds	r7, #8
 8003d04:	46bd      	mov	sp, r7
 8003d06:	bd80      	pop	{r7, pc}

08003d08 <TS_IO_Init>:
 8003d08:	b580      	push	{r7, lr}
 8003d0a:	af00      	add	r7, sp, #0
 8003d0c:	4802      	ldr	r0, [pc, #8]	; (8003d18 <TS_IO_Init+0x10>)
 8003d0e:	f7ff ff55 	bl	8003bbc <I2Cx_Init>
 8003d12:	bf00      	nop
 8003d14:	bd80      	pop	{r7, pc}
 8003d16:	bf00      	nop
 8003d18:	20001728 	.word	0x20001728

08003d1c <TS_IO_Write>:
 8003d1c:	b580      	push	{r7, lr}
 8003d1e:	b084      	sub	sp, #16
 8003d20:	af02      	add	r7, sp, #8
 8003d22:	4603      	mov	r3, r0
 8003d24:	71fb      	strb	r3, [r7, #7]
 8003d26:	460b      	mov	r3, r1
 8003d28:	71bb      	strb	r3, [r7, #6]
 8003d2a:	4613      	mov	r3, r2
 8003d2c:	717b      	strb	r3, [r7, #5]
 8003d2e:	79bb      	ldrb	r3, [r7, #6]
 8003d30:	b29a      	uxth	r2, r3
 8003d32:	79f9      	ldrb	r1, [r7, #7]
 8003d34:	2301      	movs	r3, #1
 8003d36:	9301      	str	r3, [sp, #4]
 8003d38:	1d7b      	adds	r3, r7, #5
 8003d3a:	9300      	str	r3, [sp, #0]
 8003d3c:	2301      	movs	r3, #1
 8003d3e:	4803      	ldr	r0, [pc, #12]	; (8003d4c <TS_IO_Write+0x30>)
 8003d40:	f7ff ffa5 	bl	8003c8e <I2Cx_WriteMultiple>
 8003d44:	bf00      	nop
 8003d46:	3708      	adds	r7, #8
 8003d48:	46bd      	mov	sp, r7
 8003d4a:	bd80      	pop	{r7, pc}
 8003d4c:	20001728 	.word	0x20001728

08003d50 <TS_IO_Read>:
 8003d50:	b580      	push	{r7, lr}
 8003d52:	b086      	sub	sp, #24
 8003d54:	af02      	add	r7, sp, #8
 8003d56:	4603      	mov	r3, r0
 8003d58:	460a      	mov	r2, r1
 8003d5a:	71fb      	strb	r3, [r7, #7]
 8003d5c:	4613      	mov	r3, r2
 8003d5e:	71bb      	strb	r3, [r7, #6]
 8003d60:	2300      	movs	r3, #0
 8003d62:	73fb      	strb	r3, [r7, #15]
 8003d64:	79bb      	ldrb	r3, [r7, #6]
 8003d66:	b29a      	uxth	r2, r3
 8003d68:	79f9      	ldrb	r1, [r7, #7]
 8003d6a:	2301      	movs	r3, #1
 8003d6c:	9301      	str	r3, [sp, #4]
 8003d6e:	f107 030f 	add.w	r3, r7, #15
 8003d72:	9300      	str	r3, [sp, #0]
 8003d74:	2301      	movs	r3, #1
 8003d76:	4804      	ldr	r0, [pc, #16]	; (8003d88 <TS_IO_Read+0x38>)
 8003d78:	f7ff ff5c 	bl	8003c34 <I2Cx_ReadMultiple>
 8003d7c:	7bfb      	ldrb	r3, [r7, #15]
 8003d7e:	4618      	mov	r0, r3
 8003d80:	3710      	adds	r7, #16
 8003d82:	46bd      	mov	sp, r7
 8003d84:	bd80      	pop	{r7, pc}
 8003d86:	bf00      	nop
 8003d88:	20001728 	.word	0x20001728

08003d8c <TS_IO_Delay>:
 8003d8c:	b580      	push	{r7, lr}
 8003d8e:	b082      	sub	sp, #8
 8003d90:	af00      	add	r7, sp, #0
 8003d92:	6078      	str	r0, [r7, #4]
 8003d94:	6878      	ldr	r0, [r7, #4]
 8003d96:	f002 fb1d 	bl	80063d4 <HAL_Delay>
 8003d9a:	bf00      	nop
 8003d9c:	3708      	adds	r7, #8
 8003d9e:	46bd      	mov	sp, r7
 8003da0:	bd80      	pop	{r7, pc}
	...

08003da4 <BSP_LCD_Init>:
 8003da4:	b580      	push	{r7, lr}
 8003da6:	af00      	add	r7, sp, #0
 8003da8:	4b31      	ldr	r3, [pc, #196]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003daa:	2228      	movs	r2, #40	; 0x28
 8003dac:	615a      	str	r2, [r3, #20]
 8003dae:	4b30      	ldr	r3, [pc, #192]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003db0:	2209      	movs	r2, #9
 8003db2:	619a      	str	r2, [r3, #24]
 8003db4:	4b2e      	ldr	r3, [pc, #184]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003db6:	2235      	movs	r2, #53	; 0x35
 8003db8:	61da      	str	r2, [r3, #28]
 8003dba:	4b2d      	ldr	r3, [pc, #180]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003dbc:	220b      	movs	r2, #11
 8003dbe:	621a      	str	r2, [r3, #32]
 8003dc0:	4b2b      	ldr	r3, [pc, #172]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003dc2:	f240 121b 	movw	r2, #283	; 0x11b
 8003dc6:	629a      	str	r2, [r3, #40]	; 0x28
 8003dc8:	4b29      	ldr	r3, [pc, #164]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003dca:	f240 2215 	movw	r2, #533	; 0x215
 8003dce:	625a      	str	r2, [r3, #36]	; 0x24
 8003dd0:	4b27      	ldr	r3, [pc, #156]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003dd2:	f240 121d 	movw	r2, #285	; 0x11d
 8003dd6:	631a      	str	r2, [r3, #48]	; 0x30
 8003dd8:	4b25      	ldr	r3, [pc, #148]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003dda:	f240 2235 	movw	r2, #565	; 0x235
 8003dde:	62da      	str	r2, [r3, #44]	; 0x2c
 8003de0:	2100      	movs	r1, #0
 8003de2:	4823      	ldr	r0, [pc, #140]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003de4:	f000 ff40 	bl	8004c68 <BSP_LCD_ClockConfig>
 8003de8:	4b21      	ldr	r3, [pc, #132]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003dea:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003dee:	661a      	str	r2, [r3, #96]	; 0x60
 8003df0:	4b1f      	ldr	r3, [pc, #124]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003df2:	f44f 7288 	mov.w	r2, #272	; 0x110
 8003df6:	665a      	str	r2, [r3, #100]	; 0x64
 8003df8:	4b1d      	ldr	r3, [pc, #116]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003dfa:	2200      	movs	r2, #0
 8003dfc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003e00:	4b1b      	ldr	r3, [pc, #108]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e02:	2200      	movs	r2, #0
 8003e04:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003e08:	4b19      	ldr	r3, [pc, #100]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 8003e10:	4b17      	ldr	r3, [pc, #92]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e12:	2200      	movs	r2, #0
 8003e14:	605a      	str	r2, [r3, #4]
 8003e16:	4b16      	ldr	r3, [pc, #88]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e18:	2200      	movs	r2, #0
 8003e1a:	609a      	str	r2, [r3, #8]
 8003e1c:	4b14      	ldr	r3, [pc, #80]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e1e:	2200      	movs	r2, #0
 8003e20:	60da      	str	r2, [r3, #12]
 8003e22:	4b13      	ldr	r3, [pc, #76]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e24:	2200      	movs	r2, #0
 8003e26:	611a      	str	r2, [r3, #16]
 8003e28:	4b11      	ldr	r3, [pc, #68]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e2a:	4a12      	ldr	r2, [pc, #72]	; (8003e74 <BSP_LCD_Init+0xd0>)
 8003e2c:	601a      	str	r2, [r3, #0]
 8003e2e:	4810      	ldr	r0, [pc, #64]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e30:	f004 ff64 	bl	8008cfc <HAL_LTDC_GetState>
 8003e34:	4603      	mov	r3, r0
 8003e36:	2b00      	cmp	r3, #0
 8003e38:	d103      	bne.n	8003e42 <BSP_LCD_Init+0x9e>
 8003e3a:	2100      	movs	r1, #0
 8003e3c:	480c      	ldr	r0, [pc, #48]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e3e:	f000 fe39 	bl	8004ab4 <BSP_LCD_MspInit>
 8003e42:	480b      	ldr	r0, [pc, #44]	; (8003e70 <BSP_LCD_Init+0xcc>)
 8003e44:	f004 fd8a 	bl	800895c <HAL_LTDC_Init>
 8003e48:	2201      	movs	r2, #1
 8003e4a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003e4e:	480a      	ldr	r0, [pc, #40]	; (8003e78 <BSP_LCD_Init+0xd4>)
 8003e50:	f003 ffa2 	bl	8007d98 <HAL_GPIO_WritePin>
 8003e54:	2201      	movs	r2, #1
 8003e56:	2108      	movs	r1, #8
 8003e58:	4808      	ldr	r0, [pc, #32]	; (8003e7c <BSP_LCD_Init+0xd8>)
 8003e5a:	f003 ff9d 	bl	8007d98 <HAL_GPIO_WritePin>
 8003e5e:	f001 f823 	bl	8004ea8 <BSP_SDRAM_Init>
 8003e62:	4807      	ldr	r0, [pc, #28]	; (8003e80 <BSP_LCD_Init+0xdc>)
 8003e64:	f000 f8d8 	bl	8004018 <BSP_LCD_SetFont>
 8003e68:	2300      	movs	r3, #0
 8003e6a:	4618      	mov	r0, r3
 8003e6c:	bd80      	pop	{r7, pc}
 8003e6e:	bf00      	nop
 8003e70:	2000a030 	.word	0x2000a030
 8003e74:	40016800 	.word	0x40016800
 8003e78:	40022000 	.word	0x40022000
 8003e7c:	40022800 	.word	0x40022800
 8003e80:	200013a0 	.word	0x200013a0

08003e84 <BSP_LCD_GetXSize>:
 8003e84:	b480      	push	{r7}
 8003e86:	af00      	add	r7, sp, #0
 8003e88:	4b06      	ldr	r3, [pc, #24]	; (8003ea4 <BSP_LCD_GetXSize+0x20>)
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	4a06      	ldr	r2, [pc, #24]	; (8003ea8 <BSP_LCD_GetXSize+0x24>)
 8003e8e:	2134      	movs	r1, #52	; 0x34
 8003e90:	fb01 f303 	mul.w	r3, r1, r3
 8003e94:	4413      	add	r3, r2
 8003e96:	3360      	adds	r3, #96	; 0x60
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	4618      	mov	r0, r3
 8003e9c:	46bd      	mov	sp, r7
 8003e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ea2:	4770      	bx	lr
 8003ea4:	200017b4 	.word	0x200017b4
 8003ea8:	2000a030 	.word	0x2000a030

08003eac <BSP_LCD_GetYSize>:
 8003eac:	b480      	push	{r7}
 8003eae:	af00      	add	r7, sp, #0
 8003eb0:	4b06      	ldr	r3, [pc, #24]	; (8003ecc <BSP_LCD_GetYSize+0x20>)
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	4a06      	ldr	r2, [pc, #24]	; (8003ed0 <BSP_LCD_GetYSize+0x24>)
 8003eb6:	2134      	movs	r1, #52	; 0x34
 8003eb8:	fb01 f303 	mul.w	r3, r1, r3
 8003ebc:	4413      	add	r3, r2
 8003ebe:	3364      	adds	r3, #100	; 0x64
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	4618      	mov	r0, r3
 8003ec4:	46bd      	mov	sp, r7
 8003ec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eca:	4770      	bx	lr
 8003ecc:	200017b4 	.word	0x200017b4
 8003ed0:	2000a030 	.word	0x2000a030

08003ed4 <BSP_LCD_LayerDefaultInit>:
 8003ed4:	b580      	push	{r7, lr}
 8003ed6:	b090      	sub	sp, #64	; 0x40
 8003ed8:	af00      	add	r7, sp, #0
 8003eda:	4603      	mov	r3, r0
 8003edc:	6039      	str	r1, [r7, #0]
 8003ede:	80fb      	strh	r3, [r7, #6]
 8003ee0:	2300      	movs	r3, #0
 8003ee2:	60fb      	str	r3, [r7, #12]
 8003ee4:	f7ff ffce 	bl	8003e84 <BSP_LCD_GetXSize>
 8003ee8:	4603      	mov	r3, r0
 8003eea:	613b      	str	r3, [r7, #16]
 8003eec:	2300      	movs	r3, #0
 8003eee:	617b      	str	r3, [r7, #20]
 8003ef0:	f7ff ffdc 	bl	8003eac <BSP_LCD_GetYSize>
 8003ef4:	4603      	mov	r3, r0
 8003ef6:	61bb      	str	r3, [r7, #24]
 8003ef8:	2300      	movs	r3, #0
 8003efa:	61fb      	str	r3, [r7, #28]
 8003efc:	683b      	ldr	r3, [r7, #0]
 8003efe:	633b      	str	r3, [r7, #48]	; 0x30
 8003f00:	23ff      	movs	r3, #255	; 0xff
 8003f02:	623b      	str	r3, [r7, #32]
 8003f04:	2300      	movs	r3, #0
 8003f06:	627b      	str	r3, [r7, #36]	; 0x24
 8003f08:	2300      	movs	r3, #0
 8003f0a:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 8003f0e:	2300      	movs	r3, #0
 8003f10:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 8003f14:	2300      	movs	r3, #0
 8003f16:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8003f1a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8003f1e:	62bb      	str	r3, [r7, #40]	; 0x28
 8003f20:	2307      	movs	r3, #7
 8003f22:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003f24:	f7ff ffae 	bl	8003e84 <BSP_LCD_GetXSize>
 8003f28:	4603      	mov	r3, r0
 8003f2a:	637b      	str	r3, [r7, #52]	; 0x34
 8003f2c:	f7ff ffbe 	bl	8003eac <BSP_LCD_GetYSize>
 8003f30:	4603      	mov	r3, r0
 8003f32:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f34:	88fa      	ldrh	r2, [r7, #6]
 8003f36:	f107 030c 	add.w	r3, r7, #12
 8003f3a:	4619      	mov	r1, r3
 8003f3c:	4812      	ldr	r0, [pc, #72]	; (8003f88 <BSP_LCD_LayerDefaultInit+0xb4>)
 8003f3e:	f004 fe9f 	bl	8008c80 <HAL_LTDC_ConfigLayer>
 8003f42:	88fa      	ldrh	r2, [r7, #6]
 8003f44:	4911      	ldr	r1, [pc, #68]	; (8003f8c <BSP_LCD_LayerDefaultInit+0xb8>)
 8003f46:	4613      	mov	r3, r2
 8003f48:	005b      	lsls	r3, r3, #1
 8003f4a:	4413      	add	r3, r2
 8003f4c:	009b      	lsls	r3, r3, #2
 8003f4e:	440b      	add	r3, r1
 8003f50:	3304      	adds	r3, #4
 8003f52:	f04f 32ff 	mov.w	r2, #4294967295
 8003f56:	601a      	str	r2, [r3, #0]
 8003f58:	88fa      	ldrh	r2, [r7, #6]
 8003f5a:	490c      	ldr	r1, [pc, #48]	; (8003f8c <BSP_LCD_LayerDefaultInit+0xb8>)
 8003f5c:	4613      	mov	r3, r2
 8003f5e:	005b      	lsls	r3, r3, #1
 8003f60:	4413      	add	r3, r2
 8003f62:	009b      	lsls	r3, r3, #2
 8003f64:	440b      	add	r3, r1
 8003f66:	3308      	adds	r3, #8
 8003f68:	4a09      	ldr	r2, [pc, #36]	; (8003f90 <BSP_LCD_LayerDefaultInit+0xbc>)
 8003f6a:	601a      	str	r2, [r3, #0]
 8003f6c:	88fa      	ldrh	r2, [r7, #6]
 8003f6e:	4907      	ldr	r1, [pc, #28]	; (8003f8c <BSP_LCD_LayerDefaultInit+0xb8>)
 8003f70:	4613      	mov	r3, r2
 8003f72:	005b      	lsls	r3, r3, #1
 8003f74:	4413      	add	r3, r2
 8003f76:	009b      	lsls	r3, r3, #2
 8003f78:	440b      	add	r3, r1
 8003f7a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003f7e:	601a      	str	r2, [r3, #0]
 8003f80:	bf00      	nop
 8003f82:	3740      	adds	r7, #64	; 0x40
 8003f84:	46bd      	mov	sp, r7
 8003f86:	bd80      	pop	{r7, pc}
 8003f88:	2000a030 	.word	0x2000a030
 8003f8c:	200017b8 	.word	0x200017b8
 8003f90:	200013a0 	.word	0x200013a0

08003f94 <BSP_LCD_SelectLayer>:
 8003f94:	b480      	push	{r7}
 8003f96:	b083      	sub	sp, #12
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
 8003f9c:	4a04      	ldr	r2, [pc, #16]	; (8003fb0 <BSP_LCD_SelectLayer+0x1c>)
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	6013      	str	r3, [r2, #0]
 8003fa2:	bf00      	nop
 8003fa4:	370c      	adds	r7, #12
 8003fa6:	46bd      	mov	sp, r7
 8003fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fac:	4770      	bx	lr
 8003fae:	bf00      	nop
 8003fb0:	200017b4 	.word	0x200017b4

08003fb4 <BSP_LCD_SetTextColor>:
 8003fb4:	b480      	push	{r7}
 8003fb6:	b083      	sub	sp, #12
 8003fb8:	af00      	add	r7, sp, #0
 8003fba:	6078      	str	r0, [r7, #4]
 8003fbc:	4b07      	ldr	r3, [pc, #28]	; (8003fdc <BSP_LCD_SetTextColor+0x28>)
 8003fbe:	681a      	ldr	r2, [r3, #0]
 8003fc0:	4907      	ldr	r1, [pc, #28]	; (8003fe0 <BSP_LCD_SetTextColor+0x2c>)
 8003fc2:	4613      	mov	r3, r2
 8003fc4:	005b      	lsls	r3, r3, #1
 8003fc6:	4413      	add	r3, r2
 8003fc8:	009b      	lsls	r3, r3, #2
 8003fca:	440b      	add	r3, r1
 8003fcc:	687a      	ldr	r2, [r7, #4]
 8003fce:	601a      	str	r2, [r3, #0]
 8003fd0:	bf00      	nop
 8003fd2:	370c      	adds	r7, #12
 8003fd4:	46bd      	mov	sp, r7
 8003fd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fda:	4770      	bx	lr
 8003fdc:	200017b4 	.word	0x200017b4
 8003fe0:	200017b8 	.word	0x200017b8

08003fe4 <BSP_LCD_SetBackColor>:
 8003fe4:	b480      	push	{r7}
 8003fe6:	b083      	sub	sp, #12
 8003fe8:	af00      	add	r7, sp, #0
 8003fea:	6078      	str	r0, [r7, #4]
 8003fec:	4b08      	ldr	r3, [pc, #32]	; (8004010 <BSP_LCD_SetBackColor+0x2c>)
 8003fee:	681a      	ldr	r2, [r3, #0]
 8003ff0:	4908      	ldr	r1, [pc, #32]	; (8004014 <BSP_LCD_SetBackColor+0x30>)
 8003ff2:	4613      	mov	r3, r2
 8003ff4:	005b      	lsls	r3, r3, #1
 8003ff6:	4413      	add	r3, r2
 8003ff8:	009b      	lsls	r3, r3, #2
 8003ffa:	440b      	add	r3, r1
 8003ffc:	3304      	adds	r3, #4
 8003ffe:	687a      	ldr	r2, [r7, #4]
 8004000:	601a      	str	r2, [r3, #0]
 8004002:	bf00      	nop
 8004004:	370c      	adds	r7, #12
 8004006:	46bd      	mov	sp, r7
 8004008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800400c:	4770      	bx	lr
 800400e:	bf00      	nop
 8004010:	200017b4 	.word	0x200017b4
 8004014:	200017b8 	.word	0x200017b8

08004018 <BSP_LCD_SetFont>:
 8004018:	b480      	push	{r7}
 800401a:	b083      	sub	sp, #12
 800401c:	af00      	add	r7, sp, #0
 800401e:	6078      	str	r0, [r7, #4]
 8004020:	4b08      	ldr	r3, [pc, #32]	; (8004044 <BSP_LCD_SetFont+0x2c>)
 8004022:	681a      	ldr	r2, [r3, #0]
 8004024:	4908      	ldr	r1, [pc, #32]	; (8004048 <BSP_LCD_SetFont+0x30>)
 8004026:	4613      	mov	r3, r2
 8004028:	005b      	lsls	r3, r3, #1
 800402a:	4413      	add	r3, r2
 800402c:	009b      	lsls	r3, r3, #2
 800402e:	440b      	add	r3, r1
 8004030:	3308      	adds	r3, #8
 8004032:	687a      	ldr	r2, [r7, #4]
 8004034:	601a      	str	r2, [r3, #0]
 8004036:	bf00      	nop
 8004038:	370c      	adds	r7, #12
 800403a:	46bd      	mov	sp, r7
 800403c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004040:	4770      	bx	lr
 8004042:	bf00      	nop
 8004044:	200017b4 	.word	0x200017b4
 8004048:	200017b8 	.word	0x200017b8

0800404c <BSP_LCD_GetFont>:
 800404c:	b480      	push	{r7}
 800404e:	af00      	add	r7, sp, #0
 8004050:	4b07      	ldr	r3, [pc, #28]	; (8004070 <BSP_LCD_GetFont+0x24>)
 8004052:	681a      	ldr	r2, [r3, #0]
 8004054:	4907      	ldr	r1, [pc, #28]	; (8004074 <BSP_LCD_GetFont+0x28>)
 8004056:	4613      	mov	r3, r2
 8004058:	005b      	lsls	r3, r3, #1
 800405a:	4413      	add	r3, r2
 800405c:	009b      	lsls	r3, r3, #2
 800405e:	440b      	add	r3, r1
 8004060:	3308      	adds	r3, #8
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	4618      	mov	r0, r3
 8004066:	46bd      	mov	sp, r7
 8004068:	f85d 7b04 	ldr.w	r7, [sp], #4
 800406c:	4770      	bx	lr
 800406e:	bf00      	nop
 8004070:	200017b4 	.word	0x200017b4
 8004074:	200017b8 	.word	0x200017b8

08004078 <BSP_LCD_ReadPixel>:
 8004078:	b5b0      	push	{r4, r5, r7, lr}
 800407a:	b084      	sub	sp, #16
 800407c:	af00      	add	r7, sp, #0
 800407e:	4603      	mov	r3, r0
 8004080:	460a      	mov	r2, r1
 8004082:	80fb      	strh	r3, [r7, #6]
 8004084:	4613      	mov	r3, r2
 8004086:	80bb      	strh	r3, [r7, #4]
 8004088:	2300      	movs	r3, #0
 800408a:	60fb      	str	r3, [r7, #12]
 800408c:	4b4b      	ldr	r3, [pc, #300]	; (80041bc <BSP_LCD_ReadPixel+0x144>)
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	4a4b      	ldr	r2, [pc, #300]	; (80041c0 <BSP_LCD_ReadPixel+0x148>)
 8004092:	2134      	movs	r1, #52	; 0x34
 8004094:	fb01 f303 	mul.w	r3, r1, r3
 8004098:	4413      	add	r3, r2
 800409a:	3348      	adds	r3, #72	; 0x48
 800409c:	681b      	ldr	r3, [r3, #0]
 800409e:	2b00      	cmp	r3, #0
 80040a0:	d115      	bne.n	80040ce <BSP_LCD_ReadPixel+0x56>
 80040a2:	4b46      	ldr	r3, [pc, #280]	; (80041bc <BSP_LCD_ReadPixel+0x144>)
 80040a4:	681b      	ldr	r3, [r3, #0]
 80040a6:	4a46      	ldr	r2, [pc, #280]	; (80041c0 <BSP_LCD_ReadPixel+0x148>)
 80040a8:	2134      	movs	r1, #52	; 0x34
 80040aa:	fb01 f303 	mul.w	r3, r1, r3
 80040ae:	4413      	add	r3, r2
 80040b0:	335c      	adds	r3, #92	; 0x5c
 80040b2:	681c      	ldr	r4, [r3, #0]
 80040b4:	88bd      	ldrh	r5, [r7, #4]
 80040b6:	f7ff fee5 	bl	8003e84 <BSP_LCD_GetXSize>
 80040ba:	4603      	mov	r3, r0
 80040bc:	fb03 f205 	mul.w	r2, r3, r5
 80040c0:	88fb      	ldrh	r3, [r7, #6]
 80040c2:	4413      	add	r3, r2
 80040c4:	009b      	lsls	r3, r3, #2
 80040c6:	4423      	add	r3, r4
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	60fb      	str	r3, [r7, #12]
 80040cc:	e070      	b.n	80041b0 <BSP_LCD_ReadPixel+0x138>
 80040ce:	4b3b      	ldr	r3, [pc, #236]	; (80041bc <BSP_LCD_ReadPixel+0x144>)
 80040d0:	681b      	ldr	r3, [r3, #0]
 80040d2:	4a3b      	ldr	r2, [pc, #236]	; (80041c0 <BSP_LCD_ReadPixel+0x148>)
 80040d4:	2134      	movs	r1, #52	; 0x34
 80040d6:	fb01 f303 	mul.w	r3, r1, r3
 80040da:	4413      	add	r3, r2
 80040dc:	3348      	adds	r3, #72	; 0x48
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	2b01      	cmp	r3, #1
 80040e2:	d117      	bne.n	8004114 <BSP_LCD_ReadPixel+0x9c>
 80040e4:	4b35      	ldr	r3, [pc, #212]	; (80041bc <BSP_LCD_ReadPixel+0x144>)
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	4a35      	ldr	r2, [pc, #212]	; (80041c0 <BSP_LCD_ReadPixel+0x148>)
 80040ea:	2134      	movs	r1, #52	; 0x34
 80040ec:	fb01 f303 	mul.w	r3, r1, r3
 80040f0:	4413      	add	r3, r2
 80040f2:	335c      	adds	r3, #92	; 0x5c
 80040f4:	681c      	ldr	r4, [r3, #0]
 80040f6:	88bd      	ldrh	r5, [r7, #4]
 80040f8:	f7ff fec4 	bl	8003e84 <BSP_LCD_GetXSize>
 80040fc:	4603      	mov	r3, r0
 80040fe:	fb03 f205 	mul.w	r2, r3, r5
 8004102:	88fb      	ldrh	r3, [r7, #6]
 8004104:	4413      	add	r3, r2
 8004106:	009b      	lsls	r3, r3, #2
 8004108:	4423      	add	r3, r4
 800410a:	681b      	ldr	r3, [r3, #0]
 800410c:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8004110:	60fb      	str	r3, [r7, #12]
 8004112:	e04d      	b.n	80041b0 <BSP_LCD_ReadPixel+0x138>
 8004114:	4b29      	ldr	r3, [pc, #164]	; (80041bc <BSP_LCD_ReadPixel+0x144>)
 8004116:	681b      	ldr	r3, [r3, #0]
 8004118:	4a29      	ldr	r2, [pc, #164]	; (80041c0 <BSP_LCD_ReadPixel+0x148>)
 800411a:	2134      	movs	r1, #52	; 0x34
 800411c:	fb01 f303 	mul.w	r3, r1, r3
 8004120:	4413      	add	r3, r2
 8004122:	3348      	adds	r3, #72	; 0x48
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	2b02      	cmp	r3, #2
 8004128:	d015      	beq.n	8004156 <BSP_LCD_ReadPixel+0xde>
 800412a:	4b24      	ldr	r3, [pc, #144]	; (80041bc <BSP_LCD_ReadPixel+0x144>)
 800412c:	681b      	ldr	r3, [r3, #0]
 800412e:	4a24      	ldr	r2, [pc, #144]	; (80041c0 <BSP_LCD_ReadPixel+0x148>)
 8004130:	2134      	movs	r1, #52	; 0x34
 8004132:	fb01 f303 	mul.w	r3, r1, r3
 8004136:	4413      	add	r3, r2
 8004138:	3348      	adds	r3, #72	; 0x48
 800413a:	681b      	ldr	r3, [r3, #0]
 800413c:	2b04      	cmp	r3, #4
 800413e:	d00a      	beq.n	8004156 <BSP_LCD_ReadPixel+0xde>
 8004140:	4b1e      	ldr	r3, [pc, #120]	; (80041bc <BSP_LCD_ReadPixel+0x144>)
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	4a1e      	ldr	r2, [pc, #120]	; (80041c0 <BSP_LCD_ReadPixel+0x148>)
 8004146:	2134      	movs	r1, #52	; 0x34
 8004148:	fb01 f303 	mul.w	r3, r1, r3
 800414c:	4413      	add	r3, r2
 800414e:	3348      	adds	r3, #72	; 0x48
 8004150:	681b      	ldr	r3, [r3, #0]
 8004152:	2b07      	cmp	r3, #7
 8004154:	d116      	bne.n	8004184 <BSP_LCD_ReadPixel+0x10c>
 8004156:	4b19      	ldr	r3, [pc, #100]	; (80041bc <BSP_LCD_ReadPixel+0x144>)
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	4a19      	ldr	r2, [pc, #100]	; (80041c0 <BSP_LCD_ReadPixel+0x148>)
 800415c:	2134      	movs	r1, #52	; 0x34
 800415e:	fb01 f303 	mul.w	r3, r1, r3
 8004162:	4413      	add	r3, r2
 8004164:	335c      	adds	r3, #92	; 0x5c
 8004166:	681c      	ldr	r4, [r3, #0]
 8004168:	88bd      	ldrh	r5, [r7, #4]
 800416a:	f7ff fe8b 	bl	8003e84 <BSP_LCD_GetXSize>
 800416e:	4603      	mov	r3, r0
 8004170:	fb03 f205 	mul.w	r2, r3, r5
 8004174:	88fb      	ldrh	r3, [r7, #6]
 8004176:	4413      	add	r3, r2
 8004178:	005b      	lsls	r3, r3, #1
 800417a:	4423      	add	r3, r4
 800417c:	881b      	ldrh	r3, [r3, #0]
 800417e:	b29b      	uxth	r3, r3
 8004180:	60fb      	str	r3, [r7, #12]
 8004182:	e015      	b.n	80041b0 <BSP_LCD_ReadPixel+0x138>
 8004184:	4b0d      	ldr	r3, [pc, #52]	; (80041bc <BSP_LCD_ReadPixel+0x144>)
 8004186:	681b      	ldr	r3, [r3, #0]
 8004188:	4a0d      	ldr	r2, [pc, #52]	; (80041c0 <BSP_LCD_ReadPixel+0x148>)
 800418a:	2134      	movs	r1, #52	; 0x34
 800418c:	fb01 f303 	mul.w	r3, r1, r3
 8004190:	4413      	add	r3, r2
 8004192:	335c      	adds	r3, #92	; 0x5c
 8004194:	681c      	ldr	r4, [r3, #0]
 8004196:	88bd      	ldrh	r5, [r7, #4]
 8004198:	f7ff fe74 	bl	8003e84 <BSP_LCD_GetXSize>
 800419c:	4603      	mov	r3, r0
 800419e:	fb03 f205 	mul.w	r2, r3, r5
 80041a2:	88fb      	ldrh	r3, [r7, #6]
 80041a4:	4413      	add	r3, r2
 80041a6:	005b      	lsls	r3, r3, #1
 80041a8:	4423      	add	r3, r4
 80041aa:	781b      	ldrb	r3, [r3, #0]
 80041ac:	b2db      	uxtb	r3, r3
 80041ae:	60fb      	str	r3, [r7, #12]
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	4618      	mov	r0, r3
 80041b4:	3710      	adds	r7, #16
 80041b6:	46bd      	mov	sp, r7
 80041b8:	bdb0      	pop	{r4, r5, r7, pc}
 80041ba:	bf00      	nop
 80041bc:	200017b4 	.word	0x200017b4
 80041c0:	2000a030 	.word	0x2000a030

080041c4 <BSP_LCD_Clear>:
 80041c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80041c6:	b085      	sub	sp, #20
 80041c8:	af02      	add	r7, sp, #8
 80041ca:	6078      	str	r0, [r7, #4]
 80041cc:	4b0f      	ldr	r3, [pc, #60]	; (800420c <BSP_LCD_Clear+0x48>)
 80041ce:	681c      	ldr	r4, [r3, #0]
 80041d0:	4b0e      	ldr	r3, [pc, #56]	; (800420c <BSP_LCD_Clear+0x48>)
 80041d2:	681b      	ldr	r3, [r3, #0]
 80041d4:	4a0e      	ldr	r2, [pc, #56]	; (8004210 <BSP_LCD_Clear+0x4c>)
 80041d6:	2134      	movs	r1, #52	; 0x34
 80041d8:	fb01 f303 	mul.w	r3, r1, r3
 80041dc:	4413      	add	r3, r2
 80041de:	335c      	adds	r3, #92	; 0x5c
 80041e0:	681b      	ldr	r3, [r3, #0]
 80041e2:	461d      	mov	r5, r3
 80041e4:	f7ff fe4e 	bl	8003e84 <BSP_LCD_GetXSize>
 80041e8:	4606      	mov	r6, r0
 80041ea:	f7ff fe5f 	bl	8003eac <BSP_LCD_GetYSize>
 80041ee:	4602      	mov	r2, r0
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	9301      	str	r3, [sp, #4]
 80041f4:	2300      	movs	r3, #0
 80041f6:	9300      	str	r3, [sp, #0]
 80041f8:	4613      	mov	r3, r2
 80041fa:	4632      	mov	r2, r6
 80041fc:	4629      	mov	r1, r5
 80041fe:	4620      	mov	r0, r4
 8004200:	f000 fe06 	bl	8004e10 <LL_FillBuffer>
 8004204:	bf00      	nop
 8004206:	370c      	adds	r7, #12
 8004208:	46bd      	mov	sp, r7
 800420a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800420c:	200017b4 	.word	0x200017b4
 8004210:	2000a030 	.word	0x2000a030

08004214 <BSP_LCD_DisplayChar>:
 8004214:	b590      	push	{r4, r7, lr}
 8004216:	b083      	sub	sp, #12
 8004218:	af00      	add	r7, sp, #0
 800421a:	4603      	mov	r3, r0
 800421c:	80fb      	strh	r3, [r7, #6]
 800421e:	460b      	mov	r3, r1
 8004220:	80bb      	strh	r3, [r7, #4]
 8004222:	4613      	mov	r3, r2
 8004224:	70fb      	strb	r3, [r7, #3]
 8004226:	4b1b      	ldr	r3, [pc, #108]	; (8004294 <BSP_LCD_DisplayChar+0x80>)
 8004228:	681a      	ldr	r2, [r3, #0]
 800422a:	491b      	ldr	r1, [pc, #108]	; (8004298 <BSP_LCD_DisplayChar+0x84>)
 800422c:	4613      	mov	r3, r2
 800422e:	005b      	lsls	r3, r3, #1
 8004230:	4413      	add	r3, r2
 8004232:	009b      	lsls	r3, r3, #2
 8004234:	440b      	add	r3, r1
 8004236:	3308      	adds	r3, #8
 8004238:	681b      	ldr	r3, [r3, #0]
 800423a:	6819      	ldr	r1, [r3, #0]
 800423c:	78fb      	ldrb	r3, [r7, #3]
 800423e:	f1a3 0020 	sub.w	r0, r3, #32
 8004242:	4b14      	ldr	r3, [pc, #80]	; (8004294 <BSP_LCD_DisplayChar+0x80>)
 8004244:	681a      	ldr	r2, [r3, #0]
 8004246:	4c14      	ldr	r4, [pc, #80]	; (8004298 <BSP_LCD_DisplayChar+0x84>)
 8004248:	4613      	mov	r3, r2
 800424a:	005b      	lsls	r3, r3, #1
 800424c:	4413      	add	r3, r2
 800424e:	009b      	lsls	r3, r3, #2
 8004250:	4423      	add	r3, r4
 8004252:	3308      	adds	r3, #8
 8004254:	681b      	ldr	r3, [r3, #0]
 8004256:	88db      	ldrh	r3, [r3, #6]
 8004258:	fb03 f000 	mul.w	r0, r3, r0
 800425c:	4b0d      	ldr	r3, [pc, #52]	; (8004294 <BSP_LCD_DisplayChar+0x80>)
 800425e:	681a      	ldr	r2, [r3, #0]
 8004260:	4c0d      	ldr	r4, [pc, #52]	; (8004298 <BSP_LCD_DisplayChar+0x84>)
 8004262:	4613      	mov	r3, r2
 8004264:	005b      	lsls	r3, r3, #1
 8004266:	4413      	add	r3, r2
 8004268:	009b      	lsls	r3, r3, #2
 800426a:	4423      	add	r3, r4
 800426c:	3308      	adds	r3, #8
 800426e:	681b      	ldr	r3, [r3, #0]
 8004270:	889b      	ldrh	r3, [r3, #4]
 8004272:	3307      	adds	r3, #7
 8004274:	2b00      	cmp	r3, #0
 8004276:	da00      	bge.n	800427a <BSP_LCD_DisplayChar+0x66>
 8004278:	3307      	adds	r3, #7
 800427a:	10db      	asrs	r3, r3, #3
 800427c:	fb03 f300 	mul.w	r3, r3, r0
 8004280:	18ca      	adds	r2, r1, r3
 8004282:	88b9      	ldrh	r1, [r7, #4]
 8004284:	88fb      	ldrh	r3, [r7, #6]
 8004286:	4618      	mov	r0, r3
 8004288:	f000 fd0a 	bl	8004ca0 <DrawChar>
 800428c:	bf00      	nop
 800428e:	370c      	adds	r7, #12
 8004290:	46bd      	mov	sp, r7
 8004292:	bd90      	pop	{r4, r7, pc}
 8004294:	200017b4 	.word	0x200017b4
 8004298:	200017b8 	.word	0x200017b8

0800429c <BSP_LCD_DisplayStringAt>:
 800429c:	b5b0      	push	{r4, r5, r7, lr}
 800429e:	b088      	sub	sp, #32
 80042a0:	af00      	add	r7, sp, #0
 80042a2:	60ba      	str	r2, [r7, #8]
 80042a4:	461a      	mov	r2, r3
 80042a6:	4603      	mov	r3, r0
 80042a8:	81fb      	strh	r3, [r7, #14]
 80042aa:	460b      	mov	r3, r1
 80042ac:	81bb      	strh	r3, [r7, #12]
 80042ae:	4613      	mov	r3, r2
 80042b0:	71fb      	strb	r3, [r7, #7]
 80042b2:	2301      	movs	r3, #1
 80042b4:	83fb      	strh	r3, [r7, #30]
 80042b6:	2300      	movs	r3, #0
 80042b8:	83bb      	strh	r3, [r7, #28]
 80042ba:	2300      	movs	r3, #0
 80042bc:	61bb      	str	r3, [r7, #24]
 80042be:	2300      	movs	r3, #0
 80042c0:	613b      	str	r3, [r7, #16]
 80042c2:	68bb      	ldr	r3, [r7, #8]
 80042c4:	617b      	str	r3, [r7, #20]
 80042c6:	e002      	b.n	80042ce <BSP_LCD_DisplayStringAt+0x32>
 80042c8:	69bb      	ldr	r3, [r7, #24]
 80042ca:	3301      	adds	r3, #1
 80042cc:	61bb      	str	r3, [r7, #24]
 80042ce:	697b      	ldr	r3, [r7, #20]
 80042d0:	1c5a      	adds	r2, r3, #1
 80042d2:	617a      	str	r2, [r7, #20]
 80042d4:	781b      	ldrb	r3, [r3, #0]
 80042d6:	2b00      	cmp	r3, #0
 80042d8:	d1f6      	bne.n	80042c8 <BSP_LCD_DisplayStringAt+0x2c>
 80042da:	f7ff fdd3 	bl	8003e84 <BSP_LCD_GetXSize>
 80042de:	4b4f      	ldr	r3, [pc, #316]	; (800441c <BSP_LCD_DisplayStringAt+0x180>)
 80042e0:	681a      	ldr	r2, [r3, #0]
 80042e2:	494f      	ldr	r1, [pc, #316]	; (8004420 <BSP_LCD_DisplayStringAt+0x184>)
 80042e4:	4613      	mov	r3, r2
 80042e6:	005b      	lsls	r3, r3, #1
 80042e8:	4413      	add	r3, r2
 80042ea:	009b      	lsls	r3, r3, #2
 80042ec:	440b      	add	r3, r1
 80042ee:	3308      	adds	r3, #8
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	889b      	ldrh	r3, [r3, #4]
 80042f4:	fbb0 f3f3 	udiv	r3, r0, r3
 80042f8:	613b      	str	r3, [r7, #16]
 80042fa:	79fb      	ldrb	r3, [r7, #7]
 80042fc:	2b02      	cmp	r3, #2
 80042fe:	d01c      	beq.n	800433a <BSP_LCD_DisplayStringAt+0x9e>
 8004300:	2b03      	cmp	r3, #3
 8004302:	d017      	beq.n	8004334 <BSP_LCD_DisplayStringAt+0x98>
 8004304:	2b01      	cmp	r3, #1
 8004306:	d12e      	bne.n	8004366 <BSP_LCD_DisplayStringAt+0xca>
 8004308:	693a      	ldr	r2, [r7, #16]
 800430a:	69bb      	ldr	r3, [r7, #24]
 800430c:	1ad1      	subs	r1, r2, r3
 800430e:	4b43      	ldr	r3, [pc, #268]	; (800441c <BSP_LCD_DisplayStringAt+0x180>)
 8004310:	681a      	ldr	r2, [r3, #0]
 8004312:	4843      	ldr	r0, [pc, #268]	; (8004420 <BSP_LCD_DisplayStringAt+0x184>)
 8004314:	4613      	mov	r3, r2
 8004316:	005b      	lsls	r3, r3, #1
 8004318:	4413      	add	r3, r2
 800431a:	009b      	lsls	r3, r3, #2
 800431c:	4403      	add	r3, r0
 800431e:	3308      	adds	r3, #8
 8004320:	681b      	ldr	r3, [r3, #0]
 8004322:	889b      	ldrh	r3, [r3, #4]
 8004324:	fb03 f301 	mul.w	r3, r3, r1
 8004328:	085b      	lsrs	r3, r3, #1
 800432a:	b29a      	uxth	r2, r3
 800432c:	89fb      	ldrh	r3, [r7, #14]
 800432e:	4413      	add	r3, r2
 8004330:	83fb      	strh	r3, [r7, #30]
 8004332:	e01b      	b.n	800436c <BSP_LCD_DisplayStringAt+0xd0>
 8004334:	89fb      	ldrh	r3, [r7, #14]
 8004336:	83fb      	strh	r3, [r7, #30]
 8004338:	e018      	b.n	800436c <BSP_LCD_DisplayStringAt+0xd0>
 800433a:	693a      	ldr	r2, [r7, #16]
 800433c:	69bb      	ldr	r3, [r7, #24]
 800433e:	1ad3      	subs	r3, r2, r3
 8004340:	b299      	uxth	r1, r3
 8004342:	4b36      	ldr	r3, [pc, #216]	; (800441c <BSP_LCD_DisplayStringAt+0x180>)
 8004344:	681a      	ldr	r2, [r3, #0]
 8004346:	4836      	ldr	r0, [pc, #216]	; (8004420 <BSP_LCD_DisplayStringAt+0x184>)
 8004348:	4613      	mov	r3, r2
 800434a:	005b      	lsls	r3, r3, #1
 800434c:	4413      	add	r3, r2
 800434e:	009b      	lsls	r3, r3, #2
 8004350:	4403      	add	r3, r0
 8004352:	3308      	adds	r3, #8
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	889b      	ldrh	r3, [r3, #4]
 8004358:	fb11 f303 	smulbb	r3, r1, r3
 800435c:	b29a      	uxth	r2, r3
 800435e:	89fb      	ldrh	r3, [r7, #14]
 8004360:	1ad3      	subs	r3, r2, r3
 8004362:	83fb      	strh	r3, [r7, #30]
 8004364:	e002      	b.n	800436c <BSP_LCD_DisplayStringAt+0xd0>
 8004366:	89fb      	ldrh	r3, [r7, #14]
 8004368:	83fb      	strh	r3, [r7, #30]
 800436a:	bf00      	nop
 800436c:	8bfb      	ldrh	r3, [r7, #30]
 800436e:	2b00      	cmp	r3, #0
 8004370:	d003      	beq.n	800437a <BSP_LCD_DisplayStringAt+0xde>
 8004372:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8004376:	2b00      	cmp	r3, #0
 8004378:	da1d      	bge.n	80043b6 <BSP_LCD_DisplayStringAt+0x11a>
 800437a:	2301      	movs	r3, #1
 800437c:	83fb      	strh	r3, [r7, #30]
 800437e:	e01a      	b.n	80043b6 <BSP_LCD_DisplayStringAt+0x11a>
 8004380:	68bb      	ldr	r3, [r7, #8]
 8004382:	781a      	ldrb	r2, [r3, #0]
 8004384:	89b9      	ldrh	r1, [r7, #12]
 8004386:	8bfb      	ldrh	r3, [r7, #30]
 8004388:	4618      	mov	r0, r3
 800438a:	f7ff ff43 	bl	8004214 <BSP_LCD_DisplayChar>
 800438e:	4b23      	ldr	r3, [pc, #140]	; (800441c <BSP_LCD_DisplayStringAt+0x180>)
 8004390:	681a      	ldr	r2, [r3, #0]
 8004392:	4923      	ldr	r1, [pc, #140]	; (8004420 <BSP_LCD_DisplayStringAt+0x184>)
 8004394:	4613      	mov	r3, r2
 8004396:	005b      	lsls	r3, r3, #1
 8004398:	4413      	add	r3, r2
 800439a:	009b      	lsls	r3, r3, #2
 800439c:	440b      	add	r3, r1
 800439e:	3308      	adds	r3, #8
 80043a0:	681b      	ldr	r3, [r3, #0]
 80043a2:	889a      	ldrh	r2, [r3, #4]
 80043a4:	8bfb      	ldrh	r3, [r7, #30]
 80043a6:	4413      	add	r3, r2
 80043a8:	83fb      	strh	r3, [r7, #30]
 80043aa:	68bb      	ldr	r3, [r7, #8]
 80043ac:	3301      	adds	r3, #1
 80043ae:	60bb      	str	r3, [r7, #8]
 80043b0:	8bbb      	ldrh	r3, [r7, #28]
 80043b2:	3301      	adds	r3, #1
 80043b4:	83bb      	strh	r3, [r7, #28]
 80043b6:	68bb      	ldr	r3, [r7, #8]
 80043b8:	781b      	ldrb	r3, [r3, #0]
 80043ba:	2b00      	cmp	r3, #0
 80043bc:	bf14      	ite	ne
 80043be:	2301      	movne	r3, #1
 80043c0:	2300      	moveq	r3, #0
 80043c2:	b2dc      	uxtb	r4, r3
 80043c4:	f7ff fd5e 	bl	8003e84 <BSP_LCD_GetXSize>
 80043c8:	4605      	mov	r5, r0
 80043ca:	8bb9      	ldrh	r1, [r7, #28]
 80043cc:	4b13      	ldr	r3, [pc, #76]	; (800441c <BSP_LCD_DisplayStringAt+0x180>)
 80043ce:	681a      	ldr	r2, [r3, #0]
 80043d0:	4813      	ldr	r0, [pc, #76]	; (8004420 <BSP_LCD_DisplayStringAt+0x184>)
 80043d2:	4613      	mov	r3, r2
 80043d4:	005b      	lsls	r3, r3, #1
 80043d6:	4413      	add	r3, r2
 80043d8:	009b      	lsls	r3, r3, #2
 80043da:	4403      	add	r3, r0
 80043dc:	3308      	adds	r3, #8
 80043de:	681b      	ldr	r3, [r3, #0]
 80043e0:	889b      	ldrh	r3, [r3, #4]
 80043e2:	fb03 f301 	mul.w	r3, r3, r1
 80043e6:	1aeb      	subs	r3, r5, r3
 80043e8:	b299      	uxth	r1, r3
 80043ea:	4b0c      	ldr	r3, [pc, #48]	; (800441c <BSP_LCD_DisplayStringAt+0x180>)
 80043ec:	681a      	ldr	r2, [r3, #0]
 80043ee:	480c      	ldr	r0, [pc, #48]	; (8004420 <BSP_LCD_DisplayStringAt+0x184>)
 80043f0:	4613      	mov	r3, r2
 80043f2:	005b      	lsls	r3, r3, #1
 80043f4:	4413      	add	r3, r2
 80043f6:	009b      	lsls	r3, r3, #2
 80043f8:	4403      	add	r3, r0
 80043fa:	3308      	adds	r3, #8
 80043fc:	681b      	ldr	r3, [r3, #0]
 80043fe:	889b      	ldrh	r3, [r3, #4]
 8004400:	4299      	cmp	r1, r3
 8004402:	bf2c      	ite	cs
 8004404:	2301      	movcs	r3, #1
 8004406:	2300      	movcc	r3, #0
 8004408:	b2db      	uxtb	r3, r3
 800440a:	4023      	ands	r3, r4
 800440c:	b2db      	uxtb	r3, r3
 800440e:	2b00      	cmp	r3, #0
 8004410:	d1b6      	bne.n	8004380 <BSP_LCD_DisplayStringAt+0xe4>
 8004412:	bf00      	nop
 8004414:	3720      	adds	r7, #32
 8004416:	46bd      	mov	sp, r7
 8004418:	bdb0      	pop	{r4, r5, r7, pc}
 800441a:	bf00      	nop
 800441c:	200017b4 	.word	0x200017b4
 8004420:	200017b8 	.word	0x200017b8

08004424 <BSP_LCD_DisplayStringAtLine>:
 8004424:	b580      	push	{r7, lr}
 8004426:	b082      	sub	sp, #8
 8004428:	af00      	add	r7, sp, #0
 800442a:	4603      	mov	r3, r0
 800442c:	6039      	str	r1, [r7, #0]
 800442e:	80fb      	strh	r3, [r7, #6]
 8004430:	f7ff fe0c 	bl	800404c <BSP_LCD_GetFont>
 8004434:	4603      	mov	r3, r0
 8004436:	88db      	ldrh	r3, [r3, #6]
 8004438:	88fa      	ldrh	r2, [r7, #6]
 800443a:	fb12 f303 	smulbb	r3, r2, r3
 800443e:	b299      	uxth	r1, r3
 8004440:	2303      	movs	r3, #3
 8004442:	683a      	ldr	r2, [r7, #0]
 8004444:	2000      	movs	r0, #0
 8004446:	f7ff ff29 	bl	800429c <BSP_LCD_DisplayStringAt>
 800444a:	bf00      	nop
 800444c:	3708      	adds	r7, #8
 800444e:	46bd      	mov	sp, r7
 8004450:	bd80      	pop	{r7, pc}
	...

08004454 <BSP_LCD_DrawHLine>:
 8004454:	b5b0      	push	{r4, r5, r7, lr}
 8004456:	b086      	sub	sp, #24
 8004458:	af02      	add	r7, sp, #8
 800445a:	4603      	mov	r3, r0
 800445c:	80fb      	strh	r3, [r7, #6]
 800445e:	460b      	mov	r3, r1
 8004460:	80bb      	strh	r3, [r7, #4]
 8004462:	4613      	mov	r3, r2
 8004464:	807b      	strh	r3, [r7, #2]
 8004466:	2300      	movs	r3, #0
 8004468:	60fb      	str	r3, [r7, #12]
 800446a:	4b26      	ldr	r3, [pc, #152]	; (8004504 <BSP_LCD_DrawHLine+0xb0>)
 800446c:	681b      	ldr	r3, [r3, #0]
 800446e:	4a26      	ldr	r2, [pc, #152]	; (8004508 <BSP_LCD_DrawHLine+0xb4>)
 8004470:	2134      	movs	r1, #52	; 0x34
 8004472:	fb01 f303 	mul.w	r3, r1, r3
 8004476:	4413      	add	r3, r2
 8004478:	3348      	adds	r3, #72	; 0x48
 800447a:	681b      	ldr	r3, [r3, #0]
 800447c:	2b02      	cmp	r3, #2
 800447e:	d114      	bne.n	80044aa <BSP_LCD_DrawHLine+0x56>
 8004480:	4b20      	ldr	r3, [pc, #128]	; (8004504 <BSP_LCD_DrawHLine+0xb0>)
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	4a20      	ldr	r2, [pc, #128]	; (8004508 <BSP_LCD_DrawHLine+0xb4>)
 8004486:	2134      	movs	r1, #52	; 0x34
 8004488:	fb01 f303 	mul.w	r3, r1, r3
 800448c:	4413      	add	r3, r2
 800448e:	335c      	adds	r3, #92	; 0x5c
 8004490:	681c      	ldr	r4, [r3, #0]
 8004492:	f7ff fcf7 	bl	8003e84 <BSP_LCD_GetXSize>
 8004496:	4602      	mov	r2, r0
 8004498:	88bb      	ldrh	r3, [r7, #4]
 800449a:	fb03 f202 	mul.w	r2, r3, r2
 800449e:	88fb      	ldrh	r3, [r7, #6]
 80044a0:	4413      	add	r3, r2
 80044a2:	005b      	lsls	r3, r3, #1
 80044a4:	4423      	add	r3, r4
 80044a6:	60fb      	str	r3, [r7, #12]
 80044a8:	e013      	b.n	80044d2 <BSP_LCD_DrawHLine+0x7e>
 80044aa:	4b16      	ldr	r3, [pc, #88]	; (8004504 <BSP_LCD_DrawHLine+0xb0>)
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	4a16      	ldr	r2, [pc, #88]	; (8004508 <BSP_LCD_DrawHLine+0xb4>)
 80044b0:	2134      	movs	r1, #52	; 0x34
 80044b2:	fb01 f303 	mul.w	r3, r1, r3
 80044b6:	4413      	add	r3, r2
 80044b8:	335c      	adds	r3, #92	; 0x5c
 80044ba:	681c      	ldr	r4, [r3, #0]
 80044bc:	f7ff fce2 	bl	8003e84 <BSP_LCD_GetXSize>
 80044c0:	4602      	mov	r2, r0
 80044c2:	88bb      	ldrh	r3, [r7, #4]
 80044c4:	fb03 f202 	mul.w	r2, r3, r2
 80044c8:	88fb      	ldrh	r3, [r7, #6]
 80044ca:	4413      	add	r3, r2
 80044cc:	009b      	lsls	r3, r3, #2
 80044ce:	4423      	add	r3, r4
 80044d0:	60fb      	str	r3, [r7, #12]
 80044d2:	4b0c      	ldr	r3, [pc, #48]	; (8004504 <BSP_LCD_DrawHLine+0xb0>)
 80044d4:	6818      	ldr	r0, [r3, #0]
 80044d6:	68fc      	ldr	r4, [r7, #12]
 80044d8:	887d      	ldrh	r5, [r7, #2]
 80044da:	4b0a      	ldr	r3, [pc, #40]	; (8004504 <BSP_LCD_DrawHLine+0xb0>)
 80044dc:	681a      	ldr	r2, [r3, #0]
 80044de:	490b      	ldr	r1, [pc, #44]	; (800450c <BSP_LCD_DrawHLine+0xb8>)
 80044e0:	4613      	mov	r3, r2
 80044e2:	005b      	lsls	r3, r3, #1
 80044e4:	4413      	add	r3, r2
 80044e6:	009b      	lsls	r3, r3, #2
 80044e8:	440b      	add	r3, r1
 80044ea:	681b      	ldr	r3, [r3, #0]
 80044ec:	9301      	str	r3, [sp, #4]
 80044ee:	2300      	movs	r3, #0
 80044f0:	9300      	str	r3, [sp, #0]
 80044f2:	2301      	movs	r3, #1
 80044f4:	462a      	mov	r2, r5
 80044f6:	4621      	mov	r1, r4
 80044f8:	f000 fc8a 	bl	8004e10 <LL_FillBuffer>
 80044fc:	bf00      	nop
 80044fe:	3710      	adds	r7, #16
 8004500:	46bd      	mov	sp, r7
 8004502:	bdb0      	pop	{r4, r5, r7, pc}
 8004504:	200017b4 	.word	0x200017b4
 8004508:	2000a030 	.word	0x2000a030
 800450c:	200017b8 	.word	0x200017b8

08004510 <BSP_LCD_DrawVLine>:
 8004510:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004512:	b087      	sub	sp, #28
 8004514:	af02      	add	r7, sp, #8
 8004516:	4603      	mov	r3, r0
 8004518:	80fb      	strh	r3, [r7, #6]
 800451a:	460b      	mov	r3, r1
 800451c:	80bb      	strh	r3, [r7, #4]
 800451e:	4613      	mov	r3, r2
 8004520:	807b      	strh	r3, [r7, #2]
 8004522:	2300      	movs	r3, #0
 8004524:	60fb      	str	r3, [r7, #12]
 8004526:	4b28      	ldr	r3, [pc, #160]	; (80045c8 <BSP_LCD_DrawVLine+0xb8>)
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	4a28      	ldr	r2, [pc, #160]	; (80045cc <BSP_LCD_DrawVLine+0xbc>)
 800452c:	2134      	movs	r1, #52	; 0x34
 800452e:	fb01 f303 	mul.w	r3, r1, r3
 8004532:	4413      	add	r3, r2
 8004534:	3348      	adds	r3, #72	; 0x48
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	2b02      	cmp	r3, #2
 800453a:	d114      	bne.n	8004566 <BSP_LCD_DrawVLine+0x56>
 800453c:	4b22      	ldr	r3, [pc, #136]	; (80045c8 <BSP_LCD_DrawVLine+0xb8>)
 800453e:	681b      	ldr	r3, [r3, #0]
 8004540:	4a22      	ldr	r2, [pc, #136]	; (80045cc <BSP_LCD_DrawVLine+0xbc>)
 8004542:	2134      	movs	r1, #52	; 0x34
 8004544:	fb01 f303 	mul.w	r3, r1, r3
 8004548:	4413      	add	r3, r2
 800454a:	335c      	adds	r3, #92	; 0x5c
 800454c:	681c      	ldr	r4, [r3, #0]
 800454e:	f7ff fc99 	bl	8003e84 <BSP_LCD_GetXSize>
 8004552:	4602      	mov	r2, r0
 8004554:	88bb      	ldrh	r3, [r7, #4]
 8004556:	fb03 f202 	mul.w	r2, r3, r2
 800455a:	88fb      	ldrh	r3, [r7, #6]
 800455c:	4413      	add	r3, r2
 800455e:	005b      	lsls	r3, r3, #1
 8004560:	4423      	add	r3, r4
 8004562:	60fb      	str	r3, [r7, #12]
 8004564:	e013      	b.n	800458e <BSP_LCD_DrawVLine+0x7e>
 8004566:	4b18      	ldr	r3, [pc, #96]	; (80045c8 <BSP_LCD_DrawVLine+0xb8>)
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	4a18      	ldr	r2, [pc, #96]	; (80045cc <BSP_LCD_DrawVLine+0xbc>)
 800456c:	2134      	movs	r1, #52	; 0x34
 800456e:	fb01 f303 	mul.w	r3, r1, r3
 8004572:	4413      	add	r3, r2
 8004574:	335c      	adds	r3, #92	; 0x5c
 8004576:	681c      	ldr	r4, [r3, #0]
 8004578:	f7ff fc84 	bl	8003e84 <BSP_LCD_GetXSize>
 800457c:	4602      	mov	r2, r0
 800457e:	88bb      	ldrh	r3, [r7, #4]
 8004580:	fb03 f202 	mul.w	r2, r3, r2
 8004584:	88fb      	ldrh	r3, [r7, #6]
 8004586:	4413      	add	r3, r2
 8004588:	009b      	lsls	r3, r3, #2
 800458a:	4423      	add	r3, r4
 800458c:	60fb      	str	r3, [r7, #12]
 800458e:	4b0e      	ldr	r3, [pc, #56]	; (80045c8 <BSP_LCD_DrawVLine+0xb8>)
 8004590:	681c      	ldr	r4, [r3, #0]
 8004592:	68fd      	ldr	r5, [r7, #12]
 8004594:	887e      	ldrh	r6, [r7, #2]
 8004596:	f7ff fc75 	bl	8003e84 <BSP_LCD_GetXSize>
 800459a:	4603      	mov	r3, r0
 800459c:	1e59      	subs	r1, r3, #1
 800459e:	4b0a      	ldr	r3, [pc, #40]	; (80045c8 <BSP_LCD_DrawVLine+0xb8>)
 80045a0:	681a      	ldr	r2, [r3, #0]
 80045a2:	480b      	ldr	r0, [pc, #44]	; (80045d0 <BSP_LCD_DrawVLine+0xc0>)
 80045a4:	4613      	mov	r3, r2
 80045a6:	005b      	lsls	r3, r3, #1
 80045a8:	4413      	add	r3, r2
 80045aa:	009b      	lsls	r3, r3, #2
 80045ac:	4403      	add	r3, r0
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	9301      	str	r3, [sp, #4]
 80045b2:	9100      	str	r1, [sp, #0]
 80045b4:	4633      	mov	r3, r6
 80045b6:	2201      	movs	r2, #1
 80045b8:	4629      	mov	r1, r5
 80045ba:	4620      	mov	r0, r4
 80045bc:	f000 fc28 	bl	8004e10 <LL_FillBuffer>
 80045c0:	bf00      	nop
 80045c2:	3714      	adds	r7, #20
 80045c4:	46bd      	mov	sp, r7
 80045c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80045c8:	200017b4 	.word	0x200017b4
 80045cc:	2000a030 	.word	0x2000a030
 80045d0:	200017b8 	.word	0x200017b8

080045d4 <BSP_LCD_DrawCircle>:
 80045d4:	b590      	push	{r4, r7, lr}
 80045d6:	b087      	sub	sp, #28
 80045d8:	af00      	add	r7, sp, #0
 80045da:	4603      	mov	r3, r0
 80045dc:	80fb      	strh	r3, [r7, #6]
 80045de:	460b      	mov	r3, r1
 80045e0:	80bb      	strh	r3, [r7, #4]
 80045e2:	4613      	mov	r3, r2
 80045e4:	807b      	strh	r3, [r7, #2]
 80045e6:	887b      	ldrh	r3, [r7, #2]
 80045e8:	005b      	lsls	r3, r3, #1
 80045ea:	f1c3 0303 	rsb	r3, r3, #3
 80045ee:	617b      	str	r3, [r7, #20]
 80045f0:	2300      	movs	r3, #0
 80045f2:	613b      	str	r3, [r7, #16]
 80045f4:	887b      	ldrh	r3, [r7, #2]
 80045f6:	60fb      	str	r3, [r7, #12]
 80045f8:	e0cf      	b.n	800479a <BSP_LCD_DrawCircle+0x1c6>
 80045fa:	693b      	ldr	r3, [r7, #16]
 80045fc:	b29a      	uxth	r2, r3
 80045fe:	88fb      	ldrh	r3, [r7, #6]
 8004600:	4413      	add	r3, r2
 8004602:	b298      	uxth	r0, r3
 8004604:	68fb      	ldr	r3, [r7, #12]
 8004606:	b29b      	uxth	r3, r3
 8004608:	88ba      	ldrh	r2, [r7, #4]
 800460a:	1ad3      	subs	r3, r2, r3
 800460c:	b29c      	uxth	r4, r3
 800460e:	4b67      	ldr	r3, [pc, #412]	; (80047ac <BSP_LCD_DrawCircle+0x1d8>)
 8004610:	681a      	ldr	r2, [r3, #0]
 8004612:	4967      	ldr	r1, [pc, #412]	; (80047b0 <BSP_LCD_DrawCircle+0x1dc>)
 8004614:	4613      	mov	r3, r2
 8004616:	005b      	lsls	r3, r3, #1
 8004618:	4413      	add	r3, r2
 800461a:	009b      	lsls	r3, r3, #2
 800461c:	440b      	add	r3, r1
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	461a      	mov	r2, r3
 8004622:	4621      	mov	r1, r4
 8004624:	f000 f8c6 	bl	80047b4 <BSP_LCD_DrawPixel>
 8004628:	693b      	ldr	r3, [r7, #16]
 800462a:	b29b      	uxth	r3, r3
 800462c:	88fa      	ldrh	r2, [r7, #6]
 800462e:	1ad3      	subs	r3, r2, r3
 8004630:	b298      	uxth	r0, r3
 8004632:	68fb      	ldr	r3, [r7, #12]
 8004634:	b29b      	uxth	r3, r3
 8004636:	88ba      	ldrh	r2, [r7, #4]
 8004638:	1ad3      	subs	r3, r2, r3
 800463a:	b29c      	uxth	r4, r3
 800463c:	4b5b      	ldr	r3, [pc, #364]	; (80047ac <BSP_LCD_DrawCircle+0x1d8>)
 800463e:	681a      	ldr	r2, [r3, #0]
 8004640:	495b      	ldr	r1, [pc, #364]	; (80047b0 <BSP_LCD_DrawCircle+0x1dc>)
 8004642:	4613      	mov	r3, r2
 8004644:	005b      	lsls	r3, r3, #1
 8004646:	4413      	add	r3, r2
 8004648:	009b      	lsls	r3, r3, #2
 800464a:	440b      	add	r3, r1
 800464c:	681b      	ldr	r3, [r3, #0]
 800464e:	461a      	mov	r2, r3
 8004650:	4621      	mov	r1, r4
 8004652:	f000 f8af 	bl	80047b4 <BSP_LCD_DrawPixel>
 8004656:	68fb      	ldr	r3, [r7, #12]
 8004658:	b29a      	uxth	r2, r3
 800465a:	88fb      	ldrh	r3, [r7, #6]
 800465c:	4413      	add	r3, r2
 800465e:	b298      	uxth	r0, r3
 8004660:	693b      	ldr	r3, [r7, #16]
 8004662:	b29b      	uxth	r3, r3
 8004664:	88ba      	ldrh	r2, [r7, #4]
 8004666:	1ad3      	subs	r3, r2, r3
 8004668:	b29c      	uxth	r4, r3
 800466a:	4b50      	ldr	r3, [pc, #320]	; (80047ac <BSP_LCD_DrawCircle+0x1d8>)
 800466c:	681a      	ldr	r2, [r3, #0]
 800466e:	4950      	ldr	r1, [pc, #320]	; (80047b0 <BSP_LCD_DrawCircle+0x1dc>)
 8004670:	4613      	mov	r3, r2
 8004672:	005b      	lsls	r3, r3, #1
 8004674:	4413      	add	r3, r2
 8004676:	009b      	lsls	r3, r3, #2
 8004678:	440b      	add	r3, r1
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	461a      	mov	r2, r3
 800467e:	4621      	mov	r1, r4
 8004680:	f000 f898 	bl	80047b4 <BSP_LCD_DrawPixel>
 8004684:	68fb      	ldr	r3, [r7, #12]
 8004686:	b29b      	uxth	r3, r3
 8004688:	88fa      	ldrh	r2, [r7, #6]
 800468a:	1ad3      	subs	r3, r2, r3
 800468c:	b298      	uxth	r0, r3
 800468e:	693b      	ldr	r3, [r7, #16]
 8004690:	b29b      	uxth	r3, r3
 8004692:	88ba      	ldrh	r2, [r7, #4]
 8004694:	1ad3      	subs	r3, r2, r3
 8004696:	b29c      	uxth	r4, r3
 8004698:	4b44      	ldr	r3, [pc, #272]	; (80047ac <BSP_LCD_DrawCircle+0x1d8>)
 800469a:	681a      	ldr	r2, [r3, #0]
 800469c:	4944      	ldr	r1, [pc, #272]	; (80047b0 <BSP_LCD_DrawCircle+0x1dc>)
 800469e:	4613      	mov	r3, r2
 80046a0:	005b      	lsls	r3, r3, #1
 80046a2:	4413      	add	r3, r2
 80046a4:	009b      	lsls	r3, r3, #2
 80046a6:	440b      	add	r3, r1
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	461a      	mov	r2, r3
 80046ac:	4621      	mov	r1, r4
 80046ae:	f000 f881 	bl	80047b4 <BSP_LCD_DrawPixel>
 80046b2:	693b      	ldr	r3, [r7, #16]
 80046b4:	b29a      	uxth	r2, r3
 80046b6:	88fb      	ldrh	r3, [r7, #6]
 80046b8:	4413      	add	r3, r2
 80046ba:	b298      	uxth	r0, r3
 80046bc:	68fb      	ldr	r3, [r7, #12]
 80046be:	b29a      	uxth	r2, r3
 80046c0:	88bb      	ldrh	r3, [r7, #4]
 80046c2:	4413      	add	r3, r2
 80046c4:	b29c      	uxth	r4, r3
 80046c6:	4b39      	ldr	r3, [pc, #228]	; (80047ac <BSP_LCD_DrawCircle+0x1d8>)
 80046c8:	681a      	ldr	r2, [r3, #0]
 80046ca:	4939      	ldr	r1, [pc, #228]	; (80047b0 <BSP_LCD_DrawCircle+0x1dc>)
 80046cc:	4613      	mov	r3, r2
 80046ce:	005b      	lsls	r3, r3, #1
 80046d0:	4413      	add	r3, r2
 80046d2:	009b      	lsls	r3, r3, #2
 80046d4:	440b      	add	r3, r1
 80046d6:	681b      	ldr	r3, [r3, #0]
 80046d8:	461a      	mov	r2, r3
 80046da:	4621      	mov	r1, r4
 80046dc:	f000 f86a 	bl	80047b4 <BSP_LCD_DrawPixel>
 80046e0:	693b      	ldr	r3, [r7, #16]
 80046e2:	b29b      	uxth	r3, r3
 80046e4:	88fa      	ldrh	r2, [r7, #6]
 80046e6:	1ad3      	subs	r3, r2, r3
 80046e8:	b298      	uxth	r0, r3
 80046ea:	68fb      	ldr	r3, [r7, #12]
 80046ec:	b29a      	uxth	r2, r3
 80046ee:	88bb      	ldrh	r3, [r7, #4]
 80046f0:	4413      	add	r3, r2
 80046f2:	b29c      	uxth	r4, r3
 80046f4:	4b2d      	ldr	r3, [pc, #180]	; (80047ac <BSP_LCD_DrawCircle+0x1d8>)
 80046f6:	681a      	ldr	r2, [r3, #0]
 80046f8:	492d      	ldr	r1, [pc, #180]	; (80047b0 <BSP_LCD_DrawCircle+0x1dc>)
 80046fa:	4613      	mov	r3, r2
 80046fc:	005b      	lsls	r3, r3, #1
 80046fe:	4413      	add	r3, r2
 8004700:	009b      	lsls	r3, r3, #2
 8004702:	440b      	add	r3, r1
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	461a      	mov	r2, r3
 8004708:	4621      	mov	r1, r4
 800470a:	f000 f853 	bl	80047b4 <BSP_LCD_DrawPixel>
 800470e:	68fb      	ldr	r3, [r7, #12]
 8004710:	b29a      	uxth	r2, r3
 8004712:	88fb      	ldrh	r3, [r7, #6]
 8004714:	4413      	add	r3, r2
 8004716:	b298      	uxth	r0, r3
 8004718:	693b      	ldr	r3, [r7, #16]
 800471a:	b29a      	uxth	r2, r3
 800471c:	88bb      	ldrh	r3, [r7, #4]
 800471e:	4413      	add	r3, r2
 8004720:	b29c      	uxth	r4, r3
 8004722:	4b22      	ldr	r3, [pc, #136]	; (80047ac <BSP_LCD_DrawCircle+0x1d8>)
 8004724:	681a      	ldr	r2, [r3, #0]
 8004726:	4922      	ldr	r1, [pc, #136]	; (80047b0 <BSP_LCD_DrawCircle+0x1dc>)
 8004728:	4613      	mov	r3, r2
 800472a:	005b      	lsls	r3, r3, #1
 800472c:	4413      	add	r3, r2
 800472e:	009b      	lsls	r3, r3, #2
 8004730:	440b      	add	r3, r1
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	461a      	mov	r2, r3
 8004736:	4621      	mov	r1, r4
 8004738:	f000 f83c 	bl	80047b4 <BSP_LCD_DrawPixel>
 800473c:	68fb      	ldr	r3, [r7, #12]
 800473e:	b29b      	uxth	r3, r3
 8004740:	88fa      	ldrh	r2, [r7, #6]
 8004742:	1ad3      	subs	r3, r2, r3
 8004744:	b298      	uxth	r0, r3
 8004746:	693b      	ldr	r3, [r7, #16]
 8004748:	b29a      	uxth	r2, r3
 800474a:	88bb      	ldrh	r3, [r7, #4]
 800474c:	4413      	add	r3, r2
 800474e:	b29c      	uxth	r4, r3
 8004750:	4b16      	ldr	r3, [pc, #88]	; (80047ac <BSP_LCD_DrawCircle+0x1d8>)
 8004752:	681a      	ldr	r2, [r3, #0]
 8004754:	4916      	ldr	r1, [pc, #88]	; (80047b0 <BSP_LCD_DrawCircle+0x1dc>)
 8004756:	4613      	mov	r3, r2
 8004758:	005b      	lsls	r3, r3, #1
 800475a:	4413      	add	r3, r2
 800475c:	009b      	lsls	r3, r3, #2
 800475e:	440b      	add	r3, r1
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	461a      	mov	r2, r3
 8004764:	4621      	mov	r1, r4
 8004766:	f000 f825 	bl	80047b4 <BSP_LCD_DrawPixel>
 800476a:	697b      	ldr	r3, [r7, #20]
 800476c:	2b00      	cmp	r3, #0
 800476e:	da06      	bge.n	800477e <BSP_LCD_DrawCircle+0x1aa>
 8004770:	693b      	ldr	r3, [r7, #16]
 8004772:	009a      	lsls	r2, r3, #2
 8004774:	697b      	ldr	r3, [r7, #20]
 8004776:	4413      	add	r3, r2
 8004778:	3306      	adds	r3, #6
 800477a:	617b      	str	r3, [r7, #20]
 800477c:	e00a      	b.n	8004794 <BSP_LCD_DrawCircle+0x1c0>
 800477e:	693a      	ldr	r2, [r7, #16]
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	1ad3      	subs	r3, r2, r3
 8004784:	009a      	lsls	r2, r3, #2
 8004786:	697b      	ldr	r3, [r7, #20]
 8004788:	4413      	add	r3, r2
 800478a:	330a      	adds	r3, #10
 800478c:	617b      	str	r3, [r7, #20]
 800478e:	68fb      	ldr	r3, [r7, #12]
 8004790:	3b01      	subs	r3, #1
 8004792:	60fb      	str	r3, [r7, #12]
 8004794:	693b      	ldr	r3, [r7, #16]
 8004796:	3301      	adds	r3, #1
 8004798:	613b      	str	r3, [r7, #16]
 800479a:	693a      	ldr	r2, [r7, #16]
 800479c:	68fb      	ldr	r3, [r7, #12]
 800479e:	429a      	cmp	r2, r3
 80047a0:	f67f af2b 	bls.w	80045fa <BSP_LCD_DrawCircle+0x26>
 80047a4:	bf00      	nop
 80047a6:	371c      	adds	r7, #28
 80047a8:	46bd      	mov	sp, r7
 80047aa:	bd90      	pop	{r4, r7, pc}
 80047ac:	200017b4 	.word	0x200017b4
 80047b0:	200017b8 	.word	0x200017b8

080047b4 <BSP_LCD_DrawPixel>:
 80047b4:	b5b0      	push	{r4, r5, r7, lr}
 80047b6:	b082      	sub	sp, #8
 80047b8:	af00      	add	r7, sp, #0
 80047ba:	4603      	mov	r3, r0
 80047bc:	603a      	str	r2, [r7, #0]
 80047be:	80fb      	strh	r3, [r7, #6]
 80047c0:	460b      	mov	r3, r1
 80047c2:	80bb      	strh	r3, [r7, #4]
 80047c4:	4b1d      	ldr	r3, [pc, #116]	; (800483c <BSP_LCD_DrawPixel+0x88>)
 80047c6:	681b      	ldr	r3, [r3, #0]
 80047c8:	4a1d      	ldr	r2, [pc, #116]	; (8004840 <BSP_LCD_DrawPixel+0x8c>)
 80047ca:	2134      	movs	r1, #52	; 0x34
 80047cc:	fb01 f303 	mul.w	r3, r1, r3
 80047d0:	4413      	add	r3, r2
 80047d2:	3348      	adds	r3, #72	; 0x48
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	2b02      	cmp	r3, #2
 80047d8:	d116      	bne.n	8004808 <BSP_LCD_DrawPixel+0x54>
 80047da:	4b18      	ldr	r3, [pc, #96]	; (800483c <BSP_LCD_DrawPixel+0x88>)
 80047dc:	681b      	ldr	r3, [r3, #0]
 80047de:	4a18      	ldr	r2, [pc, #96]	; (8004840 <BSP_LCD_DrawPixel+0x8c>)
 80047e0:	2134      	movs	r1, #52	; 0x34
 80047e2:	fb01 f303 	mul.w	r3, r1, r3
 80047e6:	4413      	add	r3, r2
 80047e8:	335c      	adds	r3, #92	; 0x5c
 80047ea:	681c      	ldr	r4, [r3, #0]
 80047ec:	88bd      	ldrh	r5, [r7, #4]
 80047ee:	f7ff fb49 	bl	8003e84 <BSP_LCD_GetXSize>
 80047f2:	4603      	mov	r3, r0
 80047f4:	fb03 f205 	mul.w	r2, r3, r5
 80047f8:	88fb      	ldrh	r3, [r7, #6]
 80047fa:	4413      	add	r3, r2
 80047fc:	005b      	lsls	r3, r3, #1
 80047fe:	4423      	add	r3, r4
 8004800:	683a      	ldr	r2, [r7, #0]
 8004802:	b292      	uxth	r2, r2
 8004804:	801a      	strh	r2, [r3, #0]
 8004806:	e015      	b.n	8004834 <BSP_LCD_DrawPixel+0x80>
 8004808:	4b0c      	ldr	r3, [pc, #48]	; (800483c <BSP_LCD_DrawPixel+0x88>)
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	4a0c      	ldr	r2, [pc, #48]	; (8004840 <BSP_LCD_DrawPixel+0x8c>)
 800480e:	2134      	movs	r1, #52	; 0x34
 8004810:	fb01 f303 	mul.w	r3, r1, r3
 8004814:	4413      	add	r3, r2
 8004816:	335c      	adds	r3, #92	; 0x5c
 8004818:	681c      	ldr	r4, [r3, #0]
 800481a:	88bd      	ldrh	r5, [r7, #4]
 800481c:	f7ff fb32 	bl	8003e84 <BSP_LCD_GetXSize>
 8004820:	4603      	mov	r3, r0
 8004822:	fb03 f205 	mul.w	r2, r3, r5
 8004826:	88fb      	ldrh	r3, [r7, #6]
 8004828:	4413      	add	r3, r2
 800482a:	009b      	lsls	r3, r3, #2
 800482c:	4423      	add	r3, r4
 800482e:	461a      	mov	r2, r3
 8004830:	683b      	ldr	r3, [r7, #0]
 8004832:	6013      	str	r3, [r2, #0]
 8004834:	bf00      	nop
 8004836:	3708      	adds	r7, #8
 8004838:	46bd      	mov	sp, r7
 800483a:	bdb0      	pop	{r4, r5, r7, pc}
 800483c:	200017b4 	.word	0x200017b4
 8004840:	2000a030 	.word	0x2000a030

08004844 <BSP_LCD_FillRect>:
 8004844:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004848:	b086      	sub	sp, #24
 800484a:	af02      	add	r7, sp, #8
 800484c:	4604      	mov	r4, r0
 800484e:	4608      	mov	r0, r1
 8004850:	4611      	mov	r1, r2
 8004852:	461a      	mov	r2, r3
 8004854:	4623      	mov	r3, r4
 8004856:	80fb      	strh	r3, [r7, #6]
 8004858:	4603      	mov	r3, r0
 800485a:	80bb      	strh	r3, [r7, #4]
 800485c:	460b      	mov	r3, r1
 800485e:	807b      	strh	r3, [r7, #2]
 8004860:	4613      	mov	r3, r2
 8004862:	803b      	strh	r3, [r7, #0]
 8004864:	2300      	movs	r3, #0
 8004866:	60fb      	str	r3, [r7, #12]
 8004868:	4b30      	ldr	r3, [pc, #192]	; (800492c <BSP_LCD_FillRect+0xe8>)
 800486a:	681a      	ldr	r2, [r3, #0]
 800486c:	4930      	ldr	r1, [pc, #192]	; (8004930 <BSP_LCD_FillRect+0xec>)
 800486e:	4613      	mov	r3, r2
 8004870:	005b      	lsls	r3, r3, #1
 8004872:	4413      	add	r3, r2
 8004874:	009b      	lsls	r3, r3, #2
 8004876:	440b      	add	r3, r1
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	4618      	mov	r0, r3
 800487c:	f7ff fb9a 	bl	8003fb4 <BSP_LCD_SetTextColor>
 8004880:	4b2a      	ldr	r3, [pc, #168]	; (800492c <BSP_LCD_FillRect+0xe8>)
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	4a2b      	ldr	r2, [pc, #172]	; (8004934 <BSP_LCD_FillRect+0xf0>)
 8004886:	2134      	movs	r1, #52	; 0x34
 8004888:	fb01 f303 	mul.w	r3, r1, r3
 800488c:	4413      	add	r3, r2
 800488e:	3348      	adds	r3, #72	; 0x48
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	2b02      	cmp	r3, #2
 8004894:	d114      	bne.n	80048c0 <BSP_LCD_FillRect+0x7c>
 8004896:	4b25      	ldr	r3, [pc, #148]	; (800492c <BSP_LCD_FillRect+0xe8>)
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	4a26      	ldr	r2, [pc, #152]	; (8004934 <BSP_LCD_FillRect+0xf0>)
 800489c:	2134      	movs	r1, #52	; 0x34
 800489e:	fb01 f303 	mul.w	r3, r1, r3
 80048a2:	4413      	add	r3, r2
 80048a4:	335c      	adds	r3, #92	; 0x5c
 80048a6:	681c      	ldr	r4, [r3, #0]
 80048a8:	f7ff faec 	bl	8003e84 <BSP_LCD_GetXSize>
 80048ac:	4602      	mov	r2, r0
 80048ae:	88bb      	ldrh	r3, [r7, #4]
 80048b0:	fb03 f202 	mul.w	r2, r3, r2
 80048b4:	88fb      	ldrh	r3, [r7, #6]
 80048b6:	4413      	add	r3, r2
 80048b8:	005b      	lsls	r3, r3, #1
 80048ba:	4423      	add	r3, r4
 80048bc:	60fb      	str	r3, [r7, #12]
 80048be:	e013      	b.n	80048e8 <BSP_LCD_FillRect+0xa4>
 80048c0:	4b1a      	ldr	r3, [pc, #104]	; (800492c <BSP_LCD_FillRect+0xe8>)
 80048c2:	681b      	ldr	r3, [r3, #0]
 80048c4:	4a1b      	ldr	r2, [pc, #108]	; (8004934 <BSP_LCD_FillRect+0xf0>)
 80048c6:	2134      	movs	r1, #52	; 0x34
 80048c8:	fb01 f303 	mul.w	r3, r1, r3
 80048cc:	4413      	add	r3, r2
 80048ce:	335c      	adds	r3, #92	; 0x5c
 80048d0:	681c      	ldr	r4, [r3, #0]
 80048d2:	f7ff fad7 	bl	8003e84 <BSP_LCD_GetXSize>
 80048d6:	4602      	mov	r2, r0
 80048d8:	88bb      	ldrh	r3, [r7, #4]
 80048da:	fb03 f202 	mul.w	r2, r3, r2
 80048de:	88fb      	ldrh	r3, [r7, #6]
 80048e0:	4413      	add	r3, r2
 80048e2:	009b      	lsls	r3, r3, #2
 80048e4:	4423      	add	r3, r4
 80048e6:	60fb      	str	r3, [r7, #12]
 80048e8:	4b10      	ldr	r3, [pc, #64]	; (800492c <BSP_LCD_FillRect+0xe8>)
 80048ea:	681c      	ldr	r4, [r3, #0]
 80048ec:	68fd      	ldr	r5, [r7, #12]
 80048ee:	887e      	ldrh	r6, [r7, #2]
 80048f0:	f8b7 8000 	ldrh.w	r8, [r7]
 80048f4:	f7ff fac6 	bl	8003e84 <BSP_LCD_GetXSize>
 80048f8:	4602      	mov	r2, r0
 80048fa:	887b      	ldrh	r3, [r7, #2]
 80048fc:	1ad1      	subs	r1, r2, r3
 80048fe:	4b0b      	ldr	r3, [pc, #44]	; (800492c <BSP_LCD_FillRect+0xe8>)
 8004900:	681a      	ldr	r2, [r3, #0]
 8004902:	480b      	ldr	r0, [pc, #44]	; (8004930 <BSP_LCD_FillRect+0xec>)
 8004904:	4613      	mov	r3, r2
 8004906:	005b      	lsls	r3, r3, #1
 8004908:	4413      	add	r3, r2
 800490a:	009b      	lsls	r3, r3, #2
 800490c:	4403      	add	r3, r0
 800490e:	681b      	ldr	r3, [r3, #0]
 8004910:	9301      	str	r3, [sp, #4]
 8004912:	9100      	str	r1, [sp, #0]
 8004914:	4643      	mov	r3, r8
 8004916:	4632      	mov	r2, r6
 8004918:	4629      	mov	r1, r5
 800491a:	4620      	mov	r0, r4
 800491c:	f000 fa78 	bl	8004e10 <LL_FillBuffer>
 8004920:	bf00      	nop
 8004922:	3710      	adds	r7, #16
 8004924:	46bd      	mov	sp, r7
 8004926:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800492a:	bf00      	nop
 800492c:	200017b4 	.word	0x200017b4
 8004930:	200017b8 	.word	0x200017b8
 8004934:	2000a030 	.word	0x2000a030

08004938 <BSP_LCD_FillCircle>:
 8004938:	b580      	push	{r7, lr}
 800493a:	b086      	sub	sp, #24
 800493c:	af00      	add	r7, sp, #0
 800493e:	4603      	mov	r3, r0
 8004940:	80fb      	strh	r3, [r7, #6]
 8004942:	460b      	mov	r3, r1
 8004944:	80bb      	strh	r3, [r7, #4]
 8004946:	4613      	mov	r3, r2
 8004948:	807b      	strh	r3, [r7, #2]
 800494a:	887b      	ldrh	r3, [r7, #2]
 800494c:	005b      	lsls	r3, r3, #1
 800494e:	f1c3 0303 	rsb	r3, r3, #3
 8004952:	617b      	str	r3, [r7, #20]
 8004954:	2300      	movs	r3, #0
 8004956:	613b      	str	r3, [r7, #16]
 8004958:	887b      	ldrh	r3, [r7, #2]
 800495a:	60fb      	str	r3, [r7, #12]
 800495c:	4b44      	ldr	r3, [pc, #272]	; (8004a70 <BSP_LCD_FillCircle+0x138>)
 800495e:	681a      	ldr	r2, [r3, #0]
 8004960:	4944      	ldr	r1, [pc, #272]	; (8004a74 <BSP_LCD_FillCircle+0x13c>)
 8004962:	4613      	mov	r3, r2
 8004964:	005b      	lsls	r3, r3, #1
 8004966:	4413      	add	r3, r2
 8004968:	009b      	lsls	r3, r3, #2
 800496a:	440b      	add	r3, r1
 800496c:	681b      	ldr	r3, [r3, #0]
 800496e:	4618      	mov	r0, r3
 8004970:	f7ff fb20 	bl	8003fb4 <BSP_LCD_SetTextColor>
 8004974:	e061      	b.n	8004a3a <BSP_LCD_FillCircle+0x102>
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	2b00      	cmp	r3, #0
 800497a:	d021      	beq.n	80049c0 <BSP_LCD_FillCircle+0x88>
 800497c:	68fb      	ldr	r3, [r7, #12]
 800497e:	b29b      	uxth	r3, r3
 8004980:	88fa      	ldrh	r2, [r7, #6]
 8004982:	1ad3      	subs	r3, r2, r3
 8004984:	b298      	uxth	r0, r3
 8004986:	693b      	ldr	r3, [r7, #16]
 8004988:	b29a      	uxth	r2, r3
 800498a:	88bb      	ldrh	r3, [r7, #4]
 800498c:	4413      	add	r3, r2
 800498e:	b299      	uxth	r1, r3
 8004990:	68fb      	ldr	r3, [r7, #12]
 8004992:	b29b      	uxth	r3, r3
 8004994:	005b      	lsls	r3, r3, #1
 8004996:	b29b      	uxth	r3, r3
 8004998:	461a      	mov	r2, r3
 800499a:	f7ff fd5b 	bl	8004454 <BSP_LCD_DrawHLine>
 800499e:	68fb      	ldr	r3, [r7, #12]
 80049a0:	b29b      	uxth	r3, r3
 80049a2:	88fa      	ldrh	r2, [r7, #6]
 80049a4:	1ad3      	subs	r3, r2, r3
 80049a6:	b298      	uxth	r0, r3
 80049a8:	693b      	ldr	r3, [r7, #16]
 80049aa:	b29b      	uxth	r3, r3
 80049ac:	88ba      	ldrh	r2, [r7, #4]
 80049ae:	1ad3      	subs	r3, r2, r3
 80049b0:	b299      	uxth	r1, r3
 80049b2:	68fb      	ldr	r3, [r7, #12]
 80049b4:	b29b      	uxth	r3, r3
 80049b6:	005b      	lsls	r3, r3, #1
 80049b8:	b29b      	uxth	r3, r3
 80049ba:	461a      	mov	r2, r3
 80049bc:	f7ff fd4a 	bl	8004454 <BSP_LCD_DrawHLine>
 80049c0:	693b      	ldr	r3, [r7, #16]
 80049c2:	2b00      	cmp	r3, #0
 80049c4:	d021      	beq.n	8004a0a <BSP_LCD_FillCircle+0xd2>
 80049c6:	693b      	ldr	r3, [r7, #16]
 80049c8:	b29b      	uxth	r3, r3
 80049ca:	88fa      	ldrh	r2, [r7, #6]
 80049cc:	1ad3      	subs	r3, r2, r3
 80049ce:	b298      	uxth	r0, r3
 80049d0:	68fb      	ldr	r3, [r7, #12]
 80049d2:	b29b      	uxth	r3, r3
 80049d4:	88ba      	ldrh	r2, [r7, #4]
 80049d6:	1ad3      	subs	r3, r2, r3
 80049d8:	b299      	uxth	r1, r3
 80049da:	693b      	ldr	r3, [r7, #16]
 80049dc:	b29b      	uxth	r3, r3
 80049de:	005b      	lsls	r3, r3, #1
 80049e0:	b29b      	uxth	r3, r3
 80049e2:	461a      	mov	r2, r3
 80049e4:	f7ff fd36 	bl	8004454 <BSP_LCD_DrawHLine>
 80049e8:	693b      	ldr	r3, [r7, #16]
 80049ea:	b29b      	uxth	r3, r3
 80049ec:	88fa      	ldrh	r2, [r7, #6]
 80049ee:	1ad3      	subs	r3, r2, r3
 80049f0:	b298      	uxth	r0, r3
 80049f2:	68fb      	ldr	r3, [r7, #12]
 80049f4:	b29a      	uxth	r2, r3
 80049f6:	88bb      	ldrh	r3, [r7, #4]
 80049f8:	4413      	add	r3, r2
 80049fa:	b299      	uxth	r1, r3
 80049fc:	693b      	ldr	r3, [r7, #16]
 80049fe:	b29b      	uxth	r3, r3
 8004a00:	005b      	lsls	r3, r3, #1
 8004a02:	b29b      	uxth	r3, r3
 8004a04:	461a      	mov	r2, r3
 8004a06:	f7ff fd25 	bl	8004454 <BSP_LCD_DrawHLine>
 8004a0a:	697b      	ldr	r3, [r7, #20]
 8004a0c:	2b00      	cmp	r3, #0
 8004a0e:	da06      	bge.n	8004a1e <BSP_LCD_FillCircle+0xe6>
 8004a10:	693b      	ldr	r3, [r7, #16]
 8004a12:	009a      	lsls	r2, r3, #2
 8004a14:	697b      	ldr	r3, [r7, #20]
 8004a16:	4413      	add	r3, r2
 8004a18:	3306      	adds	r3, #6
 8004a1a:	617b      	str	r3, [r7, #20]
 8004a1c:	e00a      	b.n	8004a34 <BSP_LCD_FillCircle+0xfc>
 8004a1e:	693a      	ldr	r2, [r7, #16]
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	1ad3      	subs	r3, r2, r3
 8004a24:	009a      	lsls	r2, r3, #2
 8004a26:	697b      	ldr	r3, [r7, #20]
 8004a28:	4413      	add	r3, r2
 8004a2a:	330a      	adds	r3, #10
 8004a2c:	617b      	str	r3, [r7, #20]
 8004a2e:	68fb      	ldr	r3, [r7, #12]
 8004a30:	3b01      	subs	r3, #1
 8004a32:	60fb      	str	r3, [r7, #12]
 8004a34:	693b      	ldr	r3, [r7, #16]
 8004a36:	3301      	adds	r3, #1
 8004a38:	613b      	str	r3, [r7, #16]
 8004a3a:	693a      	ldr	r2, [r7, #16]
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	429a      	cmp	r2, r3
 8004a40:	d999      	bls.n	8004976 <BSP_LCD_FillCircle+0x3e>
 8004a42:	4b0b      	ldr	r3, [pc, #44]	; (8004a70 <BSP_LCD_FillCircle+0x138>)
 8004a44:	681a      	ldr	r2, [r3, #0]
 8004a46:	490b      	ldr	r1, [pc, #44]	; (8004a74 <BSP_LCD_FillCircle+0x13c>)
 8004a48:	4613      	mov	r3, r2
 8004a4a:	005b      	lsls	r3, r3, #1
 8004a4c:	4413      	add	r3, r2
 8004a4e:	009b      	lsls	r3, r3, #2
 8004a50:	440b      	add	r3, r1
 8004a52:	681b      	ldr	r3, [r3, #0]
 8004a54:	4618      	mov	r0, r3
 8004a56:	f7ff faad 	bl	8003fb4 <BSP_LCD_SetTextColor>
 8004a5a:	887a      	ldrh	r2, [r7, #2]
 8004a5c:	88b9      	ldrh	r1, [r7, #4]
 8004a5e:	88fb      	ldrh	r3, [r7, #6]
 8004a60:	4618      	mov	r0, r3
 8004a62:	f7ff fdb7 	bl	80045d4 <BSP_LCD_DrawCircle>
 8004a66:	bf00      	nop
 8004a68:	3718      	adds	r7, #24
 8004a6a:	46bd      	mov	sp, r7
 8004a6c:	bd80      	pop	{r7, pc}
 8004a6e:	bf00      	nop
 8004a70:	200017b4 	.word	0x200017b4
 8004a74:	200017b8 	.word	0x200017b8

08004a78 <BSP_LCD_DisplayOn>:
 8004a78:	b580      	push	{r7, lr}
 8004a7a:	af00      	add	r7, sp, #0
 8004a7c:	4b0a      	ldr	r3, [pc, #40]	; (8004aa8 <BSP_LCD_DisplayOn+0x30>)
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	699a      	ldr	r2, [r3, #24]
 8004a82:	4b09      	ldr	r3, [pc, #36]	; (8004aa8 <BSP_LCD_DisplayOn+0x30>)
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	f042 0201 	orr.w	r2, r2, #1
 8004a8a:	619a      	str	r2, [r3, #24]
 8004a8c:	2201      	movs	r2, #1
 8004a8e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8004a92:	4806      	ldr	r0, [pc, #24]	; (8004aac <BSP_LCD_DisplayOn+0x34>)
 8004a94:	f003 f980 	bl	8007d98 <HAL_GPIO_WritePin>
 8004a98:	2201      	movs	r2, #1
 8004a9a:	2108      	movs	r1, #8
 8004a9c:	4804      	ldr	r0, [pc, #16]	; (8004ab0 <BSP_LCD_DisplayOn+0x38>)
 8004a9e:	f003 f97b 	bl	8007d98 <HAL_GPIO_WritePin>
 8004aa2:	bf00      	nop
 8004aa4:	bd80      	pop	{r7, pc}
 8004aa6:	bf00      	nop
 8004aa8:	2000a030 	.word	0x2000a030
 8004aac:	40022000 	.word	0x40022000
 8004ab0:	40022800 	.word	0x40022800

08004ab4 <BSP_LCD_MspInit>:
 8004ab4:	b580      	push	{r7, lr}
 8004ab6:	b090      	sub	sp, #64	; 0x40
 8004ab8:	af00      	add	r7, sp, #0
 8004aba:	6078      	str	r0, [r7, #4]
 8004abc:	6039      	str	r1, [r7, #0]
 8004abe:	4b64      	ldr	r3, [pc, #400]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004ac0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004ac2:	4a63      	ldr	r2, [pc, #396]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004ac4:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8004ac8:	6453      	str	r3, [r2, #68]	; 0x44
 8004aca:	4b61      	ldr	r3, [pc, #388]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004acc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004ace:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8004ad2:	62bb      	str	r3, [r7, #40]	; 0x28
 8004ad4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004ad6:	4b5e      	ldr	r3, [pc, #376]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004ad8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ada:	4a5d      	ldr	r2, [pc, #372]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004adc:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8004ae0:	6313      	str	r3, [r2, #48]	; 0x30
 8004ae2:	4b5b      	ldr	r3, [pc, #364]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ae6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8004aea:	627b      	str	r3, [r7, #36]	; 0x24
 8004aec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004aee:	4b58      	ldr	r3, [pc, #352]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004af0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004af2:	4a57      	ldr	r2, [pc, #348]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004af4:	f043 0310 	orr.w	r3, r3, #16
 8004af8:	6313      	str	r3, [r2, #48]	; 0x30
 8004afa:	4b55      	ldr	r3, [pc, #340]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004afc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004afe:	f003 0310 	and.w	r3, r3, #16
 8004b02:	623b      	str	r3, [r7, #32]
 8004b04:	6a3b      	ldr	r3, [r7, #32]
 8004b06:	4b52      	ldr	r3, [pc, #328]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b0a:	4a51      	ldr	r2, [pc, #324]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b0c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004b10:	6313      	str	r3, [r2, #48]	; 0x30
 8004b12:	4b4f      	ldr	r3, [pc, #316]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004b1a:	61fb      	str	r3, [r7, #28]
 8004b1c:	69fb      	ldr	r3, [r7, #28]
 8004b1e:	4b4c      	ldr	r3, [pc, #304]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b22:	4a4b      	ldr	r2, [pc, #300]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b24:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b28:	6313      	str	r3, [r2, #48]	; 0x30
 8004b2a:	4b49      	ldr	r3, [pc, #292]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b2e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b32:	61bb      	str	r3, [r7, #24]
 8004b34:	69bb      	ldr	r3, [r7, #24]
 8004b36:	4b46      	ldr	r3, [pc, #280]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b3a:	4a45      	ldr	r2, [pc, #276]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b3c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004b40:	6313      	str	r3, [r2, #48]	; 0x30
 8004b42:	4b43      	ldr	r3, [pc, #268]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b46:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004b4a:	617b      	str	r3, [r7, #20]
 8004b4c:	697b      	ldr	r3, [r7, #20]
 8004b4e:	4b40      	ldr	r3, [pc, #256]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b52:	4a3f      	ldr	r2, [pc, #252]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b54:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004b58:	6313      	str	r3, [r2, #48]	; 0x30
 8004b5a:	4b3d      	ldr	r3, [pc, #244]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b5e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004b62:	613b      	str	r3, [r7, #16]
 8004b64:	693b      	ldr	r3, [r7, #16]
 8004b66:	4b3a      	ldr	r3, [pc, #232]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b6a:	4a39      	ldr	r2, [pc, #228]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b6c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b70:	6313      	str	r3, [r2, #48]	; 0x30
 8004b72:	4b37      	ldr	r3, [pc, #220]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b76:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b7a:	60fb      	str	r3, [r7, #12]
 8004b7c:	68fb      	ldr	r3, [r7, #12]
 8004b7e:	4b34      	ldr	r3, [pc, #208]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b82:	4a33      	ldr	r2, [pc, #204]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b84:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004b88:	6313      	str	r3, [r2, #48]	; 0x30
 8004b8a:	4b31      	ldr	r3, [pc, #196]	; (8004c50 <BSP_LCD_MspInit+0x19c>)
 8004b8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b8e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004b92:	60bb      	str	r3, [r7, #8]
 8004b94:	68bb      	ldr	r3, [r7, #8]
 8004b96:	2310      	movs	r3, #16
 8004b98:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b9a:	2302      	movs	r3, #2
 8004b9c:	633b      	str	r3, [r7, #48]	; 0x30
 8004b9e:	2300      	movs	r3, #0
 8004ba0:	637b      	str	r3, [r7, #52]	; 0x34
 8004ba2:	2302      	movs	r3, #2
 8004ba4:	63bb      	str	r3, [r7, #56]	; 0x38
 8004ba6:	230e      	movs	r3, #14
 8004ba8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004baa:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004bae:	4619      	mov	r1, r3
 8004bb0:	4828      	ldr	r0, [pc, #160]	; (8004c54 <BSP_LCD_MspInit+0x1a0>)
 8004bb2:	f002 fe25 	bl	8007800 <HAL_GPIO_Init>
 8004bb6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004bba:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bbc:	2302      	movs	r3, #2
 8004bbe:	633b      	str	r3, [r7, #48]	; 0x30
 8004bc0:	2309      	movs	r3, #9
 8004bc2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004bc4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004bc8:	4619      	mov	r1, r3
 8004bca:	4823      	ldr	r0, [pc, #140]	; (8004c58 <BSP_LCD_MspInit+0x1a4>)
 8004bcc:	f002 fe18 	bl	8007800 <HAL_GPIO_Init>
 8004bd0:	f44f 4366 	mov.w	r3, #58880	; 0xe600
 8004bd4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bd6:	2302      	movs	r3, #2
 8004bd8:	633b      	str	r3, [r7, #48]	; 0x30
 8004bda:	230e      	movs	r3, #14
 8004bdc:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004bde:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004be2:	4619      	mov	r1, r3
 8004be4:	481d      	ldr	r0, [pc, #116]	; (8004c5c <BSP_LCD_MspInit+0x1a8>)
 8004be6:	f002 fe0b 	bl	8007800 <HAL_GPIO_Init>
 8004bea:	f64e 73ff 	movw	r3, #61439	; 0xefff
 8004bee:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bf0:	2302      	movs	r3, #2
 8004bf2:	633b      	str	r3, [r7, #48]	; 0x30
 8004bf4:	230e      	movs	r3, #14
 8004bf6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004bf8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004bfc:	4619      	mov	r1, r3
 8004bfe:	4818      	ldr	r0, [pc, #96]	; (8004c60 <BSP_LCD_MspInit+0x1ac>)
 8004c00:	f002 fdfe 	bl	8007800 <HAL_GPIO_Init>
 8004c04:	23f7      	movs	r3, #247	; 0xf7
 8004c06:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004c08:	2302      	movs	r3, #2
 8004c0a:	633b      	str	r3, [r7, #48]	; 0x30
 8004c0c:	230e      	movs	r3, #14
 8004c0e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004c10:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004c14:	4619      	mov	r1, r3
 8004c16:	4813      	ldr	r0, [pc, #76]	; (8004c64 <BSP_LCD_MspInit+0x1b0>)
 8004c18:	f002 fdf2 	bl	8007800 <HAL_GPIO_Init>
 8004c1c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004c20:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004c22:	2301      	movs	r3, #1
 8004c24:	633b      	str	r3, [r7, #48]	; 0x30
 8004c26:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004c2a:	4619      	mov	r1, r3
 8004c2c:	480b      	ldr	r0, [pc, #44]	; (8004c5c <BSP_LCD_MspInit+0x1a8>)
 8004c2e:	f002 fde7 	bl	8007800 <HAL_GPIO_Init>
 8004c32:	2308      	movs	r3, #8
 8004c34:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004c36:	2301      	movs	r3, #1
 8004c38:	633b      	str	r3, [r7, #48]	; 0x30
 8004c3a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004c3e:	4619      	mov	r1, r3
 8004c40:	4808      	ldr	r0, [pc, #32]	; (8004c64 <BSP_LCD_MspInit+0x1b0>)
 8004c42:	f002 fddd 	bl	8007800 <HAL_GPIO_Init>
 8004c46:	bf00      	nop
 8004c48:	3740      	adds	r7, #64	; 0x40
 8004c4a:	46bd      	mov	sp, r7
 8004c4c:	bd80      	pop	{r7, pc}
 8004c4e:	bf00      	nop
 8004c50:	40023800 	.word	0x40023800
 8004c54:	40021000 	.word	0x40021000
 8004c58:	40021800 	.word	0x40021800
 8004c5c:	40022000 	.word	0x40022000
 8004c60:	40022400 	.word	0x40022400
 8004c64:	40022800 	.word	0x40022800

08004c68 <BSP_LCD_ClockConfig>:
 8004c68:	b580      	push	{r7, lr}
 8004c6a:	b082      	sub	sp, #8
 8004c6c:	af00      	add	r7, sp, #0
 8004c6e:	6078      	str	r0, [r7, #4]
 8004c70:	6039      	str	r1, [r7, #0]
 8004c72:	4b0a      	ldr	r3, [pc, #40]	; (8004c9c <BSP_LCD_ClockConfig+0x34>)
 8004c74:	2208      	movs	r2, #8
 8004c76:	601a      	str	r2, [r3, #0]
 8004c78:	4b08      	ldr	r3, [pc, #32]	; (8004c9c <BSP_LCD_ClockConfig+0x34>)
 8004c7a:	22c0      	movs	r2, #192	; 0xc0
 8004c7c:	615a      	str	r2, [r3, #20]
 8004c7e:	4b07      	ldr	r3, [pc, #28]	; (8004c9c <BSP_LCD_ClockConfig+0x34>)
 8004c80:	2205      	movs	r2, #5
 8004c82:	61da      	str	r2, [r3, #28]
 8004c84:	4b05      	ldr	r3, [pc, #20]	; (8004c9c <BSP_LCD_ClockConfig+0x34>)
 8004c86:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8004c8a:	62da      	str	r2, [r3, #44]	; 0x2c
 8004c8c:	4803      	ldr	r0, [pc, #12]	; (8004c9c <BSP_LCD_ClockConfig+0x34>)
 8004c8e:	f004 fee5 	bl	8009a5c <HAL_RCCEx_PeriphCLKConfig>
 8004c92:	bf00      	nop
 8004c94:	3708      	adds	r7, #8
 8004c96:	46bd      	mov	sp, r7
 8004c98:	bd80      	pop	{r7, pc}
 8004c9a:	bf00      	nop
 8004c9c:	200017d0 	.word	0x200017d0

08004ca0 <DrawChar>:
 8004ca0:	b580      	push	{r7, lr}
 8004ca2:	b088      	sub	sp, #32
 8004ca4:	af00      	add	r7, sp, #0
 8004ca6:	4603      	mov	r3, r0
 8004ca8:	603a      	str	r2, [r7, #0]
 8004caa:	80fb      	strh	r3, [r7, #6]
 8004cac:	460b      	mov	r3, r1
 8004cae:	80bb      	strh	r3, [r7, #4]
 8004cb0:	2300      	movs	r3, #0
 8004cb2:	61fb      	str	r3, [r7, #28]
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	61bb      	str	r3, [r7, #24]
 8004cb8:	4b53      	ldr	r3, [pc, #332]	; (8004e08 <DrawChar+0x168>)
 8004cba:	681a      	ldr	r2, [r3, #0]
 8004cbc:	4953      	ldr	r1, [pc, #332]	; (8004e0c <DrawChar+0x16c>)
 8004cbe:	4613      	mov	r3, r2
 8004cc0:	005b      	lsls	r3, r3, #1
 8004cc2:	4413      	add	r3, r2
 8004cc4:	009b      	lsls	r3, r3, #2
 8004cc6:	440b      	add	r3, r1
 8004cc8:	3308      	adds	r3, #8
 8004cca:	681b      	ldr	r3, [r3, #0]
 8004ccc:	88db      	ldrh	r3, [r3, #6]
 8004cce:	827b      	strh	r3, [r7, #18]
 8004cd0:	4b4d      	ldr	r3, [pc, #308]	; (8004e08 <DrawChar+0x168>)
 8004cd2:	681a      	ldr	r2, [r3, #0]
 8004cd4:	494d      	ldr	r1, [pc, #308]	; (8004e0c <DrawChar+0x16c>)
 8004cd6:	4613      	mov	r3, r2
 8004cd8:	005b      	lsls	r3, r3, #1
 8004cda:	4413      	add	r3, r2
 8004cdc:	009b      	lsls	r3, r3, #2
 8004cde:	440b      	add	r3, r1
 8004ce0:	3308      	adds	r3, #8
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	889b      	ldrh	r3, [r3, #4]
 8004ce6:	823b      	strh	r3, [r7, #16]
 8004ce8:	8a3b      	ldrh	r3, [r7, #16]
 8004cea:	3307      	adds	r3, #7
 8004cec:	2b00      	cmp	r3, #0
 8004cee:	da00      	bge.n	8004cf2 <DrawChar+0x52>
 8004cf0:	3307      	adds	r3, #7
 8004cf2:	10db      	asrs	r3, r3, #3
 8004cf4:	b2db      	uxtb	r3, r3
 8004cf6:	00db      	lsls	r3, r3, #3
 8004cf8:	b2da      	uxtb	r2, r3
 8004cfa:	8a3b      	ldrh	r3, [r7, #16]
 8004cfc:	b2db      	uxtb	r3, r3
 8004cfe:	1ad3      	subs	r3, r2, r3
 8004d00:	73fb      	strb	r3, [r7, #15]
 8004d02:	2300      	movs	r3, #0
 8004d04:	61fb      	str	r3, [r7, #28]
 8004d06:	e076      	b.n	8004df6 <DrawChar+0x156>
 8004d08:	8a3b      	ldrh	r3, [r7, #16]
 8004d0a:	3307      	adds	r3, #7
 8004d0c:	2b00      	cmp	r3, #0
 8004d0e:	da00      	bge.n	8004d12 <DrawChar+0x72>
 8004d10:	3307      	adds	r3, #7
 8004d12:	10db      	asrs	r3, r3, #3
 8004d14:	461a      	mov	r2, r3
 8004d16:	69fb      	ldr	r3, [r7, #28]
 8004d18:	fb03 f302 	mul.w	r3, r3, r2
 8004d1c:	683a      	ldr	r2, [r7, #0]
 8004d1e:	4413      	add	r3, r2
 8004d20:	60bb      	str	r3, [r7, #8]
 8004d22:	8a3b      	ldrh	r3, [r7, #16]
 8004d24:	3307      	adds	r3, #7
 8004d26:	2b00      	cmp	r3, #0
 8004d28:	da00      	bge.n	8004d2c <DrawChar+0x8c>
 8004d2a:	3307      	adds	r3, #7
 8004d2c:	10db      	asrs	r3, r3, #3
 8004d2e:	2b01      	cmp	r3, #1
 8004d30:	d002      	beq.n	8004d38 <DrawChar+0x98>
 8004d32:	2b02      	cmp	r3, #2
 8004d34:	d004      	beq.n	8004d40 <DrawChar+0xa0>
 8004d36:	e00c      	b.n	8004d52 <DrawChar+0xb2>
 8004d38:	68bb      	ldr	r3, [r7, #8]
 8004d3a:	781b      	ldrb	r3, [r3, #0]
 8004d3c:	617b      	str	r3, [r7, #20]
 8004d3e:	e016      	b.n	8004d6e <DrawChar+0xce>
 8004d40:	68bb      	ldr	r3, [r7, #8]
 8004d42:	781b      	ldrb	r3, [r3, #0]
 8004d44:	021b      	lsls	r3, r3, #8
 8004d46:	68ba      	ldr	r2, [r7, #8]
 8004d48:	3201      	adds	r2, #1
 8004d4a:	7812      	ldrb	r2, [r2, #0]
 8004d4c:	4313      	orrs	r3, r2
 8004d4e:	617b      	str	r3, [r7, #20]
 8004d50:	e00d      	b.n	8004d6e <DrawChar+0xce>
 8004d52:	68bb      	ldr	r3, [r7, #8]
 8004d54:	781b      	ldrb	r3, [r3, #0]
 8004d56:	041a      	lsls	r2, r3, #16
 8004d58:	68bb      	ldr	r3, [r7, #8]
 8004d5a:	3301      	adds	r3, #1
 8004d5c:	781b      	ldrb	r3, [r3, #0]
 8004d5e:	021b      	lsls	r3, r3, #8
 8004d60:	4313      	orrs	r3, r2
 8004d62:	68ba      	ldr	r2, [r7, #8]
 8004d64:	3202      	adds	r2, #2
 8004d66:	7812      	ldrb	r2, [r2, #0]
 8004d68:	4313      	orrs	r3, r2
 8004d6a:	617b      	str	r3, [r7, #20]
 8004d6c:	bf00      	nop
 8004d6e:	2300      	movs	r3, #0
 8004d70:	61bb      	str	r3, [r7, #24]
 8004d72:	e036      	b.n	8004de2 <DrawChar+0x142>
 8004d74:	8a3a      	ldrh	r2, [r7, #16]
 8004d76:	69bb      	ldr	r3, [r7, #24]
 8004d78:	1ad2      	subs	r2, r2, r3
 8004d7a:	7bfb      	ldrb	r3, [r7, #15]
 8004d7c:	4413      	add	r3, r2
 8004d7e:	3b01      	subs	r3, #1
 8004d80:	2201      	movs	r2, #1
 8004d82:	fa02 f303 	lsl.w	r3, r2, r3
 8004d86:	461a      	mov	r2, r3
 8004d88:	697b      	ldr	r3, [r7, #20]
 8004d8a:	4013      	ands	r3, r2
 8004d8c:	2b00      	cmp	r3, #0
 8004d8e:	d012      	beq.n	8004db6 <DrawChar+0x116>
 8004d90:	69bb      	ldr	r3, [r7, #24]
 8004d92:	b29a      	uxth	r2, r3
 8004d94:	88fb      	ldrh	r3, [r7, #6]
 8004d96:	4413      	add	r3, r2
 8004d98:	b298      	uxth	r0, r3
 8004d9a:	4b1b      	ldr	r3, [pc, #108]	; (8004e08 <DrawChar+0x168>)
 8004d9c:	681a      	ldr	r2, [r3, #0]
 8004d9e:	491b      	ldr	r1, [pc, #108]	; (8004e0c <DrawChar+0x16c>)
 8004da0:	4613      	mov	r3, r2
 8004da2:	005b      	lsls	r3, r3, #1
 8004da4:	4413      	add	r3, r2
 8004da6:	009b      	lsls	r3, r3, #2
 8004da8:	440b      	add	r3, r1
 8004daa:	681a      	ldr	r2, [r3, #0]
 8004dac:	88bb      	ldrh	r3, [r7, #4]
 8004dae:	4619      	mov	r1, r3
 8004db0:	f7ff fd00 	bl	80047b4 <BSP_LCD_DrawPixel>
 8004db4:	e012      	b.n	8004ddc <DrawChar+0x13c>
 8004db6:	69bb      	ldr	r3, [r7, #24]
 8004db8:	b29a      	uxth	r2, r3
 8004dba:	88fb      	ldrh	r3, [r7, #6]
 8004dbc:	4413      	add	r3, r2
 8004dbe:	b298      	uxth	r0, r3
 8004dc0:	4b11      	ldr	r3, [pc, #68]	; (8004e08 <DrawChar+0x168>)
 8004dc2:	681a      	ldr	r2, [r3, #0]
 8004dc4:	4911      	ldr	r1, [pc, #68]	; (8004e0c <DrawChar+0x16c>)
 8004dc6:	4613      	mov	r3, r2
 8004dc8:	005b      	lsls	r3, r3, #1
 8004dca:	4413      	add	r3, r2
 8004dcc:	009b      	lsls	r3, r3, #2
 8004dce:	440b      	add	r3, r1
 8004dd0:	3304      	adds	r3, #4
 8004dd2:	681a      	ldr	r2, [r3, #0]
 8004dd4:	88bb      	ldrh	r3, [r7, #4]
 8004dd6:	4619      	mov	r1, r3
 8004dd8:	f7ff fcec 	bl	80047b4 <BSP_LCD_DrawPixel>
 8004ddc:	69bb      	ldr	r3, [r7, #24]
 8004dde:	3301      	adds	r3, #1
 8004de0:	61bb      	str	r3, [r7, #24]
 8004de2:	8a3b      	ldrh	r3, [r7, #16]
 8004de4:	69ba      	ldr	r2, [r7, #24]
 8004de6:	429a      	cmp	r2, r3
 8004de8:	d3c4      	bcc.n	8004d74 <DrawChar+0xd4>
 8004dea:	88bb      	ldrh	r3, [r7, #4]
 8004dec:	3301      	adds	r3, #1
 8004dee:	80bb      	strh	r3, [r7, #4]
 8004df0:	69fb      	ldr	r3, [r7, #28]
 8004df2:	3301      	adds	r3, #1
 8004df4:	61fb      	str	r3, [r7, #28]
 8004df6:	8a7b      	ldrh	r3, [r7, #18]
 8004df8:	69fa      	ldr	r2, [r7, #28]
 8004dfa:	429a      	cmp	r2, r3
 8004dfc:	d384      	bcc.n	8004d08 <DrawChar+0x68>
 8004dfe:	bf00      	nop
 8004e00:	3720      	adds	r7, #32
 8004e02:	46bd      	mov	sp, r7
 8004e04:	bd80      	pop	{r7, pc}
 8004e06:	bf00      	nop
 8004e08:	200017b4 	.word	0x200017b4
 8004e0c:	200017b8 	.word	0x200017b8

08004e10 <LL_FillBuffer>:
 8004e10:	b580      	push	{r7, lr}
 8004e12:	b086      	sub	sp, #24
 8004e14:	af02      	add	r7, sp, #8
 8004e16:	60f8      	str	r0, [r7, #12]
 8004e18:	60b9      	str	r1, [r7, #8]
 8004e1a:	607a      	str	r2, [r7, #4]
 8004e1c:	603b      	str	r3, [r7, #0]
 8004e1e:	4b1e      	ldr	r3, [pc, #120]	; (8004e98 <LL_FillBuffer+0x88>)
 8004e20:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004e24:	605a      	str	r2, [r3, #4]
 8004e26:	4b1d      	ldr	r3, [pc, #116]	; (8004e9c <LL_FillBuffer+0x8c>)
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	4a1d      	ldr	r2, [pc, #116]	; (8004ea0 <LL_FillBuffer+0x90>)
 8004e2c:	2134      	movs	r1, #52	; 0x34
 8004e2e:	fb01 f303 	mul.w	r3, r1, r3
 8004e32:	4413      	add	r3, r2
 8004e34:	3348      	adds	r3, #72	; 0x48
 8004e36:	681b      	ldr	r3, [r3, #0]
 8004e38:	2b02      	cmp	r3, #2
 8004e3a:	d103      	bne.n	8004e44 <LL_FillBuffer+0x34>
 8004e3c:	4b16      	ldr	r3, [pc, #88]	; (8004e98 <LL_FillBuffer+0x88>)
 8004e3e:	2202      	movs	r2, #2
 8004e40:	609a      	str	r2, [r3, #8]
 8004e42:	e002      	b.n	8004e4a <LL_FillBuffer+0x3a>
 8004e44:	4b14      	ldr	r3, [pc, #80]	; (8004e98 <LL_FillBuffer+0x88>)
 8004e46:	2200      	movs	r2, #0
 8004e48:	609a      	str	r2, [r3, #8]
 8004e4a:	4a13      	ldr	r2, [pc, #76]	; (8004e98 <LL_FillBuffer+0x88>)
 8004e4c:	69bb      	ldr	r3, [r7, #24]
 8004e4e:	60d3      	str	r3, [r2, #12]
 8004e50:	4b11      	ldr	r3, [pc, #68]	; (8004e98 <LL_FillBuffer+0x88>)
 8004e52:	4a14      	ldr	r2, [pc, #80]	; (8004ea4 <LL_FillBuffer+0x94>)
 8004e54:	601a      	str	r2, [r3, #0]
 8004e56:	4810      	ldr	r0, [pc, #64]	; (8004e98 <LL_FillBuffer+0x88>)
 8004e58:	f002 fa46 	bl	80072e8 <HAL_DMA2D_Init>
 8004e5c:	4603      	mov	r3, r0
 8004e5e:	2b00      	cmp	r3, #0
 8004e60:	d115      	bne.n	8004e8e <LL_FillBuffer+0x7e>
 8004e62:	68f9      	ldr	r1, [r7, #12]
 8004e64:	480c      	ldr	r0, [pc, #48]	; (8004e98 <LL_FillBuffer+0x88>)
 8004e66:	f002 fb9d 	bl	80075a4 <HAL_DMA2D_ConfigLayer>
 8004e6a:	4603      	mov	r3, r0
 8004e6c:	2b00      	cmp	r3, #0
 8004e6e:	d10e      	bne.n	8004e8e <LL_FillBuffer+0x7e>
 8004e70:	68ba      	ldr	r2, [r7, #8]
 8004e72:	683b      	ldr	r3, [r7, #0]
 8004e74:	9300      	str	r3, [sp, #0]
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	69f9      	ldr	r1, [r7, #28]
 8004e7a:	4807      	ldr	r0, [pc, #28]	; (8004e98 <LL_FillBuffer+0x88>)
 8004e7c:	f002 fa7e 	bl	800737c <HAL_DMA2D_Start>
 8004e80:	4603      	mov	r3, r0
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	d103      	bne.n	8004e8e <LL_FillBuffer+0x7e>
 8004e86:	210a      	movs	r1, #10
 8004e88:	4803      	ldr	r0, [pc, #12]	; (8004e98 <LL_FillBuffer+0x88>)
 8004e8a:	f002 faa2 	bl	80073d2 <HAL_DMA2D_PollForTransfer>
 8004e8e:	bf00      	nop
 8004e90:	3710      	adds	r7, #16
 8004e92:	46bd      	mov	sp, r7
 8004e94:	bd80      	pop	{r7, pc}
 8004e96:	bf00      	nop
 8004e98:	20001774 	.word	0x20001774
 8004e9c:	200017b4 	.word	0x200017b4
 8004ea0:	2000a030 	.word	0x2000a030
 8004ea4:	4002b000 	.word	0x4002b000

08004ea8 <BSP_SDRAM_Init>:
 8004ea8:	b580      	push	{r7, lr}
 8004eaa:	af00      	add	r7, sp, #0
 8004eac:	4b29      	ldr	r3, [pc, #164]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004eae:	4a2a      	ldr	r2, [pc, #168]	; (8004f58 <BSP_SDRAM_Init+0xb0>)
 8004eb0:	601a      	str	r2, [r3, #0]
 8004eb2:	4b2a      	ldr	r3, [pc, #168]	; (8004f5c <BSP_SDRAM_Init+0xb4>)
 8004eb4:	2202      	movs	r2, #2
 8004eb6:	601a      	str	r2, [r3, #0]
 8004eb8:	4b28      	ldr	r3, [pc, #160]	; (8004f5c <BSP_SDRAM_Init+0xb4>)
 8004eba:	2207      	movs	r2, #7
 8004ebc:	605a      	str	r2, [r3, #4]
 8004ebe:	4b27      	ldr	r3, [pc, #156]	; (8004f5c <BSP_SDRAM_Init+0xb4>)
 8004ec0:	2204      	movs	r2, #4
 8004ec2:	609a      	str	r2, [r3, #8]
 8004ec4:	4b25      	ldr	r3, [pc, #148]	; (8004f5c <BSP_SDRAM_Init+0xb4>)
 8004ec6:	2207      	movs	r2, #7
 8004ec8:	60da      	str	r2, [r3, #12]
 8004eca:	4b24      	ldr	r3, [pc, #144]	; (8004f5c <BSP_SDRAM_Init+0xb4>)
 8004ecc:	2202      	movs	r2, #2
 8004ece:	611a      	str	r2, [r3, #16]
 8004ed0:	4b22      	ldr	r3, [pc, #136]	; (8004f5c <BSP_SDRAM_Init+0xb4>)
 8004ed2:	2202      	movs	r2, #2
 8004ed4:	615a      	str	r2, [r3, #20]
 8004ed6:	4b21      	ldr	r3, [pc, #132]	; (8004f5c <BSP_SDRAM_Init+0xb4>)
 8004ed8:	2202      	movs	r2, #2
 8004eda:	619a      	str	r2, [r3, #24]
 8004edc:	4b1d      	ldr	r3, [pc, #116]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004ede:	2200      	movs	r2, #0
 8004ee0:	605a      	str	r2, [r3, #4]
 8004ee2:	4b1c      	ldr	r3, [pc, #112]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004ee4:	2200      	movs	r2, #0
 8004ee6:	609a      	str	r2, [r3, #8]
 8004ee8:	4b1a      	ldr	r3, [pc, #104]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004eea:	2204      	movs	r2, #4
 8004eec:	60da      	str	r2, [r3, #12]
 8004eee:	4b19      	ldr	r3, [pc, #100]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004ef0:	2210      	movs	r2, #16
 8004ef2:	611a      	str	r2, [r3, #16]
 8004ef4:	4b17      	ldr	r3, [pc, #92]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004ef6:	2240      	movs	r2, #64	; 0x40
 8004ef8:	615a      	str	r2, [r3, #20]
 8004efa:	4b16      	ldr	r3, [pc, #88]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004efc:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004f00:	619a      	str	r2, [r3, #24]
 8004f02:	4b14      	ldr	r3, [pc, #80]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004f04:	2200      	movs	r2, #0
 8004f06:	61da      	str	r2, [r3, #28]
 8004f08:	4b12      	ldr	r3, [pc, #72]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004f0a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004f0e:	621a      	str	r2, [r3, #32]
 8004f10:	4b10      	ldr	r3, [pc, #64]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004f12:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8004f16:	625a      	str	r2, [r3, #36]	; 0x24
 8004f18:	4b0e      	ldr	r3, [pc, #56]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004f1a:	2200      	movs	r2, #0
 8004f1c:	629a      	str	r2, [r3, #40]	; 0x28
 8004f1e:	2100      	movs	r1, #0
 8004f20:	480c      	ldr	r0, [pc, #48]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004f22:	f000 f87f 	bl	8005024 <BSP_SDRAM_MspInit>
 8004f26:	490d      	ldr	r1, [pc, #52]	; (8004f5c <BSP_SDRAM_Init+0xb4>)
 8004f28:	480a      	ldr	r0, [pc, #40]	; (8004f54 <BSP_SDRAM_Init+0xac>)
 8004f2a:	f005 fd47 	bl	800a9bc <HAL_SDRAM_Init>
 8004f2e:	4603      	mov	r3, r0
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	d003      	beq.n	8004f3c <BSP_SDRAM_Init+0x94>
 8004f34:	4b0a      	ldr	r3, [pc, #40]	; (8004f60 <BSP_SDRAM_Init+0xb8>)
 8004f36:	2201      	movs	r2, #1
 8004f38:	701a      	strb	r2, [r3, #0]
 8004f3a:	e002      	b.n	8004f42 <BSP_SDRAM_Init+0x9a>
 8004f3c:	4b08      	ldr	r3, [pc, #32]	; (8004f60 <BSP_SDRAM_Init+0xb8>)
 8004f3e:	2200      	movs	r2, #0
 8004f40:	701a      	strb	r2, [r3, #0]
 8004f42:	f240 6003 	movw	r0, #1539	; 0x603
 8004f46:	f000 f80d 	bl	8004f64 <BSP_SDRAM_Initialization_sequence>
 8004f4a:	4b05      	ldr	r3, [pc, #20]	; (8004f60 <BSP_SDRAM_Init+0xb8>)
 8004f4c:	781b      	ldrb	r3, [r3, #0]
 8004f4e:	4618      	mov	r0, r3
 8004f50:	bd80      	pop	{r7, pc}
 8004f52:	bf00      	nop
 8004f54:	2000a0d8 	.word	0x2000a0d8
 8004f58:	a0000140 	.word	0xa0000140
 8004f5c:	20001854 	.word	0x20001854
 8004f60:	200013b0 	.word	0x200013b0

08004f64 <BSP_SDRAM_Initialization_sequence>:
 8004f64:	b580      	push	{r7, lr}
 8004f66:	b084      	sub	sp, #16
 8004f68:	af00      	add	r7, sp, #0
 8004f6a:	6078      	str	r0, [r7, #4]
 8004f6c:	2300      	movs	r3, #0
 8004f6e:	60fb      	str	r3, [r7, #12]
 8004f70:	4b2a      	ldr	r3, [pc, #168]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f72:	2201      	movs	r2, #1
 8004f74:	601a      	str	r2, [r3, #0]
 8004f76:	4b29      	ldr	r3, [pc, #164]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f78:	2210      	movs	r2, #16
 8004f7a:	605a      	str	r2, [r3, #4]
 8004f7c:	4b27      	ldr	r3, [pc, #156]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f7e:	2201      	movs	r2, #1
 8004f80:	609a      	str	r2, [r3, #8]
 8004f82:	4b26      	ldr	r3, [pc, #152]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f84:	2200      	movs	r2, #0
 8004f86:	60da      	str	r2, [r3, #12]
 8004f88:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004f8c:	4923      	ldr	r1, [pc, #140]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f8e:	4824      	ldr	r0, [pc, #144]	; (8005020 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8004f90:	f005 fd48 	bl	800aa24 <HAL_SDRAM_SendCommand>
 8004f94:	2001      	movs	r0, #1
 8004f96:	f001 fa1d 	bl	80063d4 <HAL_Delay>
 8004f9a:	4b20      	ldr	r3, [pc, #128]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f9c:	2202      	movs	r2, #2
 8004f9e:	601a      	str	r2, [r3, #0]
 8004fa0:	4b1e      	ldr	r3, [pc, #120]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fa2:	2210      	movs	r2, #16
 8004fa4:	605a      	str	r2, [r3, #4]
 8004fa6:	4b1d      	ldr	r3, [pc, #116]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fa8:	2201      	movs	r2, #1
 8004faa:	609a      	str	r2, [r3, #8]
 8004fac:	4b1b      	ldr	r3, [pc, #108]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fae:	2200      	movs	r2, #0
 8004fb0:	60da      	str	r2, [r3, #12]
 8004fb2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004fb6:	4919      	ldr	r1, [pc, #100]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fb8:	4819      	ldr	r0, [pc, #100]	; (8005020 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8004fba:	f005 fd33 	bl	800aa24 <HAL_SDRAM_SendCommand>
 8004fbe:	4b17      	ldr	r3, [pc, #92]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fc0:	2203      	movs	r2, #3
 8004fc2:	601a      	str	r2, [r3, #0]
 8004fc4:	4b15      	ldr	r3, [pc, #84]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fc6:	2210      	movs	r2, #16
 8004fc8:	605a      	str	r2, [r3, #4]
 8004fca:	4b14      	ldr	r3, [pc, #80]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fcc:	2208      	movs	r2, #8
 8004fce:	609a      	str	r2, [r3, #8]
 8004fd0:	4b12      	ldr	r3, [pc, #72]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fd2:	2200      	movs	r2, #0
 8004fd4:	60da      	str	r2, [r3, #12]
 8004fd6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004fda:	4910      	ldr	r1, [pc, #64]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fdc:	4810      	ldr	r0, [pc, #64]	; (8005020 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8004fde:	f005 fd21 	bl	800aa24 <HAL_SDRAM_SendCommand>
 8004fe2:	f44f 7308 	mov.w	r3, #544	; 0x220
 8004fe6:	60fb      	str	r3, [r7, #12]
 8004fe8:	4b0c      	ldr	r3, [pc, #48]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fea:	2204      	movs	r2, #4
 8004fec:	601a      	str	r2, [r3, #0]
 8004fee:	4b0b      	ldr	r3, [pc, #44]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004ff0:	2210      	movs	r2, #16
 8004ff2:	605a      	str	r2, [r3, #4]
 8004ff4:	4b09      	ldr	r3, [pc, #36]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004ff6:	2201      	movs	r2, #1
 8004ff8:	609a      	str	r2, [r3, #8]
 8004ffa:	68fb      	ldr	r3, [r7, #12]
 8004ffc:	4a07      	ldr	r2, [pc, #28]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004ffe:	60d3      	str	r3, [r2, #12]
 8005000:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005004:	4905      	ldr	r1, [pc, #20]	; (800501c <BSP_SDRAM_Initialization_sequence+0xb8>)
 8005006:	4806      	ldr	r0, [pc, #24]	; (8005020 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8005008:	f005 fd0c 	bl	800aa24 <HAL_SDRAM_SendCommand>
 800500c:	6879      	ldr	r1, [r7, #4]
 800500e:	4804      	ldr	r0, [pc, #16]	; (8005020 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8005010:	f005 fd33 	bl	800aa7a <HAL_SDRAM_ProgramRefreshRate>
 8005014:	bf00      	nop
 8005016:	3710      	adds	r7, #16
 8005018:	46bd      	mov	sp, r7
 800501a:	bd80      	pop	{r7, pc}
 800501c:	20001870 	.word	0x20001870
 8005020:	2000a0d8 	.word	0x2000a0d8

08005024 <BSP_SDRAM_MspInit>:
 8005024:	b580      	push	{r7, lr}
 8005026:	b090      	sub	sp, #64	; 0x40
 8005028:	af00      	add	r7, sp, #0
 800502a:	6078      	str	r0, [r7, #4]
 800502c:	6039      	str	r1, [r7, #0]
 800502e:	4b70      	ldr	r3, [pc, #448]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005030:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005032:	4a6f      	ldr	r2, [pc, #444]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005034:	f043 0301 	orr.w	r3, r3, #1
 8005038:	6393      	str	r3, [r2, #56]	; 0x38
 800503a:	4b6d      	ldr	r3, [pc, #436]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 800503c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800503e:	f003 0301 	and.w	r3, r3, #1
 8005042:	62bb      	str	r3, [r7, #40]	; 0x28
 8005044:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005046:	4b6a      	ldr	r3, [pc, #424]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005048:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800504a:	4a69      	ldr	r2, [pc, #420]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 800504c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8005050:	6313      	str	r3, [r2, #48]	; 0x30
 8005052:	4b67      	ldr	r3, [pc, #412]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005054:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005056:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800505a:	627b      	str	r3, [r7, #36]	; 0x24
 800505c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800505e:	4b64      	ldr	r3, [pc, #400]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005060:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005062:	4a63      	ldr	r2, [pc, #396]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005064:	f043 0304 	orr.w	r3, r3, #4
 8005068:	6313      	str	r3, [r2, #48]	; 0x30
 800506a:	4b61      	ldr	r3, [pc, #388]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 800506c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800506e:	f003 0304 	and.w	r3, r3, #4
 8005072:	623b      	str	r3, [r7, #32]
 8005074:	6a3b      	ldr	r3, [r7, #32]
 8005076:	4b5e      	ldr	r3, [pc, #376]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005078:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800507a:	4a5d      	ldr	r2, [pc, #372]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 800507c:	f043 0308 	orr.w	r3, r3, #8
 8005080:	6313      	str	r3, [r2, #48]	; 0x30
 8005082:	4b5b      	ldr	r3, [pc, #364]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005084:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005086:	f003 0308 	and.w	r3, r3, #8
 800508a:	61fb      	str	r3, [r7, #28]
 800508c:	69fb      	ldr	r3, [r7, #28]
 800508e:	4b58      	ldr	r3, [pc, #352]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005090:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005092:	4a57      	ldr	r2, [pc, #348]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 8005094:	f043 0310 	orr.w	r3, r3, #16
 8005098:	6313      	str	r3, [r2, #48]	; 0x30
 800509a:	4b55      	ldr	r3, [pc, #340]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 800509c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800509e:	f003 0310 	and.w	r3, r3, #16
 80050a2:	61bb      	str	r3, [r7, #24]
 80050a4:	69bb      	ldr	r3, [r7, #24]
 80050a6:	4b52      	ldr	r3, [pc, #328]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 80050a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050aa:	4a51      	ldr	r2, [pc, #324]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 80050ac:	f043 0320 	orr.w	r3, r3, #32
 80050b0:	6313      	str	r3, [r2, #48]	; 0x30
 80050b2:	4b4f      	ldr	r3, [pc, #316]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 80050b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050b6:	f003 0320 	and.w	r3, r3, #32
 80050ba:	617b      	str	r3, [r7, #20]
 80050bc:	697b      	ldr	r3, [r7, #20]
 80050be:	4b4c      	ldr	r3, [pc, #304]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 80050c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050c2:	4a4b      	ldr	r2, [pc, #300]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 80050c4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80050c8:	6313      	str	r3, [r2, #48]	; 0x30
 80050ca:	4b49      	ldr	r3, [pc, #292]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 80050cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050ce:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80050d2:	613b      	str	r3, [r7, #16]
 80050d4:	693b      	ldr	r3, [r7, #16]
 80050d6:	4b46      	ldr	r3, [pc, #280]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 80050d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050da:	4a45      	ldr	r2, [pc, #276]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 80050dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80050e0:	6313      	str	r3, [r2, #48]	; 0x30
 80050e2:	4b43      	ldr	r3, [pc, #268]	; (80051f0 <BSP_SDRAM_MspInit+0x1cc>)
 80050e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80050ea:	60fb      	str	r3, [r7, #12]
 80050ec:	68fb      	ldr	r3, [r7, #12]
 80050ee:	2302      	movs	r3, #2
 80050f0:	633b      	str	r3, [r7, #48]	; 0x30
 80050f2:	2301      	movs	r3, #1
 80050f4:	637b      	str	r3, [r7, #52]	; 0x34
 80050f6:	2302      	movs	r3, #2
 80050f8:	63bb      	str	r3, [r7, #56]	; 0x38
 80050fa:	230c      	movs	r3, #12
 80050fc:	63fb      	str	r3, [r7, #60]	; 0x3c
 80050fe:	2308      	movs	r3, #8
 8005100:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005102:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8005106:	4619      	mov	r1, r3
 8005108:	483a      	ldr	r0, [pc, #232]	; (80051f4 <BSP_SDRAM_MspInit+0x1d0>)
 800510a:	f002 fb79 	bl	8007800 <HAL_GPIO_Init>
 800510e:	f24c 7303 	movw	r3, #50947	; 0xc703
 8005112:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005114:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8005118:	4619      	mov	r1, r3
 800511a:	4837      	ldr	r0, [pc, #220]	; (80051f8 <BSP_SDRAM_MspInit+0x1d4>)
 800511c:	f002 fb70 	bl	8007800 <HAL_GPIO_Init>
 8005120:	f64f 7383 	movw	r3, #65411	; 0xff83
 8005124:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005126:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800512a:	4619      	mov	r1, r3
 800512c:	4833      	ldr	r0, [pc, #204]	; (80051fc <BSP_SDRAM_MspInit+0x1d8>)
 800512e:	f002 fb67 	bl	8007800 <HAL_GPIO_Init>
 8005132:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8005136:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005138:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800513c:	4619      	mov	r1, r3
 800513e:	4830      	ldr	r0, [pc, #192]	; (8005200 <BSP_SDRAM_MspInit+0x1dc>)
 8005140:	f002 fb5e 	bl	8007800 <HAL_GPIO_Init>
 8005144:	f248 1333 	movw	r3, #33075	; 0x8133
 8005148:	62fb      	str	r3, [r7, #44]	; 0x2c
 800514a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800514e:	4619      	mov	r1, r3
 8005150:	482c      	ldr	r0, [pc, #176]	; (8005204 <BSP_SDRAM_MspInit+0x1e0>)
 8005152:	f002 fb55 	bl	8007800 <HAL_GPIO_Init>
 8005156:	2328      	movs	r3, #40	; 0x28
 8005158:	62fb      	str	r3, [r7, #44]	; 0x2c
 800515a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800515e:	4619      	mov	r1, r3
 8005160:	4829      	ldr	r0, [pc, #164]	; (8005208 <BSP_SDRAM_MspInit+0x1e4>)
 8005162:	f002 fb4d 	bl	8007800 <HAL_GPIO_Init>
 8005166:	4b29      	ldr	r3, [pc, #164]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 8005168:	2200      	movs	r2, #0
 800516a:	605a      	str	r2, [r3, #4]
 800516c:	4b27      	ldr	r3, [pc, #156]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 800516e:	2280      	movs	r2, #128	; 0x80
 8005170:	609a      	str	r2, [r3, #8]
 8005172:	4b26      	ldr	r3, [pc, #152]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 8005174:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005178:	60da      	str	r2, [r3, #12]
 800517a:	4b24      	ldr	r3, [pc, #144]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 800517c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8005180:	611a      	str	r2, [r3, #16]
 8005182:	4b22      	ldr	r3, [pc, #136]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 8005184:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8005188:	615a      	str	r2, [r3, #20]
 800518a:	4b20      	ldr	r3, [pc, #128]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 800518c:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8005190:	619a      	str	r2, [r3, #24]
 8005192:	4b1e      	ldr	r3, [pc, #120]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 8005194:	2200      	movs	r2, #0
 8005196:	61da      	str	r2, [r3, #28]
 8005198:	4b1c      	ldr	r3, [pc, #112]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 800519a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800519e:	621a      	str	r2, [r3, #32]
 80051a0:	4b1a      	ldr	r3, [pc, #104]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 80051a2:	2200      	movs	r2, #0
 80051a4:	625a      	str	r2, [r3, #36]	; 0x24
 80051a6:	4b19      	ldr	r3, [pc, #100]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 80051a8:	2203      	movs	r2, #3
 80051aa:	629a      	str	r2, [r3, #40]	; 0x28
 80051ac:	4b17      	ldr	r3, [pc, #92]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 80051ae:	2200      	movs	r2, #0
 80051b0:	62da      	str	r2, [r3, #44]	; 0x2c
 80051b2:	4b16      	ldr	r3, [pc, #88]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 80051b4:	2200      	movs	r2, #0
 80051b6:	631a      	str	r2, [r3, #48]	; 0x30
 80051b8:	4b14      	ldr	r3, [pc, #80]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 80051ba:	4a15      	ldr	r2, [pc, #84]	; (8005210 <BSP_SDRAM_MspInit+0x1ec>)
 80051bc:	601a      	str	r2, [r3, #0]
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	4a12      	ldr	r2, [pc, #72]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 80051c2:	631a      	str	r2, [r3, #48]	; 0x30
 80051c4:	4a11      	ldr	r2, [pc, #68]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	6393      	str	r3, [r2, #56]	; 0x38
 80051ca:	4810      	ldr	r0, [pc, #64]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 80051cc:	f001 ff5c 	bl	8007088 <HAL_DMA_DeInit>
 80051d0:	480e      	ldr	r0, [pc, #56]	; (800520c <BSP_SDRAM_MspInit+0x1e8>)
 80051d2:	f001 feab 	bl	8006f2c <HAL_DMA_Init>
 80051d6:	2200      	movs	r2, #0
 80051d8:	210f      	movs	r1, #15
 80051da:	2038      	movs	r0, #56	; 0x38
 80051dc:	f001 fdae 	bl	8006d3c <HAL_NVIC_SetPriority>
 80051e0:	2038      	movs	r0, #56	; 0x38
 80051e2:	f001 fdc7 	bl	8006d74 <HAL_NVIC_EnableIRQ>
 80051e6:	bf00      	nop
 80051e8:	3740      	adds	r7, #64	; 0x40
 80051ea:	46bd      	mov	sp, r7
 80051ec:	bd80      	pop	{r7, pc}
 80051ee:	bf00      	nop
 80051f0:	40023800 	.word	0x40023800
 80051f4:	40020800 	.word	0x40020800
 80051f8:	40020c00 	.word	0x40020c00
 80051fc:	40021000 	.word	0x40021000
 8005200:	40021400 	.word	0x40021400
 8005204:	40021800 	.word	0x40021800
 8005208:	40021c00 	.word	0x40021c00
 800520c:	20001880 	.word	0x20001880
 8005210:	40026410 	.word	0x40026410

08005214 <BSP_TS_Init>:
 8005214:	b580      	push	{r7, lr}
 8005216:	b084      	sub	sp, #16
 8005218:	af00      	add	r7, sp, #0
 800521a:	4603      	mov	r3, r0
 800521c:	460a      	mov	r2, r1
 800521e:	80fb      	strh	r3, [r7, #6]
 8005220:	4613      	mov	r3, r2
 8005222:	80bb      	strh	r3, [r7, #4]
 8005224:	2300      	movs	r3, #0
 8005226:	73fb      	strb	r3, [r7, #15]
 8005228:	4a14      	ldr	r2, [pc, #80]	; (800527c <BSP_TS_Init+0x68>)
 800522a:	88fb      	ldrh	r3, [r7, #6]
 800522c:	8013      	strh	r3, [r2, #0]
 800522e:	4a14      	ldr	r2, [pc, #80]	; (8005280 <BSP_TS_Init+0x6c>)
 8005230:	88bb      	ldrh	r3, [r7, #4]
 8005232:	8013      	strh	r3, [r2, #0]
 8005234:	4b13      	ldr	r3, [pc, #76]	; (8005284 <BSP_TS_Init+0x70>)
 8005236:	681b      	ldr	r3, [r3, #0]
 8005238:	2070      	movs	r0, #112	; 0x70
 800523a:	4798      	blx	r3
 800523c:	4b11      	ldr	r3, [pc, #68]	; (8005284 <BSP_TS_Init+0x70>)
 800523e:	685b      	ldr	r3, [r3, #4]
 8005240:	2070      	movs	r0, #112	; 0x70
 8005242:	4798      	blx	r3
 8005244:	4603      	mov	r3, r0
 8005246:	2b51      	cmp	r3, #81	; 0x51
 8005248:	d111      	bne.n	800526e <BSP_TS_Init+0x5a>
 800524a:	4b0f      	ldr	r3, [pc, #60]	; (8005288 <BSP_TS_Init+0x74>)
 800524c:	4a0d      	ldr	r2, [pc, #52]	; (8005284 <BSP_TS_Init+0x70>)
 800524e:	601a      	str	r2, [r3, #0]
 8005250:	4b0e      	ldr	r3, [pc, #56]	; (800528c <BSP_TS_Init+0x78>)
 8005252:	2270      	movs	r2, #112	; 0x70
 8005254:	701a      	strb	r2, [r3, #0]
 8005256:	4b0e      	ldr	r3, [pc, #56]	; (8005290 <BSP_TS_Init+0x7c>)
 8005258:	2208      	movs	r2, #8
 800525a:	701a      	strb	r2, [r3, #0]
 800525c:	4b0a      	ldr	r3, [pc, #40]	; (8005288 <BSP_TS_Init+0x74>)
 800525e:	681b      	ldr	r3, [r3, #0]
 8005260:	68db      	ldr	r3, [r3, #12]
 8005262:	4a0a      	ldr	r2, [pc, #40]	; (800528c <BSP_TS_Init+0x78>)
 8005264:	7812      	ldrb	r2, [r2, #0]
 8005266:	b292      	uxth	r2, r2
 8005268:	4610      	mov	r0, r2
 800526a:	4798      	blx	r3
 800526c:	e001      	b.n	8005272 <BSP_TS_Init+0x5e>
 800526e:	2303      	movs	r3, #3
 8005270:	73fb      	strb	r3, [r7, #15]
 8005272:	7bfb      	ldrb	r3, [r7, #15]
 8005274:	4618      	mov	r0, r3
 8005276:	3710      	adds	r7, #16
 8005278:	46bd      	mov	sp, r7
 800527a:	bd80      	pop	{r7, pc}
 800527c:	200018e4 	.word	0x200018e4
 8005280:	200018e6 	.word	0x200018e6
 8005284:	20000000 	.word	0x20000000
 8005288:	200018e0 	.word	0x200018e0
 800528c:	200018e9 	.word	0x200018e9
 8005290:	200018e8 	.word	0x200018e8

08005294 <BSP_TS_GetState>:
 8005294:	b590      	push	{r4, r7, lr}
 8005296:	b097      	sub	sp, #92	; 0x5c
 8005298:	af02      	add	r7, sp, #8
 800529a:	6078      	str	r0, [r7, #4]
 800529c:	2300      	movs	r3, #0
 800529e:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80052a2:	2300      	movs	r3, #0
 80052a4:	613b      	str	r3, [r7, #16]
 80052a6:	2300      	movs	r3, #0
 80052a8:	60fb      	str	r3, [r7, #12]
 80052aa:	2300      	movs	r3, #0
 80052ac:	60bb      	str	r3, [r7, #8]
 80052ae:	4b97      	ldr	r3, [pc, #604]	; (800550c <BSP_TS_GetState+0x278>)
 80052b0:	681b      	ldr	r3, [r3, #0]
 80052b2:	691b      	ldr	r3, [r3, #16]
 80052b4:	4a96      	ldr	r2, [pc, #600]	; (8005510 <BSP_TS_GetState+0x27c>)
 80052b6:	7812      	ldrb	r2, [r2, #0]
 80052b8:	b292      	uxth	r2, r2
 80052ba:	4610      	mov	r0, r2
 80052bc:	4798      	blx	r3
 80052be:	4603      	mov	r3, r0
 80052c0:	461a      	mov	r2, r3
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	701a      	strb	r2, [r3, #0]
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	781b      	ldrb	r3, [r3, #0]
 80052ca:	2b00      	cmp	r3, #0
 80052cc:	f000 81a8 	beq.w	8005620 <BSP_TS_GetState+0x38c>
 80052d0:	2300      	movs	r3, #0
 80052d2:	64bb      	str	r3, [r7, #72]	; 0x48
 80052d4:	e197      	b.n	8005606 <BSP_TS_GetState+0x372>
 80052d6:	4b8d      	ldr	r3, [pc, #564]	; (800550c <BSP_TS_GetState+0x278>)
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	695b      	ldr	r3, [r3, #20]
 80052dc:	4a8c      	ldr	r2, [pc, #560]	; (8005510 <BSP_TS_GetState+0x27c>)
 80052de:	7812      	ldrb	r2, [r2, #0]
 80052e0:	b290      	uxth	r0, r2
 80052e2:	f107 0120 	add.w	r1, r7, #32
 80052e6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80052e8:	0052      	lsls	r2, r2, #1
 80052ea:	188c      	adds	r4, r1, r2
 80052ec:	f107 0114 	add.w	r1, r7, #20
 80052f0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80052f2:	0052      	lsls	r2, r2, #1
 80052f4:	440a      	add	r2, r1
 80052f6:	4621      	mov	r1, r4
 80052f8:	4798      	blx	r3
 80052fa:	4b86      	ldr	r3, [pc, #536]	; (8005514 <BSP_TS_GetState+0x280>)
 80052fc:	781b      	ldrb	r3, [r3, #0]
 80052fe:	2b01      	cmp	r3, #1
 8005300:	d11b      	bne.n	800533a <BSP_TS_GetState+0xa6>
 8005302:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005304:	005b      	lsls	r3, r3, #1
 8005306:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800530a:	4413      	add	r3, r2
 800530c:	f833 2c30 	ldrh.w	r2, [r3, #-48]
 8005310:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005312:	005b      	lsls	r3, r3, #1
 8005314:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005318:	440b      	add	r3, r1
 800531a:	f823 2c18 	strh.w	r2, [r3, #-24]
 800531e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005320:	005b      	lsls	r3, r3, #1
 8005322:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8005326:	4413      	add	r3, r2
 8005328:	f833 2c3c 	ldrh.w	r2, [r3, #-60]
 800532c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800532e:	005b      	lsls	r3, r3, #1
 8005330:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005334:	440b      	add	r3, r1
 8005336:	f823 2c24 	strh.w	r2, [r3, #-36]
 800533a:	4b76      	ldr	r3, [pc, #472]	; (8005514 <BSP_TS_GetState+0x280>)
 800533c:	781b      	ldrb	r3, [r3, #0]
 800533e:	f003 0302 	and.w	r3, r3, #2
 8005342:	2b00      	cmp	r3, #0
 8005344:	d010      	beq.n	8005368 <BSP_TS_GetState+0xd4>
 8005346:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005348:	005b      	lsls	r3, r3, #1
 800534a:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800534e:	4413      	add	r3, r2
 8005350:	f833 3c30 	ldrh.w	r3, [r3, #-48]
 8005354:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
 8005358:	b29a      	uxth	r2, r3
 800535a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800535c:	005b      	lsls	r3, r3, #1
 800535e:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005362:	440b      	add	r3, r1
 8005364:	f823 2c18 	strh.w	r2, [r3, #-24]
 8005368:	4b6a      	ldr	r3, [pc, #424]	; (8005514 <BSP_TS_GetState+0x280>)
 800536a:	781b      	ldrb	r3, [r3, #0]
 800536c:	f003 0304 	and.w	r3, r3, #4
 8005370:	2b00      	cmp	r3, #0
 8005372:	d010      	beq.n	8005396 <BSP_TS_GetState+0x102>
 8005374:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005376:	005b      	lsls	r3, r3, #1
 8005378:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800537c:	4413      	add	r3, r2
 800537e:	f833 3c3c 	ldrh.w	r3, [r3, #-60]
 8005382:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
 8005386:	b29a      	uxth	r2, r3
 8005388:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800538a:	005b      	lsls	r3, r3, #1
 800538c:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005390:	440b      	add	r3, r1
 8005392:	f823 2c24 	strh.w	r2, [r3, #-36]
 8005396:	4b5f      	ldr	r3, [pc, #380]	; (8005514 <BSP_TS_GetState+0x280>)
 8005398:	781b      	ldrb	r3, [r3, #0]
 800539a:	f003 0308 	and.w	r3, r3, #8
 800539e:	2b00      	cmp	r3, #0
 80053a0:	d01b      	beq.n	80053da <BSP_TS_GetState+0x146>
 80053a2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053a4:	005b      	lsls	r3, r3, #1
 80053a6:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80053aa:	4413      	add	r3, r2
 80053ac:	f833 2c30 	ldrh.w	r2, [r3, #-48]
 80053b0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053b2:	005b      	lsls	r3, r3, #1
 80053b4:	f107 0150 	add.w	r1, r7, #80	; 0x50
 80053b8:	440b      	add	r3, r1
 80053ba:	f823 2c24 	strh.w	r2, [r3, #-36]
 80053be:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053c0:	005b      	lsls	r3, r3, #1
 80053c2:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80053c6:	4413      	add	r3, r2
 80053c8:	f833 2c3c 	ldrh.w	r2, [r3, #-60]
 80053cc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053ce:	005b      	lsls	r3, r3, #1
 80053d0:	f107 0150 	add.w	r1, r7, #80	; 0x50
 80053d4:	440b      	add	r3, r1
 80053d6:	f823 2c18 	strh.w	r2, [r3, #-24]
 80053da:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053dc:	005b      	lsls	r3, r3, #1
 80053de:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80053e2:	4413      	add	r3, r2
 80053e4:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 80053e8:	4619      	mov	r1, r3
 80053ea:	4a4b      	ldr	r2, [pc, #300]	; (8005518 <BSP_TS_GetState+0x284>)
 80053ec:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053ee:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80053f2:	4299      	cmp	r1, r3
 80053f4:	d90e      	bls.n	8005414 <BSP_TS_GetState+0x180>
 80053f6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053f8:	005b      	lsls	r3, r3, #1
 80053fa:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80053fe:	4413      	add	r3, r2
 8005400:	f833 2c18 	ldrh.w	r2, [r3, #-24]
 8005404:	4944      	ldr	r1, [pc, #272]	; (8005518 <BSP_TS_GetState+0x284>)
 8005406:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005408:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800540c:	b29b      	uxth	r3, r3
 800540e:	1ad3      	subs	r3, r2, r3
 8005410:	b29b      	uxth	r3, r3
 8005412:	e00d      	b.n	8005430 <BSP_TS_GetState+0x19c>
 8005414:	4a40      	ldr	r2, [pc, #256]	; (8005518 <BSP_TS_GetState+0x284>)
 8005416:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005418:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800541c:	b29a      	uxth	r2, r3
 800541e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005420:	005b      	lsls	r3, r3, #1
 8005422:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005426:	440b      	add	r3, r1
 8005428:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 800542c:	1ad3      	subs	r3, r2, r3
 800542e:	b29b      	uxth	r3, r3
 8005430:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8005434:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005436:	005b      	lsls	r3, r3, #1
 8005438:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800543c:	4413      	add	r3, r2
 800543e:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 8005442:	4619      	mov	r1, r3
 8005444:	4a35      	ldr	r2, [pc, #212]	; (800551c <BSP_TS_GetState+0x288>)
 8005446:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005448:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800544c:	4299      	cmp	r1, r3
 800544e:	d90e      	bls.n	800546e <BSP_TS_GetState+0x1da>
 8005450:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005452:	005b      	lsls	r3, r3, #1
 8005454:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8005458:	4413      	add	r3, r2
 800545a:	f833 2c24 	ldrh.w	r2, [r3, #-36]
 800545e:	492f      	ldr	r1, [pc, #188]	; (800551c <BSP_TS_GetState+0x288>)
 8005460:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005462:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8005466:	b29b      	uxth	r3, r3
 8005468:	1ad3      	subs	r3, r2, r3
 800546a:	b29b      	uxth	r3, r3
 800546c:	e00d      	b.n	800548a <BSP_TS_GetState+0x1f6>
 800546e:	4a2b      	ldr	r2, [pc, #172]	; (800551c <BSP_TS_GetState+0x288>)
 8005470:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005472:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005476:	b29a      	uxth	r2, r3
 8005478:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800547a:	005b      	lsls	r3, r3, #1
 800547c:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005480:	440b      	add	r3, r1
 8005482:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 8005486:	1ad3      	subs	r3, r2, r3
 8005488:	b29b      	uxth	r3, r3
 800548a:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
 800548e:	f8b7 2046 	ldrh.w	r2, [r7, #70]	; 0x46
 8005492:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 8005496:	4413      	add	r3, r2
 8005498:	2b05      	cmp	r3, #5
 800549a:	dd17      	ble.n	80054cc <BSP_TS_GetState+0x238>
 800549c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800549e:	005b      	lsls	r3, r3, #1
 80054a0:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80054a4:	4413      	add	r3, r2
 80054a6:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 80054aa:	4619      	mov	r1, r3
 80054ac:	4a1a      	ldr	r2, [pc, #104]	; (8005518 <BSP_TS_GetState+0x284>)
 80054ae:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054b0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80054b4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054b6:	005b      	lsls	r3, r3, #1
 80054b8:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80054bc:	4413      	add	r3, r2
 80054be:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 80054c2:	4619      	mov	r1, r3
 80054c4:	4a15      	ldr	r2, [pc, #84]	; (800551c <BSP_TS_GetState+0x288>)
 80054c6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054c8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80054cc:	4b10      	ldr	r3, [pc, #64]	; (8005510 <BSP_TS_GetState+0x27c>)
 80054ce:	781b      	ldrb	r3, [r3, #0]
 80054d0:	2b70      	cmp	r3, #112	; 0x70
 80054d2:	d125      	bne.n	8005520 <BSP_TS_GetState+0x28c>
 80054d4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054d6:	005b      	lsls	r3, r3, #1
 80054d8:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80054dc:	4413      	add	r3, r2
 80054de:	f833 1c18 	ldrh.w	r1, [r3, #-24]
 80054e2:	687a      	ldr	r2, [r7, #4]
 80054e4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054e6:	005b      	lsls	r3, r3, #1
 80054e8:	4413      	add	r3, r2
 80054ea:	460a      	mov	r2, r1
 80054ec:	805a      	strh	r2, [r3, #2]
 80054ee:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054f0:	005b      	lsls	r3, r3, #1
 80054f2:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80054f6:	4413      	add	r3, r2
 80054f8:	f833 1c24 	ldrh.w	r1, [r3, #-36]
 80054fc:	687a      	ldr	r2, [r7, #4]
 80054fe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005500:	3304      	adds	r3, #4
 8005502:	005b      	lsls	r3, r3, #1
 8005504:	4413      	add	r3, r2
 8005506:	460a      	mov	r2, r1
 8005508:	809a      	strh	r2, [r3, #4]
 800550a:	e02c      	b.n	8005566 <BSP_TS_GetState+0x2d2>
 800550c:	200018e0 	.word	0x200018e0
 8005510:	200018e9 	.word	0x200018e9
 8005514:	200018e8 	.word	0x200018e8
 8005518:	200018ec 	.word	0x200018ec
 800551c:	20001900 	.word	0x20001900
 8005520:	4b42      	ldr	r3, [pc, #264]	; (800562c <BSP_TS_GetState+0x398>)
 8005522:	881b      	ldrh	r3, [r3, #0]
 8005524:	4619      	mov	r1, r3
 8005526:	4a42      	ldr	r2, [pc, #264]	; (8005630 <BSP_TS_GetState+0x39c>)
 8005528:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800552a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800552e:	fb03 f301 	mul.w	r3, r3, r1
 8005532:	0b1b      	lsrs	r3, r3, #12
 8005534:	b299      	uxth	r1, r3
 8005536:	687a      	ldr	r2, [r7, #4]
 8005538:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800553a:	005b      	lsls	r3, r3, #1
 800553c:	4413      	add	r3, r2
 800553e:	460a      	mov	r2, r1
 8005540:	805a      	strh	r2, [r3, #2]
 8005542:	4b3c      	ldr	r3, [pc, #240]	; (8005634 <BSP_TS_GetState+0x3a0>)
 8005544:	881b      	ldrh	r3, [r3, #0]
 8005546:	4619      	mov	r1, r3
 8005548:	4a3b      	ldr	r2, [pc, #236]	; (8005638 <BSP_TS_GetState+0x3a4>)
 800554a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800554c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005550:	fb03 f301 	mul.w	r3, r3, r1
 8005554:	0b1b      	lsrs	r3, r3, #12
 8005556:	b299      	uxth	r1, r3
 8005558:	687a      	ldr	r2, [r7, #4]
 800555a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800555c:	3304      	adds	r3, #4
 800555e:	005b      	lsls	r3, r3, #1
 8005560:	4413      	add	r3, r2
 8005562:	460a      	mov	r2, r1
 8005564:	809a      	strh	r2, [r3, #4]
 8005566:	4b35      	ldr	r3, [pc, #212]	; (800563c <BSP_TS_GetState+0x3a8>)
 8005568:	781b      	ldrb	r3, [r3, #0]
 800556a:	b298      	uxth	r0, r3
 800556c:	f107 010c 	add.w	r1, r7, #12
 8005570:	f107 0210 	add.w	r2, r7, #16
 8005574:	f107 0308 	add.w	r3, r7, #8
 8005578:	9300      	str	r3, [sp, #0]
 800557a:	460b      	mov	r3, r1
 800557c:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800557e:	f7fb fa15 	bl	80009ac <ft5336_TS_GetTouchInfo>
 8005582:	693b      	ldr	r3, [r7, #16]
 8005584:	b2d9      	uxtb	r1, r3
 8005586:	687a      	ldr	r2, [r7, #4]
 8005588:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800558a:	4413      	add	r3, r2
 800558c:	3316      	adds	r3, #22
 800558e:	460a      	mov	r2, r1
 8005590:	701a      	strb	r2, [r3, #0]
 8005592:	68fb      	ldr	r3, [r7, #12]
 8005594:	b2d9      	uxtb	r1, r3
 8005596:	687a      	ldr	r2, [r7, #4]
 8005598:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800559a:	4413      	add	r3, r2
 800559c:	3320      	adds	r3, #32
 800559e:	460a      	mov	r2, r1
 80055a0:	701a      	strb	r2, [r3, #0]
 80055a2:	68bb      	ldr	r3, [r7, #8]
 80055a4:	2b03      	cmp	r3, #3
 80055a6:	d827      	bhi.n	80055f8 <BSP_TS_GetState+0x364>
 80055a8:	a201      	add	r2, pc, #4	; (adr r2, 80055b0 <BSP_TS_GetState+0x31c>)
 80055aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80055ae:	bf00      	nop
 80055b0:	080055c1 	.word	0x080055c1
 80055b4:	080055cf 	.word	0x080055cf
 80055b8:	080055dd 	.word	0x080055dd
 80055bc:	080055eb 	.word	0x080055eb
 80055c0:	687a      	ldr	r2, [r7, #4]
 80055c2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055c4:	4413      	add	r3, r2
 80055c6:	331b      	adds	r3, #27
 80055c8:	2201      	movs	r2, #1
 80055ca:	701a      	strb	r2, [r3, #0]
 80055cc:	e018      	b.n	8005600 <BSP_TS_GetState+0x36c>
 80055ce:	687a      	ldr	r2, [r7, #4]
 80055d0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055d2:	4413      	add	r3, r2
 80055d4:	331b      	adds	r3, #27
 80055d6:	2202      	movs	r2, #2
 80055d8:	701a      	strb	r2, [r3, #0]
 80055da:	e011      	b.n	8005600 <BSP_TS_GetState+0x36c>
 80055dc:	687a      	ldr	r2, [r7, #4]
 80055de:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055e0:	4413      	add	r3, r2
 80055e2:	331b      	adds	r3, #27
 80055e4:	2203      	movs	r2, #3
 80055e6:	701a      	strb	r2, [r3, #0]
 80055e8:	e00a      	b.n	8005600 <BSP_TS_GetState+0x36c>
 80055ea:	687a      	ldr	r2, [r7, #4]
 80055ec:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055ee:	4413      	add	r3, r2
 80055f0:	331b      	adds	r3, #27
 80055f2:	2200      	movs	r2, #0
 80055f4:	701a      	strb	r2, [r3, #0]
 80055f6:	e003      	b.n	8005600 <BSP_TS_GetState+0x36c>
 80055f8:	2301      	movs	r3, #1
 80055fa:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80055fe:	bf00      	nop
 8005600:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005602:	3301      	adds	r3, #1
 8005604:	64bb      	str	r3, [r7, #72]	; 0x48
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	781b      	ldrb	r3, [r3, #0]
 800560a:	461a      	mov	r2, r3
 800560c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800560e:	4293      	cmp	r3, r2
 8005610:	f4ff ae61 	bcc.w	80052d6 <BSP_TS_GetState+0x42>
 8005614:	6878      	ldr	r0, [r7, #4]
 8005616:	f000 f813 	bl	8005640 <BSP_TS_Get_GestureId>
 800561a:	4603      	mov	r3, r0
 800561c:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8005620:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8005624:	4618      	mov	r0, r3
 8005626:	3754      	adds	r7, #84	; 0x54
 8005628:	46bd      	mov	sp, r7
 800562a:	bd90      	pop	{r4, r7, pc}
 800562c:	200018e4 	.word	0x200018e4
 8005630:	200018ec 	.word	0x200018ec
 8005634:	200018e6 	.word	0x200018e6
 8005638:	20001900 	.word	0x20001900
 800563c:	200018e9 	.word	0x200018e9

08005640 <BSP_TS_Get_GestureId>:
 8005640:	b580      	push	{r7, lr}
 8005642:	b084      	sub	sp, #16
 8005644:	af00      	add	r7, sp, #0
 8005646:	6078      	str	r0, [r7, #4]
 8005648:	2300      	movs	r3, #0
 800564a:	60bb      	str	r3, [r7, #8]
 800564c:	2300      	movs	r3, #0
 800564e:	73fb      	strb	r3, [r7, #15]
 8005650:	4b1f      	ldr	r3, [pc, #124]	; (80056d0 <BSP_TS_Get_GestureId+0x90>)
 8005652:	781b      	ldrb	r3, [r3, #0]
 8005654:	b29b      	uxth	r3, r3
 8005656:	f107 0208 	add.w	r2, r7, #8
 800565a:	4611      	mov	r1, r2
 800565c:	4618      	mov	r0, r3
 800565e:	f7fb f98c 	bl	800097a <ft5336_TS_GetGestureID>
 8005662:	68bb      	ldr	r3, [r7, #8]
 8005664:	2b18      	cmp	r3, #24
 8005666:	d01b      	beq.n	80056a0 <BSP_TS_Get_GestureId+0x60>
 8005668:	2b18      	cmp	r3, #24
 800566a:	d806      	bhi.n	800567a <BSP_TS_Get_GestureId+0x3a>
 800566c:	2b10      	cmp	r3, #16
 800566e:	d00f      	beq.n	8005690 <BSP_TS_Get_GestureId+0x50>
 8005670:	2b14      	cmp	r3, #20
 8005672:	d011      	beq.n	8005698 <BSP_TS_Get_GestureId+0x58>
 8005674:	2b00      	cmp	r3, #0
 8005676:	d007      	beq.n	8005688 <BSP_TS_Get_GestureId+0x48>
 8005678:	e022      	b.n	80056c0 <BSP_TS_Get_GestureId+0x80>
 800567a:	2b40      	cmp	r3, #64	; 0x40
 800567c:	d018      	beq.n	80056b0 <BSP_TS_Get_GestureId+0x70>
 800567e:	2b49      	cmp	r3, #73	; 0x49
 8005680:	d01a      	beq.n	80056b8 <BSP_TS_Get_GestureId+0x78>
 8005682:	2b1c      	cmp	r3, #28
 8005684:	d010      	beq.n	80056a8 <BSP_TS_Get_GestureId+0x68>
 8005686:	e01b      	b.n	80056c0 <BSP_TS_Get_GestureId+0x80>
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	2200      	movs	r2, #0
 800568c:	629a      	str	r2, [r3, #40]	; 0x28
 800568e:	e01a      	b.n	80056c6 <BSP_TS_Get_GestureId+0x86>
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	2201      	movs	r2, #1
 8005694:	629a      	str	r2, [r3, #40]	; 0x28
 8005696:	e016      	b.n	80056c6 <BSP_TS_Get_GestureId+0x86>
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	2202      	movs	r2, #2
 800569c:	629a      	str	r2, [r3, #40]	; 0x28
 800569e:	e012      	b.n	80056c6 <BSP_TS_Get_GestureId+0x86>
 80056a0:	687b      	ldr	r3, [r7, #4]
 80056a2:	2203      	movs	r2, #3
 80056a4:	629a      	str	r2, [r3, #40]	; 0x28
 80056a6:	e00e      	b.n	80056c6 <BSP_TS_Get_GestureId+0x86>
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	2204      	movs	r2, #4
 80056ac:	629a      	str	r2, [r3, #40]	; 0x28
 80056ae:	e00a      	b.n	80056c6 <BSP_TS_Get_GestureId+0x86>
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	2205      	movs	r2, #5
 80056b4:	629a      	str	r2, [r3, #40]	; 0x28
 80056b6:	e006      	b.n	80056c6 <BSP_TS_Get_GestureId+0x86>
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	2206      	movs	r2, #6
 80056bc:	629a      	str	r2, [r3, #40]	; 0x28
 80056be:	e002      	b.n	80056c6 <BSP_TS_Get_GestureId+0x86>
 80056c0:	2301      	movs	r3, #1
 80056c2:	73fb      	strb	r3, [r7, #15]
 80056c4:	bf00      	nop
 80056c6:	7bfb      	ldrb	r3, [r7, #15]
 80056c8:	4618      	mov	r0, r3
 80056ca:	3710      	adds	r7, #16
 80056cc:	46bd      	mov	sp, r7
 80056ce:	bd80      	pop	{r7, pc}
 80056d0:	200018e9 	.word	0x200018e9

080056d4 <HAL_MspInit>:
 80056d4:	b580      	push	{r7, lr}
 80056d6:	b082      	sub	sp, #8
 80056d8:	af00      	add	r7, sp, #0
 80056da:	4b11      	ldr	r3, [pc, #68]	; (8005720 <HAL_MspInit+0x4c>)
 80056dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80056de:	4a10      	ldr	r2, [pc, #64]	; (8005720 <HAL_MspInit+0x4c>)
 80056e0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80056e4:	6413      	str	r3, [r2, #64]	; 0x40
 80056e6:	4b0e      	ldr	r3, [pc, #56]	; (8005720 <HAL_MspInit+0x4c>)
 80056e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80056ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80056ee:	607b      	str	r3, [r7, #4]
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	4b0b      	ldr	r3, [pc, #44]	; (8005720 <HAL_MspInit+0x4c>)
 80056f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80056f6:	4a0a      	ldr	r2, [pc, #40]	; (8005720 <HAL_MspInit+0x4c>)
 80056f8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80056fc:	6453      	str	r3, [r2, #68]	; 0x44
 80056fe:	4b08      	ldr	r3, [pc, #32]	; (8005720 <HAL_MspInit+0x4c>)
 8005700:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005702:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005706:	603b      	str	r3, [r7, #0]
 8005708:	683b      	ldr	r3, [r7, #0]
 800570a:	2200      	movs	r2, #0
 800570c:	210f      	movs	r1, #15
 800570e:	f06f 0001 	mvn.w	r0, #1
 8005712:	f001 fb13 	bl	8006d3c <HAL_NVIC_SetPriority>
 8005716:	bf00      	nop
 8005718:	3708      	adds	r7, #8
 800571a:	46bd      	mov	sp, r7
 800571c:	bd80      	pop	{r7, pc}
 800571e:	bf00      	nop
 8005720:	40023800 	.word	0x40023800

08005724 <HAL_ADC_MspInit>:
 8005724:	b580      	push	{r7, lr}
 8005726:	b08c      	sub	sp, #48	; 0x30
 8005728:	af00      	add	r7, sp, #0
 800572a:	6078      	str	r0, [r7, #4]
 800572c:	f107 031c 	add.w	r3, r7, #28
 8005730:	2200      	movs	r2, #0
 8005732:	601a      	str	r2, [r3, #0]
 8005734:	605a      	str	r2, [r3, #4]
 8005736:	609a      	str	r2, [r3, #8]
 8005738:	60da      	str	r2, [r3, #12]
 800573a:	611a      	str	r2, [r3, #16]
 800573c:	687b      	ldr	r3, [r7, #4]
 800573e:	681b      	ldr	r3, [r3, #0]
 8005740:	4a2a      	ldr	r2, [pc, #168]	; (80057ec <HAL_ADC_MspInit+0xc8>)
 8005742:	4293      	cmp	r3, r2
 8005744:	d124      	bne.n	8005790 <HAL_ADC_MspInit+0x6c>
 8005746:	4b2a      	ldr	r3, [pc, #168]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 8005748:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800574a:	4a29      	ldr	r2, [pc, #164]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 800574c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005750:	6453      	str	r3, [r2, #68]	; 0x44
 8005752:	4b27      	ldr	r3, [pc, #156]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 8005754:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005756:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800575a:	61bb      	str	r3, [r7, #24]
 800575c:	69bb      	ldr	r3, [r7, #24]
 800575e:	4b24      	ldr	r3, [pc, #144]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 8005760:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005762:	4a23      	ldr	r2, [pc, #140]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 8005764:	f043 0301 	orr.w	r3, r3, #1
 8005768:	6313      	str	r3, [r2, #48]	; 0x30
 800576a:	4b21      	ldr	r3, [pc, #132]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 800576c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800576e:	f003 0301 	and.w	r3, r3, #1
 8005772:	617b      	str	r3, [r7, #20]
 8005774:	697b      	ldr	r3, [r7, #20]
 8005776:	2301      	movs	r3, #1
 8005778:	61fb      	str	r3, [r7, #28]
 800577a:	2303      	movs	r3, #3
 800577c:	623b      	str	r3, [r7, #32]
 800577e:	2300      	movs	r3, #0
 8005780:	627b      	str	r3, [r7, #36]	; 0x24
 8005782:	f107 031c 	add.w	r3, r7, #28
 8005786:	4619      	mov	r1, r3
 8005788:	481a      	ldr	r0, [pc, #104]	; (80057f4 <HAL_ADC_MspInit+0xd0>)
 800578a:	f002 f839 	bl	8007800 <HAL_GPIO_Init>
 800578e:	e029      	b.n	80057e4 <HAL_ADC_MspInit+0xc0>
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	681b      	ldr	r3, [r3, #0]
 8005794:	4a18      	ldr	r2, [pc, #96]	; (80057f8 <HAL_ADC_MspInit+0xd4>)
 8005796:	4293      	cmp	r3, r2
 8005798:	d124      	bne.n	80057e4 <HAL_ADC_MspInit+0xc0>
 800579a:	4b15      	ldr	r3, [pc, #84]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 800579c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800579e:	4a14      	ldr	r2, [pc, #80]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 80057a0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80057a4:	6453      	str	r3, [r2, #68]	; 0x44
 80057a6:	4b12      	ldr	r3, [pc, #72]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 80057a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80057aa:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80057ae:	613b      	str	r3, [r7, #16]
 80057b0:	693b      	ldr	r3, [r7, #16]
 80057b2:	4b0f      	ldr	r3, [pc, #60]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 80057b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80057b6:	4a0e      	ldr	r2, [pc, #56]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 80057b8:	f043 0320 	orr.w	r3, r3, #32
 80057bc:	6313      	str	r3, [r2, #48]	; 0x30
 80057be:	4b0c      	ldr	r3, [pc, #48]	; (80057f0 <HAL_ADC_MspInit+0xcc>)
 80057c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80057c2:	f003 0320 	and.w	r3, r3, #32
 80057c6:	60fb      	str	r3, [r7, #12]
 80057c8:	68fb      	ldr	r3, [r7, #12]
 80057ca:	f44f 63e0 	mov.w	r3, #1792	; 0x700
 80057ce:	61fb      	str	r3, [r7, #28]
 80057d0:	2303      	movs	r3, #3
 80057d2:	623b      	str	r3, [r7, #32]
 80057d4:	2300      	movs	r3, #0
 80057d6:	627b      	str	r3, [r7, #36]	; 0x24
 80057d8:	f107 031c 	add.w	r3, r7, #28
 80057dc:	4619      	mov	r1, r3
 80057de:	4807      	ldr	r0, [pc, #28]	; (80057fc <HAL_ADC_MspInit+0xd8>)
 80057e0:	f002 f80e 	bl	8007800 <HAL_GPIO_Init>
 80057e4:	bf00      	nop
 80057e6:	3730      	adds	r7, #48	; 0x30
 80057e8:	46bd      	mov	sp, r7
 80057ea:	bd80      	pop	{r7, pc}
 80057ec:	40012000 	.word	0x40012000
 80057f0:	40023800 	.word	0x40023800
 80057f4:	40020000 	.word	0x40020000
 80057f8:	40012200 	.word	0x40012200
 80057fc:	40021400 	.word	0x40021400

08005800 <HAL_DAC_MspInit>:
 8005800:	b580      	push	{r7, lr}
 8005802:	b08a      	sub	sp, #40	; 0x28
 8005804:	af00      	add	r7, sp, #0
 8005806:	6078      	str	r0, [r7, #4]
 8005808:	f107 0314 	add.w	r3, r7, #20
 800580c:	2200      	movs	r2, #0
 800580e:	601a      	str	r2, [r3, #0]
 8005810:	605a      	str	r2, [r3, #4]
 8005812:	609a      	str	r2, [r3, #8]
 8005814:	60da      	str	r2, [r3, #12]
 8005816:	611a      	str	r2, [r3, #16]
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	4a19      	ldr	r2, [pc, #100]	; (8005884 <HAL_DAC_MspInit+0x84>)
 800581e:	4293      	cmp	r3, r2
 8005820:	d12b      	bne.n	800587a <HAL_DAC_MspInit+0x7a>
 8005822:	4b19      	ldr	r3, [pc, #100]	; (8005888 <HAL_DAC_MspInit+0x88>)
 8005824:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005826:	4a18      	ldr	r2, [pc, #96]	; (8005888 <HAL_DAC_MspInit+0x88>)
 8005828:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800582c:	6413      	str	r3, [r2, #64]	; 0x40
 800582e:	4b16      	ldr	r3, [pc, #88]	; (8005888 <HAL_DAC_MspInit+0x88>)
 8005830:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005832:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005836:	613b      	str	r3, [r7, #16]
 8005838:	693b      	ldr	r3, [r7, #16]
 800583a:	4b13      	ldr	r3, [pc, #76]	; (8005888 <HAL_DAC_MspInit+0x88>)
 800583c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800583e:	4a12      	ldr	r2, [pc, #72]	; (8005888 <HAL_DAC_MspInit+0x88>)
 8005840:	f043 0301 	orr.w	r3, r3, #1
 8005844:	6313      	str	r3, [r2, #48]	; 0x30
 8005846:	4b10      	ldr	r3, [pc, #64]	; (8005888 <HAL_DAC_MspInit+0x88>)
 8005848:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800584a:	f003 0301 	and.w	r3, r3, #1
 800584e:	60fb      	str	r3, [r7, #12]
 8005850:	68fb      	ldr	r3, [r7, #12]
 8005852:	2310      	movs	r3, #16
 8005854:	617b      	str	r3, [r7, #20]
 8005856:	2303      	movs	r3, #3
 8005858:	61bb      	str	r3, [r7, #24]
 800585a:	2300      	movs	r3, #0
 800585c:	61fb      	str	r3, [r7, #28]
 800585e:	f107 0314 	add.w	r3, r7, #20
 8005862:	4619      	mov	r1, r3
 8005864:	4809      	ldr	r0, [pc, #36]	; (800588c <HAL_DAC_MspInit+0x8c>)
 8005866:	f001 ffcb 	bl	8007800 <HAL_GPIO_Init>
 800586a:	2200      	movs	r2, #0
 800586c:	2100      	movs	r1, #0
 800586e:	2036      	movs	r0, #54	; 0x36
 8005870:	f001 fa64 	bl	8006d3c <HAL_NVIC_SetPriority>
 8005874:	2036      	movs	r0, #54	; 0x36
 8005876:	f001 fa7d 	bl	8006d74 <HAL_NVIC_EnableIRQ>
 800587a:	bf00      	nop
 800587c:	3728      	adds	r7, #40	; 0x28
 800587e:	46bd      	mov	sp, r7
 8005880:	bd80      	pop	{r7, pc}
 8005882:	bf00      	nop
 8005884:	40007400 	.word	0x40007400
 8005888:	40023800 	.word	0x40023800
 800588c:	40020000 	.word	0x40020000

08005890 <HAL_DMA2D_MspInit>:
 8005890:	b480      	push	{r7}
 8005892:	b085      	sub	sp, #20
 8005894:	af00      	add	r7, sp, #0
 8005896:	6078      	str	r0, [r7, #4]
 8005898:	687b      	ldr	r3, [r7, #4]
 800589a:	681b      	ldr	r3, [r3, #0]
 800589c:	4a0a      	ldr	r2, [pc, #40]	; (80058c8 <HAL_DMA2D_MspInit+0x38>)
 800589e:	4293      	cmp	r3, r2
 80058a0:	d10b      	bne.n	80058ba <HAL_DMA2D_MspInit+0x2a>
 80058a2:	4b0a      	ldr	r3, [pc, #40]	; (80058cc <HAL_DMA2D_MspInit+0x3c>)
 80058a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058a6:	4a09      	ldr	r2, [pc, #36]	; (80058cc <HAL_DMA2D_MspInit+0x3c>)
 80058a8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80058ac:	6313      	str	r3, [r2, #48]	; 0x30
 80058ae:	4b07      	ldr	r3, [pc, #28]	; (80058cc <HAL_DMA2D_MspInit+0x3c>)
 80058b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058b2:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80058b6:	60fb      	str	r3, [r7, #12]
 80058b8:	68fb      	ldr	r3, [r7, #12]
 80058ba:	bf00      	nop
 80058bc:	3714      	adds	r7, #20
 80058be:	46bd      	mov	sp, r7
 80058c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058c4:	4770      	bx	lr
 80058c6:	bf00      	nop
 80058c8:	4002b000 	.word	0x4002b000
 80058cc:	40023800 	.word	0x40023800

080058d0 <HAL_I2C_MspInit>:
 80058d0:	b580      	push	{r7, lr}
 80058d2:	b08c      	sub	sp, #48	; 0x30
 80058d4:	af00      	add	r7, sp, #0
 80058d6:	6078      	str	r0, [r7, #4]
 80058d8:	f107 031c 	add.w	r3, r7, #28
 80058dc:	2200      	movs	r2, #0
 80058de:	601a      	str	r2, [r3, #0]
 80058e0:	605a      	str	r2, [r3, #4]
 80058e2:	609a      	str	r2, [r3, #8]
 80058e4:	60da      	str	r2, [r3, #12]
 80058e6:	611a      	str	r2, [r3, #16]
 80058e8:	687b      	ldr	r3, [r7, #4]
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	4a2f      	ldr	r2, [pc, #188]	; (80059ac <HAL_I2C_MspInit+0xdc>)
 80058ee:	4293      	cmp	r3, r2
 80058f0:	d129      	bne.n	8005946 <HAL_I2C_MspInit+0x76>
 80058f2:	4b2f      	ldr	r3, [pc, #188]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 80058f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058f6:	4a2e      	ldr	r2, [pc, #184]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 80058f8:	f043 0302 	orr.w	r3, r3, #2
 80058fc:	6313      	str	r3, [r2, #48]	; 0x30
 80058fe:	4b2c      	ldr	r3, [pc, #176]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 8005900:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005902:	f003 0302 	and.w	r3, r3, #2
 8005906:	61bb      	str	r3, [r7, #24]
 8005908:	69bb      	ldr	r3, [r7, #24]
 800590a:	f44f 7340 	mov.w	r3, #768	; 0x300
 800590e:	61fb      	str	r3, [r7, #28]
 8005910:	2312      	movs	r3, #18
 8005912:	623b      	str	r3, [r7, #32]
 8005914:	2301      	movs	r3, #1
 8005916:	627b      	str	r3, [r7, #36]	; 0x24
 8005918:	2300      	movs	r3, #0
 800591a:	62bb      	str	r3, [r7, #40]	; 0x28
 800591c:	2304      	movs	r3, #4
 800591e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005920:	f107 031c 	add.w	r3, r7, #28
 8005924:	4619      	mov	r1, r3
 8005926:	4823      	ldr	r0, [pc, #140]	; (80059b4 <HAL_I2C_MspInit+0xe4>)
 8005928:	f001 ff6a 	bl	8007800 <HAL_GPIO_Init>
 800592c:	4b20      	ldr	r3, [pc, #128]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 800592e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005930:	4a1f      	ldr	r2, [pc, #124]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 8005932:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8005936:	6413      	str	r3, [r2, #64]	; 0x40
 8005938:	4b1d      	ldr	r3, [pc, #116]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 800593a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800593c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005940:	617b      	str	r3, [r7, #20]
 8005942:	697b      	ldr	r3, [r7, #20]
 8005944:	e02d      	b.n	80059a2 <HAL_I2C_MspInit+0xd2>
 8005946:	687b      	ldr	r3, [r7, #4]
 8005948:	681b      	ldr	r3, [r3, #0]
 800594a:	4a1b      	ldr	r2, [pc, #108]	; (80059b8 <HAL_I2C_MspInit+0xe8>)
 800594c:	4293      	cmp	r3, r2
 800594e:	d128      	bne.n	80059a2 <HAL_I2C_MspInit+0xd2>
 8005950:	4b17      	ldr	r3, [pc, #92]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 8005952:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005954:	4a16      	ldr	r2, [pc, #88]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 8005956:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800595a:	6313      	str	r3, [r2, #48]	; 0x30
 800595c:	4b14      	ldr	r3, [pc, #80]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 800595e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005960:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005964:	613b      	str	r3, [r7, #16]
 8005966:	693b      	ldr	r3, [r7, #16]
 8005968:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800596c:	61fb      	str	r3, [r7, #28]
 800596e:	2312      	movs	r3, #18
 8005970:	623b      	str	r3, [r7, #32]
 8005972:	2301      	movs	r3, #1
 8005974:	627b      	str	r3, [r7, #36]	; 0x24
 8005976:	2303      	movs	r3, #3
 8005978:	62bb      	str	r3, [r7, #40]	; 0x28
 800597a:	2304      	movs	r3, #4
 800597c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800597e:	f107 031c 	add.w	r3, r7, #28
 8005982:	4619      	mov	r1, r3
 8005984:	480d      	ldr	r0, [pc, #52]	; (80059bc <HAL_I2C_MspInit+0xec>)
 8005986:	f001 ff3b 	bl	8007800 <HAL_GPIO_Init>
 800598a:	4b09      	ldr	r3, [pc, #36]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 800598c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800598e:	4a08      	ldr	r2, [pc, #32]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 8005990:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8005994:	6413      	str	r3, [r2, #64]	; 0x40
 8005996:	4b06      	ldr	r3, [pc, #24]	; (80059b0 <HAL_I2C_MspInit+0xe0>)
 8005998:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800599a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800599e:	60fb      	str	r3, [r7, #12]
 80059a0:	68fb      	ldr	r3, [r7, #12]
 80059a2:	bf00      	nop
 80059a4:	3730      	adds	r7, #48	; 0x30
 80059a6:	46bd      	mov	sp, r7
 80059a8:	bd80      	pop	{r7, pc}
 80059aa:	bf00      	nop
 80059ac:	40005400 	.word	0x40005400
 80059b0:	40023800 	.word	0x40023800
 80059b4:	40020400 	.word	0x40020400
 80059b8:	40005c00 	.word	0x40005c00
 80059bc:	40021c00 	.word	0x40021c00

080059c0 <HAL_I2C_MspDeInit>:
 80059c0:	b580      	push	{r7, lr}
 80059c2:	b082      	sub	sp, #8
 80059c4:	af00      	add	r7, sp, #0
 80059c6:	6078      	str	r0, [r7, #4]
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	681b      	ldr	r3, [r3, #0]
 80059cc:	4a15      	ldr	r2, [pc, #84]	; (8005a24 <HAL_I2C_MspDeInit+0x64>)
 80059ce:	4293      	cmp	r3, r2
 80059d0:	d110      	bne.n	80059f4 <HAL_I2C_MspDeInit+0x34>
 80059d2:	4b15      	ldr	r3, [pc, #84]	; (8005a28 <HAL_I2C_MspDeInit+0x68>)
 80059d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059d6:	4a14      	ldr	r2, [pc, #80]	; (8005a28 <HAL_I2C_MspDeInit+0x68>)
 80059d8:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80059dc:	6413      	str	r3, [r2, #64]	; 0x40
 80059de:	f44f 7180 	mov.w	r1, #256	; 0x100
 80059e2:	4812      	ldr	r0, [pc, #72]	; (8005a2c <HAL_I2C_MspDeInit+0x6c>)
 80059e4:	f002 f8b6 	bl	8007b54 <HAL_GPIO_DeInit>
 80059e8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80059ec:	480f      	ldr	r0, [pc, #60]	; (8005a2c <HAL_I2C_MspDeInit+0x6c>)
 80059ee:	f002 f8b1 	bl	8007b54 <HAL_GPIO_DeInit>
 80059f2:	e013      	b.n	8005a1c <HAL_I2C_MspDeInit+0x5c>
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	681b      	ldr	r3, [r3, #0]
 80059f8:	4a0d      	ldr	r2, [pc, #52]	; (8005a30 <HAL_I2C_MspDeInit+0x70>)
 80059fa:	4293      	cmp	r3, r2
 80059fc:	d10e      	bne.n	8005a1c <HAL_I2C_MspDeInit+0x5c>
 80059fe:	4b0a      	ldr	r3, [pc, #40]	; (8005a28 <HAL_I2C_MspDeInit+0x68>)
 8005a00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a02:	4a09      	ldr	r2, [pc, #36]	; (8005a28 <HAL_I2C_MspDeInit+0x68>)
 8005a04:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8005a08:	6413      	str	r3, [r2, #64]	; 0x40
 8005a0a:	2180      	movs	r1, #128	; 0x80
 8005a0c:	4809      	ldr	r0, [pc, #36]	; (8005a34 <HAL_I2C_MspDeInit+0x74>)
 8005a0e:	f002 f8a1 	bl	8007b54 <HAL_GPIO_DeInit>
 8005a12:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005a16:	4807      	ldr	r0, [pc, #28]	; (8005a34 <HAL_I2C_MspDeInit+0x74>)
 8005a18:	f002 f89c 	bl	8007b54 <HAL_GPIO_DeInit>
 8005a1c:	bf00      	nop
 8005a1e:	3708      	adds	r7, #8
 8005a20:	46bd      	mov	sp, r7
 8005a22:	bd80      	pop	{r7, pc}
 8005a24:	40005400 	.word	0x40005400
 8005a28:	40023800 	.word	0x40023800
 8005a2c:	40020400 	.word	0x40020400
 8005a30:	40005c00 	.word	0x40005c00
 8005a34:	40021c00 	.word	0x40021c00

08005a38 <HAL_LTDC_MspInit>:
 8005a38:	b580      	push	{r7, lr}
 8005a3a:	b08e      	sub	sp, #56	; 0x38
 8005a3c:	af00      	add	r7, sp, #0
 8005a3e:	6078      	str	r0, [r7, #4]
 8005a40:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005a44:	2200      	movs	r2, #0
 8005a46:	601a      	str	r2, [r3, #0]
 8005a48:	605a      	str	r2, [r3, #4]
 8005a4a:	609a      	str	r2, [r3, #8]
 8005a4c:	60da      	str	r2, [r3, #12]
 8005a4e:	611a      	str	r2, [r3, #16]
 8005a50:	687b      	ldr	r3, [r7, #4]
 8005a52:	681b      	ldr	r3, [r3, #0]
 8005a54:	4a55      	ldr	r2, [pc, #340]	; (8005bac <HAL_LTDC_MspInit+0x174>)
 8005a56:	4293      	cmp	r3, r2
 8005a58:	f040 80a3 	bne.w	8005ba2 <HAL_LTDC_MspInit+0x16a>
 8005a5c:	4b54      	ldr	r3, [pc, #336]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005a5e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a60:	4a53      	ldr	r2, [pc, #332]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005a62:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8005a66:	6453      	str	r3, [r2, #68]	; 0x44
 8005a68:	4b51      	ldr	r3, [pc, #324]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005a6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a6c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8005a70:	623b      	str	r3, [r7, #32]
 8005a72:	6a3b      	ldr	r3, [r7, #32]
 8005a74:	4b4e      	ldr	r3, [pc, #312]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005a76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a78:	4a4d      	ldr	r2, [pc, #308]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005a7a:	f043 0310 	orr.w	r3, r3, #16
 8005a7e:	6313      	str	r3, [r2, #48]	; 0x30
 8005a80:	4b4b      	ldr	r3, [pc, #300]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005a82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a84:	f003 0310 	and.w	r3, r3, #16
 8005a88:	61fb      	str	r3, [r7, #28]
 8005a8a:	69fb      	ldr	r3, [r7, #28]
 8005a8c:	4b48      	ldr	r3, [pc, #288]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005a8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a90:	4a47      	ldr	r2, [pc, #284]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005a92:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005a96:	6313      	str	r3, [r2, #48]	; 0x30
 8005a98:	4b45      	ldr	r3, [pc, #276]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005a9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a9c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005aa0:	61bb      	str	r3, [r7, #24]
 8005aa2:	69bb      	ldr	r3, [r7, #24]
 8005aa4:	4b42      	ldr	r3, [pc, #264]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005aa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005aa8:	4a41      	ldr	r2, [pc, #260]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005aaa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005aae:	6313      	str	r3, [r2, #48]	; 0x30
 8005ab0:	4b3f      	ldr	r3, [pc, #252]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005ab2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ab4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005ab8:	617b      	str	r3, [r7, #20]
 8005aba:	697b      	ldr	r3, [r7, #20]
 8005abc:	4b3c      	ldr	r3, [pc, #240]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005abe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ac0:	4a3b      	ldr	r2, [pc, #236]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005ac2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005ac6:	6313      	str	r3, [r2, #48]	; 0x30
 8005ac8:	4b39      	ldr	r3, [pc, #228]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005aca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005acc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005ad0:	613b      	str	r3, [r7, #16]
 8005ad2:	693b      	ldr	r3, [r7, #16]
 8005ad4:	4b36      	ldr	r3, [pc, #216]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005ad6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ad8:	4a35      	ldr	r2, [pc, #212]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005ada:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005ade:	6313      	str	r3, [r2, #48]	; 0x30
 8005ae0:	4b33      	ldr	r3, [pc, #204]	; (8005bb0 <HAL_LTDC_MspInit+0x178>)
 8005ae2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ae4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005ae8:	60fb      	str	r3, [r7, #12]
 8005aea:	68fb      	ldr	r3, [r7, #12]
 8005aec:	2310      	movs	r3, #16
 8005aee:	627b      	str	r3, [r7, #36]	; 0x24
 8005af0:	2302      	movs	r3, #2
 8005af2:	62bb      	str	r3, [r7, #40]	; 0x28
 8005af4:	2300      	movs	r3, #0
 8005af6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005af8:	2300      	movs	r3, #0
 8005afa:	633b      	str	r3, [r7, #48]	; 0x30
 8005afc:	230e      	movs	r3, #14
 8005afe:	637b      	str	r3, [r7, #52]	; 0x34
 8005b00:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005b04:	4619      	mov	r1, r3
 8005b06:	482b      	ldr	r0, [pc, #172]	; (8005bb4 <HAL_LTDC_MspInit+0x17c>)
 8005b08:	f001 fe7a 	bl	8007800 <HAL_GPIO_Init>
 8005b0c:	f64e 73ff 	movw	r3, #61439	; 0xefff
 8005b10:	627b      	str	r3, [r7, #36]	; 0x24
 8005b12:	2302      	movs	r3, #2
 8005b14:	62bb      	str	r3, [r7, #40]	; 0x28
 8005b16:	2300      	movs	r3, #0
 8005b18:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b1a:	2300      	movs	r3, #0
 8005b1c:	633b      	str	r3, [r7, #48]	; 0x30
 8005b1e:	230e      	movs	r3, #14
 8005b20:	637b      	str	r3, [r7, #52]	; 0x34
 8005b22:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005b26:	4619      	mov	r1, r3
 8005b28:	4823      	ldr	r0, [pc, #140]	; (8005bb8 <HAL_LTDC_MspInit+0x180>)
 8005b2a:	f001 fe69 	bl	8007800 <HAL_GPIO_Init>
 8005b2e:	23f7      	movs	r3, #247	; 0xf7
 8005b30:	627b      	str	r3, [r7, #36]	; 0x24
 8005b32:	2302      	movs	r3, #2
 8005b34:	62bb      	str	r3, [r7, #40]	; 0x28
 8005b36:	2300      	movs	r3, #0
 8005b38:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b3a:	2300      	movs	r3, #0
 8005b3c:	633b      	str	r3, [r7, #48]	; 0x30
 8005b3e:	230e      	movs	r3, #14
 8005b40:	637b      	str	r3, [r7, #52]	; 0x34
 8005b42:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005b46:	4619      	mov	r1, r3
 8005b48:	481c      	ldr	r0, [pc, #112]	; (8005bbc <HAL_LTDC_MspInit+0x184>)
 8005b4a:	f001 fe59 	bl	8007800 <HAL_GPIO_Init>
 8005b4e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005b52:	627b      	str	r3, [r7, #36]	; 0x24
 8005b54:	2302      	movs	r3, #2
 8005b56:	62bb      	str	r3, [r7, #40]	; 0x28
 8005b58:	2300      	movs	r3, #0
 8005b5a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b5c:	2300      	movs	r3, #0
 8005b5e:	633b      	str	r3, [r7, #48]	; 0x30
 8005b60:	2309      	movs	r3, #9
 8005b62:	637b      	str	r3, [r7, #52]	; 0x34
 8005b64:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005b68:	4619      	mov	r1, r3
 8005b6a:	4815      	ldr	r0, [pc, #84]	; (8005bc0 <HAL_LTDC_MspInit+0x188>)
 8005b6c:	f001 fe48 	bl	8007800 <HAL_GPIO_Init>
 8005b70:	f44f 4346 	mov.w	r3, #50688	; 0xc600
 8005b74:	627b      	str	r3, [r7, #36]	; 0x24
 8005b76:	2302      	movs	r3, #2
 8005b78:	62bb      	str	r3, [r7, #40]	; 0x28
 8005b7a:	2300      	movs	r3, #0
 8005b7c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b7e:	2300      	movs	r3, #0
 8005b80:	633b      	str	r3, [r7, #48]	; 0x30
 8005b82:	230e      	movs	r3, #14
 8005b84:	637b      	str	r3, [r7, #52]	; 0x34
 8005b86:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005b8a:	4619      	mov	r1, r3
 8005b8c:	480d      	ldr	r0, [pc, #52]	; (8005bc4 <HAL_LTDC_MspInit+0x18c>)
 8005b8e:	f001 fe37 	bl	8007800 <HAL_GPIO_Init>
 8005b92:	2200      	movs	r2, #0
 8005b94:	2105      	movs	r1, #5
 8005b96:	2058      	movs	r0, #88	; 0x58
 8005b98:	f001 f8d0 	bl	8006d3c <HAL_NVIC_SetPriority>
 8005b9c:	2058      	movs	r0, #88	; 0x58
 8005b9e:	f001 f8e9 	bl	8006d74 <HAL_NVIC_EnableIRQ>
 8005ba2:	bf00      	nop
 8005ba4:	3738      	adds	r7, #56	; 0x38
 8005ba6:	46bd      	mov	sp, r7
 8005ba8:	bd80      	pop	{r7, pc}
 8005baa:	bf00      	nop
 8005bac:	40016800 	.word	0x40016800
 8005bb0:	40023800 	.word	0x40023800
 8005bb4:	40021000 	.word	0x40021000
 8005bb8:	40022400 	.word	0x40022400
 8005bbc:	40022800 	.word	0x40022800
 8005bc0:	40021800 	.word	0x40021800
 8005bc4:	40022000 	.word	0x40022000

08005bc8 <HAL_RTC_MspInit>:
 8005bc8:	b480      	push	{r7}
 8005bca:	b083      	sub	sp, #12
 8005bcc:	af00      	add	r7, sp, #0
 8005bce:	6078      	str	r0, [r7, #4]
 8005bd0:	687b      	ldr	r3, [r7, #4]
 8005bd2:	681b      	ldr	r3, [r3, #0]
 8005bd4:	4a07      	ldr	r2, [pc, #28]	; (8005bf4 <HAL_RTC_MspInit+0x2c>)
 8005bd6:	4293      	cmp	r3, r2
 8005bd8:	d105      	bne.n	8005be6 <HAL_RTC_MspInit+0x1e>
 8005bda:	4b07      	ldr	r3, [pc, #28]	; (8005bf8 <HAL_RTC_MspInit+0x30>)
 8005bdc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005bde:	4a06      	ldr	r2, [pc, #24]	; (8005bf8 <HAL_RTC_MspInit+0x30>)
 8005be0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005be4:	6713      	str	r3, [r2, #112]	; 0x70
 8005be6:	bf00      	nop
 8005be8:	370c      	adds	r7, #12
 8005bea:	46bd      	mov	sp, r7
 8005bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bf0:	4770      	bx	lr
 8005bf2:	bf00      	nop
 8005bf4:	40002800 	.word	0x40002800
 8005bf8:	40023800 	.word	0x40023800

08005bfc <HAL_SPI_MspInit>:
 8005bfc:	b580      	push	{r7, lr}
 8005bfe:	b08a      	sub	sp, #40	; 0x28
 8005c00:	af00      	add	r7, sp, #0
 8005c02:	6078      	str	r0, [r7, #4]
 8005c04:	f107 0314 	add.w	r3, r7, #20
 8005c08:	2200      	movs	r2, #0
 8005c0a:	601a      	str	r2, [r3, #0]
 8005c0c:	605a      	str	r2, [r3, #4]
 8005c0e:	609a      	str	r2, [r3, #8]
 8005c10:	60da      	str	r2, [r3, #12]
 8005c12:	611a      	str	r2, [r3, #16]
 8005c14:	687b      	ldr	r3, [r7, #4]
 8005c16:	681b      	ldr	r3, [r3, #0]
 8005c18:	4a2d      	ldr	r2, [pc, #180]	; (8005cd0 <HAL_SPI_MspInit+0xd4>)
 8005c1a:	4293      	cmp	r3, r2
 8005c1c:	d154      	bne.n	8005cc8 <HAL_SPI_MspInit+0xcc>
 8005c1e:	4b2d      	ldr	r3, [pc, #180]	; (8005cd4 <HAL_SPI_MspInit+0xd8>)
 8005c20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c22:	4a2c      	ldr	r2, [pc, #176]	; (8005cd4 <HAL_SPI_MspInit+0xd8>)
 8005c24:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005c28:	6413      	str	r3, [r2, #64]	; 0x40
 8005c2a:	4b2a      	ldr	r3, [pc, #168]	; (8005cd4 <HAL_SPI_MspInit+0xd8>)
 8005c2c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c2e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005c32:	613b      	str	r3, [r7, #16]
 8005c34:	693b      	ldr	r3, [r7, #16]
 8005c36:	4b27      	ldr	r3, [pc, #156]	; (8005cd4 <HAL_SPI_MspInit+0xd8>)
 8005c38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c3a:	4a26      	ldr	r2, [pc, #152]	; (8005cd4 <HAL_SPI_MspInit+0xd8>)
 8005c3c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005c40:	6313      	str	r3, [r2, #48]	; 0x30
 8005c42:	4b24      	ldr	r3, [pc, #144]	; (8005cd4 <HAL_SPI_MspInit+0xd8>)
 8005c44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c46:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005c4a:	60fb      	str	r3, [r7, #12]
 8005c4c:	68fb      	ldr	r3, [r7, #12]
 8005c4e:	4b21      	ldr	r3, [pc, #132]	; (8005cd4 <HAL_SPI_MspInit+0xd8>)
 8005c50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c52:	4a20      	ldr	r2, [pc, #128]	; (8005cd4 <HAL_SPI_MspInit+0xd8>)
 8005c54:	f043 0302 	orr.w	r3, r3, #2
 8005c58:	6313      	str	r3, [r2, #48]	; 0x30
 8005c5a:	4b1e      	ldr	r3, [pc, #120]	; (8005cd4 <HAL_SPI_MspInit+0xd8>)
 8005c5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c5e:	f003 0302 	and.w	r3, r3, #2
 8005c62:	60bb      	str	r3, [r7, #8]
 8005c64:	68bb      	ldr	r3, [r7, #8]
 8005c66:	2302      	movs	r3, #2
 8005c68:	617b      	str	r3, [r7, #20]
 8005c6a:	2302      	movs	r3, #2
 8005c6c:	61bb      	str	r3, [r7, #24]
 8005c6e:	2300      	movs	r3, #0
 8005c70:	61fb      	str	r3, [r7, #28]
 8005c72:	2300      	movs	r3, #0
 8005c74:	623b      	str	r3, [r7, #32]
 8005c76:	2305      	movs	r3, #5
 8005c78:	627b      	str	r3, [r7, #36]	; 0x24
 8005c7a:	f107 0314 	add.w	r3, r7, #20
 8005c7e:	4619      	mov	r1, r3
 8005c80:	4815      	ldr	r0, [pc, #84]	; (8005cd8 <HAL_SPI_MspInit+0xdc>)
 8005c82:	f001 fdbd 	bl	8007800 <HAL_GPIO_Init>
 8005c86:	2301      	movs	r3, #1
 8005c88:	617b      	str	r3, [r7, #20]
 8005c8a:	2302      	movs	r3, #2
 8005c8c:	61bb      	str	r3, [r7, #24]
 8005c8e:	2300      	movs	r3, #0
 8005c90:	61fb      	str	r3, [r7, #28]
 8005c92:	2303      	movs	r3, #3
 8005c94:	623b      	str	r3, [r7, #32]
 8005c96:	2305      	movs	r3, #5
 8005c98:	627b      	str	r3, [r7, #36]	; 0x24
 8005c9a:	f107 0314 	add.w	r3, r7, #20
 8005c9e:	4619      	mov	r1, r3
 8005ca0:	480d      	ldr	r0, [pc, #52]	; (8005cd8 <HAL_SPI_MspInit+0xdc>)
 8005ca2:	f001 fdad 	bl	8007800 <HAL_GPIO_Init>
 8005ca6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8005caa:	617b      	str	r3, [r7, #20]
 8005cac:	2302      	movs	r3, #2
 8005cae:	61bb      	str	r3, [r7, #24]
 8005cb0:	2300      	movs	r3, #0
 8005cb2:	61fb      	str	r3, [r7, #28]
 8005cb4:	2303      	movs	r3, #3
 8005cb6:	623b      	str	r3, [r7, #32]
 8005cb8:	2305      	movs	r3, #5
 8005cba:	627b      	str	r3, [r7, #36]	; 0x24
 8005cbc:	f107 0314 	add.w	r3, r7, #20
 8005cc0:	4619      	mov	r1, r3
 8005cc2:	4806      	ldr	r0, [pc, #24]	; (8005cdc <HAL_SPI_MspInit+0xe0>)
 8005cc4:	f001 fd9c 	bl	8007800 <HAL_GPIO_Init>
 8005cc8:	bf00      	nop
 8005cca:	3728      	adds	r7, #40	; 0x28
 8005ccc:	46bd      	mov	sp, r7
 8005cce:	bd80      	pop	{r7, pc}
 8005cd0:	40003800 	.word	0x40003800
 8005cd4:	40023800 	.word	0x40023800
 8005cd8:	40022000 	.word	0x40022000
 8005cdc:	40020400 	.word	0x40020400

08005ce0 <HAL_TIM_Base_MspInit>:
 8005ce0:	b480      	push	{r7}
 8005ce2:	b089      	sub	sp, #36	; 0x24
 8005ce4:	af00      	add	r7, sp, #0
 8005ce6:	6078      	str	r0, [r7, #4]
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	681b      	ldr	r3, [r3, #0]
 8005cec:	4a2e      	ldr	r2, [pc, #184]	; (8005da8 <HAL_TIM_Base_MspInit+0xc8>)
 8005cee:	4293      	cmp	r3, r2
 8005cf0:	d10c      	bne.n	8005d0c <HAL_TIM_Base_MspInit+0x2c>
 8005cf2:	4b2e      	ldr	r3, [pc, #184]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005cf4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005cf6:	4a2d      	ldr	r2, [pc, #180]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005cf8:	f043 0301 	orr.w	r3, r3, #1
 8005cfc:	6453      	str	r3, [r2, #68]	; 0x44
 8005cfe:	4b2b      	ldr	r3, [pc, #172]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005d02:	f003 0301 	and.w	r3, r3, #1
 8005d06:	61fb      	str	r3, [r7, #28]
 8005d08:	69fb      	ldr	r3, [r7, #28]
 8005d0a:	e046      	b.n	8005d9a <HAL_TIM_Base_MspInit+0xba>
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	681b      	ldr	r3, [r3, #0]
 8005d10:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005d14:	d10c      	bne.n	8005d30 <HAL_TIM_Base_MspInit+0x50>
 8005d16:	4b25      	ldr	r3, [pc, #148]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d1a:	4a24      	ldr	r2, [pc, #144]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d1c:	f043 0301 	orr.w	r3, r3, #1
 8005d20:	6413      	str	r3, [r2, #64]	; 0x40
 8005d22:	4b22      	ldr	r3, [pc, #136]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d26:	f003 0301 	and.w	r3, r3, #1
 8005d2a:	61bb      	str	r3, [r7, #24]
 8005d2c:	69bb      	ldr	r3, [r7, #24]
 8005d2e:	e034      	b.n	8005d9a <HAL_TIM_Base_MspInit+0xba>
 8005d30:	687b      	ldr	r3, [r7, #4]
 8005d32:	681b      	ldr	r3, [r3, #0]
 8005d34:	4a1e      	ldr	r2, [pc, #120]	; (8005db0 <HAL_TIM_Base_MspInit+0xd0>)
 8005d36:	4293      	cmp	r3, r2
 8005d38:	d10c      	bne.n	8005d54 <HAL_TIM_Base_MspInit+0x74>
 8005d3a:	4b1c      	ldr	r3, [pc, #112]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d3e:	4a1b      	ldr	r2, [pc, #108]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d40:	f043 0302 	orr.w	r3, r3, #2
 8005d44:	6413      	str	r3, [r2, #64]	; 0x40
 8005d46:	4b19      	ldr	r3, [pc, #100]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d4a:	f003 0302 	and.w	r3, r3, #2
 8005d4e:	617b      	str	r3, [r7, #20]
 8005d50:	697b      	ldr	r3, [r7, #20]
 8005d52:	e022      	b.n	8005d9a <HAL_TIM_Base_MspInit+0xba>
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	681b      	ldr	r3, [r3, #0]
 8005d58:	4a16      	ldr	r2, [pc, #88]	; (8005db4 <HAL_TIM_Base_MspInit+0xd4>)
 8005d5a:	4293      	cmp	r3, r2
 8005d5c:	d10c      	bne.n	8005d78 <HAL_TIM_Base_MspInit+0x98>
 8005d5e:	4b13      	ldr	r3, [pc, #76]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d62:	4a12      	ldr	r2, [pc, #72]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d64:	f043 0308 	orr.w	r3, r3, #8
 8005d68:	6413      	str	r3, [r2, #64]	; 0x40
 8005d6a:	4b10      	ldr	r3, [pc, #64]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d6e:	f003 0308 	and.w	r3, r3, #8
 8005d72:	613b      	str	r3, [r7, #16]
 8005d74:	693b      	ldr	r3, [r7, #16]
 8005d76:	e010      	b.n	8005d9a <HAL_TIM_Base_MspInit+0xba>
 8005d78:	687b      	ldr	r3, [r7, #4]
 8005d7a:	681b      	ldr	r3, [r3, #0]
 8005d7c:	4a0e      	ldr	r2, [pc, #56]	; (8005db8 <HAL_TIM_Base_MspInit+0xd8>)
 8005d7e:	4293      	cmp	r3, r2
 8005d80:	d10b      	bne.n	8005d9a <HAL_TIM_Base_MspInit+0xba>
 8005d82:	4b0a      	ldr	r3, [pc, #40]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d84:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005d86:	4a09      	ldr	r2, [pc, #36]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d88:	f043 0302 	orr.w	r3, r3, #2
 8005d8c:	6453      	str	r3, [r2, #68]	; 0x44
 8005d8e:	4b07      	ldr	r3, [pc, #28]	; (8005dac <HAL_TIM_Base_MspInit+0xcc>)
 8005d90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005d92:	f003 0302 	and.w	r3, r3, #2
 8005d96:	60fb      	str	r3, [r7, #12]
 8005d98:	68fb      	ldr	r3, [r7, #12]
 8005d9a:	bf00      	nop
 8005d9c:	3724      	adds	r7, #36	; 0x24
 8005d9e:	46bd      	mov	sp, r7
 8005da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005da4:	4770      	bx	lr
 8005da6:	bf00      	nop
 8005da8:	40010000 	.word	0x40010000
 8005dac:	40023800 	.word	0x40023800
 8005db0:	40000400 	.word	0x40000400
 8005db4:	40000c00 	.word	0x40000c00
 8005db8:	40010400 	.word	0x40010400

08005dbc <HAL_TIM_MspPostInit>:
 8005dbc:	b580      	push	{r7, lr}
 8005dbe:	b08a      	sub	sp, #40	; 0x28
 8005dc0:	af00      	add	r7, sp, #0
 8005dc2:	6078      	str	r0, [r7, #4]
 8005dc4:	f107 0314 	add.w	r3, r7, #20
 8005dc8:	2200      	movs	r2, #0
 8005dca:	601a      	str	r2, [r3, #0]
 8005dcc:	605a      	str	r2, [r3, #4]
 8005dce:	609a      	str	r2, [r3, #8]
 8005dd0:	60da      	str	r2, [r3, #12]
 8005dd2:	611a      	str	r2, [r3, #16]
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	4a22      	ldr	r2, [pc, #136]	; (8005e64 <HAL_TIM_MspPostInit+0xa8>)
 8005dda:	4293      	cmp	r3, r2
 8005ddc:	d11c      	bne.n	8005e18 <HAL_TIM_MspPostInit+0x5c>
 8005dde:	4b22      	ldr	r3, [pc, #136]	; (8005e68 <HAL_TIM_MspPostInit+0xac>)
 8005de0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005de2:	4a21      	ldr	r2, [pc, #132]	; (8005e68 <HAL_TIM_MspPostInit+0xac>)
 8005de4:	f043 0302 	orr.w	r3, r3, #2
 8005de8:	6313      	str	r3, [r2, #48]	; 0x30
 8005dea:	4b1f      	ldr	r3, [pc, #124]	; (8005e68 <HAL_TIM_MspPostInit+0xac>)
 8005dec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005dee:	f003 0302 	and.w	r3, r3, #2
 8005df2:	613b      	str	r3, [r7, #16]
 8005df4:	693b      	ldr	r3, [r7, #16]
 8005df6:	2310      	movs	r3, #16
 8005df8:	617b      	str	r3, [r7, #20]
 8005dfa:	2302      	movs	r3, #2
 8005dfc:	61bb      	str	r3, [r7, #24]
 8005dfe:	2300      	movs	r3, #0
 8005e00:	61fb      	str	r3, [r7, #28]
 8005e02:	2300      	movs	r3, #0
 8005e04:	623b      	str	r3, [r7, #32]
 8005e06:	2302      	movs	r3, #2
 8005e08:	627b      	str	r3, [r7, #36]	; 0x24
 8005e0a:	f107 0314 	add.w	r3, r7, #20
 8005e0e:	4619      	mov	r1, r3
 8005e10:	4816      	ldr	r0, [pc, #88]	; (8005e6c <HAL_TIM_MspPostInit+0xb0>)
 8005e12:	f001 fcf5 	bl	8007800 <HAL_GPIO_Init>
 8005e16:	e020      	b.n	8005e5a <HAL_TIM_MspPostInit+0x9e>
 8005e18:	687b      	ldr	r3, [r7, #4]
 8005e1a:	681b      	ldr	r3, [r3, #0]
 8005e1c:	4a14      	ldr	r2, [pc, #80]	; (8005e70 <HAL_TIM_MspPostInit+0xb4>)
 8005e1e:	4293      	cmp	r3, r2
 8005e20:	d11b      	bne.n	8005e5a <HAL_TIM_MspPostInit+0x9e>
 8005e22:	4b11      	ldr	r3, [pc, #68]	; (8005e68 <HAL_TIM_MspPostInit+0xac>)
 8005e24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e26:	4a10      	ldr	r2, [pc, #64]	; (8005e68 <HAL_TIM_MspPostInit+0xac>)
 8005e28:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005e2c:	6313      	str	r3, [r2, #48]	; 0x30
 8005e2e:	4b0e      	ldr	r3, [pc, #56]	; (8005e68 <HAL_TIM_MspPostInit+0xac>)
 8005e30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e32:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005e36:	60fb      	str	r3, [r7, #12]
 8005e38:	68fb      	ldr	r3, [r7, #12]
 8005e3a:	2304      	movs	r3, #4
 8005e3c:	617b      	str	r3, [r7, #20]
 8005e3e:	2302      	movs	r3, #2
 8005e40:	61bb      	str	r3, [r7, #24]
 8005e42:	2300      	movs	r3, #0
 8005e44:	61fb      	str	r3, [r7, #28]
 8005e46:	2300      	movs	r3, #0
 8005e48:	623b      	str	r3, [r7, #32]
 8005e4a:	2303      	movs	r3, #3
 8005e4c:	627b      	str	r3, [r7, #36]	; 0x24
 8005e4e:	f107 0314 	add.w	r3, r7, #20
 8005e52:	4619      	mov	r1, r3
 8005e54:	4807      	ldr	r0, [pc, #28]	; (8005e74 <HAL_TIM_MspPostInit+0xb8>)
 8005e56:	f001 fcd3 	bl	8007800 <HAL_GPIO_Init>
 8005e5a:	bf00      	nop
 8005e5c:	3728      	adds	r7, #40	; 0x28
 8005e5e:	46bd      	mov	sp, r7
 8005e60:	bd80      	pop	{r7, pc}
 8005e62:	bf00      	nop
 8005e64:	40000400 	.word	0x40000400
 8005e68:	40023800 	.word	0x40023800
 8005e6c:	40020400 	.word	0x40020400
 8005e70:	40010400 	.word	0x40010400
 8005e74:	40022000 	.word	0x40022000

08005e78 <HAL_UART_MspInit>:
 8005e78:	b580      	push	{r7, lr}
 8005e7a:	b08e      	sub	sp, #56	; 0x38
 8005e7c:	af00      	add	r7, sp, #0
 8005e7e:	6078      	str	r0, [r7, #4]
 8005e80:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005e84:	2200      	movs	r2, #0
 8005e86:	601a      	str	r2, [r3, #0]
 8005e88:	605a      	str	r2, [r3, #4]
 8005e8a:	609a      	str	r2, [r3, #8]
 8005e8c:	60da      	str	r2, [r3, #12]
 8005e8e:	611a      	str	r2, [r3, #16]
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	4a57      	ldr	r2, [pc, #348]	; (8005ff4 <HAL_UART_MspInit+0x17c>)
 8005e96:	4293      	cmp	r3, r2
 8005e98:	d128      	bne.n	8005eec <HAL_UART_MspInit+0x74>
 8005e9a:	4b57      	ldr	r3, [pc, #348]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005e9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e9e:	4a56      	ldr	r2, [pc, #344]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005ea0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8005ea4:	6413      	str	r3, [r2, #64]	; 0x40
 8005ea6:	4b54      	ldr	r3, [pc, #336]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005ea8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005eaa:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8005eae:	623b      	str	r3, [r7, #32]
 8005eb0:	6a3b      	ldr	r3, [r7, #32]
 8005eb2:	4b51      	ldr	r3, [pc, #324]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005eb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005eb6:	4a50      	ldr	r2, [pc, #320]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005eb8:	f043 0320 	orr.w	r3, r3, #32
 8005ebc:	6313      	str	r3, [r2, #48]	; 0x30
 8005ebe:	4b4e      	ldr	r3, [pc, #312]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005ec0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ec2:	f003 0320 	and.w	r3, r3, #32
 8005ec6:	61fb      	str	r3, [r7, #28]
 8005ec8:	69fb      	ldr	r3, [r7, #28]
 8005eca:	23c0      	movs	r3, #192	; 0xc0
 8005ecc:	627b      	str	r3, [r7, #36]	; 0x24
 8005ece:	2302      	movs	r3, #2
 8005ed0:	62bb      	str	r3, [r7, #40]	; 0x28
 8005ed2:	2300      	movs	r3, #0
 8005ed4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005ed6:	2303      	movs	r3, #3
 8005ed8:	633b      	str	r3, [r7, #48]	; 0x30
 8005eda:	2308      	movs	r3, #8
 8005edc:	637b      	str	r3, [r7, #52]	; 0x34
 8005ede:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005ee2:	4619      	mov	r1, r3
 8005ee4:	4845      	ldr	r0, [pc, #276]	; (8005ffc <HAL_UART_MspInit+0x184>)
 8005ee6:	f001 fc8b 	bl	8007800 <HAL_GPIO_Init>
 8005eea:	e07f      	b.n	8005fec <HAL_UART_MspInit+0x174>
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	681b      	ldr	r3, [r3, #0]
 8005ef0:	4a43      	ldr	r2, [pc, #268]	; (8006000 <HAL_UART_MspInit+0x188>)
 8005ef2:	4293      	cmp	r3, r2
 8005ef4:	d14d      	bne.n	8005f92 <HAL_UART_MspInit+0x11a>
 8005ef6:	4b40      	ldr	r3, [pc, #256]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005ef8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005efa:	4a3f      	ldr	r2, [pc, #252]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005efc:	f043 0310 	orr.w	r3, r3, #16
 8005f00:	6453      	str	r3, [r2, #68]	; 0x44
 8005f02:	4b3d      	ldr	r3, [pc, #244]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005f04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005f06:	f003 0310 	and.w	r3, r3, #16
 8005f0a:	61bb      	str	r3, [r7, #24]
 8005f0c:	69bb      	ldr	r3, [r7, #24]
 8005f0e:	4b3a      	ldr	r3, [pc, #232]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005f10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f12:	4a39      	ldr	r2, [pc, #228]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005f14:	f043 0302 	orr.w	r3, r3, #2
 8005f18:	6313      	str	r3, [r2, #48]	; 0x30
 8005f1a:	4b37      	ldr	r3, [pc, #220]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005f1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f1e:	f003 0302 	and.w	r3, r3, #2
 8005f22:	617b      	str	r3, [r7, #20]
 8005f24:	697b      	ldr	r3, [r7, #20]
 8005f26:	4b34      	ldr	r3, [pc, #208]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005f28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f2a:	4a33      	ldr	r2, [pc, #204]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005f2c:	f043 0301 	orr.w	r3, r3, #1
 8005f30:	6313      	str	r3, [r2, #48]	; 0x30
 8005f32:	4b31      	ldr	r3, [pc, #196]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005f34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f36:	f003 0301 	and.w	r3, r3, #1
 8005f3a:	613b      	str	r3, [r7, #16]
 8005f3c:	693b      	ldr	r3, [r7, #16]
 8005f3e:	2380      	movs	r3, #128	; 0x80
 8005f40:	627b      	str	r3, [r7, #36]	; 0x24
 8005f42:	2302      	movs	r3, #2
 8005f44:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f46:	2300      	movs	r3, #0
 8005f48:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005f4a:	2300      	movs	r3, #0
 8005f4c:	633b      	str	r3, [r7, #48]	; 0x30
 8005f4e:	2307      	movs	r3, #7
 8005f50:	637b      	str	r3, [r7, #52]	; 0x34
 8005f52:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005f56:	4619      	mov	r1, r3
 8005f58:	482a      	ldr	r0, [pc, #168]	; (8006004 <HAL_UART_MspInit+0x18c>)
 8005f5a:	f001 fc51 	bl	8007800 <HAL_GPIO_Init>
 8005f5e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005f62:	627b      	str	r3, [r7, #36]	; 0x24
 8005f64:	2302      	movs	r3, #2
 8005f66:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f68:	2300      	movs	r3, #0
 8005f6a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005f6c:	2300      	movs	r3, #0
 8005f6e:	633b      	str	r3, [r7, #48]	; 0x30
 8005f70:	2307      	movs	r3, #7
 8005f72:	637b      	str	r3, [r7, #52]	; 0x34
 8005f74:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005f78:	4619      	mov	r1, r3
 8005f7a:	4823      	ldr	r0, [pc, #140]	; (8006008 <HAL_UART_MspInit+0x190>)
 8005f7c:	f001 fc40 	bl	8007800 <HAL_GPIO_Init>
 8005f80:	2200      	movs	r2, #0
 8005f82:	2105      	movs	r1, #5
 8005f84:	2025      	movs	r0, #37	; 0x25
 8005f86:	f000 fed9 	bl	8006d3c <HAL_NVIC_SetPriority>
 8005f8a:	2025      	movs	r0, #37	; 0x25
 8005f8c:	f000 fef2 	bl	8006d74 <HAL_NVIC_EnableIRQ>
 8005f90:	e02c      	b.n	8005fec <HAL_UART_MspInit+0x174>
 8005f92:	687b      	ldr	r3, [r7, #4]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	4a1d      	ldr	r2, [pc, #116]	; (800600c <HAL_UART_MspInit+0x194>)
 8005f98:	4293      	cmp	r3, r2
 8005f9a:	d127      	bne.n	8005fec <HAL_UART_MspInit+0x174>
 8005f9c:	4b16      	ldr	r3, [pc, #88]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005f9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005fa0:	4a15      	ldr	r2, [pc, #84]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005fa2:	f043 0320 	orr.w	r3, r3, #32
 8005fa6:	6453      	str	r3, [r2, #68]	; 0x44
 8005fa8:	4b13      	ldr	r3, [pc, #76]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005faa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005fac:	f003 0320 	and.w	r3, r3, #32
 8005fb0:	60fb      	str	r3, [r7, #12]
 8005fb2:	68fb      	ldr	r3, [r7, #12]
 8005fb4:	4b10      	ldr	r3, [pc, #64]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005fb6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005fb8:	4a0f      	ldr	r2, [pc, #60]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005fba:	f043 0304 	orr.w	r3, r3, #4
 8005fbe:	6313      	str	r3, [r2, #48]	; 0x30
 8005fc0:	4b0d      	ldr	r3, [pc, #52]	; (8005ff8 <HAL_UART_MspInit+0x180>)
 8005fc2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005fc4:	f003 0304 	and.w	r3, r3, #4
 8005fc8:	60bb      	str	r3, [r7, #8]
 8005fca:	68bb      	ldr	r3, [r7, #8]
 8005fcc:	23c0      	movs	r3, #192	; 0xc0
 8005fce:	627b      	str	r3, [r7, #36]	; 0x24
 8005fd0:	2302      	movs	r3, #2
 8005fd2:	62bb      	str	r3, [r7, #40]	; 0x28
 8005fd4:	2300      	movs	r3, #0
 8005fd6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005fd8:	2303      	movs	r3, #3
 8005fda:	633b      	str	r3, [r7, #48]	; 0x30
 8005fdc:	2308      	movs	r3, #8
 8005fde:	637b      	str	r3, [r7, #52]	; 0x34
 8005fe0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005fe4:	4619      	mov	r1, r3
 8005fe6:	480a      	ldr	r0, [pc, #40]	; (8006010 <HAL_UART_MspInit+0x198>)
 8005fe8:	f001 fc0a 	bl	8007800 <HAL_GPIO_Init>
 8005fec:	bf00      	nop
 8005fee:	3738      	adds	r7, #56	; 0x38
 8005ff0:	46bd      	mov	sp, r7
 8005ff2:	bd80      	pop	{r7, pc}
 8005ff4:	40007800 	.word	0x40007800
 8005ff8:	40023800 	.word	0x40023800
 8005ffc:	40021400 	.word	0x40021400
 8006000:	40011000 	.word	0x40011000
 8006004:	40020400 	.word	0x40020400
 8006008:	40020000 	.word	0x40020000
 800600c:	40011400 	.word	0x40011400
 8006010:	40020800 	.word	0x40020800

08006014 <HAL_FMC_MspInit>:
 8006014:	b580      	push	{r7, lr}
 8006016:	b086      	sub	sp, #24
 8006018:	af00      	add	r7, sp, #0
 800601a:	1d3b      	adds	r3, r7, #4
 800601c:	2200      	movs	r2, #0
 800601e:	601a      	str	r2, [r3, #0]
 8006020:	605a      	str	r2, [r3, #4]
 8006022:	609a      	str	r2, [r3, #8]
 8006024:	60da      	str	r2, [r3, #12]
 8006026:	611a      	str	r2, [r3, #16]
 8006028:	4b3a      	ldr	r3, [pc, #232]	; (8006114 <HAL_FMC_MspInit+0x100>)
 800602a:	681b      	ldr	r3, [r3, #0]
 800602c:	2b00      	cmp	r3, #0
 800602e:	d16d      	bne.n	800610c <HAL_FMC_MspInit+0xf8>
 8006030:	4b38      	ldr	r3, [pc, #224]	; (8006114 <HAL_FMC_MspInit+0x100>)
 8006032:	2201      	movs	r2, #1
 8006034:	601a      	str	r2, [r3, #0]
 8006036:	4b38      	ldr	r3, [pc, #224]	; (8006118 <HAL_FMC_MspInit+0x104>)
 8006038:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800603a:	4a37      	ldr	r2, [pc, #220]	; (8006118 <HAL_FMC_MspInit+0x104>)
 800603c:	f043 0301 	orr.w	r3, r3, #1
 8006040:	6393      	str	r3, [r2, #56]	; 0x38
 8006042:	4b35      	ldr	r3, [pc, #212]	; (8006118 <HAL_FMC_MspInit+0x104>)
 8006044:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006046:	f003 0301 	and.w	r3, r3, #1
 800604a:	603b      	str	r3, [r7, #0]
 800604c:	683b      	ldr	r3, [r7, #0]
 800604e:	f64f 7383 	movw	r3, #65411	; 0xff83
 8006052:	607b      	str	r3, [r7, #4]
 8006054:	2302      	movs	r3, #2
 8006056:	60bb      	str	r3, [r7, #8]
 8006058:	2300      	movs	r3, #0
 800605a:	60fb      	str	r3, [r7, #12]
 800605c:	2303      	movs	r3, #3
 800605e:	613b      	str	r3, [r7, #16]
 8006060:	230c      	movs	r3, #12
 8006062:	617b      	str	r3, [r7, #20]
 8006064:	1d3b      	adds	r3, r7, #4
 8006066:	4619      	mov	r1, r3
 8006068:	482c      	ldr	r0, [pc, #176]	; (800611c <HAL_FMC_MspInit+0x108>)
 800606a:	f001 fbc9 	bl	8007800 <HAL_GPIO_Init>
 800606e:	f248 1333 	movw	r3, #33075	; 0x8133
 8006072:	607b      	str	r3, [r7, #4]
 8006074:	2302      	movs	r3, #2
 8006076:	60bb      	str	r3, [r7, #8]
 8006078:	2300      	movs	r3, #0
 800607a:	60fb      	str	r3, [r7, #12]
 800607c:	2303      	movs	r3, #3
 800607e:	613b      	str	r3, [r7, #16]
 8006080:	230c      	movs	r3, #12
 8006082:	617b      	str	r3, [r7, #20]
 8006084:	1d3b      	adds	r3, r7, #4
 8006086:	4619      	mov	r1, r3
 8006088:	4825      	ldr	r0, [pc, #148]	; (8006120 <HAL_FMC_MspInit+0x10c>)
 800608a:	f001 fbb9 	bl	8007800 <HAL_GPIO_Init>
 800608e:	f24c 7303 	movw	r3, #50947	; 0xc703
 8006092:	607b      	str	r3, [r7, #4]
 8006094:	2302      	movs	r3, #2
 8006096:	60bb      	str	r3, [r7, #8]
 8006098:	2300      	movs	r3, #0
 800609a:	60fb      	str	r3, [r7, #12]
 800609c:	2303      	movs	r3, #3
 800609e:	613b      	str	r3, [r7, #16]
 80060a0:	230c      	movs	r3, #12
 80060a2:	617b      	str	r3, [r7, #20]
 80060a4:	1d3b      	adds	r3, r7, #4
 80060a6:	4619      	mov	r1, r3
 80060a8:	481e      	ldr	r0, [pc, #120]	; (8006124 <HAL_FMC_MspInit+0x110>)
 80060aa:	f001 fba9 	bl	8007800 <HAL_GPIO_Init>
 80060ae:	f64f 033f 	movw	r3, #63551	; 0xf83f
 80060b2:	607b      	str	r3, [r7, #4]
 80060b4:	2302      	movs	r3, #2
 80060b6:	60bb      	str	r3, [r7, #8]
 80060b8:	2300      	movs	r3, #0
 80060ba:	60fb      	str	r3, [r7, #12]
 80060bc:	2303      	movs	r3, #3
 80060be:	613b      	str	r3, [r7, #16]
 80060c0:	230c      	movs	r3, #12
 80060c2:	617b      	str	r3, [r7, #20]
 80060c4:	1d3b      	adds	r3, r7, #4
 80060c6:	4619      	mov	r1, r3
 80060c8:	4817      	ldr	r0, [pc, #92]	; (8006128 <HAL_FMC_MspInit+0x114>)
 80060ca:	f001 fb99 	bl	8007800 <HAL_GPIO_Init>
 80060ce:	2328      	movs	r3, #40	; 0x28
 80060d0:	607b      	str	r3, [r7, #4]
 80060d2:	2302      	movs	r3, #2
 80060d4:	60bb      	str	r3, [r7, #8]
 80060d6:	2300      	movs	r3, #0
 80060d8:	60fb      	str	r3, [r7, #12]
 80060da:	2303      	movs	r3, #3
 80060dc:	613b      	str	r3, [r7, #16]
 80060de:	230c      	movs	r3, #12
 80060e0:	617b      	str	r3, [r7, #20]
 80060e2:	1d3b      	adds	r3, r7, #4
 80060e4:	4619      	mov	r1, r3
 80060e6:	4811      	ldr	r0, [pc, #68]	; (800612c <HAL_FMC_MspInit+0x118>)
 80060e8:	f001 fb8a 	bl	8007800 <HAL_GPIO_Init>
 80060ec:	2308      	movs	r3, #8
 80060ee:	607b      	str	r3, [r7, #4]
 80060f0:	2302      	movs	r3, #2
 80060f2:	60bb      	str	r3, [r7, #8]
 80060f4:	2300      	movs	r3, #0
 80060f6:	60fb      	str	r3, [r7, #12]
 80060f8:	2303      	movs	r3, #3
 80060fa:	613b      	str	r3, [r7, #16]
 80060fc:	230c      	movs	r3, #12
 80060fe:	617b      	str	r3, [r7, #20]
 8006100:	1d3b      	adds	r3, r7, #4
 8006102:	4619      	mov	r1, r3
 8006104:	480a      	ldr	r0, [pc, #40]	; (8006130 <HAL_FMC_MspInit+0x11c>)
 8006106:	f001 fb7b 	bl	8007800 <HAL_GPIO_Init>
 800610a:	e000      	b.n	800610e <HAL_FMC_MspInit+0xfa>
 800610c:	bf00      	nop
 800610e:	3718      	adds	r7, #24
 8006110:	46bd      	mov	sp, r7
 8006112:	bd80      	pop	{r7, pc}
 8006114:	20001914 	.word	0x20001914
 8006118:	40023800 	.word	0x40023800
 800611c:	40021000 	.word	0x40021000
 8006120:	40021800 	.word	0x40021800
 8006124:	40020c00 	.word	0x40020c00
 8006128:	40021400 	.word	0x40021400
 800612c:	40021c00 	.word	0x40021c00
 8006130:	40020800 	.word	0x40020800

08006134 <HAL_SDRAM_MspInit>:
 8006134:	b580      	push	{r7, lr}
 8006136:	b082      	sub	sp, #8
 8006138:	af00      	add	r7, sp, #0
 800613a:	6078      	str	r0, [r7, #4]
 800613c:	f7ff ff6a 	bl	8006014 <HAL_FMC_MspInit>
 8006140:	bf00      	nop
 8006142:	3708      	adds	r7, #8
 8006144:	46bd      	mov	sp, r7
 8006146:	bd80      	pop	{r7, pc}

08006148 <HAL_InitTick>:
 8006148:	b580      	push	{r7, lr}
 800614a:	b08c      	sub	sp, #48	; 0x30
 800614c:	af00      	add	r7, sp, #0
 800614e:	6078      	str	r0, [r7, #4]
 8006150:	2300      	movs	r3, #0
 8006152:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006154:	2300      	movs	r3, #0
 8006156:	62bb      	str	r3, [r7, #40]	; 0x28
 8006158:	2200      	movs	r2, #0
 800615a:	6879      	ldr	r1, [r7, #4]
 800615c:	2036      	movs	r0, #54	; 0x36
 800615e:	f000 fded 	bl	8006d3c <HAL_NVIC_SetPriority>
 8006162:	2036      	movs	r0, #54	; 0x36
 8006164:	f000 fe06 	bl	8006d74 <HAL_NVIC_EnableIRQ>
 8006168:	4b1f      	ldr	r3, [pc, #124]	; (80061e8 <HAL_InitTick+0xa0>)
 800616a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800616c:	4a1e      	ldr	r2, [pc, #120]	; (80061e8 <HAL_InitTick+0xa0>)
 800616e:	f043 0310 	orr.w	r3, r3, #16
 8006172:	6413      	str	r3, [r2, #64]	; 0x40
 8006174:	4b1c      	ldr	r3, [pc, #112]	; (80061e8 <HAL_InitTick+0xa0>)
 8006176:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006178:	f003 0310 	and.w	r3, r3, #16
 800617c:	60fb      	str	r3, [r7, #12]
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	f107 0210 	add.w	r2, r7, #16
 8006184:	f107 0314 	add.w	r3, r7, #20
 8006188:	4611      	mov	r1, r2
 800618a:	4618      	mov	r0, r3
 800618c:	f003 fc34 	bl	80099f8 <HAL_RCC_GetClockConfig>
 8006190:	f003 fc0a 	bl	80099a8 <HAL_RCC_GetPCLK1Freq>
 8006194:	4603      	mov	r3, r0
 8006196:	005b      	lsls	r3, r3, #1
 8006198:	62fb      	str	r3, [r7, #44]	; 0x2c
 800619a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800619c:	4a13      	ldr	r2, [pc, #76]	; (80061ec <HAL_InitTick+0xa4>)
 800619e:	fba2 2303 	umull	r2, r3, r2, r3
 80061a2:	0c9b      	lsrs	r3, r3, #18
 80061a4:	3b01      	subs	r3, #1
 80061a6:	62bb      	str	r3, [r7, #40]	; 0x28
 80061a8:	4b11      	ldr	r3, [pc, #68]	; (80061f0 <HAL_InitTick+0xa8>)
 80061aa:	4a12      	ldr	r2, [pc, #72]	; (80061f4 <HAL_InitTick+0xac>)
 80061ac:	601a      	str	r2, [r3, #0]
 80061ae:	4b10      	ldr	r3, [pc, #64]	; (80061f0 <HAL_InitTick+0xa8>)
 80061b0:	f240 32e7 	movw	r2, #999	; 0x3e7
 80061b4:	60da      	str	r2, [r3, #12]
 80061b6:	4a0e      	ldr	r2, [pc, #56]	; (80061f0 <HAL_InitTick+0xa8>)
 80061b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80061ba:	6053      	str	r3, [r2, #4]
 80061bc:	4b0c      	ldr	r3, [pc, #48]	; (80061f0 <HAL_InitTick+0xa8>)
 80061be:	2200      	movs	r2, #0
 80061c0:	611a      	str	r2, [r3, #16]
 80061c2:	4b0b      	ldr	r3, [pc, #44]	; (80061f0 <HAL_InitTick+0xa8>)
 80061c4:	2200      	movs	r2, #0
 80061c6:	609a      	str	r2, [r3, #8]
 80061c8:	4809      	ldr	r0, [pc, #36]	; (80061f0 <HAL_InitTick+0xa8>)
 80061ca:	f004 fd08 	bl	800abde <HAL_TIM_Base_Init>
 80061ce:	4603      	mov	r3, r0
 80061d0:	2b00      	cmp	r3, #0
 80061d2:	d104      	bne.n	80061de <HAL_InitTick+0x96>
 80061d4:	4806      	ldr	r0, [pc, #24]	; (80061f0 <HAL_InitTick+0xa8>)
 80061d6:	f004 fd2d 	bl	800ac34 <HAL_TIM_Base_Start_IT>
 80061da:	4603      	mov	r3, r0
 80061dc:	e000      	b.n	80061e0 <HAL_InitTick+0x98>
 80061de:	2301      	movs	r3, #1
 80061e0:	4618      	mov	r0, r3
 80061e2:	3730      	adds	r7, #48	; 0x30
 80061e4:	46bd      	mov	sp, r7
 80061e6:	bd80      	pop	{r7, pc}
 80061e8:	40023800 	.word	0x40023800
 80061ec:	431bde83 	.word	0x431bde83
 80061f0:	2000a10c 	.word	0x2000a10c
 80061f4:	40001000 	.word	0x40001000

080061f8 <NMI_Handler>:
 80061f8:	b480      	push	{r7}
 80061fa:	af00      	add	r7, sp, #0
 80061fc:	e7fe      	b.n	80061fc <NMI_Handler+0x4>

080061fe <HardFault_Handler>:
 80061fe:	b480      	push	{r7}
 8006200:	af00      	add	r7, sp, #0
 8006202:	e7fe      	b.n	8006202 <HardFault_Handler+0x4>

08006204 <MemManage_Handler>:
 8006204:	b480      	push	{r7}
 8006206:	af00      	add	r7, sp, #0
 8006208:	e7fe      	b.n	8006208 <MemManage_Handler+0x4>

0800620a <BusFault_Handler>:
 800620a:	b480      	push	{r7}
 800620c:	af00      	add	r7, sp, #0
 800620e:	e7fe      	b.n	800620e <BusFault_Handler+0x4>

08006210 <UsageFault_Handler>:
 8006210:	b480      	push	{r7}
 8006212:	af00      	add	r7, sp, #0
 8006214:	e7fe      	b.n	8006214 <UsageFault_Handler+0x4>

08006216 <DebugMon_Handler>:
 8006216:	b480      	push	{r7}
 8006218:	af00      	add	r7, sp, #0
 800621a:	bf00      	nop
 800621c:	46bd      	mov	sp, r7
 800621e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006222:	4770      	bx	lr

08006224 <EXTI9_5_IRQHandler>:
 8006224:	b580      	push	{r7, lr}
 8006226:	af00      	add	r7, sp, #0
 8006228:	2080      	movs	r0, #128	; 0x80
 800622a:	f001 fdcf 	bl	8007dcc <HAL_GPIO_EXTI_IRQHandler>
 800622e:	f44f 7080 	mov.w	r0, #256	; 0x100
 8006232:	f001 fdcb 	bl	8007dcc <HAL_GPIO_EXTI_IRQHandler>
 8006236:	bf00      	nop
 8006238:	bd80      	pop	{r7, pc}
	...

0800623c <USART1_IRQHandler>:
 800623c:	b580      	push	{r7, lr}
 800623e:	af00      	add	r7, sp, #0
 8006240:	4802      	ldr	r0, [pc, #8]	; (800624c <USART1_IRQHandler+0x10>)
 8006242:	f005 ffa7 	bl	800c194 <HAL_UART_IRQHandler>
 8006246:	bf00      	nop
 8006248:	bd80      	pop	{r7, pc}
 800624a:	bf00      	nop
 800624c:	20009df0 	.word	0x20009df0

08006250 <EXTI15_10_IRQHandler>:
 8006250:	b580      	push	{r7, lr}
 8006252:	af00      	add	r7, sp, #0
 8006254:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8006258:	f001 fdb8 	bl	8007dcc <HAL_GPIO_EXTI_IRQHandler>
 800625c:	bf00      	nop
 800625e:	bd80      	pop	{r7, pc}

08006260 <TIM6_DAC_IRQHandler>:
 8006260:	b580      	push	{r7, lr}
 8006262:	af00      	add	r7, sp, #0
 8006264:	4803      	ldr	r0, [pc, #12]	; (8006274 <TIM6_DAC_IRQHandler+0x14>)
 8006266:	f000 fdb5 	bl	8006dd4 <HAL_DAC_IRQHandler>
 800626a:	4803      	ldr	r0, [pc, #12]	; (8006278 <TIM6_DAC_IRQHandler+0x18>)
 800626c:	f004 fd41 	bl	800acf2 <HAL_TIM_IRQHandler>
 8006270:	bf00      	nop
 8006272:	bd80      	pop	{r7, pc}
 8006274:	20009e70 	.word	0x20009e70
 8006278:	2000a10c 	.word	0x2000a10c

0800627c <LTDC_IRQHandler>:
 800627c:	b580      	push	{r7, lr}
 800627e:	af00      	add	r7, sp, #0
 8006280:	4802      	ldr	r0, [pc, #8]	; (800628c <LTDC_IRQHandler+0x10>)
 8006282:	f002 fc3b 	bl	8008afc <HAL_LTDC_IRQHandler>
 8006286:	bf00      	nop
 8006288:	bd80      	pop	{r7, pc}
 800628a:	bf00      	nop
 800628c:	20009cb8 	.word	0x20009cb8

08006290 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8006290:	b580      	push	{r7, lr}
 8006292:	b086      	sub	sp, #24
 8006294:	af00      	add	r7, sp, #0
 8006296:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8006298:	4a14      	ldr	r2, [pc, #80]	; (80062ec <_sbrk+0x5c>)
 800629a:	4b15      	ldr	r3, [pc, #84]	; (80062f0 <_sbrk+0x60>)
 800629c:	1ad3      	subs	r3, r2, r3
 800629e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80062a0:	697b      	ldr	r3, [r7, #20]
 80062a2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80062a4:	4b13      	ldr	r3, [pc, #76]	; (80062f4 <_sbrk+0x64>)
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	d102      	bne.n	80062b2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80062ac:	4b11      	ldr	r3, [pc, #68]	; (80062f4 <_sbrk+0x64>)
 80062ae:	4a12      	ldr	r2, [pc, #72]	; (80062f8 <_sbrk+0x68>)
 80062b0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80062b2:	4b10      	ldr	r3, [pc, #64]	; (80062f4 <_sbrk+0x64>)
 80062b4:	681a      	ldr	r2, [r3, #0]
 80062b6:	687b      	ldr	r3, [r7, #4]
 80062b8:	4413      	add	r3, r2
 80062ba:	693a      	ldr	r2, [r7, #16]
 80062bc:	429a      	cmp	r2, r3
 80062be:	d207      	bcs.n	80062d0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80062c0:	f009 f8ae 	bl	800f420 <__errno>
 80062c4:	4602      	mov	r2, r0
 80062c6:	230c      	movs	r3, #12
 80062c8:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 80062ca:	f04f 33ff 	mov.w	r3, #4294967295
 80062ce:	e009      	b.n	80062e4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80062d0:	4b08      	ldr	r3, [pc, #32]	; (80062f4 <_sbrk+0x64>)
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80062d6:	4b07      	ldr	r3, [pc, #28]	; (80062f4 <_sbrk+0x64>)
 80062d8:	681a      	ldr	r2, [r3, #0]
 80062da:	687b      	ldr	r3, [r7, #4]
 80062dc:	4413      	add	r3, r2
 80062de:	4a05      	ldr	r2, [pc, #20]	; (80062f4 <_sbrk+0x64>)
 80062e0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80062e2:	68fb      	ldr	r3, [r7, #12]
}
 80062e4:	4618      	mov	r0, r3
 80062e6:	3718      	adds	r7, #24
 80062e8:	46bd      	mov	sp, r7
 80062ea:	bd80      	pop	{r7, pc}
 80062ec:	20050000 	.word	0x20050000
 80062f0:	00000400 	.word	0x00000400
 80062f4:	20001918 	.word	0x20001918
 80062f8:	2000a158 	.word	0x2000a158

080062fc <SystemInit>:
 80062fc:	b480      	push	{r7}
 80062fe:	af00      	add	r7, sp, #0
 8006300:	4b08      	ldr	r3, [pc, #32]	; (8006324 <SystemInit+0x28>)
 8006302:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8006306:	4a07      	ldr	r2, [pc, #28]	; (8006324 <SystemInit+0x28>)
 8006308:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800630c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8006310:	4b04      	ldr	r3, [pc, #16]	; (8006324 <SystemInit+0x28>)
 8006312:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8006316:	609a      	str	r2, [r3, #8]
 8006318:	bf00      	nop
 800631a:	46bd      	mov	sp, r7
 800631c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006320:	4770      	bx	lr
 8006322:	bf00      	nop
 8006324:	e000ed00 	.word	0xe000ed00

08006328 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8006328:	f8df d034 	ldr.w	sp, [pc, #52]	; 8006360 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800632c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800632e:	e003      	b.n	8006338 <LoopCopyDataInit>

08006330 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8006330:	4b0c      	ldr	r3, [pc, #48]	; (8006364 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8006332:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8006334:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8006336:	3104      	adds	r1, #4

08006338 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8006338:	480b      	ldr	r0, [pc, #44]	; (8006368 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800633a:	4b0c      	ldr	r3, [pc, #48]	; (800636c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800633c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800633e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8006340:	d3f6      	bcc.n	8006330 <CopyDataInit>
  ldr  r2, =_sbss
 8006342:	4a0b      	ldr	r2, [pc, #44]	; (8006370 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8006344:	e002      	b.n	800634c <LoopFillZerobss>

08006346 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8006346:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8006348:	f842 3b04 	str.w	r3, [r2], #4

0800634c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800634c:	4b09      	ldr	r3, [pc, #36]	; (8006374 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800634e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8006350:	d3f9      	bcc.n	8006346 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8006352:	f7ff ffd3 	bl	80062fc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8006356:	f009 f869 	bl	800f42c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800635a:	f7fa fbff 	bl	8000b5c <main>
  bx  lr    
 800635e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8006360:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8006364:	08011e0c 	.word	0x08011e0c
  ldr  r0, =_sdata
 8006368:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800636c:	20001428 	.word	0x20001428
  ldr  r2, =_sbss
 8006370:	20001428 	.word	0x20001428
  ldr  r3, = _ebss
 8006374:	2000a154 	.word	0x2000a154

08006378 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8006378:	e7fe      	b.n	8006378 <ADC_IRQHandler>

0800637a <HAL_Init>:
 800637a:	b580      	push	{r7, lr}
 800637c:	af00      	add	r7, sp, #0
 800637e:	2003      	movs	r0, #3
 8006380:	f000 fcd1 	bl	8006d26 <HAL_NVIC_SetPriorityGrouping>
 8006384:	2000      	movs	r0, #0
 8006386:	f7ff fedf 	bl	8006148 <HAL_InitTick>
 800638a:	f7ff f9a3 	bl	80056d4 <HAL_MspInit>
 800638e:	2300      	movs	r3, #0
 8006390:	4618      	mov	r0, r3
 8006392:	bd80      	pop	{r7, pc}

08006394 <HAL_IncTick>:
 8006394:	b480      	push	{r7}
 8006396:	af00      	add	r7, sp, #0
 8006398:	4b06      	ldr	r3, [pc, #24]	; (80063b4 <HAL_IncTick+0x20>)
 800639a:	781b      	ldrb	r3, [r3, #0]
 800639c:	461a      	mov	r2, r3
 800639e:	4b06      	ldr	r3, [pc, #24]	; (80063b8 <HAL_IncTick+0x24>)
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	4413      	add	r3, r2
 80063a4:	4a04      	ldr	r2, [pc, #16]	; (80063b8 <HAL_IncTick+0x24>)
 80063a6:	6013      	str	r3, [r2, #0]
 80063a8:	bf00      	nop
 80063aa:	46bd      	mov	sp, r7
 80063ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063b0:	4770      	bx	lr
 80063b2:	bf00      	nop
 80063b4:	200013bc 	.word	0x200013bc
 80063b8:	2000a14c 	.word	0x2000a14c

080063bc <HAL_GetTick>:
 80063bc:	b480      	push	{r7}
 80063be:	af00      	add	r7, sp, #0
 80063c0:	4b03      	ldr	r3, [pc, #12]	; (80063d0 <HAL_GetTick+0x14>)
 80063c2:	681b      	ldr	r3, [r3, #0]
 80063c4:	4618      	mov	r0, r3
 80063c6:	46bd      	mov	sp, r7
 80063c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063cc:	4770      	bx	lr
 80063ce:	bf00      	nop
 80063d0:	2000a14c 	.word	0x2000a14c

080063d4 <HAL_Delay>:
 80063d4:	b580      	push	{r7, lr}
 80063d6:	b084      	sub	sp, #16
 80063d8:	af00      	add	r7, sp, #0
 80063da:	6078      	str	r0, [r7, #4]
 80063dc:	f7ff ffee 	bl	80063bc <HAL_GetTick>
 80063e0:	60b8      	str	r0, [r7, #8]
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	60fb      	str	r3, [r7, #12]
 80063e6:	68fb      	ldr	r3, [r7, #12]
 80063e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80063ec:	d005      	beq.n	80063fa <HAL_Delay+0x26>
 80063ee:	4b09      	ldr	r3, [pc, #36]	; (8006414 <HAL_Delay+0x40>)
 80063f0:	781b      	ldrb	r3, [r3, #0]
 80063f2:	461a      	mov	r2, r3
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	4413      	add	r3, r2
 80063f8:	60fb      	str	r3, [r7, #12]
 80063fa:	bf00      	nop
 80063fc:	f7ff ffde 	bl	80063bc <HAL_GetTick>
 8006400:	4602      	mov	r2, r0
 8006402:	68bb      	ldr	r3, [r7, #8]
 8006404:	1ad3      	subs	r3, r2, r3
 8006406:	68fa      	ldr	r2, [r7, #12]
 8006408:	429a      	cmp	r2, r3
 800640a:	d8f7      	bhi.n	80063fc <HAL_Delay+0x28>
 800640c:	bf00      	nop
 800640e:	3710      	adds	r7, #16
 8006410:	46bd      	mov	sp, r7
 8006412:	bd80      	pop	{r7, pc}
 8006414:	200013bc 	.word	0x200013bc

08006418 <HAL_ADC_Init>:
 8006418:	b580      	push	{r7, lr}
 800641a:	b084      	sub	sp, #16
 800641c:	af00      	add	r7, sp, #0
 800641e:	6078      	str	r0, [r7, #4]
 8006420:	2300      	movs	r3, #0
 8006422:	73fb      	strb	r3, [r7, #15]
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	2b00      	cmp	r3, #0
 8006428:	d101      	bne.n	800642e <HAL_ADC_Init+0x16>
 800642a:	2301      	movs	r3, #1
 800642c:	e031      	b.n	8006492 <HAL_ADC_Init+0x7a>
 800642e:	687b      	ldr	r3, [r7, #4]
 8006430:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006432:	2b00      	cmp	r3, #0
 8006434:	d109      	bne.n	800644a <HAL_ADC_Init+0x32>
 8006436:	6878      	ldr	r0, [r7, #4]
 8006438:	f7ff f974 	bl	8005724 <HAL_ADC_MspInit>
 800643c:	687b      	ldr	r3, [r7, #4]
 800643e:	2200      	movs	r2, #0
 8006440:	645a      	str	r2, [r3, #68]	; 0x44
 8006442:	687b      	ldr	r3, [r7, #4]
 8006444:	2200      	movs	r2, #0
 8006446:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800644a:	687b      	ldr	r3, [r7, #4]
 800644c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800644e:	f003 0310 	and.w	r3, r3, #16
 8006452:	2b00      	cmp	r3, #0
 8006454:	d116      	bne.n	8006484 <HAL_ADC_Init+0x6c>
 8006456:	687b      	ldr	r3, [r7, #4]
 8006458:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800645a:	4b10      	ldr	r3, [pc, #64]	; (800649c <HAL_ADC_Init+0x84>)
 800645c:	4013      	ands	r3, r2
 800645e:	f043 0202 	orr.w	r2, r3, #2
 8006462:	687b      	ldr	r3, [r7, #4]
 8006464:	641a      	str	r2, [r3, #64]	; 0x40
 8006466:	6878      	ldr	r0, [r7, #4]
 8006468:	f000 fab6 	bl	80069d8 <ADC_Init>
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	2200      	movs	r2, #0
 8006470:	645a      	str	r2, [r3, #68]	; 0x44
 8006472:	687b      	ldr	r3, [r7, #4]
 8006474:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006476:	f023 0303 	bic.w	r3, r3, #3
 800647a:	f043 0201 	orr.w	r2, r3, #1
 800647e:	687b      	ldr	r3, [r7, #4]
 8006480:	641a      	str	r2, [r3, #64]	; 0x40
 8006482:	e001      	b.n	8006488 <HAL_ADC_Init+0x70>
 8006484:	2301      	movs	r3, #1
 8006486:	73fb      	strb	r3, [r7, #15]
 8006488:	687b      	ldr	r3, [r7, #4]
 800648a:	2200      	movs	r2, #0
 800648c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006490:	7bfb      	ldrb	r3, [r7, #15]
 8006492:	4618      	mov	r0, r3
 8006494:	3710      	adds	r7, #16
 8006496:	46bd      	mov	sp, r7
 8006498:	bd80      	pop	{r7, pc}
 800649a:	bf00      	nop
 800649c:	ffffeefd 	.word	0xffffeefd

080064a0 <HAL_ADC_Start>:
 80064a0:	b480      	push	{r7}
 80064a2:	b085      	sub	sp, #20
 80064a4:	af00      	add	r7, sp, #0
 80064a6:	6078      	str	r0, [r7, #4]
 80064a8:	2300      	movs	r3, #0
 80064aa:	60fb      	str	r3, [r7, #12]
 80064ac:	687b      	ldr	r3, [r7, #4]
 80064ae:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80064b2:	2b01      	cmp	r3, #1
 80064b4:	d101      	bne.n	80064ba <HAL_ADC_Start+0x1a>
 80064b6:	2302      	movs	r3, #2
 80064b8:	e0a0      	b.n	80065fc <HAL_ADC_Start+0x15c>
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	2201      	movs	r2, #1
 80064be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80064c2:	687b      	ldr	r3, [r7, #4]
 80064c4:	681b      	ldr	r3, [r3, #0]
 80064c6:	689b      	ldr	r3, [r3, #8]
 80064c8:	f003 0301 	and.w	r3, r3, #1
 80064cc:	2b01      	cmp	r3, #1
 80064ce:	d018      	beq.n	8006502 <HAL_ADC_Start+0x62>
 80064d0:	687b      	ldr	r3, [r7, #4]
 80064d2:	681b      	ldr	r3, [r3, #0]
 80064d4:	689a      	ldr	r2, [r3, #8]
 80064d6:	687b      	ldr	r3, [r7, #4]
 80064d8:	681b      	ldr	r3, [r3, #0]
 80064da:	f042 0201 	orr.w	r2, r2, #1
 80064de:	609a      	str	r2, [r3, #8]
 80064e0:	4b49      	ldr	r3, [pc, #292]	; (8006608 <HAL_ADC_Start+0x168>)
 80064e2:	681b      	ldr	r3, [r3, #0]
 80064e4:	4a49      	ldr	r2, [pc, #292]	; (800660c <HAL_ADC_Start+0x16c>)
 80064e6:	fba2 2303 	umull	r2, r3, r2, r3
 80064ea:	0c9a      	lsrs	r2, r3, #18
 80064ec:	4613      	mov	r3, r2
 80064ee:	005b      	lsls	r3, r3, #1
 80064f0:	4413      	add	r3, r2
 80064f2:	60fb      	str	r3, [r7, #12]
 80064f4:	e002      	b.n	80064fc <HAL_ADC_Start+0x5c>
 80064f6:	68fb      	ldr	r3, [r7, #12]
 80064f8:	3b01      	subs	r3, #1
 80064fa:	60fb      	str	r3, [r7, #12]
 80064fc:	68fb      	ldr	r3, [r7, #12]
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d1f9      	bne.n	80064f6 <HAL_ADC_Start+0x56>
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	681b      	ldr	r3, [r3, #0]
 8006506:	689b      	ldr	r3, [r3, #8]
 8006508:	f003 0301 	and.w	r3, r3, #1
 800650c:	2b01      	cmp	r3, #1
 800650e:	d174      	bne.n	80065fa <HAL_ADC_Start+0x15a>
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006514:	4b3e      	ldr	r3, [pc, #248]	; (8006610 <HAL_ADC_Start+0x170>)
 8006516:	4013      	ands	r3, r2
 8006518:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800651c:	687b      	ldr	r3, [r7, #4]
 800651e:	641a      	str	r2, [r3, #64]	; 0x40
 8006520:	687b      	ldr	r3, [r7, #4]
 8006522:	681b      	ldr	r3, [r3, #0]
 8006524:	685b      	ldr	r3, [r3, #4]
 8006526:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800652a:	2b00      	cmp	r3, #0
 800652c:	d007      	beq.n	800653e <HAL_ADC_Start+0x9e>
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006532:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8006536:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	641a      	str	r2, [r3, #64]	; 0x40
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006542:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006546:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800654a:	d106      	bne.n	800655a <HAL_ADC_Start+0xba>
 800654c:	687b      	ldr	r3, [r7, #4]
 800654e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006550:	f023 0206 	bic.w	r2, r3, #6
 8006554:	687b      	ldr	r3, [r7, #4]
 8006556:	645a      	str	r2, [r3, #68]	; 0x44
 8006558:	e002      	b.n	8006560 <HAL_ADC_Start+0xc0>
 800655a:	687b      	ldr	r3, [r7, #4]
 800655c:	2200      	movs	r2, #0
 800655e:	645a      	str	r2, [r3, #68]	; 0x44
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	2200      	movs	r2, #0
 8006564:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006568:	687b      	ldr	r3, [r7, #4]
 800656a:	681b      	ldr	r3, [r3, #0]
 800656c:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8006570:	601a      	str	r2, [r3, #0]
 8006572:	4b28      	ldr	r3, [pc, #160]	; (8006614 <HAL_ADC_Start+0x174>)
 8006574:	685b      	ldr	r3, [r3, #4]
 8006576:	f003 031f 	and.w	r3, r3, #31
 800657a:	2b00      	cmp	r3, #0
 800657c:	d10f      	bne.n	800659e <HAL_ADC_Start+0xfe>
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	689b      	ldr	r3, [r3, #8]
 8006584:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8006588:	2b00      	cmp	r3, #0
 800658a:	d136      	bne.n	80065fa <HAL_ADC_Start+0x15a>
 800658c:	687b      	ldr	r3, [r7, #4]
 800658e:	681b      	ldr	r3, [r3, #0]
 8006590:	689a      	ldr	r2, [r3, #8]
 8006592:	687b      	ldr	r3, [r7, #4]
 8006594:	681b      	ldr	r3, [r3, #0]
 8006596:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800659a:	609a      	str	r2, [r3, #8]
 800659c:	e02d      	b.n	80065fa <HAL_ADC_Start+0x15a>
 800659e:	687b      	ldr	r3, [r7, #4]
 80065a0:	681b      	ldr	r3, [r3, #0]
 80065a2:	4a1d      	ldr	r2, [pc, #116]	; (8006618 <HAL_ADC_Start+0x178>)
 80065a4:	4293      	cmp	r3, r2
 80065a6:	d10e      	bne.n	80065c6 <HAL_ADC_Start+0x126>
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	689b      	ldr	r3, [r3, #8]
 80065ae:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80065b2:	2b00      	cmp	r3, #0
 80065b4:	d107      	bne.n	80065c6 <HAL_ADC_Start+0x126>
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	681b      	ldr	r3, [r3, #0]
 80065ba:	689a      	ldr	r2, [r3, #8]
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	681b      	ldr	r3, [r3, #0]
 80065c0:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80065c4:	609a      	str	r2, [r3, #8]
 80065c6:	4b13      	ldr	r3, [pc, #76]	; (8006614 <HAL_ADC_Start+0x174>)
 80065c8:	685b      	ldr	r3, [r3, #4]
 80065ca:	f003 0310 	and.w	r3, r3, #16
 80065ce:	2b00      	cmp	r3, #0
 80065d0:	d113      	bne.n	80065fa <HAL_ADC_Start+0x15a>
 80065d2:	687b      	ldr	r3, [r7, #4]
 80065d4:	681b      	ldr	r3, [r3, #0]
 80065d6:	4a11      	ldr	r2, [pc, #68]	; (800661c <HAL_ADC_Start+0x17c>)
 80065d8:	4293      	cmp	r3, r2
 80065da:	d10e      	bne.n	80065fa <HAL_ADC_Start+0x15a>
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	689b      	ldr	r3, [r3, #8]
 80065e2:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80065e6:	2b00      	cmp	r3, #0
 80065e8:	d107      	bne.n	80065fa <HAL_ADC_Start+0x15a>
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	681b      	ldr	r3, [r3, #0]
 80065ee:	689a      	ldr	r2, [r3, #8]
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	681b      	ldr	r3, [r3, #0]
 80065f4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80065f8:	609a      	str	r2, [r3, #8]
 80065fa:	2300      	movs	r3, #0
 80065fc:	4618      	mov	r0, r3
 80065fe:	3714      	adds	r7, #20
 8006600:	46bd      	mov	sp, r7
 8006602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006606:	4770      	bx	lr
 8006608:	200013b4 	.word	0x200013b4
 800660c:	431bde83 	.word	0x431bde83
 8006610:	fffff8fe 	.word	0xfffff8fe
 8006614:	40012300 	.word	0x40012300
 8006618:	40012000 	.word	0x40012000
 800661c:	40012200 	.word	0x40012200

08006620 <HAL_ADC_PollForConversion>:
 8006620:	b580      	push	{r7, lr}
 8006622:	b084      	sub	sp, #16
 8006624:	af00      	add	r7, sp, #0
 8006626:	6078      	str	r0, [r7, #4]
 8006628:	6039      	str	r1, [r7, #0]
 800662a:	2300      	movs	r3, #0
 800662c:	60fb      	str	r3, [r7, #12]
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	689b      	ldr	r3, [r3, #8]
 8006634:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006638:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800663c:	d113      	bne.n	8006666 <HAL_ADC_PollForConversion+0x46>
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	689b      	ldr	r3, [r3, #8]
 8006644:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006648:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800664c:	d10b      	bne.n	8006666 <HAL_ADC_PollForConversion+0x46>
 800664e:	687b      	ldr	r3, [r7, #4]
 8006650:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006652:	f043 0220 	orr.w	r2, r3, #32
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	641a      	str	r2, [r3, #64]	; 0x40
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	2200      	movs	r2, #0
 800665e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006662:	2301      	movs	r3, #1
 8006664:	e05c      	b.n	8006720 <HAL_ADC_PollForConversion+0x100>
 8006666:	f7ff fea9 	bl	80063bc <HAL_GetTick>
 800666a:	60f8      	str	r0, [r7, #12]
 800666c:	e01a      	b.n	80066a4 <HAL_ADC_PollForConversion+0x84>
 800666e:	683b      	ldr	r3, [r7, #0]
 8006670:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006674:	d016      	beq.n	80066a4 <HAL_ADC_PollForConversion+0x84>
 8006676:	683b      	ldr	r3, [r7, #0]
 8006678:	2b00      	cmp	r3, #0
 800667a:	d007      	beq.n	800668c <HAL_ADC_PollForConversion+0x6c>
 800667c:	f7ff fe9e 	bl	80063bc <HAL_GetTick>
 8006680:	4602      	mov	r2, r0
 8006682:	68fb      	ldr	r3, [r7, #12]
 8006684:	1ad3      	subs	r3, r2, r3
 8006686:	683a      	ldr	r2, [r7, #0]
 8006688:	429a      	cmp	r2, r3
 800668a:	d20b      	bcs.n	80066a4 <HAL_ADC_PollForConversion+0x84>
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006690:	f043 0204 	orr.w	r2, r3, #4
 8006694:	687b      	ldr	r3, [r7, #4]
 8006696:	641a      	str	r2, [r3, #64]	; 0x40
 8006698:	687b      	ldr	r3, [r7, #4]
 800669a:	2200      	movs	r2, #0
 800669c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80066a0:	2303      	movs	r3, #3
 80066a2:	e03d      	b.n	8006720 <HAL_ADC_PollForConversion+0x100>
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	681b      	ldr	r3, [r3, #0]
 80066a8:	681b      	ldr	r3, [r3, #0]
 80066aa:	f003 0302 	and.w	r3, r3, #2
 80066ae:	2b02      	cmp	r3, #2
 80066b0:	d1dd      	bne.n	800666e <HAL_ADC_PollForConversion+0x4e>
 80066b2:	687b      	ldr	r3, [r7, #4]
 80066b4:	681b      	ldr	r3, [r3, #0]
 80066b6:	f06f 0212 	mvn.w	r2, #18
 80066ba:	601a      	str	r2, [r3, #0]
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066c0:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80066c4:	687b      	ldr	r3, [r7, #4]
 80066c6:	641a      	str	r2, [r3, #64]	; 0x40
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	681b      	ldr	r3, [r3, #0]
 80066cc:	689b      	ldr	r3, [r3, #8]
 80066ce:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80066d2:	2b00      	cmp	r3, #0
 80066d4:	d123      	bne.n	800671e <HAL_ADC_PollForConversion+0xfe>
 80066d6:	687b      	ldr	r3, [r7, #4]
 80066d8:	699b      	ldr	r3, [r3, #24]
 80066da:	2b00      	cmp	r3, #0
 80066dc:	d11f      	bne.n	800671e <HAL_ADC_PollForConversion+0xfe>
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80066e4:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 80066e8:	2b00      	cmp	r3, #0
 80066ea:	d006      	beq.n	80066fa <HAL_ADC_PollForConversion+0xda>
 80066ec:	687b      	ldr	r3, [r7, #4]
 80066ee:	681b      	ldr	r3, [r3, #0]
 80066f0:	689b      	ldr	r3, [r3, #8]
 80066f2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80066f6:	2b00      	cmp	r3, #0
 80066f8:	d111      	bne.n	800671e <HAL_ADC_PollForConversion+0xfe>
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066fe:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006702:	687b      	ldr	r3, [r7, #4]
 8006704:	641a      	str	r2, [r3, #64]	; 0x40
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800670a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800670e:	2b00      	cmp	r3, #0
 8006710:	d105      	bne.n	800671e <HAL_ADC_PollForConversion+0xfe>
 8006712:	687b      	ldr	r3, [r7, #4]
 8006714:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006716:	f043 0201 	orr.w	r2, r3, #1
 800671a:	687b      	ldr	r3, [r7, #4]
 800671c:	641a      	str	r2, [r3, #64]	; 0x40
 800671e:	2300      	movs	r3, #0
 8006720:	4618      	mov	r0, r3
 8006722:	3710      	adds	r7, #16
 8006724:	46bd      	mov	sp, r7
 8006726:	bd80      	pop	{r7, pc}

08006728 <HAL_ADC_GetValue>:
 8006728:	b480      	push	{r7}
 800672a:	b083      	sub	sp, #12
 800672c:	af00      	add	r7, sp, #0
 800672e:	6078      	str	r0, [r7, #4]
 8006730:	687b      	ldr	r3, [r7, #4]
 8006732:	681b      	ldr	r3, [r3, #0]
 8006734:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006736:	4618      	mov	r0, r3
 8006738:	370c      	adds	r7, #12
 800673a:	46bd      	mov	sp, r7
 800673c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006740:	4770      	bx	lr
	...

08006744 <HAL_ADC_ConfigChannel>:
 8006744:	b480      	push	{r7}
 8006746:	b085      	sub	sp, #20
 8006748:	af00      	add	r7, sp, #0
 800674a:	6078      	str	r0, [r7, #4]
 800674c:	6039      	str	r1, [r7, #0]
 800674e:	2300      	movs	r3, #0
 8006750:	60fb      	str	r3, [r7, #12]
 8006752:	687b      	ldr	r3, [r7, #4]
 8006754:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006758:	2b01      	cmp	r3, #1
 800675a:	d101      	bne.n	8006760 <HAL_ADC_ConfigChannel+0x1c>
 800675c:	2302      	movs	r3, #2
 800675e:	e12a      	b.n	80069b6 <HAL_ADC_ConfigChannel+0x272>
 8006760:	687b      	ldr	r3, [r7, #4]
 8006762:	2201      	movs	r2, #1
 8006764:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006768:	683b      	ldr	r3, [r7, #0]
 800676a:	681b      	ldr	r3, [r3, #0]
 800676c:	2b09      	cmp	r3, #9
 800676e:	d93a      	bls.n	80067e6 <HAL_ADC_ConfigChannel+0xa2>
 8006770:	683b      	ldr	r3, [r7, #0]
 8006772:	681b      	ldr	r3, [r3, #0]
 8006774:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8006778:	d035      	beq.n	80067e6 <HAL_ADC_ConfigChannel+0xa2>
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	681b      	ldr	r3, [r3, #0]
 800677e:	68d9      	ldr	r1, [r3, #12]
 8006780:	683b      	ldr	r3, [r7, #0]
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	b29b      	uxth	r3, r3
 8006786:	461a      	mov	r2, r3
 8006788:	4613      	mov	r3, r2
 800678a:	005b      	lsls	r3, r3, #1
 800678c:	4413      	add	r3, r2
 800678e:	3b1e      	subs	r3, #30
 8006790:	2207      	movs	r2, #7
 8006792:	fa02 f303 	lsl.w	r3, r2, r3
 8006796:	43da      	mvns	r2, r3
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	400a      	ands	r2, r1
 800679e:	60da      	str	r2, [r3, #12]
 80067a0:	683b      	ldr	r3, [r7, #0]
 80067a2:	681b      	ldr	r3, [r3, #0]
 80067a4:	4a87      	ldr	r2, [pc, #540]	; (80069c4 <HAL_ADC_ConfigChannel+0x280>)
 80067a6:	4293      	cmp	r3, r2
 80067a8:	d10a      	bne.n	80067c0 <HAL_ADC_ConfigChannel+0x7c>
 80067aa:	687b      	ldr	r3, [r7, #4]
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	68d9      	ldr	r1, [r3, #12]
 80067b0:	683b      	ldr	r3, [r7, #0]
 80067b2:	689b      	ldr	r3, [r3, #8]
 80067b4:	061a      	lsls	r2, r3, #24
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	430a      	orrs	r2, r1
 80067bc:	60da      	str	r2, [r3, #12]
 80067be:	e035      	b.n	800682c <HAL_ADC_ConfigChannel+0xe8>
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	681b      	ldr	r3, [r3, #0]
 80067c4:	68d9      	ldr	r1, [r3, #12]
 80067c6:	683b      	ldr	r3, [r7, #0]
 80067c8:	689a      	ldr	r2, [r3, #8]
 80067ca:	683b      	ldr	r3, [r7, #0]
 80067cc:	681b      	ldr	r3, [r3, #0]
 80067ce:	b29b      	uxth	r3, r3
 80067d0:	4618      	mov	r0, r3
 80067d2:	4603      	mov	r3, r0
 80067d4:	005b      	lsls	r3, r3, #1
 80067d6:	4403      	add	r3, r0
 80067d8:	3b1e      	subs	r3, #30
 80067da:	409a      	lsls	r2, r3
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	681b      	ldr	r3, [r3, #0]
 80067e0:	430a      	orrs	r2, r1
 80067e2:	60da      	str	r2, [r3, #12]
 80067e4:	e022      	b.n	800682c <HAL_ADC_ConfigChannel+0xe8>
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	6919      	ldr	r1, [r3, #16]
 80067ec:	683b      	ldr	r3, [r7, #0]
 80067ee:	681b      	ldr	r3, [r3, #0]
 80067f0:	b29b      	uxth	r3, r3
 80067f2:	461a      	mov	r2, r3
 80067f4:	4613      	mov	r3, r2
 80067f6:	005b      	lsls	r3, r3, #1
 80067f8:	4413      	add	r3, r2
 80067fa:	2207      	movs	r2, #7
 80067fc:	fa02 f303 	lsl.w	r3, r2, r3
 8006800:	43da      	mvns	r2, r3
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	681b      	ldr	r3, [r3, #0]
 8006806:	400a      	ands	r2, r1
 8006808:	611a      	str	r2, [r3, #16]
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	681b      	ldr	r3, [r3, #0]
 800680e:	6919      	ldr	r1, [r3, #16]
 8006810:	683b      	ldr	r3, [r7, #0]
 8006812:	689a      	ldr	r2, [r3, #8]
 8006814:	683b      	ldr	r3, [r7, #0]
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	b29b      	uxth	r3, r3
 800681a:	4618      	mov	r0, r3
 800681c:	4603      	mov	r3, r0
 800681e:	005b      	lsls	r3, r3, #1
 8006820:	4403      	add	r3, r0
 8006822:	409a      	lsls	r2, r3
 8006824:	687b      	ldr	r3, [r7, #4]
 8006826:	681b      	ldr	r3, [r3, #0]
 8006828:	430a      	orrs	r2, r1
 800682a:	611a      	str	r2, [r3, #16]
 800682c:	683b      	ldr	r3, [r7, #0]
 800682e:	685b      	ldr	r3, [r3, #4]
 8006830:	2b06      	cmp	r3, #6
 8006832:	d824      	bhi.n	800687e <HAL_ADC_ConfigChannel+0x13a>
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	681b      	ldr	r3, [r3, #0]
 8006838:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800683a:	683b      	ldr	r3, [r7, #0]
 800683c:	685a      	ldr	r2, [r3, #4]
 800683e:	4613      	mov	r3, r2
 8006840:	009b      	lsls	r3, r3, #2
 8006842:	4413      	add	r3, r2
 8006844:	3b05      	subs	r3, #5
 8006846:	221f      	movs	r2, #31
 8006848:	fa02 f303 	lsl.w	r3, r2, r3
 800684c:	43da      	mvns	r2, r3
 800684e:	687b      	ldr	r3, [r7, #4]
 8006850:	681b      	ldr	r3, [r3, #0]
 8006852:	400a      	ands	r2, r1
 8006854:	635a      	str	r2, [r3, #52]	; 0x34
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	681b      	ldr	r3, [r3, #0]
 800685a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800685c:	683b      	ldr	r3, [r7, #0]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	b29b      	uxth	r3, r3
 8006862:	4618      	mov	r0, r3
 8006864:	683b      	ldr	r3, [r7, #0]
 8006866:	685a      	ldr	r2, [r3, #4]
 8006868:	4613      	mov	r3, r2
 800686a:	009b      	lsls	r3, r3, #2
 800686c:	4413      	add	r3, r2
 800686e:	3b05      	subs	r3, #5
 8006870:	fa00 f203 	lsl.w	r2, r0, r3
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	681b      	ldr	r3, [r3, #0]
 8006878:	430a      	orrs	r2, r1
 800687a:	635a      	str	r2, [r3, #52]	; 0x34
 800687c:	e04c      	b.n	8006918 <HAL_ADC_ConfigChannel+0x1d4>
 800687e:	683b      	ldr	r3, [r7, #0]
 8006880:	685b      	ldr	r3, [r3, #4]
 8006882:	2b0c      	cmp	r3, #12
 8006884:	d824      	bhi.n	80068d0 <HAL_ADC_ConfigChannel+0x18c>
 8006886:	687b      	ldr	r3, [r7, #4]
 8006888:	681b      	ldr	r3, [r3, #0]
 800688a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800688c:	683b      	ldr	r3, [r7, #0]
 800688e:	685a      	ldr	r2, [r3, #4]
 8006890:	4613      	mov	r3, r2
 8006892:	009b      	lsls	r3, r3, #2
 8006894:	4413      	add	r3, r2
 8006896:	3b23      	subs	r3, #35	; 0x23
 8006898:	221f      	movs	r2, #31
 800689a:	fa02 f303 	lsl.w	r3, r2, r3
 800689e:	43da      	mvns	r2, r3
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	400a      	ands	r2, r1
 80068a6:	631a      	str	r2, [r3, #48]	; 0x30
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	681b      	ldr	r3, [r3, #0]
 80068ac:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80068ae:	683b      	ldr	r3, [r7, #0]
 80068b0:	681b      	ldr	r3, [r3, #0]
 80068b2:	b29b      	uxth	r3, r3
 80068b4:	4618      	mov	r0, r3
 80068b6:	683b      	ldr	r3, [r7, #0]
 80068b8:	685a      	ldr	r2, [r3, #4]
 80068ba:	4613      	mov	r3, r2
 80068bc:	009b      	lsls	r3, r3, #2
 80068be:	4413      	add	r3, r2
 80068c0:	3b23      	subs	r3, #35	; 0x23
 80068c2:	fa00 f203 	lsl.w	r2, r0, r3
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	681b      	ldr	r3, [r3, #0]
 80068ca:	430a      	orrs	r2, r1
 80068cc:	631a      	str	r2, [r3, #48]	; 0x30
 80068ce:	e023      	b.n	8006918 <HAL_ADC_ConfigChannel+0x1d4>
 80068d0:	687b      	ldr	r3, [r7, #4]
 80068d2:	681b      	ldr	r3, [r3, #0]
 80068d4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80068d6:	683b      	ldr	r3, [r7, #0]
 80068d8:	685a      	ldr	r2, [r3, #4]
 80068da:	4613      	mov	r3, r2
 80068dc:	009b      	lsls	r3, r3, #2
 80068de:	4413      	add	r3, r2
 80068e0:	3b41      	subs	r3, #65	; 0x41
 80068e2:	221f      	movs	r2, #31
 80068e4:	fa02 f303 	lsl.w	r3, r2, r3
 80068e8:	43da      	mvns	r2, r3
 80068ea:	687b      	ldr	r3, [r7, #4]
 80068ec:	681b      	ldr	r3, [r3, #0]
 80068ee:	400a      	ands	r2, r1
 80068f0:	62da      	str	r2, [r3, #44]	; 0x2c
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	681b      	ldr	r3, [r3, #0]
 80068f6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80068f8:	683b      	ldr	r3, [r7, #0]
 80068fa:	681b      	ldr	r3, [r3, #0]
 80068fc:	b29b      	uxth	r3, r3
 80068fe:	4618      	mov	r0, r3
 8006900:	683b      	ldr	r3, [r7, #0]
 8006902:	685a      	ldr	r2, [r3, #4]
 8006904:	4613      	mov	r3, r2
 8006906:	009b      	lsls	r3, r3, #2
 8006908:	4413      	add	r3, r2
 800690a:	3b41      	subs	r3, #65	; 0x41
 800690c:	fa00 f203 	lsl.w	r2, r0, r3
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	681b      	ldr	r3, [r3, #0]
 8006914:	430a      	orrs	r2, r1
 8006916:	62da      	str	r2, [r3, #44]	; 0x2c
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	681b      	ldr	r3, [r3, #0]
 800691c:	4a2a      	ldr	r2, [pc, #168]	; (80069c8 <HAL_ADC_ConfigChannel+0x284>)
 800691e:	4293      	cmp	r3, r2
 8006920:	d10a      	bne.n	8006938 <HAL_ADC_ConfigChannel+0x1f4>
 8006922:	683b      	ldr	r3, [r7, #0]
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800692a:	d105      	bne.n	8006938 <HAL_ADC_ConfigChannel+0x1f4>
 800692c:	4b27      	ldr	r3, [pc, #156]	; (80069cc <HAL_ADC_ConfigChannel+0x288>)
 800692e:	685b      	ldr	r3, [r3, #4]
 8006930:	4a26      	ldr	r2, [pc, #152]	; (80069cc <HAL_ADC_ConfigChannel+0x288>)
 8006932:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8006936:	6053      	str	r3, [r2, #4]
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	681b      	ldr	r3, [r3, #0]
 800693c:	4a22      	ldr	r2, [pc, #136]	; (80069c8 <HAL_ADC_ConfigChannel+0x284>)
 800693e:	4293      	cmp	r3, r2
 8006940:	d109      	bne.n	8006956 <HAL_ADC_ConfigChannel+0x212>
 8006942:	683b      	ldr	r3, [r7, #0]
 8006944:	681b      	ldr	r3, [r3, #0]
 8006946:	2b12      	cmp	r3, #18
 8006948:	d105      	bne.n	8006956 <HAL_ADC_ConfigChannel+0x212>
 800694a:	4b20      	ldr	r3, [pc, #128]	; (80069cc <HAL_ADC_ConfigChannel+0x288>)
 800694c:	685b      	ldr	r3, [r3, #4]
 800694e:	4a1f      	ldr	r2, [pc, #124]	; (80069cc <HAL_ADC_ConfigChannel+0x288>)
 8006950:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8006954:	6053      	str	r3, [r2, #4]
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	681b      	ldr	r3, [r3, #0]
 800695a:	4a1b      	ldr	r2, [pc, #108]	; (80069c8 <HAL_ADC_ConfigChannel+0x284>)
 800695c:	4293      	cmp	r3, r2
 800695e:	d125      	bne.n	80069ac <HAL_ADC_ConfigChannel+0x268>
 8006960:	683b      	ldr	r3, [r7, #0]
 8006962:	681b      	ldr	r3, [r3, #0]
 8006964:	4a17      	ldr	r2, [pc, #92]	; (80069c4 <HAL_ADC_ConfigChannel+0x280>)
 8006966:	4293      	cmp	r3, r2
 8006968:	d003      	beq.n	8006972 <HAL_ADC_ConfigChannel+0x22e>
 800696a:	683b      	ldr	r3, [r7, #0]
 800696c:	681b      	ldr	r3, [r3, #0]
 800696e:	2b11      	cmp	r3, #17
 8006970:	d11c      	bne.n	80069ac <HAL_ADC_ConfigChannel+0x268>
 8006972:	4b16      	ldr	r3, [pc, #88]	; (80069cc <HAL_ADC_ConfigChannel+0x288>)
 8006974:	685b      	ldr	r3, [r3, #4]
 8006976:	4a15      	ldr	r2, [pc, #84]	; (80069cc <HAL_ADC_ConfigChannel+0x288>)
 8006978:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800697c:	6053      	str	r3, [r2, #4]
 800697e:	683b      	ldr	r3, [r7, #0]
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	4a10      	ldr	r2, [pc, #64]	; (80069c4 <HAL_ADC_ConfigChannel+0x280>)
 8006984:	4293      	cmp	r3, r2
 8006986:	d111      	bne.n	80069ac <HAL_ADC_ConfigChannel+0x268>
 8006988:	4b11      	ldr	r3, [pc, #68]	; (80069d0 <HAL_ADC_ConfigChannel+0x28c>)
 800698a:	681b      	ldr	r3, [r3, #0]
 800698c:	4a11      	ldr	r2, [pc, #68]	; (80069d4 <HAL_ADC_ConfigChannel+0x290>)
 800698e:	fba2 2303 	umull	r2, r3, r2, r3
 8006992:	0c9a      	lsrs	r2, r3, #18
 8006994:	4613      	mov	r3, r2
 8006996:	009b      	lsls	r3, r3, #2
 8006998:	4413      	add	r3, r2
 800699a:	005b      	lsls	r3, r3, #1
 800699c:	60fb      	str	r3, [r7, #12]
 800699e:	e002      	b.n	80069a6 <HAL_ADC_ConfigChannel+0x262>
 80069a0:	68fb      	ldr	r3, [r7, #12]
 80069a2:	3b01      	subs	r3, #1
 80069a4:	60fb      	str	r3, [r7, #12]
 80069a6:	68fb      	ldr	r3, [r7, #12]
 80069a8:	2b00      	cmp	r3, #0
 80069aa:	d1f9      	bne.n	80069a0 <HAL_ADC_ConfigChannel+0x25c>
 80069ac:	687b      	ldr	r3, [r7, #4]
 80069ae:	2200      	movs	r2, #0
 80069b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80069b4:	2300      	movs	r3, #0
 80069b6:	4618      	mov	r0, r3
 80069b8:	3714      	adds	r7, #20
 80069ba:	46bd      	mov	sp, r7
 80069bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069c0:	4770      	bx	lr
 80069c2:	bf00      	nop
 80069c4:	10000012 	.word	0x10000012
 80069c8:	40012000 	.word	0x40012000
 80069cc:	40012300 	.word	0x40012300
 80069d0:	200013b4 	.word	0x200013b4
 80069d4:	431bde83 	.word	0x431bde83

080069d8 <ADC_Init>:
 80069d8:	b480      	push	{r7}
 80069da:	b083      	sub	sp, #12
 80069dc:	af00      	add	r7, sp, #0
 80069de:	6078      	str	r0, [r7, #4]
 80069e0:	4b78      	ldr	r3, [pc, #480]	; (8006bc4 <ADC_Init+0x1ec>)
 80069e2:	685b      	ldr	r3, [r3, #4]
 80069e4:	4a77      	ldr	r2, [pc, #476]	; (8006bc4 <ADC_Init+0x1ec>)
 80069e6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80069ea:	6053      	str	r3, [r2, #4]
 80069ec:	4b75      	ldr	r3, [pc, #468]	; (8006bc4 <ADC_Init+0x1ec>)
 80069ee:	685a      	ldr	r2, [r3, #4]
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	685b      	ldr	r3, [r3, #4]
 80069f4:	4973      	ldr	r1, [pc, #460]	; (8006bc4 <ADC_Init+0x1ec>)
 80069f6:	4313      	orrs	r3, r2
 80069f8:	604b      	str	r3, [r1, #4]
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	681b      	ldr	r3, [r3, #0]
 80069fe:	685a      	ldr	r2, [r3, #4]
 8006a00:	687b      	ldr	r3, [r7, #4]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006a08:	605a      	str	r2, [r3, #4]
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	681b      	ldr	r3, [r3, #0]
 8006a0e:	6859      	ldr	r1, [r3, #4]
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	691b      	ldr	r3, [r3, #16]
 8006a14:	021a      	lsls	r2, r3, #8
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	430a      	orrs	r2, r1
 8006a1c:	605a      	str	r2, [r3, #4]
 8006a1e:	687b      	ldr	r3, [r7, #4]
 8006a20:	681b      	ldr	r3, [r3, #0]
 8006a22:	685a      	ldr	r2, [r3, #4]
 8006a24:	687b      	ldr	r3, [r7, #4]
 8006a26:	681b      	ldr	r3, [r3, #0]
 8006a28:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8006a2c:	605a      	str	r2, [r3, #4]
 8006a2e:	687b      	ldr	r3, [r7, #4]
 8006a30:	681b      	ldr	r3, [r3, #0]
 8006a32:	6859      	ldr	r1, [r3, #4]
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	689a      	ldr	r2, [r3, #8]
 8006a38:	687b      	ldr	r3, [r7, #4]
 8006a3a:	681b      	ldr	r3, [r3, #0]
 8006a3c:	430a      	orrs	r2, r1
 8006a3e:	605a      	str	r2, [r3, #4]
 8006a40:	687b      	ldr	r3, [r7, #4]
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	689a      	ldr	r2, [r3, #8]
 8006a46:	687b      	ldr	r3, [r7, #4]
 8006a48:	681b      	ldr	r3, [r3, #0]
 8006a4a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006a4e:	609a      	str	r2, [r3, #8]
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	681b      	ldr	r3, [r3, #0]
 8006a54:	6899      	ldr	r1, [r3, #8]
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	68da      	ldr	r2, [r3, #12]
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	681b      	ldr	r3, [r3, #0]
 8006a5e:	430a      	orrs	r2, r1
 8006a60:	609a      	str	r2, [r3, #8]
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006a66:	4a58      	ldr	r2, [pc, #352]	; (8006bc8 <ADC_Init+0x1f0>)
 8006a68:	4293      	cmp	r3, r2
 8006a6a:	d022      	beq.n	8006ab2 <ADC_Init+0xda>
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	681b      	ldr	r3, [r3, #0]
 8006a70:	689a      	ldr	r2, [r3, #8]
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	681b      	ldr	r3, [r3, #0]
 8006a76:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006a7a:	609a      	str	r2, [r3, #8]
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	681b      	ldr	r3, [r3, #0]
 8006a80:	6899      	ldr	r1, [r3, #8]
 8006a82:	687b      	ldr	r3, [r7, #4]
 8006a84:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	430a      	orrs	r2, r1
 8006a8c:	609a      	str	r2, [r3, #8]
 8006a8e:	687b      	ldr	r3, [r7, #4]
 8006a90:	681b      	ldr	r3, [r3, #0]
 8006a92:	689a      	ldr	r2, [r3, #8]
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	681b      	ldr	r3, [r3, #0]
 8006a98:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006a9c:	609a      	str	r2, [r3, #8]
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	681b      	ldr	r3, [r3, #0]
 8006aa2:	6899      	ldr	r1, [r3, #8]
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	430a      	orrs	r2, r1
 8006aae:	609a      	str	r2, [r3, #8]
 8006ab0:	e00f      	b.n	8006ad2 <ADC_Init+0xfa>
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	681b      	ldr	r3, [r3, #0]
 8006ab6:	689a      	ldr	r2, [r3, #8]
 8006ab8:	687b      	ldr	r3, [r7, #4]
 8006aba:	681b      	ldr	r3, [r3, #0]
 8006abc:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006ac0:	609a      	str	r2, [r3, #8]
 8006ac2:	687b      	ldr	r3, [r7, #4]
 8006ac4:	681b      	ldr	r3, [r3, #0]
 8006ac6:	689a      	ldr	r2, [r3, #8]
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	681b      	ldr	r3, [r3, #0]
 8006acc:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006ad0:	609a      	str	r2, [r3, #8]
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	681b      	ldr	r3, [r3, #0]
 8006ad6:	689a      	ldr	r2, [r3, #8]
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	f022 0202 	bic.w	r2, r2, #2
 8006ae0:	609a      	str	r2, [r3, #8]
 8006ae2:	687b      	ldr	r3, [r7, #4]
 8006ae4:	681b      	ldr	r3, [r3, #0]
 8006ae6:	6899      	ldr	r1, [r3, #8]
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	699b      	ldr	r3, [r3, #24]
 8006aec:	005a      	lsls	r2, r3, #1
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	681b      	ldr	r3, [r3, #0]
 8006af2:	430a      	orrs	r2, r1
 8006af4:	609a      	str	r2, [r3, #8]
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	f893 3020 	ldrb.w	r3, [r3, #32]
 8006afc:	2b00      	cmp	r3, #0
 8006afe:	d01b      	beq.n	8006b38 <ADC_Init+0x160>
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	681b      	ldr	r3, [r3, #0]
 8006b04:	685a      	ldr	r2, [r3, #4]
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	681b      	ldr	r3, [r3, #0]
 8006b0a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006b0e:	605a      	str	r2, [r3, #4]
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	685a      	ldr	r2, [r3, #4]
 8006b16:	687b      	ldr	r3, [r7, #4]
 8006b18:	681b      	ldr	r3, [r3, #0]
 8006b1a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8006b1e:	605a      	str	r2, [r3, #4]
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	681b      	ldr	r3, [r3, #0]
 8006b24:	6859      	ldr	r1, [r3, #4]
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b2a:	3b01      	subs	r3, #1
 8006b2c:	035a      	lsls	r2, r3, #13
 8006b2e:	687b      	ldr	r3, [r7, #4]
 8006b30:	681b      	ldr	r3, [r3, #0]
 8006b32:	430a      	orrs	r2, r1
 8006b34:	605a      	str	r2, [r3, #4]
 8006b36:	e007      	b.n	8006b48 <ADC_Init+0x170>
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	685a      	ldr	r2, [r3, #4]
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	681b      	ldr	r3, [r3, #0]
 8006b42:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006b46:	605a      	str	r2, [r3, #4]
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	681b      	ldr	r3, [r3, #0]
 8006b4c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	681b      	ldr	r3, [r3, #0]
 8006b52:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8006b56:	62da      	str	r2, [r3, #44]	; 0x2c
 8006b58:	687b      	ldr	r3, [r7, #4]
 8006b5a:	681b      	ldr	r3, [r3, #0]
 8006b5c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	69db      	ldr	r3, [r3, #28]
 8006b62:	3b01      	subs	r3, #1
 8006b64:	051a      	lsls	r2, r3, #20
 8006b66:	687b      	ldr	r3, [r7, #4]
 8006b68:	681b      	ldr	r3, [r3, #0]
 8006b6a:	430a      	orrs	r2, r1
 8006b6c:	62da      	str	r2, [r3, #44]	; 0x2c
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	681b      	ldr	r3, [r3, #0]
 8006b72:	689a      	ldr	r2, [r3, #8]
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006b7c:	609a      	str	r2, [r3, #8]
 8006b7e:	687b      	ldr	r3, [r7, #4]
 8006b80:	681b      	ldr	r3, [r3, #0]
 8006b82:	6899      	ldr	r1, [r3, #8]
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8006b8a:	025a      	lsls	r2, r3, #9
 8006b8c:	687b      	ldr	r3, [r7, #4]
 8006b8e:	681b      	ldr	r3, [r3, #0]
 8006b90:	430a      	orrs	r2, r1
 8006b92:	609a      	str	r2, [r3, #8]
 8006b94:	687b      	ldr	r3, [r7, #4]
 8006b96:	681b      	ldr	r3, [r3, #0]
 8006b98:	689a      	ldr	r2, [r3, #8]
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	681b      	ldr	r3, [r3, #0]
 8006b9e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006ba2:	609a      	str	r2, [r3, #8]
 8006ba4:	687b      	ldr	r3, [r7, #4]
 8006ba6:	681b      	ldr	r3, [r3, #0]
 8006ba8:	6899      	ldr	r1, [r3, #8]
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	695b      	ldr	r3, [r3, #20]
 8006bae:	029a      	lsls	r2, r3, #10
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	430a      	orrs	r2, r1
 8006bb6:	609a      	str	r2, [r3, #8]
 8006bb8:	bf00      	nop
 8006bba:	370c      	adds	r7, #12
 8006bbc:	46bd      	mov	sp, r7
 8006bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bc2:	4770      	bx	lr
 8006bc4:	40012300 	.word	0x40012300
 8006bc8:	0f000001 	.word	0x0f000001

08006bcc <__NVIC_SetPriorityGrouping>:
 8006bcc:	b480      	push	{r7}
 8006bce:	b085      	sub	sp, #20
 8006bd0:	af00      	add	r7, sp, #0
 8006bd2:	6078      	str	r0, [r7, #4]
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	f003 0307 	and.w	r3, r3, #7
 8006bda:	60fb      	str	r3, [r7, #12]
 8006bdc:	4b0b      	ldr	r3, [pc, #44]	; (8006c0c <__NVIC_SetPriorityGrouping+0x40>)
 8006bde:	68db      	ldr	r3, [r3, #12]
 8006be0:	60bb      	str	r3, [r7, #8]
 8006be2:	68ba      	ldr	r2, [r7, #8]
 8006be4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8006be8:	4013      	ands	r3, r2
 8006bea:	60bb      	str	r3, [r7, #8]
 8006bec:	68fb      	ldr	r3, [r7, #12]
 8006bee:	021a      	lsls	r2, r3, #8
 8006bf0:	68bb      	ldr	r3, [r7, #8]
 8006bf2:	431a      	orrs	r2, r3
 8006bf4:	4b06      	ldr	r3, [pc, #24]	; (8006c10 <__NVIC_SetPriorityGrouping+0x44>)
 8006bf6:	4313      	orrs	r3, r2
 8006bf8:	60bb      	str	r3, [r7, #8]
 8006bfa:	4a04      	ldr	r2, [pc, #16]	; (8006c0c <__NVIC_SetPriorityGrouping+0x40>)
 8006bfc:	68bb      	ldr	r3, [r7, #8]
 8006bfe:	60d3      	str	r3, [r2, #12]
 8006c00:	bf00      	nop
 8006c02:	3714      	adds	r7, #20
 8006c04:	46bd      	mov	sp, r7
 8006c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c0a:	4770      	bx	lr
 8006c0c:	e000ed00 	.word	0xe000ed00
 8006c10:	05fa0000 	.word	0x05fa0000

08006c14 <__NVIC_GetPriorityGrouping>:
 8006c14:	b480      	push	{r7}
 8006c16:	af00      	add	r7, sp, #0
 8006c18:	4b04      	ldr	r3, [pc, #16]	; (8006c2c <__NVIC_GetPriorityGrouping+0x18>)
 8006c1a:	68db      	ldr	r3, [r3, #12]
 8006c1c:	0a1b      	lsrs	r3, r3, #8
 8006c1e:	f003 0307 	and.w	r3, r3, #7
 8006c22:	4618      	mov	r0, r3
 8006c24:	46bd      	mov	sp, r7
 8006c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c2a:	4770      	bx	lr
 8006c2c:	e000ed00 	.word	0xe000ed00

08006c30 <__NVIC_EnableIRQ>:
 8006c30:	b480      	push	{r7}
 8006c32:	b083      	sub	sp, #12
 8006c34:	af00      	add	r7, sp, #0
 8006c36:	4603      	mov	r3, r0
 8006c38:	71fb      	strb	r3, [r7, #7]
 8006c3a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006c3e:	2b00      	cmp	r3, #0
 8006c40:	db0b      	blt.n	8006c5a <__NVIC_EnableIRQ+0x2a>
 8006c42:	79fb      	ldrb	r3, [r7, #7]
 8006c44:	f003 021f 	and.w	r2, r3, #31
 8006c48:	4907      	ldr	r1, [pc, #28]	; (8006c68 <__NVIC_EnableIRQ+0x38>)
 8006c4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006c4e:	095b      	lsrs	r3, r3, #5
 8006c50:	2001      	movs	r0, #1
 8006c52:	fa00 f202 	lsl.w	r2, r0, r2
 8006c56:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006c5a:	bf00      	nop
 8006c5c:	370c      	adds	r7, #12
 8006c5e:	46bd      	mov	sp, r7
 8006c60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c64:	4770      	bx	lr
 8006c66:	bf00      	nop
 8006c68:	e000e100 	.word	0xe000e100

08006c6c <__NVIC_SetPriority>:
 8006c6c:	b480      	push	{r7}
 8006c6e:	b083      	sub	sp, #12
 8006c70:	af00      	add	r7, sp, #0
 8006c72:	4603      	mov	r3, r0
 8006c74:	6039      	str	r1, [r7, #0]
 8006c76:	71fb      	strb	r3, [r7, #7]
 8006c78:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006c7c:	2b00      	cmp	r3, #0
 8006c7e:	db0a      	blt.n	8006c96 <__NVIC_SetPriority+0x2a>
 8006c80:	683b      	ldr	r3, [r7, #0]
 8006c82:	b2da      	uxtb	r2, r3
 8006c84:	490c      	ldr	r1, [pc, #48]	; (8006cb8 <__NVIC_SetPriority+0x4c>)
 8006c86:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006c8a:	0112      	lsls	r2, r2, #4
 8006c8c:	b2d2      	uxtb	r2, r2
 8006c8e:	440b      	add	r3, r1
 8006c90:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8006c94:	e00a      	b.n	8006cac <__NVIC_SetPriority+0x40>
 8006c96:	683b      	ldr	r3, [r7, #0]
 8006c98:	b2da      	uxtb	r2, r3
 8006c9a:	4908      	ldr	r1, [pc, #32]	; (8006cbc <__NVIC_SetPriority+0x50>)
 8006c9c:	79fb      	ldrb	r3, [r7, #7]
 8006c9e:	f003 030f 	and.w	r3, r3, #15
 8006ca2:	3b04      	subs	r3, #4
 8006ca4:	0112      	lsls	r2, r2, #4
 8006ca6:	b2d2      	uxtb	r2, r2
 8006ca8:	440b      	add	r3, r1
 8006caa:	761a      	strb	r2, [r3, #24]
 8006cac:	bf00      	nop
 8006cae:	370c      	adds	r7, #12
 8006cb0:	46bd      	mov	sp, r7
 8006cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cb6:	4770      	bx	lr
 8006cb8:	e000e100 	.word	0xe000e100
 8006cbc:	e000ed00 	.word	0xe000ed00

08006cc0 <NVIC_EncodePriority>:
 8006cc0:	b480      	push	{r7}
 8006cc2:	b089      	sub	sp, #36	; 0x24
 8006cc4:	af00      	add	r7, sp, #0
 8006cc6:	60f8      	str	r0, [r7, #12]
 8006cc8:	60b9      	str	r1, [r7, #8]
 8006cca:	607a      	str	r2, [r7, #4]
 8006ccc:	68fb      	ldr	r3, [r7, #12]
 8006cce:	f003 0307 	and.w	r3, r3, #7
 8006cd2:	61fb      	str	r3, [r7, #28]
 8006cd4:	69fb      	ldr	r3, [r7, #28]
 8006cd6:	f1c3 0307 	rsb	r3, r3, #7
 8006cda:	2b04      	cmp	r3, #4
 8006cdc:	bf28      	it	cs
 8006cde:	2304      	movcs	r3, #4
 8006ce0:	61bb      	str	r3, [r7, #24]
 8006ce2:	69fb      	ldr	r3, [r7, #28]
 8006ce4:	3304      	adds	r3, #4
 8006ce6:	2b06      	cmp	r3, #6
 8006ce8:	d902      	bls.n	8006cf0 <NVIC_EncodePriority+0x30>
 8006cea:	69fb      	ldr	r3, [r7, #28]
 8006cec:	3b03      	subs	r3, #3
 8006cee:	e000      	b.n	8006cf2 <NVIC_EncodePriority+0x32>
 8006cf0:	2300      	movs	r3, #0
 8006cf2:	617b      	str	r3, [r7, #20]
 8006cf4:	f04f 32ff 	mov.w	r2, #4294967295
 8006cf8:	69bb      	ldr	r3, [r7, #24]
 8006cfa:	fa02 f303 	lsl.w	r3, r2, r3
 8006cfe:	43da      	mvns	r2, r3
 8006d00:	68bb      	ldr	r3, [r7, #8]
 8006d02:	401a      	ands	r2, r3
 8006d04:	697b      	ldr	r3, [r7, #20]
 8006d06:	409a      	lsls	r2, r3
 8006d08:	f04f 31ff 	mov.w	r1, #4294967295
 8006d0c:	697b      	ldr	r3, [r7, #20]
 8006d0e:	fa01 f303 	lsl.w	r3, r1, r3
 8006d12:	43d9      	mvns	r1, r3
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	400b      	ands	r3, r1
 8006d18:	4313      	orrs	r3, r2
 8006d1a:	4618      	mov	r0, r3
 8006d1c:	3724      	adds	r7, #36	; 0x24
 8006d1e:	46bd      	mov	sp, r7
 8006d20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d24:	4770      	bx	lr

08006d26 <HAL_NVIC_SetPriorityGrouping>:
 8006d26:	b580      	push	{r7, lr}
 8006d28:	b082      	sub	sp, #8
 8006d2a:	af00      	add	r7, sp, #0
 8006d2c:	6078      	str	r0, [r7, #4]
 8006d2e:	6878      	ldr	r0, [r7, #4]
 8006d30:	f7ff ff4c 	bl	8006bcc <__NVIC_SetPriorityGrouping>
 8006d34:	bf00      	nop
 8006d36:	3708      	adds	r7, #8
 8006d38:	46bd      	mov	sp, r7
 8006d3a:	bd80      	pop	{r7, pc}

08006d3c <HAL_NVIC_SetPriority>:
 8006d3c:	b580      	push	{r7, lr}
 8006d3e:	b086      	sub	sp, #24
 8006d40:	af00      	add	r7, sp, #0
 8006d42:	4603      	mov	r3, r0
 8006d44:	60b9      	str	r1, [r7, #8]
 8006d46:	607a      	str	r2, [r7, #4]
 8006d48:	73fb      	strb	r3, [r7, #15]
 8006d4a:	2300      	movs	r3, #0
 8006d4c:	617b      	str	r3, [r7, #20]
 8006d4e:	f7ff ff61 	bl	8006c14 <__NVIC_GetPriorityGrouping>
 8006d52:	6178      	str	r0, [r7, #20]
 8006d54:	687a      	ldr	r2, [r7, #4]
 8006d56:	68b9      	ldr	r1, [r7, #8]
 8006d58:	6978      	ldr	r0, [r7, #20]
 8006d5a:	f7ff ffb1 	bl	8006cc0 <NVIC_EncodePriority>
 8006d5e:	4602      	mov	r2, r0
 8006d60:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8006d64:	4611      	mov	r1, r2
 8006d66:	4618      	mov	r0, r3
 8006d68:	f7ff ff80 	bl	8006c6c <__NVIC_SetPriority>
 8006d6c:	bf00      	nop
 8006d6e:	3718      	adds	r7, #24
 8006d70:	46bd      	mov	sp, r7
 8006d72:	bd80      	pop	{r7, pc}

08006d74 <HAL_NVIC_EnableIRQ>:
 8006d74:	b580      	push	{r7, lr}
 8006d76:	b082      	sub	sp, #8
 8006d78:	af00      	add	r7, sp, #0
 8006d7a:	4603      	mov	r3, r0
 8006d7c:	71fb      	strb	r3, [r7, #7]
 8006d7e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006d82:	4618      	mov	r0, r3
 8006d84:	f7ff ff54 	bl	8006c30 <__NVIC_EnableIRQ>
 8006d88:	bf00      	nop
 8006d8a:	3708      	adds	r7, #8
 8006d8c:	46bd      	mov	sp, r7
 8006d8e:	bd80      	pop	{r7, pc}

08006d90 <HAL_DAC_Init>:
 8006d90:	b580      	push	{r7, lr}
 8006d92:	b082      	sub	sp, #8
 8006d94:	af00      	add	r7, sp, #0
 8006d96:	6078      	str	r0, [r7, #4]
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d101      	bne.n	8006da2 <HAL_DAC_Init+0x12>
 8006d9e:	2301      	movs	r3, #1
 8006da0:	e014      	b.n	8006dcc <HAL_DAC_Init+0x3c>
 8006da2:	687b      	ldr	r3, [r7, #4]
 8006da4:	791b      	ldrb	r3, [r3, #4]
 8006da6:	b2db      	uxtb	r3, r3
 8006da8:	2b00      	cmp	r3, #0
 8006daa:	d105      	bne.n	8006db8 <HAL_DAC_Init+0x28>
 8006dac:	687b      	ldr	r3, [r7, #4]
 8006dae:	2200      	movs	r2, #0
 8006db0:	715a      	strb	r2, [r3, #5]
 8006db2:	6878      	ldr	r0, [r7, #4]
 8006db4:	f7fe fd24 	bl	8005800 <HAL_DAC_MspInit>
 8006db8:	687b      	ldr	r3, [r7, #4]
 8006dba:	2202      	movs	r2, #2
 8006dbc:	711a      	strb	r2, [r3, #4]
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	2200      	movs	r2, #0
 8006dc2:	611a      	str	r2, [r3, #16]
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	2201      	movs	r2, #1
 8006dc8:	711a      	strb	r2, [r3, #4]
 8006dca:	2300      	movs	r3, #0
 8006dcc:	4618      	mov	r0, r3
 8006dce:	3708      	adds	r7, #8
 8006dd0:	46bd      	mov	sp, r7
 8006dd2:	bd80      	pop	{r7, pc}

08006dd4 <HAL_DAC_IRQHandler>:
 8006dd4:	b580      	push	{r7, lr}
 8006dd6:	b082      	sub	sp, #8
 8006dd8:	af00      	add	r7, sp, #0
 8006dda:	6078      	str	r0, [r7, #4]
 8006ddc:	687b      	ldr	r3, [r7, #4]
 8006dde:	681b      	ldr	r3, [r3, #0]
 8006de0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006de2:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8006de6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006dea:	d118      	bne.n	8006e1e <HAL_DAC_IRQHandler+0x4a>
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	2204      	movs	r2, #4
 8006df0:	711a      	strb	r2, [r3, #4]
 8006df2:	687b      	ldr	r3, [r7, #4]
 8006df4:	691b      	ldr	r3, [r3, #16]
 8006df6:	f043 0201 	orr.w	r2, r3, #1
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	611a      	str	r2, [r3, #16]
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	681b      	ldr	r3, [r3, #0]
 8006e02:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8006e06:	635a      	str	r2, [r3, #52]	; 0x34
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	681b      	ldr	r3, [r3, #0]
 8006e0c:	681a      	ldr	r2, [r3, #0]
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	681b      	ldr	r3, [r3, #0]
 8006e12:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8006e16:	601a      	str	r2, [r3, #0]
 8006e18:	6878      	ldr	r0, [r7, #4]
 8006e1a:	f000 f825 	bl	8006e68 <HAL_DAC_DMAUnderrunCallbackCh1>
 8006e1e:	687b      	ldr	r3, [r7, #4]
 8006e20:	681b      	ldr	r3, [r3, #0]
 8006e22:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e24:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006e28:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8006e2c:	d118      	bne.n	8006e60 <HAL_DAC_IRQHandler+0x8c>
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	2204      	movs	r2, #4
 8006e32:	711a      	strb	r2, [r3, #4]
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	691b      	ldr	r3, [r3, #16]
 8006e38:	f043 0202 	orr.w	r2, r3, #2
 8006e3c:	687b      	ldr	r3, [r7, #4]
 8006e3e:	611a      	str	r2, [r3, #16]
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	681b      	ldr	r3, [r3, #0]
 8006e44:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8006e48:	635a      	str	r2, [r3, #52]	; 0x34
 8006e4a:	687b      	ldr	r3, [r7, #4]
 8006e4c:	681b      	ldr	r3, [r3, #0]
 8006e4e:	681a      	ldr	r2, [r3, #0]
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	681b      	ldr	r3, [r3, #0]
 8006e54:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8006e58:	601a      	str	r2, [r3, #0]
 8006e5a:	6878      	ldr	r0, [r7, #4]
 8006e5c:	f000 f85b 	bl	8006f16 <HAL_DACEx_DMAUnderrunCallbackCh2>
 8006e60:	bf00      	nop
 8006e62:	3708      	adds	r7, #8
 8006e64:	46bd      	mov	sp, r7
 8006e66:	bd80      	pop	{r7, pc}

08006e68 <HAL_DAC_DMAUnderrunCallbackCh1>:
 8006e68:	b480      	push	{r7}
 8006e6a:	b083      	sub	sp, #12
 8006e6c:	af00      	add	r7, sp, #0
 8006e6e:	6078      	str	r0, [r7, #4]
 8006e70:	bf00      	nop
 8006e72:	370c      	adds	r7, #12
 8006e74:	46bd      	mov	sp, r7
 8006e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e7a:	4770      	bx	lr

08006e7c <HAL_DAC_ConfigChannel>:
 8006e7c:	b480      	push	{r7}
 8006e7e:	b087      	sub	sp, #28
 8006e80:	af00      	add	r7, sp, #0
 8006e82:	60f8      	str	r0, [r7, #12]
 8006e84:	60b9      	str	r1, [r7, #8]
 8006e86:	607a      	str	r2, [r7, #4]
 8006e88:	2300      	movs	r3, #0
 8006e8a:	617b      	str	r3, [r7, #20]
 8006e8c:	2300      	movs	r3, #0
 8006e8e:	613b      	str	r3, [r7, #16]
 8006e90:	68fb      	ldr	r3, [r7, #12]
 8006e92:	795b      	ldrb	r3, [r3, #5]
 8006e94:	2b01      	cmp	r3, #1
 8006e96:	d101      	bne.n	8006e9c <HAL_DAC_ConfigChannel+0x20>
 8006e98:	2302      	movs	r3, #2
 8006e9a:	e036      	b.n	8006f0a <HAL_DAC_ConfigChannel+0x8e>
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	2201      	movs	r2, #1
 8006ea0:	715a      	strb	r2, [r3, #5]
 8006ea2:	68fb      	ldr	r3, [r7, #12]
 8006ea4:	2202      	movs	r2, #2
 8006ea6:	711a      	strb	r2, [r3, #4]
 8006ea8:	68fb      	ldr	r3, [r7, #12]
 8006eaa:	681b      	ldr	r3, [r3, #0]
 8006eac:	681b      	ldr	r3, [r3, #0]
 8006eae:	617b      	str	r3, [r7, #20]
 8006eb0:	f640 72fe 	movw	r2, #4094	; 0xffe
 8006eb4:	687b      	ldr	r3, [r7, #4]
 8006eb6:	fa02 f303 	lsl.w	r3, r2, r3
 8006eba:	43db      	mvns	r3, r3
 8006ebc:	697a      	ldr	r2, [r7, #20]
 8006ebe:	4013      	ands	r3, r2
 8006ec0:	617b      	str	r3, [r7, #20]
 8006ec2:	68bb      	ldr	r3, [r7, #8]
 8006ec4:	681a      	ldr	r2, [r3, #0]
 8006ec6:	68bb      	ldr	r3, [r7, #8]
 8006ec8:	685b      	ldr	r3, [r3, #4]
 8006eca:	4313      	orrs	r3, r2
 8006ecc:	613b      	str	r3, [r7, #16]
 8006ece:	693a      	ldr	r2, [r7, #16]
 8006ed0:	687b      	ldr	r3, [r7, #4]
 8006ed2:	fa02 f303 	lsl.w	r3, r2, r3
 8006ed6:	697a      	ldr	r2, [r7, #20]
 8006ed8:	4313      	orrs	r3, r2
 8006eda:	617b      	str	r3, [r7, #20]
 8006edc:	68fb      	ldr	r3, [r7, #12]
 8006ede:	681b      	ldr	r3, [r3, #0]
 8006ee0:	697a      	ldr	r2, [r7, #20]
 8006ee2:	601a      	str	r2, [r3, #0]
 8006ee4:	68fb      	ldr	r3, [r7, #12]
 8006ee6:	681b      	ldr	r3, [r3, #0]
 8006ee8:	6819      	ldr	r1, [r3, #0]
 8006eea:	22c0      	movs	r2, #192	; 0xc0
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	fa02 f303 	lsl.w	r3, r2, r3
 8006ef2:	43da      	mvns	r2, r3
 8006ef4:	68fb      	ldr	r3, [r7, #12]
 8006ef6:	681b      	ldr	r3, [r3, #0]
 8006ef8:	400a      	ands	r2, r1
 8006efa:	601a      	str	r2, [r3, #0]
 8006efc:	68fb      	ldr	r3, [r7, #12]
 8006efe:	2201      	movs	r2, #1
 8006f00:	711a      	strb	r2, [r3, #4]
 8006f02:	68fb      	ldr	r3, [r7, #12]
 8006f04:	2200      	movs	r2, #0
 8006f06:	715a      	strb	r2, [r3, #5]
 8006f08:	2300      	movs	r3, #0
 8006f0a:	4618      	mov	r0, r3
 8006f0c:	371c      	adds	r7, #28
 8006f0e:	46bd      	mov	sp, r7
 8006f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f14:	4770      	bx	lr

08006f16 <HAL_DACEx_DMAUnderrunCallbackCh2>:
 8006f16:	b480      	push	{r7}
 8006f18:	b083      	sub	sp, #12
 8006f1a:	af00      	add	r7, sp, #0
 8006f1c:	6078      	str	r0, [r7, #4]
 8006f1e:	bf00      	nop
 8006f20:	370c      	adds	r7, #12
 8006f22:	46bd      	mov	sp, r7
 8006f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f28:	4770      	bx	lr
	...

08006f2c <HAL_DMA_Init>:
 8006f2c:	b580      	push	{r7, lr}
 8006f2e:	b086      	sub	sp, #24
 8006f30:	af00      	add	r7, sp, #0
 8006f32:	6078      	str	r0, [r7, #4]
 8006f34:	2300      	movs	r3, #0
 8006f36:	617b      	str	r3, [r7, #20]
 8006f38:	f7ff fa40 	bl	80063bc <HAL_GetTick>
 8006f3c:	6138      	str	r0, [r7, #16]
 8006f3e:	687b      	ldr	r3, [r7, #4]
 8006f40:	2b00      	cmp	r3, #0
 8006f42:	d101      	bne.n	8006f48 <HAL_DMA_Init+0x1c>
 8006f44:	2301      	movs	r3, #1
 8006f46:	e099      	b.n	800707c <HAL_DMA_Init+0x150>
 8006f48:	687b      	ldr	r3, [r7, #4]
 8006f4a:	2200      	movs	r2, #0
 8006f4c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006f50:	687b      	ldr	r3, [r7, #4]
 8006f52:	2202      	movs	r2, #2
 8006f54:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006f58:	687b      	ldr	r3, [r7, #4]
 8006f5a:	681b      	ldr	r3, [r3, #0]
 8006f5c:	681a      	ldr	r2, [r3, #0]
 8006f5e:	687b      	ldr	r3, [r7, #4]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	f022 0201 	bic.w	r2, r2, #1
 8006f66:	601a      	str	r2, [r3, #0]
 8006f68:	e00f      	b.n	8006f8a <HAL_DMA_Init+0x5e>
 8006f6a:	f7ff fa27 	bl	80063bc <HAL_GetTick>
 8006f6e:	4602      	mov	r2, r0
 8006f70:	693b      	ldr	r3, [r7, #16]
 8006f72:	1ad3      	subs	r3, r2, r3
 8006f74:	2b05      	cmp	r3, #5
 8006f76:	d908      	bls.n	8006f8a <HAL_DMA_Init+0x5e>
 8006f78:	687b      	ldr	r3, [r7, #4]
 8006f7a:	2220      	movs	r2, #32
 8006f7c:	655a      	str	r2, [r3, #84]	; 0x54
 8006f7e:	687b      	ldr	r3, [r7, #4]
 8006f80:	2203      	movs	r2, #3
 8006f82:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006f86:	2303      	movs	r3, #3
 8006f88:	e078      	b.n	800707c <HAL_DMA_Init+0x150>
 8006f8a:	687b      	ldr	r3, [r7, #4]
 8006f8c:	681b      	ldr	r3, [r3, #0]
 8006f8e:	681b      	ldr	r3, [r3, #0]
 8006f90:	f003 0301 	and.w	r3, r3, #1
 8006f94:	2b00      	cmp	r3, #0
 8006f96:	d1e8      	bne.n	8006f6a <HAL_DMA_Init+0x3e>
 8006f98:	687b      	ldr	r3, [r7, #4]
 8006f9a:	681b      	ldr	r3, [r3, #0]
 8006f9c:	681b      	ldr	r3, [r3, #0]
 8006f9e:	617b      	str	r3, [r7, #20]
 8006fa0:	697a      	ldr	r2, [r7, #20]
 8006fa2:	4b38      	ldr	r3, [pc, #224]	; (8007084 <HAL_DMA_Init+0x158>)
 8006fa4:	4013      	ands	r3, r2
 8006fa6:	617b      	str	r3, [r7, #20]
 8006fa8:	687b      	ldr	r3, [r7, #4]
 8006faa:	685a      	ldr	r2, [r3, #4]
 8006fac:	687b      	ldr	r3, [r7, #4]
 8006fae:	689b      	ldr	r3, [r3, #8]
 8006fb0:	431a      	orrs	r2, r3
 8006fb2:	687b      	ldr	r3, [r7, #4]
 8006fb4:	68db      	ldr	r3, [r3, #12]
 8006fb6:	431a      	orrs	r2, r3
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	691b      	ldr	r3, [r3, #16]
 8006fbc:	431a      	orrs	r2, r3
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	695b      	ldr	r3, [r3, #20]
 8006fc2:	431a      	orrs	r2, r3
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	699b      	ldr	r3, [r3, #24]
 8006fc8:	431a      	orrs	r2, r3
 8006fca:	687b      	ldr	r3, [r7, #4]
 8006fcc:	69db      	ldr	r3, [r3, #28]
 8006fce:	431a      	orrs	r2, r3
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	6a1b      	ldr	r3, [r3, #32]
 8006fd4:	4313      	orrs	r3, r2
 8006fd6:	697a      	ldr	r2, [r7, #20]
 8006fd8:	4313      	orrs	r3, r2
 8006fda:	617b      	str	r3, [r7, #20]
 8006fdc:	687b      	ldr	r3, [r7, #4]
 8006fde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006fe0:	2b04      	cmp	r3, #4
 8006fe2:	d107      	bne.n	8006ff4 <HAL_DMA_Init+0xc8>
 8006fe4:	687b      	ldr	r3, [r7, #4]
 8006fe6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006fe8:	687b      	ldr	r3, [r7, #4]
 8006fea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006fec:	4313      	orrs	r3, r2
 8006fee:	697a      	ldr	r2, [r7, #20]
 8006ff0:	4313      	orrs	r3, r2
 8006ff2:	617b      	str	r3, [r7, #20]
 8006ff4:	687b      	ldr	r3, [r7, #4]
 8006ff6:	681b      	ldr	r3, [r3, #0]
 8006ff8:	697a      	ldr	r2, [r7, #20]
 8006ffa:	601a      	str	r2, [r3, #0]
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	681b      	ldr	r3, [r3, #0]
 8007000:	695b      	ldr	r3, [r3, #20]
 8007002:	617b      	str	r3, [r7, #20]
 8007004:	697b      	ldr	r3, [r7, #20]
 8007006:	f023 0307 	bic.w	r3, r3, #7
 800700a:	617b      	str	r3, [r7, #20]
 800700c:	687b      	ldr	r3, [r7, #4]
 800700e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007010:	697a      	ldr	r2, [r7, #20]
 8007012:	4313      	orrs	r3, r2
 8007014:	617b      	str	r3, [r7, #20]
 8007016:	687b      	ldr	r3, [r7, #4]
 8007018:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800701a:	2b04      	cmp	r3, #4
 800701c:	d117      	bne.n	800704e <HAL_DMA_Init+0x122>
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007022:	697a      	ldr	r2, [r7, #20]
 8007024:	4313      	orrs	r3, r2
 8007026:	617b      	str	r3, [r7, #20]
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800702c:	2b00      	cmp	r3, #0
 800702e:	d00e      	beq.n	800704e <HAL_DMA_Init+0x122>
 8007030:	6878      	ldr	r0, [r7, #4]
 8007032:	f000 f8df 	bl	80071f4 <DMA_CheckFifoParam>
 8007036:	4603      	mov	r3, r0
 8007038:	2b00      	cmp	r3, #0
 800703a:	d008      	beq.n	800704e <HAL_DMA_Init+0x122>
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	2240      	movs	r2, #64	; 0x40
 8007040:	655a      	str	r2, [r3, #84]	; 0x54
 8007042:	687b      	ldr	r3, [r7, #4]
 8007044:	2201      	movs	r2, #1
 8007046:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800704a:	2301      	movs	r3, #1
 800704c:	e016      	b.n	800707c <HAL_DMA_Init+0x150>
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	681b      	ldr	r3, [r3, #0]
 8007052:	697a      	ldr	r2, [r7, #20]
 8007054:	615a      	str	r2, [r3, #20]
 8007056:	6878      	ldr	r0, [r7, #4]
 8007058:	f000 f896 	bl	8007188 <DMA_CalcBaseAndBitshift>
 800705c:	4603      	mov	r3, r0
 800705e:	60fb      	str	r3, [r7, #12]
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007064:	223f      	movs	r2, #63	; 0x3f
 8007066:	409a      	lsls	r2, r3
 8007068:	68fb      	ldr	r3, [r7, #12]
 800706a:	609a      	str	r2, [r3, #8]
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	2200      	movs	r2, #0
 8007070:	655a      	str	r2, [r3, #84]	; 0x54
 8007072:	687b      	ldr	r3, [r7, #4]
 8007074:	2201      	movs	r2, #1
 8007076:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800707a:	2300      	movs	r3, #0
 800707c:	4618      	mov	r0, r3
 800707e:	3718      	adds	r7, #24
 8007080:	46bd      	mov	sp, r7
 8007082:	bd80      	pop	{r7, pc}
 8007084:	f010803f 	.word	0xf010803f

08007088 <HAL_DMA_DeInit>:
 8007088:	b580      	push	{r7, lr}
 800708a:	b084      	sub	sp, #16
 800708c:	af00      	add	r7, sp, #0
 800708e:	6078      	str	r0, [r7, #4]
 8007090:	687b      	ldr	r3, [r7, #4]
 8007092:	2b00      	cmp	r3, #0
 8007094:	d101      	bne.n	800709a <HAL_DMA_DeInit+0x12>
 8007096:	2301      	movs	r3, #1
 8007098:	e050      	b.n	800713c <HAL_DMA_DeInit+0xb4>
 800709a:	687b      	ldr	r3, [r7, #4]
 800709c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80070a0:	b2db      	uxtb	r3, r3
 80070a2:	2b02      	cmp	r3, #2
 80070a4:	d101      	bne.n	80070aa <HAL_DMA_DeInit+0x22>
 80070a6:	2302      	movs	r3, #2
 80070a8:	e048      	b.n	800713c <HAL_DMA_DeInit+0xb4>
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	681a      	ldr	r2, [r3, #0]
 80070b0:	687b      	ldr	r3, [r7, #4]
 80070b2:	681b      	ldr	r3, [r3, #0]
 80070b4:	f022 0201 	bic.w	r2, r2, #1
 80070b8:	601a      	str	r2, [r3, #0]
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	2200      	movs	r2, #0
 80070c0:	601a      	str	r2, [r3, #0]
 80070c2:	687b      	ldr	r3, [r7, #4]
 80070c4:	681b      	ldr	r3, [r3, #0]
 80070c6:	2200      	movs	r2, #0
 80070c8:	605a      	str	r2, [r3, #4]
 80070ca:	687b      	ldr	r3, [r7, #4]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	2200      	movs	r2, #0
 80070d0:	609a      	str	r2, [r3, #8]
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	2200      	movs	r2, #0
 80070d8:	60da      	str	r2, [r3, #12]
 80070da:	687b      	ldr	r3, [r7, #4]
 80070dc:	681b      	ldr	r3, [r3, #0]
 80070de:	2200      	movs	r2, #0
 80070e0:	611a      	str	r2, [r3, #16]
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	2221      	movs	r2, #33	; 0x21
 80070e8:	615a      	str	r2, [r3, #20]
 80070ea:	6878      	ldr	r0, [r7, #4]
 80070ec:	f000 f84c 	bl	8007188 <DMA_CalcBaseAndBitshift>
 80070f0:	4603      	mov	r3, r0
 80070f2:	60fb      	str	r3, [r7, #12]
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80070f8:	223f      	movs	r2, #63	; 0x3f
 80070fa:	409a      	lsls	r2, r3
 80070fc:	68fb      	ldr	r3, [r7, #12]
 80070fe:	609a      	str	r2, [r3, #8]
 8007100:	687b      	ldr	r3, [r7, #4]
 8007102:	2200      	movs	r2, #0
 8007104:	63da      	str	r2, [r3, #60]	; 0x3c
 8007106:	687b      	ldr	r3, [r7, #4]
 8007108:	2200      	movs	r2, #0
 800710a:	641a      	str	r2, [r3, #64]	; 0x40
 800710c:	687b      	ldr	r3, [r7, #4]
 800710e:	2200      	movs	r2, #0
 8007110:	645a      	str	r2, [r3, #68]	; 0x44
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	2200      	movs	r2, #0
 8007116:	649a      	str	r2, [r3, #72]	; 0x48
 8007118:	687b      	ldr	r3, [r7, #4]
 800711a:	2200      	movs	r2, #0
 800711c:	64da      	str	r2, [r3, #76]	; 0x4c
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	2200      	movs	r2, #0
 8007122:	651a      	str	r2, [r3, #80]	; 0x50
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	2200      	movs	r2, #0
 8007128:	655a      	str	r2, [r3, #84]	; 0x54
 800712a:	687b      	ldr	r3, [r7, #4]
 800712c:	2200      	movs	r2, #0
 800712e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007132:	687b      	ldr	r3, [r7, #4]
 8007134:	2200      	movs	r2, #0
 8007136:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800713a:	2300      	movs	r3, #0
 800713c:	4618      	mov	r0, r3
 800713e:	3710      	adds	r7, #16
 8007140:	46bd      	mov	sp, r7
 8007142:	bd80      	pop	{r7, pc}

08007144 <HAL_DMA_Abort_IT>:
 8007144:	b480      	push	{r7}
 8007146:	b083      	sub	sp, #12
 8007148:	af00      	add	r7, sp, #0
 800714a:	6078      	str	r0, [r7, #4]
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007152:	b2db      	uxtb	r3, r3
 8007154:	2b02      	cmp	r3, #2
 8007156:	d004      	beq.n	8007162 <HAL_DMA_Abort_IT+0x1e>
 8007158:	687b      	ldr	r3, [r7, #4]
 800715a:	2280      	movs	r2, #128	; 0x80
 800715c:	655a      	str	r2, [r3, #84]	; 0x54
 800715e:	2301      	movs	r3, #1
 8007160:	e00c      	b.n	800717c <HAL_DMA_Abort_IT+0x38>
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	2205      	movs	r2, #5
 8007166:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	681a      	ldr	r2, [r3, #0]
 8007170:	687b      	ldr	r3, [r7, #4]
 8007172:	681b      	ldr	r3, [r3, #0]
 8007174:	f022 0201 	bic.w	r2, r2, #1
 8007178:	601a      	str	r2, [r3, #0]
 800717a:	2300      	movs	r3, #0
 800717c:	4618      	mov	r0, r3
 800717e:	370c      	adds	r7, #12
 8007180:	46bd      	mov	sp, r7
 8007182:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007186:	4770      	bx	lr

08007188 <DMA_CalcBaseAndBitshift>:
 8007188:	b480      	push	{r7}
 800718a:	b085      	sub	sp, #20
 800718c:	af00      	add	r7, sp, #0
 800718e:	6078      	str	r0, [r7, #4]
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	681b      	ldr	r3, [r3, #0]
 8007194:	b2db      	uxtb	r3, r3
 8007196:	3b10      	subs	r3, #16
 8007198:	4a13      	ldr	r2, [pc, #76]	; (80071e8 <DMA_CalcBaseAndBitshift+0x60>)
 800719a:	fba2 2303 	umull	r2, r3, r2, r3
 800719e:	091b      	lsrs	r3, r3, #4
 80071a0:	60fb      	str	r3, [r7, #12]
 80071a2:	4a12      	ldr	r2, [pc, #72]	; (80071ec <DMA_CalcBaseAndBitshift+0x64>)
 80071a4:	68fb      	ldr	r3, [r7, #12]
 80071a6:	4413      	add	r3, r2
 80071a8:	781b      	ldrb	r3, [r3, #0]
 80071aa:	461a      	mov	r2, r3
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	65da      	str	r2, [r3, #92]	; 0x5c
 80071b0:	68fb      	ldr	r3, [r7, #12]
 80071b2:	2b03      	cmp	r3, #3
 80071b4:	d908      	bls.n	80071c8 <DMA_CalcBaseAndBitshift+0x40>
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	681b      	ldr	r3, [r3, #0]
 80071ba:	461a      	mov	r2, r3
 80071bc:	4b0c      	ldr	r3, [pc, #48]	; (80071f0 <DMA_CalcBaseAndBitshift+0x68>)
 80071be:	4013      	ands	r3, r2
 80071c0:	1d1a      	adds	r2, r3, #4
 80071c2:	687b      	ldr	r3, [r7, #4]
 80071c4:	659a      	str	r2, [r3, #88]	; 0x58
 80071c6:	e006      	b.n	80071d6 <DMA_CalcBaseAndBitshift+0x4e>
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	681b      	ldr	r3, [r3, #0]
 80071cc:	461a      	mov	r2, r3
 80071ce:	4b08      	ldr	r3, [pc, #32]	; (80071f0 <DMA_CalcBaseAndBitshift+0x68>)
 80071d0:	4013      	ands	r3, r2
 80071d2:	687a      	ldr	r2, [r7, #4]
 80071d4:	6593      	str	r3, [r2, #88]	; 0x58
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80071da:	4618      	mov	r0, r3
 80071dc:	3714      	adds	r7, #20
 80071de:	46bd      	mov	sp, r7
 80071e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071e4:	4770      	bx	lr
 80071e6:	bf00      	nop
 80071e8:	aaaaaaab 	.word	0xaaaaaaab
 80071ec:	08011dc0 	.word	0x08011dc0
 80071f0:	fffffc00 	.word	0xfffffc00

080071f4 <DMA_CheckFifoParam>:
 80071f4:	b480      	push	{r7}
 80071f6:	b085      	sub	sp, #20
 80071f8:	af00      	add	r7, sp, #0
 80071fa:	6078      	str	r0, [r7, #4]
 80071fc:	2300      	movs	r3, #0
 80071fe:	73fb      	strb	r3, [r7, #15]
 8007200:	687b      	ldr	r3, [r7, #4]
 8007202:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007204:	60bb      	str	r3, [r7, #8]
 8007206:	687b      	ldr	r3, [r7, #4]
 8007208:	699b      	ldr	r3, [r3, #24]
 800720a:	2b00      	cmp	r3, #0
 800720c:	d11f      	bne.n	800724e <DMA_CheckFifoParam+0x5a>
 800720e:	68bb      	ldr	r3, [r7, #8]
 8007210:	2b03      	cmp	r3, #3
 8007212:	d855      	bhi.n	80072c0 <DMA_CheckFifoParam+0xcc>
 8007214:	a201      	add	r2, pc, #4	; (adr r2, 800721c <DMA_CheckFifoParam+0x28>)
 8007216:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800721a:	bf00      	nop
 800721c:	0800722d 	.word	0x0800722d
 8007220:	0800723f 	.word	0x0800723f
 8007224:	0800722d 	.word	0x0800722d
 8007228:	080072c1 	.word	0x080072c1
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007230:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007234:	2b00      	cmp	r3, #0
 8007236:	d045      	beq.n	80072c4 <DMA_CheckFifoParam+0xd0>
 8007238:	2301      	movs	r3, #1
 800723a:	73fb      	strb	r3, [r7, #15]
 800723c:	e042      	b.n	80072c4 <DMA_CheckFifoParam+0xd0>
 800723e:	687b      	ldr	r3, [r7, #4]
 8007240:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007242:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8007246:	d13f      	bne.n	80072c8 <DMA_CheckFifoParam+0xd4>
 8007248:	2301      	movs	r3, #1
 800724a:	73fb      	strb	r3, [r7, #15]
 800724c:	e03c      	b.n	80072c8 <DMA_CheckFifoParam+0xd4>
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	699b      	ldr	r3, [r3, #24]
 8007252:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007256:	d121      	bne.n	800729c <DMA_CheckFifoParam+0xa8>
 8007258:	68bb      	ldr	r3, [r7, #8]
 800725a:	2b03      	cmp	r3, #3
 800725c:	d836      	bhi.n	80072cc <DMA_CheckFifoParam+0xd8>
 800725e:	a201      	add	r2, pc, #4	; (adr r2, 8007264 <DMA_CheckFifoParam+0x70>)
 8007260:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007264:	08007275 	.word	0x08007275
 8007268:	0800727b 	.word	0x0800727b
 800726c:	08007275 	.word	0x08007275
 8007270:	0800728d 	.word	0x0800728d
 8007274:	2301      	movs	r3, #1
 8007276:	73fb      	strb	r3, [r7, #15]
 8007278:	e02f      	b.n	80072da <DMA_CheckFifoParam+0xe6>
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800727e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007282:	2b00      	cmp	r3, #0
 8007284:	d024      	beq.n	80072d0 <DMA_CheckFifoParam+0xdc>
 8007286:	2301      	movs	r3, #1
 8007288:	73fb      	strb	r3, [r7, #15]
 800728a:	e021      	b.n	80072d0 <DMA_CheckFifoParam+0xdc>
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007290:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8007294:	d11e      	bne.n	80072d4 <DMA_CheckFifoParam+0xe0>
 8007296:	2301      	movs	r3, #1
 8007298:	73fb      	strb	r3, [r7, #15]
 800729a:	e01b      	b.n	80072d4 <DMA_CheckFifoParam+0xe0>
 800729c:	68bb      	ldr	r3, [r7, #8]
 800729e:	2b02      	cmp	r3, #2
 80072a0:	d902      	bls.n	80072a8 <DMA_CheckFifoParam+0xb4>
 80072a2:	2b03      	cmp	r3, #3
 80072a4:	d003      	beq.n	80072ae <DMA_CheckFifoParam+0xba>
 80072a6:	e018      	b.n	80072da <DMA_CheckFifoParam+0xe6>
 80072a8:	2301      	movs	r3, #1
 80072aa:	73fb      	strb	r3, [r7, #15]
 80072ac:	e015      	b.n	80072da <DMA_CheckFifoParam+0xe6>
 80072ae:	687b      	ldr	r3, [r7, #4]
 80072b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80072b2:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80072b6:	2b00      	cmp	r3, #0
 80072b8:	d00e      	beq.n	80072d8 <DMA_CheckFifoParam+0xe4>
 80072ba:	2301      	movs	r3, #1
 80072bc:	73fb      	strb	r3, [r7, #15]
 80072be:	e00b      	b.n	80072d8 <DMA_CheckFifoParam+0xe4>
 80072c0:	bf00      	nop
 80072c2:	e00a      	b.n	80072da <DMA_CheckFifoParam+0xe6>
 80072c4:	bf00      	nop
 80072c6:	e008      	b.n	80072da <DMA_CheckFifoParam+0xe6>
 80072c8:	bf00      	nop
 80072ca:	e006      	b.n	80072da <DMA_CheckFifoParam+0xe6>
 80072cc:	bf00      	nop
 80072ce:	e004      	b.n	80072da <DMA_CheckFifoParam+0xe6>
 80072d0:	bf00      	nop
 80072d2:	e002      	b.n	80072da <DMA_CheckFifoParam+0xe6>
 80072d4:	bf00      	nop
 80072d6:	e000      	b.n	80072da <DMA_CheckFifoParam+0xe6>
 80072d8:	bf00      	nop
 80072da:	7bfb      	ldrb	r3, [r7, #15]
 80072dc:	4618      	mov	r0, r3
 80072de:	3714      	adds	r7, #20
 80072e0:	46bd      	mov	sp, r7
 80072e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072e6:	4770      	bx	lr

080072e8 <HAL_DMA2D_Init>:
 80072e8:	b580      	push	{r7, lr}
 80072ea:	b082      	sub	sp, #8
 80072ec:	af00      	add	r7, sp, #0
 80072ee:	6078      	str	r0, [r7, #4]
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	2b00      	cmp	r3, #0
 80072f4:	d101      	bne.n	80072fa <HAL_DMA2D_Init+0x12>
 80072f6:	2301      	movs	r3, #1
 80072f8:	e039      	b.n	800736e <HAL_DMA2D_Init+0x86>
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8007300:	b2db      	uxtb	r3, r3
 8007302:	2b00      	cmp	r3, #0
 8007304:	d106      	bne.n	8007314 <HAL_DMA2D_Init+0x2c>
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	2200      	movs	r2, #0
 800730a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800730e:	6878      	ldr	r0, [r7, #4]
 8007310:	f7fe fabe 	bl	8005890 <HAL_DMA2D_MspInit>
 8007314:	687b      	ldr	r3, [r7, #4]
 8007316:	2202      	movs	r2, #2
 8007318:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	681b      	ldr	r3, [r3, #0]
 8007320:	681b      	ldr	r3, [r3, #0]
 8007322:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	685a      	ldr	r2, [r3, #4]
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	681b      	ldr	r3, [r3, #0]
 800732e:	430a      	orrs	r2, r1
 8007330:	601a      	str	r2, [r3, #0]
 8007332:	687b      	ldr	r3, [r7, #4]
 8007334:	681b      	ldr	r3, [r3, #0]
 8007336:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007338:	f023 0107 	bic.w	r1, r3, #7
 800733c:	687b      	ldr	r3, [r7, #4]
 800733e:	689a      	ldr	r2, [r3, #8]
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	681b      	ldr	r3, [r3, #0]
 8007344:	430a      	orrs	r2, r1
 8007346:	635a      	str	r2, [r3, #52]	; 0x34
 8007348:	687b      	ldr	r3, [r7, #4]
 800734a:	681b      	ldr	r3, [r3, #0]
 800734c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800734e:	4b0a      	ldr	r3, [pc, #40]	; (8007378 <HAL_DMA2D_Init+0x90>)
 8007350:	4013      	ands	r3, r2
 8007352:	687a      	ldr	r2, [r7, #4]
 8007354:	68d1      	ldr	r1, [r2, #12]
 8007356:	687a      	ldr	r2, [r7, #4]
 8007358:	6812      	ldr	r2, [r2, #0]
 800735a:	430b      	orrs	r3, r1
 800735c:	6413      	str	r3, [r2, #64]	; 0x40
 800735e:	687b      	ldr	r3, [r7, #4]
 8007360:	2200      	movs	r2, #0
 8007362:	63da      	str	r2, [r3, #60]	; 0x3c
 8007364:	687b      	ldr	r3, [r7, #4]
 8007366:	2201      	movs	r2, #1
 8007368:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800736c:	2300      	movs	r3, #0
 800736e:	4618      	mov	r0, r3
 8007370:	3708      	adds	r7, #8
 8007372:	46bd      	mov	sp, r7
 8007374:	bd80      	pop	{r7, pc}
 8007376:	bf00      	nop
 8007378:	ffffc000 	.word	0xffffc000

0800737c <HAL_DMA2D_Start>:
 800737c:	b580      	push	{r7, lr}
 800737e:	b086      	sub	sp, #24
 8007380:	af02      	add	r7, sp, #8
 8007382:	60f8      	str	r0, [r7, #12]
 8007384:	60b9      	str	r1, [r7, #8]
 8007386:	607a      	str	r2, [r7, #4]
 8007388:	603b      	str	r3, [r7, #0]
 800738a:	68fb      	ldr	r3, [r7, #12]
 800738c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8007390:	2b01      	cmp	r3, #1
 8007392:	d101      	bne.n	8007398 <HAL_DMA2D_Start+0x1c>
 8007394:	2302      	movs	r3, #2
 8007396:	e018      	b.n	80073ca <HAL_DMA2D_Start+0x4e>
 8007398:	68fb      	ldr	r3, [r7, #12]
 800739a:	2201      	movs	r2, #1
 800739c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80073a0:	68fb      	ldr	r3, [r7, #12]
 80073a2:	2202      	movs	r2, #2
 80073a4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80073a8:	69bb      	ldr	r3, [r7, #24]
 80073aa:	9300      	str	r3, [sp, #0]
 80073ac:	683b      	ldr	r3, [r7, #0]
 80073ae:	687a      	ldr	r2, [r7, #4]
 80073b0:	68b9      	ldr	r1, [r7, #8]
 80073b2:	68f8      	ldr	r0, [r7, #12]
 80073b4:	f000 f988 	bl	80076c8 <DMA2D_SetConfig>
 80073b8:	68fb      	ldr	r3, [r7, #12]
 80073ba:	681b      	ldr	r3, [r3, #0]
 80073bc:	681a      	ldr	r2, [r3, #0]
 80073be:	68fb      	ldr	r3, [r7, #12]
 80073c0:	681b      	ldr	r3, [r3, #0]
 80073c2:	f042 0201 	orr.w	r2, r2, #1
 80073c6:	601a      	str	r2, [r3, #0]
 80073c8:	2300      	movs	r3, #0
 80073ca:	4618      	mov	r0, r3
 80073cc:	3710      	adds	r7, #16
 80073ce:	46bd      	mov	sp, r7
 80073d0:	bd80      	pop	{r7, pc}

080073d2 <HAL_DMA2D_PollForTransfer>:
 80073d2:	b580      	push	{r7, lr}
 80073d4:	b086      	sub	sp, #24
 80073d6:	af00      	add	r7, sp, #0
 80073d8:	6078      	str	r0, [r7, #4]
 80073da:	6039      	str	r1, [r7, #0]
 80073dc:	2300      	movs	r3, #0
 80073de:	60fb      	str	r3, [r7, #12]
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	681b      	ldr	r3, [r3, #0]
 80073e4:	681b      	ldr	r3, [r3, #0]
 80073e6:	f003 0301 	and.w	r3, r3, #1
 80073ea:	2b00      	cmp	r3, #0
 80073ec:	d056      	beq.n	800749c <HAL_DMA2D_PollForTransfer+0xca>
 80073ee:	f7fe ffe5 	bl	80063bc <HAL_GetTick>
 80073f2:	6178      	str	r0, [r7, #20]
 80073f4:	e04b      	b.n	800748e <HAL_DMA2D_PollForTransfer+0xbc>
 80073f6:	687b      	ldr	r3, [r7, #4]
 80073f8:	681b      	ldr	r3, [r3, #0]
 80073fa:	685b      	ldr	r3, [r3, #4]
 80073fc:	60fb      	str	r3, [r7, #12]
 80073fe:	68fb      	ldr	r3, [r7, #12]
 8007400:	f003 0321 	and.w	r3, r3, #33	; 0x21
 8007404:	2b00      	cmp	r3, #0
 8007406:	d023      	beq.n	8007450 <HAL_DMA2D_PollForTransfer+0x7e>
 8007408:	68fb      	ldr	r3, [r7, #12]
 800740a:	f003 0320 	and.w	r3, r3, #32
 800740e:	2b00      	cmp	r3, #0
 8007410:	d005      	beq.n	800741e <HAL_DMA2D_PollForTransfer+0x4c>
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007416:	f043 0202 	orr.w	r2, r3, #2
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	63da      	str	r2, [r3, #60]	; 0x3c
 800741e:	68fb      	ldr	r3, [r7, #12]
 8007420:	f003 0301 	and.w	r3, r3, #1
 8007424:	2b00      	cmp	r3, #0
 8007426:	d005      	beq.n	8007434 <HAL_DMA2D_PollForTransfer+0x62>
 8007428:	687b      	ldr	r3, [r7, #4]
 800742a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800742c:	f043 0201 	orr.w	r2, r3, #1
 8007430:	687b      	ldr	r3, [r7, #4]
 8007432:	63da      	str	r2, [r3, #60]	; 0x3c
 8007434:	687b      	ldr	r3, [r7, #4]
 8007436:	681b      	ldr	r3, [r3, #0]
 8007438:	2221      	movs	r2, #33	; 0x21
 800743a:	609a      	str	r2, [r3, #8]
 800743c:	687b      	ldr	r3, [r7, #4]
 800743e:	2204      	movs	r2, #4
 8007440:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	2200      	movs	r2, #0
 8007448:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800744c:	2301      	movs	r3, #1
 800744e:	e0a5      	b.n	800759c <HAL_DMA2D_PollForTransfer+0x1ca>
 8007450:	683b      	ldr	r3, [r7, #0]
 8007452:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007456:	d01a      	beq.n	800748e <HAL_DMA2D_PollForTransfer+0xbc>
 8007458:	f7fe ffb0 	bl	80063bc <HAL_GetTick>
 800745c:	4602      	mov	r2, r0
 800745e:	697b      	ldr	r3, [r7, #20]
 8007460:	1ad3      	subs	r3, r2, r3
 8007462:	683a      	ldr	r2, [r7, #0]
 8007464:	429a      	cmp	r2, r3
 8007466:	d302      	bcc.n	800746e <HAL_DMA2D_PollForTransfer+0x9c>
 8007468:	683b      	ldr	r3, [r7, #0]
 800746a:	2b00      	cmp	r3, #0
 800746c:	d10f      	bne.n	800748e <HAL_DMA2D_PollForTransfer+0xbc>
 800746e:	687b      	ldr	r3, [r7, #4]
 8007470:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007472:	f043 0220 	orr.w	r2, r3, #32
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	63da      	str	r2, [r3, #60]	; 0x3c
 800747a:	687b      	ldr	r3, [r7, #4]
 800747c:	2203      	movs	r2, #3
 800747e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007482:	687b      	ldr	r3, [r7, #4]
 8007484:	2200      	movs	r2, #0
 8007486:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800748a:	2303      	movs	r3, #3
 800748c:	e086      	b.n	800759c <HAL_DMA2D_PollForTransfer+0x1ca>
 800748e:	687b      	ldr	r3, [r7, #4]
 8007490:	681b      	ldr	r3, [r3, #0]
 8007492:	685b      	ldr	r3, [r3, #4]
 8007494:	f003 0302 	and.w	r3, r3, #2
 8007498:	2b00      	cmp	r3, #0
 800749a:	d0ac      	beq.n	80073f6 <HAL_DMA2D_PollForTransfer+0x24>
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	681b      	ldr	r3, [r3, #0]
 80074a0:	69db      	ldr	r3, [r3, #28]
 80074a2:	f003 0320 	and.w	r3, r3, #32
 80074a6:	613b      	str	r3, [r7, #16]
 80074a8:	687b      	ldr	r3, [r7, #4]
 80074aa:	681b      	ldr	r3, [r3, #0]
 80074ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80074ae:	f003 0320 	and.w	r3, r3, #32
 80074b2:	693a      	ldr	r2, [r7, #16]
 80074b4:	4313      	orrs	r3, r2
 80074b6:	613b      	str	r3, [r7, #16]
 80074b8:	693b      	ldr	r3, [r7, #16]
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	d061      	beq.n	8007582 <HAL_DMA2D_PollForTransfer+0x1b0>
 80074be:	f7fe ff7d 	bl	80063bc <HAL_GetTick>
 80074c2:	6178      	str	r0, [r7, #20]
 80074c4:	e056      	b.n	8007574 <HAL_DMA2D_PollForTransfer+0x1a2>
 80074c6:	687b      	ldr	r3, [r7, #4]
 80074c8:	681b      	ldr	r3, [r3, #0]
 80074ca:	685b      	ldr	r3, [r3, #4]
 80074cc:	60fb      	str	r3, [r7, #12]
 80074ce:	68fb      	ldr	r3, [r7, #12]
 80074d0:	f003 0329 	and.w	r3, r3, #41	; 0x29
 80074d4:	2b00      	cmp	r3, #0
 80074d6:	d02e      	beq.n	8007536 <HAL_DMA2D_PollForTransfer+0x164>
 80074d8:	68fb      	ldr	r3, [r7, #12]
 80074da:	f003 0308 	and.w	r3, r3, #8
 80074de:	2b00      	cmp	r3, #0
 80074e0:	d005      	beq.n	80074ee <HAL_DMA2D_PollForTransfer+0x11c>
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80074e6:	f043 0204 	orr.w	r2, r3, #4
 80074ea:	687b      	ldr	r3, [r7, #4]
 80074ec:	63da      	str	r2, [r3, #60]	; 0x3c
 80074ee:	68fb      	ldr	r3, [r7, #12]
 80074f0:	f003 0320 	and.w	r3, r3, #32
 80074f4:	2b00      	cmp	r3, #0
 80074f6:	d005      	beq.n	8007504 <HAL_DMA2D_PollForTransfer+0x132>
 80074f8:	687b      	ldr	r3, [r7, #4]
 80074fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80074fc:	f043 0202 	orr.w	r2, r3, #2
 8007500:	687b      	ldr	r3, [r7, #4]
 8007502:	63da      	str	r2, [r3, #60]	; 0x3c
 8007504:	68fb      	ldr	r3, [r7, #12]
 8007506:	f003 0301 	and.w	r3, r3, #1
 800750a:	2b00      	cmp	r3, #0
 800750c:	d005      	beq.n	800751a <HAL_DMA2D_PollForTransfer+0x148>
 800750e:	687b      	ldr	r3, [r7, #4]
 8007510:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007512:	f043 0201 	orr.w	r2, r3, #1
 8007516:	687b      	ldr	r3, [r7, #4]
 8007518:	63da      	str	r2, [r3, #60]	; 0x3c
 800751a:	687b      	ldr	r3, [r7, #4]
 800751c:	681b      	ldr	r3, [r3, #0]
 800751e:	2229      	movs	r2, #41	; 0x29
 8007520:	609a      	str	r2, [r3, #8]
 8007522:	687b      	ldr	r3, [r7, #4]
 8007524:	2204      	movs	r2, #4
 8007526:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	2200      	movs	r2, #0
 800752e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8007532:	2301      	movs	r3, #1
 8007534:	e032      	b.n	800759c <HAL_DMA2D_PollForTransfer+0x1ca>
 8007536:	683b      	ldr	r3, [r7, #0]
 8007538:	f1b3 3fff 	cmp.w	r3, #4294967295
 800753c:	d01a      	beq.n	8007574 <HAL_DMA2D_PollForTransfer+0x1a2>
 800753e:	f7fe ff3d 	bl	80063bc <HAL_GetTick>
 8007542:	4602      	mov	r2, r0
 8007544:	697b      	ldr	r3, [r7, #20]
 8007546:	1ad3      	subs	r3, r2, r3
 8007548:	683a      	ldr	r2, [r7, #0]
 800754a:	429a      	cmp	r2, r3
 800754c:	d302      	bcc.n	8007554 <HAL_DMA2D_PollForTransfer+0x182>
 800754e:	683b      	ldr	r3, [r7, #0]
 8007550:	2b00      	cmp	r3, #0
 8007552:	d10f      	bne.n	8007574 <HAL_DMA2D_PollForTransfer+0x1a2>
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007558:	f043 0220 	orr.w	r2, r3, #32
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	63da      	str	r2, [r3, #60]	; 0x3c
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	2203      	movs	r2, #3
 8007564:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007568:	687b      	ldr	r3, [r7, #4]
 800756a:	2200      	movs	r2, #0
 800756c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8007570:	2303      	movs	r3, #3
 8007572:	e013      	b.n	800759c <HAL_DMA2D_PollForTransfer+0x1ca>
 8007574:	687b      	ldr	r3, [r7, #4]
 8007576:	681b      	ldr	r3, [r3, #0]
 8007578:	685b      	ldr	r3, [r3, #4]
 800757a:	f003 0310 	and.w	r3, r3, #16
 800757e:	2b00      	cmp	r3, #0
 8007580:	d0a1      	beq.n	80074c6 <HAL_DMA2D_PollForTransfer+0xf4>
 8007582:	687b      	ldr	r3, [r7, #4]
 8007584:	681b      	ldr	r3, [r3, #0]
 8007586:	2212      	movs	r2, #18
 8007588:	609a      	str	r2, [r3, #8]
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	2201      	movs	r2, #1
 800758e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	2200      	movs	r2, #0
 8007596:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800759a:	2300      	movs	r3, #0
 800759c:	4618      	mov	r0, r3
 800759e:	3718      	adds	r7, #24
 80075a0:	46bd      	mov	sp, r7
 80075a2:	bd80      	pop	{r7, pc}

080075a4 <HAL_DMA2D_ConfigLayer>:
 80075a4:	b480      	push	{r7}
 80075a6:	b087      	sub	sp, #28
 80075a8:	af00      	add	r7, sp, #0
 80075aa:	6078      	str	r0, [r7, #4]
 80075ac:	6039      	str	r1, [r7, #0]
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	685b      	ldr	r3, [r3, #4]
 80075b2:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80075b6:	687b      	ldr	r3, [r7, #4]
 80075b8:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80075bc:	2b01      	cmp	r3, #1
 80075be:	d101      	bne.n	80075c4 <HAL_DMA2D_ConfigLayer+0x20>
 80075c0:	2302      	movs	r3, #2
 80075c2:	e079      	b.n	80076b8 <HAL_DMA2D_ConfigLayer+0x114>
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	2201      	movs	r2, #1
 80075c8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	2202      	movs	r2, #2
 80075d0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80075d4:	683b      	ldr	r3, [r7, #0]
 80075d6:	011b      	lsls	r3, r3, #4
 80075d8:	3318      	adds	r3, #24
 80075da:	687a      	ldr	r2, [r7, #4]
 80075dc:	4413      	add	r3, r2
 80075de:	613b      	str	r3, [r7, #16]
 80075e0:	693b      	ldr	r3, [r7, #16]
 80075e2:	685a      	ldr	r2, [r3, #4]
 80075e4:	693b      	ldr	r3, [r7, #16]
 80075e6:	689b      	ldr	r3, [r3, #8]
 80075e8:	041b      	lsls	r3, r3, #16
 80075ea:	4313      	orrs	r3, r2
 80075ec:	617b      	str	r3, [r7, #20]
 80075ee:	4b35      	ldr	r3, [pc, #212]	; (80076c4 <HAL_DMA2D_ConfigLayer+0x120>)
 80075f0:	60fb      	str	r3, [r7, #12]
 80075f2:	693b      	ldr	r3, [r7, #16]
 80075f4:	685b      	ldr	r3, [r3, #4]
 80075f6:	2b0a      	cmp	r3, #10
 80075f8:	d003      	beq.n	8007602 <HAL_DMA2D_ConfigLayer+0x5e>
 80075fa:	693b      	ldr	r3, [r7, #16]
 80075fc:	685b      	ldr	r3, [r3, #4]
 80075fe:	2b09      	cmp	r3, #9
 8007600:	d107      	bne.n	8007612 <HAL_DMA2D_ConfigLayer+0x6e>
 8007602:	693b      	ldr	r3, [r7, #16]
 8007604:	68db      	ldr	r3, [r3, #12]
 8007606:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800760a:	697a      	ldr	r2, [r7, #20]
 800760c:	4313      	orrs	r3, r2
 800760e:	617b      	str	r3, [r7, #20]
 8007610:	e005      	b.n	800761e <HAL_DMA2D_ConfigLayer+0x7a>
 8007612:	693b      	ldr	r3, [r7, #16]
 8007614:	68db      	ldr	r3, [r3, #12]
 8007616:	061b      	lsls	r3, r3, #24
 8007618:	697a      	ldr	r2, [r7, #20]
 800761a:	4313      	orrs	r3, r2
 800761c:	617b      	str	r3, [r7, #20]
 800761e:	683b      	ldr	r3, [r7, #0]
 8007620:	2b00      	cmp	r3, #0
 8007622:	d120      	bne.n	8007666 <HAL_DMA2D_ConfigLayer+0xc2>
 8007624:	687b      	ldr	r3, [r7, #4]
 8007626:	681b      	ldr	r3, [r3, #0]
 8007628:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800762a:	68fb      	ldr	r3, [r7, #12]
 800762c:	43db      	mvns	r3, r3
 800762e:	ea02 0103 	and.w	r1, r2, r3
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	681b      	ldr	r3, [r3, #0]
 8007636:	697a      	ldr	r2, [r7, #20]
 8007638:	430a      	orrs	r2, r1
 800763a:	625a      	str	r2, [r3, #36]	; 0x24
 800763c:	687b      	ldr	r3, [r7, #4]
 800763e:	681b      	ldr	r3, [r3, #0]
 8007640:	693a      	ldr	r2, [r7, #16]
 8007642:	6812      	ldr	r2, [r2, #0]
 8007644:	619a      	str	r2, [r3, #24]
 8007646:	693b      	ldr	r3, [r7, #16]
 8007648:	685b      	ldr	r3, [r3, #4]
 800764a:	2b0a      	cmp	r3, #10
 800764c:	d003      	beq.n	8007656 <HAL_DMA2D_ConfigLayer+0xb2>
 800764e:	693b      	ldr	r3, [r7, #16]
 8007650:	685b      	ldr	r3, [r3, #4]
 8007652:	2b09      	cmp	r3, #9
 8007654:	d127      	bne.n	80076a6 <HAL_DMA2D_ConfigLayer+0x102>
 8007656:	693b      	ldr	r3, [r7, #16]
 8007658:	68da      	ldr	r2, [r3, #12]
 800765a:	687b      	ldr	r3, [r7, #4]
 800765c:	681b      	ldr	r3, [r3, #0]
 800765e:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8007662:	629a      	str	r2, [r3, #40]	; 0x28
 8007664:	e01f      	b.n	80076a6 <HAL_DMA2D_ConfigLayer+0x102>
 8007666:	687b      	ldr	r3, [r7, #4]
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	69da      	ldr	r2, [r3, #28]
 800766c:	68fb      	ldr	r3, [r7, #12]
 800766e:	43db      	mvns	r3, r3
 8007670:	ea02 0103 	and.w	r1, r2, r3
 8007674:	687b      	ldr	r3, [r7, #4]
 8007676:	681b      	ldr	r3, [r3, #0]
 8007678:	697a      	ldr	r2, [r7, #20]
 800767a:	430a      	orrs	r2, r1
 800767c:	61da      	str	r2, [r3, #28]
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	681b      	ldr	r3, [r3, #0]
 8007682:	693a      	ldr	r2, [r7, #16]
 8007684:	6812      	ldr	r2, [r2, #0]
 8007686:	611a      	str	r2, [r3, #16]
 8007688:	693b      	ldr	r3, [r7, #16]
 800768a:	685b      	ldr	r3, [r3, #4]
 800768c:	2b0a      	cmp	r3, #10
 800768e:	d003      	beq.n	8007698 <HAL_DMA2D_ConfigLayer+0xf4>
 8007690:	693b      	ldr	r3, [r7, #16]
 8007692:	685b      	ldr	r3, [r3, #4]
 8007694:	2b09      	cmp	r3, #9
 8007696:	d106      	bne.n	80076a6 <HAL_DMA2D_ConfigLayer+0x102>
 8007698:	693b      	ldr	r3, [r7, #16]
 800769a:	68da      	ldr	r2, [r3, #12]
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	681b      	ldr	r3, [r3, #0]
 80076a0:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80076a4:	621a      	str	r2, [r3, #32]
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	2201      	movs	r2, #1
 80076aa:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	2200      	movs	r2, #0
 80076b2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80076b6:	2300      	movs	r3, #0
 80076b8:	4618      	mov	r0, r3
 80076ba:	371c      	adds	r7, #28
 80076bc:	46bd      	mov	sp, r7
 80076be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076c2:	4770      	bx	lr
 80076c4:	ff03000f 	.word	0xff03000f

080076c8 <DMA2D_SetConfig>:
 80076c8:	b480      	push	{r7}
 80076ca:	b08b      	sub	sp, #44	; 0x2c
 80076cc:	af00      	add	r7, sp, #0
 80076ce:	60f8      	str	r0, [r7, #12]
 80076d0:	60b9      	str	r1, [r7, #8]
 80076d2:	607a      	str	r2, [r7, #4]
 80076d4:	603b      	str	r3, [r7, #0]
 80076d6:	68fb      	ldr	r3, [r7, #12]
 80076d8:	681b      	ldr	r3, [r3, #0]
 80076da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80076dc:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 80076e0:	683b      	ldr	r3, [r7, #0]
 80076e2:	041a      	lsls	r2, r3, #16
 80076e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80076e6:	431a      	orrs	r2, r3
 80076e8:	68fb      	ldr	r3, [r7, #12]
 80076ea:	681b      	ldr	r3, [r3, #0]
 80076ec:	430a      	orrs	r2, r1
 80076ee:	645a      	str	r2, [r3, #68]	; 0x44
 80076f0:	68fb      	ldr	r3, [r7, #12]
 80076f2:	681b      	ldr	r3, [r3, #0]
 80076f4:	687a      	ldr	r2, [r7, #4]
 80076f6:	63da      	str	r2, [r3, #60]	; 0x3c
 80076f8:	68fb      	ldr	r3, [r7, #12]
 80076fa:	685b      	ldr	r3, [r3, #4]
 80076fc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8007700:	d174      	bne.n	80077ec <DMA2D_SetConfig+0x124>
 8007702:	68bb      	ldr	r3, [r7, #8]
 8007704:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8007708:	623b      	str	r3, [r7, #32]
 800770a:	68bb      	ldr	r3, [r7, #8]
 800770c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8007710:	61fb      	str	r3, [r7, #28]
 8007712:	68bb      	ldr	r3, [r7, #8]
 8007714:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8007718:	61bb      	str	r3, [r7, #24]
 800771a:	68bb      	ldr	r3, [r7, #8]
 800771c:	b2db      	uxtb	r3, r3
 800771e:	617b      	str	r3, [r7, #20]
 8007720:	68fb      	ldr	r3, [r7, #12]
 8007722:	689b      	ldr	r3, [r3, #8]
 8007724:	2b00      	cmp	r3, #0
 8007726:	d108      	bne.n	800773a <DMA2D_SetConfig+0x72>
 8007728:	69ba      	ldr	r2, [r7, #24]
 800772a:	69fb      	ldr	r3, [r7, #28]
 800772c:	431a      	orrs	r2, r3
 800772e:	6a3b      	ldr	r3, [r7, #32]
 8007730:	4313      	orrs	r3, r2
 8007732:	697a      	ldr	r2, [r7, #20]
 8007734:	4313      	orrs	r3, r2
 8007736:	627b      	str	r3, [r7, #36]	; 0x24
 8007738:	e053      	b.n	80077e2 <DMA2D_SetConfig+0x11a>
 800773a:	68fb      	ldr	r3, [r7, #12]
 800773c:	689b      	ldr	r3, [r3, #8]
 800773e:	2b01      	cmp	r3, #1
 8007740:	d106      	bne.n	8007750 <DMA2D_SetConfig+0x88>
 8007742:	69ba      	ldr	r2, [r7, #24]
 8007744:	69fb      	ldr	r3, [r7, #28]
 8007746:	4313      	orrs	r3, r2
 8007748:	697a      	ldr	r2, [r7, #20]
 800774a:	4313      	orrs	r3, r2
 800774c:	627b      	str	r3, [r7, #36]	; 0x24
 800774e:	e048      	b.n	80077e2 <DMA2D_SetConfig+0x11a>
 8007750:	68fb      	ldr	r3, [r7, #12]
 8007752:	689b      	ldr	r3, [r3, #8]
 8007754:	2b02      	cmp	r3, #2
 8007756:	d111      	bne.n	800777c <DMA2D_SetConfig+0xb4>
 8007758:	69fb      	ldr	r3, [r7, #28]
 800775a:	0cdb      	lsrs	r3, r3, #19
 800775c:	61fb      	str	r3, [r7, #28]
 800775e:	69bb      	ldr	r3, [r7, #24]
 8007760:	0a9b      	lsrs	r3, r3, #10
 8007762:	61bb      	str	r3, [r7, #24]
 8007764:	697b      	ldr	r3, [r7, #20]
 8007766:	08db      	lsrs	r3, r3, #3
 8007768:	617b      	str	r3, [r7, #20]
 800776a:	69bb      	ldr	r3, [r7, #24]
 800776c:	015a      	lsls	r2, r3, #5
 800776e:	69fb      	ldr	r3, [r7, #28]
 8007770:	02db      	lsls	r3, r3, #11
 8007772:	4313      	orrs	r3, r2
 8007774:	697a      	ldr	r2, [r7, #20]
 8007776:	4313      	orrs	r3, r2
 8007778:	627b      	str	r3, [r7, #36]	; 0x24
 800777a:	e032      	b.n	80077e2 <DMA2D_SetConfig+0x11a>
 800777c:	68fb      	ldr	r3, [r7, #12]
 800777e:	689b      	ldr	r3, [r3, #8]
 8007780:	2b03      	cmp	r3, #3
 8007782:	d117      	bne.n	80077b4 <DMA2D_SetConfig+0xec>
 8007784:	6a3b      	ldr	r3, [r7, #32]
 8007786:	0fdb      	lsrs	r3, r3, #31
 8007788:	623b      	str	r3, [r7, #32]
 800778a:	69fb      	ldr	r3, [r7, #28]
 800778c:	0cdb      	lsrs	r3, r3, #19
 800778e:	61fb      	str	r3, [r7, #28]
 8007790:	69bb      	ldr	r3, [r7, #24]
 8007792:	0adb      	lsrs	r3, r3, #11
 8007794:	61bb      	str	r3, [r7, #24]
 8007796:	697b      	ldr	r3, [r7, #20]
 8007798:	08db      	lsrs	r3, r3, #3
 800779a:	617b      	str	r3, [r7, #20]
 800779c:	69bb      	ldr	r3, [r7, #24]
 800779e:	015a      	lsls	r2, r3, #5
 80077a0:	69fb      	ldr	r3, [r7, #28]
 80077a2:	029b      	lsls	r3, r3, #10
 80077a4:	431a      	orrs	r2, r3
 80077a6:	6a3b      	ldr	r3, [r7, #32]
 80077a8:	03db      	lsls	r3, r3, #15
 80077aa:	4313      	orrs	r3, r2
 80077ac:	697a      	ldr	r2, [r7, #20]
 80077ae:	4313      	orrs	r3, r2
 80077b0:	627b      	str	r3, [r7, #36]	; 0x24
 80077b2:	e016      	b.n	80077e2 <DMA2D_SetConfig+0x11a>
 80077b4:	6a3b      	ldr	r3, [r7, #32]
 80077b6:	0f1b      	lsrs	r3, r3, #28
 80077b8:	623b      	str	r3, [r7, #32]
 80077ba:	69fb      	ldr	r3, [r7, #28]
 80077bc:	0d1b      	lsrs	r3, r3, #20
 80077be:	61fb      	str	r3, [r7, #28]
 80077c0:	69bb      	ldr	r3, [r7, #24]
 80077c2:	0b1b      	lsrs	r3, r3, #12
 80077c4:	61bb      	str	r3, [r7, #24]
 80077c6:	697b      	ldr	r3, [r7, #20]
 80077c8:	091b      	lsrs	r3, r3, #4
 80077ca:	617b      	str	r3, [r7, #20]
 80077cc:	69bb      	ldr	r3, [r7, #24]
 80077ce:	011a      	lsls	r2, r3, #4
 80077d0:	69fb      	ldr	r3, [r7, #28]
 80077d2:	021b      	lsls	r3, r3, #8
 80077d4:	431a      	orrs	r2, r3
 80077d6:	6a3b      	ldr	r3, [r7, #32]
 80077d8:	031b      	lsls	r3, r3, #12
 80077da:	4313      	orrs	r3, r2
 80077dc:	697a      	ldr	r2, [r7, #20]
 80077de:	4313      	orrs	r3, r2
 80077e0:	627b      	str	r3, [r7, #36]	; 0x24
 80077e2:	68fb      	ldr	r3, [r7, #12]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80077e8:	639a      	str	r2, [r3, #56]	; 0x38
 80077ea:	e003      	b.n	80077f4 <DMA2D_SetConfig+0x12c>
 80077ec:	68fb      	ldr	r3, [r7, #12]
 80077ee:	681b      	ldr	r3, [r3, #0]
 80077f0:	68ba      	ldr	r2, [r7, #8]
 80077f2:	60da      	str	r2, [r3, #12]
 80077f4:	bf00      	nop
 80077f6:	372c      	adds	r7, #44	; 0x2c
 80077f8:	46bd      	mov	sp, r7
 80077fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077fe:	4770      	bx	lr

08007800 <HAL_GPIO_Init>:
 8007800:	b480      	push	{r7}
 8007802:	b089      	sub	sp, #36	; 0x24
 8007804:	af00      	add	r7, sp, #0
 8007806:	6078      	str	r0, [r7, #4]
 8007808:	6039      	str	r1, [r7, #0]
 800780a:	2300      	movs	r3, #0
 800780c:	61fb      	str	r3, [r7, #28]
 800780e:	2300      	movs	r3, #0
 8007810:	617b      	str	r3, [r7, #20]
 8007812:	2300      	movs	r3, #0
 8007814:	613b      	str	r3, [r7, #16]
 8007816:	2300      	movs	r3, #0
 8007818:	61bb      	str	r3, [r7, #24]
 800781a:	2300      	movs	r3, #0
 800781c:	61fb      	str	r3, [r7, #28]
 800781e:	e175      	b.n	8007b0c <HAL_GPIO_Init+0x30c>
 8007820:	2201      	movs	r2, #1
 8007822:	69fb      	ldr	r3, [r7, #28]
 8007824:	fa02 f303 	lsl.w	r3, r2, r3
 8007828:	617b      	str	r3, [r7, #20]
 800782a:	683b      	ldr	r3, [r7, #0]
 800782c:	681b      	ldr	r3, [r3, #0]
 800782e:	697a      	ldr	r2, [r7, #20]
 8007830:	4013      	ands	r3, r2
 8007832:	613b      	str	r3, [r7, #16]
 8007834:	693a      	ldr	r2, [r7, #16]
 8007836:	697b      	ldr	r3, [r7, #20]
 8007838:	429a      	cmp	r2, r3
 800783a:	f040 8164 	bne.w	8007b06 <HAL_GPIO_Init+0x306>
 800783e:	683b      	ldr	r3, [r7, #0]
 8007840:	685b      	ldr	r3, [r3, #4]
 8007842:	2b01      	cmp	r3, #1
 8007844:	d00b      	beq.n	800785e <HAL_GPIO_Init+0x5e>
 8007846:	683b      	ldr	r3, [r7, #0]
 8007848:	685b      	ldr	r3, [r3, #4]
 800784a:	2b02      	cmp	r3, #2
 800784c:	d007      	beq.n	800785e <HAL_GPIO_Init+0x5e>
 800784e:	683b      	ldr	r3, [r7, #0]
 8007850:	685b      	ldr	r3, [r3, #4]
 8007852:	2b11      	cmp	r3, #17
 8007854:	d003      	beq.n	800785e <HAL_GPIO_Init+0x5e>
 8007856:	683b      	ldr	r3, [r7, #0]
 8007858:	685b      	ldr	r3, [r3, #4]
 800785a:	2b12      	cmp	r3, #18
 800785c:	d130      	bne.n	80078c0 <HAL_GPIO_Init+0xc0>
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	689b      	ldr	r3, [r3, #8]
 8007862:	61bb      	str	r3, [r7, #24]
 8007864:	69fb      	ldr	r3, [r7, #28]
 8007866:	005b      	lsls	r3, r3, #1
 8007868:	2203      	movs	r2, #3
 800786a:	fa02 f303 	lsl.w	r3, r2, r3
 800786e:	43db      	mvns	r3, r3
 8007870:	69ba      	ldr	r2, [r7, #24]
 8007872:	4013      	ands	r3, r2
 8007874:	61bb      	str	r3, [r7, #24]
 8007876:	683b      	ldr	r3, [r7, #0]
 8007878:	68da      	ldr	r2, [r3, #12]
 800787a:	69fb      	ldr	r3, [r7, #28]
 800787c:	005b      	lsls	r3, r3, #1
 800787e:	fa02 f303 	lsl.w	r3, r2, r3
 8007882:	69ba      	ldr	r2, [r7, #24]
 8007884:	4313      	orrs	r3, r2
 8007886:	61bb      	str	r3, [r7, #24]
 8007888:	687b      	ldr	r3, [r7, #4]
 800788a:	69ba      	ldr	r2, [r7, #24]
 800788c:	609a      	str	r2, [r3, #8]
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	685b      	ldr	r3, [r3, #4]
 8007892:	61bb      	str	r3, [r7, #24]
 8007894:	2201      	movs	r2, #1
 8007896:	69fb      	ldr	r3, [r7, #28]
 8007898:	fa02 f303 	lsl.w	r3, r2, r3
 800789c:	43db      	mvns	r3, r3
 800789e:	69ba      	ldr	r2, [r7, #24]
 80078a0:	4013      	ands	r3, r2
 80078a2:	61bb      	str	r3, [r7, #24]
 80078a4:	683b      	ldr	r3, [r7, #0]
 80078a6:	685b      	ldr	r3, [r3, #4]
 80078a8:	091b      	lsrs	r3, r3, #4
 80078aa:	f003 0201 	and.w	r2, r3, #1
 80078ae:	69fb      	ldr	r3, [r7, #28]
 80078b0:	fa02 f303 	lsl.w	r3, r2, r3
 80078b4:	69ba      	ldr	r2, [r7, #24]
 80078b6:	4313      	orrs	r3, r2
 80078b8:	61bb      	str	r3, [r7, #24]
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	69ba      	ldr	r2, [r7, #24]
 80078be:	605a      	str	r2, [r3, #4]
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	68db      	ldr	r3, [r3, #12]
 80078c4:	61bb      	str	r3, [r7, #24]
 80078c6:	69fb      	ldr	r3, [r7, #28]
 80078c8:	005b      	lsls	r3, r3, #1
 80078ca:	2203      	movs	r2, #3
 80078cc:	fa02 f303 	lsl.w	r3, r2, r3
 80078d0:	43db      	mvns	r3, r3
 80078d2:	69ba      	ldr	r2, [r7, #24]
 80078d4:	4013      	ands	r3, r2
 80078d6:	61bb      	str	r3, [r7, #24]
 80078d8:	683b      	ldr	r3, [r7, #0]
 80078da:	689a      	ldr	r2, [r3, #8]
 80078dc:	69fb      	ldr	r3, [r7, #28]
 80078de:	005b      	lsls	r3, r3, #1
 80078e0:	fa02 f303 	lsl.w	r3, r2, r3
 80078e4:	69ba      	ldr	r2, [r7, #24]
 80078e6:	4313      	orrs	r3, r2
 80078e8:	61bb      	str	r3, [r7, #24]
 80078ea:	687b      	ldr	r3, [r7, #4]
 80078ec:	69ba      	ldr	r2, [r7, #24]
 80078ee:	60da      	str	r2, [r3, #12]
 80078f0:	683b      	ldr	r3, [r7, #0]
 80078f2:	685b      	ldr	r3, [r3, #4]
 80078f4:	2b02      	cmp	r3, #2
 80078f6:	d003      	beq.n	8007900 <HAL_GPIO_Init+0x100>
 80078f8:	683b      	ldr	r3, [r7, #0]
 80078fa:	685b      	ldr	r3, [r3, #4]
 80078fc:	2b12      	cmp	r3, #18
 80078fe:	d123      	bne.n	8007948 <HAL_GPIO_Init+0x148>
 8007900:	69fb      	ldr	r3, [r7, #28]
 8007902:	08da      	lsrs	r2, r3, #3
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	3208      	adds	r2, #8
 8007908:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800790c:	61bb      	str	r3, [r7, #24]
 800790e:	69fb      	ldr	r3, [r7, #28]
 8007910:	f003 0307 	and.w	r3, r3, #7
 8007914:	009b      	lsls	r3, r3, #2
 8007916:	220f      	movs	r2, #15
 8007918:	fa02 f303 	lsl.w	r3, r2, r3
 800791c:	43db      	mvns	r3, r3
 800791e:	69ba      	ldr	r2, [r7, #24]
 8007920:	4013      	ands	r3, r2
 8007922:	61bb      	str	r3, [r7, #24]
 8007924:	683b      	ldr	r3, [r7, #0]
 8007926:	691a      	ldr	r2, [r3, #16]
 8007928:	69fb      	ldr	r3, [r7, #28]
 800792a:	f003 0307 	and.w	r3, r3, #7
 800792e:	009b      	lsls	r3, r3, #2
 8007930:	fa02 f303 	lsl.w	r3, r2, r3
 8007934:	69ba      	ldr	r2, [r7, #24]
 8007936:	4313      	orrs	r3, r2
 8007938:	61bb      	str	r3, [r7, #24]
 800793a:	69fb      	ldr	r3, [r7, #28]
 800793c:	08da      	lsrs	r2, r3, #3
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	3208      	adds	r2, #8
 8007942:	69b9      	ldr	r1, [r7, #24]
 8007944:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	681b      	ldr	r3, [r3, #0]
 800794c:	61bb      	str	r3, [r7, #24]
 800794e:	69fb      	ldr	r3, [r7, #28]
 8007950:	005b      	lsls	r3, r3, #1
 8007952:	2203      	movs	r2, #3
 8007954:	fa02 f303 	lsl.w	r3, r2, r3
 8007958:	43db      	mvns	r3, r3
 800795a:	69ba      	ldr	r2, [r7, #24]
 800795c:	4013      	ands	r3, r2
 800795e:	61bb      	str	r3, [r7, #24]
 8007960:	683b      	ldr	r3, [r7, #0]
 8007962:	685b      	ldr	r3, [r3, #4]
 8007964:	f003 0203 	and.w	r2, r3, #3
 8007968:	69fb      	ldr	r3, [r7, #28]
 800796a:	005b      	lsls	r3, r3, #1
 800796c:	fa02 f303 	lsl.w	r3, r2, r3
 8007970:	69ba      	ldr	r2, [r7, #24]
 8007972:	4313      	orrs	r3, r2
 8007974:	61bb      	str	r3, [r7, #24]
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	69ba      	ldr	r2, [r7, #24]
 800797a:	601a      	str	r2, [r3, #0]
 800797c:	683b      	ldr	r3, [r7, #0]
 800797e:	685b      	ldr	r3, [r3, #4]
 8007980:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007984:	2b00      	cmp	r3, #0
 8007986:	f000 80be 	beq.w	8007b06 <HAL_GPIO_Init+0x306>
 800798a:	4b65      	ldr	r3, [pc, #404]	; (8007b20 <HAL_GPIO_Init+0x320>)
 800798c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800798e:	4a64      	ldr	r2, [pc, #400]	; (8007b20 <HAL_GPIO_Init+0x320>)
 8007990:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007994:	6453      	str	r3, [r2, #68]	; 0x44
 8007996:	4b62      	ldr	r3, [pc, #392]	; (8007b20 <HAL_GPIO_Init+0x320>)
 8007998:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800799a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800799e:	60fb      	str	r3, [r7, #12]
 80079a0:	68fb      	ldr	r3, [r7, #12]
 80079a2:	4a60      	ldr	r2, [pc, #384]	; (8007b24 <HAL_GPIO_Init+0x324>)
 80079a4:	69fb      	ldr	r3, [r7, #28]
 80079a6:	089b      	lsrs	r3, r3, #2
 80079a8:	3302      	adds	r3, #2
 80079aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80079ae:	61bb      	str	r3, [r7, #24]
 80079b0:	69fb      	ldr	r3, [r7, #28]
 80079b2:	f003 0303 	and.w	r3, r3, #3
 80079b6:	009b      	lsls	r3, r3, #2
 80079b8:	220f      	movs	r2, #15
 80079ba:	fa02 f303 	lsl.w	r3, r2, r3
 80079be:	43db      	mvns	r3, r3
 80079c0:	69ba      	ldr	r2, [r7, #24]
 80079c2:	4013      	ands	r3, r2
 80079c4:	61bb      	str	r3, [r7, #24]
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	4a57      	ldr	r2, [pc, #348]	; (8007b28 <HAL_GPIO_Init+0x328>)
 80079ca:	4293      	cmp	r3, r2
 80079cc:	d037      	beq.n	8007a3e <HAL_GPIO_Init+0x23e>
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	4a56      	ldr	r2, [pc, #344]	; (8007b2c <HAL_GPIO_Init+0x32c>)
 80079d2:	4293      	cmp	r3, r2
 80079d4:	d031      	beq.n	8007a3a <HAL_GPIO_Init+0x23a>
 80079d6:	687b      	ldr	r3, [r7, #4]
 80079d8:	4a55      	ldr	r2, [pc, #340]	; (8007b30 <HAL_GPIO_Init+0x330>)
 80079da:	4293      	cmp	r3, r2
 80079dc:	d02b      	beq.n	8007a36 <HAL_GPIO_Init+0x236>
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	4a54      	ldr	r2, [pc, #336]	; (8007b34 <HAL_GPIO_Init+0x334>)
 80079e2:	4293      	cmp	r3, r2
 80079e4:	d025      	beq.n	8007a32 <HAL_GPIO_Init+0x232>
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	4a53      	ldr	r2, [pc, #332]	; (8007b38 <HAL_GPIO_Init+0x338>)
 80079ea:	4293      	cmp	r3, r2
 80079ec:	d01f      	beq.n	8007a2e <HAL_GPIO_Init+0x22e>
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	4a52      	ldr	r2, [pc, #328]	; (8007b3c <HAL_GPIO_Init+0x33c>)
 80079f2:	4293      	cmp	r3, r2
 80079f4:	d019      	beq.n	8007a2a <HAL_GPIO_Init+0x22a>
 80079f6:	687b      	ldr	r3, [r7, #4]
 80079f8:	4a51      	ldr	r2, [pc, #324]	; (8007b40 <HAL_GPIO_Init+0x340>)
 80079fa:	4293      	cmp	r3, r2
 80079fc:	d013      	beq.n	8007a26 <HAL_GPIO_Init+0x226>
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	4a50      	ldr	r2, [pc, #320]	; (8007b44 <HAL_GPIO_Init+0x344>)
 8007a02:	4293      	cmp	r3, r2
 8007a04:	d00d      	beq.n	8007a22 <HAL_GPIO_Init+0x222>
 8007a06:	687b      	ldr	r3, [r7, #4]
 8007a08:	4a4f      	ldr	r2, [pc, #316]	; (8007b48 <HAL_GPIO_Init+0x348>)
 8007a0a:	4293      	cmp	r3, r2
 8007a0c:	d007      	beq.n	8007a1e <HAL_GPIO_Init+0x21e>
 8007a0e:	687b      	ldr	r3, [r7, #4]
 8007a10:	4a4e      	ldr	r2, [pc, #312]	; (8007b4c <HAL_GPIO_Init+0x34c>)
 8007a12:	4293      	cmp	r3, r2
 8007a14:	d101      	bne.n	8007a1a <HAL_GPIO_Init+0x21a>
 8007a16:	2309      	movs	r3, #9
 8007a18:	e012      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a1a:	230a      	movs	r3, #10
 8007a1c:	e010      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a1e:	2308      	movs	r3, #8
 8007a20:	e00e      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a22:	2307      	movs	r3, #7
 8007a24:	e00c      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a26:	2306      	movs	r3, #6
 8007a28:	e00a      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a2a:	2305      	movs	r3, #5
 8007a2c:	e008      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a2e:	2304      	movs	r3, #4
 8007a30:	e006      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a32:	2303      	movs	r3, #3
 8007a34:	e004      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a36:	2302      	movs	r3, #2
 8007a38:	e002      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a3a:	2301      	movs	r3, #1
 8007a3c:	e000      	b.n	8007a40 <HAL_GPIO_Init+0x240>
 8007a3e:	2300      	movs	r3, #0
 8007a40:	69fa      	ldr	r2, [r7, #28]
 8007a42:	f002 0203 	and.w	r2, r2, #3
 8007a46:	0092      	lsls	r2, r2, #2
 8007a48:	4093      	lsls	r3, r2
 8007a4a:	69ba      	ldr	r2, [r7, #24]
 8007a4c:	4313      	orrs	r3, r2
 8007a4e:	61bb      	str	r3, [r7, #24]
 8007a50:	4934      	ldr	r1, [pc, #208]	; (8007b24 <HAL_GPIO_Init+0x324>)
 8007a52:	69fb      	ldr	r3, [r7, #28]
 8007a54:	089b      	lsrs	r3, r3, #2
 8007a56:	3302      	adds	r3, #2
 8007a58:	69ba      	ldr	r2, [r7, #24]
 8007a5a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007a5e:	4b3c      	ldr	r3, [pc, #240]	; (8007b50 <HAL_GPIO_Init+0x350>)
 8007a60:	681b      	ldr	r3, [r3, #0]
 8007a62:	61bb      	str	r3, [r7, #24]
 8007a64:	693b      	ldr	r3, [r7, #16]
 8007a66:	43db      	mvns	r3, r3
 8007a68:	69ba      	ldr	r2, [r7, #24]
 8007a6a:	4013      	ands	r3, r2
 8007a6c:	61bb      	str	r3, [r7, #24]
 8007a6e:	683b      	ldr	r3, [r7, #0]
 8007a70:	685b      	ldr	r3, [r3, #4]
 8007a72:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007a76:	2b00      	cmp	r3, #0
 8007a78:	d003      	beq.n	8007a82 <HAL_GPIO_Init+0x282>
 8007a7a:	69ba      	ldr	r2, [r7, #24]
 8007a7c:	693b      	ldr	r3, [r7, #16]
 8007a7e:	4313      	orrs	r3, r2
 8007a80:	61bb      	str	r3, [r7, #24]
 8007a82:	4a33      	ldr	r2, [pc, #204]	; (8007b50 <HAL_GPIO_Init+0x350>)
 8007a84:	69bb      	ldr	r3, [r7, #24]
 8007a86:	6013      	str	r3, [r2, #0]
 8007a88:	4b31      	ldr	r3, [pc, #196]	; (8007b50 <HAL_GPIO_Init+0x350>)
 8007a8a:	685b      	ldr	r3, [r3, #4]
 8007a8c:	61bb      	str	r3, [r7, #24]
 8007a8e:	693b      	ldr	r3, [r7, #16]
 8007a90:	43db      	mvns	r3, r3
 8007a92:	69ba      	ldr	r2, [r7, #24]
 8007a94:	4013      	ands	r3, r2
 8007a96:	61bb      	str	r3, [r7, #24]
 8007a98:	683b      	ldr	r3, [r7, #0]
 8007a9a:	685b      	ldr	r3, [r3, #4]
 8007a9c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007aa0:	2b00      	cmp	r3, #0
 8007aa2:	d003      	beq.n	8007aac <HAL_GPIO_Init+0x2ac>
 8007aa4:	69ba      	ldr	r2, [r7, #24]
 8007aa6:	693b      	ldr	r3, [r7, #16]
 8007aa8:	4313      	orrs	r3, r2
 8007aaa:	61bb      	str	r3, [r7, #24]
 8007aac:	4a28      	ldr	r2, [pc, #160]	; (8007b50 <HAL_GPIO_Init+0x350>)
 8007aae:	69bb      	ldr	r3, [r7, #24]
 8007ab0:	6053      	str	r3, [r2, #4]
 8007ab2:	4b27      	ldr	r3, [pc, #156]	; (8007b50 <HAL_GPIO_Init+0x350>)
 8007ab4:	689b      	ldr	r3, [r3, #8]
 8007ab6:	61bb      	str	r3, [r7, #24]
 8007ab8:	693b      	ldr	r3, [r7, #16]
 8007aba:	43db      	mvns	r3, r3
 8007abc:	69ba      	ldr	r2, [r7, #24]
 8007abe:	4013      	ands	r3, r2
 8007ac0:	61bb      	str	r3, [r7, #24]
 8007ac2:	683b      	ldr	r3, [r7, #0]
 8007ac4:	685b      	ldr	r3, [r3, #4]
 8007ac6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007aca:	2b00      	cmp	r3, #0
 8007acc:	d003      	beq.n	8007ad6 <HAL_GPIO_Init+0x2d6>
 8007ace:	69ba      	ldr	r2, [r7, #24]
 8007ad0:	693b      	ldr	r3, [r7, #16]
 8007ad2:	4313      	orrs	r3, r2
 8007ad4:	61bb      	str	r3, [r7, #24]
 8007ad6:	4a1e      	ldr	r2, [pc, #120]	; (8007b50 <HAL_GPIO_Init+0x350>)
 8007ad8:	69bb      	ldr	r3, [r7, #24]
 8007ada:	6093      	str	r3, [r2, #8]
 8007adc:	4b1c      	ldr	r3, [pc, #112]	; (8007b50 <HAL_GPIO_Init+0x350>)
 8007ade:	68db      	ldr	r3, [r3, #12]
 8007ae0:	61bb      	str	r3, [r7, #24]
 8007ae2:	693b      	ldr	r3, [r7, #16]
 8007ae4:	43db      	mvns	r3, r3
 8007ae6:	69ba      	ldr	r2, [r7, #24]
 8007ae8:	4013      	ands	r3, r2
 8007aea:	61bb      	str	r3, [r7, #24]
 8007aec:	683b      	ldr	r3, [r7, #0]
 8007aee:	685b      	ldr	r3, [r3, #4]
 8007af0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007af4:	2b00      	cmp	r3, #0
 8007af6:	d003      	beq.n	8007b00 <HAL_GPIO_Init+0x300>
 8007af8:	69ba      	ldr	r2, [r7, #24]
 8007afa:	693b      	ldr	r3, [r7, #16]
 8007afc:	4313      	orrs	r3, r2
 8007afe:	61bb      	str	r3, [r7, #24]
 8007b00:	4a13      	ldr	r2, [pc, #76]	; (8007b50 <HAL_GPIO_Init+0x350>)
 8007b02:	69bb      	ldr	r3, [r7, #24]
 8007b04:	60d3      	str	r3, [r2, #12]
 8007b06:	69fb      	ldr	r3, [r7, #28]
 8007b08:	3301      	adds	r3, #1
 8007b0a:	61fb      	str	r3, [r7, #28]
 8007b0c:	69fb      	ldr	r3, [r7, #28]
 8007b0e:	2b0f      	cmp	r3, #15
 8007b10:	f67f ae86 	bls.w	8007820 <HAL_GPIO_Init+0x20>
 8007b14:	bf00      	nop
 8007b16:	3724      	adds	r7, #36	; 0x24
 8007b18:	46bd      	mov	sp, r7
 8007b1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b1e:	4770      	bx	lr
 8007b20:	40023800 	.word	0x40023800
 8007b24:	40013800 	.word	0x40013800
 8007b28:	40020000 	.word	0x40020000
 8007b2c:	40020400 	.word	0x40020400
 8007b30:	40020800 	.word	0x40020800
 8007b34:	40020c00 	.word	0x40020c00
 8007b38:	40021000 	.word	0x40021000
 8007b3c:	40021400 	.word	0x40021400
 8007b40:	40021800 	.word	0x40021800
 8007b44:	40021c00 	.word	0x40021c00
 8007b48:	40022000 	.word	0x40022000
 8007b4c:	40022400 	.word	0x40022400
 8007b50:	40013c00 	.word	0x40013c00

08007b54 <HAL_GPIO_DeInit>:
 8007b54:	b480      	push	{r7}
 8007b56:	b087      	sub	sp, #28
 8007b58:	af00      	add	r7, sp, #0
 8007b5a:	6078      	str	r0, [r7, #4]
 8007b5c:	6039      	str	r1, [r7, #0]
 8007b5e:	2300      	movs	r3, #0
 8007b60:	613b      	str	r3, [r7, #16]
 8007b62:	2300      	movs	r3, #0
 8007b64:	60fb      	str	r3, [r7, #12]
 8007b66:	2300      	movs	r3, #0
 8007b68:	60bb      	str	r3, [r7, #8]
 8007b6a:	2300      	movs	r3, #0
 8007b6c:	617b      	str	r3, [r7, #20]
 8007b6e:	e0d9      	b.n	8007d24 <HAL_GPIO_DeInit+0x1d0>
 8007b70:	2201      	movs	r2, #1
 8007b72:	697b      	ldr	r3, [r7, #20]
 8007b74:	fa02 f303 	lsl.w	r3, r2, r3
 8007b78:	613b      	str	r3, [r7, #16]
 8007b7a:	683a      	ldr	r2, [r7, #0]
 8007b7c:	693b      	ldr	r3, [r7, #16]
 8007b7e:	4013      	ands	r3, r2
 8007b80:	60fb      	str	r3, [r7, #12]
 8007b82:	68fa      	ldr	r2, [r7, #12]
 8007b84:	693b      	ldr	r3, [r7, #16]
 8007b86:	429a      	cmp	r2, r3
 8007b88:	f040 80c9 	bne.w	8007d1e <HAL_GPIO_DeInit+0x1ca>
 8007b8c:	4a6a      	ldr	r2, [pc, #424]	; (8007d38 <HAL_GPIO_DeInit+0x1e4>)
 8007b8e:	697b      	ldr	r3, [r7, #20]
 8007b90:	089b      	lsrs	r3, r3, #2
 8007b92:	3302      	adds	r3, #2
 8007b94:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007b98:	60bb      	str	r3, [r7, #8]
 8007b9a:	697b      	ldr	r3, [r7, #20]
 8007b9c:	f003 0303 	and.w	r3, r3, #3
 8007ba0:	009b      	lsls	r3, r3, #2
 8007ba2:	220f      	movs	r2, #15
 8007ba4:	fa02 f303 	lsl.w	r3, r2, r3
 8007ba8:	68ba      	ldr	r2, [r7, #8]
 8007baa:	4013      	ands	r3, r2
 8007bac:	60bb      	str	r3, [r7, #8]
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	4a62      	ldr	r2, [pc, #392]	; (8007d3c <HAL_GPIO_DeInit+0x1e8>)
 8007bb2:	4293      	cmp	r3, r2
 8007bb4:	d037      	beq.n	8007c26 <HAL_GPIO_DeInit+0xd2>
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	4a61      	ldr	r2, [pc, #388]	; (8007d40 <HAL_GPIO_DeInit+0x1ec>)
 8007bba:	4293      	cmp	r3, r2
 8007bbc:	d031      	beq.n	8007c22 <HAL_GPIO_DeInit+0xce>
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	4a60      	ldr	r2, [pc, #384]	; (8007d44 <HAL_GPIO_DeInit+0x1f0>)
 8007bc2:	4293      	cmp	r3, r2
 8007bc4:	d02b      	beq.n	8007c1e <HAL_GPIO_DeInit+0xca>
 8007bc6:	687b      	ldr	r3, [r7, #4]
 8007bc8:	4a5f      	ldr	r2, [pc, #380]	; (8007d48 <HAL_GPIO_DeInit+0x1f4>)
 8007bca:	4293      	cmp	r3, r2
 8007bcc:	d025      	beq.n	8007c1a <HAL_GPIO_DeInit+0xc6>
 8007bce:	687b      	ldr	r3, [r7, #4]
 8007bd0:	4a5e      	ldr	r2, [pc, #376]	; (8007d4c <HAL_GPIO_DeInit+0x1f8>)
 8007bd2:	4293      	cmp	r3, r2
 8007bd4:	d01f      	beq.n	8007c16 <HAL_GPIO_DeInit+0xc2>
 8007bd6:	687b      	ldr	r3, [r7, #4]
 8007bd8:	4a5d      	ldr	r2, [pc, #372]	; (8007d50 <HAL_GPIO_DeInit+0x1fc>)
 8007bda:	4293      	cmp	r3, r2
 8007bdc:	d019      	beq.n	8007c12 <HAL_GPIO_DeInit+0xbe>
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	4a5c      	ldr	r2, [pc, #368]	; (8007d54 <HAL_GPIO_DeInit+0x200>)
 8007be2:	4293      	cmp	r3, r2
 8007be4:	d013      	beq.n	8007c0e <HAL_GPIO_DeInit+0xba>
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	4a5b      	ldr	r2, [pc, #364]	; (8007d58 <HAL_GPIO_DeInit+0x204>)
 8007bea:	4293      	cmp	r3, r2
 8007bec:	d00d      	beq.n	8007c0a <HAL_GPIO_DeInit+0xb6>
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	4a5a      	ldr	r2, [pc, #360]	; (8007d5c <HAL_GPIO_DeInit+0x208>)
 8007bf2:	4293      	cmp	r3, r2
 8007bf4:	d007      	beq.n	8007c06 <HAL_GPIO_DeInit+0xb2>
 8007bf6:	687b      	ldr	r3, [r7, #4]
 8007bf8:	4a59      	ldr	r2, [pc, #356]	; (8007d60 <HAL_GPIO_DeInit+0x20c>)
 8007bfa:	4293      	cmp	r3, r2
 8007bfc:	d101      	bne.n	8007c02 <HAL_GPIO_DeInit+0xae>
 8007bfe:	2309      	movs	r3, #9
 8007c00:	e012      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c02:	230a      	movs	r3, #10
 8007c04:	e010      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c06:	2308      	movs	r3, #8
 8007c08:	e00e      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c0a:	2307      	movs	r3, #7
 8007c0c:	e00c      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c0e:	2306      	movs	r3, #6
 8007c10:	e00a      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c12:	2305      	movs	r3, #5
 8007c14:	e008      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c16:	2304      	movs	r3, #4
 8007c18:	e006      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c1a:	2303      	movs	r3, #3
 8007c1c:	e004      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c1e:	2302      	movs	r3, #2
 8007c20:	e002      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c22:	2301      	movs	r3, #1
 8007c24:	e000      	b.n	8007c28 <HAL_GPIO_DeInit+0xd4>
 8007c26:	2300      	movs	r3, #0
 8007c28:	697a      	ldr	r2, [r7, #20]
 8007c2a:	f002 0203 	and.w	r2, r2, #3
 8007c2e:	0092      	lsls	r2, r2, #2
 8007c30:	4093      	lsls	r3, r2
 8007c32:	68ba      	ldr	r2, [r7, #8]
 8007c34:	429a      	cmp	r2, r3
 8007c36:	d132      	bne.n	8007c9e <HAL_GPIO_DeInit+0x14a>
 8007c38:	4b4a      	ldr	r3, [pc, #296]	; (8007d64 <HAL_GPIO_DeInit+0x210>)
 8007c3a:	681a      	ldr	r2, [r3, #0]
 8007c3c:	68fb      	ldr	r3, [r7, #12]
 8007c3e:	43db      	mvns	r3, r3
 8007c40:	4948      	ldr	r1, [pc, #288]	; (8007d64 <HAL_GPIO_DeInit+0x210>)
 8007c42:	4013      	ands	r3, r2
 8007c44:	600b      	str	r3, [r1, #0]
 8007c46:	4b47      	ldr	r3, [pc, #284]	; (8007d64 <HAL_GPIO_DeInit+0x210>)
 8007c48:	685a      	ldr	r2, [r3, #4]
 8007c4a:	68fb      	ldr	r3, [r7, #12]
 8007c4c:	43db      	mvns	r3, r3
 8007c4e:	4945      	ldr	r1, [pc, #276]	; (8007d64 <HAL_GPIO_DeInit+0x210>)
 8007c50:	4013      	ands	r3, r2
 8007c52:	604b      	str	r3, [r1, #4]
 8007c54:	4b43      	ldr	r3, [pc, #268]	; (8007d64 <HAL_GPIO_DeInit+0x210>)
 8007c56:	689a      	ldr	r2, [r3, #8]
 8007c58:	68fb      	ldr	r3, [r7, #12]
 8007c5a:	43db      	mvns	r3, r3
 8007c5c:	4941      	ldr	r1, [pc, #260]	; (8007d64 <HAL_GPIO_DeInit+0x210>)
 8007c5e:	4013      	ands	r3, r2
 8007c60:	608b      	str	r3, [r1, #8]
 8007c62:	4b40      	ldr	r3, [pc, #256]	; (8007d64 <HAL_GPIO_DeInit+0x210>)
 8007c64:	68da      	ldr	r2, [r3, #12]
 8007c66:	68fb      	ldr	r3, [r7, #12]
 8007c68:	43db      	mvns	r3, r3
 8007c6a:	493e      	ldr	r1, [pc, #248]	; (8007d64 <HAL_GPIO_DeInit+0x210>)
 8007c6c:	4013      	ands	r3, r2
 8007c6e:	60cb      	str	r3, [r1, #12]
 8007c70:	697b      	ldr	r3, [r7, #20]
 8007c72:	f003 0303 	and.w	r3, r3, #3
 8007c76:	009b      	lsls	r3, r3, #2
 8007c78:	220f      	movs	r2, #15
 8007c7a:	fa02 f303 	lsl.w	r3, r2, r3
 8007c7e:	60bb      	str	r3, [r7, #8]
 8007c80:	4a2d      	ldr	r2, [pc, #180]	; (8007d38 <HAL_GPIO_DeInit+0x1e4>)
 8007c82:	697b      	ldr	r3, [r7, #20]
 8007c84:	089b      	lsrs	r3, r3, #2
 8007c86:	3302      	adds	r3, #2
 8007c88:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8007c8c:	68bb      	ldr	r3, [r7, #8]
 8007c8e:	43da      	mvns	r2, r3
 8007c90:	4829      	ldr	r0, [pc, #164]	; (8007d38 <HAL_GPIO_DeInit+0x1e4>)
 8007c92:	697b      	ldr	r3, [r7, #20]
 8007c94:	089b      	lsrs	r3, r3, #2
 8007c96:	400a      	ands	r2, r1
 8007c98:	3302      	adds	r3, #2
 8007c9a:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8007c9e:	687b      	ldr	r3, [r7, #4]
 8007ca0:	681a      	ldr	r2, [r3, #0]
 8007ca2:	697b      	ldr	r3, [r7, #20]
 8007ca4:	005b      	lsls	r3, r3, #1
 8007ca6:	2103      	movs	r1, #3
 8007ca8:	fa01 f303 	lsl.w	r3, r1, r3
 8007cac:	43db      	mvns	r3, r3
 8007cae:	401a      	ands	r2, r3
 8007cb0:	687b      	ldr	r3, [r7, #4]
 8007cb2:	601a      	str	r2, [r3, #0]
 8007cb4:	697b      	ldr	r3, [r7, #20]
 8007cb6:	08da      	lsrs	r2, r3, #3
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	3208      	adds	r2, #8
 8007cbc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8007cc0:	697b      	ldr	r3, [r7, #20]
 8007cc2:	f003 0307 	and.w	r3, r3, #7
 8007cc6:	009b      	lsls	r3, r3, #2
 8007cc8:	220f      	movs	r2, #15
 8007cca:	fa02 f303 	lsl.w	r3, r2, r3
 8007cce:	43db      	mvns	r3, r3
 8007cd0:	697a      	ldr	r2, [r7, #20]
 8007cd2:	08d2      	lsrs	r2, r2, #3
 8007cd4:	4019      	ands	r1, r3
 8007cd6:	687b      	ldr	r3, [r7, #4]
 8007cd8:	3208      	adds	r2, #8
 8007cda:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	68da      	ldr	r2, [r3, #12]
 8007ce2:	697b      	ldr	r3, [r7, #20]
 8007ce4:	005b      	lsls	r3, r3, #1
 8007ce6:	2103      	movs	r1, #3
 8007ce8:	fa01 f303 	lsl.w	r3, r1, r3
 8007cec:	43db      	mvns	r3, r3
 8007cee:	401a      	ands	r2, r3
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	60da      	str	r2, [r3, #12]
 8007cf4:	687b      	ldr	r3, [r7, #4]
 8007cf6:	685a      	ldr	r2, [r3, #4]
 8007cf8:	2101      	movs	r1, #1
 8007cfa:	697b      	ldr	r3, [r7, #20]
 8007cfc:	fa01 f303 	lsl.w	r3, r1, r3
 8007d00:	43db      	mvns	r3, r3
 8007d02:	401a      	ands	r2, r3
 8007d04:	687b      	ldr	r3, [r7, #4]
 8007d06:	605a      	str	r2, [r3, #4]
 8007d08:	687b      	ldr	r3, [r7, #4]
 8007d0a:	689a      	ldr	r2, [r3, #8]
 8007d0c:	697b      	ldr	r3, [r7, #20]
 8007d0e:	005b      	lsls	r3, r3, #1
 8007d10:	2103      	movs	r1, #3
 8007d12:	fa01 f303 	lsl.w	r3, r1, r3
 8007d16:	43db      	mvns	r3, r3
 8007d18:	401a      	ands	r2, r3
 8007d1a:	687b      	ldr	r3, [r7, #4]
 8007d1c:	609a      	str	r2, [r3, #8]
 8007d1e:	697b      	ldr	r3, [r7, #20]
 8007d20:	3301      	adds	r3, #1
 8007d22:	617b      	str	r3, [r7, #20]
 8007d24:	697b      	ldr	r3, [r7, #20]
 8007d26:	2b0f      	cmp	r3, #15
 8007d28:	f67f af22 	bls.w	8007b70 <HAL_GPIO_DeInit+0x1c>
 8007d2c:	bf00      	nop
 8007d2e:	371c      	adds	r7, #28
 8007d30:	46bd      	mov	sp, r7
 8007d32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d36:	4770      	bx	lr
 8007d38:	40013800 	.word	0x40013800
 8007d3c:	40020000 	.word	0x40020000
 8007d40:	40020400 	.word	0x40020400
 8007d44:	40020800 	.word	0x40020800
 8007d48:	40020c00 	.word	0x40020c00
 8007d4c:	40021000 	.word	0x40021000
 8007d50:	40021400 	.word	0x40021400
 8007d54:	40021800 	.word	0x40021800
 8007d58:	40021c00 	.word	0x40021c00
 8007d5c:	40022000 	.word	0x40022000
 8007d60:	40022400 	.word	0x40022400
 8007d64:	40013c00 	.word	0x40013c00

08007d68 <HAL_GPIO_ReadPin>:
 8007d68:	b480      	push	{r7}
 8007d6a:	b085      	sub	sp, #20
 8007d6c:	af00      	add	r7, sp, #0
 8007d6e:	6078      	str	r0, [r7, #4]
 8007d70:	460b      	mov	r3, r1
 8007d72:	807b      	strh	r3, [r7, #2]
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	691a      	ldr	r2, [r3, #16]
 8007d78:	887b      	ldrh	r3, [r7, #2]
 8007d7a:	4013      	ands	r3, r2
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	d002      	beq.n	8007d86 <HAL_GPIO_ReadPin+0x1e>
 8007d80:	2301      	movs	r3, #1
 8007d82:	73fb      	strb	r3, [r7, #15]
 8007d84:	e001      	b.n	8007d8a <HAL_GPIO_ReadPin+0x22>
 8007d86:	2300      	movs	r3, #0
 8007d88:	73fb      	strb	r3, [r7, #15]
 8007d8a:	7bfb      	ldrb	r3, [r7, #15]
 8007d8c:	4618      	mov	r0, r3
 8007d8e:	3714      	adds	r7, #20
 8007d90:	46bd      	mov	sp, r7
 8007d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d96:	4770      	bx	lr

08007d98 <HAL_GPIO_WritePin>:
 8007d98:	b480      	push	{r7}
 8007d9a:	b083      	sub	sp, #12
 8007d9c:	af00      	add	r7, sp, #0
 8007d9e:	6078      	str	r0, [r7, #4]
 8007da0:	460b      	mov	r3, r1
 8007da2:	807b      	strh	r3, [r7, #2]
 8007da4:	4613      	mov	r3, r2
 8007da6:	707b      	strb	r3, [r7, #1]
 8007da8:	787b      	ldrb	r3, [r7, #1]
 8007daa:	2b00      	cmp	r3, #0
 8007dac:	d003      	beq.n	8007db6 <HAL_GPIO_WritePin+0x1e>
 8007dae:	887a      	ldrh	r2, [r7, #2]
 8007db0:	687b      	ldr	r3, [r7, #4]
 8007db2:	619a      	str	r2, [r3, #24]
 8007db4:	e003      	b.n	8007dbe <HAL_GPIO_WritePin+0x26>
 8007db6:	887b      	ldrh	r3, [r7, #2]
 8007db8:	041a      	lsls	r2, r3, #16
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	619a      	str	r2, [r3, #24]
 8007dbe:	bf00      	nop
 8007dc0:	370c      	adds	r7, #12
 8007dc2:	46bd      	mov	sp, r7
 8007dc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dc8:	4770      	bx	lr
	...

08007dcc <HAL_GPIO_EXTI_IRQHandler>:
 8007dcc:	b580      	push	{r7, lr}
 8007dce:	b082      	sub	sp, #8
 8007dd0:	af00      	add	r7, sp, #0
 8007dd2:	4603      	mov	r3, r0
 8007dd4:	80fb      	strh	r3, [r7, #6]
 8007dd6:	4b08      	ldr	r3, [pc, #32]	; (8007df8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8007dd8:	695a      	ldr	r2, [r3, #20]
 8007dda:	88fb      	ldrh	r3, [r7, #6]
 8007ddc:	4013      	ands	r3, r2
 8007dde:	2b00      	cmp	r3, #0
 8007de0:	d006      	beq.n	8007df0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8007de2:	4a05      	ldr	r2, [pc, #20]	; (8007df8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8007de4:	88fb      	ldrh	r3, [r7, #6]
 8007de6:	6153      	str	r3, [r2, #20]
 8007de8:	88fb      	ldrh	r3, [r7, #6]
 8007dea:	4618      	mov	r0, r3
 8007dec:	f7fa f912 	bl	8002014 <HAL_GPIO_EXTI_Callback>
 8007df0:	bf00      	nop
 8007df2:	3708      	adds	r7, #8
 8007df4:	46bd      	mov	sp, r7
 8007df6:	bd80      	pop	{r7, pc}
 8007df8:	40013c00 	.word	0x40013c00

08007dfc <HAL_I2C_Init>:
 8007dfc:	b580      	push	{r7, lr}
 8007dfe:	b082      	sub	sp, #8
 8007e00:	af00      	add	r7, sp, #0
 8007e02:	6078      	str	r0, [r7, #4]
 8007e04:	687b      	ldr	r3, [r7, #4]
 8007e06:	2b00      	cmp	r3, #0
 8007e08:	d101      	bne.n	8007e0e <HAL_I2C_Init+0x12>
 8007e0a:	2301      	movs	r3, #1
 8007e0c:	e07f      	b.n	8007f0e <HAL_I2C_Init+0x112>
 8007e0e:	687b      	ldr	r3, [r7, #4]
 8007e10:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8007e14:	b2db      	uxtb	r3, r3
 8007e16:	2b00      	cmp	r3, #0
 8007e18:	d106      	bne.n	8007e28 <HAL_I2C_Init+0x2c>
 8007e1a:	687b      	ldr	r3, [r7, #4]
 8007e1c:	2200      	movs	r2, #0
 8007e1e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007e22:	6878      	ldr	r0, [r7, #4]
 8007e24:	f7fd fd54 	bl	80058d0 <HAL_I2C_MspInit>
 8007e28:	687b      	ldr	r3, [r7, #4]
 8007e2a:	2224      	movs	r2, #36	; 0x24
 8007e2c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007e30:	687b      	ldr	r3, [r7, #4]
 8007e32:	681b      	ldr	r3, [r3, #0]
 8007e34:	681a      	ldr	r2, [r3, #0]
 8007e36:	687b      	ldr	r3, [r7, #4]
 8007e38:	681b      	ldr	r3, [r3, #0]
 8007e3a:	f022 0201 	bic.w	r2, r2, #1
 8007e3e:	601a      	str	r2, [r3, #0]
 8007e40:	687b      	ldr	r3, [r7, #4]
 8007e42:	685a      	ldr	r2, [r3, #4]
 8007e44:	687b      	ldr	r3, [r7, #4]
 8007e46:	681b      	ldr	r3, [r3, #0]
 8007e48:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007e4c:	611a      	str	r2, [r3, #16]
 8007e4e:	687b      	ldr	r3, [r7, #4]
 8007e50:	681b      	ldr	r3, [r3, #0]
 8007e52:	689a      	ldr	r2, [r3, #8]
 8007e54:	687b      	ldr	r3, [r7, #4]
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8007e5c:	609a      	str	r2, [r3, #8]
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	68db      	ldr	r3, [r3, #12]
 8007e62:	2b01      	cmp	r3, #1
 8007e64:	d107      	bne.n	8007e76 <HAL_I2C_Init+0x7a>
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	689a      	ldr	r2, [r3, #8]
 8007e6a:	687b      	ldr	r3, [r7, #4]
 8007e6c:	681b      	ldr	r3, [r3, #0]
 8007e6e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007e72:	609a      	str	r2, [r3, #8]
 8007e74:	e006      	b.n	8007e84 <HAL_I2C_Init+0x88>
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	689a      	ldr	r2, [r3, #8]
 8007e7a:	687b      	ldr	r3, [r7, #4]
 8007e7c:	681b      	ldr	r3, [r3, #0]
 8007e7e:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8007e82:	609a      	str	r2, [r3, #8]
 8007e84:	687b      	ldr	r3, [r7, #4]
 8007e86:	68db      	ldr	r3, [r3, #12]
 8007e88:	2b02      	cmp	r3, #2
 8007e8a:	d104      	bne.n	8007e96 <HAL_I2C_Init+0x9a>
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	681b      	ldr	r3, [r3, #0]
 8007e90:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8007e94:	605a      	str	r2, [r3, #4]
 8007e96:	687b      	ldr	r3, [r7, #4]
 8007e98:	681b      	ldr	r3, [r3, #0]
 8007e9a:	6859      	ldr	r1, [r3, #4]
 8007e9c:	687b      	ldr	r3, [r7, #4]
 8007e9e:	681a      	ldr	r2, [r3, #0]
 8007ea0:	4b1d      	ldr	r3, [pc, #116]	; (8007f18 <HAL_I2C_Init+0x11c>)
 8007ea2:	430b      	orrs	r3, r1
 8007ea4:	6053      	str	r3, [r2, #4]
 8007ea6:	687b      	ldr	r3, [r7, #4]
 8007ea8:	681b      	ldr	r3, [r3, #0]
 8007eaa:	68da      	ldr	r2, [r3, #12]
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	681b      	ldr	r3, [r3, #0]
 8007eb0:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8007eb4:	60da      	str	r2, [r3, #12]
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	691a      	ldr	r2, [r3, #16]
 8007eba:	687b      	ldr	r3, [r7, #4]
 8007ebc:	695b      	ldr	r3, [r3, #20]
 8007ebe:	ea42 0103 	orr.w	r1, r2, r3
 8007ec2:	687b      	ldr	r3, [r7, #4]
 8007ec4:	699b      	ldr	r3, [r3, #24]
 8007ec6:	021a      	lsls	r2, r3, #8
 8007ec8:	687b      	ldr	r3, [r7, #4]
 8007eca:	681b      	ldr	r3, [r3, #0]
 8007ecc:	430a      	orrs	r2, r1
 8007ece:	60da      	str	r2, [r3, #12]
 8007ed0:	687b      	ldr	r3, [r7, #4]
 8007ed2:	69d9      	ldr	r1, [r3, #28]
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	6a1a      	ldr	r2, [r3, #32]
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	681b      	ldr	r3, [r3, #0]
 8007edc:	430a      	orrs	r2, r1
 8007ede:	601a      	str	r2, [r3, #0]
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	681b      	ldr	r3, [r3, #0]
 8007ee4:	681a      	ldr	r2, [r3, #0]
 8007ee6:	687b      	ldr	r3, [r7, #4]
 8007ee8:	681b      	ldr	r3, [r3, #0]
 8007eea:	f042 0201 	orr.w	r2, r2, #1
 8007eee:	601a      	str	r2, [r3, #0]
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	2200      	movs	r2, #0
 8007ef4:	645a      	str	r2, [r3, #68]	; 0x44
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	2220      	movs	r2, #32
 8007efa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007efe:	687b      	ldr	r3, [r7, #4]
 8007f00:	2200      	movs	r2, #0
 8007f02:	631a      	str	r2, [r3, #48]	; 0x30
 8007f04:	687b      	ldr	r3, [r7, #4]
 8007f06:	2200      	movs	r2, #0
 8007f08:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007f0c:	2300      	movs	r3, #0
 8007f0e:	4618      	mov	r0, r3
 8007f10:	3708      	adds	r7, #8
 8007f12:	46bd      	mov	sp, r7
 8007f14:	bd80      	pop	{r7, pc}
 8007f16:	bf00      	nop
 8007f18:	02008000 	.word	0x02008000

08007f1c <HAL_I2C_DeInit>:
 8007f1c:	b580      	push	{r7, lr}
 8007f1e:	b082      	sub	sp, #8
 8007f20:	af00      	add	r7, sp, #0
 8007f22:	6078      	str	r0, [r7, #4]
 8007f24:	687b      	ldr	r3, [r7, #4]
 8007f26:	2b00      	cmp	r3, #0
 8007f28:	d101      	bne.n	8007f2e <HAL_I2C_DeInit+0x12>
 8007f2a:	2301      	movs	r3, #1
 8007f2c:	e021      	b.n	8007f72 <HAL_I2C_DeInit+0x56>
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	2224      	movs	r2, #36	; 0x24
 8007f32:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007f36:	687b      	ldr	r3, [r7, #4]
 8007f38:	681b      	ldr	r3, [r3, #0]
 8007f3a:	681a      	ldr	r2, [r3, #0]
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	681b      	ldr	r3, [r3, #0]
 8007f40:	f022 0201 	bic.w	r2, r2, #1
 8007f44:	601a      	str	r2, [r3, #0]
 8007f46:	6878      	ldr	r0, [r7, #4]
 8007f48:	f7fd fd3a 	bl	80059c0 <HAL_I2C_MspDeInit>
 8007f4c:	687b      	ldr	r3, [r7, #4]
 8007f4e:	2200      	movs	r2, #0
 8007f50:	645a      	str	r2, [r3, #68]	; 0x44
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	2200      	movs	r2, #0
 8007f56:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	2200      	movs	r2, #0
 8007f5e:	631a      	str	r2, [r3, #48]	; 0x30
 8007f60:	687b      	ldr	r3, [r7, #4]
 8007f62:	2200      	movs	r2, #0
 8007f64:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	2200      	movs	r2, #0
 8007f6c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007f70:	2300      	movs	r3, #0
 8007f72:	4618      	mov	r0, r3
 8007f74:	3708      	adds	r7, #8
 8007f76:	46bd      	mov	sp, r7
 8007f78:	bd80      	pop	{r7, pc}
	...

08007f7c <HAL_I2C_Mem_Write>:
 8007f7c:	b580      	push	{r7, lr}
 8007f7e:	b088      	sub	sp, #32
 8007f80:	af02      	add	r7, sp, #8
 8007f82:	60f8      	str	r0, [r7, #12]
 8007f84:	4608      	mov	r0, r1
 8007f86:	4611      	mov	r1, r2
 8007f88:	461a      	mov	r2, r3
 8007f8a:	4603      	mov	r3, r0
 8007f8c:	817b      	strh	r3, [r7, #10]
 8007f8e:	460b      	mov	r3, r1
 8007f90:	813b      	strh	r3, [r7, #8]
 8007f92:	4613      	mov	r3, r2
 8007f94:	80fb      	strh	r3, [r7, #6]
 8007f96:	68fb      	ldr	r3, [r7, #12]
 8007f98:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8007f9c:	b2db      	uxtb	r3, r3
 8007f9e:	2b20      	cmp	r3, #32
 8007fa0:	f040 80f9 	bne.w	8008196 <HAL_I2C_Mem_Write+0x21a>
 8007fa4:	6a3b      	ldr	r3, [r7, #32]
 8007fa6:	2b00      	cmp	r3, #0
 8007fa8:	d002      	beq.n	8007fb0 <HAL_I2C_Mem_Write+0x34>
 8007faa:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8007fac:	2b00      	cmp	r3, #0
 8007fae:	d105      	bne.n	8007fbc <HAL_I2C_Mem_Write+0x40>
 8007fb0:	68fb      	ldr	r3, [r7, #12]
 8007fb2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007fb6:	645a      	str	r2, [r3, #68]	; 0x44
 8007fb8:	2301      	movs	r3, #1
 8007fba:	e0ed      	b.n	8008198 <HAL_I2C_Mem_Write+0x21c>
 8007fbc:	68fb      	ldr	r3, [r7, #12]
 8007fbe:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8007fc2:	2b01      	cmp	r3, #1
 8007fc4:	d101      	bne.n	8007fca <HAL_I2C_Mem_Write+0x4e>
 8007fc6:	2302      	movs	r3, #2
 8007fc8:	e0e6      	b.n	8008198 <HAL_I2C_Mem_Write+0x21c>
 8007fca:	68fb      	ldr	r3, [r7, #12]
 8007fcc:	2201      	movs	r2, #1
 8007fce:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007fd2:	f7fe f9f3 	bl	80063bc <HAL_GetTick>
 8007fd6:	6178      	str	r0, [r7, #20]
 8007fd8:	697b      	ldr	r3, [r7, #20]
 8007fda:	9300      	str	r3, [sp, #0]
 8007fdc:	2319      	movs	r3, #25
 8007fde:	2201      	movs	r2, #1
 8007fe0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8007fe4:	68f8      	ldr	r0, [r7, #12]
 8007fe6:	f000 fad1 	bl	800858c <I2C_WaitOnFlagUntilTimeout>
 8007fea:	4603      	mov	r3, r0
 8007fec:	2b00      	cmp	r3, #0
 8007fee:	d001      	beq.n	8007ff4 <HAL_I2C_Mem_Write+0x78>
 8007ff0:	2301      	movs	r3, #1
 8007ff2:	e0d1      	b.n	8008198 <HAL_I2C_Mem_Write+0x21c>
 8007ff4:	68fb      	ldr	r3, [r7, #12]
 8007ff6:	2221      	movs	r2, #33	; 0x21
 8007ff8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007ffc:	68fb      	ldr	r3, [r7, #12]
 8007ffe:	2240      	movs	r2, #64	; 0x40
 8008000:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008004:	68fb      	ldr	r3, [r7, #12]
 8008006:	2200      	movs	r2, #0
 8008008:	645a      	str	r2, [r3, #68]	; 0x44
 800800a:	68fb      	ldr	r3, [r7, #12]
 800800c:	6a3a      	ldr	r2, [r7, #32]
 800800e:	625a      	str	r2, [r3, #36]	; 0x24
 8008010:	68fb      	ldr	r3, [r7, #12]
 8008012:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8008014:	855a      	strh	r2, [r3, #42]	; 0x2a
 8008016:	68fb      	ldr	r3, [r7, #12]
 8008018:	2200      	movs	r2, #0
 800801a:	635a      	str	r2, [r3, #52]	; 0x34
 800801c:	88f8      	ldrh	r0, [r7, #6]
 800801e:	893a      	ldrh	r2, [r7, #8]
 8008020:	8979      	ldrh	r1, [r7, #10]
 8008022:	697b      	ldr	r3, [r7, #20]
 8008024:	9301      	str	r3, [sp, #4]
 8008026:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008028:	9300      	str	r3, [sp, #0]
 800802a:	4603      	mov	r3, r0
 800802c:	68f8      	ldr	r0, [r7, #12]
 800802e:	f000 f9e1 	bl	80083f4 <I2C_RequestMemoryWrite>
 8008032:	4603      	mov	r3, r0
 8008034:	2b00      	cmp	r3, #0
 8008036:	d005      	beq.n	8008044 <HAL_I2C_Mem_Write+0xc8>
 8008038:	68fb      	ldr	r3, [r7, #12]
 800803a:	2200      	movs	r2, #0
 800803c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008040:	2301      	movs	r3, #1
 8008042:	e0a9      	b.n	8008198 <HAL_I2C_Mem_Write+0x21c>
 8008044:	68fb      	ldr	r3, [r7, #12]
 8008046:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008048:	b29b      	uxth	r3, r3
 800804a:	2bff      	cmp	r3, #255	; 0xff
 800804c:	d90e      	bls.n	800806c <HAL_I2C_Mem_Write+0xf0>
 800804e:	68fb      	ldr	r3, [r7, #12]
 8008050:	22ff      	movs	r2, #255	; 0xff
 8008052:	851a      	strh	r2, [r3, #40]	; 0x28
 8008054:	68fb      	ldr	r3, [r7, #12]
 8008056:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008058:	b2da      	uxtb	r2, r3
 800805a:	8979      	ldrh	r1, [r7, #10]
 800805c:	2300      	movs	r3, #0
 800805e:	9300      	str	r3, [sp, #0]
 8008060:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008064:	68f8      	ldr	r0, [r7, #12]
 8008066:	f000 fbb3 	bl	80087d0 <I2C_TransferConfig>
 800806a:	e00f      	b.n	800808c <HAL_I2C_Mem_Write+0x110>
 800806c:	68fb      	ldr	r3, [r7, #12]
 800806e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008070:	b29a      	uxth	r2, r3
 8008072:	68fb      	ldr	r3, [r7, #12]
 8008074:	851a      	strh	r2, [r3, #40]	; 0x28
 8008076:	68fb      	ldr	r3, [r7, #12]
 8008078:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800807a:	b2da      	uxtb	r2, r3
 800807c:	8979      	ldrh	r1, [r7, #10]
 800807e:	2300      	movs	r3, #0
 8008080:	9300      	str	r3, [sp, #0]
 8008082:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8008086:	68f8      	ldr	r0, [r7, #12]
 8008088:	f000 fba2 	bl	80087d0 <I2C_TransferConfig>
 800808c:	697a      	ldr	r2, [r7, #20]
 800808e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008090:	68f8      	ldr	r0, [r7, #12]
 8008092:	f000 fabb 	bl	800860c <I2C_WaitOnTXISFlagUntilTimeout>
 8008096:	4603      	mov	r3, r0
 8008098:	2b00      	cmp	r3, #0
 800809a:	d001      	beq.n	80080a0 <HAL_I2C_Mem_Write+0x124>
 800809c:	2301      	movs	r3, #1
 800809e:	e07b      	b.n	8008198 <HAL_I2C_Mem_Write+0x21c>
 80080a0:	68fb      	ldr	r3, [r7, #12]
 80080a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80080a4:	781a      	ldrb	r2, [r3, #0]
 80080a6:	68fb      	ldr	r3, [r7, #12]
 80080a8:	681b      	ldr	r3, [r3, #0]
 80080aa:	629a      	str	r2, [r3, #40]	; 0x28
 80080ac:	68fb      	ldr	r3, [r7, #12]
 80080ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80080b0:	1c5a      	adds	r2, r3, #1
 80080b2:	68fb      	ldr	r3, [r7, #12]
 80080b4:	625a      	str	r2, [r3, #36]	; 0x24
 80080b6:	68fb      	ldr	r3, [r7, #12]
 80080b8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80080ba:	b29b      	uxth	r3, r3
 80080bc:	3b01      	subs	r3, #1
 80080be:	b29a      	uxth	r2, r3
 80080c0:	68fb      	ldr	r3, [r7, #12]
 80080c2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80080c4:	68fb      	ldr	r3, [r7, #12]
 80080c6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80080c8:	3b01      	subs	r3, #1
 80080ca:	b29a      	uxth	r2, r3
 80080cc:	68fb      	ldr	r3, [r7, #12]
 80080ce:	851a      	strh	r2, [r3, #40]	; 0x28
 80080d0:	68fb      	ldr	r3, [r7, #12]
 80080d2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80080d4:	b29b      	uxth	r3, r3
 80080d6:	2b00      	cmp	r3, #0
 80080d8:	d034      	beq.n	8008144 <HAL_I2C_Mem_Write+0x1c8>
 80080da:	68fb      	ldr	r3, [r7, #12]
 80080dc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80080de:	2b00      	cmp	r3, #0
 80080e0:	d130      	bne.n	8008144 <HAL_I2C_Mem_Write+0x1c8>
 80080e2:	697b      	ldr	r3, [r7, #20]
 80080e4:	9300      	str	r3, [sp, #0]
 80080e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80080e8:	2200      	movs	r2, #0
 80080ea:	2180      	movs	r1, #128	; 0x80
 80080ec:	68f8      	ldr	r0, [r7, #12]
 80080ee:	f000 fa4d 	bl	800858c <I2C_WaitOnFlagUntilTimeout>
 80080f2:	4603      	mov	r3, r0
 80080f4:	2b00      	cmp	r3, #0
 80080f6:	d001      	beq.n	80080fc <HAL_I2C_Mem_Write+0x180>
 80080f8:	2301      	movs	r3, #1
 80080fa:	e04d      	b.n	8008198 <HAL_I2C_Mem_Write+0x21c>
 80080fc:	68fb      	ldr	r3, [r7, #12]
 80080fe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008100:	b29b      	uxth	r3, r3
 8008102:	2bff      	cmp	r3, #255	; 0xff
 8008104:	d90e      	bls.n	8008124 <HAL_I2C_Mem_Write+0x1a8>
 8008106:	68fb      	ldr	r3, [r7, #12]
 8008108:	22ff      	movs	r2, #255	; 0xff
 800810a:	851a      	strh	r2, [r3, #40]	; 0x28
 800810c:	68fb      	ldr	r3, [r7, #12]
 800810e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008110:	b2da      	uxtb	r2, r3
 8008112:	8979      	ldrh	r1, [r7, #10]
 8008114:	2300      	movs	r3, #0
 8008116:	9300      	str	r3, [sp, #0]
 8008118:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800811c:	68f8      	ldr	r0, [r7, #12]
 800811e:	f000 fb57 	bl	80087d0 <I2C_TransferConfig>
 8008122:	e00f      	b.n	8008144 <HAL_I2C_Mem_Write+0x1c8>
 8008124:	68fb      	ldr	r3, [r7, #12]
 8008126:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008128:	b29a      	uxth	r2, r3
 800812a:	68fb      	ldr	r3, [r7, #12]
 800812c:	851a      	strh	r2, [r3, #40]	; 0x28
 800812e:	68fb      	ldr	r3, [r7, #12]
 8008130:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008132:	b2da      	uxtb	r2, r3
 8008134:	8979      	ldrh	r1, [r7, #10]
 8008136:	2300      	movs	r3, #0
 8008138:	9300      	str	r3, [sp, #0]
 800813a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800813e:	68f8      	ldr	r0, [r7, #12]
 8008140:	f000 fb46 	bl	80087d0 <I2C_TransferConfig>
 8008144:	68fb      	ldr	r3, [r7, #12]
 8008146:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008148:	b29b      	uxth	r3, r3
 800814a:	2b00      	cmp	r3, #0
 800814c:	d19e      	bne.n	800808c <HAL_I2C_Mem_Write+0x110>
 800814e:	697a      	ldr	r2, [r7, #20]
 8008150:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008152:	68f8      	ldr	r0, [r7, #12]
 8008154:	f000 fa9a 	bl	800868c <I2C_WaitOnSTOPFlagUntilTimeout>
 8008158:	4603      	mov	r3, r0
 800815a:	2b00      	cmp	r3, #0
 800815c:	d001      	beq.n	8008162 <HAL_I2C_Mem_Write+0x1e6>
 800815e:	2301      	movs	r3, #1
 8008160:	e01a      	b.n	8008198 <HAL_I2C_Mem_Write+0x21c>
 8008162:	68fb      	ldr	r3, [r7, #12]
 8008164:	681b      	ldr	r3, [r3, #0]
 8008166:	2220      	movs	r2, #32
 8008168:	61da      	str	r2, [r3, #28]
 800816a:	68fb      	ldr	r3, [r7, #12]
 800816c:	681b      	ldr	r3, [r3, #0]
 800816e:	6859      	ldr	r1, [r3, #4]
 8008170:	68fb      	ldr	r3, [r7, #12]
 8008172:	681a      	ldr	r2, [r3, #0]
 8008174:	4b0a      	ldr	r3, [pc, #40]	; (80081a0 <HAL_I2C_Mem_Write+0x224>)
 8008176:	400b      	ands	r3, r1
 8008178:	6053      	str	r3, [r2, #4]
 800817a:	68fb      	ldr	r3, [r7, #12]
 800817c:	2220      	movs	r2, #32
 800817e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008182:	68fb      	ldr	r3, [r7, #12]
 8008184:	2200      	movs	r2, #0
 8008186:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800818a:	68fb      	ldr	r3, [r7, #12]
 800818c:	2200      	movs	r2, #0
 800818e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008192:	2300      	movs	r3, #0
 8008194:	e000      	b.n	8008198 <HAL_I2C_Mem_Write+0x21c>
 8008196:	2302      	movs	r3, #2
 8008198:	4618      	mov	r0, r3
 800819a:	3718      	adds	r7, #24
 800819c:	46bd      	mov	sp, r7
 800819e:	bd80      	pop	{r7, pc}
 80081a0:	fe00e800 	.word	0xfe00e800

080081a4 <HAL_I2C_Mem_Read>:
 80081a4:	b580      	push	{r7, lr}
 80081a6:	b088      	sub	sp, #32
 80081a8:	af02      	add	r7, sp, #8
 80081aa:	60f8      	str	r0, [r7, #12]
 80081ac:	4608      	mov	r0, r1
 80081ae:	4611      	mov	r1, r2
 80081b0:	461a      	mov	r2, r3
 80081b2:	4603      	mov	r3, r0
 80081b4:	817b      	strh	r3, [r7, #10]
 80081b6:	460b      	mov	r3, r1
 80081b8:	813b      	strh	r3, [r7, #8]
 80081ba:	4613      	mov	r3, r2
 80081bc:	80fb      	strh	r3, [r7, #6]
 80081be:	68fb      	ldr	r3, [r7, #12]
 80081c0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80081c4:	b2db      	uxtb	r3, r3
 80081c6:	2b20      	cmp	r3, #32
 80081c8:	f040 80fd 	bne.w	80083c6 <HAL_I2C_Mem_Read+0x222>
 80081cc:	6a3b      	ldr	r3, [r7, #32]
 80081ce:	2b00      	cmp	r3, #0
 80081d0:	d002      	beq.n	80081d8 <HAL_I2C_Mem_Read+0x34>
 80081d2:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80081d4:	2b00      	cmp	r3, #0
 80081d6:	d105      	bne.n	80081e4 <HAL_I2C_Mem_Read+0x40>
 80081d8:	68fb      	ldr	r3, [r7, #12]
 80081da:	f44f 7200 	mov.w	r2, #512	; 0x200
 80081de:	645a      	str	r2, [r3, #68]	; 0x44
 80081e0:	2301      	movs	r3, #1
 80081e2:	e0f1      	b.n	80083c8 <HAL_I2C_Mem_Read+0x224>
 80081e4:	68fb      	ldr	r3, [r7, #12]
 80081e6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80081ea:	2b01      	cmp	r3, #1
 80081ec:	d101      	bne.n	80081f2 <HAL_I2C_Mem_Read+0x4e>
 80081ee:	2302      	movs	r3, #2
 80081f0:	e0ea      	b.n	80083c8 <HAL_I2C_Mem_Read+0x224>
 80081f2:	68fb      	ldr	r3, [r7, #12]
 80081f4:	2201      	movs	r2, #1
 80081f6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80081fa:	f7fe f8df 	bl	80063bc <HAL_GetTick>
 80081fe:	6178      	str	r0, [r7, #20]
 8008200:	697b      	ldr	r3, [r7, #20]
 8008202:	9300      	str	r3, [sp, #0]
 8008204:	2319      	movs	r3, #25
 8008206:	2201      	movs	r2, #1
 8008208:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800820c:	68f8      	ldr	r0, [r7, #12]
 800820e:	f000 f9bd 	bl	800858c <I2C_WaitOnFlagUntilTimeout>
 8008212:	4603      	mov	r3, r0
 8008214:	2b00      	cmp	r3, #0
 8008216:	d001      	beq.n	800821c <HAL_I2C_Mem_Read+0x78>
 8008218:	2301      	movs	r3, #1
 800821a:	e0d5      	b.n	80083c8 <HAL_I2C_Mem_Read+0x224>
 800821c:	68fb      	ldr	r3, [r7, #12]
 800821e:	2222      	movs	r2, #34	; 0x22
 8008220:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008224:	68fb      	ldr	r3, [r7, #12]
 8008226:	2240      	movs	r2, #64	; 0x40
 8008228:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800822c:	68fb      	ldr	r3, [r7, #12]
 800822e:	2200      	movs	r2, #0
 8008230:	645a      	str	r2, [r3, #68]	; 0x44
 8008232:	68fb      	ldr	r3, [r7, #12]
 8008234:	6a3a      	ldr	r2, [r7, #32]
 8008236:	625a      	str	r2, [r3, #36]	; 0x24
 8008238:	68fb      	ldr	r3, [r7, #12]
 800823a:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 800823c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800823e:	68fb      	ldr	r3, [r7, #12]
 8008240:	2200      	movs	r2, #0
 8008242:	635a      	str	r2, [r3, #52]	; 0x34
 8008244:	88f8      	ldrh	r0, [r7, #6]
 8008246:	893a      	ldrh	r2, [r7, #8]
 8008248:	8979      	ldrh	r1, [r7, #10]
 800824a:	697b      	ldr	r3, [r7, #20]
 800824c:	9301      	str	r3, [sp, #4]
 800824e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008250:	9300      	str	r3, [sp, #0]
 8008252:	4603      	mov	r3, r0
 8008254:	68f8      	ldr	r0, [r7, #12]
 8008256:	f000 f921 	bl	800849c <I2C_RequestMemoryRead>
 800825a:	4603      	mov	r3, r0
 800825c:	2b00      	cmp	r3, #0
 800825e:	d005      	beq.n	800826c <HAL_I2C_Mem_Read+0xc8>
 8008260:	68fb      	ldr	r3, [r7, #12]
 8008262:	2200      	movs	r2, #0
 8008264:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008268:	2301      	movs	r3, #1
 800826a:	e0ad      	b.n	80083c8 <HAL_I2C_Mem_Read+0x224>
 800826c:	68fb      	ldr	r3, [r7, #12]
 800826e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008270:	b29b      	uxth	r3, r3
 8008272:	2bff      	cmp	r3, #255	; 0xff
 8008274:	d90e      	bls.n	8008294 <HAL_I2C_Mem_Read+0xf0>
 8008276:	68fb      	ldr	r3, [r7, #12]
 8008278:	22ff      	movs	r2, #255	; 0xff
 800827a:	851a      	strh	r2, [r3, #40]	; 0x28
 800827c:	68fb      	ldr	r3, [r7, #12]
 800827e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008280:	b2da      	uxtb	r2, r3
 8008282:	8979      	ldrh	r1, [r7, #10]
 8008284:	4b52      	ldr	r3, [pc, #328]	; (80083d0 <HAL_I2C_Mem_Read+0x22c>)
 8008286:	9300      	str	r3, [sp, #0]
 8008288:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800828c:	68f8      	ldr	r0, [r7, #12]
 800828e:	f000 fa9f 	bl	80087d0 <I2C_TransferConfig>
 8008292:	e00f      	b.n	80082b4 <HAL_I2C_Mem_Read+0x110>
 8008294:	68fb      	ldr	r3, [r7, #12]
 8008296:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008298:	b29a      	uxth	r2, r3
 800829a:	68fb      	ldr	r3, [r7, #12]
 800829c:	851a      	strh	r2, [r3, #40]	; 0x28
 800829e:	68fb      	ldr	r3, [r7, #12]
 80082a0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80082a2:	b2da      	uxtb	r2, r3
 80082a4:	8979      	ldrh	r1, [r7, #10]
 80082a6:	4b4a      	ldr	r3, [pc, #296]	; (80083d0 <HAL_I2C_Mem_Read+0x22c>)
 80082a8:	9300      	str	r3, [sp, #0]
 80082aa:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80082ae:	68f8      	ldr	r0, [r7, #12]
 80082b0:	f000 fa8e 	bl	80087d0 <I2C_TransferConfig>
 80082b4:	697b      	ldr	r3, [r7, #20]
 80082b6:	9300      	str	r3, [sp, #0]
 80082b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80082ba:	2200      	movs	r2, #0
 80082bc:	2104      	movs	r1, #4
 80082be:	68f8      	ldr	r0, [r7, #12]
 80082c0:	f000 f964 	bl	800858c <I2C_WaitOnFlagUntilTimeout>
 80082c4:	4603      	mov	r3, r0
 80082c6:	2b00      	cmp	r3, #0
 80082c8:	d001      	beq.n	80082ce <HAL_I2C_Mem_Read+0x12a>
 80082ca:	2301      	movs	r3, #1
 80082cc:	e07c      	b.n	80083c8 <HAL_I2C_Mem_Read+0x224>
 80082ce:	68fb      	ldr	r3, [r7, #12]
 80082d0:	681b      	ldr	r3, [r3, #0]
 80082d2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80082d4:	68fb      	ldr	r3, [r7, #12]
 80082d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80082d8:	b2d2      	uxtb	r2, r2
 80082da:	701a      	strb	r2, [r3, #0]
 80082dc:	68fb      	ldr	r3, [r7, #12]
 80082de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80082e0:	1c5a      	adds	r2, r3, #1
 80082e2:	68fb      	ldr	r3, [r7, #12]
 80082e4:	625a      	str	r2, [r3, #36]	; 0x24
 80082e6:	68fb      	ldr	r3, [r7, #12]
 80082e8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80082ea:	3b01      	subs	r3, #1
 80082ec:	b29a      	uxth	r2, r3
 80082ee:	68fb      	ldr	r3, [r7, #12]
 80082f0:	851a      	strh	r2, [r3, #40]	; 0x28
 80082f2:	68fb      	ldr	r3, [r7, #12]
 80082f4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80082f6:	b29b      	uxth	r3, r3
 80082f8:	3b01      	subs	r3, #1
 80082fa:	b29a      	uxth	r2, r3
 80082fc:	68fb      	ldr	r3, [r7, #12]
 80082fe:	855a      	strh	r2, [r3, #42]	; 0x2a
 8008300:	68fb      	ldr	r3, [r7, #12]
 8008302:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008304:	b29b      	uxth	r3, r3
 8008306:	2b00      	cmp	r3, #0
 8008308:	d034      	beq.n	8008374 <HAL_I2C_Mem_Read+0x1d0>
 800830a:	68fb      	ldr	r3, [r7, #12]
 800830c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800830e:	2b00      	cmp	r3, #0
 8008310:	d130      	bne.n	8008374 <HAL_I2C_Mem_Read+0x1d0>
 8008312:	697b      	ldr	r3, [r7, #20]
 8008314:	9300      	str	r3, [sp, #0]
 8008316:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008318:	2200      	movs	r2, #0
 800831a:	2180      	movs	r1, #128	; 0x80
 800831c:	68f8      	ldr	r0, [r7, #12]
 800831e:	f000 f935 	bl	800858c <I2C_WaitOnFlagUntilTimeout>
 8008322:	4603      	mov	r3, r0
 8008324:	2b00      	cmp	r3, #0
 8008326:	d001      	beq.n	800832c <HAL_I2C_Mem_Read+0x188>
 8008328:	2301      	movs	r3, #1
 800832a:	e04d      	b.n	80083c8 <HAL_I2C_Mem_Read+0x224>
 800832c:	68fb      	ldr	r3, [r7, #12]
 800832e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008330:	b29b      	uxth	r3, r3
 8008332:	2bff      	cmp	r3, #255	; 0xff
 8008334:	d90e      	bls.n	8008354 <HAL_I2C_Mem_Read+0x1b0>
 8008336:	68fb      	ldr	r3, [r7, #12]
 8008338:	22ff      	movs	r2, #255	; 0xff
 800833a:	851a      	strh	r2, [r3, #40]	; 0x28
 800833c:	68fb      	ldr	r3, [r7, #12]
 800833e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008340:	b2da      	uxtb	r2, r3
 8008342:	8979      	ldrh	r1, [r7, #10]
 8008344:	2300      	movs	r3, #0
 8008346:	9300      	str	r3, [sp, #0]
 8008348:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800834c:	68f8      	ldr	r0, [r7, #12]
 800834e:	f000 fa3f 	bl	80087d0 <I2C_TransferConfig>
 8008352:	e00f      	b.n	8008374 <HAL_I2C_Mem_Read+0x1d0>
 8008354:	68fb      	ldr	r3, [r7, #12]
 8008356:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008358:	b29a      	uxth	r2, r3
 800835a:	68fb      	ldr	r3, [r7, #12]
 800835c:	851a      	strh	r2, [r3, #40]	; 0x28
 800835e:	68fb      	ldr	r3, [r7, #12]
 8008360:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008362:	b2da      	uxtb	r2, r3
 8008364:	8979      	ldrh	r1, [r7, #10]
 8008366:	2300      	movs	r3, #0
 8008368:	9300      	str	r3, [sp, #0]
 800836a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800836e:	68f8      	ldr	r0, [r7, #12]
 8008370:	f000 fa2e 	bl	80087d0 <I2C_TransferConfig>
 8008374:	68fb      	ldr	r3, [r7, #12]
 8008376:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008378:	b29b      	uxth	r3, r3
 800837a:	2b00      	cmp	r3, #0
 800837c:	d19a      	bne.n	80082b4 <HAL_I2C_Mem_Read+0x110>
 800837e:	697a      	ldr	r2, [r7, #20]
 8008380:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008382:	68f8      	ldr	r0, [r7, #12]
 8008384:	f000 f982 	bl	800868c <I2C_WaitOnSTOPFlagUntilTimeout>
 8008388:	4603      	mov	r3, r0
 800838a:	2b00      	cmp	r3, #0
 800838c:	d001      	beq.n	8008392 <HAL_I2C_Mem_Read+0x1ee>
 800838e:	2301      	movs	r3, #1
 8008390:	e01a      	b.n	80083c8 <HAL_I2C_Mem_Read+0x224>
 8008392:	68fb      	ldr	r3, [r7, #12]
 8008394:	681b      	ldr	r3, [r3, #0]
 8008396:	2220      	movs	r2, #32
 8008398:	61da      	str	r2, [r3, #28]
 800839a:	68fb      	ldr	r3, [r7, #12]
 800839c:	681b      	ldr	r3, [r3, #0]
 800839e:	6859      	ldr	r1, [r3, #4]
 80083a0:	68fb      	ldr	r3, [r7, #12]
 80083a2:	681a      	ldr	r2, [r3, #0]
 80083a4:	4b0b      	ldr	r3, [pc, #44]	; (80083d4 <HAL_I2C_Mem_Read+0x230>)
 80083a6:	400b      	ands	r3, r1
 80083a8:	6053      	str	r3, [r2, #4]
 80083aa:	68fb      	ldr	r3, [r7, #12]
 80083ac:	2220      	movs	r2, #32
 80083ae:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80083b2:	68fb      	ldr	r3, [r7, #12]
 80083b4:	2200      	movs	r2, #0
 80083b6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80083ba:	68fb      	ldr	r3, [r7, #12]
 80083bc:	2200      	movs	r2, #0
 80083be:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80083c2:	2300      	movs	r3, #0
 80083c4:	e000      	b.n	80083c8 <HAL_I2C_Mem_Read+0x224>
 80083c6:	2302      	movs	r3, #2
 80083c8:	4618      	mov	r0, r3
 80083ca:	3718      	adds	r7, #24
 80083cc:	46bd      	mov	sp, r7
 80083ce:	bd80      	pop	{r7, pc}
 80083d0:	80002400 	.word	0x80002400
 80083d4:	fe00e800 	.word	0xfe00e800

080083d8 <HAL_I2C_GetState>:
 80083d8:	b480      	push	{r7}
 80083da:	b083      	sub	sp, #12
 80083dc:	af00      	add	r7, sp, #0
 80083de:	6078      	str	r0, [r7, #4]
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80083e6:	b2db      	uxtb	r3, r3
 80083e8:	4618      	mov	r0, r3
 80083ea:	370c      	adds	r7, #12
 80083ec:	46bd      	mov	sp, r7
 80083ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083f2:	4770      	bx	lr

080083f4 <I2C_RequestMemoryWrite>:
 80083f4:	b580      	push	{r7, lr}
 80083f6:	b086      	sub	sp, #24
 80083f8:	af02      	add	r7, sp, #8
 80083fa:	60f8      	str	r0, [r7, #12]
 80083fc:	4608      	mov	r0, r1
 80083fe:	4611      	mov	r1, r2
 8008400:	461a      	mov	r2, r3
 8008402:	4603      	mov	r3, r0
 8008404:	817b      	strh	r3, [r7, #10]
 8008406:	460b      	mov	r3, r1
 8008408:	813b      	strh	r3, [r7, #8]
 800840a:	4613      	mov	r3, r2
 800840c:	80fb      	strh	r3, [r7, #6]
 800840e:	88fb      	ldrh	r3, [r7, #6]
 8008410:	b2da      	uxtb	r2, r3
 8008412:	8979      	ldrh	r1, [r7, #10]
 8008414:	4b20      	ldr	r3, [pc, #128]	; (8008498 <I2C_RequestMemoryWrite+0xa4>)
 8008416:	9300      	str	r3, [sp, #0]
 8008418:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800841c:	68f8      	ldr	r0, [r7, #12]
 800841e:	f000 f9d7 	bl	80087d0 <I2C_TransferConfig>
 8008422:	69fa      	ldr	r2, [r7, #28]
 8008424:	69b9      	ldr	r1, [r7, #24]
 8008426:	68f8      	ldr	r0, [r7, #12]
 8008428:	f000 f8f0 	bl	800860c <I2C_WaitOnTXISFlagUntilTimeout>
 800842c:	4603      	mov	r3, r0
 800842e:	2b00      	cmp	r3, #0
 8008430:	d001      	beq.n	8008436 <I2C_RequestMemoryWrite+0x42>
 8008432:	2301      	movs	r3, #1
 8008434:	e02c      	b.n	8008490 <I2C_RequestMemoryWrite+0x9c>
 8008436:	88fb      	ldrh	r3, [r7, #6]
 8008438:	2b01      	cmp	r3, #1
 800843a:	d105      	bne.n	8008448 <I2C_RequestMemoryWrite+0x54>
 800843c:	893b      	ldrh	r3, [r7, #8]
 800843e:	b2da      	uxtb	r2, r3
 8008440:	68fb      	ldr	r3, [r7, #12]
 8008442:	681b      	ldr	r3, [r3, #0]
 8008444:	629a      	str	r2, [r3, #40]	; 0x28
 8008446:	e015      	b.n	8008474 <I2C_RequestMemoryWrite+0x80>
 8008448:	893b      	ldrh	r3, [r7, #8]
 800844a:	0a1b      	lsrs	r3, r3, #8
 800844c:	b29b      	uxth	r3, r3
 800844e:	b2da      	uxtb	r2, r3
 8008450:	68fb      	ldr	r3, [r7, #12]
 8008452:	681b      	ldr	r3, [r3, #0]
 8008454:	629a      	str	r2, [r3, #40]	; 0x28
 8008456:	69fa      	ldr	r2, [r7, #28]
 8008458:	69b9      	ldr	r1, [r7, #24]
 800845a:	68f8      	ldr	r0, [r7, #12]
 800845c:	f000 f8d6 	bl	800860c <I2C_WaitOnTXISFlagUntilTimeout>
 8008460:	4603      	mov	r3, r0
 8008462:	2b00      	cmp	r3, #0
 8008464:	d001      	beq.n	800846a <I2C_RequestMemoryWrite+0x76>
 8008466:	2301      	movs	r3, #1
 8008468:	e012      	b.n	8008490 <I2C_RequestMemoryWrite+0x9c>
 800846a:	893b      	ldrh	r3, [r7, #8]
 800846c:	b2da      	uxtb	r2, r3
 800846e:	68fb      	ldr	r3, [r7, #12]
 8008470:	681b      	ldr	r3, [r3, #0]
 8008472:	629a      	str	r2, [r3, #40]	; 0x28
 8008474:	69fb      	ldr	r3, [r7, #28]
 8008476:	9300      	str	r3, [sp, #0]
 8008478:	69bb      	ldr	r3, [r7, #24]
 800847a:	2200      	movs	r2, #0
 800847c:	2180      	movs	r1, #128	; 0x80
 800847e:	68f8      	ldr	r0, [r7, #12]
 8008480:	f000 f884 	bl	800858c <I2C_WaitOnFlagUntilTimeout>
 8008484:	4603      	mov	r3, r0
 8008486:	2b00      	cmp	r3, #0
 8008488:	d001      	beq.n	800848e <I2C_RequestMemoryWrite+0x9a>
 800848a:	2301      	movs	r3, #1
 800848c:	e000      	b.n	8008490 <I2C_RequestMemoryWrite+0x9c>
 800848e:	2300      	movs	r3, #0
 8008490:	4618      	mov	r0, r3
 8008492:	3710      	adds	r7, #16
 8008494:	46bd      	mov	sp, r7
 8008496:	bd80      	pop	{r7, pc}
 8008498:	80002000 	.word	0x80002000

0800849c <I2C_RequestMemoryRead>:
 800849c:	b580      	push	{r7, lr}
 800849e:	b086      	sub	sp, #24
 80084a0:	af02      	add	r7, sp, #8
 80084a2:	60f8      	str	r0, [r7, #12]
 80084a4:	4608      	mov	r0, r1
 80084a6:	4611      	mov	r1, r2
 80084a8:	461a      	mov	r2, r3
 80084aa:	4603      	mov	r3, r0
 80084ac:	817b      	strh	r3, [r7, #10]
 80084ae:	460b      	mov	r3, r1
 80084b0:	813b      	strh	r3, [r7, #8]
 80084b2:	4613      	mov	r3, r2
 80084b4:	80fb      	strh	r3, [r7, #6]
 80084b6:	88fb      	ldrh	r3, [r7, #6]
 80084b8:	b2da      	uxtb	r2, r3
 80084ba:	8979      	ldrh	r1, [r7, #10]
 80084bc:	4b20      	ldr	r3, [pc, #128]	; (8008540 <I2C_RequestMemoryRead+0xa4>)
 80084be:	9300      	str	r3, [sp, #0]
 80084c0:	2300      	movs	r3, #0
 80084c2:	68f8      	ldr	r0, [r7, #12]
 80084c4:	f000 f984 	bl	80087d0 <I2C_TransferConfig>
 80084c8:	69fa      	ldr	r2, [r7, #28]
 80084ca:	69b9      	ldr	r1, [r7, #24]
 80084cc:	68f8      	ldr	r0, [r7, #12]
 80084ce:	f000 f89d 	bl	800860c <I2C_WaitOnTXISFlagUntilTimeout>
 80084d2:	4603      	mov	r3, r0
 80084d4:	2b00      	cmp	r3, #0
 80084d6:	d001      	beq.n	80084dc <I2C_RequestMemoryRead+0x40>
 80084d8:	2301      	movs	r3, #1
 80084da:	e02c      	b.n	8008536 <I2C_RequestMemoryRead+0x9a>
 80084dc:	88fb      	ldrh	r3, [r7, #6]
 80084de:	2b01      	cmp	r3, #1
 80084e0:	d105      	bne.n	80084ee <I2C_RequestMemoryRead+0x52>
 80084e2:	893b      	ldrh	r3, [r7, #8]
 80084e4:	b2da      	uxtb	r2, r3
 80084e6:	68fb      	ldr	r3, [r7, #12]
 80084e8:	681b      	ldr	r3, [r3, #0]
 80084ea:	629a      	str	r2, [r3, #40]	; 0x28
 80084ec:	e015      	b.n	800851a <I2C_RequestMemoryRead+0x7e>
 80084ee:	893b      	ldrh	r3, [r7, #8]
 80084f0:	0a1b      	lsrs	r3, r3, #8
 80084f2:	b29b      	uxth	r3, r3
 80084f4:	b2da      	uxtb	r2, r3
 80084f6:	68fb      	ldr	r3, [r7, #12]
 80084f8:	681b      	ldr	r3, [r3, #0]
 80084fa:	629a      	str	r2, [r3, #40]	; 0x28
 80084fc:	69fa      	ldr	r2, [r7, #28]
 80084fe:	69b9      	ldr	r1, [r7, #24]
 8008500:	68f8      	ldr	r0, [r7, #12]
 8008502:	f000 f883 	bl	800860c <I2C_WaitOnTXISFlagUntilTimeout>
 8008506:	4603      	mov	r3, r0
 8008508:	2b00      	cmp	r3, #0
 800850a:	d001      	beq.n	8008510 <I2C_RequestMemoryRead+0x74>
 800850c:	2301      	movs	r3, #1
 800850e:	e012      	b.n	8008536 <I2C_RequestMemoryRead+0x9a>
 8008510:	893b      	ldrh	r3, [r7, #8]
 8008512:	b2da      	uxtb	r2, r3
 8008514:	68fb      	ldr	r3, [r7, #12]
 8008516:	681b      	ldr	r3, [r3, #0]
 8008518:	629a      	str	r2, [r3, #40]	; 0x28
 800851a:	69fb      	ldr	r3, [r7, #28]
 800851c:	9300      	str	r3, [sp, #0]
 800851e:	69bb      	ldr	r3, [r7, #24]
 8008520:	2200      	movs	r2, #0
 8008522:	2140      	movs	r1, #64	; 0x40
 8008524:	68f8      	ldr	r0, [r7, #12]
 8008526:	f000 f831 	bl	800858c <I2C_WaitOnFlagUntilTimeout>
 800852a:	4603      	mov	r3, r0
 800852c:	2b00      	cmp	r3, #0
 800852e:	d001      	beq.n	8008534 <I2C_RequestMemoryRead+0x98>
 8008530:	2301      	movs	r3, #1
 8008532:	e000      	b.n	8008536 <I2C_RequestMemoryRead+0x9a>
 8008534:	2300      	movs	r3, #0
 8008536:	4618      	mov	r0, r3
 8008538:	3710      	adds	r7, #16
 800853a:	46bd      	mov	sp, r7
 800853c:	bd80      	pop	{r7, pc}
 800853e:	bf00      	nop
 8008540:	80002000 	.word	0x80002000

08008544 <I2C_Flush_TXDR>:
 8008544:	b480      	push	{r7}
 8008546:	b083      	sub	sp, #12
 8008548:	af00      	add	r7, sp, #0
 800854a:	6078      	str	r0, [r7, #4]
 800854c:	687b      	ldr	r3, [r7, #4]
 800854e:	681b      	ldr	r3, [r3, #0]
 8008550:	699b      	ldr	r3, [r3, #24]
 8008552:	f003 0302 	and.w	r3, r3, #2
 8008556:	2b02      	cmp	r3, #2
 8008558:	d103      	bne.n	8008562 <I2C_Flush_TXDR+0x1e>
 800855a:	687b      	ldr	r3, [r7, #4]
 800855c:	681b      	ldr	r3, [r3, #0]
 800855e:	2200      	movs	r2, #0
 8008560:	629a      	str	r2, [r3, #40]	; 0x28
 8008562:	687b      	ldr	r3, [r7, #4]
 8008564:	681b      	ldr	r3, [r3, #0]
 8008566:	699b      	ldr	r3, [r3, #24]
 8008568:	f003 0301 	and.w	r3, r3, #1
 800856c:	2b01      	cmp	r3, #1
 800856e:	d007      	beq.n	8008580 <I2C_Flush_TXDR+0x3c>
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	681b      	ldr	r3, [r3, #0]
 8008574:	699a      	ldr	r2, [r3, #24]
 8008576:	687b      	ldr	r3, [r7, #4]
 8008578:	681b      	ldr	r3, [r3, #0]
 800857a:	f042 0201 	orr.w	r2, r2, #1
 800857e:	619a      	str	r2, [r3, #24]
 8008580:	bf00      	nop
 8008582:	370c      	adds	r7, #12
 8008584:	46bd      	mov	sp, r7
 8008586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800858a:	4770      	bx	lr

0800858c <I2C_WaitOnFlagUntilTimeout>:
 800858c:	b580      	push	{r7, lr}
 800858e:	b084      	sub	sp, #16
 8008590:	af00      	add	r7, sp, #0
 8008592:	60f8      	str	r0, [r7, #12]
 8008594:	60b9      	str	r1, [r7, #8]
 8008596:	603b      	str	r3, [r7, #0]
 8008598:	4613      	mov	r3, r2
 800859a:	71fb      	strb	r3, [r7, #7]
 800859c:	e022      	b.n	80085e4 <I2C_WaitOnFlagUntilTimeout+0x58>
 800859e:	683b      	ldr	r3, [r7, #0]
 80085a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80085a4:	d01e      	beq.n	80085e4 <I2C_WaitOnFlagUntilTimeout+0x58>
 80085a6:	f7fd ff09 	bl	80063bc <HAL_GetTick>
 80085aa:	4602      	mov	r2, r0
 80085ac:	69bb      	ldr	r3, [r7, #24]
 80085ae:	1ad3      	subs	r3, r2, r3
 80085b0:	683a      	ldr	r2, [r7, #0]
 80085b2:	429a      	cmp	r2, r3
 80085b4:	d302      	bcc.n	80085bc <I2C_WaitOnFlagUntilTimeout+0x30>
 80085b6:	683b      	ldr	r3, [r7, #0]
 80085b8:	2b00      	cmp	r3, #0
 80085ba:	d113      	bne.n	80085e4 <I2C_WaitOnFlagUntilTimeout+0x58>
 80085bc:	68fb      	ldr	r3, [r7, #12]
 80085be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80085c0:	f043 0220 	orr.w	r2, r3, #32
 80085c4:	68fb      	ldr	r3, [r7, #12]
 80085c6:	645a      	str	r2, [r3, #68]	; 0x44
 80085c8:	68fb      	ldr	r3, [r7, #12]
 80085ca:	2220      	movs	r2, #32
 80085cc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80085d0:	68fb      	ldr	r3, [r7, #12]
 80085d2:	2200      	movs	r2, #0
 80085d4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80085d8:	68fb      	ldr	r3, [r7, #12]
 80085da:	2200      	movs	r2, #0
 80085dc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80085e0:	2301      	movs	r3, #1
 80085e2:	e00f      	b.n	8008604 <I2C_WaitOnFlagUntilTimeout+0x78>
 80085e4:	68fb      	ldr	r3, [r7, #12]
 80085e6:	681b      	ldr	r3, [r3, #0]
 80085e8:	699a      	ldr	r2, [r3, #24]
 80085ea:	68bb      	ldr	r3, [r7, #8]
 80085ec:	4013      	ands	r3, r2
 80085ee:	68ba      	ldr	r2, [r7, #8]
 80085f0:	429a      	cmp	r2, r3
 80085f2:	bf0c      	ite	eq
 80085f4:	2301      	moveq	r3, #1
 80085f6:	2300      	movne	r3, #0
 80085f8:	b2db      	uxtb	r3, r3
 80085fa:	461a      	mov	r2, r3
 80085fc:	79fb      	ldrb	r3, [r7, #7]
 80085fe:	429a      	cmp	r2, r3
 8008600:	d0cd      	beq.n	800859e <I2C_WaitOnFlagUntilTimeout+0x12>
 8008602:	2300      	movs	r3, #0
 8008604:	4618      	mov	r0, r3
 8008606:	3710      	adds	r7, #16
 8008608:	46bd      	mov	sp, r7
 800860a:	bd80      	pop	{r7, pc}

0800860c <I2C_WaitOnTXISFlagUntilTimeout>:
 800860c:	b580      	push	{r7, lr}
 800860e:	b084      	sub	sp, #16
 8008610:	af00      	add	r7, sp, #0
 8008612:	60f8      	str	r0, [r7, #12]
 8008614:	60b9      	str	r1, [r7, #8]
 8008616:	607a      	str	r2, [r7, #4]
 8008618:	e02c      	b.n	8008674 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 800861a:	687a      	ldr	r2, [r7, #4]
 800861c:	68b9      	ldr	r1, [r7, #8]
 800861e:	68f8      	ldr	r0, [r7, #12]
 8008620:	f000 f870 	bl	8008704 <I2C_IsAcknowledgeFailed>
 8008624:	4603      	mov	r3, r0
 8008626:	2b00      	cmp	r3, #0
 8008628:	d001      	beq.n	800862e <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 800862a:	2301      	movs	r3, #1
 800862c:	e02a      	b.n	8008684 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 800862e:	68bb      	ldr	r3, [r7, #8]
 8008630:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008634:	d01e      	beq.n	8008674 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8008636:	f7fd fec1 	bl	80063bc <HAL_GetTick>
 800863a:	4602      	mov	r2, r0
 800863c:	687b      	ldr	r3, [r7, #4]
 800863e:	1ad3      	subs	r3, r2, r3
 8008640:	68ba      	ldr	r2, [r7, #8]
 8008642:	429a      	cmp	r2, r3
 8008644:	d302      	bcc.n	800864c <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8008646:	68bb      	ldr	r3, [r7, #8]
 8008648:	2b00      	cmp	r3, #0
 800864a:	d113      	bne.n	8008674 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 800864c:	68fb      	ldr	r3, [r7, #12]
 800864e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008650:	f043 0220 	orr.w	r2, r3, #32
 8008654:	68fb      	ldr	r3, [r7, #12]
 8008656:	645a      	str	r2, [r3, #68]	; 0x44
 8008658:	68fb      	ldr	r3, [r7, #12]
 800865a:	2220      	movs	r2, #32
 800865c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008660:	68fb      	ldr	r3, [r7, #12]
 8008662:	2200      	movs	r2, #0
 8008664:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008668:	68fb      	ldr	r3, [r7, #12]
 800866a:	2200      	movs	r2, #0
 800866c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008670:	2301      	movs	r3, #1
 8008672:	e007      	b.n	8008684 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8008674:	68fb      	ldr	r3, [r7, #12]
 8008676:	681b      	ldr	r3, [r3, #0]
 8008678:	699b      	ldr	r3, [r3, #24]
 800867a:	f003 0302 	and.w	r3, r3, #2
 800867e:	2b02      	cmp	r3, #2
 8008680:	d1cb      	bne.n	800861a <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8008682:	2300      	movs	r3, #0
 8008684:	4618      	mov	r0, r3
 8008686:	3710      	adds	r7, #16
 8008688:	46bd      	mov	sp, r7
 800868a:	bd80      	pop	{r7, pc}

0800868c <I2C_WaitOnSTOPFlagUntilTimeout>:
 800868c:	b580      	push	{r7, lr}
 800868e:	b084      	sub	sp, #16
 8008690:	af00      	add	r7, sp, #0
 8008692:	60f8      	str	r0, [r7, #12]
 8008694:	60b9      	str	r1, [r7, #8]
 8008696:	607a      	str	r2, [r7, #4]
 8008698:	e028      	b.n	80086ec <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 800869a:	687a      	ldr	r2, [r7, #4]
 800869c:	68b9      	ldr	r1, [r7, #8]
 800869e:	68f8      	ldr	r0, [r7, #12]
 80086a0:	f000 f830 	bl	8008704 <I2C_IsAcknowledgeFailed>
 80086a4:	4603      	mov	r3, r0
 80086a6:	2b00      	cmp	r3, #0
 80086a8:	d001      	beq.n	80086ae <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 80086aa:	2301      	movs	r3, #1
 80086ac:	e026      	b.n	80086fc <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 80086ae:	f7fd fe85 	bl	80063bc <HAL_GetTick>
 80086b2:	4602      	mov	r2, r0
 80086b4:	687b      	ldr	r3, [r7, #4]
 80086b6:	1ad3      	subs	r3, r2, r3
 80086b8:	68ba      	ldr	r2, [r7, #8]
 80086ba:	429a      	cmp	r2, r3
 80086bc:	d302      	bcc.n	80086c4 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 80086be:	68bb      	ldr	r3, [r7, #8]
 80086c0:	2b00      	cmp	r3, #0
 80086c2:	d113      	bne.n	80086ec <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 80086c4:	68fb      	ldr	r3, [r7, #12]
 80086c6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80086c8:	f043 0220 	orr.w	r2, r3, #32
 80086cc:	68fb      	ldr	r3, [r7, #12]
 80086ce:	645a      	str	r2, [r3, #68]	; 0x44
 80086d0:	68fb      	ldr	r3, [r7, #12]
 80086d2:	2220      	movs	r2, #32
 80086d4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80086d8:	68fb      	ldr	r3, [r7, #12]
 80086da:	2200      	movs	r2, #0
 80086dc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80086e0:	68fb      	ldr	r3, [r7, #12]
 80086e2:	2200      	movs	r2, #0
 80086e4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80086e8:	2301      	movs	r3, #1
 80086ea:	e007      	b.n	80086fc <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 80086ec:	68fb      	ldr	r3, [r7, #12]
 80086ee:	681b      	ldr	r3, [r3, #0]
 80086f0:	699b      	ldr	r3, [r3, #24]
 80086f2:	f003 0320 	and.w	r3, r3, #32
 80086f6:	2b20      	cmp	r3, #32
 80086f8:	d1cf      	bne.n	800869a <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 80086fa:	2300      	movs	r3, #0
 80086fc:	4618      	mov	r0, r3
 80086fe:	3710      	adds	r7, #16
 8008700:	46bd      	mov	sp, r7
 8008702:	bd80      	pop	{r7, pc}

08008704 <I2C_IsAcknowledgeFailed>:
 8008704:	b580      	push	{r7, lr}
 8008706:	b084      	sub	sp, #16
 8008708:	af00      	add	r7, sp, #0
 800870a:	60f8      	str	r0, [r7, #12]
 800870c:	60b9      	str	r1, [r7, #8]
 800870e:	607a      	str	r2, [r7, #4]
 8008710:	68fb      	ldr	r3, [r7, #12]
 8008712:	681b      	ldr	r3, [r3, #0]
 8008714:	699b      	ldr	r3, [r3, #24]
 8008716:	f003 0310 	and.w	r3, r3, #16
 800871a:	2b10      	cmp	r3, #16
 800871c:	d151      	bne.n	80087c2 <I2C_IsAcknowledgeFailed+0xbe>
 800871e:	e022      	b.n	8008766 <I2C_IsAcknowledgeFailed+0x62>
 8008720:	68bb      	ldr	r3, [r7, #8]
 8008722:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008726:	d01e      	beq.n	8008766 <I2C_IsAcknowledgeFailed+0x62>
 8008728:	f7fd fe48 	bl	80063bc <HAL_GetTick>
 800872c:	4602      	mov	r2, r0
 800872e:	687b      	ldr	r3, [r7, #4]
 8008730:	1ad3      	subs	r3, r2, r3
 8008732:	68ba      	ldr	r2, [r7, #8]
 8008734:	429a      	cmp	r2, r3
 8008736:	d302      	bcc.n	800873e <I2C_IsAcknowledgeFailed+0x3a>
 8008738:	68bb      	ldr	r3, [r7, #8]
 800873a:	2b00      	cmp	r3, #0
 800873c:	d113      	bne.n	8008766 <I2C_IsAcknowledgeFailed+0x62>
 800873e:	68fb      	ldr	r3, [r7, #12]
 8008740:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008742:	f043 0220 	orr.w	r2, r3, #32
 8008746:	68fb      	ldr	r3, [r7, #12]
 8008748:	645a      	str	r2, [r3, #68]	; 0x44
 800874a:	68fb      	ldr	r3, [r7, #12]
 800874c:	2220      	movs	r2, #32
 800874e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008752:	68fb      	ldr	r3, [r7, #12]
 8008754:	2200      	movs	r2, #0
 8008756:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800875a:	68fb      	ldr	r3, [r7, #12]
 800875c:	2200      	movs	r2, #0
 800875e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008762:	2301      	movs	r3, #1
 8008764:	e02e      	b.n	80087c4 <I2C_IsAcknowledgeFailed+0xc0>
 8008766:	68fb      	ldr	r3, [r7, #12]
 8008768:	681b      	ldr	r3, [r3, #0]
 800876a:	699b      	ldr	r3, [r3, #24]
 800876c:	f003 0320 	and.w	r3, r3, #32
 8008770:	2b20      	cmp	r3, #32
 8008772:	d1d5      	bne.n	8008720 <I2C_IsAcknowledgeFailed+0x1c>
 8008774:	68fb      	ldr	r3, [r7, #12]
 8008776:	681b      	ldr	r3, [r3, #0]
 8008778:	2210      	movs	r2, #16
 800877a:	61da      	str	r2, [r3, #28]
 800877c:	68fb      	ldr	r3, [r7, #12]
 800877e:	681b      	ldr	r3, [r3, #0]
 8008780:	2220      	movs	r2, #32
 8008782:	61da      	str	r2, [r3, #28]
 8008784:	68f8      	ldr	r0, [r7, #12]
 8008786:	f7ff fedd 	bl	8008544 <I2C_Flush_TXDR>
 800878a:	68fb      	ldr	r3, [r7, #12]
 800878c:	681b      	ldr	r3, [r3, #0]
 800878e:	6859      	ldr	r1, [r3, #4]
 8008790:	68fb      	ldr	r3, [r7, #12]
 8008792:	681a      	ldr	r2, [r3, #0]
 8008794:	4b0d      	ldr	r3, [pc, #52]	; (80087cc <I2C_IsAcknowledgeFailed+0xc8>)
 8008796:	400b      	ands	r3, r1
 8008798:	6053      	str	r3, [r2, #4]
 800879a:	68fb      	ldr	r3, [r7, #12]
 800879c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800879e:	f043 0204 	orr.w	r2, r3, #4
 80087a2:	68fb      	ldr	r3, [r7, #12]
 80087a4:	645a      	str	r2, [r3, #68]	; 0x44
 80087a6:	68fb      	ldr	r3, [r7, #12]
 80087a8:	2220      	movs	r2, #32
 80087aa:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80087ae:	68fb      	ldr	r3, [r7, #12]
 80087b0:	2200      	movs	r2, #0
 80087b2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80087b6:	68fb      	ldr	r3, [r7, #12]
 80087b8:	2200      	movs	r2, #0
 80087ba:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80087be:	2301      	movs	r3, #1
 80087c0:	e000      	b.n	80087c4 <I2C_IsAcknowledgeFailed+0xc0>
 80087c2:	2300      	movs	r3, #0
 80087c4:	4618      	mov	r0, r3
 80087c6:	3710      	adds	r7, #16
 80087c8:	46bd      	mov	sp, r7
 80087ca:	bd80      	pop	{r7, pc}
 80087cc:	fe00e800 	.word	0xfe00e800

080087d0 <I2C_TransferConfig>:
 80087d0:	b480      	push	{r7}
 80087d2:	b085      	sub	sp, #20
 80087d4:	af00      	add	r7, sp, #0
 80087d6:	60f8      	str	r0, [r7, #12]
 80087d8:	607b      	str	r3, [r7, #4]
 80087da:	460b      	mov	r3, r1
 80087dc:	817b      	strh	r3, [r7, #10]
 80087de:	4613      	mov	r3, r2
 80087e0:	727b      	strb	r3, [r7, #9]
 80087e2:	68fb      	ldr	r3, [r7, #12]
 80087e4:	681b      	ldr	r3, [r3, #0]
 80087e6:	685a      	ldr	r2, [r3, #4]
 80087e8:	69bb      	ldr	r3, [r7, #24]
 80087ea:	0d5b      	lsrs	r3, r3, #21
 80087ec:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 80087f0:	4b0d      	ldr	r3, [pc, #52]	; (8008828 <I2C_TransferConfig+0x58>)
 80087f2:	430b      	orrs	r3, r1
 80087f4:	43db      	mvns	r3, r3
 80087f6:	ea02 0103 	and.w	r1, r2, r3
 80087fa:	897b      	ldrh	r3, [r7, #10]
 80087fc:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8008800:	7a7b      	ldrb	r3, [r7, #9]
 8008802:	041b      	lsls	r3, r3, #16
 8008804:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8008808:	431a      	orrs	r2, r3
 800880a:	687b      	ldr	r3, [r7, #4]
 800880c:	431a      	orrs	r2, r3
 800880e:	69bb      	ldr	r3, [r7, #24]
 8008810:	431a      	orrs	r2, r3
 8008812:	68fb      	ldr	r3, [r7, #12]
 8008814:	681b      	ldr	r3, [r3, #0]
 8008816:	430a      	orrs	r2, r1
 8008818:	605a      	str	r2, [r3, #4]
 800881a:	bf00      	nop
 800881c:	3714      	adds	r7, #20
 800881e:	46bd      	mov	sp, r7
 8008820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008824:	4770      	bx	lr
 8008826:	bf00      	nop
 8008828:	03ff63ff 	.word	0x03ff63ff

0800882c <HAL_I2CEx_ConfigAnalogFilter>:
 800882c:	b480      	push	{r7}
 800882e:	b083      	sub	sp, #12
 8008830:	af00      	add	r7, sp, #0
 8008832:	6078      	str	r0, [r7, #4]
 8008834:	6039      	str	r1, [r7, #0]
 8008836:	687b      	ldr	r3, [r7, #4]
 8008838:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800883c:	b2db      	uxtb	r3, r3
 800883e:	2b20      	cmp	r3, #32
 8008840:	d138      	bne.n	80088b4 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8008842:	687b      	ldr	r3, [r7, #4]
 8008844:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008848:	2b01      	cmp	r3, #1
 800884a:	d101      	bne.n	8008850 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800884c:	2302      	movs	r3, #2
 800884e:	e032      	b.n	80088b6 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	2201      	movs	r2, #1
 8008854:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008858:	687b      	ldr	r3, [r7, #4]
 800885a:	2224      	movs	r2, #36	; 0x24
 800885c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008860:	687b      	ldr	r3, [r7, #4]
 8008862:	681b      	ldr	r3, [r3, #0]
 8008864:	681a      	ldr	r2, [r3, #0]
 8008866:	687b      	ldr	r3, [r7, #4]
 8008868:	681b      	ldr	r3, [r3, #0]
 800886a:	f022 0201 	bic.w	r2, r2, #1
 800886e:	601a      	str	r2, [r3, #0]
 8008870:	687b      	ldr	r3, [r7, #4]
 8008872:	681b      	ldr	r3, [r3, #0]
 8008874:	681a      	ldr	r2, [r3, #0]
 8008876:	687b      	ldr	r3, [r7, #4]
 8008878:	681b      	ldr	r3, [r3, #0]
 800887a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800887e:	601a      	str	r2, [r3, #0]
 8008880:	687b      	ldr	r3, [r7, #4]
 8008882:	681b      	ldr	r3, [r3, #0]
 8008884:	6819      	ldr	r1, [r3, #0]
 8008886:	687b      	ldr	r3, [r7, #4]
 8008888:	681b      	ldr	r3, [r3, #0]
 800888a:	683a      	ldr	r2, [r7, #0]
 800888c:	430a      	orrs	r2, r1
 800888e:	601a      	str	r2, [r3, #0]
 8008890:	687b      	ldr	r3, [r7, #4]
 8008892:	681b      	ldr	r3, [r3, #0]
 8008894:	681a      	ldr	r2, [r3, #0]
 8008896:	687b      	ldr	r3, [r7, #4]
 8008898:	681b      	ldr	r3, [r3, #0]
 800889a:	f042 0201 	orr.w	r2, r2, #1
 800889e:	601a      	str	r2, [r3, #0]
 80088a0:	687b      	ldr	r3, [r7, #4]
 80088a2:	2220      	movs	r2, #32
 80088a4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80088a8:	687b      	ldr	r3, [r7, #4]
 80088aa:	2200      	movs	r2, #0
 80088ac:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80088b0:	2300      	movs	r3, #0
 80088b2:	e000      	b.n	80088b6 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80088b4:	2302      	movs	r3, #2
 80088b6:	4618      	mov	r0, r3
 80088b8:	370c      	adds	r7, #12
 80088ba:	46bd      	mov	sp, r7
 80088bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088c0:	4770      	bx	lr

080088c2 <HAL_I2CEx_ConfigDigitalFilter>:
 80088c2:	b480      	push	{r7}
 80088c4:	b085      	sub	sp, #20
 80088c6:	af00      	add	r7, sp, #0
 80088c8:	6078      	str	r0, [r7, #4]
 80088ca:	6039      	str	r1, [r7, #0]
 80088cc:	687b      	ldr	r3, [r7, #4]
 80088ce:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80088d2:	b2db      	uxtb	r3, r3
 80088d4:	2b20      	cmp	r3, #32
 80088d6:	d139      	bne.n	800894c <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80088de:	2b01      	cmp	r3, #1
 80088e0:	d101      	bne.n	80088e6 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 80088e2:	2302      	movs	r3, #2
 80088e4:	e033      	b.n	800894e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80088e6:	687b      	ldr	r3, [r7, #4]
 80088e8:	2201      	movs	r2, #1
 80088ea:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80088ee:	687b      	ldr	r3, [r7, #4]
 80088f0:	2224      	movs	r2, #36	; 0x24
 80088f2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80088f6:	687b      	ldr	r3, [r7, #4]
 80088f8:	681b      	ldr	r3, [r3, #0]
 80088fa:	681a      	ldr	r2, [r3, #0]
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	681b      	ldr	r3, [r3, #0]
 8008900:	f022 0201 	bic.w	r2, r2, #1
 8008904:	601a      	str	r2, [r3, #0]
 8008906:	687b      	ldr	r3, [r7, #4]
 8008908:	681b      	ldr	r3, [r3, #0]
 800890a:	681b      	ldr	r3, [r3, #0]
 800890c:	60fb      	str	r3, [r7, #12]
 800890e:	68fb      	ldr	r3, [r7, #12]
 8008910:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8008914:	60fb      	str	r3, [r7, #12]
 8008916:	683b      	ldr	r3, [r7, #0]
 8008918:	021b      	lsls	r3, r3, #8
 800891a:	68fa      	ldr	r2, [r7, #12]
 800891c:	4313      	orrs	r3, r2
 800891e:	60fb      	str	r3, [r7, #12]
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	681b      	ldr	r3, [r3, #0]
 8008924:	68fa      	ldr	r2, [r7, #12]
 8008926:	601a      	str	r2, [r3, #0]
 8008928:	687b      	ldr	r3, [r7, #4]
 800892a:	681b      	ldr	r3, [r3, #0]
 800892c:	681a      	ldr	r2, [r3, #0]
 800892e:	687b      	ldr	r3, [r7, #4]
 8008930:	681b      	ldr	r3, [r3, #0]
 8008932:	f042 0201 	orr.w	r2, r2, #1
 8008936:	601a      	str	r2, [r3, #0]
 8008938:	687b      	ldr	r3, [r7, #4]
 800893a:	2220      	movs	r2, #32
 800893c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	2200      	movs	r2, #0
 8008944:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008948:	2300      	movs	r3, #0
 800894a:	e000      	b.n	800894e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800894c:	2302      	movs	r3, #2
 800894e:	4618      	mov	r0, r3
 8008950:	3714      	adds	r7, #20
 8008952:	46bd      	mov	sp, r7
 8008954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008958:	4770      	bx	lr
	...

0800895c <HAL_LTDC_Init>:
 800895c:	b580      	push	{r7, lr}
 800895e:	b084      	sub	sp, #16
 8008960:	af00      	add	r7, sp, #0
 8008962:	6078      	str	r0, [r7, #4]
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	2b00      	cmp	r3, #0
 8008968:	d101      	bne.n	800896e <HAL_LTDC_Init+0x12>
 800896a:	2301      	movs	r3, #1
 800896c:	e0bf      	b.n	8008aee <HAL_LTDC_Init+0x192>
 800896e:	687b      	ldr	r3, [r7, #4]
 8008970:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8008974:	b2db      	uxtb	r3, r3
 8008976:	2b00      	cmp	r3, #0
 8008978:	d106      	bne.n	8008988 <HAL_LTDC_Init+0x2c>
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	2200      	movs	r2, #0
 800897e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008982:	6878      	ldr	r0, [r7, #4]
 8008984:	f7fd f858 	bl	8005a38 <HAL_LTDC_MspInit>
 8008988:	687b      	ldr	r3, [r7, #4]
 800898a:	2202      	movs	r2, #2
 800898c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008990:	687b      	ldr	r3, [r7, #4]
 8008992:	681b      	ldr	r3, [r3, #0]
 8008994:	699a      	ldr	r2, [r3, #24]
 8008996:	687b      	ldr	r3, [r7, #4]
 8008998:	681b      	ldr	r3, [r3, #0]
 800899a:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800899e:	619a      	str	r2, [r3, #24]
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	681b      	ldr	r3, [r3, #0]
 80089a4:	6999      	ldr	r1, [r3, #24]
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	685a      	ldr	r2, [r3, #4]
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	689b      	ldr	r3, [r3, #8]
 80089ae:	431a      	orrs	r2, r3
 80089b0:	687b      	ldr	r3, [r7, #4]
 80089b2:	68db      	ldr	r3, [r3, #12]
 80089b4:	431a      	orrs	r2, r3
 80089b6:	687b      	ldr	r3, [r7, #4]
 80089b8:	691b      	ldr	r3, [r3, #16]
 80089ba:	431a      	orrs	r2, r3
 80089bc:	687b      	ldr	r3, [r7, #4]
 80089be:	681b      	ldr	r3, [r3, #0]
 80089c0:	430a      	orrs	r2, r1
 80089c2:	619a      	str	r2, [r3, #24]
 80089c4:	687b      	ldr	r3, [r7, #4]
 80089c6:	681b      	ldr	r3, [r3, #0]
 80089c8:	6899      	ldr	r1, [r3, #8]
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	681a      	ldr	r2, [r3, #0]
 80089ce:	4b4a      	ldr	r3, [pc, #296]	; (8008af8 <HAL_LTDC_Init+0x19c>)
 80089d0:	400b      	ands	r3, r1
 80089d2:	6093      	str	r3, [r2, #8]
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	695b      	ldr	r3, [r3, #20]
 80089d8:	041b      	lsls	r3, r3, #16
 80089da:	60fb      	str	r3, [r7, #12]
 80089dc:	687b      	ldr	r3, [r7, #4]
 80089de:	681b      	ldr	r3, [r3, #0]
 80089e0:	6899      	ldr	r1, [r3, #8]
 80089e2:	687b      	ldr	r3, [r7, #4]
 80089e4:	699a      	ldr	r2, [r3, #24]
 80089e6:	68fb      	ldr	r3, [r7, #12]
 80089e8:	431a      	orrs	r2, r3
 80089ea:	687b      	ldr	r3, [r7, #4]
 80089ec:	681b      	ldr	r3, [r3, #0]
 80089ee:	430a      	orrs	r2, r1
 80089f0:	609a      	str	r2, [r3, #8]
 80089f2:	687b      	ldr	r3, [r7, #4]
 80089f4:	681b      	ldr	r3, [r3, #0]
 80089f6:	68d9      	ldr	r1, [r3, #12]
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	681a      	ldr	r2, [r3, #0]
 80089fc:	4b3e      	ldr	r3, [pc, #248]	; (8008af8 <HAL_LTDC_Init+0x19c>)
 80089fe:	400b      	ands	r3, r1
 8008a00:	60d3      	str	r3, [r2, #12]
 8008a02:	687b      	ldr	r3, [r7, #4]
 8008a04:	69db      	ldr	r3, [r3, #28]
 8008a06:	041b      	lsls	r3, r3, #16
 8008a08:	60fb      	str	r3, [r7, #12]
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	681b      	ldr	r3, [r3, #0]
 8008a0e:	68d9      	ldr	r1, [r3, #12]
 8008a10:	687b      	ldr	r3, [r7, #4]
 8008a12:	6a1a      	ldr	r2, [r3, #32]
 8008a14:	68fb      	ldr	r3, [r7, #12]
 8008a16:	431a      	orrs	r2, r3
 8008a18:	687b      	ldr	r3, [r7, #4]
 8008a1a:	681b      	ldr	r3, [r3, #0]
 8008a1c:	430a      	orrs	r2, r1
 8008a1e:	60da      	str	r2, [r3, #12]
 8008a20:	687b      	ldr	r3, [r7, #4]
 8008a22:	681b      	ldr	r3, [r3, #0]
 8008a24:	6919      	ldr	r1, [r3, #16]
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	681a      	ldr	r2, [r3, #0]
 8008a2a:	4b33      	ldr	r3, [pc, #204]	; (8008af8 <HAL_LTDC_Init+0x19c>)
 8008a2c:	400b      	ands	r3, r1
 8008a2e:	6113      	str	r3, [r2, #16]
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008a34:	041b      	lsls	r3, r3, #16
 8008a36:	60fb      	str	r3, [r7, #12]
 8008a38:	687b      	ldr	r3, [r7, #4]
 8008a3a:	681b      	ldr	r3, [r3, #0]
 8008a3c:	6919      	ldr	r1, [r3, #16]
 8008a3e:	687b      	ldr	r3, [r7, #4]
 8008a40:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008a42:	68fb      	ldr	r3, [r7, #12]
 8008a44:	431a      	orrs	r2, r3
 8008a46:	687b      	ldr	r3, [r7, #4]
 8008a48:	681b      	ldr	r3, [r3, #0]
 8008a4a:	430a      	orrs	r2, r1
 8008a4c:	611a      	str	r2, [r3, #16]
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	681b      	ldr	r3, [r3, #0]
 8008a52:	6959      	ldr	r1, [r3, #20]
 8008a54:	687b      	ldr	r3, [r7, #4]
 8008a56:	681a      	ldr	r2, [r3, #0]
 8008a58:	4b27      	ldr	r3, [pc, #156]	; (8008af8 <HAL_LTDC_Init+0x19c>)
 8008a5a:	400b      	ands	r3, r1
 8008a5c:	6153      	str	r3, [r2, #20]
 8008a5e:	687b      	ldr	r3, [r7, #4]
 8008a60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a62:	041b      	lsls	r3, r3, #16
 8008a64:	60fb      	str	r3, [r7, #12]
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	681b      	ldr	r3, [r3, #0]
 8008a6a:	6959      	ldr	r1, [r3, #20]
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008a70:	68fb      	ldr	r3, [r7, #12]
 8008a72:	431a      	orrs	r2, r3
 8008a74:	687b      	ldr	r3, [r7, #4]
 8008a76:	681b      	ldr	r3, [r3, #0]
 8008a78:	430a      	orrs	r2, r1
 8008a7a:	615a      	str	r2, [r3, #20]
 8008a7c:	687b      	ldr	r3, [r7, #4]
 8008a7e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008a82:	021b      	lsls	r3, r3, #8
 8008a84:	60fb      	str	r3, [r7, #12]
 8008a86:	687b      	ldr	r3, [r7, #4]
 8008a88:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8008a8c:	041b      	lsls	r3, r3, #16
 8008a8e:	60bb      	str	r3, [r7, #8]
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	681b      	ldr	r3, [r3, #0]
 8008a94:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008a96:	687b      	ldr	r3, [r7, #4]
 8008a98:	681b      	ldr	r3, [r3, #0]
 8008a9a:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8008a9e:	62da      	str	r2, [r3, #44]	; 0x2c
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	681b      	ldr	r3, [r3, #0]
 8008aa4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8008aa6:	68ba      	ldr	r2, [r7, #8]
 8008aa8:	68fb      	ldr	r3, [r7, #12]
 8008aaa:	4313      	orrs	r3, r2
 8008aac:	687a      	ldr	r2, [r7, #4]
 8008aae:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 8008ab2:	431a      	orrs	r2, r3
 8008ab4:	687b      	ldr	r3, [r7, #4]
 8008ab6:	681b      	ldr	r3, [r3, #0]
 8008ab8:	430a      	orrs	r2, r1
 8008aba:	62da      	str	r2, [r3, #44]	; 0x2c
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	681b      	ldr	r3, [r3, #0]
 8008ac0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008ac2:	687b      	ldr	r3, [r7, #4]
 8008ac4:	681b      	ldr	r3, [r3, #0]
 8008ac6:	f042 0206 	orr.w	r2, r2, #6
 8008aca:	635a      	str	r2, [r3, #52]	; 0x34
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	681b      	ldr	r3, [r3, #0]
 8008ad0:	699a      	ldr	r2, [r3, #24]
 8008ad2:	687b      	ldr	r3, [r7, #4]
 8008ad4:	681b      	ldr	r3, [r3, #0]
 8008ad6:	f042 0201 	orr.w	r2, r2, #1
 8008ada:	619a      	str	r2, [r3, #24]
 8008adc:	687b      	ldr	r3, [r7, #4]
 8008ade:	2200      	movs	r2, #0
 8008ae0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8008ae4:	687b      	ldr	r3, [r7, #4]
 8008ae6:	2201      	movs	r2, #1
 8008ae8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008aec:	2300      	movs	r3, #0
 8008aee:	4618      	mov	r0, r3
 8008af0:	3710      	adds	r7, #16
 8008af2:	46bd      	mov	sp, r7
 8008af4:	bd80      	pop	{r7, pc}
 8008af6:	bf00      	nop
 8008af8:	f000f800 	.word	0xf000f800

08008afc <HAL_LTDC_IRQHandler>:
 8008afc:	b580      	push	{r7, lr}
 8008afe:	b084      	sub	sp, #16
 8008b00:	af00      	add	r7, sp, #0
 8008b02:	6078      	str	r0, [r7, #4]
 8008b04:	687b      	ldr	r3, [r7, #4]
 8008b06:	681b      	ldr	r3, [r3, #0]
 8008b08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008b0a:	60fb      	str	r3, [r7, #12]
 8008b0c:	687b      	ldr	r3, [r7, #4]
 8008b0e:	681b      	ldr	r3, [r3, #0]
 8008b10:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008b12:	60bb      	str	r3, [r7, #8]
 8008b14:	68fb      	ldr	r3, [r7, #12]
 8008b16:	f003 0304 	and.w	r3, r3, #4
 8008b1a:	2b00      	cmp	r3, #0
 8008b1c:	d023      	beq.n	8008b66 <HAL_LTDC_IRQHandler+0x6a>
 8008b1e:	68bb      	ldr	r3, [r7, #8]
 8008b20:	f003 0304 	and.w	r3, r3, #4
 8008b24:	2b00      	cmp	r3, #0
 8008b26:	d01e      	beq.n	8008b66 <HAL_LTDC_IRQHandler+0x6a>
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	681b      	ldr	r3, [r3, #0]
 8008b2c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008b2e:	687b      	ldr	r3, [r7, #4]
 8008b30:	681b      	ldr	r3, [r3, #0]
 8008b32:	f022 0204 	bic.w	r2, r2, #4
 8008b36:	635a      	str	r2, [r3, #52]	; 0x34
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	681b      	ldr	r3, [r3, #0]
 8008b3c:	2204      	movs	r2, #4
 8008b3e:	63da      	str	r2, [r3, #60]	; 0x3c
 8008b40:	687b      	ldr	r3, [r7, #4]
 8008b42:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008b46:	f043 0201 	orr.w	r2, r3, #1
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8008b50:	687b      	ldr	r3, [r7, #4]
 8008b52:	2204      	movs	r2, #4
 8008b54:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008b58:	687b      	ldr	r3, [r7, #4]
 8008b5a:	2200      	movs	r2, #0
 8008b5c:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008b60:	6878      	ldr	r0, [r7, #4]
 8008b62:	f000 f86f 	bl	8008c44 <HAL_LTDC_ErrorCallback>
 8008b66:	68fb      	ldr	r3, [r7, #12]
 8008b68:	f003 0302 	and.w	r3, r3, #2
 8008b6c:	2b00      	cmp	r3, #0
 8008b6e:	d023      	beq.n	8008bb8 <HAL_LTDC_IRQHandler+0xbc>
 8008b70:	68bb      	ldr	r3, [r7, #8]
 8008b72:	f003 0302 	and.w	r3, r3, #2
 8008b76:	2b00      	cmp	r3, #0
 8008b78:	d01e      	beq.n	8008bb8 <HAL_LTDC_IRQHandler+0xbc>
 8008b7a:	687b      	ldr	r3, [r7, #4]
 8008b7c:	681b      	ldr	r3, [r3, #0]
 8008b7e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008b80:	687b      	ldr	r3, [r7, #4]
 8008b82:	681b      	ldr	r3, [r3, #0]
 8008b84:	f022 0202 	bic.w	r2, r2, #2
 8008b88:	635a      	str	r2, [r3, #52]	; 0x34
 8008b8a:	687b      	ldr	r3, [r7, #4]
 8008b8c:	681b      	ldr	r3, [r3, #0]
 8008b8e:	2202      	movs	r2, #2
 8008b90:	63da      	str	r2, [r3, #60]	; 0x3c
 8008b92:	687b      	ldr	r3, [r7, #4]
 8008b94:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008b98:	f043 0202 	orr.w	r2, r3, #2
 8008b9c:	687b      	ldr	r3, [r7, #4]
 8008b9e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8008ba2:	687b      	ldr	r3, [r7, #4]
 8008ba4:	2204      	movs	r2, #4
 8008ba6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	2200      	movs	r2, #0
 8008bae:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008bb2:	6878      	ldr	r0, [r7, #4]
 8008bb4:	f000 f846 	bl	8008c44 <HAL_LTDC_ErrorCallback>
 8008bb8:	68fb      	ldr	r3, [r7, #12]
 8008bba:	f003 0301 	and.w	r3, r3, #1
 8008bbe:	2b00      	cmp	r3, #0
 8008bc0:	d01b      	beq.n	8008bfa <HAL_LTDC_IRQHandler+0xfe>
 8008bc2:	68bb      	ldr	r3, [r7, #8]
 8008bc4:	f003 0301 	and.w	r3, r3, #1
 8008bc8:	2b00      	cmp	r3, #0
 8008bca:	d016      	beq.n	8008bfa <HAL_LTDC_IRQHandler+0xfe>
 8008bcc:	687b      	ldr	r3, [r7, #4]
 8008bce:	681b      	ldr	r3, [r3, #0]
 8008bd0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	681b      	ldr	r3, [r3, #0]
 8008bd6:	f022 0201 	bic.w	r2, r2, #1
 8008bda:	635a      	str	r2, [r3, #52]	; 0x34
 8008bdc:	687b      	ldr	r3, [r7, #4]
 8008bde:	681b      	ldr	r3, [r3, #0]
 8008be0:	2201      	movs	r2, #1
 8008be2:	63da      	str	r2, [r3, #60]	; 0x3c
 8008be4:	687b      	ldr	r3, [r7, #4]
 8008be6:	2201      	movs	r2, #1
 8008be8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008bec:	687b      	ldr	r3, [r7, #4]
 8008bee:	2200      	movs	r2, #0
 8008bf0:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008bf4:	6878      	ldr	r0, [r7, #4]
 8008bf6:	f000 f82f 	bl	8008c58 <HAL_LTDC_LineEventCallback>
 8008bfa:	68fb      	ldr	r3, [r7, #12]
 8008bfc:	f003 0308 	and.w	r3, r3, #8
 8008c00:	2b00      	cmp	r3, #0
 8008c02:	d01b      	beq.n	8008c3c <HAL_LTDC_IRQHandler+0x140>
 8008c04:	68bb      	ldr	r3, [r7, #8]
 8008c06:	f003 0308 	and.w	r3, r3, #8
 8008c0a:	2b00      	cmp	r3, #0
 8008c0c:	d016      	beq.n	8008c3c <HAL_LTDC_IRQHandler+0x140>
 8008c0e:	687b      	ldr	r3, [r7, #4]
 8008c10:	681b      	ldr	r3, [r3, #0]
 8008c12:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008c14:	687b      	ldr	r3, [r7, #4]
 8008c16:	681b      	ldr	r3, [r3, #0]
 8008c18:	f022 0208 	bic.w	r2, r2, #8
 8008c1c:	635a      	str	r2, [r3, #52]	; 0x34
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	681b      	ldr	r3, [r3, #0]
 8008c22:	2208      	movs	r2, #8
 8008c24:	63da      	str	r2, [r3, #60]	; 0x3c
 8008c26:	687b      	ldr	r3, [r7, #4]
 8008c28:	2201      	movs	r2, #1
 8008c2a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	2200      	movs	r2, #0
 8008c32:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008c36:	6878      	ldr	r0, [r7, #4]
 8008c38:	f000 f818 	bl	8008c6c <HAL_LTDC_ReloadEventCallback>
 8008c3c:	bf00      	nop
 8008c3e:	3710      	adds	r7, #16
 8008c40:	46bd      	mov	sp, r7
 8008c42:	bd80      	pop	{r7, pc}

08008c44 <HAL_LTDC_ErrorCallback>:
 8008c44:	b480      	push	{r7}
 8008c46:	b083      	sub	sp, #12
 8008c48:	af00      	add	r7, sp, #0
 8008c4a:	6078      	str	r0, [r7, #4]
 8008c4c:	bf00      	nop
 8008c4e:	370c      	adds	r7, #12
 8008c50:	46bd      	mov	sp, r7
 8008c52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c56:	4770      	bx	lr

08008c58 <HAL_LTDC_LineEventCallback>:
 8008c58:	b480      	push	{r7}
 8008c5a:	b083      	sub	sp, #12
 8008c5c:	af00      	add	r7, sp, #0
 8008c5e:	6078      	str	r0, [r7, #4]
 8008c60:	bf00      	nop
 8008c62:	370c      	adds	r7, #12
 8008c64:	46bd      	mov	sp, r7
 8008c66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c6a:	4770      	bx	lr

08008c6c <HAL_LTDC_ReloadEventCallback>:
 8008c6c:	b480      	push	{r7}
 8008c6e:	b083      	sub	sp, #12
 8008c70:	af00      	add	r7, sp, #0
 8008c72:	6078      	str	r0, [r7, #4]
 8008c74:	bf00      	nop
 8008c76:	370c      	adds	r7, #12
 8008c78:	46bd      	mov	sp, r7
 8008c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c7e:	4770      	bx	lr

08008c80 <HAL_LTDC_ConfigLayer>:
 8008c80:	b5b0      	push	{r4, r5, r7, lr}
 8008c82:	b084      	sub	sp, #16
 8008c84:	af00      	add	r7, sp, #0
 8008c86:	60f8      	str	r0, [r7, #12]
 8008c88:	60b9      	str	r1, [r7, #8]
 8008c8a:	607a      	str	r2, [r7, #4]
 8008c8c:	68fb      	ldr	r3, [r7, #12]
 8008c8e:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8008c92:	2b01      	cmp	r3, #1
 8008c94:	d101      	bne.n	8008c9a <HAL_LTDC_ConfigLayer+0x1a>
 8008c96:	2302      	movs	r3, #2
 8008c98:	e02c      	b.n	8008cf4 <HAL_LTDC_ConfigLayer+0x74>
 8008c9a:	68fb      	ldr	r3, [r7, #12]
 8008c9c:	2201      	movs	r2, #1
 8008c9e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008ca2:	68fb      	ldr	r3, [r7, #12]
 8008ca4:	2202      	movs	r2, #2
 8008ca6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008caa:	68fa      	ldr	r2, [r7, #12]
 8008cac:	687b      	ldr	r3, [r7, #4]
 8008cae:	2134      	movs	r1, #52	; 0x34
 8008cb0:	fb01 f303 	mul.w	r3, r1, r3
 8008cb4:	4413      	add	r3, r2
 8008cb6:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8008cba:	68bb      	ldr	r3, [r7, #8]
 8008cbc:	4614      	mov	r4, r2
 8008cbe:	461d      	mov	r5, r3
 8008cc0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008cc2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008cc4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008cc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008cc8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008cca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008ccc:	682b      	ldr	r3, [r5, #0]
 8008cce:	6023      	str	r3, [r4, #0]
 8008cd0:	687a      	ldr	r2, [r7, #4]
 8008cd2:	68b9      	ldr	r1, [r7, #8]
 8008cd4:	68f8      	ldr	r0, [r7, #12]
 8008cd6:	f000 f81f 	bl	8008d18 <LTDC_SetConfig>
 8008cda:	68fb      	ldr	r3, [r7, #12]
 8008cdc:	681b      	ldr	r3, [r3, #0]
 8008cde:	2201      	movs	r2, #1
 8008ce0:	625a      	str	r2, [r3, #36]	; 0x24
 8008ce2:	68fb      	ldr	r3, [r7, #12]
 8008ce4:	2201      	movs	r2, #1
 8008ce6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008cea:	68fb      	ldr	r3, [r7, #12]
 8008cec:	2200      	movs	r2, #0
 8008cee:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008cf2:	2300      	movs	r3, #0
 8008cf4:	4618      	mov	r0, r3
 8008cf6:	3710      	adds	r7, #16
 8008cf8:	46bd      	mov	sp, r7
 8008cfa:	bdb0      	pop	{r4, r5, r7, pc}

08008cfc <HAL_LTDC_GetState>:
 8008cfc:	b480      	push	{r7}
 8008cfe:	b083      	sub	sp, #12
 8008d00:	af00      	add	r7, sp, #0
 8008d02:	6078      	str	r0, [r7, #4]
 8008d04:	687b      	ldr	r3, [r7, #4]
 8008d06:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8008d0a:	b2db      	uxtb	r3, r3
 8008d0c:	4618      	mov	r0, r3
 8008d0e:	370c      	adds	r7, #12
 8008d10:	46bd      	mov	sp, r7
 8008d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d16:	4770      	bx	lr

08008d18 <LTDC_SetConfig>:
 8008d18:	b480      	push	{r7}
 8008d1a:	b089      	sub	sp, #36	; 0x24
 8008d1c:	af00      	add	r7, sp, #0
 8008d1e:	60f8      	str	r0, [r7, #12]
 8008d20:	60b9      	str	r1, [r7, #8]
 8008d22:	607a      	str	r2, [r7, #4]
 8008d24:	68bb      	ldr	r3, [r7, #8]
 8008d26:	685a      	ldr	r2, [r3, #4]
 8008d28:	68fb      	ldr	r3, [r7, #12]
 8008d2a:	681b      	ldr	r3, [r3, #0]
 8008d2c:	68db      	ldr	r3, [r3, #12]
 8008d2e:	0c1b      	lsrs	r3, r3, #16
 8008d30:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008d34:	4413      	add	r3, r2
 8008d36:	041b      	lsls	r3, r3, #16
 8008d38:	61fb      	str	r3, [r7, #28]
 8008d3a:	68fb      	ldr	r3, [r7, #12]
 8008d3c:	681b      	ldr	r3, [r3, #0]
 8008d3e:	461a      	mov	r2, r3
 8008d40:	687b      	ldr	r3, [r7, #4]
 8008d42:	01db      	lsls	r3, r3, #7
 8008d44:	4413      	add	r3, r2
 8008d46:	3384      	adds	r3, #132	; 0x84
 8008d48:	685b      	ldr	r3, [r3, #4]
 8008d4a:	68fa      	ldr	r2, [r7, #12]
 8008d4c:	6812      	ldr	r2, [r2, #0]
 8008d4e:	4611      	mov	r1, r2
 8008d50:	687a      	ldr	r2, [r7, #4]
 8008d52:	01d2      	lsls	r2, r2, #7
 8008d54:	440a      	add	r2, r1
 8008d56:	3284      	adds	r2, #132	; 0x84
 8008d58:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8008d5c:	6053      	str	r3, [r2, #4]
 8008d5e:	68bb      	ldr	r3, [r7, #8]
 8008d60:	681a      	ldr	r2, [r3, #0]
 8008d62:	68fb      	ldr	r3, [r7, #12]
 8008d64:	681b      	ldr	r3, [r3, #0]
 8008d66:	68db      	ldr	r3, [r3, #12]
 8008d68:	0c1b      	lsrs	r3, r3, #16
 8008d6a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008d6e:	4413      	add	r3, r2
 8008d70:	1c5a      	adds	r2, r3, #1
 8008d72:	68fb      	ldr	r3, [r7, #12]
 8008d74:	681b      	ldr	r3, [r3, #0]
 8008d76:	4619      	mov	r1, r3
 8008d78:	687b      	ldr	r3, [r7, #4]
 8008d7a:	01db      	lsls	r3, r3, #7
 8008d7c:	440b      	add	r3, r1
 8008d7e:	3384      	adds	r3, #132	; 0x84
 8008d80:	4619      	mov	r1, r3
 8008d82:	69fb      	ldr	r3, [r7, #28]
 8008d84:	4313      	orrs	r3, r2
 8008d86:	604b      	str	r3, [r1, #4]
 8008d88:	68bb      	ldr	r3, [r7, #8]
 8008d8a:	68da      	ldr	r2, [r3, #12]
 8008d8c:	68fb      	ldr	r3, [r7, #12]
 8008d8e:	681b      	ldr	r3, [r3, #0]
 8008d90:	68db      	ldr	r3, [r3, #12]
 8008d92:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8008d96:	4413      	add	r3, r2
 8008d98:	041b      	lsls	r3, r3, #16
 8008d9a:	61fb      	str	r3, [r7, #28]
 8008d9c:	68fb      	ldr	r3, [r7, #12]
 8008d9e:	681b      	ldr	r3, [r3, #0]
 8008da0:	461a      	mov	r2, r3
 8008da2:	687b      	ldr	r3, [r7, #4]
 8008da4:	01db      	lsls	r3, r3, #7
 8008da6:	4413      	add	r3, r2
 8008da8:	3384      	adds	r3, #132	; 0x84
 8008daa:	689b      	ldr	r3, [r3, #8]
 8008dac:	68fa      	ldr	r2, [r7, #12]
 8008dae:	6812      	ldr	r2, [r2, #0]
 8008db0:	4611      	mov	r1, r2
 8008db2:	687a      	ldr	r2, [r7, #4]
 8008db4:	01d2      	lsls	r2, r2, #7
 8008db6:	440a      	add	r2, r1
 8008db8:	3284      	adds	r2, #132	; 0x84
 8008dba:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8008dbe:	6093      	str	r3, [r2, #8]
 8008dc0:	68bb      	ldr	r3, [r7, #8]
 8008dc2:	689a      	ldr	r2, [r3, #8]
 8008dc4:	68fb      	ldr	r3, [r7, #12]
 8008dc6:	681b      	ldr	r3, [r3, #0]
 8008dc8:	68db      	ldr	r3, [r3, #12]
 8008dca:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8008dce:	4413      	add	r3, r2
 8008dd0:	1c5a      	adds	r2, r3, #1
 8008dd2:	68fb      	ldr	r3, [r7, #12]
 8008dd4:	681b      	ldr	r3, [r3, #0]
 8008dd6:	4619      	mov	r1, r3
 8008dd8:	687b      	ldr	r3, [r7, #4]
 8008dda:	01db      	lsls	r3, r3, #7
 8008ddc:	440b      	add	r3, r1
 8008dde:	3384      	adds	r3, #132	; 0x84
 8008de0:	4619      	mov	r1, r3
 8008de2:	69fb      	ldr	r3, [r7, #28]
 8008de4:	4313      	orrs	r3, r2
 8008de6:	608b      	str	r3, [r1, #8]
 8008de8:	68fb      	ldr	r3, [r7, #12]
 8008dea:	681b      	ldr	r3, [r3, #0]
 8008dec:	461a      	mov	r2, r3
 8008dee:	687b      	ldr	r3, [r7, #4]
 8008df0:	01db      	lsls	r3, r3, #7
 8008df2:	4413      	add	r3, r2
 8008df4:	3384      	adds	r3, #132	; 0x84
 8008df6:	691b      	ldr	r3, [r3, #16]
 8008df8:	68fa      	ldr	r2, [r7, #12]
 8008dfa:	6812      	ldr	r2, [r2, #0]
 8008dfc:	4611      	mov	r1, r2
 8008dfe:	687a      	ldr	r2, [r7, #4]
 8008e00:	01d2      	lsls	r2, r2, #7
 8008e02:	440a      	add	r2, r1
 8008e04:	3284      	adds	r2, #132	; 0x84
 8008e06:	f023 0307 	bic.w	r3, r3, #7
 8008e0a:	6113      	str	r3, [r2, #16]
 8008e0c:	68fb      	ldr	r3, [r7, #12]
 8008e0e:	681b      	ldr	r3, [r3, #0]
 8008e10:	461a      	mov	r2, r3
 8008e12:	687b      	ldr	r3, [r7, #4]
 8008e14:	01db      	lsls	r3, r3, #7
 8008e16:	4413      	add	r3, r2
 8008e18:	3384      	adds	r3, #132	; 0x84
 8008e1a:	461a      	mov	r2, r3
 8008e1c:	68bb      	ldr	r3, [r7, #8]
 8008e1e:	691b      	ldr	r3, [r3, #16]
 8008e20:	6113      	str	r3, [r2, #16]
 8008e22:	68bb      	ldr	r3, [r7, #8]
 8008e24:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8008e28:	021b      	lsls	r3, r3, #8
 8008e2a:	61fb      	str	r3, [r7, #28]
 8008e2c:	68bb      	ldr	r3, [r7, #8]
 8008e2e:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8008e32:	041b      	lsls	r3, r3, #16
 8008e34:	61bb      	str	r3, [r7, #24]
 8008e36:	68bb      	ldr	r3, [r7, #8]
 8008e38:	699b      	ldr	r3, [r3, #24]
 8008e3a:	061b      	lsls	r3, r3, #24
 8008e3c:	617b      	str	r3, [r7, #20]
 8008e3e:	68fb      	ldr	r3, [r7, #12]
 8008e40:	681b      	ldr	r3, [r3, #0]
 8008e42:	461a      	mov	r2, r3
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	01db      	lsls	r3, r3, #7
 8008e48:	4413      	add	r3, r2
 8008e4a:	3384      	adds	r3, #132	; 0x84
 8008e4c:	699b      	ldr	r3, [r3, #24]
 8008e4e:	68fb      	ldr	r3, [r7, #12]
 8008e50:	681b      	ldr	r3, [r3, #0]
 8008e52:	461a      	mov	r2, r3
 8008e54:	687b      	ldr	r3, [r7, #4]
 8008e56:	01db      	lsls	r3, r3, #7
 8008e58:	4413      	add	r3, r2
 8008e5a:	3384      	adds	r3, #132	; 0x84
 8008e5c:	461a      	mov	r2, r3
 8008e5e:	2300      	movs	r3, #0
 8008e60:	6193      	str	r3, [r2, #24]
 8008e62:	68bb      	ldr	r3, [r7, #8]
 8008e64:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8008e68:	461a      	mov	r2, r3
 8008e6a:	69fb      	ldr	r3, [r7, #28]
 8008e6c:	431a      	orrs	r2, r3
 8008e6e:	69bb      	ldr	r3, [r7, #24]
 8008e70:	431a      	orrs	r2, r3
 8008e72:	68fb      	ldr	r3, [r7, #12]
 8008e74:	681b      	ldr	r3, [r3, #0]
 8008e76:	4619      	mov	r1, r3
 8008e78:	687b      	ldr	r3, [r7, #4]
 8008e7a:	01db      	lsls	r3, r3, #7
 8008e7c:	440b      	add	r3, r1
 8008e7e:	3384      	adds	r3, #132	; 0x84
 8008e80:	4619      	mov	r1, r3
 8008e82:	697b      	ldr	r3, [r7, #20]
 8008e84:	4313      	orrs	r3, r2
 8008e86:	618b      	str	r3, [r1, #24]
 8008e88:	68fb      	ldr	r3, [r7, #12]
 8008e8a:	681b      	ldr	r3, [r3, #0]
 8008e8c:	461a      	mov	r2, r3
 8008e8e:	687b      	ldr	r3, [r7, #4]
 8008e90:	01db      	lsls	r3, r3, #7
 8008e92:	4413      	add	r3, r2
 8008e94:	3384      	adds	r3, #132	; 0x84
 8008e96:	695b      	ldr	r3, [r3, #20]
 8008e98:	68fa      	ldr	r2, [r7, #12]
 8008e9a:	6812      	ldr	r2, [r2, #0]
 8008e9c:	4611      	mov	r1, r2
 8008e9e:	687a      	ldr	r2, [r7, #4]
 8008ea0:	01d2      	lsls	r2, r2, #7
 8008ea2:	440a      	add	r2, r1
 8008ea4:	3284      	adds	r2, #132	; 0x84
 8008ea6:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8008eaa:	6153      	str	r3, [r2, #20]
 8008eac:	68fb      	ldr	r3, [r7, #12]
 8008eae:	681b      	ldr	r3, [r3, #0]
 8008eb0:	461a      	mov	r2, r3
 8008eb2:	687b      	ldr	r3, [r7, #4]
 8008eb4:	01db      	lsls	r3, r3, #7
 8008eb6:	4413      	add	r3, r2
 8008eb8:	3384      	adds	r3, #132	; 0x84
 8008eba:	461a      	mov	r2, r3
 8008ebc:	68bb      	ldr	r3, [r7, #8]
 8008ebe:	695b      	ldr	r3, [r3, #20]
 8008ec0:	6153      	str	r3, [r2, #20]
 8008ec2:	68fb      	ldr	r3, [r7, #12]
 8008ec4:	681b      	ldr	r3, [r3, #0]
 8008ec6:	461a      	mov	r2, r3
 8008ec8:	687b      	ldr	r3, [r7, #4]
 8008eca:	01db      	lsls	r3, r3, #7
 8008ecc:	4413      	add	r3, r2
 8008ece:	3384      	adds	r3, #132	; 0x84
 8008ed0:	69da      	ldr	r2, [r3, #28]
 8008ed2:	68fb      	ldr	r3, [r7, #12]
 8008ed4:	681b      	ldr	r3, [r3, #0]
 8008ed6:	4619      	mov	r1, r3
 8008ed8:	687b      	ldr	r3, [r7, #4]
 8008eda:	01db      	lsls	r3, r3, #7
 8008edc:	440b      	add	r3, r1
 8008ede:	3384      	adds	r3, #132	; 0x84
 8008ee0:	4619      	mov	r1, r3
 8008ee2:	4b58      	ldr	r3, [pc, #352]	; (8009044 <LTDC_SetConfig+0x32c>)
 8008ee4:	4013      	ands	r3, r2
 8008ee6:	61cb      	str	r3, [r1, #28]
 8008ee8:	68bb      	ldr	r3, [r7, #8]
 8008eea:	69da      	ldr	r2, [r3, #28]
 8008eec:	68bb      	ldr	r3, [r7, #8]
 8008eee:	6a1b      	ldr	r3, [r3, #32]
 8008ef0:	68f9      	ldr	r1, [r7, #12]
 8008ef2:	6809      	ldr	r1, [r1, #0]
 8008ef4:	4608      	mov	r0, r1
 8008ef6:	6879      	ldr	r1, [r7, #4]
 8008ef8:	01c9      	lsls	r1, r1, #7
 8008efa:	4401      	add	r1, r0
 8008efc:	3184      	adds	r1, #132	; 0x84
 8008efe:	4313      	orrs	r3, r2
 8008f00:	61cb      	str	r3, [r1, #28]
 8008f02:	68fb      	ldr	r3, [r7, #12]
 8008f04:	681b      	ldr	r3, [r3, #0]
 8008f06:	461a      	mov	r2, r3
 8008f08:	687b      	ldr	r3, [r7, #4]
 8008f0a:	01db      	lsls	r3, r3, #7
 8008f0c:	4413      	add	r3, r2
 8008f0e:	3384      	adds	r3, #132	; 0x84
 8008f10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008f12:	68fb      	ldr	r3, [r7, #12]
 8008f14:	681b      	ldr	r3, [r3, #0]
 8008f16:	461a      	mov	r2, r3
 8008f18:	687b      	ldr	r3, [r7, #4]
 8008f1a:	01db      	lsls	r3, r3, #7
 8008f1c:	4413      	add	r3, r2
 8008f1e:	3384      	adds	r3, #132	; 0x84
 8008f20:	461a      	mov	r2, r3
 8008f22:	2300      	movs	r3, #0
 8008f24:	6293      	str	r3, [r2, #40]	; 0x28
 8008f26:	68fb      	ldr	r3, [r7, #12]
 8008f28:	681b      	ldr	r3, [r3, #0]
 8008f2a:	461a      	mov	r2, r3
 8008f2c:	687b      	ldr	r3, [r7, #4]
 8008f2e:	01db      	lsls	r3, r3, #7
 8008f30:	4413      	add	r3, r2
 8008f32:	3384      	adds	r3, #132	; 0x84
 8008f34:	461a      	mov	r2, r3
 8008f36:	68bb      	ldr	r3, [r7, #8]
 8008f38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f3a:	6293      	str	r3, [r2, #40]	; 0x28
 8008f3c:	68bb      	ldr	r3, [r7, #8]
 8008f3e:	691b      	ldr	r3, [r3, #16]
 8008f40:	2b00      	cmp	r3, #0
 8008f42:	d102      	bne.n	8008f4a <LTDC_SetConfig+0x232>
 8008f44:	2304      	movs	r3, #4
 8008f46:	61fb      	str	r3, [r7, #28]
 8008f48:	e01b      	b.n	8008f82 <LTDC_SetConfig+0x26a>
 8008f4a:	68bb      	ldr	r3, [r7, #8]
 8008f4c:	691b      	ldr	r3, [r3, #16]
 8008f4e:	2b01      	cmp	r3, #1
 8008f50:	d102      	bne.n	8008f58 <LTDC_SetConfig+0x240>
 8008f52:	2303      	movs	r3, #3
 8008f54:	61fb      	str	r3, [r7, #28]
 8008f56:	e014      	b.n	8008f82 <LTDC_SetConfig+0x26a>
 8008f58:	68bb      	ldr	r3, [r7, #8]
 8008f5a:	691b      	ldr	r3, [r3, #16]
 8008f5c:	2b04      	cmp	r3, #4
 8008f5e:	d00b      	beq.n	8008f78 <LTDC_SetConfig+0x260>
 8008f60:	68bb      	ldr	r3, [r7, #8]
 8008f62:	691b      	ldr	r3, [r3, #16]
 8008f64:	2b02      	cmp	r3, #2
 8008f66:	d007      	beq.n	8008f78 <LTDC_SetConfig+0x260>
 8008f68:	68bb      	ldr	r3, [r7, #8]
 8008f6a:	691b      	ldr	r3, [r3, #16]
 8008f6c:	2b03      	cmp	r3, #3
 8008f6e:	d003      	beq.n	8008f78 <LTDC_SetConfig+0x260>
 8008f70:	68bb      	ldr	r3, [r7, #8]
 8008f72:	691b      	ldr	r3, [r3, #16]
 8008f74:	2b07      	cmp	r3, #7
 8008f76:	d102      	bne.n	8008f7e <LTDC_SetConfig+0x266>
 8008f78:	2302      	movs	r3, #2
 8008f7a:	61fb      	str	r3, [r7, #28]
 8008f7c:	e001      	b.n	8008f82 <LTDC_SetConfig+0x26a>
 8008f7e:	2301      	movs	r3, #1
 8008f80:	61fb      	str	r3, [r7, #28]
 8008f82:	68fb      	ldr	r3, [r7, #12]
 8008f84:	681b      	ldr	r3, [r3, #0]
 8008f86:	461a      	mov	r2, r3
 8008f88:	687b      	ldr	r3, [r7, #4]
 8008f8a:	01db      	lsls	r3, r3, #7
 8008f8c:	4413      	add	r3, r2
 8008f8e:	3384      	adds	r3, #132	; 0x84
 8008f90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f92:	68fa      	ldr	r2, [r7, #12]
 8008f94:	6812      	ldr	r2, [r2, #0]
 8008f96:	4611      	mov	r1, r2
 8008f98:	687a      	ldr	r2, [r7, #4]
 8008f9a:	01d2      	lsls	r2, r2, #7
 8008f9c:	440a      	add	r2, r1
 8008f9e:	3284      	adds	r2, #132	; 0x84
 8008fa0:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8008fa4:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008fa6:	68bb      	ldr	r3, [r7, #8]
 8008fa8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008faa:	69fa      	ldr	r2, [r7, #28]
 8008fac:	fb02 f303 	mul.w	r3, r2, r3
 8008fb0:	041a      	lsls	r2, r3, #16
 8008fb2:	68bb      	ldr	r3, [r7, #8]
 8008fb4:	6859      	ldr	r1, [r3, #4]
 8008fb6:	68bb      	ldr	r3, [r7, #8]
 8008fb8:	681b      	ldr	r3, [r3, #0]
 8008fba:	1acb      	subs	r3, r1, r3
 8008fbc:	69f9      	ldr	r1, [r7, #28]
 8008fbe:	fb01 f303 	mul.w	r3, r1, r3
 8008fc2:	3303      	adds	r3, #3
 8008fc4:	68f9      	ldr	r1, [r7, #12]
 8008fc6:	6809      	ldr	r1, [r1, #0]
 8008fc8:	4608      	mov	r0, r1
 8008fca:	6879      	ldr	r1, [r7, #4]
 8008fcc:	01c9      	lsls	r1, r1, #7
 8008fce:	4401      	add	r1, r0
 8008fd0:	3184      	adds	r1, #132	; 0x84
 8008fd2:	4313      	orrs	r3, r2
 8008fd4:	62cb      	str	r3, [r1, #44]	; 0x2c
 8008fd6:	68fb      	ldr	r3, [r7, #12]
 8008fd8:	681b      	ldr	r3, [r3, #0]
 8008fda:	461a      	mov	r2, r3
 8008fdc:	687b      	ldr	r3, [r7, #4]
 8008fde:	01db      	lsls	r3, r3, #7
 8008fe0:	4413      	add	r3, r2
 8008fe2:	3384      	adds	r3, #132	; 0x84
 8008fe4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008fe6:	68fb      	ldr	r3, [r7, #12]
 8008fe8:	681b      	ldr	r3, [r3, #0]
 8008fea:	4619      	mov	r1, r3
 8008fec:	687b      	ldr	r3, [r7, #4]
 8008fee:	01db      	lsls	r3, r3, #7
 8008ff0:	440b      	add	r3, r1
 8008ff2:	3384      	adds	r3, #132	; 0x84
 8008ff4:	4619      	mov	r1, r3
 8008ff6:	4b14      	ldr	r3, [pc, #80]	; (8009048 <LTDC_SetConfig+0x330>)
 8008ff8:	4013      	ands	r3, r2
 8008ffa:	630b      	str	r3, [r1, #48]	; 0x30
 8008ffc:	68fb      	ldr	r3, [r7, #12]
 8008ffe:	681b      	ldr	r3, [r3, #0]
 8009000:	461a      	mov	r2, r3
 8009002:	687b      	ldr	r3, [r7, #4]
 8009004:	01db      	lsls	r3, r3, #7
 8009006:	4413      	add	r3, r2
 8009008:	3384      	adds	r3, #132	; 0x84
 800900a:	461a      	mov	r2, r3
 800900c:	68bb      	ldr	r3, [r7, #8]
 800900e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009010:	6313      	str	r3, [r2, #48]	; 0x30
 8009012:	68fb      	ldr	r3, [r7, #12]
 8009014:	681b      	ldr	r3, [r3, #0]
 8009016:	461a      	mov	r2, r3
 8009018:	687b      	ldr	r3, [r7, #4]
 800901a:	01db      	lsls	r3, r3, #7
 800901c:	4413      	add	r3, r2
 800901e:	3384      	adds	r3, #132	; 0x84
 8009020:	681b      	ldr	r3, [r3, #0]
 8009022:	68fa      	ldr	r2, [r7, #12]
 8009024:	6812      	ldr	r2, [r2, #0]
 8009026:	4611      	mov	r1, r2
 8009028:	687a      	ldr	r2, [r7, #4]
 800902a:	01d2      	lsls	r2, r2, #7
 800902c:	440a      	add	r2, r1
 800902e:	3284      	adds	r2, #132	; 0x84
 8009030:	f043 0301 	orr.w	r3, r3, #1
 8009034:	6013      	str	r3, [r2, #0]
 8009036:	bf00      	nop
 8009038:	3724      	adds	r7, #36	; 0x24
 800903a:	46bd      	mov	sp, r7
 800903c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009040:	4770      	bx	lr
 8009042:	bf00      	nop
 8009044:	fffff8f8 	.word	0xfffff8f8
 8009048:	fffff800 	.word	0xfffff800

0800904c <HAL_PWR_EnableBkUpAccess>:
 800904c:	b480      	push	{r7}
 800904e:	af00      	add	r7, sp, #0
 8009050:	4b05      	ldr	r3, [pc, #20]	; (8009068 <HAL_PWR_EnableBkUpAccess+0x1c>)
 8009052:	681b      	ldr	r3, [r3, #0]
 8009054:	4a04      	ldr	r2, [pc, #16]	; (8009068 <HAL_PWR_EnableBkUpAccess+0x1c>)
 8009056:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800905a:	6013      	str	r3, [r2, #0]
 800905c:	bf00      	nop
 800905e:	46bd      	mov	sp, r7
 8009060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009064:	4770      	bx	lr
 8009066:	bf00      	nop
 8009068:	40007000 	.word	0x40007000

0800906c <HAL_PWREx_EnableOverDrive>:
 800906c:	b580      	push	{r7, lr}
 800906e:	b082      	sub	sp, #8
 8009070:	af00      	add	r7, sp, #0
 8009072:	2300      	movs	r3, #0
 8009074:	607b      	str	r3, [r7, #4]
 8009076:	4b23      	ldr	r3, [pc, #140]	; (8009104 <HAL_PWREx_EnableOverDrive+0x98>)
 8009078:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800907a:	4a22      	ldr	r2, [pc, #136]	; (8009104 <HAL_PWREx_EnableOverDrive+0x98>)
 800907c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009080:	6413      	str	r3, [r2, #64]	; 0x40
 8009082:	4b20      	ldr	r3, [pc, #128]	; (8009104 <HAL_PWREx_EnableOverDrive+0x98>)
 8009084:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009086:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800908a:	603b      	str	r3, [r7, #0]
 800908c:	683b      	ldr	r3, [r7, #0]
 800908e:	4b1e      	ldr	r3, [pc, #120]	; (8009108 <HAL_PWREx_EnableOverDrive+0x9c>)
 8009090:	681b      	ldr	r3, [r3, #0]
 8009092:	4a1d      	ldr	r2, [pc, #116]	; (8009108 <HAL_PWREx_EnableOverDrive+0x9c>)
 8009094:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009098:	6013      	str	r3, [r2, #0]
 800909a:	f7fd f98f 	bl	80063bc <HAL_GetTick>
 800909e:	6078      	str	r0, [r7, #4]
 80090a0:	e009      	b.n	80090b6 <HAL_PWREx_EnableOverDrive+0x4a>
 80090a2:	f7fd f98b 	bl	80063bc <HAL_GetTick>
 80090a6:	4602      	mov	r2, r0
 80090a8:	687b      	ldr	r3, [r7, #4]
 80090aa:	1ad3      	subs	r3, r2, r3
 80090ac:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80090b0:	d901      	bls.n	80090b6 <HAL_PWREx_EnableOverDrive+0x4a>
 80090b2:	2303      	movs	r3, #3
 80090b4:	e022      	b.n	80090fc <HAL_PWREx_EnableOverDrive+0x90>
 80090b6:	4b14      	ldr	r3, [pc, #80]	; (8009108 <HAL_PWREx_EnableOverDrive+0x9c>)
 80090b8:	685b      	ldr	r3, [r3, #4]
 80090ba:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80090be:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80090c2:	d1ee      	bne.n	80090a2 <HAL_PWREx_EnableOverDrive+0x36>
 80090c4:	4b10      	ldr	r3, [pc, #64]	; (8009108 <HAL_PWREx_EnableOverDrive+0x9c>)
 80090c6:	681b      	ldr	r3, [r3, #0]
 80090c8:	4a0f      	ldr	r2, [pc, #60]	; (8009108 <HAL_PWREx_EnableOverDrive+0x9c>)
 80090ca:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80090ce:	6013      	str	r3, [r2, #0]
 80090d0:	f7fd f974 	bl	80063bc <HAL_GetTick>
 80090d4:	6078      	str	r0, [r7, #4]
 80090d6:	e009      	b.n	80090ec <HAL_PWREx_EnableOverDrive+0x80>
 80090d8:	f7fd f970 	bl	80063bc <HAL_GetTick>
 80090dc:	4602      	mov	r2, r0
 80090de:	687b      	ldr	r3, [r7, #4]
 80090e0:	1ad3      	subs	r3, r2, r3
 80090e2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80090e6:	d901      	bls.n	80090ec <HAL_PWREx_EnableOverDrive+0x80>
 80090e8:	2303      	movs	r3, #3
 80090ea:	e007      	b.n	80090fc <HAL_PWREx_EnableOverDrive+0x90>
 80090ec:	4b06      	ldr	r3, [pc, #24]	; (8009108 <HAL_PWREx_EnableOverDrive+0x9c>)
 80090ee:	685b      	ldr	r3, [r3, #4]
 80090f0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80090f4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80090f8:	d1ee      	bne.n	80090d8 <HAL_PWREx_EnableOverDrive+0x6c>
 80090fa:	2300      	movs	r3, #0
 80090fc:	4618      	mov	r0, r3
 80090fe:	3708      	adds	r7, #8
 8009100:	46bd      	mov	sp, r7
 8009102:	bd80      	pop	{r7, pc}
 8009104:	40023800 	.word	0x40023800
 8009108:	40007000 	.word	0x40007000

0800910c <HAL_RCC_OscConfig>:
 800910c:	b580      	push	{r7, lr}
 800910e:	b086      	sub	sp, #24
 8009110:	af00      	add	r7, sp, #0
 8009112:	6078      	str	r0, [r7, #4]
 8009114:	2300      	movs	r3, #0
 8009116:	75fb      	strb	r3, [r7, #23]
 8009118:	687b      	ldr	r3, [r7, #4]
 800911a:	2b00      	cmp	r3, #0
 800911c:	d101      	bne.n	8009122 <HAL_RCC_OscConfig+0x16>
 800911e:	2301      	movs	r3, #1
 8009120:	e291      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 8009122:	687b      	ldr	r3, [r7, #4]
 8009124:	681b      	ldr	r3, [r3, #0]
 8009126:	f003 0301 	and.w	r3, r3, #1
 800912a:	2b00      	cmp	r3, #0
 800912c:	f000 8087 	beq.w	800923e <HAL_RCC_OscConfig+0x132>
 8009130:	4b96      	ldr	r3, [pc, #600]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009132:	689b      	ldr	r3, [r3, #8]
 8009134:	f003 030c 	and.w	r3, r3, #12
 8009138:	2b04      	cmp	r3, #4
 800913a:	d00c      	beq.n	8009156 <HAL_RCC_OscConfig+0x4a>
 800913c:	4b93      	ldr	r3, [pc, #588]	; (800938c <HAL_RCC_OscConfig+0x280>)
 800913e:	689b      	ldr	r3, [r3, #8]
 8009140:	f003 030c 	and.w	r3, r3, #12
 8009144:	2b08      	cmp	r3, #8
 8009146:	d112      	bne.n	800916e <HAL_RCC_OscConfig+0x62>
 8009148:	4b90      	ldr	r3, [pc, #576]	; (800938c <HAL_RCC_OscConfig+0x280>)
 800914a:	685b      	ldr	r3, [r3, #4]
 800914c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009150:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009154:	d10b      	bne.n	800916e <HAL_RCC_OscConfig+0x62>
 8009156:	4b8d      	ldr	r3, [pc, #564]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009158:	681b      	ldr	r3, [r3, #0]
 800915a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800915e:	2b00      	cmp	r3, #0
 8009160:	d06c      	beq.n	800923c <HAL_RCC_OscConfig+0x130>
 8009162:	687b      	ldr	r3, [r7, #4]
 8009164:	685b      	ldr	r3, [r3, #4]
 8009166:	2b00      	cmp	r3, #0
 8009168:	d168      	bne.n	800923c <HAL_RCC_OscConfig+0x130>
 800916a:	2301      	movs	r3, #1
 800916c:	e26b      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 800916e:	687b      	ldr	r3, [r7, #4]
 8009170:	685b      	ldr	r3, [r3, #4]
 8009172:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009176:	d106      	bne.n	8009186 <HAL_RCC_OscConfig+0x7a>
 8009178:	4b84      	ldr	r3, [pc, #528]	; (800938c <HAL_RCC_OscConfig+0x280>)
 800917a:	681b      	ldr	r3, [r3, #0]
 800917c:	4a83      	ldr	r2, [pc, #524]	; (800938c <HAL_RCC_OscConfig+0x280>)
 800917e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009182:	6013      	str	r3, [r2, #0]
 8009184:	e02e      	b.n	80091e4 <HAL_RCC_OscConfig+0xd8>
 8009186:	687b      	ldr	r3, [r7, #4]
 8009188:	685b      	ldr	r3, [r3, #4]
 800918a:	2b00      	cmp	r3, #0
 800918c:	d10c      	bne.n	80091a8 <HAL_RCC_OscConfig+0x9c>
 800918e:	4b7f      	ldr	r3, [pc, #508]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009190:	681b      	ldr	r3, [r3, #0]
 8009192:	4a7e      	ldr	r2, [pc, #504]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009194:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009198:	6013      	str	r3, [r2, #0]
 800919a:	4b7c      	ldr	r3, [pc, #496]	; (800938c <HAL_RCC_OscConfig+0x280>)
 800919c:	681b      	ldr	r3, [r3, #0]
 800919e:	4a7b      	ldr	r2, [pc, #492]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80091a0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80091a4:	6013      	str	r3, [r2, #0]
 80091a6:	e01d      	b.n	80091e4 <HAL_RCC_OscConfig+0xd8>
 80091a8:	687b      	ldr	r3, [r7, #4]
 80091aa:	685b      	ldr	r3, [r3, #4]
 80091ac:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80091b0:	d10c      	bne.n	80091cc <HAL_RCC_OscConfig+0xc0>
 80091b2:	4b76      	ldr	r3, [pc, #472]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80091b4:	681b      	ldr	r3, [r3, #0]
 80091b6:	4a75      	ldr	r2, [pc, #468]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80091b8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80091bc:	6013      	str	r3, [r2, #0]
 80091be:	4b73      	ldr	r3, [pc, #460]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80091c0:	681b      	ldr	r3, [r3, #0]
 80091c2:	4a72      	ldr	r2, [pc, #456]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80091c4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80091c8:	6013      	str	r3, [r2, #0]
 80091ca:	e00b      	b.n	80091e4 <HAL_RCC_OscConfig+0xd8>
 80091cc:	4b6f      	ldr	r3, [pc, #444]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80091ce:	681b      	ldr	r3, [r3, #0]
 80091d0:	4a6e      	ldr	r2, [pc, #440]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80091d2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80091d6:	6013      	str	r3, [r2, #0]
 80091d8:	4b6c      	ldr	r3, [pc, #432]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80091da:	681b      	ldr	r3, [r3, #0]
 80091dc:	4a6b      	ldr	r2, [pc, #428]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80091de:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80091e2:	6013      	str	r3, [r2, #0]
 80091e4:	687b      	ldr	r3, [r7, #4]
 80091e6:	685b      	ldr	r3, [r3, #4]
 80091e8:	2b00      	cmp	r3, #0
 80091ea:	d013      	beq.n	8009214 <HAL_RCC_OscConfig+0x108>
 80091ec:	f7fd f8e6 	bl	80063bc <HAL_GetTick>
 80091f0:	6138      	str	r0, [r7, #16]
 80091f2:	e008      	b.n	8009206 <HAL_RCC_OscConfig+0xfa>
 80091f4:	f7fd f8e2 	bl	80063bc <HAL_GetTick>
 80091f8:	4602      	mov	r2, r0
 80091fa:	693b      	ldr	r3, [r7, #16]
 80091fc:	1ad3      	subs	r3, r2, r3
 80091fe:	2b64      	cmp	r3, #100	; 0x64
 8009200:	d901      	bls.n	8009206 <HAL_RCC_OscConfig+0xfa>
 8009202:	2303      	movs	r3, #3
 8009204:	e21f      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 8009206:	4b61      	ldr	r3, [pc, #388]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009208:	681b      	ldr	r3, [r3, #0]
 800920a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800920e:	2b00      	cmp	r3, #0
 8009210:	d0f0      	beq.n	80091f4 <HAL_RCC_OscConfig+0xe8>
 8009212:	e014      	b.n	800923e <HAL_RCC_OscConfig+0x132>
 8009214:	f7fd f8d2 	bl	80063bc <HAL_GetTick>
 8009218:	6138      	str	r0, [r7, #16]
 800921a:	e008      	b.n	800922e <HAL_RCC_OscConfig+0x122>
 800921c:	f7fd f8ce 	bl	80063bc <HAL_GetTick>
 8009220:	4602      	mov	r2, r0
 8009222:	693b      	ldr	r3, [r7, #16]
 8009224:	1ad3      	subs	r3, r2, r3
 8009226:	2b64      	cmp	r3, #100	; 0x64
 8009228:	d901      	bls.n	800922e <HAL_RCC_OscConfig+0x122>
 800922a:	2303      	movs	r3, #3
 800922c:	e20b      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 800922e:	4b57      	ldr	r3, [pc, #348]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009230:	681b      	ldr	r3, [r3, #0]
 8009232:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009236:	2b00      	cmp	r3, #0
 8009238:	d1f0      	bne.n	800921c <HAL_RCC_OscConfig+0x110>
 800923a:	e000      	b.n	800923e <HAL_RCC_OscConfig+0x132>
 800923c:	bf00      	nop
 800923e:	687b      	ldr	r3, [r7, #4]
 8009240:	681b      	ldr	r3, [r3, #0]
 8009242:	f003 0302 	and.w	r3, r3, #2
 8009246:	2b00      	cmp	r3, #0
 8009248:	d069      	beq.n	800931e <HAL_RCC_OscConfig+0x212>
 800924a:	4b50      	ldr	r3, [pc, #320]	; (800938c <HAL_RCC_OscConfig+0x280>)
 800924c:	689b      	ldr	r3, [r3, #8]
 800924e:	f003 030c 	and.w	r3, r3, #12
 8009252:	2b00      	cmp	r3, #0
 8009254:	d00b      	beq.n	800926e <HAL_RCC_OscConfig+0x162>
 8009256:	4b4d      	ldr	r3, [pc, #308]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009258:	689b      	ldr	r3, [r3, #8]
 800925a:	f003 030c 	and.w	r3, r3, #12
 800925e:	2b08      	cmp	r3, #8
 8009260:	d11c      	bne.n	800929c <HAL_RCC_OscConfig+0x190>
 8009262:	4b4a      	ldr	r3, [pc, #296]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009264:	685b      	ldr	r3, [r3, #4]
 8009266:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800926a:	2b00      	cmp	r3, #0
 800926c:	d116      	bne.n	800929c <HAL_RCC_OscConfig+0x190>
 800926e:	4b47      	ldr	r3, [pc, #284]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009270:	681b      	ldr	r3, [r3, #0]
 8009272:	f003 0302 	and.w	r3, r3, #2
 8009276:	2b00      	cmp	r3, #0
 8009278:	d005      	beq.n	8009286 <HAL_RCC_OscConfig+0x17a>
 800927a:	687b      	ldr	r3, [r7, #4]
 800927c:	68db      	ldr	r3, [r3, #12]
 800927e:	2b01      	cmp	r3, #1
 8009280:	d001      	beq.n	8009286 <HAL_RCC_OscConfig+0x17a>
 8009282:	2301      	movs	r3, #1
 8009284:	e1df      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 8009286:	4b41      	ldr	r3, [pc, #260]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009288:	681b      	ldr	r3, [r3, #0]
 800928a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800928e:	687b      	ldr	r3, [r7, #4]
 8009290:	691b      	ldr	r3, [r3, #16]
 8009292:	00db      	lsls	r3, r3, #3
 8009294:	493d      	ldr	r1, [pc, #244]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009296:	4313      	orrs	r3, r2
 8009298:	600b      	str	r3, [r1, #0]
 800929a:	e040      	b.n	800931e <HAL_RCC_OscConfig+0x212>
 800929c:	687b      	ldr	r3, [r7, #4]
 800929e:	68db      	ldr	r3, [r3, #12]
 80092a0:	2b00      	cmp	r3, #0
 80092a2:	d023      	beq.n	80092ec <HAL_RCC_OscConfig+0x1e0>
 80092a4:	4b39      	ldr	r3, [pc, #228]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80092a6:	681b      	ldr	r3, [r3, #0]
 80092a8:	4a38      	ldr	r2, [pc, #224]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80092aa:	f043 0301 	orr.w	r3, r3, #1
 80092ae:	6013      	str	r3, [r2, #0]
 80092b0:	f7fd f884 	bl	80063bc <HAL_GetTick>
 80092b4:	6138      	str	r0, [r7, #16]
 80092b6:	e008      	b.n	80092ca <HAL_RCC_OscConfig+0x1be>
 80092b8:	f7fd f880 	bl	80063bc <HAL_GetTick>
 80092bc:	4602      	mov	r2, r0
 80092be:	693b      	ldr	r3, [r7, #16]
 80092c0:	1ad3      	subs	r3, r2, r3
 80092c2:	2b02      	cmp	r3, #2
 80092c4:	d901      	bls.n	80092ca <HAL_RCC_OscConfig+0x1be>
 80092c6:	2303      	movs	r3, #3
 80092c8:	e1bd      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 80092ca:	4b30      	ldr	r3, [pc, #192]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80092cc:	681b      	ldr	r3, [r3, #0]
 80092ce:	f003 0302 	and.w	r3, r3, #2
 80092d2:	2b00      	cmp	r3, #0
 80092d4:	d0f0      	beq.n	80092b8 <HAL_RCC_OscConfig+0x1ac>
 80092d6:	4b2d      	ldr	r3, [pc, #180]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80092d8:	681b      	ldr	r3, [r3, #0]
 80092da:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80092de:	687b      	ldr	r3, [r7, #4]
 80092e0:	691b      	ldr	r3, [r3, #16]
 80092e2:	00db      	lsls	r3, r3, #3
 80092e4:	4929      	ldr	r1, [pc, #164]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80092e6:	4313      	orrs	r3, r2
 80092e8:	600b      	str	r3, [r1, #0]
 80092ea:	e018      	b.n	800931e <HAL_RCC_OscConfig+0x212>
 80092ec:	4b27      	ldr	r3, [pc, #156]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80092ee:	681b      	ldr	r3, [r3, #0]
 80092f0:	4a26      	ldr	r2, [pc, #152]	; (800938c <HAL_RCC_OscConfig+0x280>)
 80092f2:	f023 0301 	bic.w	r3, r3, #1
 80092f6:	6013      	str	r3, [r2, #0]
 80092f8:	f7fd f860 	bl	80063bc <HAL_GetTick>
 80092fc:	6138      	str	r0, [r7, #16]
 80092fe:	e008      	b.n	8009312 <HAL_RCC_OscConfig+0x206>
 8009300:	f7fd f85c 	bl	80063bc <HAL_GetTick>
 8009304:	4602      	mov	r2, r0
 8009306:	693b      	ldr	r3, [r7, #16]
 8009308:	1ad3      	subs	r3, r2, r3
 800930a:	2b02      	cmp	r3, #2
 800930c:	d901      	bls.n	8009312 <HAL_RCC_OscConfig+0x206>
 800930e:	2303      	movs	r3, #3
 8009310:	e199      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 8009312:	4b1e      	ldr	r3, [pc, #120]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009314:	681b      	ldr	r3, [r3, #0]
 8009316:	f003 0302 	and.w	r3, r3, #2
 800931a:	2b00      	cmp	r3, #0
 800931c:	d1f0      	bne.n	8009300 <HAL_RCC_OscConfig+0x1f4>
 800931e:	687b      	ldr	r3, [r7, #4]
 8009320:	681b      	ldr	r3, [r3, #0]
 8009322:	f003 0308 	and.w	r3, r3, #8
 8009326:	2b00      	cmp	r3, #0
 8009328:	d038      	beq.n	800939c <HAL_RCC_OscConfig+0x290>
 800932a:	687b      	ldr	r3, [r7, #4]
 800932c:	695b      	ldr	r3, [r3, #20]
 800932e:	2b00      	cmp	r3, #0
 8009330:	d019      	beq.n	8009366 <HAL_RCC_OscConfig+0x25a>
 8009332:	4b16      	ldr	r3, [pc, #88]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009334:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009336:	4a15      	ldr	r2, [pc, #84]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009338:	f043 0301 	orr.w	r3, r3, #1
 800933c:	6753      	str	r3, [r2, #116]	; 0x74
 800933e:	f7fd f83d 	bl	80063bc <HAL_GetTick>
 8009342:	6138      	str	r0, [r7, #16]
 8009344:	e008      	b.n	8009358 <HAL_RCC_OscConfig+0x24c>
 8009346:	f7fd f839 	bl	80063bc <HAL_GetTick>
 800934a:	4602      	mov	r2, r0
 800934c:	693b      	ldr	r3, [r7, #16]
 800934e:	1ad3      	subs	r3, r2, r3
 8009350:	2b02      	cmp	r3, #2
 8009352:	d901      	bls.n	8009358 <HAL_RCC_OscConfig+0x24c>
 8009354:	2303      	movs	r3, #3
 8009356:	e176      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 8009358:	4b0c      	ldr	r3, [pc, #48]	; (800938c <HAL_RCC_OscConfig+0x280>)
 800935a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800935c:	f003 0302 	and.w	r3, r3, #2
 8009360:	2b00      	cmp	r3, #0
 8009362:	d0f0      	beq.n	8009346 <HAL_RCC_OscConfig+0x23a>
 8009364:	e01a      	b.n	800939c <HAL_RCC_OscConfig+0x290>
 8009366:	4b09      	ldr	r3, [pc, #36]	; (800938c <HAL_RCC_OscConfig+0x280>)
 8009368:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800936a:	4a08      	ldr	r2, [pc, #32]	; (800938c <HAL_RCC_OscConfig+0x280>)
 800936c:	f023 0301 	bic.w	r3, r3, #1
 8009370:	6753      	str	r3, [r2, #116]	; 0x74
 8009372:	f7fd f823 	bl	80063bc <HAL_GetTick>
 8009376:	6138      	str	r0, [r7, #16]
 8009378:	e00a      	b.n	8009390 <HAL_RCC_OscConfig+0x284>
 800937a:	f7fd f81f 	bl	80063bc <HAL_GetTick>
 800937e:	4602      	mov	r2, r0
 8009380:	693b      	ldr	r3, [r7, #16]
 8009382:	1ad3      	subs	r3, r2, r3
 8009384:	2b02      	cmp	r3, #2
 8009386:	d903      	bls.n	8009390 <HAL_RCC_OscConfig+0x284>
 8009388:	2303      	movs	r3, #3
 800938a:	e15c      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 800938c:	40023800 	.word	0x40023800
 8009390:	4b91      	ldr	r3, [pc, #580]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009392:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009394:	f003 0302 	and.w	r3, r3, #2
 8009398:	2b00      	cmp	r3, #0
 800939a:	d1ee      	bne.n	800937a <HAL_RCC_OscConfig+0x26e>
 800939c:	687b      	ldr	r3, [r7, #4]
 800939e:	681b      	ldr	r3, [r3, #0]
 80093a0:	f003 0304 	and.w	r3, r3, #4
 80093a4:	2b00      	cmp	r3, #0
 80093a6:	f000 80a4 	beq.w	80094f2 <HAL_RCC_OscConfig+0x3e6>
 80093aa:	4b8b      	ldr	r3, [pc, #556]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80093ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80093ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80093b2:	2b00      	cmp	r3, #0
 80093b4:	d10d      	bne.n	80093d2 <HAL_RCC_OscConfig+0x2c6>
 80093b6:	4b88      	ldr	r3, [pc, #544]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80093b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80093ba:	4a87      	ldr	r2, [pc, #540]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80093bc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80093c0:	6413      	str	r3, [r2, #64]	; 0x40
 80093c2:	4b85      	ldr	r3, [pc, #532]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80093c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80093c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80093ca:	60bb      	str	r3, [r7, #8]
 80093cc:	68bb      	ldr	r3, [r7, #8]
 80093ce:	2301      	movs	r3, #1
 80093d0:	75fb      	strb	r3, [r7, #23]
 80093d2:	4b82      	ldr	r3, [pc, #520]	; (80095dc <HAL_RCC_OscConfig+0x4d0>)
 80093d4:	681b      	ldr	r3, [r3, #0]
 80093d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80093da:	2b00      	cmp	r3, #0
 80093dc:	d118      	bne.n	8009410 <HAL_RCC_OscConfig+0x304>
 80093de:	4b7f      	ldr	r3, [pc, #508]	; (80095dc <HAL_RCC_OscConfig+0x4d0>)
 80093e0:	681b      	ldr	r3, [r3, #0]
 80093e2:	4a7e      	ldr	r2, [pc, #504]	; (80095dc <HAL_RCC_OscConfig+0x4d0>)
 80093e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80093e8:	6013      	str	r3, [r2, #0]
 80093ea:	f7fc ffe7 	bl	80063bc <HAL_GetTick>
 80093ee:	6138      	str	r0, [r7, #16]
 80093f0:	e008      	b.n	8009404 <HAL_RCC_OscConfig+0x2f8>
 80093f2:	f7fc ffe3 	bl	80063bc <HAL_GetTick>
 80093f6:	4602      	mov	r2, r0
 80093f8:	693b      	ldr	r3, [r7, #16]
 80093fa:	1ad3      	subs	r3, r2, r3
 80093fc:	2b64      	cmp	r3, #100	; 0x64
 80093fe:	d901      	bls.n	8009404 <HAL_RCC_OscConfig+0x2f8>
 8009400:	2303      	movs	r3, #3
 8009402:	e120      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 8009404:	4b75      	ldr	r3, [pc, #468]	; (80095dc <HAL_RCC_OscConfig+0x4d0>)
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800940c:	2b00      	cmp	r3, #0
 800940e:	d0f0      	beq.n	80093f2 <HAL_RCC_OscConfig+0x2e6>
 8009410:	687b      	ldr	r3, [r7, #4]
 8009412:	689b      	ldr	r3, [r3, #8]
 8009414:	2b01      	cmp	r3, #1
 8009416:	d106      	bne.n	8009426 <HAL_RCC_OscConfig+0x31a>
 8009418:	4b6f      	ldr	r3, [pc, #444]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 800941a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800941c:	4a6e      	ldr	r2, [pc, #440]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 800941e:	f043 0301 	orr.w	r3, r3, #1
 8009422:	6713      	str	r3, [r2, #112]	; 0x70
 8009424:	e02d      	b.n	8009482 <HAL_RCC_OscConfig+0x376>
 8009426:	687b      	ldr	r3, [r7, #4]
 8009428:	689b      	ldr	r3, [r3, #8]
 800942a:	2b00      	cmp	r3, #0
 800942c:	d10c      	bne.n	8009448 <HAL_RCC_OscConfig+0x33c>
 800942e:	4b6a      	ldr	r3, [pc, #424]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009430:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009432:	4a69      	ldr	r2, [pc, #420]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009434:	f023 0301 	bic.w	r3, r3, #1
 8009438:	6713      	str	r3, [r2, #112]	; 0x70
 800943a:	4b67      	ldr	r3, [pc, #412]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 800943c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800943e:	4a66      	ldr	r2, [pc, #408]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009440:	f023 0304 	bic.w	r3, r3, #4
 8009444:	6713      	str	r3, [r2, #112]	; 0x70
 8009446:	e01c      	b.n	8009482 <HAL_RCC_OscConfig+0x376>
 8009448:	687b      	ldr	r3, [r7, #4]
 800944a:	689b      	ldr	r3, [r3, #8]
 800944c:	2b05      	cmp	r3, #5
 800944e:	d10c      	bne.n	800946a <HAL_RCC_OscConfig+0x35e>
 8009450:	4b61      	ldr	r3, [pc, #388]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009452:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009454:	4a60      	ldr	r2, [pc, #384]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009456:	f043 0304 	orr.w	r3, r3, #4
 800945a:	6713      	str	r3, [r2, #112]	; 0x70
 800945c:	4b5e      	ldr	r3, [pc, #376]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 800945e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009460:	4a5d      	ldr	r2, [pc, #372]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009462:	f043 0301 	orr.w	r3, r3, #1
 8009466:	6713      	str	r3, [r2, #112]	; 0x70
 8009468:	e00b      	b.n	8009482 <HAL_RCC_OscConfig+0x376>
 800946a:	4b5b      	ldr	r3, [pc, #364]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 800946c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800946e:	4a5a      	ldr	r2, [pc, #360]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009470:	f023 0301 	bic.w	r3, r3, #1
 8009474:	6713      	str	r3, [r2, #112]	; 0x70
 8009476:	4b58      	ldr	r3, [pc, #352]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009478:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800947a:	4a57      	ldr	r2, [pc, #348]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 800947c:	f023 0304 	bic.w	r3, r3, #4
 8009480:	6713      	str	r3, [r2, #112]	; 0x70
 8009482:	687b      	ldr	r3, [r7, #4]
 8009484:	689b      	ldr	r3, [r3, #8]
 8009486:	2b00      	cmp	r3, #0
 8009488:	d015      	beq.n	80094b6 <HAL_RCC_OscConfig+0x3aa>
 800948a:	f7fc ff97 	bl	80063bc <HAL_GetTick>
 800948e:	6138      	str	r0, [r7, #16]
 8009490:	e00a      	b.n	80094a8 <HAL_RCC_OscConfig+0x39c>
 8009492:	f7fc ff93 	bl	80063bc <HAL_GetTick>
 8009496:	4602      	mov	r2, r0
 8009498:	693b      	ldr	r3, [r7, #16]
 800949a:	1ad3      	subs	r3, r2, r3
 800949c:	f241 3288 	movw	r2, #5000	; 0x1388
 80094a0:	4293      	cmp	r3, r2
 80094a2:	d901      	bls.n	80094a8 <HAL_RCC_OscConfig+0x39c>
 80094a4:	2303      	movs	r3, #3
 80094a6:	e0ce      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 80094a8:	4b4b      	ldr	r3, [pc, #300]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80094aa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80094ac:	f003 0302 	and.w	r3, r3, #2
 80094b0:	2b00      	cmp	r3, #0
 80094b2:	d0ee      	beq.n	8009492 <HAL_RCC_OscConfig+0x386>
 80094b4:	e014      	b.n	80094e0 <HAL_RCC_OscConfig+0x3d4>
 80094b6:	f7fc ff81 	bl	80063bc <HAL_GetTick>
 80094ba:	6138      	str	r0, [r7, #16]
 80094bc:	e00a      	b.n	80094d4 <HAL_RCC_OscConfig+0x3c8>
 80094be:	f7fc ff7d 	bl	80063bc <HAL_GetTick>
 80094c2:	4602      	mov	r2, r0
 80094c4:	693b      	ldr	r3, [r7, #16]
 80094c6:	1ad3      	subs	r3, r2, r3
 80094c8:	f241 3288 	movw	r2, #5000	; 0x1388
 80094cc:	4293      	cmp	r3, r2
 80094ce:	d901      	bls.n	80094d4 <HAL_RCC_OscConfig+0x3c8>
 80094d0:	2303      	movs	r3, #3
 80094d2:	e0b8      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 80094d4:	4b40      	ldr	r3, [pc, #256]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80094d6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80094d8:	f003 0302 	and.w	r3, r3, #2
 80094dc:	2b00      	cmp	r3, #0
 80094de:	d1ee      	bne.n	80094be <HAL_RCC_OscConfig+0x3b2>
 80094e0:	7dfb      	ldrb	r3, [r7, #23]
 80094e2:	2b01      	cmp	r3, #1
 80094e4:	d105      	bne.n	80094f2 <HAL_RCC_OscConfig+0x3e6>
 80094e6:	4b3c      	ldr	r3, [pc, #240]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80094e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80094ea:	4a3b      	ldr	r2, [pc, #236]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80094ec:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80094f0:	6413      	str	r3, [r2, #64]	; 0x40
 80094f2:	687b      	ldr	r3, [r7, #4]
 80094f4:	699b      	ldr	r3, [r3, #24]
 80094f6:	2b00      	cmp	r3, #0
 80094f8:	f000 80a4 	beq.w	8009644 <HAL_RCC_OscConfig+0x538>
 80094fc:	4b36      	ldr	r3, [pc, #216]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80094fe:	689b      	ldr	r3, [r3, #8]
 8009500:	f003 030c 	and.w	r3, r3, #12
 8009504:	2b08      	cmp	r3, #8
 8009506:	d06b      	beq.n	80095e0 <HAL_RCC_OscConfig+0x4d4>
 8009508:	687b      	ldr	r3, [r7, #4]
 800950a:	699b      	ldr	r3, [r3, #24]
 800950c:	2b02      	cmp	r3, #2
 800950e:	d149      	bne.n	80095a4 <HAL_RCC_OscConfig+0x498>
 8009510:	4b31      	ldr	r3, [pc, #196]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009512:	681b      	ldr	r3, [r3, #0]
 8009514:	4a30      	ldr	r2, [pc, #192]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009516:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800951a:	6013      	str	r3, [r2, #0]
 800951c:	f7fc ff4e 	bl	80063bc <HAL_GetTick>
 8009520:	6138      	str	r0, [r7, #16]
 8009522:	e008      	b.n	8009536 <HAL_RCC_OscConfig+0x42a>
 8009524:	f7fc ff4a 	bl	80063bc <HAL_GetTick>
 8009528:	4602      	mov	r2, r0
 800952a:	693b      	ldr	r3, [r7, #16]
 800952c:	1ad3      	subs	r3, r2, r3
 800952e:	2b02      	cmp	r3, #2
 8009530:	d901      	bls.n	8009536 <HAL_RCC_OscConfig+0x42a>
 8009532:	2303      	movs	r3, #3
 8009534:	e087      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 8009536:	4b28      	ldr	r3, [pc, #160]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009538:	681b      	ldr	r3, [r3, #0]
 800953a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800953e:	2b00      	cmp	r3, #0
 8009540:	d1f0      	bne.n	8009524 <HAL_RCC_OscConfig+0x418>
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	69da      	ldr	r2, [r3, #28]
 8009546:	687b      	ldr	r3, [r7, #4]
 8009548:	6a1b      	ldr	r3, [r3, #32]
 800954a:	431a      	orrs	r2, r3
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009550:	019b      	lsls	r3, r3, #6
 8009552:	431a      	orrs	r2, r3
 8009554:	687b      	ldr	r3, [r7, #4]
 8009556:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009558:	085b      	lsrs	r3, r3, #1
 800955a:	3b01      	subs	r3, #1
 800955c:	041b      	lsls	r3, r3, #16
 800955e:	431a      	orrs	r2, r3
 8009560:	687b      	ldr	r3, [r7, #4]
 8009562:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009564:	061b      	lsls	r3, r3, #24
 8009566:	4313      	orrs	r3, r2
 8009568:	4a1b      	ldr	r2, [pc, #108]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 800956a:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800956e:	6053      	str	r3, [r2, #4]
 8009570:	4b19      	ldr	r3, [pc, #100]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009572:	681b      	ldr	r3, [r3, #0]
 8009574:	4a18      	ldr	r2, [pc, #96]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009576:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800957a:	6013      	str	r3, [r2, #0]
 800957c:	f7fc ff1e 	bl	80063bc <HAL_GetTick>
 8009580:	6138      	str	r0, [r7, #16]
 8009582:	e008      	b.n	8009596 <HAL_RCC_OscConfig+0x48a>
 8009584:	f7fc ff1a 	bl	80063bc <HAL_GetTick>
 8009588:	4602      	mov	r2, r0
 800958a:	693b      	ldr	r3, [r7, #16]
 800958c:	1ad3      	subs	r3, r2, r3
 800958e:	2b02      	cmp	r3, #2
 8009590:	d901      	bls.n	8009596 <HAL_RCC_OscConfig+0x48a>
 8009592:	2303      	movs	r3, #3
 8009594:	e057      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 8009596:	4b10      	ldr	r3, [pc, #64]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 8009598:	681b      	ldr	r3, [r3, #0]
 800959a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800959e:	2b00      	cmp	r3, #0
 80095a0:	d0f0      	beq.n	8009584 <HAL_RCC_OscConfig+0x478>
 80095a2:	e04f      	b.n	8009644 <HAL_RCC_OscConfig+0x538>
 80095a4:	4b0c      	ldr	r3, [pc, #48]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80095a6:	681b      	ldr	r3, [r3, #0]
 80095a8:	4a0b      	ldr	r2, [pc, #44]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80095aa:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80095ae:	6013      	str	r3, [r2, #0]
 80095b0:	f7fc ff04 	bl	80063bc <HAL_GetTick>
 80095b4:	6138      	str	r0, [r7, #16]
 80095b6:	e008      	b.n	80095ca <HAL_RCC_OscConfig+0x4be>
 80095b8:	f7fc ff00 	bl	80063bc <HAL_GetTick>
 80095bc:	4602      	mov	r2, r0
 80095be:	693b      	ldr	r3, [r7, #16]
 80095c0:	1ad3      	subs	r3, r2, r3
 80095c2:	2b02      	cmp	r3, #2
 80095c4:	d901      	bls.n	80095ca <HAL_RCC_OscConfig+0x4be>
 80095c6:	2303      	movs	r3, #3
 80095c8:	e03d      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 80095ca:	4b03      	ldr	r3, [pc, #12]	; (80095d8 <HAL_RCC_OscConfig+0x4cc>)
 80095cc:	681b      	ldr	r3, [r3, #0]
 80095ce:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80095d2:	2b00      	cmp	r3, #0
 80095d4:	d1f0      	bne.n	80095b8 <HAL_RCC_OscConfig+0x4ac>
 80095d6:	e035      	b.n	8009644 <HAL_RCC_OscConfig+0x538>
 80095d8:	40023800 	.word	0x40023800
 80095dc:	40007000 	.word	0x40007000
 80095e0:	4b1b      	ldr	r3, [pc, #108]	; (8009650 <HAL_RCC_OscConfig+0x544>)
 80095e2:	685b      	ldr	r3, [r3, #4]
 80095e4:	60fb      	str	r3, [r7, #12]
 80095e6:	687b      	ldr	r3, [r7, #4]
 80095e8:	699b      	ldr	r3, [r3, #24]
 80095ea:	2b01      	cmp	r3, #1
 80095ec:	d028      	beq.n	8009640 <HAL_RCC_OscConfig+0x534>
 80095ee:	68fb      	ldr	r3, [r7, #12]
 80095f0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80095f4:	687b      	ldr	r3, [r7, #4]
 80095f6:	69db      	ldr	r3, [r3, #28]
 80095f8:	429a      	cmp	r2, r3
 80095fa:	d121      	bne.n	8009640 <HAL_RCC_OscConfig+0x534>
 80095fc:	68fb      	ldr	r3, [r7, #12]
 80095fe:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8009602:	687b      	ldr	r3, [r7, #4]
 8009604:	6a1b      	ldr	r3, [r3, #32]
 8009606:	429a      	cmp	r2, r3
 8009608:	d11a      	bne.n	8009640 <HAL_RCC_OscConfig+0x534>
 800960a:	68fa      	ldr	r2, [r7, #12]
 800960c:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8009610:	4013      	ands	r3, r2
 8009612:	687a      	ldr	r2, [r7, #4]
 8009614:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8009616:	0192      	lsls	r2, r2, #6
 8009618:	4293      	cmp	r3, r2
 800961a:	d111      	bne.n	8009640 <HAL_RCC_OscConfig+0x534>
 800961c:	68fb      	ldr	r3, [r7, #12]
 800961e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8009622:	687b      	ldr	r3, [r7, #4]
 8009624:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009626:	085b      	lsrs	r3, r3, #1
 8009628:	3b01      	subs	r3, #1
 800962a:	041b      	lsls	r3, r3, #16
 800962c:	429a      	cmp	r2, r3
 800962e:	d107      	bne.n	8009640 <HAL_RCC_OscConfig+0x534>
 8009630:	68fb      	ldr	r3, [r7, #12]
 8009632:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8009636:	687b      	ldr	r3, [r7, #4]
 8009638:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800963a:	061b      	lsls	r3, r3, #24
 800963c:	429a      	cmp	r2, r3
 800963e:	d001      	beq.n	8009644 <HAL_RCC_OscConfig+0x538>
 8009640:	2301      	movs	r3, #1
 8009642:	e000      	b.n	8009646 <HAL_RCC_OscConfig+0x53a>
 8009644:	2300      	movs	r3, #0
 8009646:	4618      	mov	r0, r3
 8009648:	3718      	adds	r7, #24
 800964a:	46bd      	mov	sp, r7
 800964c:	bd80      	pop	{r7, pc}
 800964e:	bf00      	nop
 8009650:	40023800 	.word	0x40023800

08009654 <HAL_RCC_ClockConfig>:
 8009654:	b580      	push	{r7, lr}
 8009656:	b084      	sub	sp, #16
 8009658:	af00      	add	r7, sp, #0
 800965a:	6078      	str	r0, [r7, #4]
 800965c:	6039      	str	r1, [r7, #0]
 800965e:	2300      	movs	r3, #0
 8009660:	60fb      	str	r3, [r7, #12]
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	2b00      	cmp	r3, #0
 8009666:	d101      	bne.n	800966c <HAL_RCC_ClockConfig+0x18>
 8009668:	2301      	movs	r3, #1
 800966a:	e0d0      	b.n	800980e <HAL_RCC_ClockConfig+0x1ba>
 800966c:	4b6a      	ldr	r3, [pc, #424]	; (8009818 <HAL_RCC_ClockConfig+0x1c4>)
 800966e:	681b      	ldr	r3, [r3, #0]
 8009670:	f003 030f 	and.w	r3, r3, #15
 8009674:	683a      	ldr	r2, [r7, #0]
 8009676:	429a      	cmp	r2, r3
 8009678:	d910      	bls.n	800969c <HAL_RCC_ClockConfig+0x48>
 800967a:	4b67      	ldr	r3, [pc, #412]	; (8009818 <HAL_RCC_ClockConfig+0x1c4>)
 800967c:	681b      	ldr	r3, [r3, #0]
 800967e:	f023 020f 	bic.w	r2, r3, #15
 8009682:	4965      	ldr	r1, [pc, #404]	; (8009818 <HAL_RCC_ClockConfig+0x1c4>)
 8009684:	683b      	ldr	r3, [r7, #0]
 8009686:	4313      	orrs	r3, r2
 8009688:	600b      	str	r3, [r1, #0]
 800968a:	4b63      	ldr	r3, [pc, #396]	; (8009818 <HAL_RCC_ClockConfig+0x1c4>)
 800968c:	681b      	ldr	r3, [r3, #0]
 800968e:	f003 030f 	and.w	r3, r3, #15
 8009692:	683a      	ldr	r2, [r7, #0]
 8009694:	429a      	cmp	r2, r3
 8009696:	d001      	beq.n	800969c <HAL_RCC_ClockConfig+0x48>
 8009698:	2301      	movs	r3, #1
 800969a:	e0b8      	b.n	800980e <HAL_RCC_ClockConfig+0x1ba>
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	681b      	ldr	r3, [r3, #0]
 80096a0:	f003 0302 	and.w	r3, r3, #2
 80096a4:	2b00      	cmp	r3, #0
 80096a6:	d020      	beq.n	80096ea <HAL_RCC_ClockConfig+0x96>
 80096a8:	687b      	ldr	r3, [r7, #4]
 80096aa:	681b      	ldr	r3, [r3, #0]
 80096ac:	f003 0304 	and.w	r3, r3, #4
 80096b0:	2b00      	cmp	r3, #0
 80096b2:	d005      	beq.n	80096c0 <HAL_RCC_ClockConfig+0x6c>
 80096b4:	4b59      	ldr	r3, [pc, #356]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80096b6:	689b      	ldr	r3, [r3, #8]
 80096b8:	4a58      	ldr	r2, [pc, #352]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80096ba:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80096be:	6093      	str	r3, [r2, #8]
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	681b      	ldr	r3, [r3, #0]
 80096c4:	f003 0308 	and.w	r3, r3, #8
 80096c8:	2b00      	cmp	r3, #0
 80096ca:	d005      	beq.n	80096d8 <HAL_RCC_ClockConfig+0x84>
 80096cc:	4b53      	ldr	r3, [pc, #332]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80096ce:	689b      	ldr	r3, [r3, #8]
 80096d0:	4a52      	ldr	r2, [pc, #328]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80096d2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80096d6:	6093      	str	r3, [r2, #8]
 80096d8:	4b50      	ldr	r3, [pc, #320]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80096da:	689b      	ldr	r3, [r3, #8]
 80096dc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80096e0:	687b      	ldr	r3, [r7, #4]
 80096e2:	689b      	ldr	r3, [r3, #8]
 80096e4:	494d      	ldr	r1, [pc, #308]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80096e6:	4313      	orrs	r3, r2
 80096e8:	608b      	str	r3, [r1, #8]
 80096ea:	687b      	ldr	r3, [r7, #4]
 80096ec:	681b      	ldr	r3, [r3, #0]
 80096ee:	f003 0301 	and.w	r3, r3, #1
 80096f2:	2b00      	cmp	r3, #0
 80096f4:	d040      	beq.n	8009778 <HAL_RCC_ClockConfig+0x124>
 80096f6:	687b      	ldr	r3, [r7, #4]
 80096f8:	685b      	ldr	r3, [r3, #4]
 80096fa:	2b01      	cmp	r3, #1
 80096fc:	d107      	bne.n	800970e <HAL_RCC_ClockConfig+0xba>
 80096fe:	4b47      	ldr	r3, [pc, #284]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 8009700:	681b      	ldr	r3, [r3, #0]
 8009702:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009706:	2b00      	cmp	r3, #0
 8009708:	d115      	bne.n	8009736 <HAL_RCC_ClockConfig+0xe2>
 800970a:	2301      	movs	r3, #1
 800970c:	e07f      	b.n	800980e <HAL_RCC_ClockConfig+0x1ba>
 800970e:	687b      	ldr	r3, [r7, #4]
 8009710:	685b      	ldr	r3, [r3, #4]
 8009712:	2b02      	cmp	r3, #2
 8009714:	d107      	bne.n	8009726 <HAL_RCC_ClockConfig+0xd2>
 8009716:	4b41      	ldr	r3, [pc, #260]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 8009718:	681b      	ldr	r3, [r3, #0]
 800971a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800971e:	2b00      	cmp	r3, #0
 8009720:	d109      	bne.n	8009736 <HAL_RCC_ClockConfig+0xe2>
 8009722:	2301      	movs	r3, #1
 8009724:	e073      	b.n	800980e <HAL_RCC_ClockConfig+0x1ba>
 8009726:	4b3d      	ldr	r3, [pc, #244]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 8009728:	681b      	ldr	r3, [r3, #0]
 800972a:	f003 0302 	and.w	r3, r3, #2
 800972e:	2b00      	cmp	r3, #0
 8009730:	d101      	bne.n	8009736 <HAL_RCC_ClockConfig+0xe2>
 8009732:	2301      	movs	r3, #1
 8009734:	e06b      	b.n	800980e <HAL_RCC_ClockConfig+0x1ba>
 8009736:	4b39      	ldr	r3, [pc, #228]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 8009738:	689b      	ldr	r3, [r3, #8]
 800973a:	f023 0203 	bic.w	r2, r3, #3
 800973e:	687b      	ldr	r3, [r7, #4]
 8009740:	685b      	ldr	r3, [r3, #4]
 8009742:	4936      	ldr	r1, [pc, #216]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 8009744:	4313      	orrs	r3, r2
 8009746:	608b      	str	r3, [r1, #8]
 8009748:	f7fc fe38 	bl	80063bc <HAL_GetTick>
 800974c:	60f8      	str	r0, [r7, #12]
 800974e:	e00a      	b.n	8009766 <HAL_RCC_ClockConfig+0x112>
 8009750:	f7fc fe34 	bl	80063bc <HAL_GetTick>
 8009754:	4602      	mov	r2, r0
 8009756:	68fb      	ldr	r3, [r7, #12]
 8009758:	1ad3      	subs	r3, r2, r3
 800975a:	f241 3288 	movw	r2, #5000	; 0x1388
 800975e:	4293      	cmp	r3, r2
 8009760:	d901      	bls.n	8009766 <HAL_RCC_ClockConfig+0x112>
 8009762:	2303      	movs	r3, #3
 8009764:	e053      	b.n	800980e <HAL_RCC_ClockConfig+0x1ba>
 8009766:	4b2d      	ldr	r3, [pc, #180]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 8009768:	689b      	ldr	r3, [r3, #8]
 800976a:	f003 020c 	and.w	r2, r3, #12
 800976e:	687b      	ldr	r3, [r7, #4]
 8009770:	685b      	ldr	r3, [r3, #4]
 8009772:	009b      	lsls	r3, r3, #2
 8009774:	429a      	cmp	r2, r3
 8009776:	d1eb      	bne.n	8009750 <HAL_RCC_ClockConfig+0xfc>
 8009778:	4b27      	ldr	r3, [pc, #156]	; (8009818 <HAL_RCC_ClockConfig+0x1c4>)
 800977a:	681b      	ldr	r3, [r3, #0]
 800977c:	f003 030f 	and.w	r3, r3, #15
 8009780:	683a      	ldr	r2, [r7, #0]
 8009782:	429a      	cmp	r2, r3
 8009784:	d210      	bcs.n	80097a8 <HAL_RCC_ClockConfig+0x154>
 8009786:	4b24      	ldr	r3, [pc, #144]	; (8009818 <HAL_RCC_ClockConfig+0x1c4>)
 8009788:	681b      	ldr	r3, [r3, #0]
 800978a:	f023 020f 	bic.w	r2, r3, #15
 800978e:	4922      	ldr	r1, [pc, #136]	; (8009818 <HAL_RCC_ClockConfig+0x1c4>)
 8009790:	683b      	ldr	r3, [r7, #0]
 8009792:	4313      	orrs	r3, r2
 8009794:	600b      	str	r3, [r1, #0]
 8009796:	4b20      	ldr	r3, [pc, #128]	; (8009818 <HAL_RCC_ClockConfig+0x1c4>)
 8009798:	681b      	ldr	r3, [r3, #0]
 800979a:	f003 030f 	and.w	r3, r3, #15
 800979e:	683a      	ldr	r2, [r7, #0]
 80097a0:	429a      	cmp	r2, r3
 80097a2:	d001      	beq.n	80097a8 <HAL_RCC_ClockConfig+0x154>
 80097a4:	2301      	movs	r3, #1
 80097a6:	e032      	b.n	800980e <HAL_RCC_ClockConfig+0x1ba>
 80097a8:	687b      	ldr	r3, [r7, #4]
 80097aa:	681b      	ldr	r3, [r3, #0]
 80097ac:	f003 0304 	and.w	r3, r3, #4
 80097b0:	2b00      	cmp	r3, #0
 80097b2:	d008      	beq.n	80097c6 <HAL_RCC_ClockConfig+0x172>
 80097b4:	4b19      	ldr	r3, [pc, #100]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80097b6:	689b      	ldr	r3, [r3, #8]
 80097b8:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80097bc:	687b      	ldr	r3, [r7, #4]
 80097be:	68db      	ldr	r3, [r3, #12]
 80097c0:	4916      	ldr	r1, [pc, #88]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80097c2:	4313      	orrs	r3, r2
 80097c4:	608b      	str	r3, [r1, #8]
 80097c6:	687b      	ldr	r3, [r7, #4]
 80097c8:	681b      	ldr	r3, [r3, #0]
 80097ca:	f003 0308 	and.w	r3, r3, #8
 80097ce:	2b00      	cmp	r3, #0
 80097d0:	d009      	beq.n	80097e6 <HAL_RCC_ClockConfig+0x192>
 80097d2:	4b12      	ldr	r3, [pc, #72]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80097d4:	689b      	ldr	r3, [r3, #8]
 80097d6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80097da:	687b      	ldr	r3, [r7, #4]
 80097dc:	691b      	ldr	r3, [r3, #16]
 80097de:	00db      	lsls	r3, r3, #3
 80097e0:	490e      	ldr	r1, [pc, #56]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80097e2:	4313      	orrs	r3, r2
 80097e4:	608b      	str	r3, [r1, #8]
 80097e6:	f000 f821 	bl	800982c <HAL_RCC_GetSysClockFreq>
 80097ea:	4601      	mov	r1, r0
 80097ec:	4b0b      	ldr	r3, [pc, #44]	; (800981c <HAL_RCC_ClockConfig+0x1c8>)
 80097ee:	689b      	ldr	r3, [r3, #8]
 80097f0:	091b      	lsrs	r3, r3, #4
 80097f2:	f003 030f 	and.w	r3, r3, #15
 80097f6:	4a0a      	ldr	r2, [pc, #40]	; (8009820 <HAL_RCC_ClockConfig+0x1cc>)
 80097f8:	5cd3      	ldrb	r3, [r2, r3]
 80097fa:	fa21 f303 	lsr.w	r3, r1, r3
 80097fe:	4a09      	ldr	r2, [pc, #36]	; (8009824 <HAL_RCC_ClockConfig+0x1d0>)
 8009800:	6013      	str	r3, [r2, #0]
 8009802:	4b09      	ldr	r3, [pc, #36]	; (8009828 <HAL_RCC_ClockConfig+0x1d4>)
 8009804:	681b      	ldr	r3, [r3, #0]
 8009806:	4618      	mov	r0, r3
 8009808:	f7fc fc9e 	bl	8006148 <HAL_InitTick>
 800980c:	2300      	movs	r3, #0
 800980e:	4618      	mov	r0, r3
 8009810:	3710      	adds	r7, #16
 8009812:	46bd      	mov	sp, r7
 8009814:	bd80      	pop	{r7, pc}
 8009816:	bf00      	nop
 8009818:	40023c00 	.word	0x40023c00
 800981c:	40023800 	.word	0x40023800
 8009820:	08011da8 	.word	0x08011da8
 8009824:	200013b4 	.word	0x200013b4
 8009828:	200013b8 	.word	0x200013b8

0800982c <HAL_RCC_GetSysClockFreq>:
 800982c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800982e:	b085      	sub	sp, #20
 8009830:	af00      	add	r7, sp, #0
 8009832:	2300      	movs	r3, #0
 8009834:	607b      	str	r3, [r7, #4]
 8009836:	2300      	movs	r3, #0
 8009838:	60fb      	str	r3, [r7, #12]
 800983a:	2300      	movs	r3, #0
 800983c:	603b      	str	r3, [r7, #0]
 800983e:	2300      	movs	r3, #0
 8009840:	60bb      	str	r3, [r7, #8]
 8009842:	4b50      	ldr	r3, [pc, #320]	; (8009984 <HAL_RCC_GetSysClockFreq+0x158>)
 8009844:	689b      	ldr	r3, [r3, #8]
 8009846:	f003 030c 	and.w	r3, r3, #12
 800984a:	2b04      	cmp	r3, #4
 800984c:	d007      	beq.n	800985e <HAL_RCC_GetSysClockFreq+0x32>
 800984e:	2b08      	cmp	r3, #8
 8009850:	d008      	beq.n	8009864 <HAL_RCC_GetSysClockFreq+0x38>
 8009852:	2b00      	cmp	r3, #0
 8009854:	f040 808d 	bne.w	8009972 <HAL_RCC_GetSysClockFreq+0x146>
 8009858:	4b4b      	ldr	r3, [pc, #300]	; (8009988 <HAL_RCC_GetSysClockFreq+0x15c>)
 800985a:	60bb      	str	r3, [r7, #8]
 800985c:	e08c      	b.n	8009978 <HAL_RCC_GetSysClockFreq+0x14c>
 800985e:	4b4b      	ldr	r3, [pc, #300]	; (800998c <HAL_RCC_GetSysClockFreq+0x160>)
 8009860:	60bb      	str	r3, [r7, #8]
 8009862:	e089      	b.n	8009978 <HAL_RCC_GetSysClockFreq+0x14c>
 8009864:	4b47      	ldr	r3, [pc, #284]	; (8009984 <HAL_RCC_GetSysClockFreq+0x158>)
 8009866:	685b      	ldr	r3, [r3, #4]
 8009868:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800986c:	607b      	str	r3, [r7, #4]
 800986e:	4b45      	ldr	r3, [pc, #276]	; (8009984 <HAL_RCC_GetSysClockFreq+0x158>)
 8009870:	685b      	ldr	r3, [r3, #4]
 8009872:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009876:	2b00      	cmp	r3, #0
 8009878:	d023      	beq.n	80098c2 <HAL_RCC_GetSysClockFreq+0x96>
 800987a:	4b42      	ldr	r3, [pc, #264]	; (8009984 <HAL_RCC_GetSysClockFreq+0x158>)
 800987c:	685b      	ldr	r3, [r3, #4]
 800987e:	099b      	lsrs	r3, r3, #6
 8009880:	f04f 0400 	mov.w	r4, #0
 8009884:	f240 11ff 	movw	r1, #511	; 0x1ff
 8009888:	f04f 0200 	mov.w	r2, #0
 800988c:	ea03 0501 	and.w	r5, r3, r1
 8009890:	ea04 0602 	and.w	r6, r4, r2
 8009894:	4a3d      	ldr	r2, [pc, #244]	; (800998c <HAL_RCC_GetSysClockFreq+0x160>)
 8009896:	fb02 f106 	mul.w	r1, r2, r6
 800989a:	2200      	movs	r2, #0
 800989c:	fb02 f205 	mul.w	r2, r2, r5
 80098a0:	440a      	add	r2, r1
 80098a2:	493a      	ldr	r1, [pc, #232]	; (800998c <HAL_RCC_GetSysClockFreq+0x160>)
 80098a4:	fba5 0101 	umull	r0, r1, r5, r1
 80098a8:	1853      	adds	r3, r2, r1
 80098aa:	4619      	mov	r1, r3
 80098ac:	687b      	ldr	r3, [r7, #4]
 80098ae:	f04f 0400 	mov.w	r4, #0
 80098b2:	461a      	mov	r2, r3
 80098b4:	4623      	mov	r3, r4
 80098b6:	f7f6 fcfb 	bl	80002b0 <__aeabi_uldivmod>
 80098ba:	4603      	mov	r3, r0
 80098bc:	460c      	mov	r4, r1
 80098be:	60fb      	str	r3, [r7, #12]
 80098c0:	e049      	b.n	8009956 <HAL_RCC_GetSysClockFreq+0x12a>
 80098c2:	4b30      	ldr	r3, [pc, #192]	; (8009984 <HAL_RCC_GetSysClockFreq+0x158>)
 80098c4:	685b      	ldr	r3, [r3, #4]
 80098c6:	099b      	lsrs	r3, r3, #6
 80098c8:	f04f 0400 	mov.w	r4, #0
 80098cc:	f240 11ff 	movw	r1, #511	; 0x1ff
 80098d0:	f04f 0200 	mov.w	r2, #0
 80098d4:	ea03 0501 	and.w	r5, r3, r1
 80098d8:	ea04 0602 	and.w	r6, r4, r2
 80098dc:	4629      	mov	r1, r5
 80098de:	4632      	mov	r2, r6
 80098e0:	f04f 0300 	mov.w	r3, #0
 80098e4:	f04f 0400 	mov.w	r4, #0
 80098e8:	0154      	lsls	r4, r2, #5
 80098ea:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80098ee:	014b      	lsls	r3, r1, #5
 80098f0:	4619      	mov	r1, r3
 80098f2:	4622      	mov	r2, r4
 80098f4:	1b49      	subs	r1, r1, r5
 80098f6:	eb62 0206 	sbc.w	r2, r2, r6
 80098fa:	f04f 0300 	mov.w	r3, #0
 80098fe:	f04f 0400 	mov.w	r4, #0
 8009902:	0194      	lsls	r4, r2, #6
 8009904:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 8009908:	018b      	lsls	r3, r1, #6
 800990a:	1a5b      	subs	r3, r3, r1
 800990c:	eb64 0402 	sbc.w	r4, r4, r2
 8009910:	f04f 0100 	mov.w	r1, #0
 8009914:	f04f 0200 	mov.w	r2, #0
 8009918:	00e2      	lsls	r2, r4, #3
 800991a:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 800991e:	00d9      	lsls	r1, r3, #3
 8009920:	460b      	mov	r3, r1
 8009922:	4614      	mov	r4, r2
 8009924:	195b      	adds	r3, r3, r5
 8009926:	eb44 0406 	adc.w	r4, r4, r6
 800992a:	f04f 0100 	mov.w	r1, #0
 800992e:	f04f 0200 	mov.w	r2, #0
 8009932:	02a2      	lsls	r2, r4, #10
 8009934:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8009938:	0299      	lsls	r1, r3, #10
 800993a:	460b      	mov	r3, r1
 800993c:	4614      	mov	r4, r2
 800993e:	4618      	mov	r0, r3
 8009940:	4621      	mov	r1, r4
 8009942:	687b      	ldr	r3, [r7, #4]
 8009944:	f04f 0400 	mov.w	r4, #0
 8009948:	461a      	mov	r2, r3
 800994a:	4623      	mov	r3, r4
 800994c:	f7f6 fcb0 	bl	80002b0 <__aeabi_uldivmod>
 8009950:	4603      	mov	r3, r0
 8009952:	460c      	mov	r4, r1
 8009954:	60fb      	str	r3, [r7, #12]
 8009956:	4b0b      	ldr	r3, [pc, #44]	; (8009984 <HAL_RCC_GetSysClockFreq+0x158>)
 8009958:	685b      	ldr	r3, [r3, #4]
 800995a:	0c1b      	lsrs	r3, r3, #16
 800995c:	f003 0303 	and.w	r3, r3, #3
 8009960:	3301      	adds	r3, #1
 8009962:	005b      	lsls	r3, r3, #1
 8009964:	603b      	str	r3, [r7, #0]
 8009966:	68fa      	ldr	r2, [r7, #12]
 8009968:	683b      	ldr	r3, [r7, #0]
 800996a:	fbb2 f3f3 	udiv	r3, r2, r3
 800996e:	60bb      	str	r3, [r7, #8]
 8009970:	e002      	b.n	8009978 <HAL_RCC_GetSysClockFreq+0x14c>
 8009972:	4b05      	ldr	r3, [pc, #20]	; (8009988 <HAL_RCC_GetSysClockFreq+0x15c>)
 8009974:	60bb      	str	r3, [r7, #8]
 8009976:	bf00      	nop
 8009978:	68bb      	ldr	r3, [r7, #8]
 800997a:	4618      	mov	r0, r3
 800997c:	3714      	adds	r7, #20
 800997e:	46bd      	mov	sp, r7
 8009980:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009982:	bf00      	nop
 8009984:	40023800 	.word	0x40023800
 8009988:	00f42400 	.word	0x00f42400
 800998c:	017d7840 	.word	0x017d7840

08009990 <HAL_RCC_GetHCLKFreq>:
 8009990:	b480      	push	{r7}
 8009992:	af00      	add	r7, sp, #0
 8009994:	4b03      	ldr	r3, [pc, #12]	; (80099a4 <HAL_RCC_GetHCLKFreq+0x14>)
 8009996:	681b      	ldr	r3, [r3, #0]
 8009998:	4618      	mov	r0, r3
 800999a:	46bd      	mov	sp, r7
 800999c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099a0:	4770      	bx	lr
 80099a2:	bf00      	nop
 80099a4:	200013b4 	.word	0x200013b4

080099a8 <HAL_RCC_GetPCLK1Freq>:
 80099a8:	b580      	push	{r7, lr}
 80099aa:	af00      	add	r7, sp, #0
 80099ac:	f7ff fff0 	bl	8009990 <HAL_RCC_GetHCLKFreq>
 80099b0:	4601      	mov	r1, r0
 80099b2:	4b05      	ldr	r3, [pc, #20]	; (80099c8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80099b4:	689b      	ldr	r3, [r3, #8]
 80099b6:	0a9b      	lsrs	r3, r3, #10
 80099b8:	f003 0307 	and.w	r3, r3, #7
 80099bc:	4a03      	ldr	r2, [pc, #12]	; (80099cc <HAL_RCC_GetPCLK1Freq+0x24>)
 80099be:	5cd3      	ldrb	r3, [r2, r3]
 80099c0:	fa21 f303 	lsr.w	r3, r1, r3
 80099c4:	4618      	mov	r0, r3
 80099c6:	bd80      	pop	{r7, pc}
 80099c8:	40023800 	.word	0x40023800
 80099cc:	08011db8 	.word	0x08011db8

080099d0 <HAL_RCC_GetPCLK2Freq>:
 80099d0:	b580      	push	{r7, lr}
 80099d2:	af00      	add	r7, sp, #0
 80099d4:	f7ff ffdc 	bl	8009990 <HAL_RCC_GetHCLKFreq>
 80099d8:	4601      	mov	r1, r0
 80099da:	4b05      	ldr	r3, [pc, #20]	; (80099f0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80099dc:	689b      	ldr	r3, [r3, #8]
 80099de:	0b5b      	lsrs	r3, r3, #13
 80099e0:	f003 0307 	and.w	r3, r3, #7
 80099e4:	4a03      	ldr	r2, [pc, #12]	; (80099f4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80099e6:	5cd3      	ldrb	r3, [r2, r3]
 80099e8:	fa21 f303 	lsr.w	r3, r1, r3
 80099ec:	4618      	mov	r0, r3
 80099ee:	bd80      	pop	{r7, pc}
 80099f0:	40023800 	.word	0x40023800
 80099f4:	08011db8 	.word	0x08011db8

080099f8 <HAL_RCC_GetClockConfig>:
 80099f8:	b480      	push	{r7}
 80099fa:	b083      	sub	sp, #12
 80099fc:	af00      	add	r7, sp, #0
 80099fe:	6078      	str	r0, [r7, #4]
 8009a00:	6039      	str	r1, [r7, #0]
 8009a02:	687b      	ldr	r3, [r7, #4]
 8009a04:	220f      	movs	r2, #15
 8009a06:	601a      	str	r2, [r3, #0]
 8009a08:	4b12      	ldr	r3, [pc, #72]	; (8009a54 <HAL_RCC_GetClockConfig+0x5c>)
 8009a0a:	689b      	ldr	r3, [r3, #8]
 8009a0c:	f003 0203 	and.w	r2, r3, #3
 8009a10:	687b      	ldr	r3, [r7, #4]
 8009a12:	605a      	str	r2, [r3, #4]
 8009a14:	4b0f      	ldr	r3, [pc, #60]	; (8009a54 <HAL_RCC_GetClockConfig+0x5c>)
 8009a16:	689b      	ldr	r3, [r3, #8]
 8009a18:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8009a1c:	687b      	ldr	r3, [r7, #4]
 8009a1e:	609a      	str	r2, [r3, #8]
 8009a20:	4b0c      	ldr	r3, [pc, #48]	; (8009a54 <HAL_RCC_GetClockConfig+0x5c>)
 8009a22:	689b      	ldr	r3, [r3, #8]
 8009a24:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8009a28:	687b      	ldr	r3, [r7, #4]
 8009a2a:	60da      	str	r2, [r3, #12]
 8009a2c:	4b09      	ldr	r3, [pc, #36]	; (8009a54 <HAL_RCC_GetClockConfig+0x5c>)
 8009a2e:	689b      	ldr	r3, [r3, #8]
 8009a30:	08db      	lsrs	r3, r3, #3
 8009a32:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8009a36:	687b      	ldr	r3, [r7, #4]
 8009a38:	611a      	str	r2, [r3, #16]
 8009a3a:	4b07      	ldr	r3, [pc, #28]	; (8009a58 <HAL_RCC_GetClockConfig+0x60>)
 8009a3c:	681b      	ldr	r3, [r3, #0]
 8009a3e:	f003 020f 	and.w	r2, r3, #15
 8009a42:	683b      	ldr	r3, [r7, #0]
 8009a44:	601a      	str	r2, [r3, #0]
 8009a46:	bf00      	nop
 8009a48:	370c      	adds	r7, #12
 8009a4a:	46bd      	mov	sp, r7
 8009a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a50:	4770      	bx	lr
 8009a52:	bf00      	nop
 8009a54:	40023800 	.word	0x40023800
 8009a58:	40023c00 	.word	0x40023c00

08009a5c <HAL_RCCEx_PeriphCLKConfig>:
 8009a5c:	b580      	push	{r7, lr}
 8009a5e:	b088      	sub	sp, #32
 8009a60:	af00      	add	r7, sp, #0
 8009a62:	6078      	str	r0, [r7, #4]
 8009a64:	2300      	movs	r3, #0
 8009a66:	617b      	str	r3, [r7, #20]
 8009a68:	2300      	movs	r3, #0
 8009a6a:	613b      	str	r3, [r7, #16]
 8009a6c:	2300      	movs	r3, #0
 8009a6e:	60fb      	str	r3, [r7, #12]
 8009a70:	2300      	movs	r3, #0
 8009a72:	61fb      	str	r3, [r7, #28]
 8009a74:	2300      	movs	r3, #0
 8009a76:	61bb      	str	r3, [r7, #24]
 8009a78:	687b      	ldr	r3, [r7, #4]
 8009a7a:	681b      	ldr	r3, [r3, #0]
 8009a7c:	f003 0301 	and.w	r3, r3, #1
 8009a80:	2b00      	cmp	r3, #0
 8009a82:	d012      	beq.n	8009aaa <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8009a84:	4b69      	ldr	r3, [pc, #420]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009a86:	689b      	ldr	r3, [r3, #8]
 8009a88:	4a68      	ldr	r2, [pc, #416]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009a8a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8009a8e:	6093      	str	r3, [r2, #8]
 8009a90:	4b66      	ldr	r3, [pc, #408]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009a92:	689a      	ldr	r2, [r3, #8]
 8009a94:	687b      	ldr	r3, [r7, #4]
 8009a96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009a98:	4964      	ldr	r1, [pc, #400]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009a9a:	4313      	orrs	r3, r2
 8009a9c:	608b      	str	r3, [r1, #8]
 8009a9e:	687b      	ldr	r3, [r7, #4]
 8009aa0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009aa2:	2b00      	cmp	r3, #0
 8009aa4:	d101      	bne.n	8009aaa <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8009aa6:	2301      	movs	r3, #1
 8009aa8:	61fb      	str	r3, [r7, #28]
 8009aaa:	687b      	ldr	r3, [r7, #4]
 8009aac:	681b      	ldr	r3, [r3, #0]
 8009aae:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8009ab2:	2b00      	cmp	r3, #0
 8009ab4:	d017      	beq.n	8009ae6 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8009ab6:	4b5d      	ldr	r3, [pc, #372]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009ab8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009abc:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8009ac0:	687b      	ldr	r3, [r7, #4]
 8009ac2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009ac4:	4959      	ldr	r1, [pc, #356]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009ac6:	4313      	orrs	r3, r2
 8009ac8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009acc:	687b      	ldr	r3, [r7, #4]
 8009ace:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009ad0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009ad4:	d101      	bne.n	8009ada <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8009ad6:	2301      	movs	r3, #1
 8009ad8:	61fb      	str	r3, [r7, #28]
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009ade:	2b00      	cmp	r3, #0
 8009ae0:	d101      	bne.n	8009ae6 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8009ae2:	2301      	movs	r3, #1
 8009ae4:	61bb      	str	r3, [r7, #24]
 8009ae6:	687b      	ldr	r3, [r7, #4]
 8009ae8:	681b      	ldr	r3, [r3, #0]
 8009aea:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009aee:	2b00      	cmp	r3, #0
 8009af0:	d017      	beq.n	8009b22 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8009af2:	4b4e      	ldr	r3, [pc, #312]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009af4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009af8:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8009afc:	687b      	ldr	r3, [r7, #4]
 8009afe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b00:	494a      	ldr	r1, [pc, #296]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b02:	4313      	orrs	r3, r2
 8009b04:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009b08:	687b      	ldr	r3, [r7, #4]
 8009b0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b0c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009b10:	d101      	bne.n	8009b16 <HAL_RCCEx_PeriphCLKConfig+0xba>
 8009b12:	2301      	movs	r3, #1
 8009b14:	61fb      	str	r3, [r7, #28]
 8009b16:	687b      	ldr	r3, [r7, #4]
 8009b18:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b1a:	2b00      	cmp	r3, #0
 8009b1c:	d101      	bne.n	8009b22 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8009b1e:	2301      	movs	r3, #1
 8009b20:	61bb      	str	r3, [r7, #24]
 8009b22:	687b      	ldr	r3, [r7, #4]
 8009b24:	681b      	ldr	r3, [r3, #0]
 8009b26:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8009b2a:	2b00      	cmp	r3, #0
 8009b2c:	d001      	beq.n	8009b32 <HAL_RCCEx_PeriphCLKConfig+0xd6>
 8009b2e:	2301      	movs	r3, #1
 8009b30:	61fb      	str	r3, [r7, #28]
 8009b32:	687b      	ldr	r3, [r7, #4]
 8009b34:	681b      	ldr	r3, [r3, #0]
 8009b36:	f003 0320 	and.w	r3, r3, #32
 8009b3a:	2b00      	cmp	r3, #0
 8009b3c:	f000 808b 	beq.w	8009c56 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8009b40:	4b3a      	ldr	r3, [pc, #232]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b44:	4a39      	ldr	r2, [pc, #228]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b46:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009b4a:	6413      	str	r3, [r2, #64]	; 0x40
 8009b4c:	4b37      	ldr	r3, [pc, #220]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b50:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009b54:	60bb      	str	r3, [r7, #8]
 8009b56:	68bb      	ldr	r3, [r7, #8]
 8009b58:	4b35      	ldr	r3, [pc, #212]	; (8009c30 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8009b5a:	681b      	ldr	r3, [r3, #0]
 8009b5c:	4a34      	ldr	r2, [pc, #208]	; (8009c30 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8009b5e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009b62:	6013      	str	r3, [r2, #0]
 8009b64:	f7fc fc2a 	bl	80063bc <HAL_GetTick>
 8009b68:	6178      	str	r0, [r7, #20]
 8009b6a:	e008      	b.n	8009b7e <HAL_RCCEx_PeriphCLKConfig+0x122>
 8009b6c:	f7fc fc26 	bl	80063bc <HAL_GetTick>
 8009b70:	4602      	mov	r2, r0
 8009b72:	697b      	ldr	r3, [r7, #20]
 8009b74:	1ad3      	subs	r3, r2, r3
 8009b76:	2b64      	cmp	r3, #100	; 0x64
 8009b78:	d901      	bls.n	8009b7e <HAL_RCCEx_PeriphCLKConfig+0x122>
 8009b7a:	2303      	movs	r3, #3
 8009b7c:	e355      	b.n	800a22a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 8009b7e:	4b2c      	ldr	r3, [pc, #176]	; (8009c30 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8009b80:	681b      	ldr	r3, [r3, #0]
 8009b82:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009b86:	2b00      	cmp	r3, #0
 8009b88:	d0f0      	beq.n	8009b6c <HAL_RCCEx_PeriphCLKConfig+0x110>
 8009b8a:	4b28      	ldr	r3, [pc, #160]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b8c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009b8e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009b92:	613b      	str	r3, [r7, #16]
 8009b94:	693b      	ldr	r3, [r7, #16]
 8009b96:	2b00      	cmp	r3, #0
 8009b98:	d035      	beq.n	8009c06 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8009b9a:	687b      	ldr	r3, [r7, #4]
 8009b9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b9e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009ba2:	693a      	ldr	r2, [r7, #16]
 8009ba4:	429a      	cmp	r2, r3
 8009ba6:	d02e      	beq.n	8009c06 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8009ba8:	4b20      	ldr	r3, [pc, #128]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009baa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009bac:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009bb0:	613b      	str	r3, [r7, #16]
 8009bb2:	4b1e      	ldr	r3, [pc, #120]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bb4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009bb6:	4a1d      	ldr	r2, [pc, #116]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bb8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009bbc:	6713      	str	r3, [r2, #112]	; 0x70
 8009bbe:	4b1b      	ldr	r3, [pc, #108]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bc0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009bc2:	4a1a      	ldr	r2, [pc, #104]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bc4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009bc8:	6713      	str	r3, [r2, #112]	; 0x70
 8009bca:	4a18      	ldr	r2, [pc, #96]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bcc:	693b      	ldr	r3, [r7, #16]
 8009bce:	6713      	str	r3, [r2, #112]	; 0x70
 8009bd0:	4b16      	ldr	r3, [pc, #88]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bd2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009bd4:	f003 0301 	and.w	r3, r3, #1
 8009bd8:	2b01      	cmp	r3, #1
 8009bda:	d114      	bne.n	8009c06 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8009bdc:	f7fc fbee 	bl	80063bc <HAL_GetTick>
 8009be0:	6178      	str	r0, [r7, #20]
 8009be2:	e00a      	b.n	8009bfa <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8009be4:	f7fc fbea 	bl	80063bc <HAL_GetTick>
 8009be8:	4602      	mov	r2, r0
 8009bea:	697b      	ldr	r3, [r7, #20]
 8009bec:	1ad3      	subs	r3, r2, r3
 8009bee:	f241 3288 	movw	r2, #5000	; 0x1388
 8009bf2:	4293      	cmp	r3, r2
 8009bf4:	d901      	bls.n	8009bfa <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8009bf6:	2303      	movs	r3, #3
 8009bf8:	e317      	b.n	800a22a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 8009bfa:	4b0c      	ldr	r3, [pc, #48]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bfc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009bfe:	f003 0302 	and.w	r3, r3, #2
 8009c02:	2b00      	cmp	r3, #0
 8009c04:	d0ee      	beq.n	8009be4 <HAL_RCCEx_PeriphCLKConfig+0x188>
 8009c06:	687b      	ldr	r3, [r7, #4]
 8009c08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009c0a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009c0e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009c12:	d111      	bne.n	8009c38 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8009c14:	4b05      	ldr	r3, [pc, #20]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009c16:	689b      	ldr	r3, [r3, #8]
 8009c18:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8009c1c:	687b      	ldr	r3, [r7, #4]
 8009c1e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8009c20:	4b04      	ldr	r3, [pc, #16]	; (8009c34 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8009c22:	400b      	ands	r3, r1
 8009c24:	4901      	ldr	r1, [pc, #4]	; (8009c2c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009c26:	4313      	orrs	r3, r2
 8009c28:	608b      	str	r3, [r1, #8]
 8009c2a:	e00b      	b.n	8009c44 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8009c2c:	40023800 	.word	0x40023800
 8009c30:	40007000 	.word	0x40007000
 8009c34:	0ffffcff 	.word	0x0ffffcff
 8009c38:	4bb0      	ldr	r3, [pc, #704]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c3a:	689b      	ldr	r3, [r3, #8]
 8009c3c:	4aaf      	ldr	r2, [pc, #700]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c3e:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8009c42:	6093      	str	r3, [r2, #8]
 8009c44:	4bad      	ldr	r3, [pc, #692]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c46:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009c48:	687b      	ldr	r3, [r7, #4]
 8009c4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009c4c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009c50:	49aa      	ldr	r1, [pc, #680]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c52:	4313      	orrs	r3, r2
 8009c54:	670b      	str	r3, [r1, #112]	; 0x70
 8009c56:	687b      	ldr	r3, [r7, #4]
 8009c58:	681b      	ldr	r3, [r3, #0]
 8009c5a:	f003 0310 	and.w	r3, r3, #16
 8009c5e:	2b00      	cmp	r3, #0
 8009c60:	d010      	beq.n	8009c84 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8009c62:	4ba6      	ldr	r3, [pc, #664]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c64:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009c68:	4aa4      	ldr	r2, [pc, #656]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c6a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8009c6e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8009c72:	4ba2      	ldr	r3, [pc, #648]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c74:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8009c78:	687b      	ldr	r3, [r7, #4]
 8009c7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009c7c:	499f      	ldr	r1, [pc, #636]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c7e:	4313      	orrs	r3, r2
 8009c80:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009c84:	687b      	ldr	r3, [r7, #4]
 8009c86:	681b      	ldr	r3, [r3, #0]
 8009c88:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009c8c:	2b00      	cmp	r3, #0
 8009c8e:	d00a      	beq.n	8009ca6 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8009c90:	4b9a      	ldr	r3, [pc, #616]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c92:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009c96:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8009c9a:	687b      	ldr	r3, [r7, #4]
 8009c9c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009c9e:	4997      	ldr	r1, [pc, #604]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009ca0:	4313      	orrs	r3, r2
 8009ca2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009ca6:	687b      	ldr	r3, [r7, #4]
 8009ca8:	681b      	ldr	r3, [r3, #0]
 8009caa:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8009cae:	2b00      	cmp	r3, #0
 8009cb0:	d00a      	beq.n	8009cc8 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8009cb2:	4b92      	ldr	r3, [pc, #584]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009cb4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009cb8:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8009cbc:	687b      	ldr	r3, [r7, #4]
 8009cbe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8009cc0:	498e      	ldr	r1, [pc, #568]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009cc2:	4313      	orrs	r3, r2
 8009cc4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009cc8:	687b      	ldr	r3, [r7, #4]
 8009cca:	681b      	ldr	r3, [r3, #0]
 8009ccc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009cd0:	2b00      	cmp	r3, #0
 8009cd2:	d00a      	beq.n	8009cea <HAL_RCCEx_PeriphCLKConfig+0x28e>
 8009cd4:	4b89      	ldr	r3, [pc, #548]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009cd6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009cda:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8009cde:	687b      	ldr	r3, [r7, #4]
 8009ce0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009ce2:	4986      	ldr	r1, [pc, #536]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009ce4:	4313      	orrs	r3, r2
 8009ce6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009cea:	687b      	ldr	r3, [r7, #4]
 8009cec:	681b      	ldr	r3, [r3, #0]
 8009cee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009cf2:	2b00      	cmp	r3, #0
 8009cf4:	d00a      	beq.n	8009d0c <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8009cf6:	4b81      	ldr	r3, [pc, #516]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009cf8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009cfc:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009d04:	497d      	ldr	r1, [pc, #500]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d06:	4313      	orrs	r3, r2
 8009d08:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d0c:	687b      	ldr	r3, [r7, #4]
 8009d0e:	681b      	ldr	r3, [r3, #0]
 8009d10:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009d14:	2b00      	cmp	r3, #0
 8009d16:	d00a      	beq.n	8009d2e <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8009d18:	4b78      	ldr	r3, [pc, #480]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d1a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d1e:	f023 0203 	bic.w	r2, r3, #3
 8009d22:	687b      	ldr	r3, [r7, #4]
 8009d24:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009d26:	4975      	ldr	r1, [pc, #468]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d28:	4313      	orrs	r3, r2
 8009d2a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	681b      	ldr	r3, [r3, #0]
 8009d32:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009d36:	2b00      	cmp	r3, #0
 8009d38:	d00a      	beq.n	8009d50 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8009d3a:	4b70      	ldr	r3, [pc, #448]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d3c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d40:	f023 020c 	bic.w	r2, r3, #12
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009d48:	496c      	ldr	r1, [pc, #432]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d4a:	4313      	orrs	r3, r2
 8009d4c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d50:	687b      	ldr	r3, [r7, #4]
 8009d52:	681b      	ldr	r3, [r3, #0]
 8009d54:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009d58:	2b00      	cmp	r3, #0
 8009d5a:	d00a      	beq.n	8009d72 <HAL_RCCEx_PeriphCLKConfig+0x316>
 8009d5c:	4b67      	ldr	r3, [pc, #412]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d5e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d62:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8009d66:	687b      	ldr	r3, [r7, #4]
 8009d68:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009d6a:	4964      	ldr	r1, [pc, #400]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d6c:	4313      	orrs	r3, r2
 8009d6e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d72:	687b      	ldr	r3, [r7, #4]
 8009d74:	681b      	ldr	r3, [r3, #0]
 8009d76:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8009d7a:	2b00      	cmp	r3, #0
 8009d7c:	d00a      	beq.n	8009d94 <HAL_RCCEx_PeriphCLKConfig+0x338>
 8009d7e:	4b5f      	ldr	r3, [pc, #380]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d80:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d84:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8009d88:	687b      	ldr	r3, [r7, #4]
 8009d8a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009d8c:	495b      	ldr	r1, [pc, #364]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d8e:	4313      	orrs	r3, r2
 8009d90:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d94:	687b      	ldr	r3, [r7, #4]
 8009d96:	681b      	ldr	r3, [r3, #0]
 8009d98:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8009d9c:	2b00      	cmp	r3, #0
 8009d9e:	d00a      	beq.n	8009db6 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8009da0:	4b56      	ldr	r3, [pc, #344]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009da2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009da6:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8009daa:	687b      	ldr	r3, [r7, #4]
 8009dac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009dae:	4953      	ldr	r1, [pc, #332]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009db0:	4313      	orrs	r3, r2
 8009db2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009db6:	687b      	ldr	r3, [r7, #4]
 8009db8:	681b      	ldr	r3, [r3, #0]
 8009dba:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009dbe:	2b00      	cmp	r3, #0
 8009dc0:	d00a      	beq.n	8009dd8 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8009dc2:	4b4e      	ldr	r3, [pc, #312]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009dc4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009dc8:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8009dcc:	687b      	ldr	r3, [r7, #4]
 8009dce:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009dd0:	494a      	ldr	r1, [pc, #296]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009dd2:	4313      	orrs	r3, r2
 8009dd4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009dd8:	687b      	ldr	r3, [r7, #4]
 8009dda:	681b      	ldr	r3, [r3, #0]
 8009ddc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8009de0:	2b00      	cmp	r3, #0
 8009de2:	d00a      	beq.n	8009dfa <HAL_RCCEx_PeriphCLKConfig+0x39e>
 8009de4:	4b45      	ldr	r3, [pc, #276]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009de6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009dea:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8009dee:	687b      	ldr	r3, [r7, #4]
 8009df0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009df2:	4942      	ldr	r1, [pc, #264]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009df4:	4313      	orrs	r3, r2
 8009df6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009dfa:	687b      	ldr	r3, [r7, #4]
 8009dfc:	681b      	ldr	r3, [r3, #0]
 8009dfe:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8009e02:	2b00      	cmp	r3, #0
 8009e04:	d00a      	beq.n	8009e1c <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8009e06:	4b3d      	ldr	r3, [pc, #244]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e08:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e0c:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8009e10:	687b      	ldr	r3, [r7, #4]
 8009e12:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009e14:	4939      	ldr	r1, [pc, #228]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e16:	4313      	orrs	r3, r2
 8009e18:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009e1c:	687b      	ldr	r3, [r7, #4]
 8009e1e:	681b      	ldr	r3, [r3, #0]
 8009e20:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009e24:	2b00      	cmp	r3, #0
 8009e26:	d00a      	beq.n	8009e3e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8009e28:	4b34      	ldr	r3, [pc, #208]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e2a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e2e:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8009e32:	687b      	ldr	r3, [r7, #4]
 8009e34:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009e36:	4931      	ldr	r1, [pc, #196]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e38:	4313      	orrs	r3, r2
 8009e3a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009e3e:	687b      	ldr	r3, [r7, #4]
 8009e40:	681b      	ldr	r3, [r3, #0]
 8009e42:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009e46:	2b00      	cmp	r3, #0
 8009e48:	d011      	beq.n	8009e6e <HAL_RCCEx_PeriphCLKConfig+0x412>
 8009e4a:	4b2c      	ldr	r3, [pc, #176]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e4c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e50:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8009e54:	687b      	ldr	r3, [r7, #4]
 8009e56:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009e58:	4928      	ldr	r1, [pc, #160]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e5a:	4313      	orrs	r3, r2
 8009e5c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009e60:	687b      	ldr	r3, [r7, #4]
 8009e62:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009e64:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009e68:	d101      	bne.n	8009e6e <HAL_RCCEx_PeriphCLKConfig+0x412>
 8009e6a:	2301      	movs	r3, #1
 8009e6c:	61bb      	str	r3, [r7, #24]
 8009e6e:	687b      	ldr	r3, [r7, #4]
 8009e70:	681b      	ldr	r3, [r3, #0]
 8009e72:	f003 0308 	and.w	r3, r3, #8
 8009e76:	2b00      	cmp	r3, #0
 8009e78:	d001      	beq.n	8009e7e <HAL_RCCEx_PeriphCLKConfig+0x422>
 8009e7a:	2301      	movs	r3, #1
 8009e7c:	61bb      	str	r3, [r7, #24]
 8009e7e:	687b      	ldr	r3, [r7, #4]
 8009e80:	681b      	ldr	r3, [r3, #0]
 8009e82:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8009e86:	2b00      	cmp	r3, #0
 8009e88:	d00a      	beq.n	8009ea0 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8009e8a:	4b1c      	ldr	r3, [pc, #112]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e8c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e90:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8009e94:	687b      	ldr	r3, [r7, #4]
 8009e96:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009e98:	4918      	ldr	r1, [pc, #96]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e9a:	4313      	orrs	r3, r2
 8009e9c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009ea0:	687b      	ldr	r3, [r7, #4]
 8009ea2:	681b      	ldr	r3, [r3, #0]
 8009ea4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8009ea8:	2b00      	cmp	r3, #0
 8009eaa:	d00b      	beq.n	8009ec4 <HAL_RCCEx_PeriphCLKConfig+0x468>
 8009eac:	4b13      	ldr	r3, [pc, #76]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009eae:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009eb2:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8009eb6:	687b      	ldr	r3, [r7, #4]
 8009eb8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009ebc:	490f      	ldr	r1, [pc, #60]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009ebe:	4313      	orrs	r3, r2
 8009ec0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009ec4:	69fb      	ldr	r3, [r7, #28]
 8009ec6:	2b01      	cmp	r3, #1
 8009ec8:	d005      	beq.n	8009ed6 <HAL_RCCEx_PeriphCLKConfig+0x47a>
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	681b      	ldr	r3, [r3, #0]
 8009ece:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009ed2:	f040 80d8 	bne.w	800a086 <HAL_RCCEx_PeriphCLKConfig+0x62a>
 8009ed6:	4b09      	ldr	r3, [pc, #36]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009ed8:	681b      	ldr	r3, [r3, #0]
 8009eda:	4a08      	ldr	r2, [pc, #32]	; (8009efc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009edc:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8009ee0:	6013      	str	r3, [r2, #0]
 8009ee2:	f7fc fa6b 	bl	80063bc <HAL_GetTick>
 8009ee6:	6178      	str	r0, [r7, #20]
 8009ee8:	e00a      	b.n	8009f00 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 8009eea:	f7fc fa67 	bl	80063bc <HAL_GetTick>
 8009eee:	4602      	mov	r2, r0
 8009ef0:	697b      	ldr	r3, [r7, #20]
 8009ef2:	1ad3      	subs	r3, r2, r3
 8009ef4:	2b64      	cmp	r3, #100	; 0x64
 8009ef6:	d903      	bls.n	8009f00 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 8009ef8:	2303      	movs	r3, #3
 8009efa:	e196      	b.n	800a22a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 8009efc:	40023800 	.word	0x40023800
 8009f00:	4b6c      	ldr	r3, [pc, #432]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f02:	681b      	ldr	r3, [r3, #0]
 8009f04:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009f08:	2b00      	cmp	r3, #0
 8009f0a:	d1ee      	bne.n	8009eea <HAL_RCCEx_PeriphCLKConfig+0x48e>
 8009f0c:	687b      	ldr	r3, [r7, #4]
 8009f0e:	681b      	ldr	r3, [r3, #0]
 8009f10:	f003 0301 	and.w	r3, r3, #1
 8009f14:	2b00      	cmp	r3, #0
 8009f16:	d021      	beq.n	8009f5c <HAL_RCCEx_PeriphCLKConfig+0x500>
 8009f18:	687b      	ldr	r3, [r7, #4]
 8009f1a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009f1c:	2b00      	cmp	r3, #0
 8009f1e:	d11d      	bne.n	8009f5c <HAL_RCCEx_PeriphCLKConfig+0x500>
 8009f20:	4b64      	ldr	r3, [pc, #400]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f22:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f26:	0c1b      	lsrs	r3, r3, #16
 8009f28:	f003 0303 	and.w	r3, r3, #3
 8009f2c:	613b      	str	r3, [r7, #16]
 8009f2e:	4b61      	ldr	r3, [pc, #388]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f30:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f34:	0e1b      	lsrs	r3, r3, #24
 8009f36:	f003 030f 	and.w	r3, r3, #15
 8009f3a:	60fb      	str	r3, [r7, #12]
 8009f3c:	687b      	ldr	r3, [r7, #4]
 8009f3e:	685b      	ldr	r3, [r3, #4]
 8009f40:	019a      	lsls	r2, r3, #6
 8009f42:	693b      	ldr	r3, [r7, #16]
 8009f44:	041b      	lsls	r3, r3, #16
 8009f46:	431a      	orrs	r2, r3
 8009f48:	68fb      	ldr	r3, [r7, #12]
 8009f4a:	061b      	lsls	r3, r3, #24
 8009f4c:	431a      	orrs	r2, r3
 8009f4e:	687b      	ldr	r3, [r7, #4]
 8009f50:	689b      	ldr	r3, [r3, #8]
 8009f52:	071b      	lsls	r3, r3, #28
 8009f54:	4957      	ldr	r1, [pc, #348]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f56:	4313      	orrs	r3, r2
 8009f58:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8009f5c:	687b      	ldr	r3, [r7, #4]
 8009f5e:	681b      	ldr	r3, [r3, #0]
 8009f60:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8009f64:	2b00      	cmp	r3, #0
 8009f66:	d004      	beq.n	8009f72 <HAL_RCCEx_PeriphCLKConfig+0x516>
 8009f68:	687b      	ldr	r3, [r7, #4]
 8009f6a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009f6c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009f70:	d00a      	beq.n	8009f88 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009f72:	687b      	ldr	r3, [r7, #4]
 8009f74:	681b      	ldr	r3, [r3, #0]
 8009f76:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009f7a:	2b00      	cmp	r3, #0
 8009f7c:	d02e      	beq.n	8009fdc <HAL_RCCEx_PeriphCLKConfig+0x580>
 8009f7e:	687b      	ldr	r3, [r7, #4]
 8009f80:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f82:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009f86:	d129      	bne.n	8009fdc <HAL_RCCEx_PeriphCLKConfig+0x580>
 8009f88:	4b4a      	ldr	r3, [pc, #296]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f8a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f8e:	0c1b      	lsrs	r3, r3, #16
 8009f90:	f003 0303 	and.w	r3, r3, #3
 8009f94:	613b      	str	r3, [r7, #16]
 8009f96:	4b47      	ldr	r3, [pc, #284]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f98:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f9c:	0f1b      	lsrs	r3, r3, #28
 8009f9e:	f003 0307 	and.w	r3, r3, #7
 8009fa2:	60fb      	str	r3, [r7, #12]
 8009fa4:	687b      	ldr	r3, [r7, #4]
 8009fa6:	685b      	ldr	r3, [r3, #4]
 8009fa8:	019a      	lsls	r2, r3, #6
 8009faa:	693b      	ldr	r3, [r7, #16]
 8009fac:	041b      	lsls	r3, r3, #16
 8009fae:	431a      	orrs	r2, r3
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	68db      	ldr	r3, [r3, #12]
 8009fb4:	061b      	lsls	r3, r3, #24
 8009fb6:	431a      	orrs	r2, r3
 8009fb8:	68fb      	ldr	r3, [r7, #12]
 8009fba:	071b      	lsls	r3, r3, #28
 8009fbc:	493d      	ldr	r1, [pc, #244]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009fbe:	4313      	orrs	r3, r2
 8009fc0:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8009fc4:	4b3b      	ldr	r3, [pc, #236]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009fc6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009fca:	f023 021f 	bic.w	r2, r3, #31
 8009fce:	687b      	ldr	r3, [r7, #4]
 8009fd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009fd2:	3b01      	subs	r3, #1
 8009fd4:	4937      	ldr	r1, [pc, #220]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009fd6:	4313      	orrs	r3, r2
 8009fd8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009fdc:	687b      	ldr	r3, [r7, #4]
 8009fde:	681b      	ldr	r3, [r3, #0]
 8009fe0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8009fe4:	2b00      	cmp	r3, #0
 8009fe6:	d01d      	beq.n	800a024 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8009fe8:	4b32      	ldr	r3, [pc, #200]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009fea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009fee:	0e1b      	lsrs	r3, r3, #24
 8009ff0:	f003 030f 	and.w	r3, r3, #15
 8009ff4:	613b      	str	r3, [r7, #16]
 8009ff6:	4b2f      	ldr	r3, [pc, #188]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009ff8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009ffc:	0f1b      	lsrs	r3, r3, #28
 8009ffe:	f003 0307 	and.w	r3, r3, #7
 800a002:	60fb      	str	r3, [r7, #12]
 800a004:	687b      	ldr	r3, [r7, #4]
 800a006:	685b      	ldr	r3, [r3, #4]
 800a008:	019a      	lsls	r2, r3, #6
 800a00a:	687b      	ldr	r3, [r7, #4]
 800a00c:	691b      	ldr	r3, [r3, #16]
 800a00e:	041b      	lsls	r3, r3, #16
 800a010:	431a      	orrs	r2, r3
 800a012:	693b      	ldr	r3, [r7, #16]
 800a014:	061b      	lsls	r3, r3, #24
 800a016:	431a      	orrs	r2, r3
 800a018:	68fb      	ldr	r3, [r7, #12]
 800a01a:	071b      	lsls	r3, r3, #28
 800a01c:	4925      	ldr	r1, [pc, #148]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a01e:	4313      	orrs	r3, r2
 800a020:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 800a024:	687b      	ldr	r3, [r7, #4]
 800a026:	681b      	ldr	r3, [r3, #0]
 800a028:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a02c:	2b00      	cmp	r3, #0
 800a02e:	d011      	beq.n	800a054 <HAL_RCCEx_PeriphCLKConfig+0x5f8>
 800a030:	687b      	ldr	r3, [r7, #4]
 800a032:	685b      	ldr	r3, [r3, #4]
 800a034:	019a      	lsls	r2, r3, #6
 800a036:	687b      	ldr	r3, [r7, #4]
 800a038:	691b      	ldr	r3, [r3, #16]
 800a03a:	041b      	lsls	r3, r3, #16
 800a03c:	431a      	orrs	r2, r3
 800a03e:	687b      	ldr	r3, [r7, #4]
 800a040:	68db      	ldr	r3, [r3, #12]
 800a042:	061b      	lsls	r3, r3, #24
 800a044:	431a      	orrs	r2, r3
 800a046:	687b      	ldr	r3, [r7, #4]
 800a048:	689b      	ldr	r3, [r3, #8]
 800a04a:	071b      	lsls	r3, r3, #28
 800a04c:	4919      	ldr	r1, [pc, #100]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a04e:	4313      	orrs	r3, r2
 800a050:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 800a054:	4b17      	ldr	r3, [pc, #92]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a056:	681b      	ldr	r3, [r3, #0]
 800a058:	4a16      	ldr	r2, [pc, #88]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a05a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800a05e:	6013      	str	r3, [r2, #0]
 800a060:	f7fc f9ac 	bl	80063bc <HAL_GetTick>
 800a064:	6178      	str	r0, [r7, #20]
 800a066:	e008      	b.n	800a07a <HAL_RCCEx_PeriphCLKConfig+0x61e>
 800a068:	f7fc f9a8 	bl	80063bc <HAL_GetTick>
 800a06c:	4602      	mov	r2, r0
 800a06e:	697b      	ldr	r3, [r7, #20]
 800a070:	1ad3      	subs	r3, r2, r3
 800a072:	2b64      	cmp	r3, #100	; 0x64
 800a074:	d901      	bls.n	800a07a <HAL_RCCEx_PeriphCLKConfig+0x61e>
 800a076:	2303      	movs	r3, #3
 800a078:	e0d7      	b.n	800a22a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800a07a:	4b0e      	ldr	r3, [pc, #56]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a07c:	681b      	ldr	r3, [r3, #0]
 800a07e:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a082:	2b00      	cmp	r3, #0
 800a084:	d0f0      	beq.n	800a068 <HAL_RCCEx_PeriphCLKConfig+0x60c>
 800a086:	69bb      	ldr	r3, [r7, #24]
 800a088:	2b01      	cmp	r3, #1
 800a08a:	f040 80cd 	bne.w	800a228 <HAL_RCCEx_PeriphCLKConfig+0x7cc>
 800a08e:	4b09      	ldr	r3, [pc, #36]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a090:	681b      	ldr	r3, [r3, #0]
 800a092:	4a08      	ldr	r2, [pc, #32]	; (800a0b4 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a094:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a098:	6013      	str	r3, [r2, #0]
 800a09a:	f7fc f98f 	bl	80063bc <HAL_GetTick>
 800a09e:	6178      	str	r0, [r7, #20]
 800a0a0:	e00a      	b.n	800a0b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>
 800a0a2:	f7fc f98b 	bl	80063bc <HAL_GetTick>
 800a0a6:	4602      	mov	r2, r0
 800a0a8:	697b      	ldr	r3, [r7, #20]
 800a0aa:	1ad3      	subs	r3, r2, r3
 800a0ac:	2b64      	cmp	r3, #100	; 0x64
 800a0ae:	d903      	bls.n	800a0b8 <HAL_RCCEx_PeriphCLKConfig+0x65c>
 800a0b0:	2303      	movs	r3, #3
 800a0b2:	e0ba      	b.n	800a22a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800a0b4:	40023800 	.word	0x40023800
 800a0b8:	4b5e      	ldr	r3, [pc, #376]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a0ba:	681b      	ldr	r3, [r3, #0]
 800a0bc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a0c0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800a0c4:	d0ed      	beq.n	800a0a2 <HAL_RCCEx_PeriphCLKConfig+0x646>
 800a0c6:	687b      	ldr	r3, [r7, #4]
 800a0c8:	681b      	ldr	r3, [r3, #0]
 800a0ca:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800a0ce:	2b00      	cmp	r3, #0
 800a0d0:	d003      	beq.n	800a0da <HAL_RCCEx_PeriphCLKConfig+0x67e>
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a0d6:	2b00      	cmp	r3, #0
 800a0d8:	d009      	beq.n	800a0ee <HAL_RCCEx_PeriphCLKConfig+0x692>
 800a0da:	687b      	ldr	r3, [r7, #4]
 800a0dc:	681b      	ldr	r3, [r3, #0]
 800a0de:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800a0e2:	2b00      	cmp	r3, #0
 800a0e4:	d02e      	beq.n	800a144 <HAL_RCCEx_PeriphCLKConfig+0x6e8>
 800a0e6:	687b      	ldr	r3, [r7, #4]
 800a0e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a0ea:	2b00      	cmp	r3, #0
 800a0ec:	d12a      	bne.n	800a144 <HAL_RCCEx_PeriphCLKConfig+0x6e8>
 800a0ee:	4b51      	ldr	r3, [pc, #324]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a0f0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a0f4:	0c1b      	lsrs	r3, r3, #16
 800a0f6:	f003 0303 	and.w	r3, r3, #3
 800a0fa:	613b      	str	r3, [r7, #16]
 800a0fc:	4b4d      	ldr	r3, [pc, #308]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a0fe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a102:	0f1b      	lsrs	r3, r3, #28
 800a104:	f003 0307 	and.w	r3, r3, #7
 800a108:	60fb      	str	r3, [r7, #12]
 800a10a:	687b      	ldr	r3, [r7, #4]
 800a10c:	695b      	ldr	r3, [r3, #20]
 800a10e:	019a      	lsls	r2, r3, #6
 800a110:	693b      	ldr	r3, [r7, #16]
 800a112:	041b      	lsls	r3, r3, #16
 800a114:	431a      	orrs	r2, r3
 800a116:	687b      	ldr	r3, [r7, #4]
 800a118:	699b      	ldr	r3, [r3, #24]
 800a11a:	061b      	lsls	r3, r3, #24
 800a11c:	431a      	orrs	r2, r3
 800a11e:	68fb      	ldr	r3, [r7, #12]
 800a120:	071b      	lsls	r3, r3, #28
 800a122:	4944      	ldr	r1, [pc, #272]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a124:	4313      	orrs	r3, r2
 800a126:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a12a:	4b42      	ldr	r3, [pc, #264]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a12c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a130:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 800a134:	687b      	ldr	r3, [r7, #4]
 800a136:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a138:	3b01      	subs	r3, #1
 800a13a:	021b      	lsls	r3, r3, #8
 800a13c:	493d      	ldr	r1, [pc, #244]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a13e:	4313      	orrs	r3, r2
 800a140:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	681b      	ldr	r3, [r3, #0]
 800a148:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800a14c:	2b00      	cmp	r3, #0
 800a14e:	d022      	beq.n	800a196 <HAL_RCCEx_PeriphCLKConfig+0x73a>
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a154:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800a158:	d11d      	bne.n	800a196 <HAL_RCCEx_PeriphCLKConfig+0x73a>
 800a15a:	4b36      	ldr	r3, [pc, #216]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a15c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a160:	0e1b      	lsrs	r3, r3, #24
 800a162:	f003 030f 	and.w	r3, r3, #15
 800a166:	613b      	str	r3, [r7, #16]
 800a168:	4b32      	ldr	r3, [pc, #200]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a16a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a16e:	0f1b      	lsrs	r3, r3, #28
 800a170:	f003 0307 	and.w	r3, r3, #7
 800a174:	60fb      	str	r3, [r7, #12]
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	695b      	ldr	r3, [r3, #20]
 800a17a:	019a      	lsls	r2, r3, #6
 800a17c:	687b      	ldr	r3, [r7, #4]
 800a17e:	6a1b      	ldr	r3, [r3, #32]
 800a180:	041b      	lsls	r3, r3, #16
 800a182:	431a      	orrs	r2, r3
 800a184:	693b      	ldr	r3, [r7, #16]
 800a186:	061b      	lsls	r3, r3, #24
 800a188:	431a      	orrs	r2, r3
 800a18a:	68fb      	ldr	r3, [r7, #12]
 800a18c:	071b      	lsls	r3, r3, #28
 800a18e:	4929      	ldr	r1, [pc, #164]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a190:	4313      	orrs	r3, r2
 800a192:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a196:	687b      	ldr	r3, [r7, #4]
 800a198:	681b      	ldr	r3, [r3, #0]
 800a19a:	f003 0308 	and.w	r3, r3, #8
 800a19e:	2b00      	cmp	r3, #0
 800a1a0:	d028      	beq.n	800a1f4 <HAL_RCCEx_PeriphCLKConfig+0x798>
 800a1a2:	4b24      	ldr	r3, [pc, #144]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1a4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a1a8:	0e1b      	lsrs	r3, r3, #24
 800a1aa:	f003 030f 	and.w	r3, r3, #15
 800a1ae:	613b      	str	r3, [r7, #16]
 800a1b0:	4b20      	ldr	r3, [pc, #128]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a1b6:	0c1b      	lsrs	r3, r3, #16
 800a1b8:	f003 0303 	and.w	r3, r3, #3
 800a1bc:	60fb      	str	r3, [r7, #12]
 800a1be:	687b      	ldr	r3, [r7, #4]
 800a1c0:	695b      	ldr	r3, [r3, #20]
 800a1c2:	019a      	lsls	r2, r3, #6
 800a1c4:	68fb      	ldr	r3, [r7, #12]
 800a1c6:	041b      	lsls	r3, r3, #16
 800a1c8:	431a      	orrs	r2, r3
 800a1ca:	693b      	ldr	r3, [r7, #16]
 800a1cc:	061b      	lsls	r3, r3, #24
 800a1ce:	431a      	orrs	r2, r3
 800a1d0:	687b      	ldr	r3, [r7, #4]
 800a1d2:	69db      	ldr	r3, [r3, #28]
 800a1d4:	071b      	lsls	r3, r3, #28
 800a1d6:	4917      	ldr	r1, [pc, #92]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1d8:	4313      	orrs	r3, r2
 800a1da:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a1de:	4b15      	ldr	r3, [pc, #84]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1e0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a1e4:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800a1e8:	687b      	ldr	r3, [r7, #4]
 800a1ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1ec:	4911      	ldr	r1, [pc, #68]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1ee:	4313      	orrs	r3, r2
 800a1f0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800a1f4:	4b0f      	ldr	r3, [pc, #60]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1f6:	681b      	ldr	r3, [r3, #0]
 800a1f8:	4a0e      	ldr	r2, [pc, #56]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1fa:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a1fe:	6013      	str	r3, [r2, #0]
 800a200:	f7fc f8dc 	bl	80063bc <HAL_GetTick>
 800a204:	6178      	str	r0, [r7, #20]
 800a206:	e008      	b.n	800a21a <HAL_RCCEx_PeriphCLKConfig+0x7be>
 800a208:	f7fc f8d8 	bl	80063bc <HAL_GetTick>
 800a20c:	4602      	mov	r2, r0
 800a20e:	697b      	ldr	r3, [r7, #20]
 800a210:	1ad3      	subs	r3, r2, r3
 800a212:	2b64      	cmp	r3, #100	; 0x64
 800a214:	d901      	bls.n	800a21a <HAL_RCCEx_PeriphCLKConfig+0x7be>
 800a216:	2303      	movs	r3, #3
 800a218:	e007      	b.n	800a22a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800a21a:	4b06      	ldr	r3, [pc, #24]	; (800a234 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a21c:	681b      	ldr	r3, [r3, #0]
 800a21e:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a222:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800a226:	d1ef      	bne.n	800a208 <HAL_RCCEx_PeriphCLKConfig+0x7ac>
 800a228:	2300      	movs	r3, #0
 800a22a:	4618      	mov	r0, r3
 800a22c:	3720      	adds	r7, #32
 800a22e:	46bd      	mov	sp, r7
 800a230:	bd80      	pop	{r7, pc}
 800a232:	bf00      	nop
 800a234:	40023800 	.word	0x40023800

0800a238 <HAL_RTC_Init>:
 800a238:	b580      	push	{r7, lr}
 800a23a:	b082      	sub	sp, #8
 800a23c:	af00      	add	r7, sp, #0
 800a23e:	6078      	str	r0, [r7, #4]
 800a240:	687b      	ldr	r3, [r7, #4]
 800a242:	2b00      	cmp	r3, #0
 800a244:	d101      	bne.n	800a24a <HAL_RTC_Init+0x12>
 800a246:	2301      	movs	r3, #1
 800a248:	e06b      	b.n	800a322 <HAL_RTC_Init+0xea>
 800a24a:	687b      	ldr	r3, [r7, #4]
 800a24c:	7f5b      	ldrb	r3, [r3, #29]
 800a24e:	b2db      	uxtb	r3, r3
 800a250:	2b00      	cmp	r3, #0
 800a252:	d105      	bne.n	800a260 <HAL_RTC_Init+0x28>
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	2200      	movs	r2, #0
 800a258:	771a      	strb	r2, [r3, #28]
 800a25a:	6878      	ldr	r0, [r7, #4]
 800a25c:	f7fb fcb4 	bl	8005bc8 <HAL_RTC_MspInit>
 800a260:	687b      	ldr	r3, [r7, #4]
 800a262:	2202      	movs	r2, #2
 800a264:	775a      	strb	r2, [r3, #29]
 800a266:	687b      	ldr	r3, [r7, #4]
 800a268:	681b      	ldr	r3, [r3, #0]
 800a26a:	22ca      	movs	r2, #202	; 0xca
 800a26c:	625a      	str	r2, [r3, #36]	; 0x24
 800a26e:	687b      	ldr	r3, [r7, #4]
 800a270:	681b      	ldr	r3, [r3, #0]
 800a272:	2253      	movs	r2, #83	; 0x53
 800a274:	625a      	str	r2, [r3, #36]	; 0x24
 800a276:	6878      	ldr	r0, [r7, #4]
 800a278:	f000 fb00 	bl	800a87c <RTC_EnterInitMode>
 800a27c:	4603      	mov	r3, r0
 800a27e:	2b00      	cmp	r3, #0
 800a280:	d008      	beq.n	800a294 <HAL_RTC_Init+0x5c>
 800a282:	687b      	ldr	r3, [r7, #4]
 800a284:	681b      	ldr	r3, [r3, #0]
 800a286:	22ff      	movs	r2, #255	; 0xff
 800a288:	625a      	str	r2, [r3, #36]	; 0x24
 800a28a:	687b      	ldr	r3, [r7, #4]
 800a28c:	2204      	movs	r2, #4
 800a28e:	775a      	strb	r2, [r3, #29]
 800a290:	2301      	movs	r3, #1
 800a292:	e046      	b.n	800a322 <HAL_RTC_Init+0xea>
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	681b      	ldr	r3, [r3, #0]
 800a298:	6899      	ldr	r1, [r3, #8]
 800a29a:	687b      	ldr	r3, [r7, #4]
 800a29c:	681a      	ldr	r2, [r3, #0]
 800a29e:	4b23      	ldr	r3, [pc, #140]	; (800a32c <HAL_RTC_Init+0xf4>)
 800a2a0:	400b      	ands	r3, r1
 800a2a2:	6093      	str	r3, [r2, #8]
 800a2a4:	687b      	ldr	r3, [r7, #4]
 800a2a6:	681b      	ldr	r3, [r3, #0]
 800a2a8:	6899      	ldr	r1, [r3, #8]
 800a2aa:	687b      	ldr	r3, [r7, #4]
 800a2ac:	685a      	ldr	r2, [r3, #4]
 800a2ae:	687b      	ldr	r3, [r7, #4]
 800a2b0:	691b      	ldr	r3, [r3, #16]
 800a2b2:	431a      	orrs	r2, r3
 800a2b4:	687b      	ldr	r3, [r7, #4]
 800a2b6:	695b      	ldr	r3, [r3, #20]
 800a2b8:	431a      	orrs	r2, r3
 800a2ba:	687b      	ldr	r3, [r7, #4]
 800a2bc:	681b      	ldr	r3, [r3, #0]
 800a2be:	430a      	orrs	r2, r1
 800a2c0:	609a      	str	r2, [r3, #8]
 800a2c2:	687b      	ldr	r3, [r7, #4]
 800a2c4:	681b      	ldr	r3, [r3, #0]
 800a2c6:	687a      	ldr	r2, [r7, #4]
 800a2c8:	68d2      	ldr	r2, [r2, #12]
 800a2ca:	611a      	str	r2, [r3, #16]
 800a2cc:	687b      	ldr	r3, [r7, #4]
 800a2ce:	681b      	ldr	r3, [r3, #0]
 800a2d0:	6919      	ldr	r1, [r3, #16]
 800a2d2:	687b      	ldr	r3, [r7, #4]
 800a2d4:	689b      	ldr	r3, [r3, #8]
 800a2d6:	041a      	lsls	r2, r3, #16
 800a2d8:	687b      	ldr	r3, [r7, #4]
 800a2da:	681b      	ldr	r3, [r3, #0]
 800a2dc:	430a      	orrs	r2, r1
 800a2de:	611a      	str	r2, [r3, #16]
 800a2e0:	687b      	ldr	r3, [r7, #4]
 800a2e2:	681b      	ldr	r3, [r3, #0]
 800a2e4:	68da      	ldr	r2, [r3, #12]
 800a2e6:	687b      	ldr	r3, [r7, #4]
 800a2e8:	681b      	ldr	r3, [r3, #0]
 800a2ea:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a2ee:	60da      	str	r2, [r3, #12]
 800a2f0:	687b      	ldr	r3, [r7, #4]
 800a2f2:	681b      	ldr	r3, [r3, #0]
 800a2f4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800a2f6:	687b      	ldr	r3, [r7, #4]
 800a2f8:	681b      	ldr	r3, [r3, #0]
 800a2fa:	f022 0208 	bic.w	r2, r2, #8
 800a2fe:	64da      	str	r2, [r3, #76]	; 0x4c
 800a300:	687b      	ldr	r3, [r7, #4]
 800a302:	681b      	ldr	r3, [r3, #0]
 800a304:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 800a306:	687b      	ldr	r3, [r7, #4]
 800a308:	699a      	ldr	r2, [r3, #24]
 800a30a:	687b      	ldr	r3, [r7, #4]
 800a30c:	681b      	ldr	r3, [r3, #0]
 800a30e:	430a      	orrs	r2, r1
 800a310:	64da      	str	r2, [r3, #76]	; 0x4c
 800a312:	687b      	ldr	r3, [r7, #4]
 800a314:	681b      	ldr	r3, [r3, #0]
 800a316:	22ff      	movs	r2, #255	; 0xff
 800a318:	625a      	str	r2, [r3, #36]	; 0x24
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	2201      	movs	r2, #1
 800a31e:	775a      	strb	r2, [r3, #29]
 800a320:	2300      	movs	r3, #0
 800a322:	4618      	mov	r0, r3
 800a324:	3708      	adds	r7, #8
 800a326:	46bd      	mov	sp, r7
 800a328:	bd80      	pop	{r7, pc}
 800a32a:	bf00      	nop
 800a32c:	ff8fffbf 	.word	0xff8fffbf

0800a330 <HAL_RTC_SetTime>:
 800a330:	b590      	push	{r4, r7, lr}
 800a332:	b087      	sub	sp, #28
 800a334:	af00      	add	r7, sp, #0
 800a336:	60f8      	str	r0, [r7, #12]
 800a338:	60b9      	str	r1, [r7, #8]
 800a33a:	607a      	str	r2, [r7, #4]
 800a33c:	2300      	movs	r3, #0
 800a33e:	617b      	str	r3, [r7, #20]
 800a340:	68fb      	ldr	r3, [r7, #12]
 800a342:	7f1b      	ldrb	r3, [r3, #28]
 800a344:	2b01      	cmp	r3, #1
 800a346:	d101      	bne.n	800a34c <HAL_RTC_SetTime+0x1c>
 800a348:	2302      	movs	r3, #2
 800a34a:	e0a8      	b.n	800a49e <HAL_RTC_SetTime+0x16e>
 800a34c:	68fb      	ldr	r3, [r7, #12]
 800a34e:	2201      	movs	r2, #1
 800a350:	771a      	strb	r2, [r3, #28]
 800a352:	68fb      	ldr	r3, [r7, #12]
 800a354:	2202      	movs	r2, #2
 800a356:	775a      	strb	r2, [r3, #29]
 800a358:	687b      	ldr	r3, [r7, #4]
 800a35a:	2b00      	cmp	r3, #0
 800a35c:	d126      	bne.n	800a3ac <HAL_RTC_SetTime+0x7c>
 800a35e:	68fb      	ldr	r3, [r7, #12]
 800a360:	681b      	ldr	r3, [r3, #0]
 800a362:	689b      	ldr	r3, [r3, #8]
 800a364:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a368:	2b00      	cmp	r3, #0
 800a36a:	d102      	bne.n	800a372 <HAL_RTC_SetTime+0x42>
 800a36c:	68bb      	ldr	r3, [r7, #8]
 800a36e:	2200      	movs	r2, #0
 800a370:	731a      	strb	r2, [r3, #12]
 800a372:	68bb      	ldr	r3, [r7, #8]
 800a374:	781b      	ldrb	r3, [r3, #0]
 800a376:	4618      	mov	r0, r3
 800a378:	f000 faac 	bl	800a8d4 <RTC_ByteToBcd2>
 800a37c:	4603      	mov	r3, r0
 800a37e:	041c      	lsls	r4, r3, #16
 800a380:	68bb      	ldr	r3, [r7, #8]
 800a382:	785b      	ldrb	r3, [r3, #1]
 800a384:	4618      	mov	r0, r3
 800a386:	f000 faa5 	bl	800a8d4 <RTC_ByteToBcd2>
 800a38a:	4603      	mov	r3, r0
 800a38c:	021b      	lsls	r3, r3, #8
 800a38e:	431c      	orrs	r4, r3
 800a390:	68bb      	ldr	r3, [r7, #8]
 800a392:	789b      	ldrb	r3, [r3, #2]
 800a394:	4618      	mov	r0, r3
 800a396:	f000 fa9d 	bl	800a8d4 <RTC_ByteToBcd2>
 800a39a:	4603      	mov	r3, r0
 800a39c:	ea44 0203 	orr.w	r2, r4, r3
 800a3a0:	68bb      	ldr	r3, [r7, #8]
 800a3a2:	7b1b      	ldrb	r3, [r3, #12]
 800a3a4:	041b      	lsls	r3, r3, #16
 800a3a6:	4313      	orrs	r3, r2
 800a3a8:	617b      	str	r3, [r7, #20]
 800a3aa:	e018      	b.n	800a3de <HAL_RTC_SetTime+0xae>
 800a3ac:	68fb      	ldr	r3, [r7, #12]
 800a3ae:	681b      	ldr	r3, [r3, #0]
 800a3b0:	689b      	ldr	r3, [r3, #8]
 800a3b2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a3b6:	2b00      	cmp	r3, #0
 800a3b8:	d102      	bne.n	800a3c0 <HAL_RTC_SetTime+0x90>
 800a3ba:	68bb      	ldr	r3, [r7, #8]
 800a3bc:	2200      	movs	r2, #0
 800a3be:	731a      	strb	r2, [r3, #12]
 800a3c0:	68bb      	ldr	r3, [r7, #8]
 800a3c2:	781b      	ldrb	r3, [r3, #0]
 800a3c4:	041a      	lsls	r2, r3, #16
 800a3c6:	68bb      	ldr	r3, [r7, #8]
 800a3c8:	785b      	ldrb	r3, [r3, #1]
 800a3ca:	021b      	lsls	r3, r3, #8
 800a3cc:	4313      	orrs	r3, r2
 800a3ce:	68ba      	ldr	r2, [r7, #8]
 800a3d0:	7892      	ldrb	r2, [r2, #2]
 800a3d2:	431a      	orrs	r2, r3
 800a3d4:	68bb      	ldr	r3, [r7, #8]
 800a3d6:	7b1b      	ldrb	r3, [r3, #12]
 800a3d8:	041b      	lsls	r3, r3, #16
 800a3da:	4313      	orrs	r3, r2
 800a3dc:	617b      	str	r3, [r7, #20]
 800a3de:	68fb      	ldr	r3, [r7, #12]
 800a3e0:	681b      	ldr	r3, [r3, #0]
 800a3e2:	22ca      	movs	r2, #202	; 0xca
 800a3e4:	625a      	str	r2, [r3, #36]	; 0x24
 800a3e6:	68fb      	ldr	r3, [r7, #12]
 800a3e8:	681b      	ldr	r3, [r3, #0]
 800a3ea:	2253      	movs	r2, #83	; 0x53
 800a3ec:	625a      	str	r2, [r3, #36]	; 0x24
 800a3ee:	68f8      	ldr	r0, [r7, #12]
 800a3f0:	f000 fa44 	bl	800a87c <RTC_EnterInitMode>
 800a3f4:	4603      	mov	r3, r0
 800a3f6:	2b00      	cmp	r3, #0
 800a3f8:	d00b      	beq.n	800a412 <HAL_RTC_SetTime+0xe2>
 800a3fa:	68fb      	ldr	r3, [r7, #12]
 800a3fc:	681b      	ldr	r3, [r3, #0]
 800a3fe:	22ff      	movs	r2, #255	; 0xff
 800a400:	625a      	str	r2, [r3, #36]	; 0x24
 800a402:	68fb      	ldr	r3, [r7, #12]
 800a404:	2204      	movs	r2, #4
 800a406:	775a      	strb	r2, [r3, #29]
 800a408:	68fb      	ldr	r3, [r7, #12]
 800a40a:	2200      	movs	r2, #0
 800a40c:	771a      	strb	r2, [r3, #28]
 800a40e:	2301      	movs	r3, #1
 800a410:	e045      	b.n	800a49e <HAL_RTC_SetTime+0x16e>
 800a412:	68fb      	ldr	r3, [r7, #12]
 800a414:	681a      	ldr	r2, [r3, #0]
 800a416:	6979      	ldr	r1, [r7, #20]
 800a418:	4b23      	ldr	r3, [pc, #140]	; (800a4a8 <HAL_RTC_SetTime+0x178>)
 800a41a:	400b      	ands	r3, r1
 800a41c:	6013      	str	r3, [r2, #0]
 800a41e:	68fb      	ldr	r3, [r7, #12]
 800a420:	681b      	ldr	r3, [r3, #0]
 800a422:	689a      	ldr	r2, [r3, #8]
 800a424:	68fb      	ldr	r3, [r7, #12]
 800a426:	681b      	ldr	r3, [r3, #0]
 800a428:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800a42c:	609a      	str	r2, [r3, #8]
 800a42e:	68fb      	ldr	r3, [r7, #12]
 800a430:	681b      	ldr	r3, [r3, #0]
 800a432:	6899      	ldr	r1, [r3, #8]
 800a434:	68bb      	ldr	r3, [r7, #8]
 800a436:	691a      	ldr	r2, [r3, #16]
 800a438:	68bb      	ldr	r3, [r7, #8]
 800a43a:	695b      	ldr	r3, [r3, #20]
 800a43c:	431a      	orrs	r2, r3
 800a43e:	68fb      	ldr	r3, [r7, #12]
 800a440:	681b      	ldr	r3, [r3, #0]
 800a442:	430a      	orrs	r2, r1
 800a444:	609a      	str	r2, [r3, #8]
 800a446:	68fb      	ldr	r3, [r7, #12]
 800a448:	681b      	ldr	r3, [r3, #0]
 800a44a:	68da      	ldr	r2, [r3, #12]
 800a44c:	68fb      	ldr	r3, [r7, #12]
 800a44e:	681b      	ldr	r3, [r3, #0]
 800a450:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a454:	60da      	str	r2, [r3, #12]
 800a456:	68fb      	ldr	r3, [r7, #12]
 800a458:	681b      	ldr	r3, [r3, #0]
 800a45a:	689b      	ldr	r3, [r3, #8]
 800a45c:	f003 0320 	and.w	r3, r3, #32
 800a460:	2b00      	cmp	r3, #0
 800a462:	d111      	bne.n	800a488 <HAL_RTC_SetTime+0x158>
 800a464:	68f8      	ldr	r0, [r7, #12]
 800a466:	f000 f9e1 	bl	800a82c <HAL_RTC_WaitForSynchro>
 800a46a:	4603      	mov	r3, r0
 800a46c:	2b00      	cmp	r3, #0
 800a46e:	d00b      	beq.n	800a488 <HAL_RTC_SetTime+0x158>
 800a470:	68fb      	ldr	r3, [r7, #12]
 800a472:	681b      	ldr	r3, [r3, #0]
 800a474:	22ff      	movs	r2, #255	; 0xff
 800a476:	625a      	str	r2, [r3, #36]	; 0x24
 800a478:	68fb      	ldr	r3, [r7, #12]
 800a47a:	2204      	movs	r2, #4
 800a47c:	775a      	strb	r2, [r3, #29]
 800a47e:	68fb      	ldr	r3, [r7, #12]
 800a480:	2200      	movs	r2, #0
 800a482:	771a      	strb	r2, [r3, #28]
 800a484:	2301      	movs	r3, #1
 800a486:	e00a      	b.n	800a49e <HAL_RTC_SetTime+0x16e>
 800a488:	68fb      	ldr	r3, [r7, #12]
 800a48a:	681b      	ldr	r3, [r3, #0]
 800a48c:	22ff      	movs	r2, #255	; 0xff
 800a48e:	625a      	str	r2, [r3, #36]	; 0x24
 800a490:	68fb      	ldr	r3, [r7, #12]
 800a492:	2201      	movs	r2, #1
 800a494:	775a      	strb	r2, [r3, #29]
 800a496:	68fb      	ldr	r3, [r7, #12]
 800a498:	2200      	movs	r2, #0
 800a49a:	771a      	strb	r2, [r3, #28]
 800a49c:	2300      	movs	r3, #0
 800a49e:	4618      	mov	r0, r3
 800a4a0:	371c      	adds	r7, #28
 800a4a2:	46bd      	mov	sp, r7
 800a4a4:	bd90      	pop	{r4, r7, pc}
 800a4a6:	bf00      	nop
 800a4a8:	007f7f7f 	.word	0x007f7f7f

0800a4ac <HAL_RTC_SetDate>:
 800a4ac:	b590      	push	{r4, r7, lr}
 800a4ae:	b087      	sub	sp, #28
 800a4b0:	af00      	add	r7, sp, #0
 800a4b2:	60f8      	str	r0, [r7, #12]
 800a4b4:	60b9      	str	r1, [r7, #8]
 800a4b6:	607a      	str	r2, [r7, #4]
 800a4b8:	2300      	movs	r3, #0
 800a4ba:	617b      	str	r3, [r7, #20]
 800a4bc:	68fb      	ldr	r3, [r7, #12]
 800a4be:	7f1b      	ldrb	r3, [r3, #28]
 800a4c0:	2b01      	cmp	r3, #1
 800a4c2:	d101      	bne.n	800a4c8 <HAL_RTC_SetDate+0x1c>
 800a4c4:	2302      	movs	r3, #2
 800a4c6:	e092      	b.n	800a5ee <HAL_RTC_SetDate+0x142>
 800a4c8:	68fb      	ldr	r3, [r7, #12]
 800a4ca:	2201      	movs	r2, #1
 800a4cc:	771a      	strb	r2, [r3, #28]
 800a4ce:	68fb      	ldr	r3, [r7, #12]
 800a4d0:	2202      	movs	r2, #2
 800a4d2:	775a      	strb	r2, [r3, #29]
 800a4d4:	687b      	ldr	r3, [r7, #4]
 800a4d6:	2b00      	cmp	r3, #0
 800a4d8:	d10e      	bne.n	800a4f8 <HAL_RTC_SetDate+0x4c>
 800a4da:	68bb      	ldr	r3, [r7, #8]
 800a4dc:	785b      	ldrb	r3, [r3, #1]
 800a4de:	f003 0310 	and.w	r3, r3, #16
 800a4e2:	2b00      	cmp	r3, #0
 800a4e4:	d008      	beq.n	800a4f8 <HAL_RTC_SetDate+0x4c>
 800a4e6:	68bb      	ldr	r3, [r7, #8]
 800a4e8:	785b      	ldrb	r3, [r3, #1]
 800a4ea:	f023 0310 	bic.w	r3, r3, #16
 800a4ee:	b2db      	uxtb	r3, r3
 800a4f0:	330a      	adds	r3, #10
 800a4f2:	b2da      	uxtb	r2, r3
 800a4f4:	68bb      	ldr	r3, [r7, #8]
 800a4f6:	705a      	strb	r2, [r3, #1]
 800a4f8:	687b      	ldr	r3, [r7, #4]
 800a4fa:	2b00      	cmp	r3, #0
 800a4fc:	d11c      	bne.n	800a538 <HAL_RTC_SetDate+0x8c>
 800a4fe:	68bb      	ldr	r3, [r7, #8]
 800a500:	78db      	ldrb	r3, [r3, #3]
 800a502:	4618      	mov	r0, r3
 800a504:	f000 f9e6 	bl	800a8d4 <RTC_ByteToBcd2>
 800a508:	4603      	mov	r3, r0
 800a50a:	041c      	lsls	r4, r3, #16
 800a50c:	68bb      	ldr	r3, [r7, #8]
 800a50e:	785b      	ldrb	r3, [r3, #1]
 800a510:	4618      	mov	r0, r3
 800a512:	f000 f9df 	bl	800a8d4 <RTC_ByteToBcd2>
 800a516:	4603      	mov	r3, r0
 800a518:	021b      	lsls	r3, r3, #8
 800a51a:	431c      	orrs	r4, r3
 800a51c:	68bb      	ldr	r3, [r7, #8]
 800a51e:	789b      	ldrb	r3, [r3, #2]
 800a520:	4618      	mov	r0, r3
 800a522:	f000 f9d7 	bl	800a8d4 <RTC_ByteToBcd2>
 800a526:	4603      	mov	r3, r0
 800a528:	ea44 0203 	orr.w	r2, r4, r3
 800a52c:	68bb      	ldr	r3, [r7, #8]
 800a52e:	781b      	ldrb	r3, [r3, #0]
 800a530:	035b      	lsls	r3, r3, #13
 800a532:	4313      	orrs	r3, r2
 800a534:	617b      	str	r3, [r7, #20]
 800a536:	e00e      	b.n	800a556 <HAL_RTC_SetDate+0xaa>
 800a538:	68bb      	ldr	r3, [r7, #8]
 800a53a:	78db      	ldrb	r3, [r3, #3]
 800a53c:	041a      	lsls	r2, r3, #16
 800a53e:	68bb      	ldr	r3, [r7, #8]
 800a540:	785b      	ldrb	r3, [r3, #1]
 800a542:	021b      	lsls	r3, r3, #8
 800a544:	4313      	orrs	r3, r2
 800a546:	68ba      	ldr	r2, [r7, #8]
 800a548:	7892      	ldrb	r2, [r2, #2]
 800a54a:	431a      	orrs	r2, r3
 800a54c:	68bb      	ldr	r3, [r7, #8]
 800a54e:	781b      	ldrb	r3, [r3, #0]
 800a550:	035b      	lsls	r3, r3, #13
 800a552:	4313      	orrs	r3, r2
 800a554:	617b      	str	r3, [r7, #20]
 800a556:	68fb      	ldr	r3, [r7, #12]
 800a558:	681b      	ldr	r3, [r3, #0]
 800a55a:	22ca      	movs	r2, #202	; 0xca
 800a55c:	625a      	str	r2, [r3, #36]	; 0x24
 800a55e:	68fb      	ldr	r3, [r7, #12]
 800a560:	681b      	ldr	r3, [r3, #0]
 800a562:	2253      	movs	r2, #83	; 0x53
 800a564:	625a      	str	r2, [r3, #36]	; 0x24
 800a566:	68f8      	ldr	r0, [r7, #12]
 800a568:	f000 f988 	bl	800a87c <RTC_EnterInitMode>
 800a56c:	4603      	mov	r3, r0
 800a56e:	2b00      	cmp	r3, #0
 800a570:	d00b      	beq.n	800a58a <HAL_RTC_SetDate+0xde>
 800a572:	68fb      	ldr	r3, [r7, #12]
 800a574:	681b      	ldr	r3, [r3, #0]
 800a576:	22ff      	movs	r2, #255	; 0xff
 800a578:	625a      	str	r2, [r3, #36]	; 0x24
 800a57a:	68fb      	ldr	r3, [r7, #12]
 800a57c:	2204      	movs	r2, #4
 800a57e:	775a      	strb	r2, [r3, #29]
 800a580:	68fb      	ldr	r3, [r7, #12]
 800a582:	2200      	movs	r2, #0
 800a584:	771a      	strb	r2, [r3, #28]
 800a586:	2301      	movs	r3, #1
 800a588:	e031      	b.n	800a5ee <HAL_RTC_SetDate+0x142>
 800a58a:	68fb      	ldr	r3, [r7, #12]
 800a58c:	681a      	ldr	r2, [r3, #0]
 800a58e:	6979      	ldr	r1, [r7, #20]
 800a590:	4b19      	ldr	r3, [pc, #100]	; (800a5f8 <HAL_RTC_SetDate+0x14c>)
 800a592:	400b      	ands	r3, r1
 800a594:	6053      	str	r3, [r2, #4]
 800a596:	68fb      	ldr	r3, [r7, #12]
 800a598:	681b      	ldr	r3, [r3, #0]
 800a59a:	68da      	ldr	r2, [r3, #12]
 800a59c:	68fb      	ldr	r3, [r7, #12]
 800a59e:	681b      	ldr	r3, [r3, #0]
 800a5a0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a5a4:	60da      	str	r2, [r3, #12]
 800a5a6:	68fb      	ldr	r3, [r7, #12]
 800a5a8:	681b      	ldr	r3, [r3, #0]
 800a5aa:	689b      	ldr	r3, [r3, #8]
 800a5ac:	f003 0320 	and.w	r3, r3, #32
 800a5b0:	2b00      	cmp	r3, #0
 800a5b2:	d111      	bne.n	800a5d8 <HAL_RTC_SetDate+0x12c>
 800a5b4:	68f8      	ldr	r0, [r7, #12]
 800a5b6:	f000 f939 	bl	800a82c <HAL_RTC_WaitForSynchro>
 800a5ba:	4603      	mov	r3, r0
 800a5bc:	2b00      	cmp	r3, #0
 800a5be:	d00b      	beq.n	800a5d8 <HAL_RTC_SetDate+0x12c>
 800a5c0:	68fb      	ldr	r3, [r7, #12]
 800a5c2:	681b      	ldr	r3, [r3, #0]
 800a5c4:	22ff      	movs	r2, #255	; 0xff
 800a5c6:	625a      	str	r2, [r3, #36]	; 0x24
 800a5c8:	68fb      	ldr	r3, [r7, #12]
 800a5ca:	2204      	movs	r2, #4
 800a5cc:	775a      	strb	r2, [r3, #29]
 800a5ce:	68fb      	ldr	r3, [r7, #12]
 800a5d0:	2200      	movs	r2, #0
 800a5d2:	771a      	strb	r2, [r3, #28]
 800a5d4:	2301      	movs	r3, #1
 800a5d6:	e00a      	b.n	800a5ee <HAL_RTC_SetDate+0x142>
 800a5d8:	68fb      	ldr	r3, [r7, #12]
 800a5da:	681b      	ldr	r3, [r3, #0]
 800a5dc:	22ff      	movs	r2, #255	; 0xff
 800a5de:	625a      	str	r2, [r3, #36]	; 0x24
 800a5e0:	68fb      	ldr	r3, [r7, #12]
 800a5e2:	2201      	movs	r2, #1
 800a5e4:	775a      	strb	r2, [r3, #29]
 800a5e6:	68fb      	ldr	r3, [r7, #12]
 800a5e8:	2200      	movs	r2, #0
 800a5ea:	771a      	strb	r2, [r3, #28]
 800a5ec:	2300      	movs	r3, #0
 800a5ee:	4618      	mov	r0, r3
 800a5f0:	371c      	adds	r7, #28
 800a5f2:	46bd      	mov	sp, r7
 800a5f4:	bd90      	pop	{r4, r7, pc}
 800a5f6:	bf00      	nop
 800a5f8:	00ffff3f 	.word	0x00ffff3f

0800a5fc <HAL_RTC_SetAlarm>:
 800a5fc:	b590      	push	{r4, r7, lr}
 800a5fe:	b089      	sub	sp, #36	; 0x24
 800a600:	af00      	add	r7, sp, #0
 800a602:	60f8      	str	r0, [r7, #12]
 800a604:	60b9      	str	r1, [r7, #8]
 800a606:	607a      	str	r2, [r7, #4]
 800a608:	2300      	movs	r3, #0
 800a60a:	61bb      	str	r3, [r7, #24]
 800a60c:	2300      	movs	r3, #0
 800a60e:	61fb      	str	r3, [r7, #28]
 800a610:	2300      	movs	r3, #0
 800a612:	617b      	str	r3, [r7, #20]
 800a614:	68fb      	ldr	r3, [r7, #12]
 800a616:	7f1b      	ldrb	r3, [r3, #28]
 800a618:	2b01      	cmp	r3, #1
 800a61a:	d101      	bne.n	800a620 <HAL_RTC_SetAlarm+0x24>
 800a61c:	2302      	movs	r3, #2
 800a61e:	e101      	b.n	800a824 <HAL_RTC_SetAlarm+0x228>
 800a620:	68fb      	ldr	r3, [r7, #12]
 800a622:	2201      	movs	r2, #1
 800a624:	771a      	strb	r2, [r3, #28]
 800a626:	68fb      	ldr	r3, [r7, #12]
 800a628:	2202      	movs	r2, #2
 800a62a:	775a      	strb	r2, [r3, #29]
 800a62c:	687b      	ldr	r3, [r7, #4]
 800a62e:	2b00      	cmp	r3, #0
 800a630:	d137      	bne.n	800a6a2 <HAL_RTC_SetAlarm+0xa6>
 800a632:	68fb      	ldr	r3, [r7, #12]
 800a634:	681b      	ldr	r3, [r3, #0]
 800a636:	689b      	ldr	r3, [r3, #8]
 800a638:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a63c:	2b00      	cmp	r3, #0
 800a63e:	d102      	bne.n	800a646 <HAL_RTC_SetAlarm+0x4a>
 800a640:	68bb      	ldr	r3, [r7, #8]
 800a642:	2200      	movs	r2, #0
 800a644:	731a      	strb	r2, [r3, #12]
 800a646:	68bb      	ldr	r3, [r7, #8]
 800a648:	781b      	ldrb	r3, [r3, #0]
 800a64a:	4618      	mov	r0, r3
 800a64c:	f000 f942 	bl	800a8d4 <RTC_ByteToBcd2>
 800a650:	4603      	mov	r3, r0
 800a652:	041c      	lsls	r4, r3, #16
 800a654:	68bb      	ldr	r3, [r7, #8]
 800a656:	785b      	ldrb	r3, [r3, #1]
 800a658:	4618      	mov	r0, r3
 800a65a:	f000 f93b 	bl	800a8d4 <RTC_ByteToBcd2>
 800a65e:	4603      	mov	r3, r0
 800a660:	021b      	lsls	r3, r3, #8
 800a662:	431c      	orrs	r4, r3
 800a664:	68bb      	ldr	r3, [r7, #8]
 800a666:	789b      	ldrb	r3, [r3, #2]
 800a668:	4618      	mov	r0, r3
 800a66a:	f000 f933 	bl	800a8d4 <RTC_ByteToBcd2>
 800a66e:	4603      	mov	r3, r0
 800a670:	ea44 0203 	orr.w	r2, r4, r3
 800a674:	68bb      	ldr	r3, [r7, #8]
 800a676:	7b1b      	ldrb	r3, [r3, #12]
 800a678:	041b      	lsls	r3, r3, #16
 800a67a:	ea42 0403 	orr.w	r4, r2, r3
 800a67e:	68bb      	ldr	r3, [r7, #8]
 800a680:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800a684:	4618      	mov	r0, r3
 800a686:	f000 f925 	bl	800a8d4 <RTC_ByteToBcd2>
 800a68a:	4603      	mov	r3, r0
 800a68c:	061b      	lsls	r3, r3, #24
 800a68e:	ea44 0203 	orr.w	r2, r4, r3
 800a692:	68bb      	ldr	r3, [r7, #8]
 800a694:	6a1b      	ldr	r3, [r3, #32]
 800a696:	431a      	orrs	r2, r3
 800a698:	68bb      	ldr	r3, [r7, #8]
 800a69a:	699b      	ldr	r3, [r3, #24]
 800a69c:	4313      	orrs	r3, r2
 800a69e:	61fb      	str	r3, [r7, #28]
 800a6a0:	e023      	b.n	800a6ea <HAL_RTC_SetAlarm+0xee>
 800a6a2:	68fb      	ldr	r3, [r7, #12]
 800a6a4:	681b      	ldr	r3, [r3, #0]
 800a6a6:	689b      	ldr	r3, [r3, #8]
 800a6a8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a6ac:	2b00      	cmp	r3, #0
 800a6ae:	d102      	bne.n	800a6b6 <HAL_RTC_SetAlarm+0xba>
 800a6b0:	68bb      	ldr	r3, [r7, #8]
 800a6b2:	2200      	movs	r2, #0
 800a6b4:	731a      	strb	r2, [r3, #12]
 800a6b6:	68bb      	ldr	r3, [r7, #8]
 800a6b8:	781b      	ldrb	r3, [r3, #0]
 800a6ba:	041a      	lsls	r2, r3, #16
 800a6bc:	68bb      	ldr	r3, [r7, #8]
 800a6be:	785b      	ldrb	r3, [r3, #1]
 800a6c0:	021b      	lsls	r3, r3, #8
 800a6c2:	4313      	orrs	r3, r2
 800a6c4:	68ba      	ldr	r2, [r7, #8]
 800a6c6:	7892      	ldrb	r2, [r2, #2]
 800a6c8:	431a      	orrs	r2, r3
 800a6ca:	68bb      	ldr	r3, [r7, #8]
 800a6cc:	7b1b      	ldrb	r3, [r3, #12]
 800a6ce:	041b      	lsls	r3, r3, #16
 800a6d0:	431a      	orrs	r2, r3
 800a6d2:	68bb      	ldr	r3, [r7, #8]
 800a6d4:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800a6d8:	061b      	lsls	r3, r3, #24
 800a6da:	431a      	orrs	r2, r3
 800a6dc:	68bb      	ldr	r3, [r7, #8]
 800a6de:	6a1b      	ldr	r3, [r3, #32]
 800a6e0:	431a      	orrs	r2, r3
 800a6e2:	68bb      	ldr	r3, [r7, #8]
 800a6e4:	699b      	ldr	r3, [r3, #24]
 800a6e6:	4313      	orrs	r3, r2
 800a6e8:	61fb      	str	r3, [r7, #28]
 800a6ea:	68bb      	ldr	r3, [r7, #8]
 800a6ec:	685a      	ldr	r2, [r3, #4]
 800a6ee:	68bb      	ldr	r3, [r7, #8]
 800a6f0:	69db      	ldr	r3, [r3, #28]
 800a6f2:	4313      	orrs	r3, r2
 800a6f4:	617b      	str	r3, [r7, #20]
 800a6f6:	68fb      	ldr	r3, [r7, #12]
 800a6f8:	681b      	ldr	r3, [r3, #0]
 800a6fa:	22ca      	movs	r2, #202	; 0xca
 800a6fc:	625a      	str	r2, [r3, #36]	; 0x24
 800a6fe:	68fb      	ldr	r3, [r7, #12]
 800a700:	681b      	ldr	r3, [r3, #0]
 800a702:	2253      	movs	r2, #83	; 0x53
 800a704:	625a      	str	r2, [r3, #36]	; 0x24
 800a706:	68bb      	ldr	r3, [r7, #8]
 800a708:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a70a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a70e:	d13f      	bne.n	800a790 <HAL_RTC_SetAlarm+0x194>
 800a710:	68fb      	ldr	r3, [r7, #12]
 800a712:	681b      	ldr	r3, [r3, #0]
 800a714:	689a      	ldr	r2, [r3, #8]
 800a716:	68fb      	ldr	r3, [r7, #12]
 800a718:	681b      	ldr	r3, [r3, #0]
 800a71a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a71e:	609a      	str	r2, [r3, #8]
 800a720:	68fb      	ldr	r3, [r7, #12]
 800a722:	681b      	ldr	r3, [r3, #0]
 800a724:	689a      	ldr	r2, [r3, #8]
 800a726:	68fb      	ldr	r3, [r7, #12]
 800a728:	681b      	ldr	r3, [r3, #0]
 800a72a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800a72e:	609a      	str	r2, [r3, #8]
 800a730:	f7fb fe44 	bl	80063bc <HAL_GetTick>
 800a734:	61b8      	str	r0, [r7, #24]
 800a736:	e013      	b.n	800a760 <HAL_RTC_SetAlarm+0x164>
 800a738:	f7fb fe40 	bl	80063bc <HAL_GetTick>
 800a73c:	4602      	mov	r2, r0
 800a73e:	69bb      	ldr	r3, [r7, #24]
 800a740:	1ad3      	subs	r3, r2, r3
 800a742:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a746:	d90b      	bls.n	800a760 <HAL_RTC_SetAlarm+0x164>
 800a748:	68fb      	ldr	r3, [r7, #12]
 800a74a:	681b      	ldr	r3, [r3, #0]
 800a74c:	22ff      	movs	r2, #255	; 0xff
 800a74e:	625a      	str	r2, [r3, #36]	; 0x24
 800a750:	68fb      	ldr	r3, [r7, #12]
 800a752:	2203      	movs	r2, #3
 800a754:	775a      	strb	r2, [r3, #29]
 800a756:	68fb      	ldr	r3, [r7, #12]
 800a758:	2200      	movs	r2, #0
 800a75a:	771a      	strb	r2, [r3, #28]
 800a75c:	2303      	movs	r3, #3
 800a75e:	e061      	b.n	800a824 <HAL_RTC_SetAlarm+0x228>
 800a760:	68fb      	ldr	r3, [r7, #12]
 800a762:	681b      	ldr	r3, [r3, #0]
 800a764:	68db      	ldr	r3, [r3, #12]
 800a766:	f003 0301 	and.w	r3, r3, #1
 800a76a:	2b00      	cmp	r3, #0
 800a76c:	d0e4      	beq.n	800a738 <HAL_RTC_SetAlarm+0x13c>
 800a76e:	68fb      	ldr	r3, [r7, #12]
 800a770:	681b      	ldr	r3, [r3, #0]
 800a772:	69fa      	ldr	r2, [r7, #28]
 800a774:	61da      	str	r2, [r3, #28]
 800a776:	68fb      	ldr	r3, [r7, #12]
 800a778:	681b      	ldr	r3, [r3, #0]
 800a77a:	697a      	ldr	r2, [r7, #20]
 800a77c:	645a      	str	r2, [r3, #68]	; 0x44
 800a77e:	68fb      	ldr	r3, [r7, #12]
 800a780:	681b      	ldr	r3, [r3, #0]
 800a782:	689a      	ldr	r2, [r3, #8]
 800a784:	68fb      	ldr	r3, [r7, #12]
 800a786:	681b      	ldr	r3, [r3, #0]
 800a788:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a78c:	609a      	str	r2, [r3, #8]
 800a78e:	e03e      	b.n	800a80e <HAL_RTC_SetAlarm+0x212>
 800a790:	68fb      	ldr	r3, [r7, #12]
 800a792:	681b      	ldr	r3, [r3, #0]
 800a794:	689a      	ldr	r2, [r3, #8]
 800a796:	68fb      	ldr	r3, [r7, #12]
 800a798:	681b      	ldr	r3, [r3, #0]
 800a79a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800a79e:	609a      	str	r2, [r3, #8]
 800a7a0:	68fb      	ldr	r3, [r7, #12]
 800a7a2:	681b      	ldr	r3, [r3, #0]
 800a7a4:	689a      	ldr	r2, [r3, #8]
 800a7a6:	68fb      	ldr	r3, [r7, #12]
 800a7a8:	681b      	ldr	r3, [r3, #0]
 800a7aa:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a7ae:	609a      	str	r2, [r3, #8]
 800a7b0:	f7fb fe04 	bl	80063bc <HAL_GetTick>
 800a7b4:	61b8      	str	r0, [r7, #24]
 800a7b6:	e013      	b.n	800a7e0 <HAL_RTC_SetAlarm+0x1e4>
 800a7b8:	f7fb fe00 	bl	80063bc <HAL_GetTick>
 800a7bc:	4602      	mov	r2, r0
 800a7be:	69bb      	ldr	r3, [r7, #24]
 800a7c0:	1ad3      	subs	r3, r2, r3
 800a7c2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a7c6:	d90b      	bls.n	800a7e0 <HAL_RTC_SetAlarm+0x1e4>
 800a7c8:	68fb      	ldr	r3, [r7, #12]
 800a7ca:	681b      	ldr	r3, [r3, #0]
 800a7cc:	22ff      	movs	r2, #255	; 0xff
 800a7ce:	625a      	str	r2, [r3, #36]	; 0x24
 800a7d0:	68fb      	ldr	r3, [r7, #12]
 800a7d2:	2203      	movs	r2, #3
 800a7d4:	775a      	strb	r2, [r3, #29]
 800a7d6:	68fb      	ldr	r3, [r7, #12]
 800a7d8:	2200      	movs	r2, #0
 800a7da:	771a      	strb	r2, [r3, #28]
 800a7dc:	2303      	movs	r3, #3
 800a7de:	e021      	b.n	800a824 <HAL_RTC_SetAlarm+0x228>
 800a7e0:	68fb      	ldr	r3, [r7, #12]
 800a7e2:	681b      	ldr	r3, [r3, #0]
 800a7e4:	68db      	ldr	r3, [r3, #12]
 800a7e6:	f003 0302 	and.w	r3, r3, #2
 800a7ea:	2b00      	cmp	r3, #0
 800a7ec:	d0e4      	beq.n	800a7b8 <HAL_RTC_SetAlarm+0x1bc>
 800a7ee:	68fb      	ldr	r3, [r7, #12]
 800a7f0:	681b      	ldr	r3, [r3, #0]
 800a7f2:	69fa      	ldr	r2, [r7, #28]
 800a7f4:	621a      	str	r2, [r3, #32]
 800a7f6:	68fb      	ldr	r3, [r7, #12]
 800a7f8:	681b      	ldr	r3, [r3, #0]
 800a7fa:	697a      	ldr	r2, [r7, #20]
 800a7fc:	649a      	str	r2, [r3, #72]	; 0x48
 800a7fe:	68fb      	ldr	r3, [r7, #12]
 800a800:	681b      	ldr	r3, [r3, #0]
 800a802:	689a      	ldr	r2, [r3, #8]
 800a804:	68fb      	ldr	r3, [r7, #12]
 800a806:	681b      	ldr	r3, [r3, #0]
 800a808:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a80c:	609a      	str	r2, [r3, #8]
 800a80e:	68fb      	ldr	r3, [r7, #12]
 800a810:	681b      	ldr	r3, [r3, #0]
 800a812:	22ff      	movs	r2, #255	; 0xff
 800a814:	625a      	str	r2, [r3, #36]	; 0x24
 800a816:	68fb      	ldr	r3, [r7, #12]
 800a818:	2201      	movs	r2, #1
 800a81a:	775a      	strb	r2, [r3, #29]
 800a81c:	68fb      	ldr	r3, [r7, #12]
 800a81e:	2200      	movs	r2, #0
 800a820:	771a      	strb	r2, [r3, #28]
 800a822:	2300      	movs	r3, #0
 800a824:	4618      	mov	r0, r3
 800a826:	3724      	adds	r7, #36	; 0x24
 800a828:	46bd      	mov	sp, r7
 800a82a:	bd90      	pop	{r4, r7, pc}

0800a82c <HAL_RTC_WaitForSynchro>:
 800a82c:	b580      	push	{r7, lr}
 800a82e:	b084      	sub	sp, #16
 800a830:	af00      	add	r7, sp, #0
 800a832:	6078      	str	r0, [r7, #4]
 800a834:	2300      	movs	r3, #0
 800a836:	60fb      	str	r3, [r7, #12]
 800a838:	687b      	ldr	r3, [r7, #4]
 800a83a:	681b      	ldr	r3, [r3, #0]
 800a83c:	68da      	ldr	r2, [r3, #12]
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	681b      	ldr	r3, [r3, #0]
 800a842:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 800a846:	60da      	str	r2, [r3, #12]
 800a848:	f7fb fdb8 	bl	80063bc <HAL_GetTick>
 800a84c:	60f8      	str	r0, [r7, #12]
 800a84e:	e009      	b.n	800a864 <HAL_RTC_WaitForSynchro+0x38>
 800a850:	f7fb fdb4 	bl	80063bc <HAL_GetTick>
 800a854:	4602      	mov	r2, r0
 800a856:	68fb      	ldr	r3, [r7, #12]
 800a858:	1ad3      	subs	r3, r2, r3
 800a85a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a85e:	d901      	bls.n	800a864 <HAL_RTC_WaitForSynchro+0x38>
 800a860:	2303      	movs	r3, #3
 800a862:	e007      	b.n	800a874 <HAL_RTC_WaitForSynchro+0x48>
 800a864:	687b      	ldr	r3, [r7, #4]
 800a866:	681b      	ldr	r3, [r3, #0]
 800a868:	68db      	ldr	r3, [r3, #12]
 800a86a:	f003 0320 	and.w	r3, r3, #32
 800a86e:	2b00      	cmp	r3, #0
 800a870:	d0ee      	beq.n	800a850 <HAL_RTC_WaitForSynchro+0x24>
 800a872:	2300      	movs	r3, #0
 800a874:	4618      	mov	r0, r3
 800a876:	3710      	adds	r7, #16
 800a878:	46bd      	mov	sp, r7
 800a87a:	bd80      	pop	{r7, pc}

0800a87c <RTC_EnterInitMode>:
 800a87c:	b580      	push	{r7, lr}
 800a87e:	b084      	sub	sp, #16
 800a880:	af00      	add	r7, sp, #0
 800a882:	6078      	str	r0, [r7, #4]
 800a884:	2300      	movs	r3, #0
 800a886:	60fb      	str	r3, [r7, #12]
 800a888:	687b      	ldr	r3, [r7, #4]
 800a88a:	681b      	ldr	r3, [r3, #0]
 800a88c:	68db      	ldr	r3, [r3, #12]
 800a88e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a892:	2b00      	cmp	r3, #0
 800a894:	d119      	bne.n	800a8ca <RTC_EnterInitMode+0x4e>
 800a896:	687b      	ldr	r3, [r7, #4]
 800a898:	681b      	ldr	r3, [r3, #0]
 800a89a:	f04f 32ff 	mov.w	r2, #4294967295
 800a89e:	60da      	str	r2, [r3, #12]
 800a8a0:	f7fb fd8c 	bl	80063bc <HAL_GetTick>
 800a8a4:	60f8      	str	r0, [r7, #12]
 800a8a6:	e009      	b.n	800a8bc <RTC_EnterInitMode+0x40>
 800a8a8:	f7fb fd88 	bl	80063bc <HAL_GetTick>
 800a8ac:	4602      	mov	r2, r0
 800a8ae:	68fb      	ldr	r3, [r7, #12]
 800a8b0:	1ad3      	subs	r3, r2, r3
 800a8b2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a8b6:	d901      	bls.n	800a8bc <RTC_EnterInitMode+0x40>
 800a8b8:	2303      	movs	r3, #3
 800a8ba:	e007      	b.n	800a8cc <RTC_EnterInitMode+0x50>
 800a8bc:	687b      	ldr	r3, [r7, #4]
 800a8be:	681b      	ldr	r3, [r3, #0]
 800a8c0:	68db      	ldr	r3, [r3, #12]
 800a8c2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a8c6:	2b00      	cmp	r3, #0
 800a8c8:	d0ee      	beq.n	800a8a8 <RTC_EnterInitMode+0x2c>
 800a8ca:	2300      	movs	r3, #0
 800a8cc:	4618      	mov	r0, r3
 800a8ce:	3710      	adds	r7, #16
 800a8d0:	46bd      	mov	sp, r7
 800a8d2:	bd80      	pop	{r7, pc}

0800a8d4 <RTC_ByteToBcd2>:
 800a8d4:	b480      	push	{r7}
 800a8d6:	b085      	sub	sp, #20
 800a8d8:	af00      	add	r7, sp, #0
 800a8da:	4603      	mov	r3, r0
 800a8dc:	71fb      	strb	r3, [r7, #7]
 800a8de:	2300      	movs	r3, #0
 800a8e0:	60fb      	str	r3, [r7, #12]
 800a8e2:	e005      	b.n	800a8f0 <RTC_ByteToBcd2+0x1c>
 800a8e4:	68fb      	ldr	r3, [r7, #12]
 800a8e6:	3301      	adds	r3, #1
 800a8e8:	60fb      	str	r3, [r7, #12]
 800a8ea:	79fb      	ldrb	r3, [r7, #7]
 800a8ec:	3b0a      	subs	r3, #10
 800a8ee:	71fb      	strb	r3, [r7, #7]
 800a8f0:	79fb      	ldrb	r3, [r7, #7]
 800a8f2:	2b09      	cmp	r3, #9
 800a8f4:	d8f6      	bhi.n	800a8e4 <RTC_ByteToBcd2+0x10>
 800a8f6:	68fb      	ldr	r3, [r7, #12]
 800a8f8:	b2db      	uxtb	r3, r3
 800a8fa:	011b      	lsls	r3, r3, #4
 800a8fc:	b2da      	uxtb	r2, r3
 800a8fe:	79fb      	ldrb	r3, [r7, #7]
 800a900:	4313      	orrs	r3, r2
 800a902:	b2db      	uxtb	r3, r3
 800a904:	4618      	mov	r0, r3
 800a906:	3714      	adds	r7, #20
 800a908:	46bd      	mov	sp, r7
 800a90a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a90e:	4770      	bx	lr

0800a910 <HAL_RTCEx_SetTimeStamp>:
 800a910:	b480      	push	{r7}
 800a912:	b087      	sub	sp, #28
 800a914:	af00      	add	r7, sp, #0
 800a916:	60f8      	str	r0, [r7, #12]
 800a918:	60b9      	str	r1, [r7, #8]
 800a91a:	607a      	str	r2, [r7, #4]
 800a91c:	2300      	movs	r3, #0
 800a91e:	617b      	str	r3, [r7, #20]
 800a920:	68fb      	ldr	r3, [r7, #12]
 800a922:	7f1b      	ldrb	r3, [r3, #28]
 800a924:	2b01      	cmp	r3, #1
 800a926:	d101      	bne.n	800a92c <HAL_RTCEx_SetTimeStamp+0x1c>
 800a928:	2302      	movs	r3, #2
 800a92a:	e03e      	b.n	800a9aa <HAL_RTCEx_SetTimeStamp+0x9a>
 800a92c:	68fb      	ldr	r3, [r7, #12]
 800a92e:	2201      	movs	r2, #1
 800a930:	771a      	strb	r2, [r3, #28]
 800a932:	68fb      	ldr	r3, [r7, #12]
 800a934:	2202      	movs	r2, #2
 800a936:	775a      	strb	r2, [r3, #29]
 800a938:	68fb      	ldr	r3, [r7, #12]
 800a93a:	681b      	ldr	r3, [r3, #0]
 800a93c:	689a      	ldr	r2, [r3, #8]
 800a93e:	4b1e      	ldr	r3, [pc, #120]	; (800a9b8 <HAL_RTCEx_SetTimeStamp+0xa8>)
 800a940:	4013      	ands	r3, r2
 800a942:	617b      	str	r3, [r7, #20]
 800a944:	697a      	ldr	r2, [r7, #20]
 800a946:	68bb      	ldr	r3, [r7, #8]
 800a948:	4313      	orrs	r3, r2
 800a94a:	617b      	str	r3, [r7, #20]
 800a94c:	68fb      	ldr	r3, [r7, #12]
 800a94e:	681b      	ldr	r3, [r3, #0]
 800a950:	22ca      	movs	r2, #202	; 0xca
 800a952:	625a      	str	r2, [r3, #36]	; 0x24
 800a954:	68fb      	ldr	r3, [r7, #12]
 800a956:	681b      	ldr	r3, [r3, #0]
 800a958:	2253      	movs	r2, #83	; 0x53
 800a95a:	625a      	str	r2, [r3, #36]	; 0x24
 800a95c:	68fb      	ldr	r3, [r7, #12]
 800a95e:	681b      	ldr	r3, [r3, #0]
 800a960:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800a962:	68fb      	ldr	r3, [r7, #12]
 800a964:	681b      	ldr	r3, [r3, #0]
 800a966:	f022 0206 	bic.w	r2, r2, #6
 800a96a:	64da      	str	r2, [r3, #76]	; 0x4c
 800a96c:	68fb      	ldr	r3, [r7, #12]
 800a96e:	681b      	ldr	r3, [r3, #0]
 800a970:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 800a972:	68fb      	ldr	r3, [r7, #12]
 800a974:	681b      	ldr	r3, [r3, #0]
 800a976:	687a      	ldr	r2, [r7, #4]
 800a978:	430a      	orrs	r2, r1
 800a97a:	64da      	str	r2, [r3, #76]	; 0x4c
 800a97c:	68fb      	ldr	r3, [r7, #12]
 800a97e:	681b      	ldr	r3, [r3, #0]
 800a980:	697a      	ldr	r2, [r7, #20]
 800a982:	609a      	str	r2, [r3, #8]
 800a984:	68fb      	ldr	r3, [r7, #12]
 800a986:	681b      	ldr	r3, [r3, #0]
 800a988:	689a      	ldr	r2, [r3, #8]
 800a98a:	68fb      	ldr	r3, [r7, #12]
 800a98c:	681b      	ldr	r3, [r3, #0]
 800a98e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a992:	609a      	str	r2, [r3, #8]
 800a994:	68fb      	ldr	r3, [r7, #12]
 800a996:	681b      	ldr	r3, [r3, #0]
 800a998:	22ff      	movs	r2, #255	; 0xff
 800a99a:	625a      	str	r2, [r3, #36]	; 0x24
 800a99c:	68fb      	ldr	r3, [r7, #12]
 800a99e:	2201      	movs	r2, #1
 800a9a0:	775a      	strb	r2, [r3, #29]
 800a9a2:	68fb      	ldr	r3, [r7, #12]
 800a9a4:	2200      	movs	r2, #0
 800a9a6:	771a      	strb	r2, [r3, #28]
 800a9a8:	2300      	movs	r3, #0
 800a9aa:	4618      	mov	r0, r3
 800a9ac:	371c      	adds	r7, #28
 800a9ae:	46bd      	mov	sp, r7
 800a9b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9b4:	4770      	bx	lr
 800a9b6:	bf00      	nop
 800a9b8:	fffff7f7 	.word	0xfffff7f7

0800a9bc <HAL_SDRAM_Init>:
 800a9bc:	b580      	push	{r7, lr}
 800a9be:	b082      	sub	sp, #8
 800a9c0:	af00      	add	r7, sp, #0
 800a9c2:	6078      	str	r0, [r7, #4]
 800a9c4:	6039      	str	r1, [r7, #0]
 800a9c6:	687b      	ldr	r3, [r7, #4]
 800a9c8:	2b00      	cmp	r3, #0
 800a9ca:	d101      	bne.n	800a9d0 <HAL_SDRAM_Init+0x14>
 800a9cc:	2301      	movs	r3, #1
 800a9ce:	e025      	b.n	800aa1c <HAL_SDRAM_Init+0x60>
 800a9d0:	687b      	ldr	r3, [r7, #4]
 800a9d2:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800a9d6:	b2db      	uxtb	r3, r3
 800a9d8:	2b00      	cmp	r3, #0
 800a9da:	d106      	bne.n	800a9ea <HAL_SDRAM_Init+0x2e>
 800a9dc:	687b      	ldr	r3, [r7, #4]
 800a9de:	2200      	movs	r2, #0
 800a9e0:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800a9e4:	6878      	ldr	r0, [r7, #4]
 800a9e6:	f7fb fba5 	bl	8006134 <HAL_SDRAM_MspInit>
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	2202      	movs	r2, #2
 800a9ee:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	681a      	ldr	r2, [r3, #0]
 800a9f6:	687b      	ldr	r3, [r7, #4]
 800a9f8:	3304      	adds	r3, #4
 800a9fa:	4619      	mov	r1, r3
 800a9fc:	4610      	mov	r0, r2
 800a9fe:	f002 f955 	bl	800ccac <FMC_SDRAM_Init>
 800aa02:	687b      	ldr	r3, [r7, #4]
 800aa04:	6818      	ldr	r0, [r3, #0]
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	685b      	ldr	r3, [r3, #4]
 800aa0a:	461a      	mov	r2, r3
 800aa0c:	6839      	ldr	r1, [r7, #0]
 800aa0e:	f002 f9bf 	bl	800cd90 <FMC_SDRAM_Timing_Init>
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	2201      	movs	r2, #1
 800aa16:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa1a:	2300      	movs	r3, #0
 800aa1c:	4618      	mov	r0, r3
 800aa1e:	3708      	adds	r7, #8
 800aa20:	46bd      	mov	sp, r7
 800aa22:	bd80      	pop	{r7, pc}

0800aa24 <HAL_SDRAM_SendCommand>:
 800aa24:	b580      	push	{r7, lr}
 800aa26:	b084      	sub	sp, #16
 800aa28:	af00      	add	r7, sp, #0
 800aa2a:	60f8      	str	r0, [r7, #12]
 800aa2c:	60b9      	str	r1, [r7, #8]
 800aa2e:	607a      	str	r2, [r7, #4]
 800aa30:	68fb      	ldr	r3, [r7, #12]
 800aa32:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800aa36:	b2db      	uxtb	r3, r3
 800aa38:	2b02      	cmp	r3, #2
 800aa3a:	d101      	bne.n	800aa40 <HAL_SDRAM_SendCommand+0x1c>
 800aa3c:	2302      	movs	r3, #2
 800aa3e:	e018      	b.n	800aa72 <HAL_SDRAM_SendCommand+0x4e>
 800aa40:	68fb      	ldr	r3, [r7, #12]
 800aa42:	2202      	movs	r2, #2
 800aa44:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa48:	68fb      	ldr	r3, [r7, #12]
 800aa4a:	681b      	ldr	r3, [r3, #0]
 800aa4c:	687a      	ldr	r2, [r7, #4]
 800aa4e:	68b9      	ldr	r1, [r7, #8]
 800aa50:	4618      	mov	r0, r3
 800aa52:	f002 fa1d 	bl	800ce90 <FMC_SDRAM_SendCommand>
 800aa56:	68bb      	ldr	r3, [r7, #8]
 800aa58:	681b      	ldr	r3, [r3, #0]
 800aa5a:	2b02      	cmp	r3, #2
 800aa5c:	d104      	bne.n	800aa68 <HAL_SDRAM_SendCommand+0x44>
 800aa5e:	68fb      	ldr	r3, [r7, #12]
 800aa60:	2205      	movs	r2, #5
 800aa62:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa66:	e003      	b.n	800aa70 <HAL_SDRAM_SendCommand+0x4c>
 800aa68:	68fb      	ldr	r3, [r7, #12]
 800aa6a:	2201      	movs	r2, #1
 800aa6c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa70:	2300      	movs	r3, #0
 800aa72:	4618      	mov	r0, r3
 800aa74:	3710      	adds	r7, #16
 800aa76:	46bd      	mov	sp, r7
 800aa78:	bd80      	pop	{r7, pc}

0800aa7a <HAL_SDRAM_ProgramRefreshRate>:
 800aa7a:	b580      	push	{r7, lr}
 800aa7c:	b082      	sub	sp, #8
 800aa7e:	af00      	add	r7, sp, #0
 800aa80:	6078      	str	r0, [r7, #4]
 800aa82:	6039      	str	r1, [r7, #0]
 800aa84:	687b      	ldr	r3, [r7, #4]
 800aa86:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800aa8a:	b2db      	uxtb	r3, r3
 800aa8c:	2b02      	cmp	r3, #2
 800aa8e:	d101      	bne.n	800aa94 <HAL_SDRAM_ProgramRefreshRate+0x1a>
 800aa90:	2302      	movs	r3, #2
 800aa92:	e00e      	b.n	800aab2 <HAL_SDRAM_ProgramRefreshRate+0x38>
 800aa94:	687b      	ldr	r3, [r7, #4]
 800aa96:	2202      	movs	r2, #2
 800aa98:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa9c:	687b      	ldr	r3, [r7, #4]
 800aa9e:	681b      	ldr	r3, [r3, #0]
 800aaa0:	6839      	ldr	r1, [r7, #0]
 800aaa2:	4618      	mov	r0, r3
 800aaa4:	f002 fa15 	bl	800ced2 <FMC_SDRAM_ProgramRefreshRate>
 800aaa8:	687b      	ldr	r3, [r7, #4]
 800aaaa:	2201      	movs	r2, #1
 800aaac:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aab0:	2300      	movs	r3, #0
 800aab2:	4618      	mov	r0, r3
 800aab4:	3708      	adds	r7, #8
 800aab6:	46bd      	mov	sp, r7
 800aab8:	bd80      	pop	{r7, pc}

0800aaba <HAL_SPI_Init>:
 800aaba:	b580      	push	{r7, lr}
 800aabc:	b084      	sub	sp, #16
 800aabe:	af00      	add	r7, sp, #0
 800aac0:	6078      	str	r0, [r7, #4]
 800aac2:	687b      	ldr	r3, [r7, #4]
 800aac4:	2b00      	cmp	r3, #0
 800aac6:	d101      	bne.n	800aacc <HAL_SPI_Init+0x12>
 800aac8:	2301      	movs	r3, #1
 800aaca:	e084      	b.n	800abd6 <HAL_SPI_Init+0x11c>
 800aacc:	687b      	ldr	r3, [r7, #4]
 800aace:	2200      	movs	r2, #0
 800aad0:	629a      	str	r2, [r3, #40]	; 0x28
 800aad2:	687b      	ldr	r3, [r7, #4]
 800aad4:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 800aad8:	b2db      	uxtb	r3, r3
 800aada:	2b00      	cmp	r3, #0
 800aadc:	d106      	bne.n	800aaec <HAL_SPI_Init+0x32>
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	2200      	movs	r2, #0
 800aae2:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 800aae6:	6878      	ldr	r0, [r7, #4]
 800aae8:	f7fb f888 	bl	8005bfc <HAL_SPI_MspInit>
 800aaec:	687b      	ldr	r3, [r7, #4]
 800aaee:	2202      	movs	r2, #2
 800aaf0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800aaf4:	687b      	ldr	r3, [r7, #4]
 800aaf6:	681b      	ldr	r3, [r3, #0]
 800aaf8:	681a      	ldr	r2, [r3, #0]
 800aafa:	687b      	ldr	r3, [r7, #4]
 800aafc:	681b      	ldr	r3, [r3, #0]
 800aafe:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ab02:	601a      	str	r2, [r3, #0]
 800ab04:	687b      	ldr	r3, [r7, #4]
 800ab06:	68db      	ldr	r3, [r3, #12]
 800ab08:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800ab0c:	d902      	bls.n	800ab14 <HAL_SPI_Init+0x5a>
 800ab0e:	2300      	movs	r3, #0
 800ab10:	60fb      	str	r3, [r7, #12]
 800ab12:	e002      	b.n	800ab1a <HAL_SPI_Init+0x60>
 800ab14:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800ab18:	60fb      	str	r3, [r7, #12]
 800ab1a:	687b      	ldr	r3, [r7, #4]
 800ab1c:	68db      	ldr	r3, [r3, #12]
 800ab1e:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 800ab22:	d007      	beq.n	800ab34 <HAL_SPI_Init+0x7a>
 800ab24:	687b      	ldr	r3, [r7, #4]
 800ab26:	68db      	ldr	r3, [r3, #12]
 800ab28:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800ab2c:	d002      	beq.n	800ab34 <HAL_SPI_Init+0x7a>
 800ab2e:	687b      	ldr	r3, [r7, #4]
 800ab30:	2200      	movs	r2, #0
 800ab32:	629a      	str	r2, [r3, #40]	; 0x28
 800ab34:	687b      	ldr	r3, [r7, #4]
 800ab36:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ab38:	2b00      	cmp	r3, #0
 800ab3a:	d10b      	bne.n	800ab54 <HAL_SPI_Init+0x9a>
 800ab3c:	687b      	ldr	r3, [r7, #4]
 800ab3e:	68db      	ldr	r3, [r3, #12]
 800ab40:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800ab44:	d903      	bls.n	800ab4e <HAL_SPI_Init+0x94>
 800ab46:	687b      	ldr	r3, [r7, #4]
 800ab48:	2202      	movs	r2, #2
 800ab4a:	631a      	str	r2, [r3, #48]	; 0x30
 800ab4c:	e002      	b.n	800ab54 <HAL_SPI_Init+0x9a>
 800ab4e:	687b      	ldr	r3, [r7, #4]
 800ab50:	2201      	movs	r2, #1
 800ab52:	631a      	str	r2, [r3, #48]	; 0x30
 800ab54:	687b      	ldr	r3, [r7, #4]
 800ab56:	685a      	ldr	r2, [r3, #4]
 800ab58:	687b      	ldr	r3, [r7, #4]
 800ab5a:	689b      	ldr	r3, [r3, #8]
 800ab5c:	431a      	orrs	r2, r3
 800ab5e:	687b      	ldr	r3, [r7, #4]
 800ab60:	691b      	ldr	r3, [r3, #16]
 800ab62:	431a      	orrs	r2, r3
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	695b      	ldr	r3, [r3, #20]
 800ab68:	431a      	orrs	r2, r3
 800ab6a:	687b      	ldr	r3, [r7, #4]
 800ab6c:	699b      	ldr	r3, [r3, #24]
 800ab6e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800ab72:	431a      	orrs	r2, r3
 800ab74:	687b      	ldr	r3, [r7, #4]
 800ab76:	69db      	ldr	r3, [r3, #28]
 800ab78:	431a      	orrs	r2, r3
 800ab7a:	687b      	ldr	r3, [r7, #4]
 800ab7c:	6a1b      	ldr	r3, [r3, #32]
 800ab7e:	ea42 0103 	orr.w	r1, r2, r3
 800ab82:	687b      	ldr	r3, [r7, #4]
 800ab84:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800ab86:	687b      	ldr	r3, [r7, #4]
 800ab88:	681b      	ldr	r3, [r3, #0]
 800ab8a:	430a      	orrs	r2, r1
 800ab8c:	601a      	str	r2, [r3, #0]
 800ab8e:	687b      	ldr	r3, [r7, #4]
 800ab90:	699b      	ldr	r3, [r3, #24]
 800ab92:	0c1b      	lsrs	r3, r3, #16
 800ab94:	f003 0204 	and.w	r2, r3, #4
 800ab98:	687b      	ldr	r3, [r7, #4]
 800ab9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab9c:	431a      	orrs	r2, r3
 800ab9e:	687b      	ldr	r3, [r7, #4]
 800aba0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800aba2:	431a      	orrs	r2, r3
 800aba4:	687b      	ldr	r3, [r7, #4]
 800aba6:	68db      	ldr	r3, [r3, #12]
 800aba8:	ea42 0103 	orr.w	r1, r2, r3
 800abac:	687b      	ldr	r3, [r7, #4]
 800abae:	681b      	ldr	r3, [r3, #0]
 800abb0:	68fa      	ldr	r2, [r7, #12]
 800abb2:	430a      	orrs	r2, r1
 800abb4:	605a      	str	r2, [r3, #4]
 800abb6:	687b      	ldr	r3, [r7, #4]
 800abb8:	681b      	ldr	r3, [r3, #0]
 800abba:	69da      	ldr	r2, [r3, #28]
 800abbc:	687b      	ldr	r3, [r7, #4]
 800abbe:	681b      	ldr	r3, [r3, #0]
 800abc0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800abc4:	61da      	str	r2, [r3, #28]
 800abc6:	687b      	ldr	r3, [r7, #4]
 800abc8:	2200      	movs	r2, #0
 800abca:	661a      	str	r2, [r3, #96]	; 0x60
 800abcc:	687b      	ldr	r3, [r7, #4]
 800abce:	2201      	movs	r2, #1
 800abd0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800abd4:	2300      	movs	r3, #0
 800abd6:	4618      	mov	r0, r3
 800abd8:	3710      	adds	r7, #16
 800abda:	46bd      	mov	sp, r7
 800abdc:	bd80      	pop	{r7, pc}

0800abde <HAL_TIM_Base_Init>:
 800abde:	b580      	push	{r7, lr}
 800abe0:	b082      	sub	sp, #8
 800abe2:	af00      	add	r7, sp, #0
 800abe4:	6078      	str	r0, [r7, #4]
 800abe6:	687b      	ldr	r3, [r7, #4]
 800abe8:	2b00      	cmp	r3, #0
 800abea:	d101      	bne.n	800abf0 <HAL_TIM_Base_Init+0x12>
 800abec:	2301      	movs	r3, #1
 800abee:	e01d      	b.n	800ac2c <HAL_TIM_Base_Init+0x4e>
 800abf0:	687b      	ldr	r3, [r7, #4]
 800abf2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800abf6:	b2db      	uxtb	r3, r3
 800abf8:	2b00      	cmp	r3, #0
 800abfa:	d106      	bne.n	800ac0a <HAL_TIM_Base_Init+0x2c>
 800abfc:	687b      	ldr	r3, [r7, #4]
 800abfe:	2200      	movs	r2, #0
 800ac00:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ac04:	6878      	ldr	r0, [r7, #4]
 800ac06:	f7fb f86b 	bl	8005ce0 <HAL_TIM_Base_MspInit>
 800ac0a:	687b      	ldr	r3, [r7, #4]
 800ac0c:	2202      	movs	r2, #2
 800ac0e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ac12:	687b      	ldr	r3, [r7, #4]
 800ac14:	681a      	ldr	r2, [r3, #0]
 800ac16:	687b      	ldr	r3, [r7, #4]
 800ac18:	3304      	adds	r3, #4
 800ac1a:	4619      	mov	r1, r3
 800ac1c:	4610      	mov	r0, r2
 800ac1e:	f000 fbc3 	bl	800b3a8 <TIM_Base_SetConfig>
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	2201      	movs	r2, #1
 800ac26:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ac2a:	2300      	movs	r3, #0
 800ac2c:	4618      	mov	r0, r3
 800ac2e:	3708      	adds	r7, #8
 800ac30:	46bd      	mov	sp, r7
 800ac32:	bd80      	pop	{r7, pc}

0800ac34 <HAL_TIM_Base_Start_IT>:
 800ac34:	b480      	push	{r7}
 800ac36:	b085      	sub	sp, #20
 800ac38:	af00      	add	r7, sp, #0
 800ac3a:	6078      	str	r0, [r7, #4]
 800ac3c:	687b      	ldr	r3, [r7, #4]
 800ac3e:	681b      	ldr	r3, [r3, #0]
 800ac40:	68da      	ldr	r2, [r3, #12]
 800ac42:	687b      	ldr	r3, [r7, #4]
 800ac44:	681b      	ldr	r3, [r3, #0]
 800ac46:	f042 0201 	orr.w	r2, r2, #1
 800ac4a:	60da      	str	r2, [r3, #12]
 800ac4c:	687b      	ldr	r3, [r7, #4]
 800ac4e:	681b      	ldr	r3, [r3, #0]
 800ac50:	689a      	ldr	r2, [r3, #8]
 800ac52:	4b0c      	ldr	r3, [pc, #48]	; (800ac84 <HAL_TIM_Base_Start_IT+0x50>)
 800ac54:	4013      	ands	r3, r2
 800ac56:	60fb      	str	r3, [r7, #12]
 800ac58:	68fb      	ldr	r3, [r7, #12]
 800ac5a:	2b06      	cmp	r3, #6
 800ac5c:	d00b      	beq.n	800ac76 <HAL_TIM_Base_Start_IT+0x42>
 800ac5e:	68fb      	ldr	r3, [r7, #12]
 800ac60:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ac64:	d007      	beq.n	800ac76 <HAL_TIM_Base_Start_IT+0x42>
 800ac66:	687b      	ldr	r3, [r7, #4]
 800ac68:	681b      	ldr	r3, [r3, #0]
 800ac6a:	681a      	ldr	r2, [r3, #0]
 800ac6c:	687b      	ldr	r3, [r7, #4]
 800ac6e:	681b      	ldr	r3, [r3, #0]
 800ac70:	f042 0201 	orr.w	r2, r2, #1
 800ac74:	601a      	str	r2, [r3, #0]
 800ac76:	2300      	movs	r3, #0
 800ac78:	4618      	mov	r0, r3
 800ac7a:	3714      	adds	r7, #20
 800ac7c:	46bd      	mov	sp, r7
 800ac7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac82:	4770      	bx	lr
 800ac84:	00010007 	.word	0x00010007

0800ac88 <HAL_TIM_PWM_Init>:
 800ac88:	b580      	push	{r7, lr}
 800ac8a:	b082      	sub	sp, #8
 800ac8c:	af00      	add	r7, sp, #0
 800ac8e:	6078      	str	r0, [r7, #4]
 800ac90:	687b      	ldr	r3, [r7, #4]
 800ac92:	2b00      	cmp	r3, #0
 800ac94:	d101      	bne.n	800ac9a <HAL_TIM_PWM_Init+0x12>
 800ac96:	2301      	movs	r3, #1
 800ac98:	e01d      	b.n	800acd6 <HAL_TIM_PWM_Init+0x4e>
 800ac9a:	687b      	ldr	r3, [r7, #4]
 800ac9c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800aca0:	b2db      	uxtb	r3, r3
 800aca2:	2b00      	cmp	r3, #0
 800aca4:	d106      	bne.n	800acb4 <HAL_TIM_PWM_Init+0x2c>
 800aca6:	687b      	ldr	r3, [r7, #4]
 800aca8:	2200      	movs	r2, #0
 800acaa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800acae:	6878      	ldr	r0, [r7, #4]
 800acb0:	f000 f815 	bl	800acde <HAL_TIM_PWM_MspInit>
 800acb4:	687b      	ldr	r3, [r7, #4]
 800acb6:	2202      	movs	r2, #2
 800acb8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800acbc:	687b      	ldr	r3, [r7, #4]
 800acbe:	681a      	ldr	r2, [r3, #0]
 800acc0:	687b      	ldr	r3, [r7, #4]
 800acc2:	3304      	adds	r3, #4
 800acc4:	4619      	mov	r1, r3
 800acc6:	4610      	mov	r0, r2
 800acc8:	f000 fb6e 	bl	800b3a8 <TIM_Base_SetConfig>
 800accc:	687b      	ldr	r3, [r7, #4]
 800acce:	2201      	movs	r2, #1
 800acd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800acd4:	2300      	movs	r3, #0
 800acd6:	4618      	mov	r0, r3
 800acd8:	3708      	adds	r7, #8
 800acda:	46bd      	mov	sp, r7
 800acdc:	bd80      	pop	{r7, pc}

0800acde <HAL_TIM_PWM_MspInit>:
 800acde:	b480      	push	{r7}
 800ace0:	b083      	sub	sp, #12
 800ace2:	af00      	add	r7, sp, #0
 800ace4:	6078      	str	r0, [r7, #4]
 800ace6:	bf00      	nop
 800ace8:	370c      	adds	r7, #12
 800acea:	46bd      	mov	sp, r7
 800acec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acf0:	4770      	bx	lr

0800acf2 <HAL_TIM_IRQHandler>:
 800acf2:	b580      	push	{r7, lr}
 800acf4:	b082      	sub	sp, #8
 800acf6:	af00      	add	r7, sp, #0
 800acf8:	6078      	str	r0, [r7, #4]
 800acfa:	687b      	ldr	r3, [r7, #4]
 800acfc:	681b      	ldr	r3, [r3, #0]
 800acfe:	691b      	ldr	r3, [r3, #16]
 800ad00:	f003 0302 	and.w	r3, r3, #2
 800ad04:	2b02      	cmp	r3, #2
 800ad06:	d122      	bne.n	800ad4e <HAL_TIM_IRQHandler+0x5c>
 800ad08:	687b      	ldr	r3, [r7, #4]
 800ad0a:	681b      	ldr	r3, [r3, #0]
 800ad0c:	68db      	ldr	r3, [r3, #12]
 800ad0e:	f003 0302 	and.w	r3, r3, #2
 800ad12:	2b02      	cmp	r3, #2
 800ad14:	d11b      	bne.n	800ad4e <HAL_TIM_IRQHandler+0x5c>
 800ad16:	687b      	ldr	r3, [r7, #4]
 800ad18:	681b      	ldr	r3, [r3, #0]
 800ad1a:	f06f 0202 	mvn.w	r2, #2
 800ad1e:	611a      	str	r2, [r3, #16]
 800ad20:	687b      	ldr	r3, [r7, #4]
 800ad22:	2201      	movs	r2, #1
 800ad24:	771a      	strb	r2, [r3, #28]
 800ad26:	687b      	ldr	r3, [r7, #4]
 800ad28:	681b      	ldr	r3, [r3, #0]
 800ad2a:	699b      	ldr	r3, [r3, #24]
 800ad2c:	f003 0303 	and.w	r3, r3, #3
 800ad30:	2b00      	cmp	r3, #0
 800ad32:	d003      	beq.n	800ad3c <HAL_TIM_IRQHandler+0x4a>
 800ad34:	6878      	ldr	r0, [r7, #4]
 800ad36:	f000 fb19 	bl	800b36c <HAL_TIM_IC_CaptureCallback>
 800ad3a:	e005      	b.n	800ad48 <HAL_TIM_IRQHandler+0x56>
 800ad3c:	6878      	ldr	r0, [r7, #4]
 800ad3e:	f000 fb0b 	bl	800b358 <HAL_TIM_OC_DelayElapsedCallback>
 800ad42:	6878      	ldr	r0, [r7, #4]
 800ad44:	f000 fb1c 	bl	800b380 <HAL_TIM_PWM_PulseFinishedCallback>
 800ad48:	687b      	ldr	r3, [r7, #4]
 800ad4a:	2200      	movs	r2, #0
 800ad4c:	771a      	strb	r2, [r3, #28]
 800ad4e:	687b      	ldr	r3, [r7, #4]
 800ad50:	681b      	ldr	r3, [r3, #0]
 800ad52:	691b      	ldr	r3, [r3, #16]
 800ad54:	f003 0304 	and.w	r3, r3, #4
 800ad58:	2b04      	cmp	r3, #4
 800ad5a:	d122      	bne.n	800ada2 <HAL_TIM_IRQHandler+0xb0>
 800ad5c:	687b      	ldr	r3, [r7, #4]
 800ad5e:	681b      	ldr	r3, [r3, #0]
 800ad60:	68db      	ldr	r3, [r3, #12]
 800ad62:	f003 0304 	and.w	r3, r3, #4
 800ad66:	2b04      	cmp	r3, #4
 800ad68:	d11b      	bne.n	800ada2 <HAL_TIM_IRQHandler+0xb0>
 800ad6a:	687b      	ldr	r3, [r7, #4]
 800ad6c:	681b      	ldr	r3, [r3, #0]
 800ad6e:	f06f 0204 	mvn.w	r2, #4
 800ad72:	611a      	str	r2, [r3, #16]
 800ad74:	687b      	ldr	r3, [r7, #4]
 800ad76:	2202      	movs	r2, #2
 800ad78:	771a      	strb	r2, [r3, #28]
 800ad7a:	687b      	ldr	r3, [r7, #4]
 800ad7c:	681b      	ldr	r3, [r3, #0]
 800ad7e:	699b      	ldr	r3, [r3, #24]
 800ad80:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ad84:	2b00      	cmp	r3, #0
 800ad86:	d003      	beq.n	800ad90 <HAL_TIM_IRQHandler+0x9e>
 800ad88:	6878      	ldr	r0, [r7, #4]
 800ad8a:	f000 faef 	bl	800b36c <HAL_TIM_IC_CaptureCallback>
 800ad8e:	e005      	b.n	800ad9c <HAL_TIM_IRQHandler+0xaa>
 800ad90:	6878      	ldr	r0, [r7, #4]
 800ad92:	f000 fae1 	bl	800b358 <HAL_TIM_OC_DelayElapsedCallback>
 800ad96:	6878      	ldr	r0, [r7, #4]
 800ad98:	f000 faf2 	bl	800b380 <HAL_TIM_PWM_PulseFinishedCallback>
 800ad9c:	687b      	ldr	r3, [r7, #4]
 800ad9e:	2200      	movs	r2, #0
 800ada0:	771a      	strb	r2, [r3, #28]
 800ada2:	687b      	ldr	r3, [r7, #4]
 800ada4:	681b      	ldr	r3, [r3, #0]
 800ada6:	691b      	ldr	r3, [r3, #16]
 800ada8:	f003 0308 	and.w	r3, r3, #8
 800adac:	2b08      	cmp	r3, #8
 800adae:	d122      	bne.n	800adf6 <HAL_TIM_IRQHandler+0x104>
 800adb0:	687b      	ldr	r3, [r7, #4]
 800adb2:	681b      	ldr	r3, [r3, #0]
 800adb4:	68db      	ldr	r3, [r3, #12]
 800adb6:	f003 0308 	and.w	r3, r3, #8
 800adba:	2b08      	cmp	r3, #8
 800adbc:	d11b      	bne.n	800adf6 <HAL_TIM_IRQHandler+0x104>
 800adbe:	687b      	ldr	r3, [r7, #4]
 800adc0:	681b      	ldr	r3, [r3, #0]
 800adc2:	f06f 0208 	mvn.w	r2, #8
 800adc6:	611a      	str	r2, [r3, #16]
 800adc8:	687b      	ldr	r3, [r7, #4]
 800adca:	2204      	movs	r2, #4
 800adcc:	771a      	strb	r2, [r3, #28]
 800adce:	687b      	ldr	r3, [r7, #4]
 800add0:	681b      	ldr	r3, [r3, #0]
 800add2:	69db      	ldr	r3, [r3, #28]
 800add4:	f003 0303 	and.w	r3, r3, #3
 800add8:	2b00      	cmp	r3, #0
 800adda:	d003      	beq.n	800ade4 <HAL_TIM_IRQHandler+0xf2>
 800addc:	6878      	ldr	r0, [r7, #4]
 800adde:	f000 fac5 	bl	800b36c <HAL_TIM_IC_CaptureCallback>
 800ade2:	e005      	b.n	800adf0 <HAL_TIM_IRQHandler+0xfe>
 800ade4:	6878      	ldr	r0, [r7, #4]
 800ade6:	f000 fab7 	bl	800b358 <HAL_TIM_OC_DelayElapsedCallback>
 800adea:	6878      	ldr	r0, [r7, #4]
 800adec:	f000 fac8 	bl	800b380 <HAL_TIM_PWM_PulseFinishedCallback>
 800adf0:	687b      	ldr	r3, [r7, #4]
 800adf2:	2200      	movs	r2, #0
 800adf4:	771a      	strb	r2, [r3, #28]
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	681b      	ldr	r3, [r3, #0]
 800adfa:	691b      	ldr	r3, [r3, #16]
 800adfc:	f003 0310 	and.w	r3, r3, #16
 800ae00:	2b10      	cmp	r3, #16
 800ae02:	d122      	bne.n	800ae4a <HAL_TIM_IRQHandler+0x158>
 800ae04:	687b      	ldr	r3, [r7, #4]
 800ae06:	681b      	ldr	r3, [r3, #0]
 800ae08:	68db      	ldr	r3, [r3, #12]
 800ae0a:	f003 0310 	and.w	r3, r3, #16
 800ae0e:	2b10      	cmp	r3, #16
 800ae10:	d11b      	bne.n	800ae4a <HAL_TIM_IRQHandler+0x158>
 800ae12:	687b      	ldr	r3, [r7, #4]
 800ae14:	681b      	ldr	r3, [r3, #0]
 800ae16:	f06f 0210 	mvn.w	r2, #16
 800ae1a:	611a      	str	r2, [r3, #16]
 800ae1c:	687b      	ldr	r3, [r7, #4]
 800ae1e:	2208      	movs	r2, #8
 800ae20:	771a      	strb	r2, [r3, #28]
 800ae22:	687b      	ldr	r3, [r7, #4]
 800ae24:	681b      	ldr	r3, [r3, #0]
 800ae26:	69db      	ldr	r3, [r3, #28]
 800ae28:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ae2c:	2b00      	cmp	r3, #0
 800ae2e:	d003      	beq.n	800ae38 <HAL_TIM_IRQHandler+0x146>
 800ae30:	6878      	ldr	r0, [r7, #4]
 800ae32:	f000 fa9b 	bl	800b36c <HAL_TIM_IC_CaptureCallback>
 800ae36:	e005      	b.n	800ae44 <HAL_TIM_IRQHandler+0x152>
 800ae38:	6878      	ldr	r0, [r7, #4]
 800ae3a:	f000 fa8d 	bl	800b358 <HAL_TIM_OC_DelayElapsedCallback>
 800ae3e:	6878      	ldr	r0, [r7, #4]
 800ae40:	f000 fa9e 	bl	800b380 <HAL_TIM_PWM_PulseFinishedCallback>
 800ae44:	687b      	ldr	r3, [r7, #4]
 800ae46:	2200      	movs	r2, #0
 800ae48:	771a      	strb	r2, [r3, #28]
 800ae4a:	687b      	ldr	r3, [r7, #4]
 800ae4c:	681b      	ldr	r3, [r3, #0]
 800ae4e:	691b      	ldr	r3, [r3, #16]
 800ae50:	f003 0301 	and.w	r3, r3, #1
 800ae54:	2b01      	cmp	r3, #1
 800ae56:	d10e      	bne.n	800ae76 <HAL_TIM_IRQHandler+0x184>
 800ae58:	687b      	ldr	r3, [r7, #4]
 800ae5a:	681b      	ldr	r3, [r3, #0]
 800ae5c:	68db      	ldr	r3, [r3, #12]
 800ae5e:	f003 0301 	and.w	r3, r3, #1
 800ae62:	2b01      	cmp	r3, #1
 800ae64:	d107      	bne.n	800ae76 <HAL_TIM_IRQHandler+0x184>
 800ae66:	687b      	ldr	r3, [r7, #4]
 800ae68:	681b      	ldr	r3, [r3, #0]
 800ae6a:	f06f 0201 	mvn.w	r2, #1
 800ae6e:	611a      	str	r2, [r3, #16]
 800ae70:	6878      	ldr	r0, [r7, #4]
 800ae72:	f7f8 fddd 	bl	8003a30 <HAL_TIM_PeriodElapsedCallback>
 800ae76:	687b      	ldr	r3, [r7, #4]
 800ae78:	681b      	ldr	r3, [r3, #0]
 800ae7a:	691b      	ldr	r3, [r3, #16]
 800ae7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ae80:	2b80      	cmp	r3, #128	; 0x80
 800ae82:	d10e      	bne.n	800aea2 <HAL_TIM_IRQHandler+0x1b0>
 800ae84:	687b      	ldr	r3, [r7, #4]
 800ae86:	681b      	ldr	r3, [r3, #0]
 800ae88:	68db      	ldr	r3, [r3, #12]
 800ae8a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ae8e:	2b80      	cmp	r3, #128	; 0x80
 800ae90:	d107      	bne.n	800aea2 <HAL_TIM_IRQHandler+0x1b0>
 800ae92:	687b      	ldr	r3, [r7, #4]
 800ae94:	681b      	ldr	r3, [r3, #0]
 800ae96:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ae9a:	611a      	str	r2, [r3, #16]
 800ae9c:	6878      	ldr	r0, [r7, #4]
 800ae9e:	f000 ffb9 	bl	800be14 <HAL_TIMEx_BreakCallback>
 800aea2:	687b      	ldr	r3, [r7, #4]
 800aea4:	681b      	ldr	r3, [r3, #0]
 800aea6:	691b      	ldr	r3, [r3, #16]
 800aea8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800aeac:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800aeb0:	d10e      	bne.n	800aed0 <HAL_TIM_IRQHandler+0x1de>
 800aeb2:	687b      	ldr	r3, [r7, #4]
 800aeb4:	681b      	ldr	r3, [r3, #0]
 800aeb6:	68db      	ldr	r3, [r3, #12]
 800aeb8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800aebc:	2b80      	cmp	r3, #128	; 0x80
 800aebe:	d107      	bne.n	800aed0 <HAL_TIM_IRQHandler+0x1de>
 800aec0:	687b      	ldr	r3, [r7, #4]
 800aec2:	681b      	ldr	r3, [r3, #0]
 800aec4:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800aec8:	611a      	str	r2, [r3, #16]
 800aeca:	6878      	ldr	r0, [r7, #4]
 800aecc:	f000 ffac 	bl	800be28 <HAL_TIMEx_Break2Callback>
 800aed0:	687b      	ldr	r3, [r7, #4]
 800aed2:	681b      	ldr	r3, [r3, #0]
 800aed4:	691b      	ldr	r3, [r3, #16]
 800aed6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aeda:	2b40      	cmp	r3, #64	; 0x40
 800aedc:	d10e      	bne.n	800aefc <HAL_TIM_IRQHandler+0x20a>
 800aede:	687b      	ldr	r3, [r7, #4]
 800aee0:	681b      	ldr	r3, [r3, #0]
 800aee2:	68db      	ldr	r3, [r3, #12]
 800aee4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aee8:	2b40      	cmp	r3, #64	; 0x40
 800aeea:	d107      	bne.n	800aefc <HAL_TIM_IRQHandler+0x20a>
 800aeec:	687b      	ldr	r3, [r7, #4]
 800aeee:	681b      	ldr	r3, [r3, #0]
 800aef0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800aef4:	611a      	str	r2, [r3, #16]
 800aef6:	6878      	ldr	r0, [r7, #4]
 800aef8:	f000 fa4c 	bl	800b394 <HAL_TIM_TriggerCallback>
 800aefc:	687b      	ldr	r3, [r7, #4]
 800aefe:	681b      	ldr	r3, [r3, #0]
 800af00:	691b      	ldr	r3, [r3, #16]
 800af02:	f003 0320 	and.w	r3, r3, #32
 800af06:	2b20      	cmp	r3, #32
 800af08:	d10e      	bne.n	800af28 <HAL_TIM_IRQHandler+0x236>
 800af0a:	687b      	ldr	r3, [r7, #4]
 800af0c:	681b      	ldr	r3, [r3, #0]
 800af0e:	68db      	ldr	r3, [r3, #12]
 800af10:	f003 0320 	and.w	r3, r3, #32
 800af14:	2b20      	cmp	r3, #32
 800af16:	d107      	bne.n	800af28 <HAL_TIM_IRQHandler+0x236>
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	681b      	ldr	r3, [r3, #0]
 800af1c:	f06f 0220 	mvn.w	r2, #32
 800af20:	611a      	str	r2, [r3, #16]
 800af22:	6878      	ldr	r0, [r7, #4]
 800af24:	f000 ff6c 	bl	800be00 <HAL_TIMEx_CommutCallback>
 800af28:	bf00      	nop
 800af2a:	3708      	adds	r7, #8
 800af2c:	46bd      	mov	sp, r7
 800af2e:	bd80      	pop	{r7, pc}

0800af30 <HAL_TIM_PWM_ConfigChannel>:
 800af30:	b580      	push	{r7, lr}
 800af32:	b084      	sub	sp, #16
 800af34:	af00      	add	r7, sp, #0
 800af36:	60f8      	str	r0, [r7, #12]
 800af38:	60b9      	str	r1, [r7, #8]
 800af3a:	607a      	str	r2, [r7, #4]
 800af3c:	68fb      	ldr	r3, [r7, #12]
 800af3e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800af42:	2b01      	cmp	r3, #1
 800af44:	d101      	bne.n	800af4a <HAL_TIM_PWM_ConfigChannel+0x1a>
 800af46:	2302      	movs	r3, #2
 800af48:	e105      	b.n	800b156 <HAL_TIM_PWM_ConfigChannel+0x226>
 800af4a:	68fb      	ldr	r3, [r7, #12]
 800af4c:	2201      	movs	r2, #1
 800af4e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800af52:	68fb      	ldr	r3, [r7, #12]
 800af54:	2202      	movs	r2, #2
 800af56:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800af5a:	687b      	ldr	r3, [r7, #4]
 800af5c:	2b14      	cmp	r3, #20
 800af5e:	f200 80f0 	bhi.w	800b142 <HAL_TIM_PWM_ConfigChannel+0x212>
 800af62:	a201      	add	r2, pc, #4	; (adr r2, 800af68 <HAL_TIM_PWM_ConfigChannel+0x38>)
 800af64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800af68:	0800afbd 	.word	0x0800afbd
 800af6c:	0800b143 	.word	0x0800b143
 800af70:	0800b143 	.word	0x0800b143
 800af74:	0800b143 	.word	0x0800b143
 800af78:	0800affd 	.word	0x0800affd
 800af7c:	0800b143 	.word	0x0800b143
 800af80:	0800b143 	.word	0x0800b143
 800af84:	0800b143 	.word	0x0800b143
 800af88:	0800b03f 	.word	0x0800b03f
 800af8c:	0800b143 	.word	0x0800b143
 800af90:	0800b143 	.word	0x0800b143
 800af94:	0800b143 	.word	0x0800b143
 800af98:	0800b07f 	.word	0x0800b07f
 800af9c:	0800b143 	.word	0x0800b143
 800afa0:	0800b143 	.word	0x0800b143
 800afa4:	0800b143 	.word	0x0800b143
 800afa8:	0800b0c1 	.word	0x0800b0c1
 800afac:	0800b143 	.word	0x0800b143
 800afb0:	0800b143 	.word	0x0800b143
 800afb4:	0800b143 	.word	0x0800b143
 800afb8:	0800b101 	.word	0x0800b101
 800afbc:	68fb      	ldr	r3, [r7, #12]
 800afbe:	681b      	ldr	r3, [r3, #0]
 800afc0:	68b9      	ldr	r1, [r7, #8]
 800afc2:	4618      	mov	r0, r3
 800afc4:	f000 fa90 	bl	800b4e8 <TIM_OC1_SetConfig>
 800afc8:	68fb      	ldr	r3, [r7, #12]
 800afca:	681b      	ldr	r3, [r3, #0]
 800afcc:	699a      	ldr	r2, [r3, #24]
 800afce:	68fb      	ldr	r3, [r7, #12]
 800afd0:	681b      	ldr	r3, [r3, #0]
 800afd2:	f042 0208 	orr.w	r2, r2, #8
 800afd6:	619a      	str	r2, [r3, #24]
 800afd8:	68fb      	ldr	r3, [r7, #12]
 800afda:	681b      	ldr	r3, [r3, #0]
 800afdc:	699a      	ldr	r2, [r3, #24]
 800afde:	68fb      	ldr	r3, [r7, #12]
 800afe0:	681b      	ldr	r3, [r3, #0]
 800afe2:	f022 0204 	bic.w	r2, r2, #4
 800afe6:	619a      	str	r2, [r3, #24]
 800afe8:	68fb      	ldr	r3, [r7, #12]
 800afea:	681b      	ldr	r3, [r3, #0]
 800afec:	6999      	ldr	r1, [r3, #24]
 800afee:	68bb      	ldr	r3, [r7, #8]
 800aff0:	691a      	ldr	r2, [r3, #16]
 800aff2:	68fb      	ldr	r3, [r7, #12]
 800aff4:	681b      	ldr	r3, [r3, #0]
 800aff6:	430a      	orrs	r2, r1
 800aff8:	619a      	str	r2, [r3, #24]
 800affa:	e0a3      	b.n	800b144 <HAL_TIM_PWM_ConfigChannel+0x214>
 800affc:	68fb      	ldr	r3, [r7, #12]
 800affe:	681b      	ldr	r3, [r3, #0]
 800b000:	68b9      	ldr	r1, [r7, #8]
 800b002:	4618      	mov	r0, r3
 800b004:	f000 fae2 	bl	800b5cc <TIM_OC2_SetConfig>
 800b008:	68fb      	ldr	r3, [r7, #12]
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	699a      	ldr	r2, [r3, #24]
 800b00e:	68fb      	ldr	r3, [r7, #12]
 800b010:	681b      	ldr	r3, [r3, #0]
 800b012:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b016:	619a      	str	r2, [r3, #24]
 800b018:	68fb      	ldr	r3, [r7, #12]
 800b01a:	681b      	ldr	r3, [r3, #0]
 800b01c:	699a      	ldr	r2, [r3, #24]
 800b01e:	68fb      	ldr	r3, [r7, #12]
 800b020:	681b      	ldr	r3, [r3, #0]
 800b022:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b026:	619a      	str	r2, [r3, #24]
 800b028:	68fb      	ldr	r3, [r7, #12]
 800b02a:	681b      	ldr	r3, [r3, #0]
 800b02c:	6999      	ldr	r1, [r3, #24]
 800b02e:	68bb      	ldr	r3, [r7, #8]
 800b030:	691b      	ldr	r3, [r3, #16]
 800b032:	021a      	lsls	r2, r3, #8
 800b034:	68fb      	ldr	r3, [r7, #12]
 800b036:	681b      	ldr	r3, [r3, #0]
 800b038:	430a      	orrs	r2, r1
 800b03a:	619a      	str	r2, [r3, #24]
 800b03c:	e082      	b.n	800b144 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b03e:	68fb      	ldr	r3, [r7, #12]
 800b040:	681b      	ldr	r3, [r3, #0]
 800b042:	68b9      	ldr	r1, [r7, #8]
 800b044:	4618      	mov	r0, r3
 800b046:	f000 fb39 	bl	800b6bc <TIM_OC3_SetConfig>
 800b04a:	68fb      	ldr	r3, [r7, #12]
 800b04c:	681b      	ldr	r3, [r3, #0]
 800b04e:	69da      	ldr	r2, [r3, #28]
 800b050:	68fb      	ldr	r3, [r7, #12]
 800b052:	681b      	ldr	r3, [r3, #0]
 800b054:	f042 0208 	orr.w	r2, r2, #8
 800b058:	61da      	str	r2, [r3, #28]
 800b05a:	68fb      	ldr	r3, [r7, #12]
 800b05c:	681b      	ldr	r3, [r3, #0]
 800b05e:	69da      	ldr	r2, [r3, #28]
 800b060:	68fb      	ldr	r3, [r7, #12]
 800b062:	681b      	ldr	r3, [r3, #0]
 800b064:	f022 0204 	bic.w	r2, r2, #4
 800b068:	61da      	str	r2, [r3, #28]
 800b06a:	68fb      	ldr	r3, [r7, #12]
 800b06c:	681b      	ldr	r3, [r3, #0]
 800b06e:	69d9      	ldr	r1, [r3, #28]
 800b070:	68bb      	ldr	r3, [r7, #8]
 800b072:	691a      	ldr	r2, [r3, #16]
 800b074:	68fb      	ldr	r3, [r7, #12]
 800b076:	681b      	ldr	r3, [r3, #0]
 800b078:	430a      	orrs	r2, r1
 800b07a:	61da      	str	r2, [r3, #28]
 800b07c:	e062      	b.n	800b144 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b07e:	68fb      	ldr	r3, [r7, #12]
 800b080:	681b      	ldr	r3, [r3, #0]
 800b082:	68b9      	ldr	r1, [r7, #8]
 800b084:	4618      	mov	r0, r3
 800b086:	f000 fb8f 	bl	800b7a8 <TIM_OC4_SetConfig>
 800b08a:	68fb      	ldr	r3, [r7, #12]
 800b08c:	681b      	ldr	r3, [r3, #0]
 800b08e:	69da      	ldr	r2, [r3, #28]
 800b090:	68fb      	ldr	r3, [r7, #12]
 800b092:	681b      	ldr	r3, [r3, #0]
 800b094:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b098:	61da      	str	r2, [r3, #28]
 800b09a:	68fb      	ldr	r3, [r7, #12]
 800b09c:	681b      	ldr	r3, [r3, #0]
 800b09e:	69da      	ldr	r2, [r3, #28]
 800b0a0:	68fb      	ldr	r3, [r7, #12]
 800b0a2:	681b      	ldr	r3, [r3, #0]
 800b0a4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b0a8:	61da      	str	r2, [r3, #28]
 800b0aa:	68fb      	ldr	r3, [r7, #12]
 800b0ac:	681b      	ldr	r3, [r3, #0]
 800b0ae:	69d9      	ldr	r1, [r3, #28]
 800b0b0:	68bb      	ldr	r3, [r7, #8]
 800b0b2:	691b      	ldr	r3, [r3, #16]
 800b0b4:	021a      	lsls	r2, r3, #8
 800b0b6:	68fb      	ldr	r3, [r7, #12]
 800b0b8:	681b      	ldr	r3, [r3, #0]
 800b0ba:	430a      	orrs	r2, r1
 800b0bc:	61da      	str	r2, [r3, #28]
 800b0be:	e041      	b.n	800b144 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b0c0:	68fb      	ldr	r3, [r7, #12]
 800b0c2:	681b      	ldr	r3, [r3, #0]
 800b0c4:	68b9      	ldr	r1, [r7, #8]
 800b0c6:	4618      	mov	r0, r3
 800b0c8:	f000 fbc6 	bl	800b858 <TIM_OC5_SetConfig>
 800b0cc:	68fb      	ldr	r3, [r7, #12]
 800b0ce:	681b      	ldr	r3, [r3, #0]
 800b0d0:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b0d2:	68fb      	ldr	r3, [r7, #12]
 800b0d4:	681b      	ldr	r3, [r3, #0]
 800b0d6:	f042 0208 	orr.w	r2, r2, #8
 800b0da:	655a      	str	r2, [r3, #84]	; 0x54
 800b0dc:	68fb      	ldr	r3, [r7, #12]
 800b0de:	681b      	ldr	r3, [r3, #0]
 800b0e0:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b0e2:	68fb      	ldr	r3, [r7, #12]
 800b0e4:	681b      	ldr	r3, [r3, #0]
 800b0e6:	f022 0204 	bic.w	r2, r2, #4
 800b0ea:	655a      	str	r2, [r3, #84]	; 0x54
 800b0ec:	68fb      	ldr	r3, [r7, #12]
 800b0ee:	681b      	ldr	r3, [r3, #0]
 800b0f0:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800b0f2:	68bb      	ldr	r3, [r7, #8]
 800b0f4:	691a      	ldr	r2, [r3, #16]
 800b0f6:	68fb      	ldr	r3, [r7, #12]
 800b0f8:	681b      	ldr	r3, [r3, #0]
 800b0fa:	430a      	orrs	r2, r1
 800b0fc:	655a      	str	r2, [r3, #84]	; 0x54
 800b0fe:	e021      	b.n	800b144 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b100:	68fb      	ldr	r3, [r7, #12]
 800b102:	681b      	ldr	r3, [r3, #0]
 800b104:	68b9      	ldr	r1, [r7, #8]
 800b106:	4618      	mov	r0, r3
 800b108:	f000 fbf8 	bl	800b8fc <TIM_OC6_SetConfig>
 800b10c:	68fb      	ldr	r3, [r7, #12]
 800b10e:	681b      	ldr	r3, [r3, #0]
 800b110:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b112:	68fb      	ldr	r3, [r7, #12]
 800b114:	681b      	ldr	r3, [r3, #0]
 800b116:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b11a:	655a      	str	r2, [r3, #84]	; 0x54
 800b11c:	68fb      	ldr	r3, [r7, #12]
 800b11e:	681b      	ldr	r3, [r3, #0]
 800b120:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b122:	68fb      	ldr	r3, [r7, #12]
 800b124:	681b      	ldr	r3, [r3, #0]
 800b126:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b12a:	655a      	str	r2, [r3, #84]	; 0x54
 800b12c:	68fb      	ldr	r3, [r7, #12]
 800b12e:	681b      	ldr	r3, [r3, #0]
 800b130:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800b132:	68bb      	ldr	r3, [r7, #8]
 800b134:	691b      	ldr	r3, [r3, #16]
 800b136:	021a      	lsls	r2, r3, #8
 800b138:	68fb      	ldr	r3, [r7, #12]
 800b13a:	681b      	ldr	r3, [r3, #0]
 800b13c:	430a      	orrs	r2, r1
 800b13e:	655a      	str	r2, [r3, #84]	; 0x54
 800b140:	e000      	b.n	800b144 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b142:	bf00      	nop
 800b144:	68fb      	ldr	r3, [r7, #12]
 800b146:	2201      	movs	r2, #1
 800b148:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b14c:	68fb      	ldr	r3, [r7, #12]
 800b14e:	2200      	movs	r2, #0
 800b150:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b154:	2300      	movs	r3, #0
 800b156:	4618      	mov	r0, r3
 800b158:	3710      	adds	r7, #16
 800b15a:	46bd      	mov	sp, r7
 800b15c:	bd80      	pop	{r7, pc}
 800b15e:	bf00      	nop

0800b160 <HAL_TIM_ConfigClockSource>:
 800b160:	b580      	push	{r7, lr}
 800b162:	b084      	sub	sp, #16
 800b164:	af00      	add	r7, sp, #0
 800b166:	6078      	str	r0, [r7, #4]
 800b168:	6039      	str	r1, [r7, #0]
 800b16a:	687b      	ldr	r3, [r7, #4]
 800b16c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b170:	2b01      	cmp	r3, #1
 800b172:	d101      	bne.n	800b178 <HAL_TIM_ConfigClockSource+0x18>
 800b174:	2302      	movs	r3, #2
 800b176:	e0a6      	b.n	800b2c6 <HAL_TIM_ConfigClockSource+0x166>
 800b178:	687b      	ldr	r3, [r7, #4]
 800b17a:	2201      	movs	r2, #1
 800b17c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b180:	687b      	ldr	r3, [r7, #4]
 800b182:	2202      	movs	r2, #2
 800b184:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b188:	687b      	ldr	r3, [r7, #4]
 800b18a:	681b      	ldr	r3, [r3, #0]
 800b18c:	689b      	ldr	r3, [r3, #8]
 800b18e:	60fb      	str	r3, [r7, #12]
 800b190:	68fa      	ldr	r2, [r7, #12]
 800b192:	4b4f      	ldr	r3, [pc, #316]	; (800b2d0 <HAL_TIM_ConfigClockSource+0x170>)
 800b194:	4013      	ands	r3, r2
 800b196:	60fb      	str	r3, [r7, #12]
 800b198:	68fb      	ldr	r3, [r7, #12]
 800b19a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b19e:	60fb      	str	r3, [r7, #12]
 800b1a0:	687b      	ldr	r3, [r7, #4]
 800b1a2:	681b      	ldr	r3, [r3, #0]
 800b1a4:	68fa      	ldr	r2, [r7, #12]
 800b1a6:	609a      	str	r2, [r3, #8]
 800b1a8:	683b      	ldr	r3, [r7, #0]
 800b1aa:	681b      	ldr	r3, [r3, #0]
 800b1ac:	2b40      	cmp	r3, #64	; 0x40
 800b1ae:	d067      	beq.n	800b280 <HAL_TIM_ConfigClockSource+0x120>
 800b1b0:	2b40      	cmp	r3, #64	; 0x40
 800b1b2:	d80b      	bhi.n	800b1cc <HAL_TIM_ConfigClockSource+0x6c>
 800b1b4:	2b10      	cmp	r3, #16
 800b1b6:	d073      	beq.n	800b2a0 <HAL_TIM_ConfigClockSource+0x140>
 800b1b8:	2b10      	cmp	r3, #16
 800b1ba:	d802      	bhi.n	800b1c2 <HAL_TIM_ConfigClockSource+0x62>
 800b1bc:	2b00      	cmp	r3, #0
 800b1be:	d06f      	beq.n	800b2a0 <HAL_TIM_ConfigClockSource+0x140>
 800b1c0:	e078      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b1c2:	2b20      	cmp	r3, #32
 800b1c4:	d06c      	beq.n	800b2a0 <HAL_TIM_ConfigClockSource+0x140>
 800b1c6:	2b30      	cmp	r3, #48	; 0x30
 800b1c8:	d06a      	beq.n	800b2a0 <HAL_TIM_ConfigClockSource+0x140>
 800b1ca:	e073      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b1cc:	2b70      	cmp	r3, #112	; 0x70
 800b1ce:	d00d      	beq.n	800b1ec <HAL_TIM_ConfigClockSource+0x8c>
 800b1d0:	2b70      	cmp	r3, #112	; 0x70
 800b1d2:	d804      	bhi.n	800b1de <HAL_TIM_ConfigClockSource+0x7e>
 800b1d4:	2b50      	cmp	r3, #80	; 0x50
 800b1d6:	d033      	beq.n	800b240 <HAL_TIM_ConfigClockSource+0xe0>
 800b1d8:	2b60      	cmp	r3, #96	; 0x60
 800b1da:	d041      	beq.n	800b260 <HAL_TIM_ConfigClockSource+0x100>
 800b1dc:	e06a      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b1de:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b1e2:	d066      	beq.n	800b2b2 <HAL_TIM_ConfigClockSource+0x152>
 800b1e4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b1e8:	d017      	beq.n	800b21a <HAL_TIM_ConfigClockSource+0xba>
 800b1ea:	e063      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b1ec:	687b      	ldr	r3, [r7, #4]
 800b1ee:	6818      	ldr	r0, [r3, #0]
 800b1f0:	683b      	ldr	r3, [r7, #0]
 800b1f2:	6899      	ldr	r1, [r3, #8]
 800b1f4:	683b      	ldr	r3, [r7, #0]
 800b1f6:	685a      	ldr	r2, [r3, #4]
 800b1f8:	683b      	ldr	r3, [r7, #0]
 800b1fa:	68db      	ldr	r3, [r3, #12]
 800b1fc:	f000 fcd4 	bl	800bba8 <TIM_ETR_SetConfig>
 800b200:	687b      	ldr	r3, [r7, #4]
 800b202:	681b      	ldr	r3, [r3, #0]
 800b204:	689b      	ldr	r3, [r3, #8]
 800b206:	60fb      	str	r3, [r7, #12]
 800b208:	68fb      	ldr	r3, [r7, #12]
 800b20a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800b20e:	60fb      	str	r3, [r7, #12]
 800b210:	687b      	ldr	r3, [r7, #4]
 800b212:	681b      	ldr	r3, [r3, #0]
 800b214:	68fa      	ldr	r2, [r7, #12]
 800b216:	609a      	str	r2, [r3, #8]
 800b218:	e04c      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b21a:	687b      	ldr	r3, [r7, #4]
 800b21c:	6818      	ldr	r0, [r3, #0]
 800b21e:	683b      	ldr	r3, [r7, #0]
 800b220:	6899      	ldr	r1, [r3, #8]
 800b222:	683b      	ldr	r3, [r7, #0]
 800b224:	685a      	ldr	r2, [r3, #4]
 800b226:	683b      	ldr	r3, [r7, #0]
 800b228:	68db      	ldr	r3, [r3, #12]
 800b22a:	f000 fcbd 	bl	800bba8 <TIM_ETR_SetConfig>
 800b22e:	687b      	ldr	r3, [r7, #4]
 800b230:	681b      	ldr	r3, [r3, #0]
 800b232:	689a      	ldr	r2, [r3, #8]
 800b234:	687b      	ldr	r3, [r7, #4]
 800b236:	681b      	ldr	r3, [r3, #0]
 800b238:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b23c:	609a      	str	r2, [r3, #8]
 800b23e:	e039      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b240:	687b      	ldr	r3, [r7, #4]
 800b242:	6818      	ldr	r0, [r3, #0]
 800b244:	683b      	ldr	r3, [r7, #0]
 800b246:	6859      	ldr	r1, [r3, #4]
 800b248:	683b      	ldr	r3, [r7, #0]
 800b24a:	68db      	ldr	r3, [r3, #12]
 800b24c:	461a      	mov	r2, r3
 800b24e:	f000 fc31 	bl	800bab4 <TIM_TI1_ConfigInputStage>
 800b252:	687b      	ldr	r3, [r7, #4]
 800b254:	681b      	ldr	r3, [r3, #0]
 800b256:	2150      	movs	r1, #80	; 0x50
 800b258:	4618      	mov	r0, r3
 800b25a:	f000 fc8a 	bl	800bb72 <TIM_ITRx_SetConfig>
 800b25e:	e029      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b260:	687b      	ldr	r3, [r7, #4]
 800b262:	6818      	ldr	r0, [r3, #0]
 800b264:	683b      	ldr	r3, [r7, #0]
 800b266:	6859      	ldr	r1, [r3, #4]
 800b268:	683b      	ldr	r3, [r7, #0]
 800b26a:	68db      	ldr	r3, [r3, #12]
 800b26c:	461a      	mov	r2, r3
 800b26e:	f000 fc50 	bl	800bb12 <TIM_TI2_ConfigInputStage>
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	681b      	ldr	r3, [r3, #0]
 800b276:	2160      	movs	r1, #96	; 0x60
 800b278:	4618      	mov	r0, r3
 800b27a:	f000 fc7a 	bl	800bb72 <TIM_ITRx_SetConfig>
 800b27e:	e019      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b280:	687b      	ldr	r3, [r7, #4]
 800b282:	6818      	ldr	r0, [r3, #0]
 800b284:	683b      	ldr	r3, [r7, #0]
 800b286:	6859      	ldr	r1, [r3, #4]
 800b288:	683b      	ldr	r3, [r7, #0]
 800b28a:	68db      	ldr	r3, [r3, #12]
 800b28c:	461a      	mov	r2, r3
 800b28e:	f000 fc11 	bl	800bab4 <TIM_TI1_ConfigInputStage>
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	681b      	ldr	r3, [r3, #0]
 800b296:	2140      	movs	r1, #64	; 0x40
 800b298:	4618      	mov	r0, r3
 800b29a:	f000 fc6a 	bl	800bb72 <TIM_ITRx_SetConfig>
 800b29e:	e009      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b2a0:	687b      	ldr	r3, [r7, #4]
 800b2a2:	681a      	ldr	r2, [r3, #0]
 800b2a4:	683b      	ldr	r3, [r7, #0]
 800b2a6:	681b      	ldr	r3, [r3, #0]
 800b2a8:	4619      	mov	r1, r3
 800b2aa:	4610      	mov	r0, r2
 800b2ac:	f000 fc61 	bl	800bb72 <TIM_ITRx_SetConfig>
 800b2b0:	e000      	b.n	800b2b4 <HAL_TIM_ConfigClockSource+0x154>
 800b2b2:	bf00      	nop
 800b2b4:	687b      	ldr	r3, [r7, #4]
 800b2b6:	2201      	movs	r2, #1
 800b2b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b2bc:	687b      	ldr	r3, [r7, #4]
 800b2be:	2200      	movs	r2, #0
 800b2c0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b2c4:	2300      	movs	r3, #0
 800b2c6:	4618      	mov	r0, r3
 800b2c8:	3710      	adds	r7, #16
 800b2ca:	46bd      	mov	sp, r7
 800b2cc:	bd80      	pop	{r7, pc}
 800b2ce:	bf00      	nop
 800b2d0:	fffeff88 	.word	0xfffeff88

0800b2d4 <HAL_TIM_SlaveConfigSynchro>:
 800b2d4:	b580      	push	{r7, lr}
 800b2d6:	b082      	sub	sp, #8
 800b2d8:	af00      	add	r7, sp, #0
 800b2da:	6078      	str	r0, [r7, #4]
 800b2dc:	6039      	str	r1, [r7, #0]
 800b2de:	687b      	ldr	r3, [r7, #4]
 800b2e0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b2e4:	2b01      	cmp	r3, #1
 800b2e6:	d101      	bne.n	800b2ec <HAL_TIM_SlaveConfigSynchro+0x18>
 800b2e8:	2302      	movs	r3, #2
 800b2ea:	e031      	b.n	800b350 <HAL_TIM_SlaveConfigSynchro+0x7c>
 800b2ec:	687b      	ldr	r3, [r7, #4]
 800b2ee:	2201      	movs	r2, #1
 800b2f0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b2f4:	687b      	ldr	r3, [r7, #4]
 800b2f6:	2202      	movs	r2, #2
 800b2f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b2fc:	6839      	ldr	r1, [r7, #0]
 800b2fe:	6878      	ldr	r0, [r7, #4]
 800b300:	f000 fb50 	bl	800b9a4 <TIM_SlaveTimer_SetConfig>
 800b304:	4603      	mov	r3, r0
 800b306:	2b00      	cmp	r3, #0
 800b308:	d009      	beq.n	800b31e <HAL_TIM_SlaveConfigSynchro+0x4a>
 800b30a:	687b      	ldr	r3, [r7, #4]
 800b30c:	2201      	movs	r2, #1
 800b30e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b312:	687b      	ldr	r3, [r7, #4]
 800b314:	2200      	movs	r2, #0
 800b316:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b31a:	2301      	movs	r3, #1
 800b31c:	e018      	b.n	800b350 <HAL_TIM_SlaveConfigSynchro+0x7c>
 800b31e:	687b      	ldr	r3, [r7, #4]
 800b320:	681b      	ldr	r3, [r3, #0]
 800b322:	68da      	ldr	r2, [r3, #12]
 800b324:	687b      	ldr	r3, [r7, #4]
 800b326:	681b      	ldr	r3, [r3, #0]
 800b328:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b32c:	60da      	str	r2, [r3, #12]
 800b32e:	687b      	ldr	r3, [r7, #4]
 800b330:	681b      	ldr	r3, [r3, #0]
 800b332:	68da      	ldr	r2, [r3, #12]
 800b334:	687b      	ldr	r3, [r7, #4]
 800b336:	681b      	ldr	r3, [r3, #0]
 800b338:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800b33c:	60da      	str	r2, [r3, #12]
 800b33e:	687b      	ldr	r3, [r7, #4]
 800b340:	2201      	movs	r2, #1
 800b342:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	2200      	movs	r2, #0
 800b34a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b34e:	2300      	movs	r3, #0
 800b350:	4618      	mov	r0, r3
 800b352:	3708      	adds	r7, #8
 800b354:	46bd      	mov	sp, r7
 800b356:	bd80      	pop	{r7, pc}

0800b358 <HAL_TIM_OC_DelayElapsedCallback>:
 800b358:	b480      	push	{r7}
 800b35a:	b083      	sub	sp, #12
 800b35c:	af00      	add	r7, sp, #0
 800b35e:	6078      	str	r0, [r7, #4]
 800b360:	bf00      	nop
 800b362:	370c      	adds	r7, #12
 800b364:	46bd      	mov	sp, r7
 800b366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b36a:	4770      	bx	lr

0800b36c <HAL_TIM_IC_CaptureCallback>:
 800b36c:	b480      	push	{r7}
 800b36e:	b083      	sub	sp, #12
 800b370:	af00      	add	r7, sp, #0
 800b372:	6078      	str	r0, [r7, #4]
 800b374:	bf00      	nop
 800b376:	370c      	adds	r7, #12
 800b378:	46bd      	mov	sp, r7
 800b37a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b37e:	4770      	bx	lr

0800b380 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b380:	b480      	push	{r7}
 800b382:	b083      	sub	sp, #12
 800b384:	af00      	add	r7, sp, #0
 800b386:	6078      	str	r0, [r7, #4]
 800b388:	bf00      	nop
 800b38a:	370c      	adds	r7, #12
 800b38c:	46bd      	mov	sp, r7
 800b38e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b392:	4770      	bx	lr

0800b394 <HAL_TIM_TriggerCallback>:
 800b394:	b480      	push	{r7}
 800b396:	b083      	sub	sp, #12
 800b398:	af00      	add	r7, sp, #0
 800b39a:	6078      	str	r0, [r7, #4]
 800b39c:	bf00      	nop
 800b39e:	370c      	adds	r7, #12
 800b3a0:	46bd      	mov	sp, r7
 800b3a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3a6:	4770      	bx	lr

0800b3a8 <TIM_Base_SetConfig>:
 800b3a8:	b480      	push	{r7}
 800b3aa:	b085      	sub	sp, #20
 800b3ac:	af00      	add	r7, sp, #0
 800b3ae:	6078      	str	r0, [r7, #4]
 800b3b0:	6039      	str	r1, [r7, #0]
 800b3b2:	687b      	ldr	r3, [r7, #4]
 800b3b4:	681b      	ldr	r3, [r3, #0]
 800b3b6:	60fb      	str	r3, [r7, #12]
 800b3b8:	687b      	ldr	r3, [r7, #4]
 800b3ba:	4a40      	ldr	r2, [pc, #256]	; (800b4bc <TIM_Base_SetConfig+0x114>)
 800b3bc:	4293      	cmp	r3, r2
 800b3be:	d013      	beq.n	800b3e8 <TIM_Base_SetConfig+0x40>
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b3c6:	d00f      	beq.n	800b3e8 <TIM_Base_SetConfig+0x40>
 800b3c8:	687b      	ldr	r3, [r7, #4]
 800b3ca:	4a3d      	ldr	r2, [pc, #244]	; (800b4c0 <TIM_Base_SetConfig+0x118>)
 800b3cc:	4293      	cmp	r3, r2
 800b3ce:	d00b      	beq.n	800b3e8 <TIM_Base_SetConfig+0x40>
 800b3d0:	687b      	ldr	r3, [r7, #4]
 800b3d2:	4a3c      	ldr	r2, [pc, #240]	; (800b4c4 <TIM_Base_SetConfig+0x11c>)
 800b3d4:	4293      	cmp	r3, r2
 800b3d6:	d007      	beq.n	800b3e8 <TIM_Base_SetConfig+0x40>
 800b3d8:	687b      	ldr	r3, [r7, #4]
 800b3da:	4a3b      	ldr	r2, [pc, #236]	; (800b4c8 <TIM_Base_SetConfig+0x120>)
 800b3dc:	4293      	cmp	r3, r2
 800b3de:	d003      	beq.n	800b3e8 <TIM_Base_SetConfig+0x40>
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	4a3a      	ldr	r2, [pc, #232]	; (800b4cc <TIM_Base_SetConfig+0x124>)
 800b3e4:	4293      	cmp	r3, r2
 800b3e6:	d108      	bne.n	800b3fa <TIM_Base_SetConfig+0x52>
 800b3e8:	68fb      	ldr	r3, [r7, #12]
 800b3ea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b3ee:	60fb      	str	r3, [r7, #12]
 800b3f0:	683b      	ldr	r3, [r7, #0]
 800b3f2:	685b      	ldr	r3, [r3, #4]
 800b3f4:	68fa      	ldr	r2, [r7, #12]
 800b3f6:	4313      	orrs	r3, r2
 800b3f8:	60fb      	str	r3, [r7, #12]
 800b3fa:	687b      	ldr	r3, [r7, #4]
 800b3fc:	4a2f      	ldr	r2, [pc, #188]	; (800b4bc <TIM_Base_SetConfig+0x114>)
 800b3fe:	4293      	cmp	r3, r2
 800b400:	d02b      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b402:	687b      	ldr	r3, [r7, #4]
 800b404:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b408:	d027      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b40a:	687b      	ldr	r3, [r7, #4]
 800b40c:	4a2c      	ldr	r2, [pc, #176]	; (800b4c0 <TIM_Base_SetConfig+0x118>)
 800b40e:	4293      	cmp	r3, r2
 800b410:	d023      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	4a2b      	ldr	r2, [pc, #172]	; (800b4c4 <TIM_Base_SetConfig+0x11c>)
 800b416:	4293      	cmp	r3, r2
 800b418:	d01f      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	4a2a      	ldr	r2, [pc, #168]	; (800b4c8 <TIM_Base_SetConfig+0x120>)
 800b41e:	4293      	cmp	r3, r2
 800b420:	d01b      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	4a29      	ldr	r2, [pc, #164]	; (800b4cc <TIM_Base_SetConfig+0x124>)
 800b426:	4293      	cmp	r3, r2
 800b428:	d017      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b42a:	687b      	ldr	r3, [r7, #4]
 800b42c:	4a28      	ldr	r2, [pc, #160]	; (800b4d0 <TIM_Base_SetConfig+0x128>)
 800b42e:	4293      	cmp	r3, r2
 800b430:	d013      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	4a27      	ldr	r2, [pc, #156]	; (800b4d4 <TIM_Base_SetConfig+0x12c>)
 800b436:	4293      	cmp	r3, r2
 800b438:	d00f      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	4a26      	ldr	r2, [pc, #152]	; (800b4d8 <TIM_Base_SetConfig+0x130>)
 800b43e:	4293      	cmp	r3, r2
 800b440:	d00b      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b442:	687b      	ldr	r3, [r7, #4]
 800b444:	4a25      	ldr	r2, [pc, #148]	; (800b4dc <TIM_Base_SetConfig+0x134>)
 800b446:	4293      	cmp	r3, r2
 800b448:	d007      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b44a:	687b      	ldr	r3, [r7, #4]
 800b44c:	4a24      	ldr	r2, [pc, #144]	; (800b4e0 <TIM_Base_SetConfig+0x138>)
 800b44e:	4293      	cmp	r3, r2
 800b450:	d003      	beq.n	800b45a <TIM_Base_SetConfig+0xb2>
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	4a23      	ldr	r2, [pc, #140]	; (800b4e4 <TIM_Base_SetConfig+0x13c>)
 800b456:	4293      	cmp	r3, r2
 800b458:	d108      	bne.n	800b46c <TIM_Base_SetConfig+0xc4>
 800b45a:	68fb      	ldr	r3, [r7, #12]
 800b45c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b460:	60fb      	str	r3, [r7, #12]
 800b462:	683b      	ldr	r3, [r7, #0]
 800b464:	68db      	ldr	r3, [r3, #12]
 800b466:	68fa      	ldr	r2, [r7, #12]
 800b468:	4313      	orrs	r3, r2
 800b46a:	60fb      	str	r3, [r7, #12]
 800b46c:	68fb      	ldr	r3, [r7, #12]
 800b46e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800b472:	683b      	ldr	r3, [r7, #0]
 800b474:	695b      	ldr	r3, [r3, #20]
 800b476:	4313      	orrs	r3, r2
 800b478:	60fb      	str	r3, [r7, #12]
 800b47a:	687b      	ldr	r3, [r7, #4]
 800b47c:	68fa      	ldr	r2, [r7, #12]
 800b47e:	601a      	str	r2, [r3, #0]
 800b480:	683b      	ldr	r3, [r7, #0]
 800b482:	689a      	ldr	r2, [r3, #8]
 800b484:	687b      	ldr	r3, [r7, #4]
 800b486:	62da      	str	r2, [r3, #44]	; 0x2c
 800b488:	683b      	ldr	r3, [r7, #0]
 800b48a:	681a      	ldr	r2, [r3, #0]
 800b48c:	687b      	ldr	r3, [r7, #4]
 800b48e:	629a      	str	r2, [r3, #40]	; 0x28
 800b490:	687b      	ldr	r3, [r7, #4]
 800b492:	4a0a      	ldr	r2, [pc, #40]	; (800b4bc <TIM_Base_SetConfig+0x114>)
 800b494:	4293      	cmp	r3, r2
 800b496:	d003      	beq.n	800b4a0 <TIM_Base_SetConfig+0xf8>
 800b498:	687b      	ldr	r3, [r7, #4]
 800b49a:	4a0c      	ldr	r2, [pc, #48]	; (800b4cc <TIM_Base_SetConfig+0x124>)
 800b49c:	4293      	cmp	r3, r2
 800b49e:	d103      	bne.n	800b4a8 <TIM_Base_SetConfig+0x100>
 800b4a0:	683b      	ldr	r3, [r7, #0]
 800b4a2:	691a      	ldr	r2, [r3, #16]
 800b4a4:	687b      	ldr	r3, [r7, #4]
 800b4a6:	631a      	str	r2, [r3, #48]	; 0x30
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	2201      	movs	r2, #1
 800b4ac:	615a      	str	r2, [r3, #20]
 800b4ae:	bf00      	nop
 800b4b0:	3714      	adds	r7, #20
 800b4b2:	46bd      	mov	sp, r7
 800b4b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4b8:	4770      	bx	lr
 800b4ba:	bf00      	nop
 800b4bc:	40010000 	.word	0x40010000
 800b4c0:	40000400 	.word	0x40000400
 800b4c4:	40000800 	.word	0x40000800
 800b4c8:	40000c00 	.word	0x40000c00
 800b4cc:	40010400 	.word	0x40010400
 800b4d0:	40014000 	.word	0x40014000
 800b4d4:	40014400 	.word	0x40014400
 800b4d8:	40014800 	.word	0x40014800
 800b4dc:	40001800 	.word	0x40001800
 800b4e0:	40001c00 	.word	0x40001c00
 800b4e4:	40002000 	.word	0x40002000

0800b4e8 <TIM_OC1_SetConfig>:
 800b4e8:	b480      	push	{r7}
 800b4ea:	b087      	sub	sp, #28
 800b4ec:	af00      	add	r7, sp, #0
 800b4ee:	6078      	str	r0, [r7, #4]
 800b4f0:	6039      	str	r1, [r7, #0]
 800b4f2:	687b      	ldr	r3, [r7, #4]
 800b4f4:	6a1b      	ldr	r3, [r3, #32]
 800b4f6:	f023 0201 	bic.w	r2, r3, #1
 800b4fa:	687b      	ldr	r3, [r7, #4]
 800b4fc:	621a      	str	r2, [r3, #32]
 800b4fe:	687b      	ldr	r3, [r7, #4]
 800b500:	6a1b      	ldr	r3, [r3, #32]
 800b502:	617b      	str	r3, [r7, #20]
 800b504:	687b      	ldr	r3, [r7, #4]
 800b506:	685b      	ldr	r3, [r3, #4]
 800b508:	613b      	str	r3, [r7, #16]
 800b50a:	687b      	ldr	r3, [r7, #4]
 800b50c:	699b      	ldr	r3, [r3, #24]
 800b50e:	60fb      	str	r3, [r7, #12]
 800b510:	68fa      	ldr	r2, [r7, #12]
 800b512:	4b2b      	ldr	r3, [pc, #172]	; (800b5c0 <TIM_OC1_SetConfig+0xd8>)
 800b514:	4013      	ands	r3, r2
 800b516:	60fb      	str	r3, [r7, #12]
 800b518:	68fb      	ldr	r3, [r7, #12]
 800b51a:	f023 0303 	bic.w	r3, r3, #3
 800b51e:	60fb      	str	r3, [r7, #12]
 800b520:	683b      	ldr	r3, [r7, #0]
 800b522:	681b      	ldr	r3, [r3, #0]
 800b524:	68fa      	ldr	r2, [r7, #12]
 800b526:	4313      	orrs	r3, r2
 800b528:	60fb      	str	r3, [r7, #12]
 800b52a:	697b      	ldr	r3, [r7, #20]
 800b52c:	f023 0302 	bic.w	r3, r3, #2
 800b530:	617b      	str	r3, [r7, #20]
 800b532:	683b      	ldr	r3, [r7, #0]
 800b534:	689b      	ldr	r3, [r3, #8]
 800b536:	697a      	ldr	r2, [r7, #20]
 800b538:	4313      	orrs	r3, r2
 800b53a:	617b      	str	r3, [r7, #20]
 800b53c:	687b      	ldr	r3, [r7, #4]
 800b53e:	4a21      	ldr	r2, [pc, #132]	; (800b5c4 <TIM_OC1_SetConfig+0xdc>)
 800b540:	4293      	cmp	r3, r2
 800b542:	d003      	beq.n	800b54c <TIM_OC1_SetConfig+0x64>
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	4a20      	ldr	r2, [pc, #128]	; (800b5c8 <TIM_OC1_SetConfig+0xe0>)
 800b548:	4293      	cmp	r3, r2
 800b54a:	d10c      	bne.n	800b566 <TIM_OC1_SetConfig+0x7e>
 800b54c:	697b      	ldr	r3, [r7, #20]
 800b54e:	f023 0308 	bic.w	r3, r3, #8
 800b552:	617b      	str	r3, [r7, #20]
 800b554:	683b      	ldr	r3, [r7, #0]
 800b556:	68db      	ldr	r3, [r3, #12]
 800b558:	697a      	ldr	r2, [r7, #20]
 800b55a:	4313      	orrs	r3, r2
 800b55c:	617b      	str	r3, [r7, #20]
 800b55e:	697b      	ldr	r3, [r7, #20]
 800b560:	f023 0304 	bic.w	r3, r3, #4
 800b564:	617b      	str	r3, [r7, #20]
 800b566:	687b      	ldr	r3, [r7, #4]
 800b568:	4a16      	ldr	r2, [pc, #88]	; (800b5c4 <TIM_OC1_SetConfig+0xdc>)
 800b56a:	4293      	cmp	r3, r2
 800b56c:	d003      	beq.n	800b576 <TIM_OC1_SetConfig+0x8e>
 800b56e:	687b      	ldr	r3, [r7, #4]
 800b570:	4a15      	ldr	r2, [pc, #84]	; (800b5c8 <TIM_OC1_SetConfig+0xe0>)
 800b572:	4293      	cmp	r3, r2
 800b574:	d111      	bne.n	800b59a <TIM_OC1_SetConfig+0xb2>
 800b576:	693b      	ldr	r3, [r7, #16]
 800b578:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b57c:	613b      	str	r3, [r7, #16]
 800b57e:	693b      	ldr	r3, [r7, #16]
 800b580:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b584:	613b      	str	r3, [r7, #16]
 800b586:	683b      	ldr	r3, [r7, #0]
 800b588:	695b      	ldr	r3, [r3, #20]
 800b58a:	693a      	ldr	r2, [r7, #16]
 800b58c:	4313      	orrs	r3, r2
 800b58e:	613b      	str	r3, [r7, #16]
 800b590:	683b      	ldr	r3, [r7, #0]
 800b592:	699b      	ldr	r3, [r3, #24]
 800b594:	693a      	ldr	r2, [r7, #16]
 800b596:	4313      	orrs	r3, r2
 800b598:	613b      	str	r3, [r7, #16]
 800b59a:	687b      	ldr	r3, [r7, #4]
 800b59c:	693a      	ldr	r2, [r7, #16]
 800b59e:	605a      	str	r2, [r3, #4]
 800b5a0:	687b      	ldr	r3, [r7, #4]
 800b5a2:	68fa      	ldr	r2, [r7, #12]
 800b5a4:	619a      	str	r2, [r3, #24]
 800b5a6:	683b      	ldr	r3, [r7, #0]
 800b5a8:	685a      	ldr	r2, [r3, #4]
 800b5aa:	687b      	ldr	r3, [r7, #4]
 800b5ac:	635a      	str	r2, [r3, #52]	; 0x34
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	697a      	ldr	r2, [r7, #20]
 800b5b2:	621a      	str	r2, [r3, #32]
 800b5b4:	bf00      	nop
 800b5b6:	371c      	adds	r7, #28
 800b5b8:	46bd      	mov	sp, r7
 800b5ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5be:	4770      	bx	lr
 800b5c0:	fffeff8f 	.word	0xfffeff8f
 800b5c4:	40010000 	.word	0x40010000
 800b5c8:	40010400 	.word	0x40010400

0800b5cc <TIM_OC2_SetConfig>:
 800b5cc:	b480      	push	{r7}
 800b5ce:	b087      	sub	sp, #28
 800b5d0:	af00      	add	r7, sp, #0
 800b5d2:	6078      	str	r0, [r7, #4]
 800b5d4:	6039      	str	r1, [r7, #0]
 800b5d6:	687b      	ldr	r3, [r7, #4]
 800b5d8:	6a1b      	ldr	r3, [r3, #32]
 800b5da:	f023 0210 	bic.w	r2, r3, #16
 800b5de:	687b      	ldr	r3, [r7, #4]
 800b5e0:	621a      	str	r2, [r3, #32]
 800b5e2:	687b      	ldr	r3, [r7, #4]
 800b5e4:	6a1b      	ldr	r3, [r3, #32]
 800b5e6:	617b      	str	r3, [r7, #20]
 800b5e8:	687b      	ldr	r3, [r7, #4]
 800b5ea:	685b      	ldr	r3, [r3, #4]
 800b5ec:	613b      	str	r3, [r7, #16]
 800b5ee:	687b      	ldr	r3, [r7, #4]
 800b5f0:	699b      	ldr	r3, [r3, #24]
 800b5f2:	60fb      	str	r3, [r7, #12]
 800b5f4:	68fa      	ldr	r2, [r7, #12]
 800b5f6:	4b2e      	ldr	r3, [pc, #184]	; (800b6b0 <TIM_OC2_SetConfig+0xe4>)
 800b5f8:	4013      	ands	r3, r2
 800b5fa:	60fb      	str	r3, [r7, #12]
 800b5fc:	68fb      	ldr	r3, [r7, #12]
 800b5fe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b602:	60fb      	str	r3, [r7, #12]
 800b604:	683b      	ldr	r3, [r7, #0]
 800b606:	681b      	ldr	r3, [r3, #0]
 800b608:	021b      	lsls	r3, r3, #8
 800b60a:	68fa      	ldr	r2, [r7, #12]
 800b60c:	4313      	orrs	r3, r2
 800b60e:	60fb      	str	r3, [r7, #12]
 800b610:	697b      	ldr	r3, [r7, #20]
 800b612:	f023 0320 	bic.w	r3, r3, #32
 800b616:	617b      	str	r3, [r7, #20]
 800b618:	683b      	ldr	r3, [r7, #0]
 800b61a:	689b      	ldr	r3, [r3, #8]
 800b61c:	011b      	lsls	r3, r3, #4
 800b61e:	697a      	ldr	r2, [r7, #20]
 800b620:	4313      	orrs	r3, r2
 800b622:	617b      	str	r3, [r7, #20]
 800b624:	687b      	ldr	r3, [r7, #4]
 800b626:	4a23      	ldr	r2, [pc, #140]	; (800b6b4 <TIM_OC2_SetConfig+0xe8>)
 800b628:	4293      	cmp	r3, r2
 800b62a:	d003      	beq.n	800b634 <TIM_OC2_SetConfig+0x68>
 800b62c:	687b      	ldr	r3, [r7, #4]
 800b62e:	4a22      	ldr	r2, [pc, #136]	; (800b6b8 <TIM_OC2_SetConfig+0xec>)
 800b630:	4293      	cmp	r3, r2
 800b632:	d10d      	bne.n	800b650 <TIM_OC2_SetConfig+0x84>
 800b634:	697b      	ldr	r3, [r7, #20]
 800b636:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b63a:	617b      	str	r3, [r7, #20]
 800b63c:	683b      	ldr	r3, [r7, #0]
 800b63e:	68db      	ldr	r3, [r3, #12]
 800b640:	011b      	lsls	r3, r3, #4
 800b642:	697a      	ldr	r2, [r7, #20]
 800b644:	4313      	orrs	r3, r2
 800b646:	617b      	str	r3, [r7, #20]
 800b648:	697b      	ldr	r3, [r7, #20]
 800b64a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b64e:	617b      	str	r3, [r7, #20]
 800b650:	687b      	ldr	r3, [r7, #4]
 800b652:	4a18      	ldr	r2, [pc, #96]	; (800b6b4 <TIM_OC2_SetConfig+0xe8>)
 800b654:	4293      	cmp	r3, r2
 800b656:	d003      	beq.n	800b660 <TIM_OC2_SetConfig+0x94>
 800b658:	687b      	ldr	r3, [r7, #4]
 800b65a:	4a17      	ldr	r2, [pc, #92]	; (800b6b8 <TIM_OC2_SetConfig+0xec>)
 800b65c:	4293      	cmp	r3, r2
 800b65e:	d113      	bne.n	800b688 <TIM_OC2_SetConfig+0xbc>
 800b660:	693b      	ldr	r3, [r7, #16]
 800b662:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b666:	613b      	str	r3, [r7, #16]
 800b668:	693b      	ldr	r3, [r7, #16]
 800b66a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b66e:	613b      	str	r3, [r7, #16]
 800b670:	683b      	ldr	r3, [r7, #0]
 800b672:	695b      	ldr	r3, [r3, #20]
 800b674:	009b      	lsls	r3, r3, #2
 800b676:	693a      	ldr	r2, [r7, #16]
 800b678:	4313      	orrs	r3, r2
 800b67a:	613b      	str	r3, [r7, #16]
 800b67c:	683b      	ldr	r3, [r7, #0]
 800b67e:	699b      	ldr	r3, [r3, #24]
 800b680:	009b      	lsls	r3, r3, #2
 800b682:	693a      	ldr	r2, [r7, #16]
 800b684:	4313      	orrs	r3, r2
 800b686:	613b      	str	r3, [r7, #16]
 800b688:	687b      	ldr	r3, [r7, #4]
 800b68a:	693a      	ldr	r2, [r7, #16]
 800b68c:	605a      	str	r2, [r3, #4]
 800b68e:	687b      	ldr	r3, [r7, #4]
 800b690:	68fa      	ldr	r2, [r7, #12]
 800b692:	619a      	str	r2, [r3, #24]
 800b694:	683b      	ldr	r3, [r7, #0]
 800b696:	685a      	ldr	r2, [r3, #4]
 800b698:	687b      	ldr	r3, [r7, #4]
 800b69a:	639a      	str	r2, [r3, #56]	; 0x38
 800b69c:	687b      	ldr	r3, [r7, #4]
 800b69e:	697a      	ldr	r2, [r7, #20]
 800b6a0:	621a      	str	r2, [r3, #32]
 800b6a2:	bf00      	nop
 800b6a4:	371c      	adds	r7, #28
 800b6a6:	46bd      	mov	sp, r7
 800b6a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6ac:	4770      	bx	lr
 800b6ae:	bf00      	nop
 800b6b0:	feff8fff 	.word	0xfeff8fff
 800b6b4:	40010000 	.word	0x40010000
 800b6b8:	40010400 	.word	0x40010400

0800b6bc <TIM_OC3_SetConfig>:
 800b6bc:	b480      	push	{r7}
 800b6be:	b087      	sub	sp, #28
 800b6c0:	af00      	add	r7, sp, #0
 800b6c2:	6078      	str	r0, [r7, #4]
 800b6c4:	6039      	str	r1, [r7, #0]
 800b6c6:	687b      	ldr	r3, [r7, #4]
 800b6c8:	6a1b      	ldr	r3, [r3, #32]
 800b6ca:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b6ce:	687b      	ldr	r3, [r7, #4]
 800b6d0:	621a      	str	r2, [r3, #32]
 800b6d2:	687b      	ldr	r3, [r7, #4]
 800b6d4:	6a1b      	ldr	r3, [r3, #32]
 800b6d6:	617b      	str	r3, [r7, #20]
 800b6d8:	687b      	ldr	r3, [r7, #4]
 800b6da:	685b      	ldr	r3, [r3, #4]
 800b6dc:	613b      	str	r3, [r7, #16]
 800b6de:	687b      	ldr	r3, [r7, #4]
 800b6e0:	69db      	ldr	r3, [r3, #28]
 800b6e2:	60fb      	str	r3, [r7, #12]
 800b6e4:	68fa      	ldr	r2, [r7, #12]
 800b6e6:	4b2d      	ldr	r3, [pc, #180]	; (800b79c <TIM_OC3_SetConfig+0xe0>)
 800b6e8:	4013      	ands	r3, r2
 800b6ea:	60fb      	str	r3, [r7, #12]
 800b6ec:	68fb      	ldr	r3, [r7, #12]
 800b6ee:	f023 0303 	bic.w	r3, r3, #3
 800b6f2:	60fb      	str	r3, [r7, #12]
 800b6f4:	683b      	ldr	r3, [r7, #0]
 800b6f6:	681b      	ldr	r3, [r3, #0]
 800b6f8:	68fa      	ldr	r2, [r7, #12]
 800b6fa:	4313      	orrs	r3, r2
 800b6fc:	60fb      	str	r3, [r7, #12]
 800b6fe:	697b      	ldr	r3, [r7, #20]
 800b700:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b704:	617b      	str	r3, [r7, #20]
 800b706:	683b      	ldr	r3, [r7, #0]
 800b708:	689b      	ldr	r3, [r3, #8]
 800b70a:	021b      	lsls	r3, r3, #8
 800b70c:	697a      	ldr	r2, [r7, #20]
 800b70e:	4313      	orrs	r3, r2
 800b710:	617b      	str	r3, [r7, #20]
 800b712:	687b      	ldr	r3, [r7, #4]
 800b714:	4a22      	ldr	r2, [pc, #136]	; (800b7a0 <TIM_OC3_SetConfig+0xe4>)
 800b716:	4293      	cmp	r3, r2
 800b718:	d003      	beq.n	800b722 <TIM_OC3_SetConfig+0x66>
 800b71a:	687b      	ldr	r3, [r7, #4]
 800b71c:	4a21      	ldr	r2, [pc, #132]	; (800b7a4 <TIM_OC3_SetConfig+0xe8>)
 800b71e:	4293      	cmp	r3, r2
 800b720:	d10d      	bne.n	800b73e <TIM_OC3_SetConfig+0x82>
 800b722:	697b      	ldr	r3, [r7, #20]
 800b724:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b728:	617b      	str	r3, [r7, #20]
 800b72a:	683b      	ldr	r3, [r7, #0]
 800b72c:	68db      	ldr	r3, [r3, #12]
 800b72e:	021b      	lsls	r3, r3, #8
 800b730:	697a      	ldr	r2, [r7, #20]
 800b732:	4313      	orrs	r3, r2
 800b734:	617b      	str	r3, [r7, #20]
 800b736:	697b      	ldr	r3, [r7, #20]
 800b738:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b73c:	617b      	str	r3, [r7, #20]
 800b73e:	687b      	ldr	r3, [r7, #4]
 800b740:	4a17      	ldr	r2, [pc, #92]	; (800b7a0 <TIM_OC3_SetConfig+0xe4>)
 800b742:	4293      	cmp	r3, r2
 800b744:	d003      	beq.n	800b74e <TIM_OC3_SetConfig+0x92>
 800b746:	687b      	ldr	r3, [r7, #4]
 800b748:	4a16      	ldr	r2, [pc, #88]	; (800b7a4 <TIM_OC3_SetConfig+0xe8>)
 800b74a:	4293      	cmp	r3, r2
 800b74c:	d113      	bne.n	800b776 <TIM_OC3_SetConfig+0xba>
 800b74e:	693b      	ldr	r3, [r7, #16]
 800b750:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b754:	613b      	str	r3, [r7, #16]
 800b756:	693b      	ldr	r3, [r7, #16]
 800b758:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b75c:	613b      	str	r3, [r7, #16]
 800b75e:	683b      	ldr	r3, [r7, #0]
 800b760:	695b      	ldr	r3, [r3, #20]
 800b762:	011b      	lsls	r3, r3, #4
 800b764:	693a      	ldr	r2, [r7, #16]
 800b766:	4313      	orrs	r3, r2
 800b768:	613b      	str	r3, [r7, #16]
 800b76a:	683b      	ldr	r3, [r7, #0]
 800b76c:	699b      	ldr	r3, [r3, #24]
 800b76e:	011b      	lsls	r3, r3, #4
 800b770:	693a      	ldr	r2, [r7, #16]
 800b772:	4313      	orrs	r3, r2
 800b774:	613b      	str	r3, [r7, #16]
 800b776:	687b      	ldr	r3, [r7, #4]
 800b778:	693a      	ldr	r2, [r7, #16]
 800b77a:	605a      	str	r2, [r3, #4]
 800b77c:	687b      	ldr	r3, [r7, #4]
 800b77e:	68fa      	ldr	r2, [r7, #12]
 800b780:	61da      	str	r2, [r3, #28]
 800b782:	683b      	ldr	r3, [r7, #0]
 800b784:	685a      	ldr	r2, [r3, #4]
 800b786:	687b      	ldr	r3, [r7, #4]
 800b788:	63da      	str	r2, [r3, #60]	; 0x3c
 800b78a:	687b      	ldr	r3, [r7, #4]
 800b78c:	697a      	ldr	r2, [r7, #20]
 800b78e:	621a      	str	r2, [r3, #32]
 800b790:	bf00      	nop
 800b792:	371c      	adds	r7, #28
 800b794:	46bd      	mov	sp, r7
 800b796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b79a:	4770      	bx	lr
 800b79c:	fffeff8f 	.word	0xfffeff8f
 800b7a0:	40010000 	.word	0x40010000
 800b7a4:	40010400 	.word	0x40010400

0800b7a8 <TIM_OC4_SetConfig>:
 800b7a8:	b480      	push	{r7}
 800b7aa:	b087      	sub	sp, #28
 800b7ac:	af00      	add	r7, sp, #0
 800b7ae:	6078      	str	r0, [r7, #4]
 800b7b0:	6039      	str	r1, [r7, #0]
 800b7b2:	687b      	ldr	r3, [r7, #4]
 800b7b4:	6a1b      	ldr	r3, [r3, #32]
 800b7b6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b7ba:	687b      	ldr	r3, [r7, #4]
 800b7bc:	621a      	str	r2, [r3, #32]
 800b7be:	687b      	ldr	r3, [r7, #4]
 800b7c0:	6a1b      	ldr	r3, [r3, #32]
 800b7c2:	613b      	str	r3, [r7, #16]
 800b7c4:	687b      	ldr	r3, [r7, #4]
 800b7c6:	685b      	ldr	r3, [r3, #4]
 800b7c8:	617b      	str	r3, [r7, #20]
 800b7ca:	687b      	ldr	r3, [r7, #4]
 800b7cc:	69db      	ldr	r3, [r3, #28]
 800b7ce:	60fb      	str	r3, [r7, #12]
 800b7d0:	68fa      	ldr	r2, [r7, #12]
 800b7d2:	4b1e      	ldr	r3, [pc, #120]	; (800b84c <TIM_OC4_SetConfig+0xa4>)
 800b7d4:	4013      	ands	r3, r2
 800b7d6:	60fb      	str	r3, [r7, #12]
 800b7d8:	68fb      	ldr	r3, [r7, #12]
 800b7da:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b7de:	60fb      	str	r3, [r7, #12]
 800b7e0:	683b      	ldr	r3, [r7, #0]
 800b7e2:	681b      	ldr	r3, [r3, #0]
 800b7e4:	021b      	lsls	r3, r3, #8
 800b7e6:	68fa      	ldr	r2, [r7, #12]
 800b7e8:	4313      	orrs	r3, r2
 800b7ea:	60fb      	str	r3, [r7, #12]
 800b7ec:	693b      	ldr	r3, [r7, #16]
 800b7ee:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b7f2:	613b      	str	r3, [r7, #16]
 800b7f4:	683b      	ldr	r3, [r7, #0]
 800b7f6:	689b      	ldr	r3, [r3, #8]
 800b7f8:	031b      	lsls	r3, r3, #12
 800b7fa:	693a      	ldr	r2, [r7, #16]
 800b7fc:	4313      	orrs	r3, r2
 800b7fe:	613b      	str	r3, [r7, #16]
 800b800:	687b      	ldr	r3, [r7, #4]
 800b802:	4a13      	ldr	r2, [pc, #76]	; (800b850 <TIM_OC4_SetConfig+0xa8>)
 800b804:	4293      	cmp	r3, r2
 800b806:	d003      	beq.n	800b810 <TIM_OC4_SetConfig+0x68>
 800b808:	687b      	ldr	r3, [r7, #4]
 800b80a:	4a12      	ldr	r2, [pc, #72]	; (800b854 <TIM_OC4_SetConfig+0xac>)
 800b80c:	4293      	cmp	r3, r2
 800b80e:	d109      	bne.n	800b824 <TIM_OC4_SetConfig+0x7c>
 800b810:	697b      	ldr	r3, [r7, #20]
 800b812:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b816:	617b      	str	r3, [r7, #20]
 800b818:	683b      	ldr	r3, [r7, #0]
 800b81a:	695b      	ldr	r3, [r3, #20]
 800b81c:	019b      	lsls	r3, r3, #6
 800b81e:	697a      	ldr	r2, [r7, #20]
 800b820:	4313      	orrs	r3, r2
 800b822:	617b      	str	r3, [r7, #20]
 800b824:	687b      	ldr	r3, [r7, #4]
 800b826:	697a      	ldr	r2, [r7, #20]
 800b828:	605a      	str	r2, [r3, #4]
 800b82a:	687b      	ldr	r3, [r7, #4]
 800b82c:	68fa      	ldr	r2, [r7, #12]
 800b82e:	61da      	str	r2, [r3, #28]
 800b830:	683b      	ldr	r3, [r7, #0]
 800b832:	685a      	ldr	r2, [r3, #4]
 800b834:	687b      	ldr	r3, [r7, #4]
 800b836:	641a      	str	r2, [r3, #64]	; 0x40
 800b838:	687b      	ldr	r3, [r7, #4]
 800b83a:	693a      	ldr	r2, [r7, #16]
 800b83c:	621a      	str	r2, [r3, #32]
 800b83e:	bf00      	nop
 800b840:	371c      	adds	r7, #28
 800b842:	46bd      	mov	sp, r7
 800b844:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b848:	4770      	bx	lr
 800b84a:	bf00      	nop
 800b84c:	feff8fff 	.word	0xfeff8fff
 800b850:	40010000 	.word	0x40010000
 800b854:	40010400 	.word	0x40010400

0800b858 <TIM_OC5_SetConfig>:
 800b858:	b480      	push	{r7}
 800b85a:	b087      	sub	sp, #28
 800b85c:	af00      	add	r7, sp, #0
 800b85e:	6078      	str	r0, [r7, #4]
 800b860:	6039      	str	r1, [r7, #0]
 800b862:	687b      	ldr	r3, [r7, #4]
 800b864:	6a1b      	ldr	r3, [r3, #32]
 800b866:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800b86a:	687b      	ldr	r3, [r7, #4]
 800b86c:	621a      	str	r2, [r3, #32]
 800b86e:	687b      	ldr	r3, [r7, #4]
 800b870:	6a1b      	ldr	r3, [r3, #32]
 800b872:	613b      	str	r3, [r7, #16]
 800b874:	687b      	ldr	r3, [r7, #4]
 800b876:	685b      	ldr	r3, [r3, #4]
 800b878:	617b      	str	r3, [r7, #20]
 800b87a:	687b      	ldr	r3, [r7, #4]
 800b87c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b87e:	60fb      	str	r3, [r7, #12]
 800b880:	68fa      	ldr	r2, [r7, #12]
 800b882:	4b1b      	ldr	r3, [pc, #108]	; (800b8f0 <TIM_OC5_SetConfig+0x98>)
 800b884:	4013      	ands	r3, r2
 800b886:	60fb      	str	r3, [r7, #12]
 800b888:	683b      	ldr	r3, [r7, #0]
 800b88a:	681b      	ldr	r3, [r3, #0]
 800b88c:	68fa      	ldr	r2, [r7, #12]
 800b88e:	4313      	orrs	r3, r2
 800b890:	60fb      	str	r3, [r7, #12]
 800b892:	693b      	ldr	r3, [r7, #16]
 800b894:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800b898:	613b      	str	r3, [r7, #16]
 800b89a:	683b      	ldr	r3, [r7, #0]
 800b89c:	689b      	ldr	r3, [r3, #8]
 800b89e:	041b      	lsls	r3, r3, #16
 800b8a0:	693a      	ldr	r2, [r7, #16]
 800b8a2:	4313      	orrs	r3, r2
 800b8a4:	613b      	str	r3, [r7, #16]
 800b8a6:	687b      	ldr	r3, [r7, #4]
 800b8a8:	4a12      	ldr	r2, [pc, #72]	; (800b8f4 <TIM_OC5_SetConfig+0x9c>)
 800b8aa:	4293      	cmp	r3, r2
 800b8ac:	d003      	beq.n	800b8b6 <TIM_OC5_SetConfig+0x5e>
 800b8ae:	687b      	ldr	r3, [r7, #4]
 800b8b0:	4a11      	ldr	r2, [pc, #68]	; (800b8f8 <TIM_OC5_SetConfig+0xa0>)
 800b8b2:	4293      	cmp	r3, r2
 800b8b4:	d109      	bne.n	800b8ca <TIM_OC5_SetConfig+0x72>
 800b8b6:	697b      	ldr	r3, [r7, #20]
 800b8b8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b8bc:	617b      	str	r3, [r7, #20]
 800b8be:	683b      	ldr	r3, [r7, #0]
 800b8c0:	695b      	ldr	r3, [r3, #20]
 800b8c2:	021b      	lsls	r3, r3, #8
 800b8c4:	697a      	ldr	r2, [r7, #20]
 800b8c6:	4313      	orrs	r3, r2
 800b8c8:	617b      	str	r3, [r7, #20]
 800b8ca:	687b      	ldr	r3, [r7, #4]
 800b8cc:	697a      	ldr	r2, [r7, #20]
 800b8ce:	605a      	str	r2, [r3, #4]
 800b8d0:	687b      	ldr	r3, [r7, #4]
 800b8d2:	68fa      	ldr	r2, [r7, #12]
 800b8d4:	655a      	str	r2, [r3, #84]	; 0x54
 800b8d6:	683b      	ldr	r3, [r7, #0]
 800b8d8:	685a      	ldr	r2, [r3, #4]
 800b8da:	687b      	ldr	r3, [r7, #4]
 800b8dc:	659a      	str	r2, [r3, #88]	; 0x58
 800b8de:	687b      	ldr	r3, [r7, #4]
 800b8e0:	693a      	ldr	r2, [r7, #16]
 800b8e2:	621a      	str	r2, [r3, #32]
 800b8e4:	bf00      	nop
 800b8e6:	371c      	adds	r7, #28
 800b8e8:	46bd      	mov	sp, r7
 800b8ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ee:	4770      	bx	lr
 800b8f0:	fffeff8f 	.word	0xfffeff8f
 800b8f4:	40010000 	.word	0x40010000
 800b8f8:	40010400 	.word	0x40010400

0800b8fc <TIM_OC6_SetConfig>:
 800b8fc:	b480      	push	{r7}
 800b8fe:	b087      	sub	sp, #28
 800b900:	af00      	add	r7, sp, #0
 800b902:	6078      	str	r0, [r7, #4]
 800b904:	6039      	str	r1, [r7, #0]
 800b906:	687b      	ldr	r3, [r7, #4]
 800b908:	6a1b      	ldr	r3, [r3, #32]
 800b90a:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800b90e:	687b      	ldr	r3, [r7, #4]
 800b910:	621a      	str	r2, [r3, #32]
 800b912:	687b      	ldr	r3, [r7, #4]
 800b914:	6a1b      	ldr	r3, [r3, #32]
 800b916:	613b      	str	r3, [r7, #16]
 800b918:	687b      	ldr	r3, [r7, #4]
 800b91a:	685b      	ldr	r3, [r3, #4]
 800b91c:	617b      	str	r3, [r7, #20]
 800b91e:	687b      	ldr	r3, [r7, #4]
 800b920:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b922:	60fb      	str	r3, [r7, #12]
 800b924:	68fa      	ldr	r2, [r7, #12]
 800b926:	4b1c      	ldr	r3, [pc, #112]	; (800b998 <TIM_OC6_SetConfig+0x9c>)
 800b928:	4013      	ands	r3, r2
 800b92a:	60fb      	str	r3, [r7, #12]
 800b92c:	683b      	ldr	r3, [r7, #0]
 800b92e:	681b      	ldr	r3, [r3, #0]
 800b930:	021b      	lsls	r3, r3, #8
 800b932:	68fa      	ldr	r2, [r7, #12]
 800b934:	4313      	orrs	r3, r2
 800b936:	60fb      	str	r3, [r7, #12]
 800b938:	693b      	ldr	r3, [r7, #16]
 800b93a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800b93e:	613b      	str	r3, [r7, #16]
 800b940:	683b      	ldr	r3, [r7, #0]
 800b942:	689b      	ldr	r3, [r3, #8]
 800b944:	051b      	lsls	r3, r3, #20
 800b946:	693a      	ldr	r2, [r7, #16]
 800b948:	4313      	orrs	r3, r2
 800b94a:	613b      	str	r3, [r7, #16]
 800b94c:	687b      	ldr	r3, [r7, #4]
 800b94e:	4a13      	ldr	r2, [pc, #76]	; (800b99c <TIM_OC6_SetConfig+0xa0>)
 800b950:	4293      	cmp	r3, r2
 800b952:	d003      	beq.n	800b95c <TIM_OC6_SetConfig+0x60>
 800b954:	687b      	ldr	r3, [r7, #4]
 800b956:	4a12      	ldr	r2, [pc, #72]	; (800b9a0 <TIM_OC6_SetConfig+0xa4>)
 800b958:	4293      	cmp	r3, r2
 800b95a:	d109      	bne.n	800b970 <TIM_OC6_SetConfig+0x74>
 800b95c:	697b      	ldr	r3, [r7, #20]
 800b95e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800b962:	617b      	str	r3, [r7, #20]
 800b964:	683b      	ldr	r3, [r7, #0]
 800b966:	695b      	ldr	r3, [r3, #20]
 800b968:	029b      	lsls	r3, r3, #10
 800b96a:	697a      	ldr	r2, [r7, #20]
 800b96c:	4313      	orrs	r3, r2
 800b96e:	617b      	str	r3, [r7, #20]
 800b970:	687b      	ldr	r3, [r7, #4]
 800b972:	697a      	ldr	r2, [r7, #20]
 800b974:	605a      	str	r2, [r3, #4]
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	68fa      	ldr	r2, [r7, #12]
 800b97a:	655a      	str	r2, [r3, #84]	; 0x54
 800b97c:	683b      	ldr	r3, [r7, #0]
 800b97e:	685a      	ldr	r2, [r3, #4]
 800b980:	687b      	ldr	r3, [r7, #4]
 800b982:	65da      	str	r2, [r3, #92]	; 0x5c
 800b984:	687b      	ldr	r3, [r7, #4]
 800b986:	693a      	ldr	r2, [r7, #16]
 800b988:	621a      	str	r2, [r3, #32]
 800b98a:	bf00      	nop
 800b98c:	371c      	adds	r7, #28
 800b98e:	46bd      	mov	sp, r7
 800b990:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b994:	4770      	bx	lr
 800b996:	bf00      	nop
 800b998:	feff8fff 	.word	0xfeff8fff
 800b99c:	40010000 	.word	0x40010000
 800b9a0:	40010400 	.word	0x40010400

0800b9a4 <TIM_SlaveTimer_SetConfig>:
 800b9a4:	b580      	push	{r7, lr}
 800b9a6:	b086      	sub	sp, #24
 800b9a8:	af00      	add	r7, sp, #0
 800b9aa:	6078      	str	r0, [r7, #4]
 800b9ac:	6039      	str	r1, [r7, #0]
 800b9ae:	687b      	ldr	r3, [r7, #4]
 800b9b0:	681b      	ldr	r3, [r3, #0]
 800b9b2:	689b      	ldr	r3, [r3, #8]
 800b9b4:	617b      	str	r3, [r7, #20]
 800b9b6:	697b      	ldr	r3, [r7, #20]
 800b9b8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b9bc:	617b      	str	r3, [r7, #20]
 800b9be:	683b      	ldr	r3, [r7, #0]
 800b9c0:	685b      	ldr	r3, [r3, #4]
 800b9c2:	697a      	ldr	r2, [r7, #20]
 800b9c4:	4313      	orrs	r3, r2
 800b9c6:	617b      	str	r3, [r7, #20]
 800b9c8:	697a      	ldr	r2, [r7, #20]
 800b9ca:	4b39      	ldr	r3, [pc, #228]	; (800bab0 <TIM_SlaveTimer_SetConfig+0x10c>)
 800b9cc:	4013      	ands	r3, r2
 800b9ce:	617b      	str	r3, [r7, #20]
 800b9d0:	683b      	ldr	r3, [r7, #0]
 800b9d2:	681b      	ldr	r3, [r3, #0]
 800b9d4:	697a      	ldr	r2, [r7, #20]
 800b9d6:	4313      	orrs	r3, r2
 800b9d8:	617b      	str	r3, [r7, #20]
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	681b      	ldr	r3, [r3, #0]
 800b9de:	697a      	ldr	r2, [r7, #20]
 800b9e0:	609a      	str	r2, [r3, #8]
 800b9e2:	683b      	ldr	r3, [r7, #0]
 800b9e4:	685b      	ldr	r3, [r3, #4]
 800b9e6:	2b30      	cmp	r3, #48	; 0x30
 800b9e8:	d05c      	beq.n	800baa4 <TIM_SlaveTimer_SetConfig+0x100>
 800b9ea:	2b30      	cmp	r3, #48	; 0x30
 800b9ec:	d806      	bhi.n	800b9fc <TIM_SlaveTimer_SetConfig+0x58>
 800b9ee:	2b10      	cmp	r3, #16
 800b9f0:	d058      	beq.n	800baa4 <TIM_SlaveTimer_SetConfig+0x100>
 800b9f2:	2b20      	cmp	r3, #32
 800b9f4:	d056      	beq.n	800baa4 <TIM_SlaveTimer_SetConfig+0x100>
 800b9f6:	2b00      	cmp	r3, #0
 800b9f8:	d054      	beq.n	800baa4 <TIM_SlaveTimer_SetConfig+0x100>
 800b9fa:	e054      	b.n	800baa6 <TIM_SlaveTimer_SetConfig+0x102>
 800b9fc:	2b50      	cmp	r3, #80	; 0x50
 800b9fe:	d03d      	beq.n	800ba7c <TIM_SlaveTimer_SetConfig+0xd8>
 800ba00:	2b50      	cmp	r3, #80	; 0x50
 800ba02:	d802      	bhi.n	800ba0a <TIM_SlaveTimer_SetConfig+0x66>
 800ba04:	2b40      	cmp	r3, #64	; 0x40
 800ba06:	d010      	beq.n	800ba2a <TIM_SlaveTimer_SetConfig+0x86>
 800ba08:	e04d      	b.n	800baa6 <TIM_SlaveTimer_SetConfig+0x102>
 800ba0a:	2b60      	cmp	r3, #96	; 0x60
 800ba0c:	d040      	beq.n	800ba90 <TIM_SlaveTimer_SetConfig+0xec>
 800ba0e:	2b70      	cmp	r3, #112	; 0x70
 800ba10:	d000      	beq.n	800ba14 <TIM_SlaveTimer_SetConfig+0x70>
 800ba12:	e048      	b.n	800baa6 <TIM_SlaveTimer_SetConfig+0x102>
 800ba14:	687b      	ldr	r3, [r7, #4]
 800ba16:	6818      	ldr	r0, [r3, #0]
 800ba18:	683b      	ldr	r3, [r7, #0]
 800ba1a:	68d9      	ldr	r1, [r3, #12]
 800ba1c:	683b      	ldr	r3, [r7, #0]
 800ba1e:	689a      	ldr	r2, [r3, #8]
 800ba20:	683b      	ldr	r3, [r7, #0]
 800ba22:	691b      	ldr	r3, [r3, #16]
 800ba24:	f000 f8c0 	bl	800bba8 <TIM_ETR_SetConfig>
 800ba28:	e03d      	b.n	800baa6 <TIM_SlaveTimer_SetConfig+0x102>
 800ba2a:	683b      	ldr	r3, [r7, #0]
 800ba2c:	681b      	ldr	r3, [r3, #0]
 800ba2e:	2b05      	cmp	r3, #5
 800ba30:	d101      	bne.n	800ba36 <TIM_SlaveTimer_SetConfig+0x92>
 800ba32:	2301      	movs	r3, #1
 800ba34:	e038      	b.n	800baa8 <TIM_SlaveTimer_SetConfig+0x104>
 800ba36:	687b      	ldr	r3, [r7, #4]
 800ba38:	681b      	ldr	r3, [r3, #0]
 800ba3a:	6a1b      	ldr	r3, [r3, #32]
 800ba3c:	613b      	str	r3, [r7, #16]
 800ba3e:	687b      	ldr	r3, [r7, #4]
 800ba40:	681b      	ldr	r3, [r3, #0]
 800ba42:	6a1a      	ldr	r2, [r3, #32]
 800ba44:	687b      	ldr	r3, [r7, #4]
 800ba46:	681b      	ldr	r3, [r3, #0]
 800ba48:	f022 0201 	bic.w	r2, r2, #1
 800ba4c:	621a      	str	r2, [r3, #32]
 800ba4e:	687b      	ldr	r3, [r7, #4]
 800ba50:	681b      	ldr	r3, [r3, #0]
 800ba52:	699b      	ldr	r3, [r3, #24]
 800ba54:	60fb      	str	r3, [r7, #12]
 800ba56:	68fb      	ldr	r3, [r7, #12]
 800ba58:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ba5c:	60fb      	str	r3, [r7, #12]
 800ba5e:	683b      	ldr	r3, [r7, #0]
 800ba60:	691b      	ldr	r3, [r3, #16]
 800ba62:	011b      	lsls	r3, r3, #4
 800ba64:	68fa      	ldr	r2, [r7, #12]
 800ba66:	4313      	orrs	r3, r2
 800ba68:	60fb      	str	r3, [r7, #12]
 800ba6a:	687b      	ldr	r3, [r7, #4]
 800ba6c:	681b      	ldr	r3, [r3, #0]
 800ba6e:	68fa      	ldr	r2, [r7, #12]
 800ba70:	619a      	str	r2, [r3, #24]
 800ba72:	687b      	ldr	r3, [r7, #4]
 800ba74:	681b      	ldr	r3, [r3, #0]
 800ba76:	693a      	ldr	r2, [r7, #16]
 800ba78:	621a      	str	r2, [r3, #32]
 800ba7a:	e014      	b.n	800baa6 <TIM_SlaveTimer_SetConfig+0x102>
 800ba7c:	687b      	ldr	r3, [r7, #4]
 800ba7e:	6818      	ldr	r0, [r3, #0]
 800ba80:	683b      	ldr	r3, [r7, #0]
 800ba82:	6899      	ldr	r1, [r3, #8]
 800ba84:	683b      	ldr	r3, [r7, #0]
 800ba86:	691b      	ldr	r3, [r3, #16]
 800ba88:	461a      	mov	r2, r3
 800ba8a:	f000 f813 	bl	800bab4 <TIM_TI1_ConfigInputStage>
 800ba8e:	e00a      	b.n	800baa6 <TIM_SlaveTimer_SetConfig+0x102>
 800ba90:	687b      	ldr	r3, [r7, #4]
 800ba92:	6818      	ldr	r0, [r3, #0]
 800ba94:	683b      	ldr	r3, [r7, #0]
 800ba96:	6899      	ldr	r1, [r3, #8]
 800ba98:	683b      	ldr	r3, [r7, #0]
 800ba9a:	691b      	ldr	r3, [r3, #16]
 800ba9c:	461a      	mov	r2, r3
 800ba9e:	f000 f838 	bl	800bb12 <TIM_TI2_ConfigInputStage>
 800baa2:	e000      	b.n	800baa6 <TIM_SlaveTimer_SetConfig+0x102>
 800baa4:	bf00      	nop
 800baa6:	2300      	movs	r3, #0
 800baa8:	4618      	mov	r0, r3
 800baaa:	3718      	adds	r7, #24
 800baac:	46bd      	mov	sp, r7
 800baae:	bd80      	pop	{r7, pc}
 800bab0:	fffefff8 	.word	0xfffefff8

0800bab4 <TIM_TI1_ConfigInputStage>:
 800bab4:	b480      	push	{r7}
 800bab6:	b087      	sub	sp, #28
 800bab8:	af00      	add	r7, sp, #0
 800baba:	60f8      	str	r0, [r7, #12]
 800babc:	60b9      	str	r1, [r7, #8]
 800babe:	607a      	str	r2, [r7, #4]
 800bac0:	68fb      	ldr	r3, [r7, #12]
 800bac2:	6a1b      	ldr	r3, [r3, #32]
 800bac4:	617b      	str	r3, [r7, #20]
 800bac6:	68fb      	ldr	r3, [r7, #12]
 800bac8:	6a1b      	ldr	r3, [r3, #32]
 800baca:	f023 0201 	bic.w	r2, r3, #1
 800bace:	68fb      	ldr	r3, [r7, #12]
 800bad0:	621a      	str	r2, [r3, #32]
 800bad2:	68fb      	ldr	r3, [r7, #12]
 800bad4:	699b      	ldr	r3, [r3, #24]
 800bad6:	613b      	str	r3, [r7, #16]
 800bad8:	693b      	ldr	r3, [r7, #16]
 800bada:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800bade:	613b      	str	r3, [r7, #16]
 800bae0:	687b      	ldr	r3, [r7, #4]
 800bae2:	011b      	lsls	r3, r3, #4
 800bae4:	693a      	ldr	r2, [r7, #16]
 800bae6:	4313      	orrs	r3, r2
 800bae8:	613b      	str	r3, [r7, #16]
 800baea:	697b      	ldr	r3, [r7, #20]
 800baec:	f023 030a 	bic.w	r3, r3, #10
 800baf0:	617b      	str	r3, [r7, #20]
 800baf2:	697a      	ldr	r2, [r7, #20]
 800baf4:	68bb      	ldr	r3, [r7, #8]
 800baf6:	4313      	orrs	r3, r2
 800baf8:	617b      	str	r3, [r7, #20]
 800bafa:	68fb      	ldr	r3, [r7, #12]
 800bafc:	693a      	ldr	r2, [r7, #16]
 800bafe:	619a      	str	r2, [r3, #24]
 800bb00:	68fb      	ldr	r3, [r7, #12]
 800bb02:	697a      	ldr	r2, [r7, #20]
 800bb04:	621a      	str	r2, [r3, #32]
 800bb06:	bf00      	nop
 800bb08:	371c      	adds	r7, #28
 800bb0a:	46bd      	mov	sp, r7
 800bb0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb10:	4770      	bx	lr

0800bb12 <TIM_TI2_ConfigInputStage>:
 800bb12:	b480      	push	{r7}
 800bb14:	b087      	sub	sp, #28
 800bb16:	af00      	add	r7, sp, #0
 800bb18:	60f8      	str	r0, [r7, #12]
 800bb1a:	60b9      	str	r1, [r7, #8]
 800bb1c:	607a      	str	r2, [r7, #4]
 800bb1e:	68fb      	ldr	r3, [r7, #12]
 800bb20:	6a1b      	ldr	r3, [r3, #32]
 800bb22:	f023 0210 	bic.w	r2, r3, #16
 800bb26:	68fb      	ldr	r3, [r7, #12]
 800bb28:	621a      	str	r2, [r3, #32]
 800bb2a:	68fb      	ldr	r3, [r7, #12]
 800bb2c:	699b      	ldr	r3, [r3, #24]
 800bb2e:	617b      	str	r3, [r7, #20]
 800bb30:	68fb      	ldr	r3, [r7, #12]
 800bb32:	6a1b      	ldr	r3, [r3, #32]
 800bb34:	613b      	str	r3, [r7, #16]
 800bb36:	697b      	ldr	r3, [r7, #20]
 800bb38:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800bb3c:	617b      	str	r3, [r7, #20]
 800bb3e:	687b      	ldr	r3, [r7, #4]
 800bb40:	031b      	lsls	r3, r3, #12
 800bb42:	697a      	ldr	r2, [r7, #20]
 800bb44:	4313      	orrs	r3, r2
 800bb46:	617b      	str	r3, [r7, #20]
 800bb48:	693b      	ldr	r3, [r7, #16]
 800bb4a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800bb4e:	613b      	str	r3, [r7, #16]
 800bb50:	68bb      	ldr	r3, [r7, #8]
 800bb52:	011b      	lsls	r3, r3, #4
 800bb54:	693a      	ldr	r2, [r7, #16]
 800bb56:	4313      	orrs	r3, r2
 800bb58:	613b      	str	r3, [r7, #16]
 800bb5a:	68fb      	ldr	r3, [r7, #12]
 800bb5c:	697a      	ldr	r2, [r7, #20]
 800bb5e:	619a      	str	r2, [r3, #24]
 800bb60:	68fb      	ldr	r3, [r7, #12]
 800bb62:	693a      	ldr	r2, [r7, #16]
 800bb64:	621a      	str	r2, [r3, #32]
 800bb66:	bf00      	nop
 800bb68:	371c      	adds	r7, #28
 800bb6a:	46bd      	mov	sp, r7
 800bb6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb70:	4770      	bx	lr

0800bb72 <TIM_ITRx_SetConfig>:
 800bb72:	b480      	push	{r7}
 800bb74:	b085      	sub	sp, #20
 800bb76:	af00      	add	r7, sp, #0
 800bb78:	6078      	str	r0, [r7, #4]
 800bb7a:	6039      	str	r1, [r7, #0]
 800bb7c:	687b      	ldr	r3, [r7, #4]
 800bb7e:	689b      	ldr	r3, [r3, #8]
 800bb80:	60fb      	str	r3, [r7, #12]
 800bb82:	68fb      	ldr	r3, [r7, #12]
 800bb84:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bb88:	60fb      	str	r3, [r7, #12]
 800bb8a:	683a      	ldr	r2, [r7, #0]
 800bb8c:	68fb      	ldr	r3, [r7, #12]
 800bb8e:	4313      	orrs	r3, r2
 800bb90:	f043 0307 	orr.w	r3, r3, #7
 800bb94:	60fb      	str	r3, [r7, #12]
 800bb96:	687b      	ldr	r3, [r7, #4]
 800bb98:	68fa      	ldr	r2, [r7, #12]
 800bb9a:	609a      	str	r2, [r3, #8]
 800bb9c:	bf00      	nop
 800bb9e:	3714      	adds	r7, #20
 800bba0:	46bd      	mov	sp, r7
 800bba2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bba6:	4770      	bx	lr

0800bba8 <TIM_ETR_SetConfig>:
 800bba8:	b480      	push	{r7}
 800bbaa:	b087      	sub	sp, #28
 800bbac:	af00      	add	r7, sp, #0
 800bbae:	60f8      	str	r0, [r7, #12]
 800bbb0:	60b9      	str	r1, [r7, #8]
 800bbb2:	607a      	str	r2, [r7, #4]
 800bbb4:	603b      	str	r3, [r7, #0]
 800bbb6:	68fb      	ldr	r3, [r7, #12]
 800bbb8:	689b      	ldr	r3, [r3, #8]
 800bbba:	617b      	str	r3, [r7, #20]
 800bbbc:	697b      	ldr	r3, [r7, #20]
 800bbbe:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800bbc2:	617b      	str	r3, [r7, #20]
 800bbc4:	683b      	ldr	r3, [r7, #0]
 800bbc6:	021a      	lsls	r2, r3, #8
 800bbc8:	687b      	ldr	r3, [r7, #4]
 800bbca:	431a      	orrs	r2, r3
 800bbcc:	68bb      	ldr	r3, [r7, #8]
 800bbce:	4313      	orrs	r3, r2
 800bbd0:	697a      	ldr	r2, [r7, #20]
 800bbd2:	4313      	orrs	r3, r2
 800bbd4:	617b      	str	r3, [r7, #20]
 800bbd6:	68fb      	ldr	r3, [r7, #12]
 800bbd8:	697a      	ldr	r2, [r7, #20]
 800bbda:	609a      	str	r2, [r3, #8]
 800bbdc:	bf00      	nop
 800bbde:	371c      	adds	r7, #28
 800bbe0:	46bd      	mov	sp, r7
 800bbe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbe6:	4770      	bx	lr

0800bbe8 <HAL_TIMEx_MasterConfigSynchronization>:
 800bbe8:	b480      	push	{r7}
 800bbea:	b085      	sub	sp, #20
 800bbec:	af00      	add	r7, sp, #0
 800bbee:	6078      	str	r0, [r7, #4]
 800bbf0:	6039      	str	r1, [r7, #0]
 800bbf2:	687b      	ldr	r3, [r7, #4]
 800bbf4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bbf8:	2b01      	cmp	r3, #1
 800bbfa:	d101      	bne.n	800bc00 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800bbfc:	2302      	movs	r3, #2
 800bbfe:	e06d      	b.n	800bcdc <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	2201      	movs	r2, #1
 800bc04:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bc08:	687b      	ldr	r3, [r7, #4]
 800bc0a:	2202      	movs	r2, #2
 800bc0c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bc10:	687b      	ldr	r3, [r7, #4]
 800bc12:	681b      	ldr	r3, [r3, #0]
 800bc14:	685b      	ldr	r3, [r3, #4]
 800bc16:	60fb      	str	r3, [r7, #12]
 800bc18:	687b      	ldr	r3, [r7, #4]
 800bc1a:	681b      	ldr	r3, [r3, #0]
 800bc1c:	689b      	ldr	r3, [r3, #8]
 800bc1e:	60bb      	str	r3, [r7, #8]
 800bc20:	687b      	ldr	r3, [r7, #4]
 800bc22:	681b      	ldr	r3, [r3, #0]
 800bc24:	4a30      	ldr	r2, [pc, #192]	; (800bce8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800bc26:	4293      	cmp	r3, r2
 800bc28:	d004      	beq.n	800bc34 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800bc2a:	687b      	ldr	r3, [r7, #4]
 800bc2c:	681b      	ldr	r3, [r3, #0]
 800bc2e:	4a2f      	ldr	r2, [pc, #188]	; (800bcec <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800bc30:	4293      	cmp	r3, r2
 800bc32:	d108      	bne.n	800bc46 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800bc34:	68fb      	ldr	r3, [r7, #12]
 800bc36:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800bc3a:	60fb      	str	r3, [r7, #12]
 800bc3c:	683b      	ldr	r3, [r7, #0]
 800bc3e:	685b      	ldr	r3, [r3, #4]
 800bc40:	68fa      	ldr	r2, [r7, #12]
 800bc42:	4313      	orrs	r3, r2
 800bc44:	60fb      	str	r3, [r7, #12]
 800bc46:	68fb      	ldr	r3, [r7, #12]
 800bc48:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bc4c:	60fb      	str	r3, [r7, #12]
 800bc4e:	683b      	ldr	r3, [r7, #0]
 800bc50:	681b      	ldr	r3, [r3, #0]
 800bc52:	68fa      	ldr	r2, [r7, #12]
 800bc54:	4313      	orrs	r3, r2
 800bc56:	60fb      	str	r3, [r7, #12]
 800bc58:	687b      	ldr	r3, [r7, #4]
 800bc5a:	681b      	ldr	r3, [r3, #0]
 800bc5c:	68fa      	ldr	r2, [r7, #12]
 800bc5e:	605a      	str	r2, [r3, #4]
 800bc60:	687b      	ldr	r3, [r7, #4]
 800bc62:	681b      	ldr	r3, [r3, #0]
 800bc64:	4a20      	ldr	r2, [pc, #128]	; (800bce8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800bc66:	4293      	cmp	r3, r2
 800bc68:	d022      	beq.n	800bcb0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc6a:	687b      	ldr	r3, [r7, #4]
 800bc6c:	681b      	ldr	r3, [r3, #0]
 800bc6e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bc72:	d01d      	beq.n	800bcb0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc74:	687b      	ldr	r3, [r7, #4]
 800bc76:	681b      	ldr	r3, [r3, #0]
 800bc78:	4a1d      	ldr	r2, [pc, #116]	; (800bcf0 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800bc7a:	4293      	cmp	r3, r2
 800bc7c:	d018      	beq.n	800bcb0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc7e:	687b      	ldr	r3, [r7, #4]
 800bc80:	681b      	ldr	r3, [r3, #0]
 800bc82:	4a1c      	ldr	r2, [pc, #112]	; (800bcf4 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800bc84:	4293      	cmp	r3, r2
 800bc86:	d013      	beq.n	800bcb0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc88:	687b      	ldr	r3, [r7, #4]
 800bc8a:	681b      	ldr	r3, [r3, #0]
 800bc8c:	4a1a      	ldr	r2, [pc, #104]	; (800bcf8 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800bc8e:	4293      	cmp	r3, r2
 800bc90:	d00e      	beq.n	800bcb0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc92:	687b      	ldr	r3, [r7, #4]
 800bc94:	681b      	ldr	r3, [r3, #0]
 800bc96:	4a15      	ldr	r2, [pc, #84]	; (800bcec <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800bc98:	4293      	cmp	r3, r2
 800bc9a:	d009      	beq.n	800bcb0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc9c:	687b      	ldr	r3, [r7, #4]
 800bc9e:	681b      	ldr	r3, [r3, #0]
 800bca0:	4a16      	ldr	r2, [pc, #88]	; (800bcfc <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800bca2:	4293      	cmp	r3, r2
 800bca4:	d004      	beq.n	800bcb0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bca6:	687b      	ldr	r3, [r7, #4]
 800bca8:	681b      	ldr	r3, [r3, #0]
 800bcaa:	4a15      	ldr	r2, [pc, #84]	; (800bd00 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800bcac:	4293      	cmp	r3, r2
 800bcae:	d10c      	bne.n	800bcca <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 800bcb0:	68bb      	ldr	r3, [r7, #8]
 800bcb2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bcb6:	60bb      	str	r3, [r7, #8]
 800bcb8:	683b      	ldr	r3, [r7, #0]
 800bcba:	689b      	ldr	r3, [r3, #8]
 800bcbc:	68ba      	ldr	r2, [r7, #8]
 800bcbe:	4313      	orrs	r3, r2
 800bcc0:	60bb      	str	r3, [r7, #8]
 800bcc2:	687b      	ldr	r3, [r7, #4]
 800bcc4:	681b      	ldr	r3, [r3, #0]
 800bcc6:	68ba      	ldr	r2, [r7, #8]
 800bcc8:	609a      	str	r2, [r3, #8]
 800bcca:	687b      	ldr	r3, [r7, #4]
 800bccc:	2201      	movs	r2, #1
 800bcce:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bcd2:	687b      	ldr	r3, [r7, #4]
 800bcd4:	2200      	movs	r2, #0
 800bcd6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bcda:	2300      	movs	r3, #0
 800bcdc:	4618      	mov	r0, r3
 800bcde:	3714      	adds	r7, #20
 800bce0:	46bd      	mov	sp, r7
 800bce2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bce6:	4770      	bx	lr
 800bce8:	40010000 	.word	0x40010000
 800bcec:	40010400 	.word	0x40010400
 800bcf0:	40000400 	.word	0x40000400
 800bcf4:	40000800 	.word	0x40000800
 800bcf8:	40000c00 	.word	0x40000c00
 800bcfc:	40014000 	.word	0x40014000
 800bd00:	40001800 	.word	0x40001800

0800bd04 <HAL_TIMEx_ConfigBreakDeadTime>:
 800bd04:	b480      	push	{r7}
 800bd06:	b085      	sub	sp, #20
 800bd08:	af00      	add	r7, sp, #0
 800bd0a:	6078      	str	r0, [r7, #4]
 800bd0c:	6039      	str	r1, [r7, #0]
 800bd0e:	2300      	movs	r3, #0
 800bd10:	60fb      	str	r3, [r7, #12]
 800bd12:	687b      	ldr	r3, [r7, #4]
 800bd14:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bd18:	2b01      	cmp	r3, #1
 800bd1a:	d101      	bne.n	800bd20 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800bd1c:	2302      	movs	r3, #2
 800bd1e:	e065      	b.n	800bdec <HAL_TIMEx_ConfigBreakDeadTime+0xe8>
 800bd20:	687b      	ldr	r3, [r7, #4]
 800bd22:	2201      	movs	r2, #1
 800bd24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bd28:	68fb      	ldr	r3, [r7, #12]
 800bd2a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800bd2e:	683b      	ldr	r3, [r7, #0]
 800bd30:	68db      	ldr	r3, [r3, #12]
 800bd32:	4313      	orrs	r3, r2
 800bd34:	60fb      	str	r3, [r7, #12]
 800bd36:	68fb      	ldr	r3, [r7, #12]
 800bd38:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800bd3c:	683b      	ldr	r3, [r7, #0]
 800bd3e:	689b      	ldr	r3, [r3, #8]
 800bd40:	4313      	orrs	r3, r2
 800bd42:	60fb      	str	r3, [r7, #12]
 800bd44:	68fb      	ldr	r3, [r7, #12]
 800bd46:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800bd4a:	683b      	ldr	r3, [r7, #0]
 800bd4c:	685b      	ldr	r3, [r3, #4]
 800bd4e:	4313      	orrs	r3, r2
 800bd50:	60fb      	str	r3, [r7, #12]
 800bd52:	68fb      	ldr	r3, [r7, #12]
 800bd54:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800bd58:	683b      	ldr	r3, [r7, #0]
 800bd5a:	681b      	ldr	r3, [r3, #0]
 800bd5c:	4313      	orrs	r3, r2
 800bd5e:	60fb      	str	r3, [r7, #12]
 800bd60:	68fb      	ldr	r3, [r7, #12]
 800bd62:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800bd66:	683b      	ldr	r3, [r7, #0]
 800bd68:	691b      	ldr	r3, [r3, #16]
 800bd6a:	4313      	orrs	r3, r2
 800bd6c:	60fb      	str	r3, [r7, #12]
 800bd6e:	68fb      	ldr	r3, [r7, #12]
 800bd70:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800bd74:	683b      	ldr	r3, [r7, #0]
 800bd76:	695b      	ldr	r3, [r3, #20]
 800bd78:	4313      	orrs	r3, r2
 800bd7a:	60fb      	str	r3, [r7, #12]
 800bd7c:	68fb      	ldr	r3, [r7, #12]
 800bd7e:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800bd82:	683b      	ldr	r3, [r7, #0]
 800bd84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bd86:	4313      	orrs	r3, r2
 800bd88:	60fb      	str	r3, [r7, #12]
 800bd8a:	68fb      	ldr	r3, [r7, #12]
 800bd8c:	f423 2270 	bic.w	r2, r3, #983040	; 0xf0000
 800bd90:	683b      	ldr	r3, [r7, #0]
 800bd92:	699b      	ldr	r3, [r3, #24]
 800bd94:	041b      	lsls	r3, r3, #16
 800bd96:	4313      	orrs	r3, r2
 800bd98:	60fb      	str	r3, [r7, #12]
 800bd9a:	687b      	ldr	r3, [r7, #4]
 800bd9c:	681b      	ldr	r3, [r3, #0]
 800bd9e:	4a16      	ldr	r2, [pc, #88]	; (800bdf8 <HAL_TIMEx_ConfigBreakDeadTime+0xf4>)
 800bda0:	4293      	cmp	r3, r2
 800bda2:	d004      	beq.n	800bdae <HAL_TIMEx_ConfigBreakDeadTime+0xaa>
 800bda4:	687b      	ldr	r3, [r7, #4]
 800bda6:	681b      	ldr	r3, [r3, #0]
 800bda8:	4a14      	ldr	r2, [pc, #80]	; (800bdfc <HAL_TIMEx_ConfigBreakDeadTime+0xf8>)
 800bdaa:	4293      	cmp	r3, r2
 800bdac:	d115      	bne.n	800bdda <HAL_TIMEx_ConfigBreakDeadTime+0xd6>
 800bdae:	68fb      	ldr	r3, [r7, #12]
 800bdb0:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 800bdb4:	683b      	ldr	r3, [r7, #0]
 800bdb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bdb8:	051b      	lsls	r3, r3, #20
 800bdba:	4313      	orrs	r3, r2
 800bdbc:	60fb      	str	r3, [r7, #12]
 800bdbe:	68fb      	ldr	r3, [r7, #12]
 800bdc0:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 800bdc4:	683b      	ldr	r3, [r7, #0]
 800bdc6:	69db      	ldr	r3, [r3, #28]
 800bdc8:	4313      	orrs	r3, r2
 800bdca:	60fb      	str	r3, [r7, #12]
 800bdcc:	68fb      	ldr	r3, [r7, #12]
 800bdce:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 800bdd2:	683b      	ldr	r3, [r7, #0]
 800bdd4:	6a1b      	ldr	r3, [r3, #32]
 800bdd6:	4313      	orrs	r3, r2
 800bdd8:	60fb      	str	r3, [r7, #12]
 800bdda:	687b      	ldr	r3, [r7, #4]
 800bddc:	681b      	ldr	r3, [r3, #0]
 800bdde:	68fa      	ldr	r2, [r7, #12]
 800bde0:	645a      	str	r2, [r3, #68]	; 0x44
 800bde2:	687b      	ldr	r3, [r7, #4]
 800bde4:	2200      	movs	r2, #0
 800bde6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bdea:	2300      	movs	r3, #0
 800bdec:	4618      	mov	r0, r3
 800bdee:	3714      	adds	r7, #20
 800bdf0:	46bd      	mov	sp, r7
 800bdf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdf6:	4770      	bx	lr
 800bdf8:	40010000 	.word	0x40010000
 800bdfc:	40010400 	.word	0x40010400

0800be00 <HAL_TIMEx_CommutCallback>:
 800be00:	b480      	push	{r7}
 800be02:	b083      	sub	sp, #12
 800be04:	af00      	add	r7, sp, #0
 800be06:	6078      	str	r0, [r7, #4]
 800be08:	bf00      	nop
 800be0a:	370c      	adds	r7, #12
 800be0c:	46bd      	mov	sp, r7
 800be0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be12:	4770      	bx	lr

0800be14 <HAL_TIMEx_BreakCallback>:
 800be14:	b480      	push	{r7}
 800be16:	b083      	sub	sp, #12
 800be18:	af00      	add	r7, sp, #0
 800be1a:	6078      	str	r0, [r7, #4]
 800be1c:	bf00      	nop
 800be1e:	370c      	adds	r7, #12
 800be20:	46bd      	mov	sp, r7
 800be22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be26:	4770      	bx	lr

0800be28 <HAL_TIMEx_Break2Callback>:
 800be28:	b480      	push	{r7}
 800be2a:	b083      	sub	sp, #12
 800be2c:	af00      	add	r7, sp, #0
 800be2e:	6078      	str	r0, [r7, #4]
 800be30:	bf00      	nop
 800be32:	370c      	adds	r7, #12
 800be34:	46bd      	mov	sp, r7
 800be36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be3a:	4770      	bx	lr

0800be3c <HAL_UART_Init>:
 800be3c:	b580      	push	{r7, lr}
 800be3e:	b082      	sub	sp, #8
 800be40:	af00      	add	r7, sp, #0
 800be42:	6078      	str	r0, [r7, #4]
 800be44:	687b      	ldr	r3, [r7, #4]
 800be46:	2b00      	cmp	r3, #0
 800be48:	d101      	bne.n	800be4e <HAL_UART_Init+0x12>
 800be4a:	2301      	movs	r3, #1
 800be4c:	e040      	b.n	800bed0 <HAL_UART_Init+0x94>
 800be4e:	687b      	ldr	r3, [r7, #4]
 800be50:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800be52:	2b00      	cmp	r3, #0
 800be54:	d106      	bne.n	800be64 <HAL_UART_Init+0x28>
 800be56:	687b      	ldr	r3, [r7, #4]
 800be58:	2200      	movs	r2, #0
 800be5a:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800be5e:	6878      	ldr	r0, [r7, #4]
 800be60:	f7fa f80a 	bl	8005e78 <HAL_UART_MspInit>
 800be64:	687b      	ldr	r3, [r7, #4]
 800be66:	2224      	movs	r2, #36	; 0x24
 800be68:	675a      	str	r2, [r3, #116]	; 0x74
 800be6a:	687b      	ldr	r3, [r7, #4]
 800be6c:	681b      	ldr	r3, [r3, #0]
 800be6e:	681a      	ldr	r2, [r3, #0]
 800be70:	687b      	ldr	r3, [r7, #4]
 800be72:	681b      	ldr	r3, [r3, #0]
 800be74:	f022 0201 	bic.w	r2, r2, #1
 800be78:	601a      	str	r2, [r3, #0]
 800be7a:	6878      	ldr	r0, [r7, #4]
 800be7c:	f000 fad0 	bl	800c420 <UART_SetConfig>
 800be80:	4603      	mov	r3, r0
 800be82:	2b01      	cmp	r3, #1
 800be84:	d101      	bne.n	800be8a <HAL_UART_Init+0x4e>
 800be86:	2301      	movs	r3, #1
 800be88:	e022      	b.n	800bed0 <HAL_UART_Init+0x94>
 800be8a:	687b      	ldr	r3, [r7, #4]
 800be8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be8e:	2b00      	cmp	r3, #0
 800be90:	d002      	beq.n	800be98 <HAL_UART_Init+0x5c>
 800be92:	6878      	ldr	r0, [r7, #4]
 800be94:	f000 fd6e 	bl	800c974 <UART_AdvFeatureConfig>
 800be98:	687b      	ldr	r3, [r7, #4]
 800be9a:	681b      	ldr	r3, [r3, #0]
 800be9c:	685a      	ldr	r2, [r3, #4]
 800be9e:	687b      	ldr	r3, [r7, #4]
 800bea0:	681b      	ldr	r3, [r3, #0]
 800bea2:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800bea6:	605a      	str	r2, [r3, #4]
 800bea8:	687b      	ldr	r3, [r7, #4]
 800beaa:	681b      	ldr	r3, [r3, #0]
 800beac:	689a      	ldr	r2, [r3, #8]
 800beae:	687b      	ldr	r3, [r7, #4]
 800beb0:	681b      	ldr	r3, [r3, #0]
 800beb2:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800beb6:	609a      	str	r2, [r3, #8]
 800beb8:	687b      	ldr	r3, [r7, #4]
 800beba:	681b      	ldr	r3, [r3, #0]
 800bebc:	681a      	ldr	r2, [r3, #0]
 800bebe:	687b      	ldr	r3, [r7, #4]
 800bec0:	681b      	ldr	r3, [r3, #0]
 800bec2:	f042 0201 	orr.w	r2, r2, #1
 800bec6:	601a      	str	r2, [r3, #0]
 800bec8:	6878      	ldr	r0, [r7, #4]
 800beca:	f000 fdf5 	bl	800cab8 <UART_CheckIdleState>
 800bece:	4603      	mov	r3, r0
 800bed0:	4618      	mov	r0, r3
 800bed2:	3708      	adds	r7, #8
 800bed4:	46bd      	mov	sp, r7
 800bed6:	bd80      	pop	{r7, pc}

0800bed8 <HAL_UART_Transmit>:
 800bed8:	b580      	push	{r7, lr}
 800beda:	b08a      	sub	sp, #40	; 0x28
 800bedc:	af02      	add	r7, sp, #8
 800bede:	60f8      	str	r0, [r7, #12]
 800bee0:	60b9      	str	r1, [r7, #8]
 800bee2:	603b      	str	r3, [r7, #0]
 800bee4:	4613      	mov	r3, r2
 800bee6:	80fb      	strh	r3, [r7, #6]
 800bee8:	68fb      	ldr	r3, [r7, #12]
 800beea:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800beec:	2b20      	cmp	r3, #32
 800beee:	d17f      	bne.n	800bff0 <HAL_UART_Transmit+0x118>
 800bef0:	68bb      	ldr	r3, [r7, #8]
 800bef2:	2b00      	cmp	r3, #0
 800bef4:	d002      	beq.n	800befc <HAL_UART_Transmit+0x24>
 800bef6:	88fb      	ldrh	r3, [r7, #6]
 800bef8:	2b00      	cmp	r3, #0
 800befa:	d101      	bne.n	800bf00 <HAL_UART_Transmit+0x28>
 800befc:	2301      	movs	r3, #1
 800befe:	e078      	b.n	800bff2 <HAL_UART_Transmit+0x11a>
 800bf00:	68fb      	ldr	r3, [r7, #12]
 800bf02:	f893 3070 	ldrb.w	r3, [r3, #112]	; 0x70
 800bf06:	2b01      	cmp	r3, #1
 800bf08:	d101      	bne.n	800bf0e <HAL_UART_Transmit+0x36>
 800bf0a:	2302      	movs	r3, #2
 800bf0c:	e071      	b.n	800bff2 <HAL_UART_Transmit+0x11a>
 800bf0e:	68fb      	ldr	r3, [r7, #12]
 800bf10:	2201      	movs	r2, #1
 800bf12:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800bf16:	68fb      	ldr	r3, [r7, #12]
 800bf18:	2200      	movs	r2, #0
 800bf1a:	67da      	str	r2, [r3, #124]	; 0x7c
 800bf1c:	68fb      	ldr	r3, [r7, #12]
 800bf1e:	2221      	movs	r2, #33	; 0x21
 800bf20:	675a      	str	r2, [r3, #116]	; 0x74
 800bf22:	f7fa fa4b 	bl	80063bc <HAL_GetTick>
 800bf26:	6178      	str	r0, [r7, #20]
 800bf28:	68fb      	ldr	r3, [r7, #12]
 800bf2a:	88fa      	ldrh	r2, [r7, #6]
 800bf2c:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 800bf30:	68fb      	ldr	r3, [r7, #12]
 800bf32:	88fa      	ldrh	r2, [r7, #6]
 800bf34:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800bf38:	68fb      	ldr	r3, [r7, #12]
 800bf3a:	689b      	ldr	r3, [r3, #8]
 800bf3c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bf40:	d108      	bne.n	800bf54 <HAL_UART_Transmit+0x7c>
 800bf42:	68fb      	ldr	r3, [r7, #12]
 800bf44:	691b      	ldr	r3, [r3, #16]
 800bf46:	2b00      	cmp	r3, #0
 800bf48:	d104      	bne.n	800bf54 <HAL_UART_Transmit+0x7c>
 800bf4a:	2300      	movs	r3, #0
 800bf4c:	61fb      	str	r3, [r7, #28]
 800bf4e:	68bb      	ldr	r3, [r7, #8]
 800bf50:	61bb      	str	r3, [r7, #24]
 800bf52:	e003      	b.n	800bf5c <HAL_UART_Transmit+0x84>
 800bf54:	68bb      	ldr	r3, [r7, #8]
 800bf56:	61fb      	str	r3, [r7, #28]
 800bf58:	2300      	movs	r3, #0
 800bf5a:	61bb      	str	r3, [r7, #24]
 800bf5c:	68fb      	ldr	r3, [r7, #12]
 800bf5e:	2200      	movs	r2, #0
 800bf60:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800bf64:	e02c      	b.n	800bfc0 <HAL_UART_Transmit+0xe8>
 800bf66:	683b      	ldr	r3, [r7, #0]
 800bf68:	9300      	str	r3, [sp, #0]
 800bf6a:	697b      	ldr	r3, [r7, #20]
 800bf6c:	2200      	movs	r2, #0
 800bf6e:	2180      	movs	r1, #128	; 0x80
 800bf70:	68f8      	ldr	r0, [r7, #12]
 800bf72:	f000 fdd0 	bl	800cb16 <UART_WaitOnFlagUntilTimeout>
 800bf76:	4603      	mov	r3, r0
 800bf78:	2b00      	cmp	r3, #0
 800bf7a:	d001      	beq.n	800bf80 <HAL_UART_Transmit+0xa8>
 800bf7c:	2303      	movs	r3, #3
 800bf7e:	e038      	b.n	800bff2 <HAL_UART_Transmit+0x11a>
 800bf80:	69fb      	ldr	r3, [r7, #28]
 800bf82:	2b00      	cmp	r3, #0
 800bf84:	d10b      	bne.n	800bf9e <HAL_UART_Transmit+0xc6>
 800bf86:	69bb      	ldr	r3, [r7, #24]
 800bf88:	881b      	ldrh	r3, [r3, #0]
 800bf8a:	461a      	mov	r2, r3
 800bf8c:	68fb      	ldr	r3, [r7, #12]
 800bf8e:	681b      	ldr	r3, [r3, #0]
 800bf90:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800bf94:	629a      	str	r2, [r3, #40]	; 0x28
 800bf96:	69bb      	ldr	r3, [r7, #24]
 800bf98:	3302      	adds	r3, #2
 800bf9a:	61bb      	str	r3, [r7, #24]
 800bf9c:	e007      	b.n	800bfae <HAL_UART_Transmit+0xd6>
 800bf9e:	69fb      	ldr	r3, [r7, #28]
 800bfa0:	781a      	ldrb	r2, [r3, #0]
 800bfa2:	68fb      	ldr	r3, [r7, #12]
 800bfa4:	681b      	ldr	r3, [r3, #0]
 800bfa6:	629a      	str	r2, [r3, #40]	; 0x28
 800bfa8:	69fb      	ldr	r3, [r7, #28]
 800bfaa:	3301      	adds	r3, #1
 800bfac:	61fb      	str	r3, [r7, #28]
 800bfae:	68fb      	ldr	r3, [r7, #12]
 800bfb0:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 800bfb4:	b29b      	uxth	r3, r3
 800bfb6:	3b01      	subs	r3, #1
 800bfb8:	b29a      	uxth	r2, r3
 800bfba:	68fb      	ldr	r3, [r7, #12]
 800bfbc:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800bfc0:	68fb      	ldr	r3, [r7, #12]
 800bfc2:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 800bfc6:	b29b      	uxth	r3, r3
 800bfc8:	2b00      	cmp	r3, #0
 800bfca:	d1cc      	bne.n	800bf66 <HAL_UART_Transmit+0x8e>
 800bfcc:	683b      	ldr	r3, [r7, #0]
 800bfce:	9300      	str	r3, [sp, #0]
 800bfd0:	697b      	ldr	r3, [r7, #20]
 800bfd2:	2200      	movs	r2, #0
 800bfd4:	2140      	movs	r1, #64	; 0x40
 800bfd6:	68f8      	ldr	r0, [r7, #12]
 800bfd8:	f000 fd9d 	bl	800cb16 <UART_WaitOnFlagUntilTimeout>
 800bfdc:	4603      	mov	r3, r0
 800bfde:	2b00      	cmp	r3, #0
 800bfe0:	d001      	beq.n	800bfe6 <HAL_UART_Transmit+0x10e>
 800bfe2:	2303      	movs	r3, #3
 800bfe4:	e005      	b.n	800bff2 <HAL_UART_Transmit+0x11a>
 800bfe6:	68fb      	ldr	r3, [r7, #12]
 800bfe8:	2220      	movs	r2, #32
 800bfea:	675a      	str	r2, [r3, #116]	; 0x74
 800bfec:	2300      	movs	r3, #0
 800bfee:	e000      	b.n	800bff2 <HAL_UART_Transmit+0x11a>
 800bff0:	2302      	movs	r3, #2
 800bff2:	4618      	mov	r0, r3
 800bff4:	3720      	adds	r7, #32
 800bff6:	46bd      	mov	sp, r7
 800bff8:	bd80      	pop	{r7, pc}

0800bffa <HAL_UART_Receive>:
 800bffa:	b580      	push	{r7, lr}
 800bffc:	b08a      	sub	sp, #40	; 0x28
 800bffe:	af02      	add	r7, sp, #8
 800c000:	60f8      	str	r0, [r7, #12]
 800c002:	60b9      	str	r1, [r7, #8]
 800c004:	603b      	str	r3, [r7, #0]
 800c006:	4613      	mov	r3, r2
 800c008:	80fb      	strh	r3, [r7, #6]
 800c00a:	68fb      	ldr	r3, [r7, #12]
 800c00c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800c00e:	2b20      	cmp	r3, #32
 800c010:	f040 80ba 	bne.w	800c188 <HAL_UART_Receive+0x18e>
 800c014:	68bb      	ldr	r3, [r7, #8]
 800c016:	2b00      	cmp	r3, #0
 800c018:	d002      	beq.n	800c020 <HAL_UART_Receive+0x26>
 800c01a:	88fb      	ldrh	r3, [r7, #6]
 800c01c:	2b00      	cmp	r3, #0
 800c01e:	d101      	bne.n	800c024 <HAL_UART_Receive+0x2a>
 800c020:	2301      	movs	r3, #1
 800c022:	e0b2      	b.n	800c18a <HAL_UART_Receive+0x190>
 800c024:	68fb      	ldr	r3, [r7, #12]
 800c026:	f893 3070 	ldrb.w	r3, [r3, #112]	; 0x70
 800c02a:	2b01      	cmp	r3, #1
 800c02c:	d101      	bne.n	800c032 <HAL_UART_Receive+0x38>
 800c02e:	2302      	movs	r3, #2
 800c030:	e0ab      	b.n	800c18a <HAL_UART_Receive+0x190>
 800c032:	68fb      	ldr	r3, [r7, #12]
 800c034:	2201      	movs	r2, #1
 800c036:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800c03a:	68fb      	ldr	r3, [r7, #12]
 800c03c:	2200      	movs	r2, #0
 800c03e:	67da      	str	r2, [r3, #124]	; 0x7c
 800c040:	68fb      	ldr	r3, [r7, #12]
 800c042:	2222      	movs	r2, #34	; 0x22
 800c044:	679a      	str	r2, [r3, #120]	; 0x78
 800c046:	f7fa f9b9 	bl	80063bc <HAL_GetTick>
 800c04a:	6178      	str	r0, [r7, #20]
 800c04c:	68fb      	ldr	r3, [r7, #12]
 800c04e:	88fa      	ldrh	r2, [r7, #6]
 800c050:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 800c054:	68fb      	ldr	r3, [r7, #12]
 800c056:	88fa      	ldrh	r2, [r7, #6]
 800c058:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800c05c:	68fb      	ldr	r3, [r7, #12]
 800c05e:	689b      	ldr	r3, [r3, #8]
 800c060:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c064:	d10e      	bne.n	800c084 <HAL_UART_Receive+0x8a>
 800c066:	68fb      	ldr	r3, [r7, #12]
 800c068:	691b      	ldr	r3, [r3, #16]
 800c06a:	2b00      	cmp	r3, #0
 800c06c:	d105      	bne.n	800c07a <HAL_UART_Receive+0x80>
 800c06e:	68fb      	ldr	r3, [r7, #12]
 800c070:	f240 12ff 	movw	r2, #511	; 0x1ff
 800c074:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c078:	e02d      	b.n	800c0d6 <HAL_UART_Receive+0xdc>
 800c07a:	68fb      	ldr	r3, [r7, #12]
 800c07c:	22ff      	movs	r2, #255	; 0xff
 800c07e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c082:	e028      	b.n	800c0d6 <HAL_UART_Receive+0xdc>
 800c084:	68fb      	ldr	r3, [r7, #12]
 800c086:	689b      	ldr	r3, [r3, #8]
 800c088:	2b00      	cmp	r3, #0
 800c08a:	d10d      	bne.n	800c0a8 <HAL_UART_Receive+0xae>
 800c08c:	68fb      	ldr	r3, [r7, #12]
 800c08e:	691b      	ldr	r3, [r3, #16]
 800c090:	2b00      	cmp	r3, #0
 800c092:	d104      	bne.n	800c09e <HAL_UART_Receive+0xa4>
 800c094:	68fb      	ldr	r3, [r7, #12]
 800c096:	22ff      	movs	r2, #255	; 0xff
 800c098:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c09c:	e01b      	b.n	800c0d6 <HAL_UART_Receive+0xdc>
 800c09e:	68fb      	ldr	r3, [r7, #12]
 800c0a0:	227f      	movs	r2, #127	; 0x7f
 800c0a2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c0a6:	e016      	b.n	800c0d6 <HAL_UART_Receive+0xdc>
 800c0a8:	68fb      	ldr	r3, [r7, #12]
 800c0aa:	689b      	ldr	r3, [r3, #8]
 800c0ac:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800c0b0:	d10d      	bne.n	800c0ce <HAL_UART_Receive+0xd4>
 800c0b2:	68fb      	ldr	r3, [r7, #12]
 800c0b4:	691b      	ldr	r3, [r3, #16]
 800c0b6:	2b00      	cmp	r3, #0
 800c0b8:	d104      	bne.n	800c0c4 <HAL_UART_Receive+0xca>
 800c0ba:	68fb      	ldr	r3, [r7, #12]
 800c0bc:	227f      	movs	r2, #127	; 0x7f
 800c0be:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c0c2:	e008      	b.n	800c0d6 <HAL_UART_Receive+0xdc>
 800c0c4:	68fb      	ldr	r3, [r7, #12]
 800c0c6:	223f      	movs	r2, #63	; 0x3f
 800c0c8:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c0cc:	e003      	b.n	800c0d6 <HAL_UART_Receive+0xdc>
 800c0ce:	68fb      	ldr	r3, [r7, #12]
 800c0d0:	2200      	movs	r2, #0
 800c0d2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c0d6:	68fb      	ldr	r3, [r7, #12]
 800c0d8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800c0dc:	827b      	strh	r3, [r7, #18]
 800c0de:	68fb      	ldr	r3, [r7, #12]
 800c0e0:	689b      	ldr	r3, [r3, #8]
 800c0e2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c0e6:	d108      	bne.n	800c0fa <HAL_UART_Receive+0x100>
 800c0e8:	68fb      	ldr	r3, [r7, #12]
 800c0ea:	691b      	ldr	r3, [r3, #16]
 800c0ec:	2b00      	cmp	r3, #0
 800c0ee:	d104      	bne.n	800c0fa <HAL_UART_Receive+0x100>
 800c0f0:	2300      	movs	r3, #0
 800c0f2:	61fb      	str	r3, [r7, #28]
 800c0f4:	68bb      	ldr	r3, [r7, #8]
 800c0f6:	61bb      	str	r3, [r7, #24]
 800c0f8:	e003      	b.n	800c102 <HAL_UART_Receive+0x108>
 800c0fa:	68bb      	ldr	r3, [r7, #8]
 800c0fc:	61fb      	str	r3, [r7, #28]
 800c0fe:	2300      	movs	r3, #0
 800c100:	61bb      	str	r3, [r7, #24]
 800c102:	68fb      	ldr	r3, [r7, #12]
 800c104:	2200      	movs	r2, #0
 800c106:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800c10a:	e032      	b.n	800c172 <HAL_UART_Receive+0x178>
 800c10c:	683b      	ldr	r3, [r7, #0]
 800c10e:	9300      	str	r3, [sp, #0]
 800c110:	697b      	ldr	r3, [r7, #20]
 800c112:	2200      	movs	r2, #0
 800c114:	2120      	movs	r1, #32
 800c116:	68f8      	ldr	r0, [r7, #12]
 800c118:	f000 fcfd 	bl	800cb16 <UART_WaitOnFlagUntilTimeout>
 800c11c:	4603      	mov	r3, r0
 800c11e:	2b00      	cmp	r3, #0
 800c120:	d001      	beq.n	800c126 <HAL_UART_Receive+0x12c>
 800c122:	2303      	movs	r3, #3
 800c124:	e031      	b.n	800c18a <HAL_UART_Receive+0x190>
 800c126:	69fb      	ldr	r3, [r7, #28]
 800c128:	2b00      	cmp	r3, #0
 800c12a:	d10c      	bne.n	800c146 <HAL_UART_Receive+0x14c>
 800c12c:	68fb      	ldr	r3, [r7, #12]
 800c12e:	681b      	ldr	r3, [r3, #0]
 800c130:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c132:	b29a      	uxth	r2, r3
 800c134:	8a7b      	ldrh	r3, [r7, #18]
 800c136:	4013      	ands	r3, r2
 800c138:	b29a      	uxth	r2, r3
 800c13a:	69bb      	ldr	r3, [r7, #24]
 800c13c:	801a      	strh	r2, [r3, #0]
 800c13e:	69bb      	ldr	r3, [r7, #24]
 800c140:	3302      	adds	r3, #2
 800c142:	61bb      	str	r3, [r7, #24]
 800c144:	e00c      	b.n	800c160 <HAL_UART_Receive+0x166>
 800c146:	68fb      	ldr	r3, [r7, #12]
 800c148:	681b      	ldr	r3, [r3, #0]
 800c14a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c14c:	b2da      	uxtb	r2, r3
 800c14e:	8a7b      	ldrh	r3, [r7, #18]
 800c150:	b2db      	uxtb	r3, r3
 800c152:	4013      	ands	r3, r2
 800c154:	b2da      	uxtb	r2, r3
 800c156:	69fb      	ldr	r3, [r7, #28]
 800c158:	701a      	strb	r2, [r3, #0]
 800c15a:	69fb      	ldr	r3, [r7, #28]
 800c15c:	3301      	adds	r3, #1
 800c15e:	61fb      	str	r3, [r7, #28]
 800c160:	68fb      	ldr	r3, [r7, #12]
 800c162:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800c166:	b29b      	uxth	r3, r3
 800c168:	3b01      	subs	r3, #1
 800c16a:	b29a      	uxth	r2, r3
 800c16c:	68fb      	ldr	r3, [r7, #12]
 800c16e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800c172:	68fb      	ldr	r3, [r7, #12]
 800c174:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800c178:	b29b      	uxth	r3, r3
 800c17a:	2b00      	cmp	r3, #0
 800c17c:	d1c6      	bne.n	800c10c <HAL_UART_Receive+0x112>
 800c17e:	68fb      	ldr	r3, [r7, #12]
 800c180:	2220      	movs	r2, #32
 800c182:	679a      	str	r2, [r3, #120]	; 0x78
 800c184:	2300      	movs	r3, #0
 800c186:	e000      	b.n	800c18a <HAL_UART_Receive+0x190>
 800c188:	2302      	movs	r3, #2
 800c18a:	4618      	mov	r0, r3
 800c18c:	3720      	adds	r7, #32
 800c18e:	46bd      	mov	sp, r7
 800c190:	bd80      	pop	{r7, pc}
	...

0800c194 <HAL_UART_IRQHandler>:
 800c194:	b580      	push	{r7, lr}
 800c196:	b088      	sub	sp, #32
 800c198:	af00      	add	r7, sp, #0
 800c19a:	6078      	str	r0, [r7, #4]
 800c19c:	687b      	ldr	r3, [r7, #4]
 800c19e:	681b      	ldr	r3, [r3, #0]
 800c1a0:	69db      	ldr	r3, [r3, #28]
 800c1a2:	61fb      	str	r3, [r7, #28]
 800c1a4:	687b      	ldr	r3, [r7, #4]
 800c1a6:	681b      	ldr	r3, [r3, #0]
 800c1a8:	681b      	ldr	r3, [r3, #0]
 800c1aa:	61bb      	str	r3, [r7, #24]
 800c1ac:	687b      	ldr	r3, [r7, #4]
 800c1ae:	681b      	ldr	r3, [r3, #0]
 800c1b0:	689b      	ldr	r3, [r3, #8]
 800c1b2:	617b      	str	r3, [r7, #20]
 800c1b4:	69fa      	ldr	r2, [r7, #28]
 800c1b6:	f640 030f 	movw	r3, #2063	; 0x80f
 800c1ba:	4013      	ands	r3, r2
 800c1bc:	613b      	str	r3, [r7, #16]
 800c1be:	693b      	ldr	r3, [r7, #16]
 800c1c0:	2b00      	cmp	r3, #0
 800c1c2:	d113      	bne.n	800c1ec <HAL_UART_IRQHandler+0x58>
 800c1c4:	69fb      	ldr	r3, [r7, #28]
 800c1c6:	f003 0320 	and.w	r3, r3, #32
 800c1ca:	2b00      	cmp	r3, #0
 800c1cc:	d00e      	beq.n	800c1ec <HAL_UART_IRQHandler+0x58>
 800c1ce:	69bb      	ldr	r3, [r7, #24]
 800c1d0:	f003 0320 	and.w	r3, r3, #32
 800c1d4:	2b00      	cmp	r3, #0
 800c1d6:	d009      	beq.n	800c1ec <HAL_UART_IRQHandler+0x58>
 800c1d8:	687b      	ldr	r3, [r7, #4]
 800c1da:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c1dc:	2b00      	cmp	r3, #0
 800c1de:	f000 8100 	beq.w	800c3e2 <HAL_UART_IRQHandler+0x24e>
 800c1e2:	687b      	ldr	r3, [r7, #4]
 800c1e4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c1e6:	6878      	ldr	r0, [r7, #4]
 800c1e8:	4798      	blx	r3
 800c1ea:	e0fa      	b.n	800c3e2 <HAL_UART_IRQHandler+0x24e>
 800c1ec:	693b      	ldr	r3, [r7, #16]
 800c1ee:	2b00      	cmp	r3, #0
 800c1f0:	f000 80d5 	beq.w	800c39e <HAL_UART_IRQHandler+0x20a>
 800c1f4:	697b      	ldr	r3, [r7, #20]
 800c1f6:	f003 0301 	and.w	r3, r3, #1
 800c1fa:	2b00      	cmp	r3, #0
 800c1fc:	d105      	bne.n	800c20a <HAL_UART_IRQHandler+0x76>
 800c1fe:	69bb      	ldr	r3, [r7, #24]
 800c200:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800c204:	2b00      	cmp	r3, #0
 800c206:	f000 80ca 	beq.w	800c39e <HAL_UART_IRQHandler+0x20a>
 800c20a:	69fb      	ldr	r3, [r7, #28]
 800c20c:	f003 0301 	and.w	r3, r3, #1
 800c210:	2b00      	cmp	r3, #0
 800c212:	d00e      	beq.n	800c232 <HAL_UART_IRQHandler+0x9e>
 800c214:	69bb      	ldr	r3, [r7, #24]
 800c216:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c21a:	2b00      	cmp	r3, #0
 800c21c:	d009      	beq.n	800c232 <HAL_UART_IRQHandler+0x9e>
 800c21e:	687b      	ldr	r3, [r7, #4]
 800c220:	681b      	ldr	r3, [r3, #0]
 800c222:	2201      	movs	r2, #1
 800c224:	621a      	str	r2, [r3, #32]
 800c226:	687b      	ldr	r3, [r7, #4]
 800c228:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c22a:	f043 0201 	orr.w	r2, r3, #1
 800c22e:	687b      	ldr	r3, [r7, #4]
 800c230:	67da      	str	r2, [r3, #124]	; 0x7c
 800c232:	69fb      	ldr	r3, [r7, #28]
 800c234:	f003 0302 	and.w	r3, r3, #2
 800c238:	2b00      	cmp	r3, #0
 800c23a:	d00e      	beq.n	800c25a <HAL_UART_IRQHandler+0xc6>
 800c23c:	697b      	ldr	r3, [r7, #20]
 800c23e:	f003 0301 	and.w	r3, r3, #1
 800c242:	2b00      	cmp	r3, #0
 800c244:	d009      	beq.n	800c25a <HAL_UART_IRQHandler+0xc6>
 800c246:	687b      	ldr	r3, [r7, #4]
 800c248:	681b      	ldr	r3, [r3, #0]
 800c24a:	2202      	movs	r2, #2
 800c24c:	621a      	str	r2, [r3, #32]
 800c24e:	687b      	ldr	r3, [r7, #4]
 800c250:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c252:	f043 0204 	orr.w	r2, r3, #4
 800c256:	687b      	ldr	r3, [r7, #4]
 800c258:	67da      	str	r2, [r3, #124]	; 0x7c
 800c25a:	69fb      	ldr	r3, [r7, #28]
 800c25c:	f003 0304 	and.w	r3, r3, #4
 800c260:	2b00      	cmp	r3, #0
 800c262:	d00e      	beq.n	800c282 <HAL_UART_IRQHandler+0xee>
 800c264:	697b      	ldr	r3, [r7, #20]
 800c266:	f003 0301 	and.w	r3, r3, #1
 800c26a:	2b00      	cmp	r3, #0
 800c26c:	d009      	beq.n	800c282 <HAL_UART_IRQHandler+0xee>
 800c26e:	687b      	ldr	r3, [r7, #4]
 800c270:	681b      	ldr	r3, [r3, #0]
 800c272:	2204      	movs	r2, #4
 800c274:	621a      	str	r2, [r3, #32]
 800c276:	687b      	ldr	r3, [r7, #4]
 800c278:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c27a:	f043 0202 	orr.w	r2, r3, #2
 800c27e:	687b      	ldr	r3, [r7, #4]
 800c280:	67da      	str	r2, [r3, #124]	; 0x7c
 800c282:	69fb      	ldr	r3, [r7, #28]
 800c284:	f003 0308 	and.w	r3, r3, #8
 800c288:	2b00      	cmp	r3, #0
 800c28a:	d013      	beq.n	800c2b4 <HAL_UART_IRQHandler+0x120>
 800c28c:	69bb      	ldr	r3, [r7, #24]
 800c28e:	f003 0320 	and.w	r3, r3, #32
 800c292:	2b00      	cmp	r3, #0
 800c294:	d104      	bne.n	800c2a0 <HAL_UART_IRQHandler+0x10c>
 800c296:	697b      	ldr	r3, [r7, #20]
 800c298:	f003 0301 	and.w	r3, r3, #1
 800c29c:	2b00      	cmp	r3, #0
 800c29e:	d009      	beq.n	800c2b4 <HAL_UART_IRQHandler+0x120>
 800c2a0:	687b      	ldr	r3, [r7, #4]
 800c2a2:	681b      	ldr	r3, [r3, #0]
 800c2a4:	2208      	movs	r2, #8
 800c2a6:	621a      	str	r2, [r3, #32]
 800c2a8:	687b      	ldr	r3, [r7, #4]
 800c2aa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c2ac:	f043 0208 	orr.w	r2, r3, #8
 800c2b0:	687b      	ldr	r3, [r7, #4]
 800c2b2:	67da      	str	r2, [r3, #124]	; 0x7c
 800c2b4:	69fb      	ldr	r3, [r7, #28]
 800c2b6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800c2ba:	2b00      	cmp	r3, #0
 800c2bc:	d00f      	beq.n	800c2de <HAL_UART_IRQHandler+0x14a>
 800c2be:	69bb      	ldr	r3, [r7, #24]
 800c2c0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800c2c4:	2b00      	cmp	r3, #0
 800c2c6:	d00a      	beq.n	800c2de <HAL_UART_IRQHandler+0x14a>
 800c2c8:	687b      	ldr	r3, [r7, #4]
 800c2ca:	681b      	ldr	r3, [r3, #0]
 800c2cc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800c2d0:	621a      	str	r2, [r3, #32]
 800c2d2:	687b      	ldr	r3, [r7, #4]
 800c2d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c2d6:	f043 0220 	orr.w	r2, r3, #32
 800c2da:	687b      	ldr	r3, [r7, #4]
 800c2dc:	67da      	str	r2, [r3, #124]	; 0x7c
 800c2de:	687b      	ldr	r3, [r7, #4]
 800c2e0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c2e2:	2b00      	cmp	r3, #0
 800c2e4:	d07f      	beq.n	800c3e6 <HAL_UART_IRQHandler+0x252>
 800c2e6:	69fb      	ldr	r3, [r7, #28]
 800c2e8:	f003 0320 	and.w	r3, r3, #32
 800c2ec:	2b00      	cmp	r3, #0
 800c2ee:	d00c      	beq.n	800c30a <HAL_UART_IRQHandler+0x176>
 800c2f0:	69bb      	ldr	r3, [r7, #24]
 800c2f2:	f003 0320 	and.w	r3, r3, #32
 800c2f6:	2b00      	cmp	r3, #0
 800c2f8:	d007      	beq.n	800c30a <HAL_UART_IRQHandler+0x176>
 800c2fa:	687b      	ldr	r3, [r7, #4]
 800c2fc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c2fe:	2b00      	cmp	r3, #0
 800c300:	d003      	beq.n	800c30a <HAL_UART_IRQHandler+0x176>
 800c302:	687b      	ldr	r3, [r7, #4]
 800c304:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c306:	6878      	ldr	r0, [r7, #4]
 800c308:	4798      	blx	r3
 800c30a:	687b      	ldr	r3, [r7, #4]
 800c30c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c30e:	60fb      	str	r3, [r7, #12]
 800c310:	687b      	ldr	r3, [r7, #4]
 800c312:	681b      	ldr	r3, [r3, #0]
 800c314:	689b      	ldr	r3, [r3, #8]
 800c316:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c31a:	2b40      	cmp	r3, #64	; 0x40
 800c31c:	d004      	beq.n	800c328 <HAL_UART_IRQHandler+0x194>
 800c31e:	68fb      	ldr	r3, [r7, #12]
 800c320:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800c324:	2b00      	cmp	r3, #0
 800c326:	d031      	beq.n	800c38c <HAL_UART_IRQHandler+0x1f8>
 800c328:	6878      	ldr	r0, [r7, #4]
 800c32a:	f000 fc6f 	bl	800cc0c <UART_EndRxTransfer>
 800c32e:	687b      	ldr	r3, [r7, #4]
 800c330:	681b      	ldr	r3, [r3, #0]
 800c332:	689b      	ldr	r3, [r3, #8]
 800c334:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c338:	2b40      	cmp	r3, #64	; 0x40
 800c33a:	d123      	bne.n	800c384 <HAL_UART_IRQHandler+0x1f0>
 800c33c:	687b      	ldr	r3, [r7, #4]
 800c33e:	681b      	ldr	r3, [r3, #0]
 800c340:	689a      	ldr	r2, [r3, #8]
 800c342:	687b      	ldr	r3, [r7, #4]
 800c344:	681b      	ldr	r3, [r3, #0]
 800c346:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c34a:	609a      	str	r2, [r3, #8]
 800c34c:	687b      	ldr	r3, [r7, #4]
 800c34e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c350:	2b00      	cmp	r3, #0
 800c352:	d013      	beq.n	800c37c <HAL_UART_IRQHandler+0x1e8>
 800c354:	687b      	ldr	r3, [r7, #4]
 800c356:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c358:	4a26      	ldr	r2, [pc, #152]	; (800c3f4 <HAL_UART_IRQHandler+0x260>)
 800c35a:	651a      	str	r2, [r3, #80]	; 0x50
 800c35c:	687b      	ldr	r3, [r7, #4]
 800c35e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c360:	4618      	mov	r0, r3
 800c362:	f7fa feef 	bl	8007144 <HAL_DMA_Abort_IT>
 800c366:	4603      	mov	r3, r0
 800c368:	2b00      	cmp	r3, #0
 800c36a:	d016      	beq.n	800c39a <HAL_UART_IRQHandler+0x206>
 800c36c:	687b      	ldr	r3, [r7, #4]
 800c36e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c370:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c372:	687a      	ldr	r2, [r7, #4]
 800c374:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 800c376:	4610      	mov	r0, r2
 800c378:	4798      	blx	r3
 800c37a:	e00e      	b.n	800c39a <HAL_UART_IRQHandler+0x206>
 800c37c:	6878      	ldr	r0, [r7, #4]
 800c37e:	f000 f845 	bl	800c40c <HAL_UART_ErrorCallback>
 800c382:	e00a      	b.n	800c39a <HAL_UART_IRQHandler+0x206>
 800c384:	6878      	ldr	r0, [r7, #4]
 800c386:	f000 f841 	bl	800c40c <HAL_UART_ErrorCallback>
 800c38a:	e006      	b.n	800c39a <HAL_UART_IRQHandler+0x206>
 800c38c:	6878      	ldr	r0, [r7, #4]
 800c38e:	f000 f83d 	bl	800c40c <HAL_UART_ErrorCallback>
 800c392:	687b      	ldr	r3, [r7, #4]
 800c394:	2200      	movs	r2, #0
 800c396:	67da      	str	r2, [r3, #124]	; 0x7c
 800c398:	e025      	b.n	800c3e6 <HAL_UART_IRQHandler+0x252>
 800c39a:	bf00      	nop
 800c39c:	e023      	b.n	800c3e6 <HAL_UART_IRQHandler+0x252>
 800c39e:	69fb      	ldr	r3, [r7, #28]
 800c3a0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c3a4:	2b00      	cmp	r3, #0
 800c3a6:	d00d      	beq.n	800c3c4 <HAL_UART_IRQHandler+0x230>
 800c3a8:	69bb      	ldr	r3, [r7, #24]
 800c3aa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c3ae:	2b00      	cmp	r3, #0
 800c3b0:	d008      	beq.n	800c3c4 <HAL_UART_IRQHandler+0x230>
 800c3b2:	687b      	ldr	r3, [r7, #4]
 800c3b4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c3b6:	2b00      	cmp	r3, #0
 800c3b8:	d017      	beq.n	800c3ea <HAL_UART_IRQHandler+0x256>
 800c3ba:	687b      	ldr	r3, [r7, #4]
 800c3bc:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c3be:	6878      	ldr	r0, [r7, #4]
 800c3c0:	4798      	blx	r3
 800c3c2:	e012      	b.n	800c3ea <HAL_UART_IRQHandler+0x256>
 800c3c4:	69fb      	ldr	r3, [r7, #28]
 800c3c6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c3ca:	2b00      	cmp	r3, #0
 800c3cc:	d00e      	beq.n	800c3ec <HAL_UART_IRQHandler+0x258>
 800c3ce:	69bb      	ldr	r3, [r7, #24]
 800c3d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c3d4:	2b00      	cmp	r3, #0
 800c3d6:	d009      	beq.n	800c3ec <HAL_UART_IRQHandler+0x258>
 800c3d8:	6878      	ldr	r0, [r7, #4]
 800c3da:	f000 fc4d 	bl	800cc78 <UART_EndTransmit_IT>
 800c3de:	bf00      	nop
 800c3e0:	e004      	b.n	800c3ec <HAL_UART_IRQHandler+0x258>
 800c3e2:	bf00      	nop
 800c3e4:	e002      	b.n	800c3ec <HAL_UART_IRQHandler+0x258>
 800c3e6:	bf00      	nop
 800c3e8:	e000      	b.n	800c3ec <HAL_UART_IRQHandler+0x258>
 800c3ea:	bf00      	nop
 800c3ec:	3720      	adds	r7, #32
 800c3ee:	46bd      	mov	sp, r7
 800c3f0:	bd80      	pop	{r7, pc}
 800c3f2:	bf00      	nop
 800c3f4:	0800cc4d 	.word	0x0800cc4d

0800c3f8 <HAL_UART_TxCpltCallback>:
 800c3f8:	b480      	push	{r7}
 800c3fa:	b083      	sub	sp, #12
 800c3fc:	af00      	add	r7, sp, #0
 800c3fe:	6078      	str	r0, [r7, #4]
 800c400:	bf00      	nop
 800c402:	370c      	adds	r7, #12
 800c404:	46bd      	mov	sp, r7
 800c406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c40a:	4770      	bx	lr

0800c40c <HAL_UART_ErrorCallback>:
 800c40c:	b480      	push	{r7}
 800c40e:	b083      	sub	sp, #12
 800c410:	af00      	add	r7, sp, #0
 800c412:	6078      	str	r0, [r7, #4]
 800c414:	bf00      	nop
 800c416:	370c      	adds	r7, #12
 800c418:	46bd      	mov	sp, r7
 800c41a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c41e:	4770      	bx	lr

0800c420 <UART_SetConfig>:
 800c420:	b580      	push	{r7, lr}
 800c422:	b088      	sub	sp, #32
 800c424:	af00      	add	r7, sp, #0
 800c426:	6078      	str	r0, [r7, #4]
 800c428:	2300      	movs	r3, #0
 800c42a:	61bb      	str	r3, [r7, #24]
 800c42c:	2300      	movs	r3, #0
 800c42e:	75fb      	strb	r3, [r7, #23]
 800c430:	687b      	ldr	r3, [r7, #4]
 800c432:	689a      	ldr	r2, [r3, #8]
 800c434:	687b      	ldr	r3, [r7, #4]
 800c436:	691b      	ldr	r3, [r3, #16]
 800c438:	431a      	orrs	r2, r3
 800c43a:	687b      	ldr	r3, [r7, #4]
 800c43c:	695b      	ldr	r3, [r3, #20]
 800c43e:	431a      	orrs	r2, r3
 800c440:	687b      	ldr	r3, [r7, #4]
 800c442:	69db      	ldr	r3, [r3, #28]
 800c444:	4313      	orrs	r3, r2
 800c446:	613b      	str	r3, [r7, #16]
 800c448:	687b      	ldr	r3, [r7, #4]
 800c44a:	681b      	ldr	r3, [r3, #0]
 800c44c:	681a      	ldr	r2, [r3, #0]
 800c44e:	4bb1      	ldr	r3, [pc, #708]	; (800c714 <UART_SetConfig+0x2f4>)
 800c450:	4013      	ands	r3, r2
 800c452:	687a      	ldr	r2, [r7, #4]
 800c454:	6812      	ldr	r2, [r2, #0]
 800c456:	6939      	ldr	r1, [r7, #16]
 800c458:	430b      	orrs	r3, r1
 800c45a:	6013      	str	r3, [r2, #0]
 800c45c:	687b      	ldr	r3, [r7, #4]
 800c45e:	681b      	ldr	r3, [r3, #0]
 800c460:	685b      	ldr	r3, [r3, #4]
 800c462:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800c466:	687b      	ldr	r3, [r7, #4]
 800c468:	68da      	ldr	r2, [r3, #12]
 800c46a:	687b      	ldr	r3, [r7, #4]
 800c46c:	681b      	ldr	r3, [r3, #0]
 800c46e:	430a      	orrs	r2, r1
 800c470:	605a      	str	r2, [r3, #4]
 800c472:	687b      	ldr	r3, [r7, #4]
 800c474:	699b      	ldr	r3, [r3, #24]
 800c476:	613b      	str	r3, [r7, #16]
 800c478:	687b      	ldr	r3, [r7, #4]
 800c47a:	6a1b      	ldr	r3, [r3, #32]
 800c47c:	693a      	ldr	r2, [r7, #16]
 800c47e:	4313      	orrs	r3, r2
 800c480:	613b      	str	r3, [r7, #16]
 800c482:	687b      	ldr	r3, [r7, #4]
 800c484:	681b      	ldr	r3, [r3, #0]
 800c486:	689b      	ldr	r3, [r3, #8]
 800c488:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 800c48c:	687b      	ldr	r3, [r7, #4]
 800c48e:	681b      	ldr	r3, [r3, #0]
 800c490:	693a      	ldr	r2, [r7, #16]
 800c492:	430a      	orrs	r2, r1
 800c494:	609a      	str	r2, [r3, #8]
 800c496:	687b      	ldr	r3, [r7, #4]
 800c498:	681b      	ldr	r3, [r3, #0]
 800c49a:	4a9f      	ldr	r2, [pc, #636]	; (800c718 <UART_SetConfig+0x2f8>)
 800c49c:	4293      	cmp	r3, r2
 800c49e:	d121      	bne.n	800c4e4 <UART_SetConfig+0xc4>
 800c4a0:	4b9e      	ldr	r3, [pc, #632]	; (800c71c <UART_SetConfig+0x2fc>)
 800c4a2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c4a6:	f003 0303 	and.w	r3, r3, #3
 800c4aa:	2b03      	cmp	r3, #3
 800c4ac:	d816      	bhi.n	800c4dc <UART_SetConfig+0xbc>
 800c4ae:	a201      	add	r2, pc, #4	; (adr r2, 800c4b4 <UART_SetConfig+0x94>)
 800c4b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c4b4:	0800c4c5 	.word	0x0800c4c5
 800c4b8:	0800c4d1 	.word	0x0800c4d1
 800c4bc:	0800c4cb 	.word	0x0800c4cb
 800c4c0:	0800c4d7 	.word	0x0800c4d7
 800c4c4:	2301      	movs	r3, #1
 800c4c6:	77fb      	strb	r3, [r7, #31]
 800c4c8:	e151      	b.n	800c76e <UART_SetConfig+0x34e>
 800c4ca:	2302      	movs	r3, #2
 800c4cc:	77fb      	strb	r3, [r7, #31]
 800c4ce:	e14e      	b.n	800c76e <UART_SetConfig+0x34e>
 800c4d0:	2304      	movs	r3, #4
 800c4d2:	77fb      	strb	r3, [r7, #31]
 800c4d4:	e14b      	b.n	800c76e <UART_SetConfig+0x34e>
 800c4d6:	2308      	movs	r3, #8
 800c4d8:	77fb      	strb	r3, [r7, #31]
 800c4da:	e148      	b.n	800c76e <UART_SetConfig+0x34e>
 800c4dc:	2310      	movs	r3, #16
 800c4de:	77fb      	strb	r3, [r7, #31]
 800c4e0:	bf00      	nop
 800c4e2:	e144      	b.n	800c76e <UART_SetConfig+0x34e>
 800c4e4:	687b      	ldr	r3, [r7, #4]
 800c4e6:	681b      	ldr	r3, [r3, #0]
 800c4e8:	4a8d      	ldr	r2, [pc, #564]	; (800c720 <UART_SetConfig+0x300>)
 800c4ea:	4293      	cmp	r3, r2
 800c4ec:	d134      	bne.n	800c558 <UART_SetConfig+0x138>
 800c4ee:	4b8b      	ldr	r3, [pc, #556]	; (800c71c <UART_SetConfig+0x2fc>)
 800c4f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c4f4:	f003 030c 	and.w	r3, r3, #12
 800c4f8:	2b0c      	cmp	r3, #12
 800c4fa:	d829      	bhi.n	800c550 <UART_SetConfig+0x130>
 800c4fc:	a201      	add	r2, pc, #4	; (adr r2, 800c504 <UART_SetConfig+0xe4>)
 800c4fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c502:	bf00      	nop
 800c504:	0800c539 	.word	0x0800c539
 800c508:	0800c551 	.word	0x0800c551
 800c50c:	0800c551 	.word	0x0800c551
 800c510:	0800c551 	.word	0x0800c551
 800c514:	0800c545 	.word	0x0800c545
 800c518:	0800c551 	.word	0x0800c551
 800c51c:	0800c551 	.word	0x0800c551
 800c520:	0800c551 	.word	0x0800c551
 800c524:	0800c53f 	.word	0x0800c53f
 800c528:	0800c551 	.word	0x0800c551
 800c52c:	0800c551 	.word	0x0800c551
 800c530:	0800c551 	.word	0x0800c551
 800c534:	0800c54b 	.word	0x0800c54b
 800c538:	2300      	movs	r3, #0
 800c53a:	77fb      	strb	r3, [r7, #31]
 800c53c:	e117      	b.n	800c76e <UART_SetConfig+0x34e>
 800c53e:	2302      	movs	r3, #2
 800c540:	77fb      	strb	r3, [r7, #31]
 800c542:	e114      	b.n	800c76e <UART_SetConfig+0x34e>
 800c544:	2304      	movs	r3, #4
 800c546:	77fb      	strb	r3, [r7, #31]
 800c548:	e111      	b.n	800c76e <UART_SetConfig+0x34e>
 800c54a:	2308      	movs	r3, #8
 800c54c:	77fb      	strb	r3, [r7, #31]
 800c54e:	e10e      	b.n	800c76e <UART_SetConfig+0x34e>
 800c550:	2310      	movs	r3, #16
 800c552:	77fb      	strb	r3, [r7, #31]
 800c554:	bf00      	nop
 800c556:	e10a      	b.n	800c76e <UART_SetConfig+0x34e>
 800c558:	687b      	ldr	r3, [r7, #4]
 800c55a:	681b      	ldr	r3, [r3, #0]
 800c55c:	4a71      	ldr	r2, [pc, #452]	; (800c724 <UART_SetConfig+0x304>)
 800c55e:	4293      	cmp	r3, r2
 800c560:	d120      	bne.n	800c5a4 <UART_SetConfig+0x184>
 800c562:	4b6e      	ldr	r3, [pc, #440]	; (800c71c <UART_SetConfig+0x2fc>)
 800c564:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c568:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800c56c:	2b10      	cmp	r3, #16
 800c56e:	d00f      	beq.n	800c590 <UART_SetConfig+0x170>
 800c570:	2b10      	cmp	r3, #16
 800c572:	d802      	bhi.n	800c57a <UART_SetConfig+0x15a>
 800c574:	2b00      	cmp	r3, #0
 800c576:	d005      	beq.n	800c584 <UART_SetConfig+0x164>
 800c578:	e010      	b.n	800c59c <UART_SetConfig+0x17c>
 800c57a:	2b20      	cmp	r3, #32
 800c57c:	d005      	beq.n	800c58a <UART_SetConfig+0x16a>
 800c57e:	2b30      	cmp	r3, #48	; 0x30
 800c580:	d009      	beq.n	800c596 <UART_SetConfig+0x176>
 800c582:	e00b      	b.n	800c59c <UART_SetConfig+0x17c>
 800c584:	2300      	movs	r3, #0
 800c586:	77fb      	strb	r3, [r7, #31]
 800c588:	e0f1      	b.n	800c76e <UART_SetConfig+0x34e>
 800c58a:	2302      	movs	r3, #2
 800c58c:	77fb      	strb	r3, [r7, #31]
 800c58e:	e0ee      	b.n	800c76e <UART_SetConfig+0x34e>
 800c590:	2304      	movs	r3, #4
 800c592:	77fb      	strb	r3, [r7, #31]
 800c594:	e0eb      	b.n	800c76e <UART_SetConfig+0x34e>
 800c596:	2308      	movs	r3, #8
 800c598:	77fb      	strb	r3, [r7, #31]
 800c59a:	e0e8      	b.n	800c76e <UART_SetConfig+0x34e>
 800c59c:	2310      	movs	r3, #16
 800c59e:	77fb      	strb	r3, [r7, #31]
 800c5a0:	bf00      	nop
 800c5a2:	e0e4      	b.n	800c76e <UART_SetConfig+0x34e>
 800c5a4:	687b      	ldr	r3, [r7, #4]
 800c5a6:	681b      	ldr	r3, [r3, #0]
 800c5a8:	4a5f      	ldr	r2, [pc, #380]	; (800c728 <UART_SetConfig+0x308>)
 800c5aa:	4293      	cmp	r3, r2
 800c5ac:	d120      	bne.n	800c5f0 <UART_SetConfig+0x1d0>
 800c5ae:	4b5b      	ldr	r3, [pc, #364]	; (800c71c <UART_SetConfig+0x2fc>)
 800c5b0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c5b4:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800c5b8:	2b40      	cmp	r3, #64	; 0x40
 800c5ba:	d00f      	beq.n	800c5dc <UART_SetConfig+0x1bc>
 800c5bc:	2b40      	cmp	r3, #64	; 0x40
 800c5be:	d802      	bhi.n	800c5c6 <UART_SetConfig+0x1a6>
 800c5c0:	2b00      	cmp	r3, #0
 800c5c2:	d005      	beq.n	800c5d0 <UART_SetConfig+0x1b0>
 800c5c4:	e010      	b.n	800c5e8 <UART_SetConfig+0x1c8>
 800c5c6:	2b80      	cmp	r3, #128	; 0x80
 800c5c8:	d005      	beq.n	800c5d6 <UART_SetConfig+0x1b6>
 800c5ca:	2bc0      	cmp	r3, #192	; 0xc0
 800c5cc:	d009      	beq.n	800c5e2 <UART_SetConfig+0x1c2>
 800c5ce:	e00b      	b.n	800c5e8 <UART_SetConfig+0x1c8>
 800c5d0:	2300      	movs	r3, #0
 800c5d2:	77fb      	strb	r3, [r7, #31]
 800c5d4:	e0cb      	b.n	800c76e <UART_SetConfig+0x34e>
 800c5d6:	2302      	movs	r3, #2
 800c5d8:	77fb      	strb	r3, [r7, #31]
 800c5da:	e0c8      	b.n	800c76e <UART_SetConfig+0x34e>
 800c5dc:	2304      	movs	r3, #4
 800c5de:	77fb      	strb	r3, [r7, #31]
 800c5e0:	e0c5      	b.n	800c76e <UART_SetConfig+0x34e>
 800c5e2:	2308      	movs	r3, #8
 800c5e4:	77fb      	strb	r3, [r7, #31]
 800c5e6:	e0c2      	b.n	800c76e <UART_SetConfig+0x34e>
 800c5e8:	2310      	movs	r3, #16
 800c5ea:	77fb      	strb	r3, [r7, #31]
 800c5ec:	bf00      	nop
 800c5ee:	e0be      	b.n	800c76e <UART_SetConfig+0x34e>
 800c5f0:	687b      	ldr	r3, [r7, #4]
 800c5f2:	681b      	ldr	r3, [r3, #0]
 800c5f4:	4a4d      	ldr	r2, [pc, #308]	; (800c72c <UART_SetConfig+0x30c>)
 800c5f6:	4293      	cmp	r3, r2
 800c5f8:	d124      	bne.n	800c644 <UART_SetConfig+0x224>
 800c5fa:	4b48      	ldr	r3, [pc, #288]	; (800c71c <UART_SetConfig+0x2fc>)
 800c5fc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c600:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800c604:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c608:	d012      	beq.n	800c630 <UART_SetConfig+0x210>
 800c60a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c60e:	d802      	bhi.n	800c616 <UART_SetConfig+0x1f6>
 800c610:	2b00      	cmp	r3, #0
 800c612:	d007      	beq.n	800c624 <UART_SetConfig+0x204>
 800c614:	e012      	b.n	800c63c <UART_SetConfig+0x21c>
 800c616:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c61a:	d006      	beq.n	800c62a <UART_SetConfig+0x20a>
 800c61c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800c620:	d009      	beq.n	800c636 <UART_SetConfig+0x216>
 800c622:	e00b      	b.n	800c63c <UART_SetConfig+0x21c>
 800c624:	2300      	movs	r3, #0
 800c626:	77fb      	strb	r3, [r7, #31]
 800c628:	e0a1      	b.n	800c76e <UART_SetConfig+0x34e>
 800c62a:	2302      	movs	r3, #2
 800c62c:	77fb      	strb	r3, [r7, #31]
 800c62e:	e09e      	b.n	800c76e <UART_SetConfig+0x34e>
 800c630:	2304      	movs	r3, #4
 800c632:	77fb      	strb	r3, [r7, #31]
 800c634:	e09b      	b.n	800c76e <UART_SetConfig+0x34e>
 800c636:	2308      	movs	r3, #8
 800c638:	77fb      	strb	r3, [r7, #31]
 800c63a:	e098      	b.n	800c76e <UART_SetConfig+0x34e>
 800c63c:	2310      	movs	r3, #16
 800c63e:	77fb      	strb	r3, [r7, #31]
 800c640:	bf00      	nop
 800c642:	e094      	b.n	800c76e <UART_SetConfig+0x34e>
 800c644:	687b      	ldr	r3, [r7, #4]
 800c646:	681b      	ldr	r3, [r3, #0]
 800c648:	4a39      	ldr	r2, [pc, #228]	; (800c730 <UART_SetConfig+0x310>)
 800c64a:	4293      	cmp	r3, r2
 800c64c:	d124      	bne.n	800c698 <UART_SetConfig+0x278>
 800c64e:	4b33      	ldr	r3, [pc, #204]	; (800c71c <UART_SetConfig+0x2fc>)
 800c650:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c654:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800c658:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800c65c:	d012      	beq.n	800c684 <UART_SetConfig+0x264>
 800c65e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800c662:	d802      	bhi.n	800c66a <UART_SetConfig+0x24a>
 800c664:	2b00      	cmp	r3, #0
 800c666:	d007      	beq.n	800c678 <UART_SetConfig+0x258>
 800c668:	e012      	b.n	800c690 <UART_SetConfig+0x270>
 800c66a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c66e:	d006      	beq.n	800c67e <UART_SetConfig+0x25e>
 800c670:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800c674:	d009      	beq.n	800c68a <UART_SetConfig+0x26a>
 800c676:	e00b      	b.n	800c690 <UART_SetConfig+0x270>
 800c678:	2301      	movs	r3, #1
 800c67a:	77fb      	strb	r3, [r7, #31]
 800c67c:	e077      	b.n	800c76e <UART_SetConfig+0x34e>
 800c67e:	2302      	movs	r3, #2
 800c680:	77fb      	strb	r3, [r7, #31]
 800c682:	e074      	b.n	800c76e <UART_SetConfig+0x34e>
 800c684:	2304      	movs	r3, #4
 800c686:	77fb      	strb	r3, [r7, #31]
 800c688:	e071      	b.n	800c76e <UART_SetConfig+0x34e>
 800c68a:	2308      	movs	r3, #8
 800c68c:	77fb      	strb	r3, [r7, #31]
 800c68e:	e06e      	b.n	800c76e <UART_SetConfig+0x34e>
 800c690:	2310      	movs	r3, #16
 800c692:	77fb      	strb	r3, [r7, #31]
 800c694:	bf00      	nop
 800c696:	e06a      	b.n	800c76e <UART_SetConfig+0x34e>
 800c698:	687b      	ldr	r3, [r7, #4]
 800c69a:	681b      	ldr	r3, [r3, #0]
 800c69c:	4a25      	ldr	r2, [pc, #148]	; (800c734 <UART_SetConfig+0x314>)
 800c69e:	4293      	cmp	r3, r2
 800c6a0:	d124      	bne.n	800c6ec <UART_SetConfig+0x2cc>
 800c6a2:	4b1e      	ldr	r3, [pc, #120]	; (800c71c <UART_SetConfig+0x2fc>)
 800c6a4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c6a8:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 800c6ac:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c6b0:	d012      	beq.n	800c6d8 <UART_SetConfig+0x2b8>
 800c6b2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c6b6:	d802      	bhi.n	800c6be <UART_SetConfig+0x29e>
 800c6b8:	2b00      	cmp	r3, #0
 800c6ba:	d007      	beq.n	800c6cc <UART_SetConfig+0x2ac>
 800c6bc:	e012      	b.n	800c6e4 <UART_SetConfig+0x2c4>
 800c6be:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c6c2:	d006      	beq.n	800c6d2 <UART_SetConfig+0x2b2>
 800c6c4:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800c6c8:	d009      	beq.n	800c6de <UART_SetConfig+0x2be>
 800c6ca:	e00b      	b.n	800c6e4 <UART_SetConfig+0x2c4>
 800c6cc:	2300      	movs	r3, #0
 800c6ce:	77fb      	strb	r3, [r7, #31]
 800c6d0:	e04d      	b.n	800c76e <UART_SetConfig+0x34e>
 800c6d2:	2302      	movs	r3, #2
 800c6d4:	77fb      	strb	r3, [r7, #31]
 800c6d6:	e04a      	b.n	800c76e <UART_SetConfig+0x34e>
 800c6d8:	2304      	movs	r3, #4
 800c6da:	77fb      	strb	r3, [r7, #31]
 800c6dc:	e047      	b.n	800c76e <UART_SetConfig+0x34e>
 800c6de:	2308      	movs	r3, #8
 800c6e0:	77fb      	strb	r3, [r7, #31]
 800c6e2:	e044      	b.n	800c76e <UART_SetConfig+0x34e>
 800c6e4:	2310      	movs	r3, #16
 800c6e6:	77fb      	strb	r3, [r7, #31]
 800c6e8:	bf00      	nop
 800c6ea:	e040      	b.n	800c76e <UART_SetConfig+0x34e>
 800c6ec:	687b      	ldr	r3, [r7, #4]
 800c6ee:	681b      	ldr	r3, [r3, #0]
 800c6f0:	4a11      	ldr	r2, [pc, #68]	; (800c738 <UART_SetConfig+0x318>)
 800c6f2:	4293      	cmp	r3, r2
 800c6f4:	d139      	bne.n	800c76a <UART_SetConfig+0x34a>
 800c6f6:	4b09      	ldr	r3, [pc, #36]	; (800c71c <UART_SetConfig+0x2fc>)
 800c6f8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c6fc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800c700:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800c704:	d027      	beq.n	800c756 <UART_SetConfig+0x336>
 800c706:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800c70a:	d817      	bhi.n	800c73c <UART_SetConfig+0x31c>
 800c70c:	2b00      	cmp	r3, #0
 800c70e:	d01c      	beq.n	800c74a <UART_SetConfig+0x32a>
 800c710:	e027      	b.n	800c762 <UART_SetConfig+0x342>
 800c712:	bf00      	nop
 800c714:	efff69f3 	.word	0xefff69f3
 800c718:	40011000 	.word	0x40011000
 800c71c:	40023800 	.word	0x40023800
 800c720:	40004400 	.word	0x40004400
 800c724:	40004800 	.word	0x40004800
 800c728:	40004c00 	.word	0x40004c00
 800c72c:	40005000 	.word	0x40005000
 800c730:	40011400 	.word	0x40011400
 800c734:	40007800 	.word	0x40007800
 800c738:	40007c00 	.word	0x40007c00
 800c73c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800c740:	d006      	beq.n	800c750 <UART_SetConfig+0x330>
 800c742:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 800c746:	d009      	beq.n	800c75c <UART_SetConfig+0x33c>
 800c748:	e00b      	b.n	800c762 <UART_SetConfig+0x342>
 800c74a:	2300      	movs	r3, #0
 800c74c:	77fb      	strb	r3, [r7, #31]
 800c74e:	e00e      	b.n	800c76e <UART_SetConfig+0x34e>
 800c750:	2302      	movs	r3, #2
 800c752:	77fb      	strb	r3, [r7, #31]
 800c754:	e00b      	b.n	800c76e <UART_SetConfig+0x34e>
 800c756:	2304      	movs	r3, #4
 800c758:	77fb      	strb	r3, [r7, #31]
 800c75a:	e008      	b.n	800c76e <UART_SetConfig+0x34e>
 800c75c:	2308      	movs	r3, #8
 800c75e:	77fb      	strb	r3, [r7, #31]
 800c760:	e005      	b.n	800c76e <UART_SetConfig+0x34e>
 800c762:	2310      	movs	r3, #16
 800c764:	77fb      	strb	r3, [r7, #31]
 800c766:	bf00      	nop
 800c768:	e001      	b.n	800c76e <UART_SetConfig+0x34e>
 800c76a:	2310      	movs	r3, #16
 800c76c:	77fb      	strb	r3, [r7, #31]
 800c76e:	687b      	ldr	r3, [r7, #4]
 800c770:	69db      	ldr	r3, [r3, #28]
 800c772:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800c776:	d17f      	bne.n	800c878 <UART_SetConfig+0x458>
 800c778:	7ffb      	ldrb	r3, [r7, #31]
 800c77a:	2b08      	cmp	r3, #8
 800c77c:	d85c      	bhi.n	800c838 <UART_SetConfig+0x418>
 800c77e:	a201      	add	r2, pc, #4	; (adr r2, 800c784 <UART_SetConfig+0x364>)
 800c780:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c784:	0800c7a9 	.word	0x0800c7a9
 800c788:	0800c7c9 	.word	0x0800c7c9
 800c78c:	0800c7e9 	.word	0x0800c7e9
 800c790:	0800c839 	.word	0x0800c839
 800c794:	0800c801 	.word	0x0800c801
 800c798:	0800c839 	.word	0x0800c839
 800c79c:	0800c839 	.word	0x0800c839
 800c7a0:	0800c839 	.word	0x0800c839
 800c7a4:	0800c821 	.word	0x0800c821
 800c7a8:	f7fd f8fe 	bl	80099a8 <HAL_RCC_GetPCLK1Freq>
 800c7ac:	60f8      	str	r0, [r7, #12]
 800c7ae:	68fb      	ldr	r3, [r7, #12]
 800c7b0:	005a      	lsls	r2, r3, #1
 800c7b2:	687b      	ldr	r3, [r7, #4]
 800c7b4:	685b      	ldr	r3, [r3, #4]
 800c7b6:	085b      	lsrs	r3, r3, #1
 800c7b8:	441a      	add	r2, r3
 800c7ba:	687b      	ldr	r3, [r7, #4]
 800c7bc:	685b      	ldr	r3, [r3, #4]
 800c7be:	fbb2 f3f3 	udiv	r3, r2, r3
 800c7c2:	b29b      	uxth	r3, r3
 800c7c4:	61bb      	str	r3, [r7, #24]
 800c7c6:	e03a      	b.n	800c83e <UART_SetConfig+0x41e>
 800c7c8:	f7fd f902 	bl	80099d0 <HAL_RCC_GetPCLK2Freq>
 800c7cc:	60f8      	str	r0, [r7, #12]
 800c7ce:	68fb      	ldr	r3, [r7, #12]
 800c7d0:	005a      	lsls	r2, r3, #1
 800c7d2:	687b      	ldr	r3, [r7, #4]
 800c7d4:	685b      	ldr	r3, [r3, #4]
 800c7d6:	085b      	lsrs	r3, r3, #1
 800c7d8:	441a      	add	r2, r3
 800c7da:	687b      	ldr	r3, [r7, #4]
 800c7dc:	685b      	ldr	r3, [r3, #4]
 800c7de:	fbb2 f3f3 	udiv	r3, r2, r3
 800c7e2:	b29b      	uxth	r3, r3
 800c7e4:	61bb      	str	r3, [r7, #24]
 800c7e6:	e02a      	b.n	800c83e <UART_SetConfig+0x41e>
 800c7e8:	687b      	ldr	r3, [r7, #4]
 800c7ea:	685b      	ldr	r3, [r3, #4]
 800c7ec:	085a      	lsrs	r2, r3, #1
 800c7ee:	4b5f      	ldr	r3, [pc, #380]	; (800c96c <UART_SetConfig+0x54c>)
 800c7f0:	4413      	add	r3, r2
 800c7f2:	687a      	ldr	r2, [r7, #4]
 800c7f4:	6852      	ldr	r2, [r2, #4]
 800c7f6:	fbb3 f3f2 	udiv	r3, r3, r2
 800c7fa:	b29b      	uxth	r3, r3
 800c7fc:	61bb      	str	r3, [r7, #24]
 800c7fe:	e01e      	b.n	800c83e <UART_SetConfig+0x41e>
 800c800:	f7fd f814 	bl	800982c <HAL_RCC_GetSysClockFreq>
 800c804:	60f8      	str	r0, [r7, #12]
 800c806:	68fb      	ldr	r3, [r7, #12]
 800c808:	005a      	lsls	r2, r3, #1
 800c80a:	687b      	ldr	r3, [r7, #4]
 800c80c:	685b      	ldr	r3, [r3, #4]
 800c80e:	085b      	lsrs	r3, r3, #1
 800c810:	441a      	add	r2, r3
 800c812:	687b      	ldr	r3, [r7, #4]
 800c814:	685b      	ldr	r3, [r3, #4]
 800c816:	fbb2 f3f3 	udiv	r3, r2, r3
 800c81a:	b29b      	uxth	r3, r3
 800c81c:	61bb      	str	r3, [r7, #24]
 800c81e:	e00e      	b.n	800c83e <UART_SetConfig+0x41e>
 800c820:	687b      	ldr	r3, [r7, #4]
 800c822:	685b      	ldr	r3, [r3, #4]
 800c824:	085b      	lsrs	r3, r3, #1
 800c826:	f503 3280 	add.w	r2, r3, #65536	; 0x10000
 800c82a:	687b      	ldr	r3, [r7, #4]
 800c82c:	685b      	ldr	r3, [r3, #4]
 800c82e:	fbb2 f3f3 	udiv	r3, r2, r3
 800c832:	b29b      	uxth	r3, r3
 800c834:	61bb      	str	r3, [r7, #24]
 800c836:	e002      	b.n	800c83e <UART_SetConfig+0x41e>
 800c838:	2301      	movs	r3, #1
 800c83a:	75fb      	strb	r3, [r7, #23]
 800c83c:	bf00      	nop
 800c83e:	69bb      	ldr	r3, [r7, #24]
 800c840:	2b0f      	cmp	r3, #15
 800c842:	d916      	bls.n	800c872 <UART_SetConfig+0x452>
 800c844:	69bb      	ldr	r3, [r7, #24]
 800c846:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c84a:	d212      	bcs.n	800c872 <UART_SetConfig+0x452>
 800c84c:	69bb      	ldr	r3, [r7, #24]
 800c84e:	b29b      	uxth	r3, r3
 800c850:	f023 030f 	bic.w	r3, r3, #15
 800c854:	817b      	strh	r3, [r7, #10]
 800c856:	69bb      	ldr	r3, [r7, #24]
 800c858:	085b      	lsrs	r3, r3, #1
 800c85a:	b29b      	uxth	r3, r3
 800c85c:	f003 0307 	and.w	r3, r3, #7
 800c860:	b29a      	uxth	r2, r3
 800c862:	897b      	ldrh	r3, [r7, #10]
 800c864:	4313      	orrs	r3, r2
 800c866:	817b      	strh	r3, [r7, #10]
 800c868:	687b      	ldr	r3, [r7, #4]
 800c86a:	681b      	ldr	r3, [r3, #0]
 800c86c:	897a      	ldrh	r2, [r7, #10]
 800c86e:	60da      	str	r2, [r3, #12]
 800c870:	e070      	b.n	800c954 <UART_SetConfig+0x534>
 800c872:	2301      	movs	r3, #1
 800c874:	75fb      	strb	r3, [r7, #23]
 800c876:	e06d      	b.n	800c954 <UART_SetConfig+0x534>
 800c878:	7ffb      	ldrb	r3, [r7, #31]
 800c87a:	2b08      	cmp	r3, #8
 800c87c:	d859      	bhi.n	800c932 <UART_SetConfig+0x512>
 800c87e:	a201      	add	r2, pc, #4	; (adr r2, 800c884 <UART_SetConfig+0x464>)
 800c880:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c884:	0800c8a9 	.word	0x0800c8a9
 800c888:	0800c8c7 	.word	0x0800c8c7
 800c88c:	0800c8e5 	.word	0x0800c8e5
 800c890:	0800c933 	.word	0x0800c933
 800c894:	0800c8fd 	.word	0x0800c8fd
 800c898:	0800c933 	.word	0x0800c933
 800c89c:	0800c933 	.word	0x0800c933
 800c8a0:	0800c933 	.word	0x0800c933
 800c8a4:	0800c91b 	.word	0x0800c91b
 800c8a8:	f7fd f87e 	bl	80099a8 <HAL_RCC_GetPCLK1Freq>
 800c8ac:	60f8      	str	r0, [r7, #12]
 800c8ae:	687b      	ldr	r3, [r7, #4]
 800c8b0:	685b      	ldr	r3, [r3, #4]
 800c8b2:	085a      	lsrs	r2, r3, #1
 800c8b4:	68fb      	ldr	r3, [r7, #12]
 800c8b6:	441a      	add	r2, r3
 800c8b8:	687b      	ldr	r3, [r7, #4]
 800c8ba:	685b      	ldr	r3, [r3, #4]
 800c8bc:	fbb2 f3f3 	udiv	r3, r2, r3
 800c8c0:	b29b      	uxth	r3, r3
 800c8c2:	61bb      	str	r3, [r7, #24]
 800c8c4:	e038      	b.n	800c938 <UART_SetConfig+0x518>
 800c8c6:	f7fd f883 	bl	80099d0 <HAL_RCC_GetPCLK2Freq>
 800c8ca:	60f8      	str	r0, [r7, #12]
 800c8cc:	687b      	ldr	r3, [r7, #4]
 800c8ce:	685b      	ldr	r3, [r3, #4]
 800c8d0:	085a      	lsrs	r2, r3, #1
 800c8d2:	68fb      	ldr	r3, [r7, #12]
 800c8d4:	441a      	add	r2, r3
 800c8d6:	687b      	ldr	r3, [r7, #4]
 800c8d8:	685b      	ldr	r3, [r3, #4]
 800c8da:	fbb2 f3f3 	udiv	r3, r2, r3
 800c8de:	b29b      	uxth	r3, r3
 800c8e0:	61bb      	str	r3, [r7, #24]
 800c8e2:	e029      	b.n	800c938 <UART_SetConfig+0x518>
 800c8e4:	687b      	ldr	r3, [r7, #4]
 800c8e6:	685b      	ldr	r3, [r3, #4]
 800c8e8:	085a      	lsrs	r2, r3, #1
 800c8ea:	4b21      	ldr	r3, [pc, #132]	; (800c970 <UART_SetConfig+0x550>)
 800c8ec:	4413      	add	r3, r2
 800c8ee:	687a      	ldr	r2, [r7, #4]
 800c8f0:	6852      	ldr	r2, [r2, #4]
 800c8f2:	fbb3 f3f2 	udiv	r3, r3, r2
 800c8f6:	b29b      	uxth	r3, r3
 800c8f8:	61bb      	str	r3, [r7, #24]
 800c8fa:	e01d      	b.n	800c938 <UART_SetConfig+0x518>
 800c8fc:	f7fc ff96 	bl	800982c <HAL_RCC_GetSysClockFreq>
 800c900:	60f8      	str	r0, [r7, #12]
 800c902:	687b      	ldr	r3, [r7, #4]
 800c904:	685b      	ldr	r3, [r3, #4]
 800c906:	085a      	lsrs	r2, r3, #1
 800c908:	68fb      	ldr	r3, [r7, #12]
 800c90a:	441a      	add	r2, r3
 800c90c:	687b      	ldr	r3, [r7, #4]
 800c90e:	685b      	ldr	r3, [r3, #4]
 800c910:	fbb2 f3f3 	udiv	r3, r2, r3
 800c914:	b29b      	uxth	r3, r3
 800c916:	61bb      	str	r3, [r7, #24]
 800c918:	e00e      	b.n	800c938 <UART_SetConfig+0x518>
 800c91a:	687b      	ldr	r3, [r7, #4]
 800c91c:	685b      	ldr	r3, [r3, #4]
 800c91e:	085b      	lsrs	r3, r3, #1
 800c920:	f503 4200 	add.w	r2, r3, #32768	; 0x8000
 800c924:	687b      	ldr	r3, [r7, #4]
 800c926:	685b      	ldr	r3, [r3, #4]
 800c928:	fbb2 f3f3 	udiv	r3, r2, r3
 800c92c:	b29b      	uxth	r3, r3
 800c92e:	61bb      	str	r3, [r7, #24]
 800c930:	e002      	b.n	800c938 <UART_SetConfig+0x518>
 800c932:	2301      	movs	r3, #1
 800c934:	75fb      	strb	r3, [r7, #23]
 800c936:	bf00      	nop
 800c938:	69bb      	ldr	r3, [r7, #24]
 800c93a:	2b0f      	cmp	r3, #15
 800c93c:	d908      	bls.n	800c950 <UART_SetConfig+0x530>
 800c93e:	69bb      	ldr	r3, [r7, #24]
 800c940:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c944:	d204      	bcs.n	800c950 <UART_SetConfig+0x530>
 800c946:	687b      	ldr	r3, [r7, #4]
 800c948:	681b      	ldr	r3, [r3, #0]
 800c94a:	69ba      	ldr	r2, [r7, #24]
 800c94c:	60da      	str	r2, [r3, #12]
 800c94e:	e001      	b.n	800c954 <UART_SetConfig+0x534>
 800c950:	2301      	movs	r3, #1
 800c952:	75fb      	strb	r3, [r7, #23]
 800c954:	687b      	ldr	r3, [r7, #4]
 800c956:	2200      	movs	r2, #0
 800c958:	661a      	str	r2, [r3, #96]	; 0x60
 800c95a:	687b      	ldr	r3, [r7, #4]
 800c95c:	2200      	movs	r2, #0
 800c95e:	665a      	str	r2, [r3, #100]	; 0x64
 800c960:	7dfb      	ldrb	r3, [r7, #23]
 800c962:	4618      	mov	r0, r3
 800c964:	3720      	adds	r7, #32
 800c966:	46bd      	mov	sp, r7
 800c968:	bd80      	pop	{r7, pc}
 800c96a:	bf00      	nop
 800c96c:	01e84800 	.word	0x01e84800
 800c970:	00f42400 	.word	0x00f42400

0800c974 <UART_AdvFeatureConfig>:
 800c974:	b480      	push	{r7}
 800c976:	b083      	sub	sp, #12
 800c978:	af00      	add	r7, sp, #0
 800c97a:	6078      	str	r0, [r7, #4]
 800c97c:	687b      	ldr	r3, [r7, #4]
 800c97e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c980:	f003 0301 	and.w	r3, r3, #1
 800c984:	2b00      	cmp	r3, #0
 800c986:	d00a      	beq.n	800c99e <UART_AdvFeatureConfig+0x2a>
 800c988:	687b      	ldr	r3, [r7, #4]
 800c98a:	681b      	ldr	r3, [r3, #0]
 800c98c:	685b      	ldr	r3, [r3, #4]
 800c98e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800c992:	687b      	ldr	r3, [r7, #4]
 800c994:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c996:	687b      	ldr	r3, [r7, #4]
 800c998:	681b      	ldr	r3, [r3, #0]
 800c99a:	430a      	orrs	r2, r1
 800c99c:	605a      	str	r2, [r3, #4]
 800c99e:	687b      	ldr	r3, [r7, #4]
 800c9a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9a2:	f003 0302 	and.w	r3, r3, #2
 800c9a6:	2b00      	cmp	r3, #0
 800c9a8:	d00a      	beq.n	800c9c0 <UART_AdvFeatureConfig+0x4c>
 800c9aa:	687b      	ldr	r3, [r7, #4]
 800c9ac:	681b      	ldr	r3, [r3, #0]
 800c9ae:	685b      	ldr	r3, [r3, #4]
 800c9b0:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800c9b4:	687b      	ldr	r3, [r7, #4]
 800c9b6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c9b8:	687b      	ldr	r3, [r7, #4]
 800c9ba:	681b      	ldr	r3, [r3, #0]
 800c9bc:	430a      	orrs	r2, r1
 800c9be:	605a      	str	r2, [r3, #4]
 800c9c0:	687b      	ldr	r3, [r7, #4]
 800c9c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9c4:	f003 0304 	and.w	r3, r3, #4
 800c9c8:	2b00      	cmp	r3, #0
 800c9ca:	d00a      	beq.n	800c9e2 <UART_AdvFeatureConfig+0x6e>
 800c9cc:	687b      	ldr	r3, [r7, #4]
 800c9ce:	681b      	ldr	r3, [r3, #0]
 800c9d0:	685b      	ldr	r3, [r3, #4]
 800c9d2:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800c9d6:	687b      	ldr	r3, [r7, #4]
 800c9d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800c9da:	687b      	ldr	r3, [r7, #4]
 800c9dc:	681b      	ldr	r3, [r3, #0]
 800c9de:	430a      	orrs	r2, r1
 800c9e0:	605a      	str	r2, [r3, #4]
 800c9e2:	687b      	ldr	r3, [r7, #4]
 800c9e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9e6:	f003 0308 	and.w	r3, r3, #8
 800c9ea:	2b00      	cmp	r3, #0
 800c9ec:	d00a      	beq.n	800ca04 <UART_AdvFeatureConfig+0x90>
 800c9ee:	687b      	ldr	r3, [r7, #4]
 800c9f0:	681b      	ldr	r3, [r3, #0]
 800c9f2:	685b      	ldr	r3, [r3, #4]
 800c9f4:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800c9f8:	687b      	ldr	r3, [r7, #4]
 800c9fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c9fc:	687b      	ldr	r3, [r7, #4]
 800c9fe:	681b      	ldr	r3, [r3, #0]
 800ca00:	430a      	orrs	r2, r1
 800ca02:	605a      	str	r2, [r3, #4]
 800ca04:	687b      	ldr	r3, [r7, #4]
 800ca06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca08:	f003 0310 	and.w	r3, r3, #16
 800ca0c:	2b00      	cmp	r3, #0
 800ca0e:	d00a      	beq.n	800ca26 <UART_AdvFeatureConfig+0xb2>
 800ca10:	687b      	ldr	r3, [r7, #4]
 800ca12:	681b      	ldr	r3, [r3, #0]
 800ca14:	689b      	ldr	r3, [r3, #8]
 800ca16:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800ca1a:	687b      	ldr	r3, [r7, #4]
 800ca1c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ca1e:	687b      	ldr	r3, [r7, #4]
 800ca20:	681b      	ldr	r3, [r3, #0]
 800ca22:	430a      	orrs	r2, r1
 800ca24:	609a      	str	r2, [r3, #8]
 800ca26:	687b      	ldr	r3, [r7, #4]
 800ca28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca2a:	f003 0320 	and.w	r3, r3, #32
 800ca2e:	2b00      	cmp	r3, #0
 800ca30:	d00a      	beq.n	800ca48 <UART_AdvFeatureConfig+0xd4>
 800ca32:	687b      	ldr	r3, [r7, #4]
 800ca34:	681b      	ldr	r3, [r3, #0]
 800ca36:	689b      	ldr	r3, [r3, #8]
 800ca38:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800ca3c:	687b      	ldr	r3, [r7, #4]
 800ca3e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800ca40:	687b      	ldr	r3, [r7, #4]
 800ca42:	681b      	ldr	r3, [r3, #0]
 800ca44:	430a      	orrs	r2, r1
 800ca46:	609a      	str	r2, [r3, #8]
 800ca48:	687b      	ldr	r3, [r7, #4]
 800ca4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca4c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ca50:	2b00      	cmp	r3, #0
 800ca52:	d01a      	beq.n	800ca8a <UART_AdvFeatureConfig+0x116>
 800ca54:	687b      	ldr	r3, [r7, #4]
 800ca56:	681b      	ldr	r3, [r3, #0]
 800ca58:	685b      	ldr	r3, [r3, #4]
 800ca5a:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800ca5e:	687b      	ldr	r3, [r7, #4]
 800ca60:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ca62:	687b      	ldr	r3, [r7, #4]
 800ca64:	681b      	ldr	r3, [r3, #0]
 800ca66:	430a      	orrs	r2, r1
 800ca68:	605a      	str	r2, [r3, #4]
 800ca6a:	687b      	ldr	r3, [r7, #4]
 800ca6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ca6e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800ca72:	d10a      	bne.n	800ca8a <UART_AdvFeatureConfig+0x116>
 800ca74:	687b      	ldr	r3, [r7, #4]
 800ca76:	681b      	ldr	r3, [r3, #0]
 800ca78:	685b      	ldr	r3, [r3, #4]
 800ca7a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800ca7e:	687b      	ldr	r3, [r7, #4]
 800ca80:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ca82:	687b      	ldr	r3, [r7, #4]
 800ca84:	681b      	ldr	r3, [r3, #0]
 800ca86:	430a      	orrs	r2, r1
 800ca88:	605a      	str	r2, [r3, #4]
 800ca8a:	687b      	ldr	r3, [r7, #4]
 800ca8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca8e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ca92:	2b00      	cmp	r3, #0
 800ca94:	d00a      	beq.n	800caac <UART_AdvFeatureConfig+0x138>
 800ca96:	687b      	ldr	r3, [r7, #4]
 800ca98:	681b      	ldr	r3, [r3, #0]
 800ca9a:	685b      	ldr	r3, [r3, #4]
 800ca9c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800caa0:	687b      	ldr	r3, [r7, #4]
 800caa2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800caa4:	687b      	ldr	r3, [r7, #4]
 800caa6:	681b      	ldr	r3, [r3, #0]
 800caa8:	430a      	orrs	r2, r1
 800caaa:	605a      	str	r2, [r3, #4]
 800caac:	bf00      	nop
 800caae:	370c      	adds	r7, #12
 800cab0:	46bd      	mov	sp, r7
 800cab2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cab6:	4770      	bx	lr

0800cab8 <UART_CheckIdleState>:
 800cab8:	b580      	push	{r7, lr}
 800caba:	b086      	sub	sp, #24
 800cabc:	af02      	add	r7, sp, #8
 800cabe:	6078      	str	r0, [r7, #4]
 800cac0:	687b      	ldr	r3, [r7, #4]
 800cac2:	2200      	movs	r2, #0
 800cac4:	67da      	str	r2, [r3, #124]	; 0x7c
 800cac6:	f7f9 fc79 	bl	80063bc <HAL_GetTick>
 800caca:	60f8      	str	r0, [r7, #12]
 800cacc:	687b      	ldr	r3, [r7, #4]
 800cace:	681b      	ldr	r3, [r3, #0]
 800cad0:	681b      	ldr	r3, [r3, #0]
 800cad2:	f003 0308 	and.w	r3, r3, #8
 800cad6:	2b08      	cmp	r3, #8
 800cad8:	d10e      	bne.n	800caf8 <UART_CheckIdleState+0x40>
 800cada:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800cade:	9300      	str	r3, [sp, #0]
 800cae0:	68fb      	ldr	r3, [r7, #12]
 800cae2:	2200      	movs	r2, #0
 800cae4:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800cae8:	6878      	ldr	r0, [r7, #4]
 800caea:	f000 f814 	bl	800cb16 <UART_WaitOnFlagUntilTimeout>
 800caee:	4603      	mov	r3, r0
 800caf0:	2b00      	cmp	r3, #0
 800caf2:	d001      	beq.n	800caf8 <UART_CheckIdleState+0x40>
 800caf4:	2303      	movs	r3, #3
 800caf6:	e00a      	b.n	800cb0e <UART_CheckIdleState+0x56>
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	2220      	movs	r2, #32
 800cafc:	675a      	str	r2, [r3, #116]	; 0x74
 800cafe:	687b      	ldr	r3, [r7, #4]
 800cb00:	2220      	movs	r2, #32
 800cb02:	679a      	str	r2, [r3, #120]	; 0x78
 800cb04:	687b      	ldr	r3, [r7, #4]
 800cb06:	2200      	movs	r2, #0
 800cb08:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800cb0c:	2300      	movs	r3, #0
 800cb0e:	4618      	mov	r0, r3
 800cb10:	3710      	adds	r7, #16
 800cb12:	46bd      	mov	sp, r7
 800cb14:	bd80      	pop	{r7, pc}

0800cb16 <UART_WaitOnFlagUntilTimeout>:
 800cb16:	b580      	push	{r7, lr}
 800cb18:	b084      	sub	sp, #16
 800cb1a:	af00      	add	r7, sp, #0
 800cb1c:	60f8      	str	r0, [r7, #12]
 800cb1e:	60b9      	str	r1, [r7, #8]
 800cb20:	603b      	str	r3, [r7, #0]
 800cb22:	4613      	mov	r3, r2
 800cb24:	71fb      	strb	r3, [r7, #7]
 800cb26:	e05d      	b.n	800cbe4 <UART_WaitOnFlagUntilTimeout+0xce>
 800cb28:	69bb      	ldr	r3, [r7, #24]
 800cb2a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cb2e:	d059      	beq.n	800cbe4 <UART_WaitOnFlagUntilTimeout+0xce>
 800cb30:	f7f9 fc44 	bl	80063bc <HAL_GetTick>
 800cb34:	4602      	mov	r2, r0
 800cb36:	683b      	ldr	r3, [r7, #0]
 800cb38:	1ad3      	subs	r3, r2, r3
 800cb3a:	69ba      	ldr	r2, [r7, #24]
 800cb3c:	429a      	cmp	r2, r3
 800cb3e:	d302      	bcc.n	800cb46 <UART_WaitOnFlagUntilTimeout+0x30>
 800cb40:	69bb      	ldr	r3, [r7, #24]
 800cb42:	2b00      	cmp	r3, #0
 800cb44:	d11b      	bne.n	800cb7e <UART_WaitOnFlagUntilTimeout+0x68>
 800cb46:	68fb      	ldr	r3, [r7, #12]
 800cb48:	681b      	ldr	r3, [r3, #0]
 800cb4a:	681a      	ldr	r2, [r3, #0]
 800cb4c:	68fb      	ldr	r3, [r7, #12]
 800cb4e:	681b      	ldr	r3, [r3, #0]
 800cb50:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800cb54:	601a      	str	r2, [r3, #0]
 800cb56:	68fb      	ldr	r3, [r7, #12]
 800cb58:	681b      	ldr	r3, [r3, #0]
 800cb5a:	689a      	ldr	r2, [r3, #8]
 800cb5c:	68fb      	ldr	r3, [r7, #12]
 800cb5e:	681b      	ldr	r3, [r3, #0]
 800cb60:	f022 0201 	bic.w	r2, r2, #1
 800cb64:	609a      	str	r2, [r3, #8]
 800cb66:	68fb      	ldr	r3, [r7, #12]
 800cb68:	2220      	movs	r2, #32
 800cb6a:	675a      	str	r2, [r3, #116]	; 0x74
 800cb6c:	68fb      	ldr	r3, [r7, #12]
 800cb6e:	2220      	movs	r2, #32
 800cb70:	679a      	str	r2, [r3, #120]	; 0x78
 800cb72:	68fb      	ldr	r3, [r7, #12]
 800cb74:	2200      	movs	r2, #0
 800cb76:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800cb7a:	2303      	movs	r3, #3
 800cb7c:	e042      	b.n	800cc04 <UART_WaitOnFlagUntilTimeout+0xee>
 800cb7e:	68fb      	ldr	r3, [r7, #12]
 800cb80:	681b      	ldr	r3, [r3, #0]
 800cb82:	681b      	ldr	r3, [r3, #0]
 800cb84:	f003 0304 	and.w	r3, r3, #4
 800cb88:	2b00      	cmp	r3, #0
 800cb8a:	d02b      	beq.n	800cbe4 <UART_WaitOnFlagUntilTimeout+0xce>
 800cb8c:	68fb      	ldr	r3, [r7, #12]
 800cb8e:	681b      	ldr	r3, [r3, #0]
 800cb90:	69db      	ldr	r3, [r3, #28]
 800cb92:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800cb96:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cb9a:	d123      	bne.n	800cbe4 <UART_WaitOnFlagUntilTimeout+0xce>
 800cb9c:	68fb      	ldr	r3, [r7, #12]
 800cb9e:	681b      	ldr	r3, [r3, #0]
 800cba0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800cba4:	621a      	str	r2, [r3, #32]
 800cba6:	68fb      	ldr	r3, [r7, #12]
 800cba8:	681b      	ldr	r3, [r3, #0]
 800cbaa:	681a      	ldr	r2, [r3, #0]
 800cbac:	68fb      	ldr	r3, [r7, #12]
 800cbae:	681b      	ldr	r3, [r3, #0]
 800cbb0:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800cbb4:	601a      	str	r2, [r3, #0]
 800cbb6:	68fb      	ldr	r3, [r7, #12]
 800cbb8:	681b      	ldr	r3, [r3, #0]
 800cbba:	689a      	ldr	r2, [r3, #8]
 800cbbc:	68fb      	ldr	r3, [r7, #12]
 800cbbe:	681b      	ldr	r3, [r3, #0]
 800cbc0:	f022 0201 	bic.w	r2, r2, #1
 800cbc4:	609a      	str	r2, [r3, #8]
 800cbc6:	68fb      	ldr	r3, [r7, #12]
 800cbc8:	2220      	movs	r2, #32
 800cbca:	675a      	str	r2, [r3, #116]	; 0x74
 800cbcc:	68fb      	ldr	r3, [r7, #12]
 800cbce:	2220      	movs	r2, #32
 800cbd0:	679a      	str	r2, [r3, #120]	; 0x78
 800cbd2:	68fb      	ldr	r3, [r7, #12]
 800cbd4:	2220      	movs	r2, #32
 800cbd6:	67da      	str	r2, [r3, #124]	; 0x7c
 800cbd8:	68fb      	ldr	r3, [r7, #12]
 800cbda:	2200      	movs	r2, #0
 800cbdc:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800cbe0:	2303      	movs	r3, #3
 800cbe2:	e00f      	b.n	800cc04 <UART_WaitOnFlagUntilTimeout+0xee>
 800cbe4:	68fb      	ldr	r3, [r7, #12]
 800cbe6:	681b      	ldr	r3, [r3, #0]
 800cbe8:	69da      	ldr	r2, [r3, #28]
 800cbea:	68bb      	ldr	r3, [r7, #8]
 800cbec:	4013      	ands	r3, r2
 800cbee:	68ba      	ldr	r2, [r7, #8]
 800cbf0:	429a      	cmp	r2, r3
 800cbf2:	bf0c      	ite	eq
 800cbf4:	2301      	moveq	r3, #1
 800cbf6:	2300      	movne	r3, #0
 800cbf8:	b2db      	uxtb	r3, r3
 800cbfa:	461a      	mov	r2, r3
 800cbfc:	79fb      	ldrb	r3, [r7, #7]
 800cbfe:	429a      	cmp	r2, r3
 800cc00:	d092      	beq.n	800cb28 <UART_WaitOnFlagUntilTimeout+0x12>
 800cc02:	2300      	movs	r3, #0
 800cc04:	4618      	mov	r0, r3
 800cc06:	3710      	adds	r7, #16
 800cc08:	46bd      	mov	sp, r7
 800cc0a:	bd80      	pop	{r7, pc}

0800cc0c <UART_EndRxTransfer>:
 800cc0c:	b480      	push	{r7}
 800cc0e:	b083      	sub	sp, #12
 800cc10:	af00      	add	r7, sp, #0
 800cc12:	6078      	str	r0, [r7, #4]
 800cc14:	687b      	ldr	r3, [r7, #4]
 800cc16:	681b      	ldr	r3, [r3, #0]
 800cc18:	681a      	ldr	r2, [r3, #0]
 800cc1a:	687b      	ldr	r3, [r7, #4]
 800cc1c:	681b      	ldr	r3, [r3, #0]
 800cc1e:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800cc22:	601a      	str	r2, [r3, #0]
 800cc24:	687b      	ldr	r3, [r7, #4]
 800cc26:	681b      	ldr	r3, [r3, #0]
 800cc28:	689a      	ldr	r2, [r3, #8]
 800cc2a:	687b      	ldr	r3, [r7, #4]
 800cc2c:	681b      	ldr	r3, [r3, #0]
 800cc2e:	f022 0201 	bic.w	r2, r2, #1
 800cc32:	609a      	str	r2, [r3, #8]
 800cc34:	687b      	ldr	r3, [r7, #4]
 800cc36:	2220      	movs	r2, #32
 800cc38:	679a      	str	r2, [r3, #120]	; 0x78
 800cc3a:	687b      	ldr	r3, [r7, #4]
 800cc3c:	2200      	movs	r2, #0
 800cc3e:	661a      	str	r2, [r3, #96]	; 0x60
 800cc40:	bf00      	nop
 800cc42:	370c      	adds	r7, #12
 800cc44:	46bd      	mov	sp, r7
 800cc46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc4a:	4770      	bx	lr

0800cc4c <UART_DMAAbortOnError>:
 800cc4c:	b580      	push	{r7, lr}
 800cc4e:	b084      	sub	sp, #16
 800cc50:	af00      	add	r7, sp, #0
 800cc52:	6078      	str	r0, [r7, #4]
 800cc54:	687b      	ldr	r3, [r7, #4]
 800cc56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc58:	60fb      	str	r3, [r7, #12]
 800cc5a:	68fb      	ldr	r3, [r7, #12]
 800cc5c:	2200      	movs	r2, #0
 800cc5e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800cc62:	68fb      	ldr	r3, [r7, #12]
 800cc64:	2200      	movs	r2, #0
 800cc66:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800cc6a:	68f8      	ldr	r0, [r7, #12]
 800cc6c:	f7ff fbce 	bl	800c40c <HAL_UART_ErrorCallback>
 800cc70:	bf00      	nop
 800cc72:	3710      	adds	r7, #16
 800cc74:	46bd      	mov	sp, r7
 800cc76:	bd80      	pop	{r7, pc}

0800cc78 <UART_EndTransmit_IT>:
 800cc78:	b580      	push	{r7, lr}
 800cc7a:	b082      	sub	sp, #8
 800cc7c:	af00      	add	r7, sp, #0
 800cc7e:	6078      	str	r0, [r7, #4]
 800cc80:	687b      	ldr	r3, [r7, #4]
 800cc82:	681b      	ldr	r3, [r3, #0]
 800cc84:	681a      	ldr	r2, [r3, #0]
 800cc86:	687b      	ldr	r3, [r7, #4]
 800cc88:	681b      	ldr	r3, [r3, #0]
 800cc8a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cc8e:	601a      	str	r2, [r3, #0]
 800cc90:	687b      	ldr	r3, [r7, #4]
 800cc92:	2220      	movs	r2, #32
 800cc94:	675a      	str	r2, [r3, #116]	; 0x74
 800cc96:	687b      	ldr	r3, [r7, #4]
 800cc98:	2200      	movs	r2, #0
 800cc9a:	665a      	str	r2, [r3, #100]	; 0x64
 800cc9c:	6878      	ldr	r0, [r7, #4]
 800cc9e:	f7ff fbab 	bl	800c3f8 <HAL_UART_TxCpltCallback>
 800cca2:	bf00      	nop
 800cca4:	3708      	adds	r7, #8
 800cca6:	46bd      	mov	sp, r7
 800cca8:	bd80      	pop	{r7, pc}
	...

0800ccac <FMC_SDRAM_Init>:
 800ccac:	b480      	push	{r7}
 800ccae:	b085      	sub	sp, #20
 800ccb0:	af00      	add	r7, sp, #0
 800ccb2:	6078      	str	r0, [r7, #4]
 800ccb4:	6039      	str	r1, [r7, #0]
 800ccb6:	2300      	movs	r3, #0
 800ccb8:	60fb      	str	r3, [r7, #12]
 800ccba:	2300      	movs	r3, #0
 800ccbc:	60bb      	str	r3, [r7, #8]
 800ccbe:	683b      	ldr	r3, [r7, #0]
 800ccc0:	681b      	ldr	r3, [r3, #0]
 800ccc2:	2b01      	cmp	r3, #1
 800ccc4:	d027      	beq.n	800cd16 <FMC_SDRAM_Init+0x6a>
 800ccc6:	687b      	ldr	r3, [r7, #4]
 800ccc8:	681b      	ldr	r3, [r3, #0]
 800ccca:	60fb      	str	r3, [r7, #12]
 800cccc:	68fa      	ldr	r2, [r7, #12]
 800ccce:	4b2f      	ldr	r3, [pc, #188]	; (800cd8c <FMC_SDRAM_Init+0xe0>)
 800ccd0:	4013      	ands	r3, r2
 800ccd2:	60fb      	str	r3, [r7, #12]
 800ccd4:	683b      	ldr	r3, [r7, #0]
 800ccd6:	685a      	ldr	r2, [r3, #4]
 800ccd8:	683b      	ldr	r3, [r7, #0]
 800ccda:	689b      	ldr	r3, [r3, #8]
 800ccdc:	431a      	orrs	r2, r3
 800ccde:	683b      	ldr	r3, [r7, #0]
 800cce0:	68db      	ldr	r3, [r3, #12]
 800cce2:	431a      	orrs	r2, r3
 800cce4:	683b      	ldr	r3, [r7, #0]
 800cce6:	691b      	ldr	r3, [r3, #16]
 800cce8:	431a      	orrs	r2, r3
 800ccea:	683b      	ldr	r3, [r7, #0]
 800ccec:	695b      	ldr	r3, [r3, #20]
 800ccee:	431a      	orrs	r2, r3
 800ccf0:	683b      	ldr	r3, [r7, #0]
 800ccf2:	699b      	ldr	r3, [r3, #24]
 800ccf4:	431a      	orrs	r2, r3
 800ccf6:	683b      	ldr	r3, [r7, #0]
 800ccf8:	69db      	ldr	r3, [r3, #28]
 800ccfa:	431a      	orrs	r2, r3
 800ccfc:	683b      	ldr	r3, [r7, #0]
 800ccfe:	6a1b      	ldr	r3, [r3, #32]
 800cd00:	431a      	orrs	r2, r3
 800cd02:	683b      	ldr	r3, [r7, #0]
 800cd04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd06:	4313      	orrs	r3, r2
 800cd08:	68fa      	ldr	r2, [r7, #12]
 800cd0a:	4313      	orrs	r3, r2
 800cd0c:	60fb      	str	r3, [r7, #12]
 800cd0e:	687b      	ldr	r3, [r7, #4]
 800cd10:	68fa      	ldr	r2, [r7, #12]
 800cd12:	601a      	str	r2, [r3, #0]
 800cd14:	e032      	b.n	800cd7c <FMC_SDRAM_Init+0xd0>
 800cd16:	687b      	ldr	r3, [r7, #4]
 800cd18:	681b      	ldr	r3, [r3, #0]
 800cd1a:	60fb      	str	r3, [r7, #12]
 800cd1c:	68fb      	ldr	r3, [r7, #12]
 800cd1e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800cd22:	60fb      	str	r3, [r7, #12]
 800cd24:	683b      	ldr	r3, [r7, #0]
 800cd26:	69da      	ldr	r2, [r3, #28]
 800cd28:	683b      	ldr	r3, [r7, #0]
 800cd2a:	6a1b      	ldr	r3, [r3, #32]
 800cd2c:	431a      	orrs	r2, r3
 800cd2e:	683b      	ldr	r3, [r7, #0]
 800cd30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd32:	4313      	orrs	r3, r2
 800cd34:	68fa      	ldr	r2, [r7, #12]
 800cd36:	4313      	orrs	r3, r2
 800cd38:	60fb      	str	r3, [r7, #12]
 800cd3a:	687b      	ldr	r3, [r7, #4]
 800cd3c:	685b      	ldr	r3, [r3, #4]
 800cd3e:	60bb      	str	r3, [r7, #8]
 800cd40:	68ba      	ldr	r2, [r7, #8]
 800cd42:	4b12      	ldr	r3, [pc, #72]	; (800cd8c <FMC_SDRAM_Init+0xe0>)
 800cd44:	4013      	ands	r3, r2
 800cd46:	60bb      	str	r3, [r7, #8]
 800cd48:	683b      	ldr	r3, [r7, #0]
 800cd4a:	685a      	ldr	r2, [r3, #4]
 800cd4c:	683b      	ldr	r3, [r7, #0]
 800cd4e:	689b      	ldr	r3, [r3, #8]
 800cd50:	431a      	orrs	r2, r3
 800cd52:	683b      	ldr	r3, [r7, #0]
 800cd54:	68db      	ldr	r3, [r3, #12]
 800cd56:	431a      	orrs	r2, r3
 800cd58:	683b      	ldr	r3, [r7, #0]
 800cd5a:	691b      	ldr	r3, [r3, #16]
 800cd5c:	431a      	orrs	r2, r3
 800cd5e:	683b      	ldr	r3, [r7, #0]
 800cd60:	695b      	ldr	r3, [r3, #20]
 800cd62:	431a      	orrs	r2, r3
 800cd64:	683b      	ldr	r3, [r7, #0]
 800cd66:	699b      	ldr	r3, [r3, #24]
 800cd68:	4313      	orrs	r3, r2
 800cd6a:	68ba      	ldr	r2, [r7, #8]
 800cd6c:	4313      	orrs	r3, r2
 800cd6e:	60bb      	str	r3, [r7, #8]
 800cd70:	687b      	ldr	r3, [r7, #4]
 800cd72:	68fa      	ldr	r2, [r7, #12]
 800cd74:	601a      	str	r2, [r3, #0]
 800cd76:	687b      	ldr	r3, [r7, #4]
 800cd78:	68ba      	ldr	r2, [r7, #8]
 800cd7a:	605a      	str	r2, [r3, #4]
 800cd7c:	2300      	movs	r3, #0
 800cd7e:	4618      	mov	r0, r3
 800cd80:	3714      	adds	r7, #20
 800cd82:	46bd      	mov	sp, r7
 800cd84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd88:	4770      	bx	lr
 800cd8a:	bf00      	nop
 800cd8c:	ffff8000 	.word	0xffff8000

0800cd90 <FMC_SDRAM_Timing_Init>:
 800cd90:	b480      	push	{r7}
 800cd92:	b087      	sub	sp, #28
 800cd94:	af00      	add	r7, sp, #0
 800cd96:	60f8      	str	r0, [r7, #12]
 800cd98:	60b9      	str	r1, [r7, #8]
 800cd9a:	607a      	str	r2, [r7, #4]
 800cd9c:	2300      	movs	r3, #0
 800cd9e:	617b      	str	r3, [r7, #20]
 800cda0:	2300      	movs	r3, #0
 800cda2:	613b      	str	r3, [r7, #16]
 800cda4:	687b      	ldr	r3, [r7, #4]
 800cda6:	2b01      	cmp	r3, #1
 800cda8:	d02e      	beq.n	800ce08 <FMC_SDRAM_Timing_Init+0x78>
 800cdaa:	68fb      	ldr	r3, [r7, #12]
 800cdac:	689b      	ldr	r3, [r3, #8]
 800cdae:	617b      	str	r3, [r7, #20]
 800cdb0:	697b      	ldr	r3, [r7, #20]
 800cdb2:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cdb6:	617b      	str	r3, [r7, #20]
 800cdb8:	68bb      	ldr	r3, [r7, #8]
 800cdba:	681b      	ldr	r3, [r3, #0]
 800cdbc:	1e5a      	subs	r2, r3, #1
 800cdbe:	68bb      	ldr	r3, [r7, #8]
 800cdc0:	685b      	ldr	r3, [r3, #4]
 800cdc2:	3b01      	subs	r3, #1
 800cdc4:	011b      	lsls	r3, r3, #4
 800cdc6:	431a      	orrs	r2, r3
 800cdc8:	68bb      	ldr	r3, [r7, #8]
 800cdca:	689b      	ldr	r3, [r3, #8]
 800cdcc:	3b01      	subs	r3, #1
 800cdce:	021b      	lsls	r3, r3, #8
 800cdd0:	431a      	orrs	r2, r3
 800cdd2:	68bb      	ldr	r3, [r7, #8]
 800cdd4:	68db      	ldr	r3, [r3, #12]
 800cdd6:	3b01      	subs	r3, #1
 800cdd8:	031b      	lsls	r3, r3, #12
 800cdda:	431a      	orrs	r2, r3
 800cddc:	68bb      	ldr	r3, [r7, #8]
 800cdde:	691b      	ldr	r3, [r3, #16]
 800cde0:	3b01      	subs	r3, #1
 800cde2:	041b      	lsls	r3, r3, #16
 800cde4:	431a      	orrs	r2, r3
 800cde6:	68bb      	ldr	r3, [r7, #8]
 800cde8:	695b      	ldr	r3, [r3, #20]
 800cdea:	3b01      	subs	r3, #1
 800cdec:	051b      	lsls	r3, r3, #20
 800cdee:	431a      	orrs	r2, r3
 800cdf0:	68bb      	ldr	r3, [r7, #8]
 800cdf2:	699b      	ldr	r3, [r3, #24]
 800cdf4:	3b01      	subs	r3, #1
 800cdf6:	061b      	lsls	r3, r3, #24
 800cdf8:	4313      	orrs	r3, r2
 800cdfa:	697a      	ldr	r2, [r7, #20]
 800cdfc:	4313      	orrs	r3, r2
 800cdfe:	617b      	str	r3, [r7, #20]
 800ce00:	68fb      	ldr	r3, [r7, #12]
 800ce02:	697a      	ldr	r2, [r7, #20]
 800ce04:	609a      	str	r2, [r3, #8]
 800ce06:	e039      	b.n	800ce7c <FMC_SDRAM_Timing_Init+0xec>
 800ce08:	68fb      	ldr	r3, [r7, #12]
 800ce0a:	689b      	ldr	r3, [r3, #8]
 800ce0c:	617b      	str	r3, [r7, #20]
 800ce0e:	697a      	ldr	r2, [r7, #20]
 800ce10:	4b1e      	ldr	r3, [pc, #120]	; (800ce8c <FMC_SDRAM_Timing_Init+0xfc>)
 800ce12:	4013      	ands	r3, r2
 800ce14:	617b      	str	r3, [r7, #20]
 800ce16:	68bb      	ldr	r3, [r7, #8]
 800ce18:	68db      	ldr	r3, [r3, #12]
 800ce1a:	3b01      	subs	r3, #1
 800ce1c:	031a      	lsls	r2, r3, #12
 800ce1e:	68bb      	ldr	r3, [r7, #8]
 800ce20:	695b      	ldr	r3, [r3, #20]
 800ce22:	3b01      	subs	r3, #1
 800ce24:	051b      	lsls	r3, r3, #20
 800ce26:	4313      	orrs	r3, r2
 800ce28:	697a      	ldr	r2, [r7, #20]
 800ce2a:	4313      	orrs	r3, r2
 800ce2c:	617b      	str	r3, [r7, #20]
 800ce2e:	68fb      	ldr	r3, [r7, #12]
 800ce30:	68db      	ldr	r3, [r3, #12]
 800ce32:	613b      	str	r3, [r7, #16]
 800ce34:	693b      	ldr	r3, [r7, #16]
 800ce36:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ce3a:	613b      	str	r3, [r7, #16]
 800ce3c:	68bb      	ldr	r3, [r7, #8]
 800ce3e:	681b      	ldr	r3, [r3, #0]
 800ce40:	1e5a      	subs	r2, r3, #1
 800ce42:	68bb      	ldr	r3, [r7, #8]
 800ce44:	685b      	ldr	r3, [r3, #4]
 800ce46:	3b01      	subs	r3, #1
 800ce48:	011b      	lsls	r3, r3, #4
 800ce4a:	431a      	orrs	r2, r3
 800ce4c:	68bb      	ldr	r3, [r7, #8]
 800ce4e:	689b      	ldr	r3, [r3, #8]
 800ce50:	3b01      	subs	r3, #1
 800ce52:	021b      	lsls	r3, r3, #8
 800ce54:	431a      	orrs	r2, r3
 800ce56:	68bb      	ldr	r3, [r7, #8]
 800ce58:	691b      	ldr	r3, [r3, #16]
 800ce5a:	3b01      	subs	r3, #1
 800ce5c:	041b      	lsls	r3, r3, #16
 800ce5e:	431a      	orrs	r2, r3
 800ce60:	68bb      	ldr	r3, [r7, #8]
 800ce62:	699b      	ldr	r3, [r3, #24]
 800ce64:	3b01      	subs	r3, #1
 800ce66:	061b      	lsls	r3, r3, #24
 800ce68:	4313      	orrs	r3, r2
 800ce6a:	693a      	ldr	r2, [r7, #16]
 800ce6c:	4313      	orrs	r3, r2
 800ce6e:	613b      	str	r3, [r7, #16]
 800ce70:	68fb      	ldr	r3, [r7, #12]
 800ce72:	697a      	ldr	r2, [r7, #20]
 800ce74:	609a      	str	r2, [r3, #8]
 800ce76:	68fb      	ldr	r3, [r7, #12]
 800ce78:	693a      	ldr	r2, [r7, #16]
 800ce7a:	60da      	str	r2, [r3, #12]
 800ce7c:	2300      	movs	r3, #0
 800ce7e:	4618      	mov	r0, r3
 800ce80:	371c      	adds	r7, #28
 800ce82:	46bd      	mov	sp, r7
 800ce84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce88:	4770      	bx	lr
 800ce8a:	bf00      	nop
 800ce8c:	ff0f0fff 	.word	0xff0f0fff

0800ce90 <FMC_SDRAM_SendCommand>:
 800ce90:	b480      	push	{r7}
 800ce92:	b087      	sub	sp, #28
 800ce94:	af00      	add	r7, sp, #0
 800ce96:	60f8      	str	r0, [r7, #12]
 800ce98:	60b9      	str	r1, [r7, #8]
 800ce9a:	607a      	str	r2, [r7, #4]
 800ce9c:	2300      	movs	r3, #0
 800ce9e:	617b      	str	r3, [r7, #20]
 800cea0:	68bb      	ldr	r3, [r7, #8]
 800cea2:	681a      	ldr	r2, [r3, #0]
 800cea4:	68bb      	ldr	r3, [r7, #8]
 800cea6:	685b      	ldr	r3, [r3, #4]
 800cea8:	431a      	orrs	r2, r3
 800ceaa:	68bb      	ldr	r3, [r7, #8]
 800ceac:	689b      	ldr	r3, [r3, #8]
 800ceae:	3b01      	subs	r3, #1
 800ceb0:	015b      	lsls	r3, r3, #5
 800ceb2:	431a      	orrs	r2, r3
 800ceb4:	68bb      	ldr	r3, [r7, #8]
 800ceb6:	68db      	ldr	r3, [r3, #12]
 800ceb8:	025b      	lsls	r3, r3, #9
 800ceba:	4313      	orrs	r3, r2
 800cebc:	617b      	str	r3, [r7, #20]
 800cebe:	697a      	ldr	r2, [r7, #20]
 800cec0:	68fb      	ldr	r3, [r7, #12]
 800cec2:	611a      	str	r2, [r3, #16]
 800cec4:	2300      	movs	r3, #0
 800cec6:	4618      	mov	r0, r3
 800cec8:	371c      	adds	r7, #28
 800ceca:	46bd      	mov	sp, r7
 800cecc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ced0:	4770      	bx	lr

0800ced2 <FMC_SDRAM_ProgramRefreshRate>:
 800ced2:	b480      	push	{r7}
 800ced4:	b083      	sub	sp, #12
 800ced6:	af00      	add	r7, sp, #0
 800ced8:	6078      	str	r0, [r7, #4]
 800ceda:	6039      	str	r1, [r7, #0]
 800cedc:	687b      	ldr	r3, [r7, #4]
 800cede:	695a      	ldr	r2, [r3, #20]
 800cee0:	683b      	ldr	r3, [r7, #0]
 800cee2:	005b      	lsls	r3, r3, #1
 800cee4:	431a      	orrs	r2, r3
 800cee6:	687b      	ldr	r3, [r7, #4]
 800cee8:	615a      	str	r2, [r3, #20]
 800ceea:	2300      	movs	r3, #0
 800ceec:	4618      	mov	r0, r3
 800ceee:	370c      	adds	r7, #12
 800cef0:	46bd      	mov	sp, r7
 800cef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cef6:	4770      	bx	lr

0800cef8 <makeFreeRtosPriority>:
 800cef8:	b480      	push	{r7}
 800cefa:	b085      	sub	sp, #20
 800cefc:	af00      	add	r7, sp, #0
 800cefe:	4603      	mov	r3, r0
 800cf00:	80fb      	strh	r3, [r7, #6]
 800cf02:	2300      	movs	r3, #0
 800cf04:	60fb      	str	r3, [r7, #12]
 800cf06:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800cf0a:	2b84      	cmp	r3, #132	; 0x84
 800cf0c:	d005      	beq.n	800cf1a <makeFreeRtosPriority+0x22>
 800cf0e:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800cf12:	68fb      	ldr	r3, [r7, #12]
 800cf14:	4413      	add	r3, r2
 800cf16:	3303      	adds	r3, #3
 800cf18:	60fb      	str	r3, [r7, #12]
 800cf1a:	68fb      	ldr	r3, [r7, #12]
 800cf1c:	4618      	mov	r0, r3
 800cf1e:	3714      	adds	r7, #20
 800cf20:	46bd      	mov	sp, r7
 800cf22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf26:	4770      	bx	lr

0800cf28 <osKernelStart>:
 800cf28:	b580      	push	{r7, lr}
 800cf2a:	af00      	add	r7, sp, #0
 800cf2c:	f001 f830 	bl	800df90 <vTaskStartScheduler>
 800cf30:	2300      	movs	r3, #0
 800cf32:	4618      	mov	r0, r3
 800cf34:	bd80      	pop	{r7, pc}

0800cf36 <osThreadCreate>:
 800cf36:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf38:	b089      	sub	sp, #36	; 0x24
 800cf3a:	af04      	add	r7, sp, #16
 800cf3c:	6078      	str	r0, [r7, #4]
 800cf3e:	6039      	str	r1, [r7, #0]
 800cf40:	687b      	ldr	r3, [r7, #4]
 800cf42:	695b      	ldr	r3, [r3, #20]
 800cf44:	2b00      	cmp	r3, #0
 800cf46:	d020      	beq.n	800cf8a <osThreadCreate+0x54>
 800cf48:	687b      	ldr	r3, [r7, #4]
 800cf4a:	699b      	ldr	r3, [r3, #24]
 800cf4c:	2b00      	cmp	r3, #0
 800cf4e:	d01c      	beq.n	800cf8a <osThreadCreate+0x54>
 800cf50:	687b      	ldr	r3, [r7, #4]
 800cf52:	685c      	ldr	r4, [r3, #4]
 800cf54:	687b      	ldr	r3, [r7, #4]
 800cf56:	681d      	ldr	r5, [r3, #0]
 800cf58:	687b      	ldr	r3, [r7, #4]
 800cf5a:	691e      	ldr	r6, [r3, #16]
 800cf5c:	687b      	ldr	r3, [r7, #4]
 800cf5e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800cf62:	4618      	mov	r0, r3
 800cf64:	f7ff ffc8 	bl	800cef8 <makeFreeRtosPriority>
 800cf68:	4601      	mov	r1, r0
 800cf6a:	687b      	ldr	r3, [r7, #4]
 800cf6c:	695b      	ldr	r3, [r3, #20]
 800cf6e:	687a      	ldr	r2, [r7, #4]
 800cf70:	6992      	ldr	r2, [r2, #24]
 800cf72:	9202      	str	r2, [sp, #8]
 800cf74:	9301      	str	r3, [sp, #4]
 800cf76:	9100      	str	r1, [sp, #0]
 800cf78:	683b      	ldr	r3, [r7, #0]
 800cf7a:	4632      	mov	r2, r6
 800cf7c:	4629      	mov	r1, r5
 800cf7e:	4620      	mov	r0, r4
 800cf80:	f000 fdae 	bl	800dae0 <xTaskCreateStatic>
 800cf84:	4603      	mov	r3, r0
 800cf86:	60fb      	str	r3, [r7, #12]
 800cf88:	e01c      	b.n	800cfc4 <osThreadCreate+0x8e>
 800cf8a:	687b      	ldr	r3, [r7, #4]
 800cf8c:	685c      	ldr	r4, [r3, #4]
 800cf8e:	687b      	ldr	r3, [r7, #4]
 800cf90:	681d      	ldr	r5, [r3, #0]
 800cf92:	687b      	ldr	r3, [r7, #4]
 800cf94:	691b      	ldr	r3, [r3, #16]
 800cf96:	b29e      	uxth	r6, r3
 800cf98:	687b      	ldr	r3, [r7, #4]
 800cf9a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800cf9e:	4618      	mov	r0, r3
 800cfa0:	f7ff ffaa 	bl	800cef8 <makeFreeRtosPriority>
 800cfa4:	4602      	mov	r2, r0
 800cfa6:	f107 030c 	add.w	r3, r7, #12
 800cfaa:	9301      	str	r3, [sp, #4]
 800cfac:	9200      	str	r2, [sp, #0]
 800cfae:	683b      	ldr	r3, [r7, #0]
 800cfb0:	4632      	mov	r2, r6
 800cfb2:	4629      	mov	r1, r5
 800cfb4:	4620      	mov	r0, r4
 800cfb6:	f000 fdf3 	bl	800dba0 <xTaskCreate>
 800cfba:	4603      	mov	r3, r0
 800cfbc:	2b01      	cmp	r3, #1
 800cfbe:	d001      	beq.n	800cfc4 <osThreadCreate+0x8e>
 800cfc0:	2300      	movs	r3, #0
 800cfc2:	e000      	b.n	800cfc6 <osThreadCreate+0x90>
 800cfc4:	68fb      	ldr	r3, [r7, #12]
 800cfc6:	4618      	mov	r0, r3
 800cfc8:	3714      	adds	r7, #20
 800cfca:	46bd      	mov	sp, r7
 800cfcc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cfce <osDelay>:
 800cfce:	b580      	push	{r7, lr}
 800cfd0:	b084      	sub	sp, #16
 800cfd2:	af00      	add	r7, sp, #0
 800cfd4:	6078      	str	r0, [r7, #4]
 800cfd6:	687b      	ldr	r3, [r7, #4]
 800cfd8:	60fb      	str	r3, [r7, #12]
 800cfda:	68fb      	ldr	r3, [r7, #12]
 800cfdc:	2b00      	cmp	r3, #0
 800cfde:	d001      	beq.n	800cfe4 <osDelay+0x16>
 800cfe0:	68fb      	ldr	r3, [r7, #12]
 800cfe2:	e000      	b.n	800cfe6 <osDelay+0x18>
 800cfe4:	2301      	movs	r3, #1
 800cfe6:	4618      	mov	r0, r3
 800cfe8:	f000 ff9c 	bl	800df24 <vTaskDelay>
 800cfec:	2300      	movs	r3, #0
 800cfee:	4618      	mov	r0, r3
 800cff0:	3710      	adds	r7, #16
 800cff2:	46bd      	mov	sp, r7
 800cff4:	bd80      	pop	{r7, pc}

0800cff6 <osMutexCreate>:
 800cff6:	b580      	push	{r7, lr}
 800cff8:	b082      	sub	sp, #8
 800cffa:	af00      	add	r7, sp, #0
 800cffc:	6078      	str	r0, [r7, #4]
 800cffe:	687b      	ldr	r3, [r7, #4]
 800d000:	685b      	ldr	r3, [r3, #4]
 800d002:	2b00      	cmp	r3, #0
 800d004:	d007      	beq.n	800d016 <osMutexCreate+0x20>
 800d006:	687b      	ldr	r3, [r7, #4]
 800d008:	685b      	ldr	r3, [r3, #4]
 800d00a:	4619      	mov	r1, r3
 800d00c:	2001      	movs	r0, #1
 800d00e:	f000 fa38 	bl	800d482 <xQueueCreateMutexStatic>
 800d012:	4603      	mov	r3, r0
 800d014:	e003      	b.n	800d01e <osMutexCreate+0x28>
 800d016:	2001      	movs	r0, #1
 800d018:	f000 fa1b 	bl	800d452 <xQueueCreateMutex>
 800d01c:	4603      	mov	r3, r0
 800d01e:	4618      	mov	r0, r3
 800d020:	3708      	adds	r7, #8
 800d022:	46bd      	mov	sp, r7
 800d024:	bd80      	pop	{r7, pc}

0800d026 <vListInitialise>:
 800d026:	b480      	push	{r7}
 800d028:	b083      	sub	sp, #12
 800d02a:	af00      	add	r7, sp, #0
 800d02c:	6078      	str	r0, [r7, #4]
 800d02e:	687b      	ldr	r3, [r7, #4]
 800d030:	f103 0208 	add.w	r2, r3, #8
 800d034:	687b      	ldr	r3, [r7, #4]
 800d036:	605a      	str	r2, [r3, #4]
 800d038:	687b      	ldr	r3, [r7, #4]
 800d03a:	f04f 32ff 	mov.w	r2, #4294967295
 800d03e:	609a      	str	r2, [r3, #8]
 800d040:	687b      	ldr	r3, [r7, #4]
 800d042:	f103 0208 	add.w	r2, r3, #8
 800d046:	687b      	ldr	r3, [r7, #4]
 800d048:	60da      	str	r2, [r3, #12]
 800d04a:	687b      	ldr	r3, [r7, #4]
 800d04c:	f103 0208 	add.w	r2, r3, #8
 800d050:	687b      	ldr	r3, [r7, #4]
 800d052:	611a      	str	r2, [r3, #16]
 800d054:	687b      	ldr	r3, [r7, #4]
 800d056:	2200      	movs	r2, #0
 800d058:	601a      	str	r2, [r3, #0]
 800d05a:	bf00      	nop
 800d05c:	370c      	adds	r7, #12
 800d05e:	46bd      	mov	sp, r7
 800d060:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d064:	4770      	bx	lr

0800d066 <vListInitialiseItem>:
 800d066:	b480      	push	{r7}
 800d068:	b083      	sub	sp, #12
 800d06a:	af00      	add	r7, sp, #0
 800d06c:	6078      	str	r0, [r7, #4]
 800d06e:	687b      	ldr	r3, [r7, #4]
 800d070:	2200      	movs	r2, #0
 800d072:	611a      	str	r2, [r3, #16]
 800d074:	bf00      	nop
 800d076:	370c      	adds	r7, #12
 800d078:	46bd      	mov	sp, r7
 800d07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d07e:	4770      	bx	lr

0800d080 <vListInsertEnd>:
 800d080:	b480      	push	{r7}
 800d082:	b085      	sub	sp, #20
 800d084:	af00      	add	r7, sp, #0
 800d086:	6078      	str	r0, [r7, #4]
 800d088:	6039      	str	r1, [r7, #0]
 800d08a:	687b      	ldr	r3, [r7, #4]
 800d08c:	685b      	ldr	r3, [r3, #4]
 800d08e:	60fb      	str	r3, [r7, #12]
 800d090:	683b      	ldr	r3, [r7, #0]
 800d092:	68fa      	ldr	r2, [r7, #12]
 800d094:	605a      	str	r2, [r3, #4]
 800d096:	68fb      	ldr	r3, [r7, #12]
 800d098:	689a      	ldr	r2, [r3, #8]
 800d09a:	683b      	ldr	r3, [r7, #0]
 800d09c:	609a      	str	r2, [r3, #8]
 800d09e:	68fb      	ldr	r3, [r7, #12]
 800d0a0:	689b      	ldr	r3, [r3, #8]
 800d0a2:	683a      	ldr	r2, [r7, #0]
 800d0a4:	605a      	str	r2, [r3, #4]
 800d0a6:	68fb      	ldr	r3, [r7, #12]
 800d0a8:	683a      	ldr	r2, [r7, #0]
 800d0aa:	609a      	str	r2, [r3, #8]
 800d0ac:	683b      	ldr	r3, [r7, #0]
 800d0ae:	687a      	ldr	r2, [r7, #4]
 800d0b0:	611a      	str	r2, [r3, #16]
 800d0b2:	687b      	ldr	r3, [r7, #4]
 800d0b4:	681b      	ldr	r3, [r3, #0]
 800d0b6:	1c5a      	adds	r2, r3, #1
 800d0b8:	687b      	ldr	r3, [r7, #4]
 800d0ba:	601a      	str	r2, [r3, #0]
 800d0bc:	bf00      	nop
 800d0be:	3714      	adds	r7, #20
 800d0c0:	46bd      	mov	sp, r7
 800d0c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0c6:	4770      	bx	lr

0800d0c8 <vListInsert>:
 800d0c8:	b480      	push	{r7}
 800d0ca:	b085      	sub	sp, #20
 800d0cc:	af00      	add	r7, sp, #0
 800d0ce:	6078      	str	r0, [r7, #4]
 800d0d0:	6039      	str	r1, [r7, #0]
 800d0d2:	683b      	ldr	r3, [r7, #0]
 800d0d4:	681b      	ldr	r3, [r3, #0]
 800d0d6:	60bb      	str	r3, [r7, #8]
 800d0d8:	68bb      	ldr	r3, [r7, #8]
 800d0da:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d0de:	d103      	bne.n	800d0e8 <vListInsert+0x20>
 800d0e0:	687b      	ldr	r3, [r7, #4]
 800d0e2:	691b      	ldr	r3, [r3, #16]
 800d0e4:	60fb      	str	r3, [r7, #12]
 800d0e6:	e00c      	b.n	800d102 <vListInsert+0x3a>
 800d0e8:	687b      	ldr	r3, [r7, #4]
 800d0ea:	3308      	adds	r3, #8
 800d0ec:	60fb      	str	r3, [r7, #12]
 800d0ee:	e002      	b.n	800d0f6 <vListInsert+0x2e>
 800d0f0:	68fb      	ldr	r3, [r7, #12]
 800d0f2:	685b      	ldr	r3, [r3, #4]
 800d0f4:	60fb      	str	r3, [r7, #12]
 800d0f6:	68fb      	ldr	r3, [r7, #12]
 800d0f8:	685b      	ldr	r3, [r3, #4]
 800d0fa:	681b      	ldr	r3, [r3, #0]
 800d0fc:	68ba      	ldr	r2, [r7, #8]
 800d0fe:	429a      	cmp	r2, r3
 800d100:	d2f6      	bcs.n	800d0f0 <vListInsert+0x28>
 800d102:	68fb      	ldr	r3, [r7, #12]
 800d104:	685a      	ldr	r2, [r3, #4]
 800d106:	683b      	ldr	r3, [r7, #0]
 800d108:	605a      	str	r2, [r3, #4]
 800d10a:	683b      	ldr	r3, [r7, #0]
 800d10c:	685b      	ldr	r3, [r3, #4]
 800d10e:	683a      	ldr	r2, [r7, #0]
 800d110:	609a      	str	r2, [r3, #8]
 800d112:	683b      	ldr	r3, [r7, #0]
 800d114:	68fa      	ldr	r2, [r7, #12]
 800d116:	609a      	str	r2, [r3, #8]
 800d118:	68fb      	ldr	r3, [r7, #12]
 800d11a:	683a      	ldr	r2, [r7, #0]
 800d11c:	605a      	str	r2, [r3, #4]
 800d11e:	683b      	ldr	r3, [r7, #0]
 800d120:	687a      	ldr	r2, [r7, #4]
 800d122:	611a      	str	r2, [r3, #16]
 800d124:	687b      	ldr	r3, [r7, #4]
 800d126:	681b      	ldr	r3, [r3, #0]
 800d128:	1c5a      	adds	r2, r3, #1
 800d12a:	687b      	ldr	r3, [r7, #4]
 800d12c:	601a      	str	r2, [r3, #0]
 800d12e:	bf00      	nop
 800d130:	3714      	adds	r7, #20
 800d132:	46bd      	mov	sp, r7
 800d134:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d138:	4770      	bx	lr

0800d13a <uxListRemove>:
 800d13a:	b480      	push	{r7}
 800d13c:	b085      	sub	sp, #20
 800d13e:	af00      	add	r7, sp, #0
 800d140:	6078      	str	r0, [r7, #4]
 800d142:	687b      	ldr	r3, [r7, #4]
 800d144:	691b      	ldr	r3, [r3, #16]
 800d146:	60fb      	str	r3, [r7, #12]
 800d148:	687b      	ldr	r3, [r7, #4]
 800d14a:	685b      	ldr	r3, [r3, #4]
 800d14c:	687a      	ldr	r2, [r7, #4]
 800d14e:	6892      	ldr	r2, [r2, #8]
 800d150:	609a      	str	r2, [r3, #8]
 800d152:	687b      	ldr	r3, [r7, #4]
 800d154:	689b      	ldr	r3, [r3, #8]
 800d156:	687a      	ldr	r2, [r7, #4]
 800d158:	6852      	ldr	r2, [r2, #4]
 800d15a:	605a      	str	r2, [r3, #4]
 800d15c:	68fb      	ldr	r3, [r7, #12]
 800d15e:	685b      	ldr	r3, [r3, #4]
 800d160:	687a      	ldr	r2, [r7, #4]
 800d162:	429a      	cmp	r2, r3
 800d164:	d103      	bne.n	800d16e <uxListRemove+0x34>
 800d166:	687b      	ldr	r3, [r7, #4]
 800d168:	689a      	ldr	r2, [r3, #8]
 800d16a:	68fb      	ldr	r3, [r7, #12]
 800d16c:	605a      	str	r2, [r3, #4]
 800d16e:	687b      	ldr	r3, [r7, #4]
 800d170:	2200      	movs	r2, #0
 800d172:	611a      	str	r2, [r3, #16]
 800d174:	68fb      	ldr	r3, [r7, #12]
 800d176:	681b      	ldr	r3, [r3, #0]
 800d178:	1e5a      	subs	r2, r3, #1
 800d17a:	68fb      	ldr	r3, [r7, #12]
 800d17c:	601a      	str	r2, [r3, #0]
 800d17e:	68fb      	ldr	r3, [r7, #12]
 800d180:	681b      	ldr	r3, [r3, #0]
 800d182:	4618      	mov	r0, r3
 800d184:	3714      	adds	r7, #20
 800d186:	46bd      	mov	sp, r7
 800d188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d18c:	4770      	bx	lr
	...

0800d190 <xQueueGenericReset>:
 800d190:	b580      	push	{r7, lr}
 800d192:	b084      	sub	sp, #16
 800d194:	af00      	add	r7, sp, #0
 800d196:	6078      	str	r0, [r7, #4]
 800d198:	6039      	str	r1, [r7, #0]
 800d19a:	687b      	ldr	r3, [r7, #4]
 800d19c:	60fb      	str	r3, [r7, #12]
 800d19e:	68fb      	ldr	r3, [r7, #12]
 800d1a0:	2b00      	cmp	r3, #0
 800d1a2:	d10b      	bne.n	800d1bc <xQueueGenericReset+0x2c>
 800d1a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1a8:	b672      	cpsid	i
 800d1aa:	f383 8811 	msr	BASEPRI, r3
 800d1ae:	f3bf 8f6f 	isb	sy
 800d1b2:	f3bf 8f4f 	dsb	sy
 800d1b6:	b662      	cpsie	i
 800d1b8:	60bb      	str	r3, [r7, #8]
 800d1ba:	e7fe      	b.n	800d1ba <xQueueGenericReset+0x2a>
 800d1bc:	f001 fe6c 	bl	800ee98 <vPortEnterCritical>
 800d1c0:	68fb      	ldr	r3, [r7, #12]
 800d1c2:	681a      	ldr	r2, [r3, #0]
 800d1c4:	68fb      	ldr	r3, [r7, #12]
 800d1c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d1c8:	68f9      	ldr	r1, [r7, #12]
 800d1ca:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800d1cc:	fb01 f303 	mul.w	r3, r1, r3
 800d1d0:	441a      	add	r2, r3
 800d1d2:	68fb      	ldr	r3, [r7, #12]
 800d1d4:	609a      	str	r2, [r3, #8]
 800d1d6:	68fb      	ldr	r3, [r7, #12]
 800d1d8:	2200      	movs	r2, #0
 800d1da:	639a      	str	r2, [r3, #56]	; 0x38
 800d1dc:	68fb      	ldr	r3, [r7, #12]
 800d1de:	681a      	ldr	r2, [r3, #0]
 800d1e0:	68fb      	ldr	r3, [r7, #12]
 800d1e2:	605a      	str	r2, [r3, #4]
 800d1e4:	68fb      	ldr	r3, [r7, #12]
 800d1e6:	681a      	ldr	r2, [r3, #0]
 800d1e8:	68fb      	ldr	r3, [r7, #12]
 800d1ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d1ec:	3b01      	subs	r3, #1
 800d1ee:	68f9      	ldr	r1, [r7, #12]
 800d1f0:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800d1f2:	fb01 f303 	mul.w	r3, r1, r3
 800d1f6:	441a      	add	r2, r3
 800d1f8:	68fb      	ldr	r3, [r7, #12]
 800d1fa:	60da      	str	r2, [r3, #12]
 800d1fc:	68fb      	ldr	r3, [r7, #12]
 800d1fe:	22ff      	movs	r2, #255	; 0xff
 800d200:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800d204:	68fb      	ldr	r3, [r7, #12]
 800d206:	22ff      	movs	r2, #255	; 0xff
 800d208:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800d20c:	683b      	ldr	r3, [r7, #0]
 800d20e:	2b00      	cmp	r3, #0
 800d210:	d114      	bne.n	800d23c <xQueueGenericReset+0xac>
 800d212:	68fb      	ldr	r3, [r7, #12]
 800d214:	691b      	ldr	r3, [r3, #16]
 800d216:	2b00      	cmp	r3, #0
 800d218:	d01a      	beq.n	800d250 <xQueueGenericReset+0xc0>
 800d21a:	68fb      	ldr	r3, [r7, #12]
 800d21c:	3310      	adds	r3, #16
 800d21e:	4618      	mov	r0, r3
 800d220:	f001 f936 	bl	800e490 <xTaskRemoveFromEventList>
 800d224:	4603      	mov	r3, r0
 800d226:	2b00      	cmp	r3, #0
 800d228:	d012      	beq.n	800d250 <xQueueGenericReset+0xc0>
 800d22a:	4b0d      	ldr	r3, [pc, #52]	; (800d260 <xQueueGenericReset+0xd0>)
 800d22c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d230:	601a      	str	r2, [r3, #0]
 800d232:	f3bf 8f4f 	dsb	sy
 800d236:	f3bf 8f6f 	isb	sy
 800d23a:	e009      	b.n	800d250 <xQueueGenericReset+0xc0>
 800d23c:	68fb      	ldr	r3, [r7, #12]
 800d23e:	3310      	adds	r3, #16
 800d240:	4618      	mov	r0, r3
 800d242:	f7ff fef0 	bl	800d026 <vListInitialise>
 800d246:	68fb      	ldr	r3, [r7, #12]
 800d248:	3324      	adds	r3, #36	; 0x24
 800d24a:	4618      	mov	r0, r3
 800d24c:	f7ff feeb 	bl	800d026 <vListInitialise>
 800d250:	f001 fe54 	bl	800eefc <vPortExitCritical>
 800d254:	2301      	movs	r3, #1
 800d256:	4618      	mov	r0, r3
 800d258:	3710      	adds	r7, #16
 800d25a:	46bd      	mov	sp, r7
 800d25c:	bd80      	pop	{r7, pc}
 800d25e:	bf00      	nop
 800d260:	e000ed04 	.word	0xe000ed04

0800d264 <xQueueGenericCreateStatic>:
 800d264:	b580      	push	{r7, lr}
 800d266:	b08e      	sub	sp, #56	; 0x38
 800d268:	af02      	add	r7, sp, #8
 800d26a:	60f8      	str	r0, [r7, #12]
 800d26c:	60b9      	str	r1, [r7, #8]
 800d26e:	607a      	str	r2, [r7, #4]
 800d270:	603b      	str	r3, [r7, #0]
 800d272:	68fb      	ldr	r3, [r7, #12]
 800d274:	2b00      	cmp	r3, #0
 800d276:	d10b      	bne.n	800d290 <xQueueGenericCreateStatic+0x2c>
 800d278:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d27c:	b672      	cpsid	i
 800d27e:	f383 8811 	msr	BASEPRI, r3
 800d282:	f3bf 8f6f 	isb	sy
 800d286:	f3bf 8f4f 	dsb	sy
 800d28a:	b662      	cpsie	i
 800d28c:	62bb      	str	r3, [r7, #40]	; 0x28
 800d28e:	e7fe      	b.n	800d28e <xQueueGenericCreateStatic+0x2a>
 800d290:	683b      	ldr	r3, [r7, #0]
 800d292:	2b00      	cmp	r3, #0
 800d294:	d10b      	bne.n	800d2ae <xQueueGenericCreateStatic+0x4a>
 800d296:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d29a:	b672      	cpsid	i
 800d29c:	f383 8811 	msr	BASEPRI, r3
 800d2a0:	f3bf 8f6f 	isb	sy
 800d2a4:	f3bf 8f4f 	dsb	sy
 800d2a8:	b662      	cpsie	i
 800d2aa:	627b      	str	r3, [r7, #36]	; 0x24
 800d2ac:	e7fe      	b.n	800d2ac <xQueueGenericCreateStatic+0x48>
 800d2ae:	687b      	ldr	r3, [r7, #4]
 800d2b0:	2b00      	cmp	r3, #0
 800d2b2:	d002      	beq.n	800d2ba <xQueueGenericCreateStatic+0x56>
 800d2b4:	68bb      	ldr	r3, [r7, #8]
 800d2b6:	2b00      	cmp	r3, #0
 800d2b8:	d001      	beq.n	800d2be <xQueueGenericCreateStatic+0x5a>
 800d2ba:	2301      	movs	r3, #1
 800d2bc:	e000      	b.n	800d2c0 <xQueueGenericCreateStatic+0x5c>
 800d2be:	2300      	movs	r3, #0
 800d2c0:	2b00      	cmp	r3, #0
 800d2c2:	d10b      	bne.n	800d2dc <xQueueGenericCreateStatic+0x78>
 800d2c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2c8:	b672      	cpsid	i
 800d2ca:	f383 8811 	msr	BASEPRI, r3
 800d2ce:	f3bf 8f6f 	isb	sy
 800d2d2:	f3bf 8f4f 	dsb	sy
 800d2d6:	b662      	cpsie	i
 800d2d8:	623b      	str	r3, [r7, #32]
 800d2da:	e7fe      	b.n	800d2da <xQueueGenericCreateStatic+0x76>
 800d2dc:	687b      	ldr	r3, [r7, #4]
 800d2de:	2b00      	cmp	r3, #0
 800d2e0:	d102      	bne.n	800d2e8 <xQueueGenericCreateStatic+0x84>
 800d2e2:	68bb      	ldr	r3, [r7, #8]
 800d2e4:	2b00      	cmp	r3, #0
 800d2e6:	d101      	bne.n	800d2ec <xQueueGenericCreateStatic+0x88>
 800d2e8:	2301      	movs	r3, #1
 800d2ea:	e000      	b.n	800d2ee <xQueueGenericCreateStatic+0x8a>
 800d2ec:	2300      	movs	r3, #0
 800d2ee:	2b00      	cmp	r3, #0
 800d2f0:	d10b      	bne.n	800d30a <xQueueGenericCreateStatic+0xa6>
 800d2f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2f6:	b672      	cpsid	i
 800d2f8:	f383 8811 	msr	BASEPRI, r3
 800d2fc:	f3bf 8f6f 	isb	sy
 800d300:	f3bf 8f4f 	dsb	sy
 800d304:	b662      	cpsie	i
 800d306:	61fb      	str	r3, [r7, #28]
 800d308:	e7fe      	b.n	800d308 <xQueueGenericCreateStatic+0xa4>
 800d30a:	2348      	movs	r3, #72	; 0x48
 800d30c:	617b      	str	r3, [r7, #20]
 800d30e:	697b      	ldr	r3, [r7, #20]
 800d310:	2b48      	cmp	r3, #72	; 0x48
 800d312:	d00b      	beq.n	800d32c <xQueueGenericCreateStatic+0xc8>
 800d314:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d318:	b672      	cpsid	i
 800d31a:	f383 8811 	msr	BASEPRI, r3
 800d31e:	f3bf 8f6f 	isb	sy
 800d322:	f3bf 8f4f 	dsb	sy
 800d326:	b662      	cpsie	i
 800d328:	61bb      	str	r3, [r7, #24]
 800d32a:	e7fe      	b.n	800d32a <xQueueGenericCreateStatic+0xc6>
 800d32c:	697b      	ldr	r3, [r7, #20]
 800d32e:	683b      	ldr	r3, [r7, #0]
 800d330:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d332:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d334:	2b00      	cmp	r3, #0
 800d336:	d00d      	beq.n	800d354 <xQueueGenericCreateStatic+0xf0>
 800d338:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d33a:	2201      	movs	r2, #1
 800d33c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800d340:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 800d344:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d346:	9300      	str	r3, [sp, #0]
 800d348:	4613      	mov	r3, r2
 800d34a:	687a      	ldr	r2, [r7, #4]
 800d34c:	68b9      	ldr	r1, [r7, #8]
 800d34e:	68f8      	ldr	r0, [r7, #12]
 800d350:	f000 f846 	bl	800d3e0 <prvInitialiseNewQueue>
 800d354:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d356:	4618      	mov	r0, r3
 800d358:	3730      	adds	r7, #48	; 0x30
 800d35a:	46bd      	mov	sp, r7
 800d35c:	bd80      	pop	{r7, pc}

0800d35e <xQueueGenericCreate>:
 800d35e:	b580      	push	{r7, lr}
 800d360:	b08a      	sub	sp, #40	; 0x28
 800d362:	af02      	add	r7, sp, #8
 800d364:	60f8      	str	r0, [r7, #12]
 800d366:	60b9      	str	r1, [r7, #8]
 800d368:	4613      	mov	r3, r2
 800d36a:	71fb      	strb	r3, [r7, #7]
 800d36c:	68fb      	ldr	r3, [r7, #12]
 800d36e:	2b00      	cmp	r3, #0
 800d370:	d10b      	bne.n	800d38a <xQueueGenericCreate+0x2c>
 800d372:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d376:	b672      	cpsid	i
 800d378:	f383 8811 	msr	BASEPRI, r3
 800d37c:	f3bf 8f6f 	isb	sy
 800d380:	f3bf 8f4f 	dsb	sy
 800d384:	b662      	cpsie	i
 800d386:	613b      	str	r3, [r7, #16]
 800d388:	e7fe      	b.n	800d388 <xQueueGenericCreate+0x2a>
 800d38a:	68bb      	ldr	r3, [r7, #8]
 800d38c:	2b00      	cmp	r3, #0
 800d38e:	d102      	bne.n	800d396 <xQueueGenericCreate+0x38>
 800d390:	2300      	movs	r3, #0
 800d392:	61fb      	str	r3, [r7, #28]
 800d394:	e004      	b.n	800d3a0 <xQueueGenericCreate+0x42>
 800d396:	68fb      	ldr	r3, [r7, #12]
 800d398:	68ba      	ldr	r2, [r7, #8]
 800d39a:	fb02 f303 	mul.w	r3, r2, r3
 800d39e:	61fb      	str	r3, [r7, #28]
 800d3a0:	69fb      	ldr	r3, [r7, #28]
 800d3a2:	3348      	adds	r3, #72	; 0x48
 800d3a4:	4618      	mov	r0, r3
 800d3a6:	f001 fe57 	bl	800f058 <pvPortMalloc>
 800d3aa:	61b8      	str	r0, [r7, #24]
 800d3ac:	69bb      	ldr	r3, [r7, #24]
 800d3ae:	2b00      	cmp	r3, #0
 800d3b0:	d011      	beq.n	800d3d6 <xQueueGenericCreate+0x78>
 800d3b2:	69bb      	ldr	r3, [r7, #24]
 800d3b4:	617b      	str	r3, [r7, #20]
 800d3b6:	697b      	ldr	r3, [r7, #20]
 800d3b8:	3348      	adds	r3, #72	; 0x48
 800d3ba:	617b      	str	r3, [r7, #20]
 800d3bc:	69bb      	ldr	r3, [r7, #24]
 800d3be:	2200      	movs	r2, #0
 800d3c0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800d3c4:	79fa      	ldrb	r2, [r7, #7]
 800d3c6:	69bb      	ldr	r3, [r7, #24]
 800d3c8:	9300      	str	r3, [sp, #0]
 800d3ca:	4613      	mov	r3, r2
 800d3cc:	697a      	ldr	r2, [r7, #20]
 800d3ce:	68b9      	ldr	r1, [r7, #8]
 800d3d0:	68f8      	ldr	r0, [r7, #12]
 800d3d2:	f000 f805 	bl	800d3e0 <prvInitialiseNewQueue>
 800d3d6:	69bb      	ldr	r3, [r7, #24]
 800d3d8:	4618      	mov	r0, r3
 800d3da:	3720      	adds	r7, #32
 800d3dc:	46bd      	mov	sp, r7
 800d3de:	bd80      	pop	{r7, pc}

0800d3e0 <prvInitialiseNewQueue>:
 800d3e0:	b580      	push	{r7, lr}
 800d3e2:	b084      	sub	sp, #16
 800d3e4:	af00      	add	r7, sp, #0
 800d3e6:	60f8      	str	r0, [r7, #12]
 800d3e8:	60b9      	str	r1, [r7, #8]
 800d3ea:	607a      	str	r2, [r7, #4]
 800d3ec:	70fb      	strb	r3, [r7, #3]
 800d3ee:	68bb      	ldr	r3, [r7, #8]
 800d3f0:	2b00      	cmp	r3, #0
 800d3f2:	d103      	bne.n	800d3fc <prvInitialiseNewQueue+0x1c>
 800d3f4:	69bb      	ldr	r3, [r7, #24]
 800d3f6:	69ba      	ldr	r2, [r7, #24]
 800d3f8:	601a      	str	r2, [r3, #0]
 800d3fa:	e002      	b.n	800d402 <prvInitialiseNewQueue+0x22>
 800d3fc:	69bb      	ldr	r3, [r7, #24]
 800d3fe:	687a      	ldr	r2, [r7, #4]
 800d400:	601a      	str	r2, [r3, #0]
 800d402:	69bb      	ldr	r3, [r7, #24]
 800d404:	68fa      	ldr	r2, [r7, #12]
 800d406:	63da      	str	r2, [r3, #60]	; 0x3c
 800d408:	69bb      	ldr	r3, [r7, #24]
 800d40a:	68ba      	ldr	r2, [r7, #8]
 800d40c:	641a      	str	r2, [r3, #64]	; 0x40
 800d40e:	2101      	movs	r1, #1
 800d410:	69b8      	ldr	r0, [r7, #24]
 800d412:	f7ff febd 	bl	800d190 <xQueueGenericReset>
 800d416:	bf00      	nop
 800d418:	3710      	adds	r7, #16
 800d41a:	46bd      	mov	sp, r7
 800d41c:	bd80      	pop	{r7, pc}

0800d41e <prvInitialiseMutex>:
 800d41e:	b580      	push	{r7, lr}
 800d420:	b082      	sub	sp, #8
 800d422:	af00      	add	r7, sp, #0
 800d424:	6078      	str	r0, [r7, #4]
 800d426:	687b      	ldr	r3, [r7, #4]
 800d428:	2b00      	cmp	r3, #0
 800d42a:	d00e      	beq.n	800d44a <prvInitialiseMutex+0x2c>
 800d42c:	687b      	ldr	r3, [r7, #4]
 800d42e:	2200      	movs	r2, #0
 800d430:	609a      	str	r2, [r3, #8]
 800d432:	687b      	ldr	r3, [r7, #4]
 800d434:	2200      	movs	r2, #0
 800d436:	601a      	str	r2, [r3, #0]
 800d438:	687b      	ldr	r3, [r7, #4]
 800d43a:	2200      	movs	r2, #0
 800d43c:	60da      	str	r2, [r3, #12]
 800d43e:	2300      	movs	r3, #0
 800d440:	2200      	movs	r2, #0
 800d442:	2100      	movs	r1, #0
 800d444:	6878      	ldr	r0, [r7, #4]
 800d446:	f000 f837 	bl	800d4b8 <xQueueGenericSend>
 800d44a:	bf00      	nop
 800d44c:	3708      	adds	r7, #8
 800d44e:	46bd      	mov	sp, r7
 800d450:	bd80      	pop	{r7, pc}

0800d452 <xQueueCreateMutex>:
 800d452:	b580      	push	{r7, lr}
 800d454:	b086      	sub	sp, #24
 800d456:	af00      	add	r7, sp, #0
 800d458:	4603      	mov	r3, r0
 800d45a:	71fb      	strb	r3, [r7, #7]
 800d45c:	2301      	movs	r3, #1
 800d45e:	617b      	str	r3, [r7, #20]
 800d460:	2300      	movs	r3, #0
 800d462:	613b      	str	r3, [r7, #16]
 800d464:	79fb      	ldrb	r3, [r7, #7]
 800d466:	461a      	mov	r2, r3
 800d468:	6939      	ldr	r1, [r7, #16]
 800d46a:	6978      	ldr	r0, [r7, #20]
 800d46c:	f7ff ff77 	bl	800d35e <xQueueGenericCreate>
 800d470:	60f8      	str	r0, [r7, #12]
 800d472:	68f8      	ldr	r0, [r7, #12]
 800d474:	f7ff ffd3 	bl	800d41e <prvInitialiseMutex>
 800d478:	68fb      	ldr	r3, [r7, #12]
 800d47a:	4618      	mov	r0, r3
 800d47c:	3718      	adds	r7, #24
 800d47e:	46bd      	mov	sp, r7
 800d480:	bd80      	pop	{r7, pc}

0800d482 <xQueueCreateMutexStatic>:
 800d482:	b580      	push	{r7, lr}
 800d484:	b088      	sub	sp, #32
 800d486:	af02      	add	r7, sp, #8
 800d488:	4603      	mov	r3, r0
 800d48a:	6039      	str	r1, [r7, #0]
 800d48c:	71fb      	strb	r3, [r7, #7]
 800d48e:	2301      	movs	r3, #1
 800d490:	617b      	str	r3, [r7, #20]
 800d492:	2300      	movs	r3, #0
 800d494:	613b      	str	r3, [r7, #16]
 800d496:	79fb      	ldrb	r3, [r7, #7]
 800d498:	9300      	str	r3, [sp, #0]
 800d49a:	683b      	ldr	r3, [r7, #0]
 800d49c:	2200      	movs	r2, #0
 800d49e:	6939      	ldr	r1, [r7, #16]
 800d4a0:	6978      	ldr	r0, [r7, #20]
 800d4a2:	f7ff fedf 	bl	800d264 <xQueueGenericCreateStatic>
 800d4a6:	60f8      	str	r0, [r7, #12]
 800d4a8:	68f8      	ldr	r0, [r7, #12]
 800d4aa:	f7ff ffb8 	bl	800d41e <prvInitialiseMutex>
 800d4ae:	68fb      	ldr	r3, [r7, #12]
 800d4b0:	4618      	mov	r0, r3
 800d4b2:	3718      	adds	r7, #24
 800d4b4:	46bd      	mov	sp, r7
 800d4b6:	bd80      	pop	{r7, pc}

0800d4b8 <xQueueGenericSend>:
 800d4b8:	b580      	push	{r7, lr}
 800d4ba:	b08e      	sub	sp, #56	; 0x38
 800d4bc:	af00      	add	r7, sp, #0
 800d4be:	60f8      	str	r0, [r7, #12]
 800d4c0:	60b9      	str	r1, [r7, #8]
 800d4c2:	607a      	str	r2, [r7, #4]
 800d4c4:	603b      	str	r3, [r7, #0]
 800d4c6:	2300      	movs	r3, #0
 800d4c8:	637b      	str	r3, [r7, #52]	; 0x34
 800d4ca:	68fb      	ldr	r3, [r7, #12]
 800d4cc:	633b      	str	r3, [r7, #48]	; 0x30
 800d4ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d4d0:	2b00      	cmp	r3, #0
 800d4d2:	d10b      	bne.n	800d4ec <xQueueGenericSend+0x34>
 800d4d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4d8:	b672      	cpsid	i
 800d4da:	f383 8811 	msr	BASEPRI, r3
 800d4de:	f3bf 8f6f 	isb	sy
 800d4e2:	f3bf 8f4f 	dsb	sy
 800d4e6:	b662      	cpsie	i
 800d4e8:	62bb      	str	r3, [r7, #40]	; 0x28
 800d4ea:	e7fe      	b.n	800d4ea <xQueueGenericSend+0x32>
 800d4ec:	68bb      	ldr	r3, [r7, #8]
 800d4ee:	2b00      	cmp	r3, #0
 800d4f0:	d103      	bne.n	800d4fa <xQueueGenericSend+0x42>
 800d4f2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d4f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d4f6:	2b00      	cmp	r3, #0
 800d4f8:	d101      	bne.n	800d4fe <xQueueGenericSend+0x46>
 800d4fa:	2301      	movs	r3, #1
 800d4fc:	e000      	b.n	800d500 <xQueueGenericSend+0x48>
 800d4fe:	2300      	movs	r3, #0
 800d500:	2b00      	cmp	r3, #0
 800d502:	d10b      	bne.n	800d51c <xQueueGenericSend+0x64>
 800d504:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d508:	b672      	cpsid	i
 800d50a:	f383 8811 	msr	BASEPRI, r3
 800d50e:	f3bf 8f6f 	isb	sy
 800d512:	f3bf 8f4f 	dsb	sy
 800d516:	b662      	cpsie	i
 800d518:	627b      	str	r3, [r7, #36]	; 0x24
 800d51a:	e7fe      	b.n	800d51a <xQueueGenericSend+0x62>
 800d51c:	683b      	ldr	r3, [r7, #0]
 800d51e:	2b02      	cmp	r3, #2
 800d520:	d103      	bne.n	800d52a <xQueueGenericSend+0x72>
 800d522:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d524:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d526:	2b01      	cmp	r3, #1
 800d528:	d101      	bne.n	800d52e <xQueueGenericSend+0x76>
 800d52a:	2301      	movs	r3, #1
 800d52c:	e000      	b.n	800d530 <xQueueGenericSend+0x78>
 800d52e:	2300      	movs	r3, #0
 800d530:	2b00      	cmp	r3, #0
 800d532:	d10b      	bne.n	800d54c <xQueueGenericSend+0x94>
 800d534:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d538:	b672      	cpsid	i
 800d53a:	f383 8811 	msr	BASEPRI, r3
 800d53e:	f3bf 8f6f 	isb	sy
 800d542:	f3bf 8f4f 	dsb	sy
 800d546:	b662      	cpsie	i
 800d548:	623b      	str	r3, [r7, #32]
 800d54a:	e7fe      	b.n	800d54a <xQueueGenericSend+0x92>
 800d54c:	f001 f960 	bl	800e810 <xTaskGetSchedulerState>
 800d550:	4603      	mov	r3, r0
 800d552:	2b00      	cmp	r3, #0
 800d554:	d102      	bne.n	800d55c <xQueueGenericSend+0xa4>
 800d556:	687b      	ldr	r3, [r7, #4]
 800d558:	2b00      	cmp	r3, #0
 800d55a:	d101      	bne.n	800d560 <xQueueGenericSend+0xa8>
 800d55c:	2301      	movs	r3, #1
 800d55e:	e000      	b.n	800d562 <xQueueGenericSend+0xaa>
 800d560:	2300      	movs	r3, #0
 800d562:	2b00      	cmp	r3, #0
 800d564:	d10b      	bne.n	800d57e <xQueueGenericSend+0xc6>
 800d566:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d56a:	b672      	cpsid	i
 800d56c:	f383 8811 	msr	BASEPRI, r3
 800d570:	f3bf 8f6f 	isb	sy
 800d574:	f3bf 8f4f 	dsb	sy
 800d578:	b662      	cpsie	i
 800d57a:	61fb      	str	r3, [r7, #28]
 800d57c:	e7fe      	b.n	800d57c <xQueueGenericSend+0xc4>
 800d57e:	f001 fc8b 	bl	800ee98 <vPortEnterCritical>
 800d582:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d584:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800d586:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d588:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d58a:	429a      	cmp	r2, r3
 800d58c:	d302      	bcc.n	800d594 <xQueueGenericSend+0xdc>
 800d58e:	683b      	ldr	r3, [r7, #0]
 800d590:	2b02      	cmp	r3, #2
 800d592:	d129      	bne.n	800d5e8 <xQueueGenericSend+0x130>
 800d594:	683a      	ldr	r2, [r7, #0]
 800d596:	68b9      	ldr	r1, [r7, #8]
 800d598:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d59a:	f000 f9b7 	bl	800d90c <prvCopyDataToQueue>
 800d59e:	62f8      	str	r0, [r7, #44]	; 0x2c
 800d5a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d5a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d5a4:	2b00      	cmp	r3, #0
 800d5a6:	d010      	beq.n	800d5ca <xQueueGenericSend+0x112>
 800d5a8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d5aa:	3324      	adds	r3, #36	; 0x24
 800d5ac:	4618      	mov	r0, r3
 800d5ae:	f000 ff6f 	bl	800e490 <xTaskRemoveFromEventList>
 800d5b2:	4603      	mov	r3, r0
 800d5b4:	2b00      	cmp	r3, #0
 800d5b6:	d013      	beq.n	800d5e0 <xQueueGenericSend+0x128>
 800d5b8:	4b3f      	ldr	r3, [pc, #252]	; (800d6b8 <xQueueGenericSend+0x200>)
 800d5ba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d5be:	601a      	str	r2, [r3, #0]
 800d5c0:	f3bf 8f4f 	dsb	sy
 800d5c4:	f3bf 8f6f 	isb	sy
 800d5c8:	e00a      	b.n	800d5e0 <xQueueGenericSend+0x128>
 800d5ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d5cc:	2b00      	cmp	r3, #0
 800d5ce:	d007      	beq.n	800d5e0 <xQueueGenericSend+0x128>
 800d5d0:	4b39      	ldr	r3, [pc, #228]	; (800d6b8 <xQueueGenericSend+0x200>)
 800d5d2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d5d6:	601a      	str	r2, [r3, #0]
 800d5d8:	f3bf 8f4f 	dsb	sy
 800d5dc:	f3bf 8f6f 	isb	sy
 800d5e0:	f001 fc8c 	bl	800eefc <vPortExitCritical>
 800d5e4:	2301      	movs	r3, #1
 800d5e6:	e063      	b.n	800d6b0 <xQueueGenericSend+0x1f8>
 800d5e8:	687b      	ldr	r3, [r7, #4]
 800d5ea:	2b00      	cmp	r3, #0
 800d5ec:	d103      	bne.n	800d5f6 <xQueueGenericSend+0x13e>
 800d5ee:	f001 fc85 	bl	800eefc <vPortExitCritical>
 800d5f2:	2300      	movs	r3, #0
 800d5f4:	e05c      	b.n	800d6b0 <xQueueGenericSend+0x1f8>
 800d5f6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d5f8:	2b00      	cmp	r3, #0
 800d5fa:	d106      	bne.n	800d60a <xQueueGenericSend+0x152>
 800d5fc:	f107 0314 	add.w	r3, r7, #20
 800d600:	4618      	mov	r0, r3
 800d602:	f000 ffa9 	bl	800e558 <vTaskInternalSetTimeOutState>
 800d606:	2301      	movs	r3, #1
 800d608:	637b      	str	r3, [r7, #52]	; 0x34
 800d60a:	f001 fc77 	bl	800eefc <vPortExitCritical>
 800d60e:	f000 fd21 	bl	800e054 <vTaskSuspendAll>
 800d612:	f001 fc41 	bl	800ee98 <vPortEnterCritical>
 800d616:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d618:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800d61c:	b25b      	sxtb	r3, r3
 800d61e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d622:	d103      	bne.n	800d62c <xQueueGenericSend+0x174>
 800d624:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d626:	2200      	movs	r2, #0
 800d628:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800d62c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d62e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800d632:	b25b      	sxtb	r3, r3
 800d634:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d638:	d103      	bne.n	800d642 <xQueueGenericSend+0x18a>
 800d63a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d63c:	2200      	movs	r2, #0
 800d63e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800d642:	f001 fc5b 	bl	800eefc <vPortExitCritical>
 800d646:	1d3a      	adds	r2, r7, #4
 800d648:	f107 0314 	add.w	r3, r7, #20
 800d64c:	4611      	mov	r1, r2
 800d64e:	4618      	mov	r0, r3
 800d650:	f000 ff98 	bl	800e584 <xTaskCheckForTimeOut>
 800d654:	4603      	mov	r3, r0
 800d656:	2b00      	cmp	r3, #0
 800d658:	d124      	bne.n	800d6a4 <xQueueGenericSend+0x1ec>
 800d65a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d65c:	f000 fa28 	bl	800dab0 <prvIsQueueFull>
 800d660:	4603      	mov	r3, r0
 800d662:	2b00      	cmp	r3, #0
 800d664:	d018      	beq.n	800d698 <xQueueGenericSend+0x1e0>
 800d666:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d668:	3310      	adds	r3, #16
 800d66a:	687a      	ldr	r2, [r7, #4]
 800d66c:	4611      	mov	r1, r2
 800d66e:	4618      	mov	r0, r3
 800d670:	f000 fee8 	bl	800e444 <vTaskPlaceOnEventList>
 800d674:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d676:	f000 f9b3 	bl	800d9e0 <prvUnlockQueue>
 800d67a:	f000 fcf9 	bl	800e070 <xTaskResumeAll>
 800d67e:	4603      	mov	r3, r0
 800d680:	2b00      	cmp	r3, #0
 800d682:	f47f af7c 	bne.w	800d57e <xQueueGenericSend+0xc6>
 800d686:	4b0c      	ldr	r3, [pc, #48]	; (800d6b8 <xQueueGenericSend+0x200>)
 800d688:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d68c:	601a      	str	r2, [r3, #0]
 800d68e:	f3bf 8f4f 	dsb	sy
 800d692:	f3bf 8f6f 	isb	sy
 800d696:	e772      	b.n	800d57e <xQueueGenericSend+0xc6>
 800d698:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d69a:	f000 f9a1 	bl	800d9e0 <prvUnlockQueue>
 800d69e:	f000 fce7 	bl	800e070 <xTaskResumeAll>
 800d6a2:	e76c      	b.n	800d57e <xQueueGenericSend+0xc6>
 800d6a4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d6a6:	f000 f99b 	bl	800d9e0 <prvUnlockQueue>
 800d6aa:	f000 fce1 	bl	800e070 <xTaskResumeAll>
 800d6ae:	2300      	movs	r3, #0
 800d6b0:	4618      	mov	r0, r3
 800d6b2:	3738      	adds	r7, #56	; 0x38
 800d6b4:	46bd      	mov	sp, r7
 800d6b6:	bd80      	pop	{r7, pc}
 800d6b8:	e000ed04 	.word	0xe000ed04

0800d6bc <xQueueSemaphoreTake>:
 800d6bc:	b580      	push	{r7, lr}
 800d6be:	b08e      	sub	sp, #56	; 0x38
 800d6c0:	af00      	add	r7, sp, #0
 800d6c2:	6078      	str	r0, [r7, #4]
 800d6c4:	6039      	str	r1, [r7, #0]
 800d6c6:	2300      	movs	r3, #0
 800d6c8:	637b      	str	r3, [r7, #52]	; 0x34
 800d6ca:	687b      	ldr	r3, [r7, #4]
 800d6cc:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d6ce:	2300      	movs	r3, #0
 800d6d0:	633b      	str	r3, [r7, #48]	; 0x30
 800d6d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d6d4:	2b00      	cmp	r3, #0
 800d6d6:	d10b      	bne.n	800d6f0 <xQueueSemaphoreTake+0x34>
 800d6d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6dc:	b672      	cpsid	i
 800d6de:	f383 8811 	msr	BASEPRI, r3
 800d6e2:	f3bf 8f6f 	isb	sy
 800d6e6:	f3bf 8f4f 	dsb	sy
 800d6ea:	b662      	cpsie	i
 800d6ec:	623b      	str	r3, [r7, #32]
 800d6ee:	e7fe      	b.n	800d6ee <xQueueSemaphoreTake+0x32>
 800d6f0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d6f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d6f4:	2b00      	cmp	r3, #0
 800d6f6:	d00b      	beq.n	800d710 <xQueueSemaphoreTake+0x54>
 800d6f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6fc:	b672      	cpsid	i
 800d6fe:	f383 8811 	msr	BASEPRI, r3
 800d702:	f3bf 8f6f 	isb	sy
 800d706:	f3bf 8f4f 	dsb	sy
 800d70a:	b662      	cpsie	i
 800d70c:	61fb      	str	r3, [r7, #28]
 800d70e:	e7fe      	b.n	800d70e <xQueueSemaphoreTake+0x52>
 800d710:	f001 f87e 	bl	800e810 <xTaskGetSchedulerState>
 800d714:	4603      	mov	r3, r0
 800d716:	2b00      	cmp	r3, #0
 800d718:	d102      	bne.n	800d720 <xQueueSemaphoreTake+0x64>
 800d71a:	683b      	ldr	r3, [r7, #0]
 800d71c:	2b00      	cmp	r3, #0
 800d71e:	d101      	bne.n	800d724 <xQueueSemaphoreTake+0x68>
 800d720:	2301      	movs	r3, #1
 800d722:	e000      	b.n	800d726 <xQueueSemaphoreTake+0x6a>
 800d724:	2300      	movs	r3, #0
 800d726:	2b00      	cmp	r3, #0
 800d728:	d10b      	bne.n	800d742 <xQueueSemaphoreTake+0x86>
 800d72a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d72e:	b672      	cpsid	i
 800d730:	f383 8811 	msr	BASEPRI, r3
 800d734:	f3bf 8f6f 	isb	sy
 800d738:	f3bf 8f4f 	dsb	sy
 800d73c:	b662      	cpsie	i
 800d73e:	61bb      	str	r3, [r7, #24]
 800d740:	e7fe      	b.n	800d740 <xQueueSemaphoreTake+0x84>
 800d742:	f001 fba9 	bl	800ee98 <vPortEnterCritical>
 800d746:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d748:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d74a:	62bb      	str	r3, [r7, #40]	; 0x28
 800d74c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d74e:	2b00      	cmp	r3, #0
 800d750:	d024      	beq.n	800d79c <xQueueSemaphoreTake+0xe0>
 800d752:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d754:	1e5a      	subs	r2, r3, #1
 800d756:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d758:	639a      	str	r2, [r3, #56]	; 0x38
 800d75a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d75c:	681b      	ldr	r3, [r3, #0]
 800d75e:	2b00      	cmp	r3, #0
 800d760:	d104      	bne.n	800d76c <xQueueSemaphoreTake+0xb0>
 800d762:	f001 fa17 	bl	800eb94 <pvTaskIncrementMutexHeldCount>
 800d766:	4602      	mov	r2, r0
 800d768:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d76a:	609a      	str	r2, [r3, #8]
 800d76c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d76e:	691b      	ldr	r3, [r3, #16]
 800d770:	2b00      	cmp	r3, #0
 800d772:	d00f      	beq.n	800d794 <xQueueSemaphoreTake+0xd8>
 800d774:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d776:	3310      	adds	r3, #16
 800d778:	4618      	mov	r0, r3
 800d77a:	f000 fe89 	bl	800e490 <xTaskRemoveFromEventList>
 800d77e:	4603      	mov	r3, r0
 800d780:	2b00      	cmp	r3, #0
 800d782:	d007      	beq.n	800d794 <xQueueSemaphoreTake+0xd8>
 800d784:	4b54      	ldr	r3, [pc, #336]	; (800d8d8 <xQueueSemaphoreTake+0x21c>)
 800d786:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d78a:	601a      	str	r2, [r3, #0]
 800d78c:	f3bf 8f4f 	dsb	sy
 800d790:	f3bf 8f6f 	isb	sy
 800d794:	f001 fbb2 	bl	800eefc <vPortExitCritical>
 800d798:	2301      	movs	r3, #1
 800d79a:	e098      	b.n	800d8ce <xQueueSemaphoreTake+0x212>
 800d79c:	683b      	ldr	r3, [r7, #0]
 800d79e:	2b00      	cmp	r3, #0
 800d7a0:	d112      	bne.n	800d7c8 <xQueueSemaphoreTake+0x10c>
 800d7a2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d7a4:	2b00      	cmp	r3, #0
 800d7a6:	d00b      	beq.n	800d7c0 <xQueueSemaphoreTake+0x104>
 800d7a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7ac:	b672      	cpsid	i
 800d7ae:	f383 8811 	msr	BASEPRI, r3
 800d7b2:	f3bf 8f6f 	isb	sy
 800d7b6:	f3bf 8f4f 	dsb	sy
 800d7ba:	b662      	cpsie	i
 800d7bc:	617b      	str	r3, [r7, #20]
 800d7be:	e7fe      	b.n	800d7be <xQueueSemaphoreTake+0x102>
 800d7c0:	f001 fb9c 	bl	800eefc <vPortExitCritical>
 800d7c4:	2300      	movs	r3, #0
 800d7c6:	e082      	b.n	800d8ce <xQueueSemaphoreTake+0x212>
 800d7c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d7ca:	2b00      	cmp	r3, #0
 800d7cc:	d106      	bne.n	800d7dc <xQueueSemaphoreTake+0x120>
 800d7ce:	f107 030c 	add.w	r3, r7, #12
 800d7d2:	4618      	mov	r0, r3
 800d7d4:	f000 fec0 	bl	800e558 <vTaskInternalSetTimeOutState>
 800d7d8:	2301      	movs	r3, #1
 800d7da:	637b      	str	r3, [r7, #52]	; 0x34
 800d7dc:	f001 fb8e 	bl	800eefc <vPortExitCritical>
 800d7e0:	f000 fc38 	bl	800e054 <vTaskSuspendAll>
 800d7e4:	f001 fb58 	bl	800ee98 <vPortEnterCritical>
 800d7e8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d7ea:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800d7ee:	b25b      	sxtb	r3, r3
 800d7f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d7f4:	d103      	bne.n	800d7fe <xQueueSemaphoreTake+0x142>
 800d7f6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d7f8:	2200      	movs	r2, #0
 800d7fa:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800d7fe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d800:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800d804:	b25b      	sxtb	r3, r3
 800d806:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d80a:	d103      	bne.n	800d814 <xQueueSemaphoreTake+0x158>
 800d80c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d80e:	2200      	movs	r2, #0
 800d810:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800d814:	f001 fb72 	bl	800eefc <vPortExitCritical>
 800d818:	463a      	mov	r2, r7
 800d81a:	f107 030c 	add.w	r3, r7, #12
 800d81e:	4611      	mov	r1, r2
 800d820:	4618      	mov	r0, r3
 800d822:	f000 feaf 	bl	800e584 <xTaskCheckForTimeOut>
 800d826:	4603      	mov	r3, r0
 800d828:	2b00      	cmp	r3, #0
 800d82a:	d132      	bne.n	800d892 <xQueueSemaphoreTake+0x1d6>
 800d82c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d82e:	f000 f929 	bl	800da84 <prvIsQueueEmpty>
 800d832:	4603      	mov	r3, r0
 800d834:	2b00      	cmp	r3, #0
 800d836:	d026      	beq.n	800d886 <xQueueSemaphoreTake+0x1ca>
 800d838:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d83a:	681b      	ldr	r3, [r3, #0]
 800d83c:	2b00      	cmp	r3, #0
 800d83e:	d109      	bne.n	800d854 <xQueueSemaphoreTake+0x198>
 800d840:	f001 fb2a 	bl	800ee98 <vPortEnterCritical>
 800d844:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d846:	689b      	ldr	r3, [r3, #8]
 800d848:	4618      	mov	r0, r3
 800d84a:	f000 ffff 	bl	800e84c <xTaskPriorityInherit>
 800d84e:	6338      	str	r0, [r7, #48]	; 0x30
 800d850:	f001 fb54 	bl	800eefc <vPortExitCritical>
 800d854:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d856:	3324      	adds	r3, #36	; 0x24
 800d858:	683a      	ldr	r2, [r7, #0]
 800d85a:	4611      	mov	r1, r2
 800d85c:	4618      	mov	r0, r3
 800d85e:	f000 fdf1 	bl	800e444 <vTaskPlaceOnEventList>
 800d862:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d864:	f000 f8bc 	bl	800d9e0 <prvUnlockQueue>
 800d868:	f000 fc02 	bl	800e070 <xTaskResumeAll>
 800d86c:	4603      	mov	r3, r0
 800d86e:	2b00      	cmp	r3, #0
 800d870:	f47f af67 	bne.w	800d742 <xQueueSemaphoreTake+0x86>
 800d874:	4b18      	ldr	r3, [pc, #96]	; (800d8d8 <xQueueSemaphoreTake+0x21c>)
 800d876:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d87a:	601a      	str	r2, [r3, #0]
 800d87c:	f3bf 8f4f 	dsb	sy
 800d880:	f3bf 8f6f 	isb	sy
 800d884:	e75d      	b.n	800d742 <xQueueSemaphoreTake+0x86>
 800d886:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d888:	f000 f8aa 	bl	800d9e0 <prvUnlockQueue>
 800d88c:	f000 fbf0 	bl	800e070 <xTaskResumeAll>
 800d890:	e757      	b.n	800d742 <xQueueSemaphoreTake+0x86>
 800d892:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d894:	f000 f8a4 	bl	800d9e0 <prvUnlockQueue>
 800d898:	f000 fbea 	bl	800e070 <xTaskResumeAll>
 800d89c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d89e:	f000 f8f1 	bl	800da84 <prvIsQueueEmpty>
 800d8a2:	4603      	mov	r3, r0
 800d8a4:	2b00      	cmp	r3, #0
 800d8a6:	f43f af4c 	beq.w	800d742 <xQueueSemaphoreTake+0x86>
 800d8aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d8ac:	2b00      	cmp	r3, #0
 800d8ae:	d00d      	beq.n	800d8cc <xQueueSemaphoreTake+0x210>
 800d8b0:	f001 faf2 	bl	800ee98 <vPortEnterCritical>
 800d8b4:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d8b6:	f000 f811 	bl	800d8dc <prvGetDisinheritPriorityAfterTimeout>
 800d8ba:	6278      	str	r0, [r7, #36]	; 0x24
 800d8bc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d8be:	689b      	ldr	r3, [r3, #8]
 800d8c0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800d8c2:	4618      	mov	r0, r3
 800d8c4:	f001 f8ca 	bl	800ea5c <vTaskPriorityDisinheritAfterTimeout>
 800d8c8:	f001 fb18 	bl	800eefc <vPortExitCritical>
 800d8cc:	2300      	movs	r3, #0
 800d8ce:	4618      	mov	r0, r3
 800d8d0:	3738      	adds	r7, #56	; 0x38
 800d8d2:	46bd      	mov	sp, r7
 800d8d4:	bd80      	pop	{r7, pc}
 800d8d6:	bf00      	nop
 800d8d8:	e000ed04 	.word	0xe000ed04

0800d8dc <prvGetDisinheritPriorityAfterTimeout>:
 800d8dc:	b480      	push	{r7}
 800d8de:	b085      	sub	sp, #20
 800d8e0:	af00      	add	r7, sp, #0
 800d8e2:	6078      	str	r0, [r7, #4]
 800d8e4:	687b      	ldr	r3, [r7, #4]
 800d8e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d8e8:	2b00      	cmp	r3, #0
 800d8ea:	d006      	beq.n	800d8fa <prvGetDisinheritPriorityAfterTimeout+0x1e>
 800d8ec:	687b      	ldr	r3, [r7, #4]
 800d8ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d8f0:	681b      	ldr	r3, [r3, #0]
 800d8f2:	f1c3 0307 	rsb	r3, r3, #7
 800d8f6:	60fb      	str	r3, [r7, #12]
 800d8f8:	e001      	b.n	800d8fe <prvGetDisinheritPriorityAfterTimeout+0x22>
 800d8fa:	2300      	movs	r3, #0
 800d8fc:	60fb      	str	r3, [r7, #12]
 800d8fe:	68fb      	ldr	r3, [r7, #12]
 800d900:	4618      	mov	r0, r3
 800d902:	3714      	adds	r7, #20
 800d904:	46bd      	mov	sp, r7
 800d906:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d90a:	4770      	bx	lr

0800d90c <prvCopyDataToQueue>:
 800d90c:	b580      	push	{r7, lr}
 800d90e:	b086      	sub	sp, #24
 800d910:	af00      	add	r7, sp, #0
 800d912:	60f8      	str	r0, [r7, #12]
 800d914:	60b9      	str	r1, [r7, #8]
 800d916:	607a      	str	r2, [r7, #4]
 800d918:	2300      	movs	r3, #0
 800d91a:	617b      	str	r3, [r7, #20]
 800d91c:	68fb      	ldr	r3, [r7, #12]
 800d91e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d920:	613b      	str	r3, [r7, #16]
 800d922:	68fb      	ldr	r3, [r7, #12]
 800d924:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d926:	2b00      	cmp	r3, #0
 800d928:	d10d      	bne.n	800d946 <prvCopyDataToQueue+0x3a>
 800d92a:	68fb      	ldr	r3, [r7, #12]
 800d92c:	681b      	ldr	r3, [r3, #0]
 800d92e:	2b00      	cmp	r3, #0
 800d930:	d14d      	bne.n	800d9ce <prvCopyDataToQueue+0xc2>
 800d932:	68fb      	ldr	r3, [r7, #12]
 800d934:	689b      	ldr	r3, [r3, #8]
 800d936:	4618      	mov	r0, r3
 800d938:	f001 f808 	bl	800e94c <xTaskPriorityDisinherit>
 800d93c:	6178      	str	r0, [r7, #20]
 800d93e:	68fb      	ldr	r3, [r7, #12]
 800d940:	2200      	movs	r2, #0
 800d942:	609a      	str	r2, [r3, #8]
 800d944:	e043      	b.n	800d9ce <prvCopyDataToQueue+0xc2>
 800d946:	687b      	ldr	r3, [r7, #4]
 800d948:	2b00      	cmp	r3, #0
 800d94a:	d119      	bne.n	800d980 <prvCopyDataToQueue+0x74>
 800d94c:	68fb      	ldr	r3, [r7, #12]
 800d94e:	6858      	ldr	r0, [r3, #4]
 800d950:	68fb      	ldr	r3, [r7, #12]
 800d952:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d954:	461a      	mov	r2, r3
 800d956:	68b9      	ldr	r1, [r7, #8]
 800d958:	f001 fd8c 	bl	800f474 <memcpy>
 800d95c:	68fb      	ldr	r3, [r7, #12]
 800d95e:	685a      	ldr	r2, [r3, #4]
 800d960:	68fb      	ldr	r3, [r7, #12]
 800d962:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d964:	441a      	add	r2, r3
 800d966:	68fb      	ldr	r3, [r7, #12]
 800d968:	605a      	str	r2, [r3, #4]
 800d96a:	68fb      	ldr	r3, [r7, #12]
 800d96c:	685a      	ldr	r2, [r3, #4]
 800d96e:	68fb      	ldr	r3, [r7, #12]
 800d970:	689b      	ldr	r3, [r3, #8]
 800d972:	429a      	cmp	r2, r3
 800d974:	d32b      	bcc.n	800d9ce <prvCopyDataToQueue+0xc2>
 800d976:	68fb      	ldr	r3, [r7, #12]
 800d978:	681a      	ldr	r2, [r3, #0]
 800d97a:	68fb      	ldr	r3, [r7, #12]
 800d97c:	605a      	str	r2, [r3, #4]
 800d97e:	e026      	b.n	800d9ce <prvCopyDataToQueue+0xc2>
 800d980:	68fb      	ldr	r3, [r7, #12]
 800d982:	68d8      	ldr	r0, [r3, #12]
 800d984:	68fb      	ldr	r3, [r7, #12]
 800d986:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d988:	461a      	mov	r2, r3
 800d98a:	68b9      	ldr	r1, [r7, #8]
 800d98c:	f001 fd72 	bl	800f474 <memcpy>
 800d990:	68fb      	ldr	r3, [r7, #12]
 800d992:	68da      	ldr	r2, [r3, #12]
 800d994:	68fb      	ldr	r3, [r7, #12]
 800d996:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d998:	425b      	negs	r3, r3
 800d99a:	441a      	add	r2, r3
 800d99c:	68fb      	ldr	r3, [r7, #12]
 800d99e:	60da      	str	r2, [r3, #12]
 800d9a0:	68fb      	ldr	r3, [r7, #12]
 800d9a2:	68da      	ldr	r2, [r3, #12]
 800d9a4:	68fb      	ldr	r3, [r7, #12]
 800d9a6:	681b      	ldr	r3, [r3, #0]
 800d9a8:	429a      	cmp	r2, r3
 800d9aa:	d207      	bcs.n	800d9bc <prvCopyDataToQueue+0xb0>
 800d9ac:	68fb      	ldr	r3, [r7, #12]
 800d9ae:	689a      	ldr	r2, [r3, #8]
 800d9b0:	68fb      	ldr	r3, [r7, #12]
 800d9b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d9b4:	425b      	negs	r3, r3
 800d9b6:	441a      	add	r2, r3
 800d9b8:	68fb      	ldr	r3, [r7, #12]
 800d9ba:	60da      	str	r2, [r3, #12]
 800d9bc:	687b      	ldr	r3, [r7, #4]
 800d9be:	2b02      	cmp	r3, #2
 800d9c0:	d105      	bne.n	800d9ce <prvCopyDataToQueue+0xc2>
 800d9c2:	693b      	ldr	r3, [r7, #16]
 800d9c4:	2b00      	cmp	r3, #0
 800d9c6:	d002      	beq.n	800d9ce <prvCopyDataToQueue+0xc2>
 800d9c8:	693b      	ldr	r3, [r7, #16]
 800d9ca:	3b01      	subs	r3, #1
 800d9cc:	613b      	str	r3, [r7, #16]
 800d9ce:	693b      	ldr	r3, [r7, #16]
 800d9d0:	1c5a      	adds	r2, r3, #1
 800d9d2:	68fb      	ldr	r3, [r7, #12]
 800d9d4:	639a      	str	r2, [r3, #56]	; 0x38
 800d9d6:	697b      	ldr	r3, [r7, #20]
 800d9d8:	4618      	mov	r0, r3
 800d9da:	3718      	adds	r7, #24
 800d9dc:	46bd      	mov	sp, r7
 800d9de:	bd80      	pop	{r7, pc}

0800d9e0 <prvUnlockQueue>:
 800d9e0:	b580      	push	{r7, lr}
 800d9e2:	b084      	sub	sp, #16
 800d9e4:	af00      	add	r7, sp, #0
 800d9e6:	6078      	str	r0, [r7, #4]
 800d9e8:	f001 fa56 	bl	800ee98 <vPortEnterCritical>
 800d9ec:	687b      	ldr	r3, [r7, #4]
 800d9ee:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800d9f2:	73fb      	strb	r3, [r7, #15]
 800d9f4:	e011      	b.n	800da1a <prvUnlockQueue+0x3a>
 800d9f6:	687b      	ldr	r3, [r7, #4]
 800d9f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d9fa:	2b00      	cmp	r3, #0
 800d9fc:	d012      	beq.n	800da24 <prvUnlockQueue+0x44>
 800d9fe:	687b      	ldr	r3, [r7, #4]
 800da00:	3324      	adds	r3, #36	; 0x24
 800da02:	4618      	mov	r0, r3
 800da04:	f000 fd44 	bl	800e490 <xTaskRemoveFromEventList>
 800da08:	4603      	mov	r3, r0
 800da0a:	2b00      	cmp	r3, #0
 800da0c:	d001      	beq.n	800da12 <prvUnlockQueue+0x32>
 800da0e:	f000 fe1d 	bl	800e64c <vTaskMissedYield>
 800da12:	7bfb      	ldrb	r3, [r7, #15]
 800da14:	3b01      	subs	r3, #1
 800da16:	b2db      	uxtb	r3, r3
 800da18:	73fb      	strb	r3, [r7, #15]
 800da1a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800da1e:	2b00      	cmp	r3, #0
 800da20:	dce9      	bgt.n	800d9f6 <prvUnlockQueue+0x16>
 800da22:	e000      	b.n	800da26 <prvUnlockQueue+0x46>
 800da24:	bf00      	nop
 800da26:	687b      	ldr	r3, [r7, #4]
 800da28:	22ff      	movs	r2, #255	; 0xff
 800da2a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800da2e:	f001 fa65 	bl	800eefc <vPortExitCritical>
 800da32:	f001 fa31 	bl	800ee98 <vPortEnterCritical>
 800da36:	687b      	ldr	r3, [r7, #4]
 800da38:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800da3c:	73bb      	strb	r3, [r7, #14]
 800da3e:	e011      	b.n	800da64 <prvUnlockQueue+0x84>
 800da40:	687b      	ldr	r3, [r7, #4]
 800da42:	691b      	ldr	r3, [r3, #16]
 800da44:	2b00      	cmp	r3, #0
 800da46:	d012      	beq.n	800da6e <prvUnlockQueue+0x8e>
 800da48:	687b      	ldr	r3, [r7, #4]
 800da4a:	3310      	adds	r3, #16
 800da4c:	4618      	mov	r0, r3
 800da4e:	f000 fd1f 	bl	800e490 <xTaskRemoveFromEventList>
 800da52:	4603      	mov	r3, r0
 800da54:	2b00      	cmp	r3, #0
 800da56:	d001      	beq.n	800da5c <prvUnlockQueue+0x7c>
 800da58:	f000 fdf8 	bl	800e64c <vTaskMissedYield>
 800da5c:	7bbb      	ldrb	r3, [r7, #14]
 800da5e:	3b01      	subs	r3, #1
 800da60:	b2db      	uxtb	r3, r3
 800da62:	73bb      	strb	r3, [r7, #14]
 800da64:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800da68:	2b00      	cmp	r3, #0
 800da6a:	dce9      	bgt.n	800da40 <prvUnlockQueue+0x60>
 800da6c:	e000      	b.n	800da70 <prvUnlockQueue+0x90>
 800da6e:	bf00      	nop
 800da70:	687b      	ldr	r3, [r7, #4]
 800da72:	22ff      	movs	r2, #255	; 0xff
 800da74:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800da78:	f001 fa40 	bl	800eefc <vPortExitCritical>
 800da7c:	bf00      	nop
 800da7e:	3710      	adds	r7, #16
 800da80:	46bd      	mov	sp, r7
 800da82:	bd80      	pop	{r7, pc}

0800da84 <prvIsQueueEmpty>:
 800da84:	b580      	push	{r7, lr}
 800da86:	b084      	sub	sp, #16
 800da88:	af00      	add	r7, sp, #0
 800da8a:	6078      	str	r0, [r7, #4]
 800da8c:	f001 fa04 	bl	800ee98 <vPortEnterCritical>
 800da90:	687b      	ldr	r3, [r7, #4]
 800da92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800da94:	2b00      	cmp	r3, #0
 800da96:	d102      	bne.n	800da9e <prvIsQueueEmpty+0x1a>
 800da98:	2301      	movs	r3, #1
 800da9a:	60fb      	str	r3, [r7, #12]
 800da9c:	e001      	b.n	800daa2 <prvIsQueueEmpty+0x1e>
 800da9e:	2300      	movs	r3, #0
 800daa0:	60fb      	str	r3, [r7, #12]
 800daa2:	f001 fa2b 	bl	800eefc <vPortExitCritical>
 800daa6:	68fb      	ldr	r3, [r7, #12]
 800daa8:	4618      	mov	r0, r3
 800daaa:	3710      	adds	r7, #16
 800daac:	46bd      	mov	sp, r7
 800daae:	bd80      	pop	{r7, pc}

0800dab0 <prvIsQueueFull>:
 800dab0:	b580      	push	{r7, lr}
 800dab2:	b084      	sub	sp, #16
 800dab4:	af00      	add	r7, sp, #0
 800dab6:	6078      	str	r0, [r7, #4]
 800dab8:	f001 f9ee 	bl	800ee98 <vPortEnterCritical>
 800dabc:	687b      	ldr	r3, [r7, #4]
 800dabe:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800dac0:	687b      	ldr	r3, [r7, #4]
 800dac2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dac4:	429a      	cmp	r2, r3
 800dac6:	d102      	bne.n	800dace <prvIsQueueFull+0x1e>
 800dac8:	2301      	movs	r3, #1
 800daca:	60fb      	str	r3, [r7, #12]
 800dacc:	e001      	b.n	800dad2 <prvIsQueueFull+0x22>
 800dace:	2300      	movs	r3, #0
 800dad0:	60fb      	str	r3, [r7, #12]
 800dad2:	f001 fa13 	bl	800eefc <vPortExitCritical>
 800dad6:	68fb      	ldr	r3, [r7, #12]
 800dad8:	4618      	mov	r0, r3
 800dada:	3710      	adds	r7, #16
 800dadc:	46bd      	mov	sp, r7
 800dade:	bd80      	pop	{r7, pc}

0800dae0 <xTaskCreateStatic>:
 800dae0:	b580      	push	{r7, lr}
 800dae2:	b08e      	sub	sp, #56	; 0x38
 800dae4:	af04      	add	r7, sp, #16
 800dae6:	60f8      	str	r0, [r7, #12]
 800dae8:	60b9      	str	r1, [r7, #8]
 800daea:	607a      	str	r2, [r7, #4]
 800daec:	603b      	str	r3, [r7, #0]
 800daee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800daf0:	2b00      	cmp	r3, #0
 800daf2:	d10b      	bne.n	800db0c <xTaskCreateStatic+0x2c>
 800daf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daf8:	b672      	cpsid	i
 800dafa:	f383 8811 	msr	BASEPRI, r3
 800dafe:	f3bf 8f6f 	isb	sy
 800db02:	f3bf 8f4f 	dsb	sy
 800db06:	b662      	cpsie	i
 800db08:	623b      	str	r3, [r7, #32]
 800db0a:	e7fe      	b.n	800db0a <xTaskCreateStatic+0x2a>
 800db0c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800db0e:	2b00      	cmp	r3, #0
 800db10:	d10b      	bne.n	800db2a <xTaskCreateStatic+0x4a>
 800db12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db16:	b672      	cpsid	i
 800db18:	f383 8811 	msr	BASEPRI, r3
 800db1c:	f3bf 8f6f 	isb	sy
 800db20:	f3bf 8f4f 	dsb	sy
 800db24:	b662      	cpsie	i
 800db26:	61fb      	str	r3, [r7, #28]
 800db28:	e7fe      	b.n	800db28 <xTaskCreateStatic+0x48>
 800db2a:	2358      	movs	r3, #88	; 0x58
 800db2c:	613b      	str	r3, [r7, #16]
 800db2e:	693b      	ldr	r3, [r7, #16]
 800db30:	2b58      	cmp	r3, #88	; 0x58
 800db32:	d00b      	beq.n	800db4c <xTaskCreateStatic+0x6c>
 800db34:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db38:	b672      	cpsid	i
 800db3a:	f383 8811 	msr	BASEPRI, r3
 800db3e:	f3bf 8f6f 	isb	sy
 800db42:	f3bf 8f4f 	dsb	sy
 800db46:	b662      	cpsie	i
 800db48:	61bb      	str	r3, [r7, #24]
 800db4a:	e7fe      	b.n	800db4a <xTaskCreateStatic+0x6a>
 800db4c:	693b      	ldr	r3, [r7, #16]
 800db4e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800db50:	2b00      	cmp	r3, #0
 800db52:	d01e      	beq.n	800db92 <xTaskCreateStatic+0xb2>
 800db54:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800db56:	2b00      	cmp	r3, #0
 800db58:	d01b      	beq.n	800db92 <xTaskCreateStatic+0xb2>
 800db5a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800db5c:	627b      	str	r3, [r7, #36]	; 0x24
 800db5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800db60:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800db62:	631a      	str	r2, [r3, #48]	; 0x30
 800db64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800db66:	2202      	movs	r2, #2
 800db68:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
 800db6c:	2300      	movs	r3, #0
 800db6e:	9303      	str	r3, [sp, #12]
 800db70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800db72:	9302      	str	r3, [sp, #8]
 800db74:	f107 0314 	add.w	r3, r7, #20
 800db78:	9301      	str	r3, [sp, #4]
 800db7a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800db7c:	9300      	str	r3, [sp, #0]
 800db7e:	683b      	ldr	r3, [r7, #0]
 800db80:	687a      	ldr	r2, [r7, #4]
 800db82:	68b9      	ldr	r1, [r7, #8]
 800db84:	68f8      	ldr	r0, [r7, #12]
 800db86:	f000 f850 	bl	800dc2a <prvInitialiseNewTask>
 800db8a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800db8c:	f000 f8e0 	bl	800dd50 <prvAddNewTaskToReadyList>
 800db90:	e001      	b.n	800db96 <xTaskCreateStatic+0xb6>
 800db92:	2300      	movs	r3, #0
 800db94:	617b      	str	r3, [r7, #20]
 800db96:	697b      	ldr	r3, [r7, #20]
 800db98:	4618      	mov	r0, r3
 800db9a:	3728      	adds	r7, #40	; 0x28
 800db9c:	46bd      	mov	sp, r7
 800db9e:	bd80      	pop	{r7, pc}

0800dba0 <xTaskCreate>:
 800dba0:	b580      	push	{r7, lr}
 800dba2:	b08c      	sub	sp, #48	; 0x30
 800dba4:	af04      	add	r7, sp, #16
 800dba6:	60f8      	str	r0, [r7, #12]
 800dba8:	60b9      	str	r1, [r7, #8]
 800dbaa:	603b      	str	r3, [r7, #0]
 800dbac:	4613      	mov	r3, r2
 800dbae:	80fb      	strh	r3, [r7, #6]
 800dbb0:	88fb      	ldrh	r3, [r7, #6]
 800dbb2:	009b      	lsls	r3, r3, #2
 800dbb4:	4618      	mov	r0, r3
 800dbb6:	f001 fa4f 	bl	800f058 <pvPortMalloc>
 800dbba:	6178      	str	r0, [r7, #20]
 800dbbc:	697b      	ldr	r3, [r7, #20]
 800dbbe:	2b00      	cmp	r3, #0
 800dbc0:	d00e      	beq.n	800dbe0 <xTaskCreate+0x40>
 800dbc2:	2058      	movs	r0, #88	; 0x58
 800dbc4:	f001 fa48 	bl	800f058 <pvPortMalloc>
 800dbc8:	61f8      	str	r0, [r7, #28]
 800dbca:	69fb      	ldr	r3, [r7, #28]
 800dbcc:	2b00      	cmp	r3, #0
 800dbce:	d003      	beq.n	800dbd8 <xTaskCreate+0x38>
 800dbd0:	69fb      	ldr	r3, [r7, #28]
 800dbd2:	697a      	ldr	r2, [r7, #20]
 800dbd4:	631a      	str	r2, [r3, #48]	; 0x30
 800dbd6:	e005      	b.n	800dbe4 <xTaskCreate+0x44>
 800dbd8:	6978      	ldr	r0, [r7, #20]
 800dbda:	f001 fb09 	bl	800f1f0 <vPortFree>
 800dbde:	e001      	b.n	800dbe4 <xTaskCreate+0x44>
 800dbe0:	2300      	movs	r3, #0
 800dbe2:	61fb      	str	r3, [r7, #28]
 800dbe4:	69fb      	ldr	r3, [r7, #28]
 800dbe6:	2b00      	cmp	r3, #0
 800dbe8:	d017      	beq.n	800dc1a <xTaskCreate+0x7a>
 800dbea:	69fb      	ldr	r3, [r7, #28]
 800dbec:	2200      	movs	r2, #0
 800dbee:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
 800dbf2:	88fa      	ldrh	r2, [r7, #6]
 800dbf4:	2300      	movs	r3, #0
 800dbf6:	9303      	str	r3, [sp, #12]
 800dbf8:	69fb      	ldr	r3, [r7, #28]
 800dbfa:	9302      	str	r3, [sp, #8]
 800dbfc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800dbfe:	9301      	str	r3, [sp, #4]
 800dc00:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dc02:	9300      	str	r3, [sp, #0]
 800dc04:	683b      	ldr	r3, [r7, #0]
 800dc06:	68b9      	ldr	r1, [r7, #8]
 800dc08:	68f8      	ldr	r0, [r7, #12]
 800dc0a:	f000 f80e 	bl	800dc2a <prvInitialiseNewTask>
 800dc0e:	69f8      	ldr	r0, [r7, #28]
 800dc10:	f000 f89e 	bl	800dd50 <prvAddNewTaskToReadyList>
 800dc14:	2301      	movs	r3, #1
 800dc16:	61bb      	str	r3, [r7, #24]
 800dc18:	e002      	b.n	800dc20 <xTaskCreate+0x80>
 800dc1a:	f04f 33ff 	mov.w	r3, #4294967295
 800dc1e:	61bb      	str	r3, [r7, #24]
 800dc20:	69bb      	ldr	r3, [r7, #24]
 800dc22:	4618      	mov	r0, r3
 800dc24:	3720      	adds	r7, #32
 800dc26:	46bd      	mov	sp, r7
 800dc28:	bd80      	pop	{r7, pc}

0800dc2a <prvInitialiseNewTask>:
 800dc2a:	b580      	push	{r7, lr}
 800dc2c:	b088      	sub	sp, #32
 800dc2e:	af00      	add	r7, sp, #0
 800dc30:	60f8      	str	r0, [r7, #12]
 800dc32:	60b9      	str	r1, [r7, #8]
 800dc34:	607a      	str	r2, [r7, #4]
 800dc36:	603b      	str	r3, [r7, #0]
 800dc38:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dc3a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800dc3c:	687b      	ldr	r3, [r7, #4]
 800dc3e:	009b      	lsls	r3, r3, #2
 800dc40:	461a      	mov	r2, r3
 800dc42:	21a5      	movs	r1, #165	; 0xa5
 800dc44:	f001 fc21 	bl	800f48a <memset>
 800dc48:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dc4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800dc4c:	6879      	ldr	r1, [r7, #4]
 800dc4e:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
 800dc52:	440b      	add	r3, r1
 800dc54:	009b      	lsls	r3, r3, #2
 800dc56:	4413      	add	r3, r2
 800dc58:	61bb      	str	r3, [r7, #24]
 800dc5a:	69bb      	ldr	r3, [r7, #24]
 800dc5c:	f023 0307 	bic.w	r3, r3, #7
 800dc60:	61bb      	str	r3, [r7, #24]
 800dc62:	69bb      	ldr	r3, [r7, #24]
 800dc64:	f003 0307 	and.w	r3, r3, #7
 800dc68:	2b00      	cmp	r3, #0
 800dc6a:	d00b      	beq.n	800dc84 <prvInitialiseNewTask+0x5a>
 800dc6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc70:	b672      	cpsid	i
 800dc72:	f383 8811 	msr	BASEPRI, r3
 800dc76:	f3bf 8f6f 	isb	sy
 800dc7a:	f3bf 8f4f 	dsb	sy
 800dc7e:	b662      	cpsie	i
 800dc80:	617b      	str	r3, [r7, #20]
 800dc82:	e7fe      	b.n	800dc82 <prvInitialiseNewTask+0x58>
 800dc84:	68bb      	ldr	r3, [r7, #8]
 800dc86:	2b00      	cmp	r3, #0
 800dc88:	d01f      	beq.n	800dcca <prvInitialiseNewTask+0xa0>
 800dc8a:	2300      	movs	r3, #0
 800dc8c:	61fb      	str	r3, [r7, #28]
 800dc8e:	e012      	b.n	800dcb6 <prvInitialiseNewTask+0x8c>
 800dc90:	68ba      	ldr	r2, [r7, #8]
 800dc92:	69fb      	ldr	r3, [r7, #28]
 800dc94:	4413      	add	r3, r2
 800dc96:	7819      	ldrb	r1, [r3, #0]
 800dc98:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800dc9a:	69fb      	ldr	r3, [r7, #28]
 800dc9c:	4413      	add	r3, r2
 800dc9e:	3334      	adds	r3, #52	; 0x34
 800dca0:	460a      	mov	r2, r1
 800dca2:	701a      	strb	r2, [r3, #0]
 800dca4:	68ba      	ldr	r2, [r7, #8]
 800dca6:	69fb      	ldr	r3, [r7, #28]
 800dca8:	4413      	add	r3, r2
 800dcaa:	781b      	ldrb	r3, [r3, #0]
 800dcac:	2b00      	cmp	r3, #0
 800dcae:	d006      	beq.n	800dcbe <prvInitialiseNewTask+0x94>
 800dcb0:	69fb      	ldr	r3, [r7, #28]
 800dcb2:	3301      	adds	r3, #1
 800dcb4:	61fb      	str	r3, [r7, #28]
 800dcb6:	69fb      	ldr	r3, [r7, #28]
 800dcb8:	2b0f      	cmp	r3, #15
 800dcba:	d9e9      	bls.n	800dc90 <prvInitialiseNewTask+0x66>
 800dcbc:	e000      	b.n	800dcc0 <prvInitialiseNewTask+0x96>
 800dcbe:	bf00      	nop
 800dcc0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcc2:	2200      	movs	r2, #0
 800dcc4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800dcc8:	e003      	b.n	800dcd2 <prvInitialiseNewTask+0xa8>
 800dcca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dccc:	2200      	movs	r2, #0
 800dcce:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800dcd2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dcd4:	2b06      	cmp	r3, #6
 800dcd6:	d901      	bls.n	800dcdc <prvInitialiseNewTask+0xb2>
 800dcd8:	2306      	movs	r3, #6
 800dcda:	62bb      	str	r3, [r7, #40]	; 0x28
 800dcdc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcde:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800dce0:	62da      	str	r2, [r3, #44]	; 0x2c
 800dce2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dce4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800dce6:	645a      	str	r2, [r3, #68]	; 0x44
 800dce8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcea:	2200      	movs	r2, #0
 800dcec:	649a      	str	r2, [r3, #72]	; 0x48
 800dcee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcf0:	3304      	adds	r3, #4
 800dcf2:	4618      	mov	r0, r3
 800dcf4:	f7ff f9b7 	bl	800d066 <vListInitialiseItem>
 800dcf8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcfa:	3318      	adds	r3, #24
 800dcfc:	4618      	mov	r0, r3
 800dcfe:	f7ff f9b2 	bl	800d066 <vListInitialiseItem>
 800dd02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd04:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800dd06:	611a      	str	r2, [r3, #16]
 800dd08:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dd0a:	f1c3 0207 	rsb	r2, r3, #7
 800dd0e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd10:	619a      	str	r2, [r3, #24]
 800dd12:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd14:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800dd16:	625a      	str	r2, [r3, #36]	; 0x24
 800dd18:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd1a:	2200      	movs	r2, #0
 800dd1c:	64da      	str	r2, [r3, #76]	; 0x4c
 800dd1e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd20:	2200      	movs	r2, #0
 800dd22:	651a      	str	r2, [r3, #80]	; 0x50
 800dd24:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd26:	2200      	movs	r2, #0
 800dd28:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800dd2c:	683a      	ldr	r2, [r7, #0]
 800dd2e:	68f9      	ldr	r1, [r7, #12]
 800dd30:	69b8      	ldr	r0, [r7, #24]
 800dd32:	f000 ffa9 	bl	800ec88 <pxPortInitialiseStack>
 800dd36:	4602      	mov	r2, r0
 800dd38:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd3a:	601a      	str	r2, [r3, #0]
 800dd3c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800dd3e:	2b00      	cmp	r3, #0
 800dd40:	d002      	beq.n	800dd48 <prvInitialiseNewTask+0x11e>
 800dd42:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800dd44:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800dd46:	601a      	str	r2, [r3, #0]
 800dd48:	bf00      	nop
 800dd4a:	3720      	adds	r7, #32
 800dd4c:	46bd      	mov	sp, r7
 800dd4e:	bd80      	pop	{r7, pc}

0800dd50 <prvAddNewTaskToReadyList>:
 800dd50:	b580      	push	{r7, lr}
 800dd52:	b082      	sub	sp, #8
 800dd54:	af00      	add	r7, sp, #0
 800dd56:	6078      	str	r0, [r7, #4]
 800dd58:	f001 f89e 	bl	800ee98 <vPortEnterCritical>
 800dd5c:	4b2a      	ldr	r3, [pc, #168]	; (800de08 <prvAddNewTaskToReadyList+0xb8>)
 800dd5e:	681b      	ldr	r3, [r3, #0]
 800dd60:	3301      	adds	r3, #1
 800dd62:	4a29      	ldr	r2, [pc, #164]	; (800de08 <prvAddNewTaskToReadyList+0xb8>)
 800dd64:	6013      	str	r3, [r2, #0]
 800dd66:	4b29      	ldr	r3, [pc, #164]	; (800de0c <prvAddNewTaskToReadyList+0xbc>)
 800dd68:	681b      	ldr	r3, [r3, #0]
 800dd6a:	2b00      	cmp	r3, #0
 800dd6c:	d109      	bne.n	800dd82 <prvAddNewTaskToReadyList+0x32>
 800dd6e:	4a27      	ldr	r2, [pc, #156]	; (800de0c <prvAddNewTaskToReadyList+0xbc>)
 800dd70:	687b      	ldr	r3, [r7, #4]
 800dd72:	6013      	str	r3, [r2, #0]
 800dd74:	4b24      	ldr	r3, [pc, #144]	; (800de08 <prvAddNewTaskToReadyList+0xb8>)
 800dd76:	681b      	ldr	r3, [r3, #0]
 800dd78:	2b01      	cmp	r3, #1
 800dd7a:	d110      	bne.n	800dd9e <prvAddNewTaskToReadyList+0x4e>
 800dd7c:	f000 fc8c 	bl	800e698 <prvInitialiseTaskLists>
 800dd80:	e00d      	b.n	800dd9e <prvAddNewTaskToReadyList+0x4e>
 800dd82:	4b23      	ldr	r3, [pc, #140]	; (800de10 <prvAddNewTaskToReadyList+0xc0>)
 800dd84:	681b      	ldr	r3, [r3, #0]
 800dd86:	2b00      	cmp	r3, #0
 800dd88:	d109      	bne.n	800dd9e <prvAddNewTaskToReadyList+0x4e>
 800dd8a:	4b20      	ldr	r3, [pc, #128]	; (800de0c <prvAddNewTaskToReadyList+0xbc>)
 800dd8c:	681b      	ldr	r3, [r3, #0]
 800dd8e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800dd90:	687b      	ldr	r3, [r7, #4]
 800dd92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd94:	429a      	cmp	r2, r3
 800dd96:	d802      	bhi.n	800dd9e <prvAddNewTaskToReadyList+0x4e>
 800dd98:	4a1c      	ldr	r2, [pc, #112]	; (800de0c <prvAddNewTaskToReadyList+0xbc>)
 800dd9a:	687b      	ldr	r3, [r7, #4]
 800dd9c:	6013      	str	r3, [r2, #0]
 800dd9e:	4b1d      	ldr	r3, [pc, #116]	; (800de14 <prvAddNewTaskToReadyList+0xc4>)
 800dda0:	681b      	ldr	r3, [r3, #0]
 800dda2:	3301      	adds	r3, #1
 800dda4:	4a1b      	ldr	r2, [pc, #108]	; (800de14 <prvAddNewTaskToReadyList+0xc4>)
 800dda6:	6013      	str	r3, [r2, #0]
 800dda8:	687b      	ldr	r3, [r7, #4]
 800ddaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ddac:	2201      	movs	r2, #1
 800ddae:	409a      	lsls	r2, r3
 800ddb0:	4b19      	ldr	r3, [pc, #100]	; (800de18 <prvAddNewTaskToReadyList+0xc8>)
 800ddb2:	681b      	ldr	r3, [r3, #0]
 800ddb4:	4313      	orrs	r3, r2
 800ddb6:	4a18      	ldr	r2, [pc, #96]	; (800de18 <prvAddNewTaskToReadyList+0xc8>)
 800ddb8:	6013      	str	r3, [r2, #0]
 800ddba:	687b      	ldr	r3, [r7, #4]
 800ddbc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ddbe:	4613      	mov	r3, r2
 800ddc0:	009b      	lsls	r3, r3, #2
 800ddc2:	4413      	add	r3, r2
 800ddc4:	009b      	lsls	r3, r3, #2
 800ddc6:	4a15      	ldr	r2, [pc, #84]	; (800de1c <prvAddNewTaskToReadyList+0xcc>)
 800ddc8:	441a      	add	r2, r3
 800ddca:	687b      	ldr	r3, [r7, #4]
 800ddcc:	3304      	adds	r3, #4
 800ddce:	4619      	mov	r1, r3
 800ddd0:	4610      	mov	r0, r2
 800ddd2:	f7ff f955 	bl	800d080 <vListInsertEnd>
 800ddd6:	f001 f891 	bl	800eefc <vPortExitCritical>
 800ddda:	4b0d      	ldr	r3, [pc, #52]	; (800de10 <prvAddNewTaskToReadyList+0xc0>)
 800dddc:	681b      	ldr	r3, [r3, #0]
 800ddde:	2b00      	cmp	r3, #0
 800dde0:	d00e      	beq.n	800de00 <prvAddNewTaskToReadyList+0xb0>
 800dde2:	4b0a      	ldr	r3, [pc, #40]	; (800de0c <prvAddNewTaskToReadyList+0xbc>)
 800dde4:	681b      	ldr	r3, [r3, #0]
 800dde6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800dde8:	687b      	ldr	r3, [r7, #4]
 800ddea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ddec:	429a      	cmp	r2, r3
 800ddee:	d207      	bcs.n	800de00 <prvAddNewTaskToReadyList+0xb0>
 800ddf0:	4b0b      	ldr	r3, [pc, #44]	; (800de20 <prvAddNewTaskToReadyList+0xd0>)
 800ddf2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ddf6:	601a      	str	r2, [r3, #0]
 800ddf8:	f3bf 8f4f 	dsb	sy
 800ddfc:	f3bf 8f6f 	isb	sy
 800de00:	bf00      	nop
 800de02:	3708      	adds	r7, #8
 800de04:	46bd      	mov	sp, r7
 800de06:	bd80      	pop	{r7, pc}
 800de08:	20001a1c 	.word	0x20001a1c
 800de0c:	2000191c 	.word	0x2000191c
 800de10:	20001a28 	.word	0x20001a28
 800de14:	20001a38 	.word	0x20001a38
 800de18:	20001a24 	.word	0x20001a24
 800de1c:	20001920 	.word	0x20001920
 800de20:	e000ed04 	.word	0xe000ed04

0800de24 <vTaskDelayUntil>:
 800de24:	b580      	push	{r7, lr}
 800de26:	b08a      	sub	sp, #40	; 0x28
 800de28:	af00      	add	r7, sp, #0
 800de2a:	6078      	str	r0, [r7, #4]
 800de2c:	6039      	str	r1, [r7, #0]
 800de2e:	2300      	movs	r3, #0
 800de30:	627b      	str	r3, [r7, #36]	; 0x24
 800de32:	687b      	ldr	r3, [r7, #4]
 800de34:	2b00      	cmp	r3, #0
 800de36:	d10b      	bne.n	800de50 <vTaskDelayUntil+0x2c>
 800de38:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de3c:	b672      	cpsid	i
 800de3e:	f383 8811 	msr	BASEPRI, r3
 800de42:	f3bf 8f6f 	isb	sy
 800de46:	f3bf 8f4f 	dsb	sy
 800de4a:	b662      	cpsie	i
 800de4c:	617b      	str	r3, [r7, #20]
 800de4e:	e7fe      	b.n	800de4e <vTaskDelayUntil+0x2a>
 800de50:	683b      	ldr	r3, [r7, #0]
 800de52:	2b00      	cmp	r3, #0
 800de54:	d10b      	bne.n	800de6e <vTaskDelayUntil+0x4a>
 800de56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de5a:	b672      	cpsid	i
 800de5c:	f383 8811 	msr	BASEPRI, r3
 800de60:	f3bf 8f6f 	isb	sy
 800de64:	f3bf 8f4f 	dsb	sy
 800de68:	b662      	cpsie	i
 800de6a:	613b      	str	r3, [r7, #16]
 800de6c:	e7fe      	b.n	800de6c <vTaskDelayUntil+0x48>
 800de6e:	4b2a      	ldr	r3, [pc, #168]	; (800df18 <vTaskDelayUntil+0xf4>)
 800de70:	681b      	ldr	r3, [r3, #0]
 800de72:	2b00      	cmp	r3, #0
 800de74:	d00b      	beq.n	800de8e <vTaskDelayUntil+0x6a>
 800de76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de7a:	b672      	cpsid	i
 800de7c:	f383 8811 	msr	BASEPRI, r3
 800de80:	f3bf 8f6f 	isb	sy
 800de84:	f3bf 8f4f 	dsb	sy
 800de88:	b662      	cpsie	i
 800de8a:	60fb      	str	r3, [r7, #12]
 800de8c:	e7fe      	b.n	800de8c <vTaskDelayUntil+0x68>
 800de8e:	f000 f8e1 	bl	800e054 <vTaskSuspendAll>
 800de92:	4b22      	ldr	r3, [pc, #136]	; (800df1c <vTaskDelayUntil+0xf8>)
 800de94:	681b      	ldr	r3, [r3, #0]
 800de96:	623b      	str	r3, [r7, #32]
 800de98:	687b      	ldr	r3, [r7, #4]
 800de9a:	681b      	ldr	r3, [r3, #0]
 800de9c:	683a      	ldr	r2, [r7, #0]
 800de9e:	4413      	add	r3, r2
 800dea0:	61fb      	str	r3, [r7, #28]
 800dea2:	687b      	ldr	r3, [r7, #4]
 800dea4:	681b      	ldr	r3, [r3, #0]
 800dea6:	6a3a      	ldr	r2, [r7, #32]
 800dea8:	429a      	cmp	r2, r3
 800deaa:	d20b      	bcs.n	800dec4 <vTaskDelayUntil+0xa0>
 800deac:	687b      	ldr	r3, [r7, #4]
 800deae:	681b      	ldr	r3, [r3, #0]
 800deb0:	69fa      	ldr	r2, [r7, #28]
 800deb2:	429a      	cmp	r2, r3
 800deb4:	d211      	bcs.n	800deda <vTaskDelayUntil+0xb6>
 800deb6:	69fa      	ldr	r2, [r7, #28]
 800deb8:	6a3b      	ldr	r3, [r7, #32]
 800deba:	429a      	cmp	r2, r3
 800debc:	d90d      	bls.n	800deda <vTaskDelayUntil+0xb6>
 800debe:	2301      	movs	r3, #1
 800dec0:	627b      	str	r3, [r7, #36]	; 0x24
 800dec2:	e00a      	b.n	800deda <vTaskDelayUntil+0xb6>
 800dec4:	687b      	ldr	r3, [r7, #4]
 800dec6:	681b      	ldr	r3, [r3, #0]
 800dec8:	69fa      	ldr	r2, [r7, #28]
 800deca:	429a      	cmp	r2, r3
 800decc:	d303      	bcc.n	800ded6 <vTaskDelayUntil+0xb2>
 800dece:	69fa      	ldr	r2, [r7, #28]
 800ded0:	6a3b      	ldr	r3, [r7, #32]
 800ded2:	429a      	cmp	r2, r3
 800ded4:	d901      	bls.n	800deda <vTaskDelayUntil+0xb6>
 800ded6:	2301      	movs	r3, #1
 800ded8:	627b      	str	r3, [r7, #36]	; 0x24
 800deda:	687b      	ldr	r3, [r7, #4]
 800dedc:	69fa      	ldr	r2, [r7, #28]
 800dede:	601a      	str	r2, [r3, #0]
 800dee0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dee2:	2b00      	cmp	r3, #0
 800dee4:	d006      	beq.n	800def4 <vTaskDelayUntil+0xd0>
 800dee6:	69fa      	ldr	r2, [r7, #28]
 800dee8:	6a3b      	ldr	r3, [r7, #32]
 800deea:	1ad3      	subs	r3, r2, r3
 800deec:	2100      	movs	r1, #0
 800deee:	4618      	mov	r0, r3
 800def0:	f000 fe64 	bl	800ebbc <prvAddCurrentTaskToDelayedList>
 800def4:	f000 f8bc 	bl	800e070 <xTaskResumeAll>
 800def8:	61b8      	str	r0, [r7, #24]
 800defa:	69bb      	ldr	r3, [r7, #24]
 800defc:	2b00      	cmp	r3, #0
 800defe:	d107      	bne.n	800df10 <vTaskDelayUntil+0xec>
 800df00:	4b07      	ldr	r3, [pc, #28]	; (800df20 <vTaskDelayUntil+0xfc>)
 800df02:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df06:	601a      	str	r2, [r3, #0]
 800df08:	f3bf 8f4f 	dsb	sy
 800df0c:	f3bf 8f6f 	isb	sy
 800df10:	bf00      	nop
 800df12:	3728      	adds	r7, #40	; 0x28
 800df14:	46bd      	mov	sp, r7
 800df16:	bd80      	pop	{r7, pc}
 800df18:	20001a44 	.word	0x20001a44
 800df1c:	20001a20 	.word	0x20001a20
 800df20:	e000ed04 	.word	0xe000ed04

0800df24 <vTaskDelay>:
 800df24:	b580      	push	{r7, lr}
 800df26:	b084      	sub	sp, #16
 800df28:	af00      	add	r7, sp, #0
 800df2a:	6078      	str	r0, [r7, #4]
 800df2c:	2300      	movs	r3, #0
 800df2e:	60fb      	str	r3, [r7, #12]
 800df30:	687b      	ldr	r3, [r7, #4]
 800df32:	2b00      	cmp	r3, #0
 800df34:	d018      	beq.n	800df68 <vTaskDelay+0x44>
 800df36:	4b14      	ldr	r3, [pc, #80]	; (800df88 <vTaskDelay+0x64>)
 800df38:	681b      	ldr	r3, [r3, #0]
 800df3a:	2b00      	cmp	r3, #0
 800df3c:	d00b      	beq.n	800df56 <vTaskDelay+0x32>
 800df3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df42:	b672      	cpsid	i
 800df44:	f383 8811 	msr	BASEPRI, r3
 800df48:	f3bf 8f6f 	isb	sy
 800df4c:	f3bf 8f4f 	dsb	sy
 800df50:	b662      	cpsie	i
 800df52:	60bb      	str	r3, [r7, #8]
 800df54:	e7fe      	b.n	800df54 <vTaskDelay+0x30>
 800df56:	f000 f87d 	bl	800e054 <vTaskSuspendAll>
 800df5a:	2100      	movs	r1, #0
 800df5c:	6878      	ldr	r0, [r7, #4]
 800df5e:	f000 fe2d 	bl	800ebbc <prvAddCurrentTaskToDelayedList>
 800df62:	f000 f885 	bl	800e070 <xTaskResumeAll>
 800df66:	60f8      	str	r0, [r7, #12]
 800df68:	68fb      	ldr	r3, [r7, #12]
 800df6a:	2b00      	cmp	r3, #0
 800df6c:	d107      	bne.n	800df7e <vTaskDelay+0x5a>
 800df6e:	4b07      	ldr	r3, [pc, #28]	; (800df8c <vTaskDelay+0x68>)
 800df70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df74:	601a      	str	r2, [r3, #0]
 800df76:	f3bf 8f4f 	dsb	sy
 800df7a:	f3bf 8f6f 	isb	sy
 800df7e:	bf00      	nop
 800df80:	3710      	adds	r7, #16
 800df82:	46bd      	mov	sp, r7
 800df84:	bd80      	pop	{r7, pc}
 800df86:	bf00      	nop
 800df88:	20001a44 	.word	0x20001a44
 800df8c:	e000ed04 	.word	0xe000ed04

0800df90 <vTaskStartScheduler>:
 800df90:	b580      	push	{r7, lr}
 800df92:	b08a      	sub	sp, #40	; 0x28
 800df94:	af04      	add	r7, sp, #16
 800df96:	2300      	movs	r3, #0
 800df98:	60bb      	str	r3, [r7, #8]
 800df9a:	2300      	movs	r3, #0
 800df9c:	607b      	str	r3, [r7, #4]
 800df9e:	463a      	mov	r2, r7
 800dfa0:	1d39      	adds	r1, r7, #4
 800dfa2:	f107 0308 	add.w	r3, r7, #8
 800dfa6:	4618      	mov	r0, r3
 800dfa8:	f7f2 fb1c 	bl	80005e4 <vApplicationGetIdleTaskMemory>
 800dfac:	6839      	ldr	r1, [r7, #0]
 800dfae:	687b      	ldr	r3, [r7, #4]
 800dfb0:	68ba      	ldr	r2, [r7, #8]
 800dfb2:	9202      	str	r2, [sp, #8]
 800dfb4:	9301      	str	r3, [sp, #4]
 800dfb6:	2300      	movs	r3, #0
 800dfb8:	9300      	str	r3, [sp, #0]
 800dfba:	2300      	movs	r3, #0
 800dfbc:	460a      	mov	r2, r1
 800dfbe:	491f      	ldr	r1, [pc, #124]	; (800e03c <vTaskStartScheduler+0xac>)
 800dfc0:	481f      	ldr	r0, [pc, #124]	; (800e040 <vTaskStartScheduler+0xb0>)
 800dfc2:	f7ff fd8d 	bl	800dae0 <xTaskCreateStatic>
 800dfc6:	4602      	mov	r2, r0
 800dfc8:	4b1e      	ldr	r3, [pc, #120]	; (800e044 <vTaskStartScheduler+0xb4>)
 800dfca:	601a      	str	r2, [r3, #0]
 800dfcc:	4b1d      	ldr	r3, [pc, #116]	; (800e044 <vTaskStartScheduler+0xb4>)
 800dfce:	681b      	ldr	r3, [r3, #0]
 800dfd0:	2b00      	cmp	r3, #0
 800dfd2:	d002      	beq.n	800dfda <vTaskStartScheduler+0x4a>
 800dfd4:	2301      	movs	r3, #1
 800dfd6:	617b      	str	r3, [r7, #20]
 800dfd8:	e001      	b.n	800dfde <vTaskStartScheduler+0x4e>
 800dfda:	2300      	movs	r3, #0
 800dfdc:	617b      	str	r3, [r7, #20]
 800dfde:	697b      	ldr	r3, [r7, #20]
 800dfe0:	2b01      	cmp	r3, #1
 800dfe2:	d117      	bne.n	800e014 <vTaskStartScheduler+0x84>
 800dfe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfe8:	b672      	cpsid	i
 800dfea:	f383 8811 	msr	BASEPRI, r3
 800dfee:	f3bf 8f6f 	isb	sy
 800dff2:	f3bf 8f4f 	dsb	sy
 800dff6:	b662      	cpsie	i
 800dff8:	613b      	str	r3, [r7, #16]
 800dffa:	4b13      	ldr	r3, [pc, #76]	; (800e048 <vTaskStartScheduler+0xb8>)
 800dffc:	f04f 32ff 	mov.w	r2, #4294967295
 800e000:	601a      	str	r2, [r3, #0]
 800e002:	4b12      	ldr	r3, [pc, #72]	; (800e04c <vTaskStartScheduler+0xbc>)
 800e004:	2201      	movs	r2, #1
 800e006:	601a      	str	r2, [r3, #0]
 800e008:	4b11      	ldr	r3, [pc, #68]	; (800e050 <vTaskStartScheduler+0xc0>)
 800e00a:	2200      	movs	r2, #0
 800e00c:	601a      	str	r2, [r3, #0]
 800e00e:	f000 fec7 	bl	800eda0 <xPortStartScheduler>
 800e012:	e00f      	b.n	800e034 <vTaskStartScheduler+0xa4>
 800e014:	697b      	ldr	r3, [r7, #20]
 800e016:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e01a:	d10b      	bne.n	800e034 <vTaskStartScheduler+0xa4>
 800e01c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e020:	b672      	cpsid	i
 800e022:	f383 8811 	msr	BASEPRI, r3
 800e026:	f3bf 8f6f 	isb	sy
 800e02a:	f3bf 8f4f 	dsb	sy
 800e02e:	b662      	cpsie	i
 800e030:	60fb      	str	r3, [r7, #12]
 800e032:	e7fe      	b.n	800e032 <vTaskStartScheduler+0xa2>
 800e034:	bf00      	nop
 800e036:	3718      	adds	r7, #24
 800e038:	46bd      	mov	sp, r7
 800e03a:	bd80      	pop	{r7, pc}
 800e03c:	0800fe74 	.word	0x0800fe74
 800e040:	0800e665 	.word	0x0800e665
 800e044:	20001a40 	.word	0x20001a40
 800e048:	20001a3c 	.word	0x20001a3c
 800e04c:	20001a28 	.word	0x20001a28
 800e050:	20001a20 	.word	0x20001a20

0800e054 <vTaskSuspendAll>:
 800e054:	b480      	push	{r7}
 800e056:	af00      	add	r7, sp, #0
 800e058:	4b04      	ldr	r3, [pc, #16]	; (800e06c <vTaskSuspendAll+0x18>)
 800e05a:	681b      	ldr	r3, [r3, #0]
 800e05c:	3301      	adds	r3, #1
 800e05e:	4a03      	ldr	r2, [pc, #12]	; (800e06c <vTaskSuspendAll+0x18>)
 800e060:	6013      	str	r3, [r2, #0]
 800e062:	bf00      	nop
 800e064:	46bd      	mov	sp, r7
 800e066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e06a:	4770      	bx	lr
 800e06c:	20001a44 	.word	0x20001a44

0800e070 <xTaskResumeAll>:
 800e070:	b580      	push	{r7, lr}
 800e072:	b084      	sub	sp, #16
 800e074:	af00      	add	r7, sp, #0
 800e076:	2300      	movs	r3, #0
 800e078:	60fb      	str	r3, [r7, #12]
 800e07a:	2300      	movs	r3, #0
 800e07c:	60bb      	str	r3, [r7, #8]
 800e07e:	4b42      	ldr	r3, [pc, #264]	; (800e188 <xTaskResumeAll+0x118>)
 800e080:	681b      	ldr	r3, [r3, #0]
 800e082:	2b00      	cmp	r3, #0
 800e084:	d10b      	bne.n	800e09e <xTaskResumeAll+0x2e>
 800e086:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e08a:	b672      	cpsid	i
 800e08c:	f383 8811 	msr	BASEPRI, r3
 800e090:	f3bf 8f6f 	isb	sy
 800e094:	f3bf 8f4f 	dsb	sy
 800e098:	b662      	cpsie	i
 800e09a:	603b      	str	r3, [r7, #0]
 800e09c:	e7fe      	b.n	800e09c <xTaskResumeAll+0x2c>
 800e09e:	f000 fefb 	bl	800ee98 <vPortEnterCritical>
 800e0a2:	4b39      	ldr	r3, [pc, #228]	; (800e188 <xTaskResumeAll+0x118>)
 800e0a4:	681b      	ldr	r3, [r3, #0]
 800e0a6:	3b01      	subs	r3, #1
 800e0a8:	4a37      	ldr	r2, [pc, #220]	; (800e188 <xTaskResumeAll+0x118>)
 800e0aa:	6013      	str	r3, [r2, #0]
 800e0ac:	4b36      	ldr	r3, [pc, #216]	; (800e188 <xTaskResumeAll+0x118>)
 800e0ae:	681b      	ldr	r3, [r3, #0]
 800e0b0:	2b00      	cmp	r3, #0
 800e0b2:	d161      	bne.n	800e178 <xTaskResumeAll+0x108>
 800e0b4:	4b35      	ldr	r3, [pc, #212]	; (800e18c <xTaskResumeAll+0x11c>)
 800e0b6:	681b      	ldr	r3, [r3, #0]
 800e0b8:	2b00      	cmp	r3, #0
 800e0ba:	d05d      	beq.n	800e178 <xTaskResumeAll+0x108>
 800e0bc:	e02e      	b.n	800e11c <xTaskResumeAll+0xac>
 800e0be:	4b34      	ldr	r3, [pc, #208]	; (800e190 <xTaskResumeAll+0x120>)
 800e0c0:	68db      	ldr	r3, [r3, #12]
 800e0c2:	68db      	ldr	r3, [r3, #12]
 800e0c4:	60fb      	str	r3, [r7, #12]
 800e0c6:	68fb      	ldr	r3, [r7, #12]
 800e0c8:	3318      	adds	r3, #24
 800e0ca:	4618      	mov	r0, r3
 800e0cc:	f7ff f835 	bl	800d13a <uxListRemove>
 800e0d0:	68fb      	ldr	r3, [r7, #12]
 800e0d2:	3304      	adds	r3, #4
 800e0d4:	4618      	mov	r0, r3
 800e0d6:	f7ff f830 	bl	800d13a <uxListRemove>
 800e0da:	68fb      	ldr	r3, [r7, #12]
 800e0dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e0de:	2201      	movs	r2, #1
 800e0e0:	409a      	lsls	r2, r3
 800e0e2:	4b2c      	ldr	r3, [pc, #176]	; (800e194 <xTaskResumeAll+0x124>)
 800e0e4:	681b      	ldr	r3, [r3, #0]
 800e0e6:	4313      	orrs	r3, r2
 800e0e8:	4a2a      	ldr	r2, [pc, #168]	; (800e194 <xTaskResumeAll+0x124>)
 800e0ea:	6013      	str	r3, [r2, #0]
 800e0ec:	68fb      	ldr	r3, [r7, #12]
 800e0ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e0f0:	4613      	mov	r3, r2
 800e0f2:	009b      	lsls	r3, r3, #2
 800e0f4:	4413      	add	r3, r2
 800e0f6:	009b      	lsls	r3, r3, #2
 800e0f8:	4a27      	ldr	r2, [pc, #156]	; (800e198 <xTaskResumeAll+0x128>)
 800e0fa:	441a      	add	r2, r3
 800e0fc:	68fb      	ldr	r3, [r7, #12]
 800e0fe:	3304      	adds	r3, #4
 800e100:	4619      	mov	r1, r3
 800e102:	4610      	mov	r0, r2
 800e104:	f7fe ffbc 	bl	800d080 <vListInsertEnd>
 800e108:	68fb      	ldr	r3, [r7, #12]
 800e10a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e10c:	4b23      	ldr	r3, [pc, #140]	; (800e19c <xTaskResumeAll+0x12c>)
 800e10e:	681b      	ldr	r3, [r3, #0]
 800e110:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e112:	429a      	cmp	r2, r3
 800e114:	d302      	bcc.n	800e11c <xTaskResumeAll+0xac>
 800e116:	4b22      	ldr	r3, [pc, #136]	; (800e1a0 <xTaskResumeAll+0x130>)
 800e118:	2201      	movs	r2, #1
 800e11a:	601a      	str	r2, [r3, #0]
 800e11c:	4b1c      	ldr	r3, [pc, #112]	; (800e190 <xTaskResumeAll+0x120>)
 800e11e:	681b      	ldr	r3, [r3, #0]
 800e120:	2b00      	cmp	r3, #0
 800e122:	d1cc      	bne.n	800e0be <xTaskResumeAll+0x4e>
 800e124:	68fb      	ldr	r3, [r7, #12]
 800e126:	2b00      	cmp	r3, #0
 800e128:	d001      	beq.n	800e12e <xTaskResumeAll+0xbe>
 800e12a:	f000 fb51 	bl	800e7d0 <prvResetNextTaskUnblockTime>
 800e12e:	4b1d      	ldr	r3, [pc, #116]	; (800e1a4 <xTaskResumeAll+0x134>)
 800e130:	681b      	ldr	r3, [r3, #0]
 800e132:	607b      	str	r3, [r7, #4]
 800e134:	687b      	ldr	r3, [r7, #4]
 800e136:	2b00      	cmp	r3, #0
 800e138:	d010      	beq.n	800e15c <xTaskResumeAll+0xec>
 800e13a:	f000 f847 	bl	800e1cc <xTaskIncrementTick>
 800e13e:	4603      	mov	r3, r0
 800e140:	2b00      	cmp	r3, #0
 800e142:	d002      	beq.n	800e14a <xTaskResumeAll+0xda>
 800e144:	4b16      	ldr	r3, [pc, #88]	; (800e1a0 <xTaskResumeAll+0x130>)
 800e146:	2201      	movs	r2, #1
 800e148:	601a      	str	r2, [r3, #0]
 800e14a:	687b      	ldr	r3, [r7, #4]
 800e14c:	3b01      	subs	r3, #1
 800e14e:	607b      	str	r3, [r7, #4]
 800e150:	687b      	ldr	r3, [r7, #4]
 800e152:	2b00      	cmp	r3, #0
 800e154:	d1f1      	bne.n	800e13a <xTaskResumeAll+0xca>
 800e156:	4b13      	ldr	r3, [pc, #76]	; (800e1a4 <xTaskResumeAll+0x134>)
 800e158:	2200      	movs	r2, #0
 800e15a:	601a      	str	r2, [r3, #0]
 800e15c:	4b10      	ldr	r3, [pc, #64]	; (800e1a0 <xTaskResumeAll+0x130>)
 800e15e:	681b      	ldr	r3, [r3, #0]
 800e160:	2b00      	cmp	r3, #0
 800e162:	d009      	beq.n	800e178 <xTaskResumeAll+0x108>
 800e164:	2301      	movs	r3, #1
 800e166:	60bb      	str	r3, [r7, #8]
 800e168:	4b0f      	ldr	r3, [pc, #60]	; (800e1a8 <xTaskResumeAll+0x138>)
 800e16a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e16e:	601a      	str	r2, [r3, #0]
 800e170:	f3bf 8f4f 	dsb	sy
 800e174:	f3bf 8f6f 	isb	sy
 800e178:	f000 fec0 	bl	800eefc <vPortExitCritical>
 800e17c:	68bb      	ldr	r3, [r7, #8]
 800e17e:	4618      	mov	r0, r3
 800e180:	3710      	adds	r7, #16
 800e182:	46bd      	mov	sp, r7
 800e184:	bd80      	pop	{r7, pc}
 800e186:	bf00      	nop
 800e188:	20001a44 	.word	0x20001a44
 800e18c:	20001a1c 	.word	0x20001a1c
 800e190:	200019dc 	.word	0x200019dc
 800e194:	20001a24 	.word	0x20001a24
 800e198:	20001920 	.word	0x20001920
 800e19c:	2000191c 	.word	0x2000191c
 800e1a0:	20001a30 	.word	0x20001a30
 800e1a4:	20001a2c 	.word	0x20001a2c
 800e1a8:	e000ed04 	.word	0xe000ed04

0800e1ac <xTaskGetTickCount>:
 800e1ac:	b480      	push	{r7}
 800e1ae:	b083      	sub	sp, #12
 800e1b0:	af00      	add	r7, sp, #0
 800e1b2:	4b05      	ldr	r3, [pc, #20]	; (800e1c8 <xTaskGetTickCount+0x1c>)
 800e1b4:	681b      	ldr	r3, [r3, #0]
 800e1b6:	607b      	str	r3, [r7, #4]
 800e1b8:	687b      	ldr	r3, [r7, #4]
 800e1ba:	4618      	mov	r0, r3
 800e1bc:	370c      	adds	r7, #12
 800e1be:	46bd      	mov	sp, r7
 800e1c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1c4:	4770      	bx	lr
 800e1c6:	bf00      	nop
 800e1c8:	20001a20 	.word	0x20001a20

0800e1cc <xTaskIncrementTick>:
 800e1cc:	b580      	push	{r7, lr}
 800e1ce:	b086      	sub	sp, #24
 800e1d0:	af00      	add	r7, sp, #0
 800e1d2:	2300      	movs	r3, #0
 800e1d4:	617b      	str	r3, [r7, #20]
 800e1d6:	4b4f      	ldr	r3, [pc, #316]	; (800e314 <xTaskIncrementTick+0x148>)
 800e1d8:	681b      	ldr	r3, [r3, #0]
 800e1da:	2b00      	cmp	r3, #0
 800e1dc:	f040 8089 	bne.w	800e2f2 <xTaskIncrementTick+0x126>
 800e1e0:	4b4d      	ldr	r3, [pc, #308]	; (800e318 <xTaskIncrementTick+0x14c>)
 800e1e2:	681b      	ldr	r3, [r3, #0]
 800e1e4:	3301      	adds	r3, #1
 800e1e6:	613b      	str	r3, [r7, #16]
 800e1e8:	4a4b      	ldr	r2, [pc, #300]	; (800e318 <xTaskIncrementTick+0x14c>)
 800e1ea:	693b      	ldr	r3, [r7, #16]
 800e1ec:	6013      	str	r3, [r2, #0]
 800e1ee:	693b      	ldr	r3, [r7, #16]
 800e1f0:	2b00      	cmp	r3, #0
 800e1f2:	d121      	bne.n	800e238 <xTaskIncrementTick+0x6c>
 800e1f4:	4b49      	ldr	r3, [pc, #292]	; (800e31c <xTaskIncrementTick+0x150>)
 800e1f6:	681b      	ldr	r3, [r3, #0]
 800e1f8:	681b      	ldr	r3, [r3, #0]
 800e1fa:	2b00      	cmp	r3, #0
 800e1fc:	d00b      	beq.n	800e216 <xTaskIncrementTick+0x4a>
 800e1fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e202:	b672      	cpsid	i
 800e204:	f383 8811 	msr	BASEPRI, r3
 800e208:	f3bf 8f6f 	isb	sy
 800e20c:	f3bf 8f4f 	dsb	sy
 800e210:	b662      	cpsie	i
 800e212:	603b      	str	r3, [r7, #0]
 800e214:	e7fe      	b.n	800e214 <xTaskIncrementTick+0x48>
 800e216:	4b41      	ldr	r3, [pc, #260]	; (800e31c <xTaskIncrementTick+0x150>)
 800e218:	681b      	ldr	r3, [r3, #0]
 800e21a:	60fb      	str	r3, [r7, #12]
 800e21c:	4b40      	ldr	r3, [pc, #256]	; (800e320 <xTaskIncrementTick+0x154>)
 800e21e:	681b      	ldr	r3, [r3, #0]
 800e220:	4a3e      	ldr	r2, [pc, #248]	; (800e31c <xTaskIncrementTick+0x150>)
 800e222:	6013      	str	r3, [r2, #0]
 800e224:	4a3e      	ldr	r2, [pc, #248]	; (800e320 <xTaskIncrementTick+0x154>)
 800e226:	68fb      	ldr	r3, [r7, #12]
 800e228:	6013      	str	r3, [r2, #0]
 800e22a:	4b3e      	ldr	r3, [pc, #248]	; (800e324 <xTaskIncrementTick+0x158>)
 800e22c:	681b      	ldr	r3, [r3, #0]
 800e22e:	3301      	adds	r3, #1
 800e230:	4a3c      	ldr	r2, [pc, #240]	; (800e324 <xTaskIncrementTick+0x158>)
 800e232:	6013      	str	r3, [r2, #0]
 800e234:	f000 facc 	bl	800e7d0 <prvResetNextTaskUnblockTime>
 800e238:	4b3b      	ldr	r3, [pc, #236]	; (800e328 <xTaskIncrementTick+0x15c>)
 800e23a:	681b      	ldr	r3, [r3, #0]
 800e23c:	693a      	ldr	r2, [r7, #16]
 800e23e:	429a      	cmp	r2, r3
 800e240:	d348      	bcc.n	800e2d4 <xTaskIncrementTick+0x108>
 800e242:	4b36      	ldr	r3, [pc, #216]	; (800e31c <xTaskIncrementTick+0x150>)
 800e244:	681b      	ldr	r3, [r3, #0]
 800e246:	681b      	ldr	r3, [r3, #0]
 800e248:	2b00      	cmp	r3, #0
 800e24a:	d104      	bne.n	800e256 <xTaskIncrementTick+0x8a>
 800e24c:	4b36      	ldr	r3, [pc, #216]	; (800e328 <xTaskIncrementTick+0x15c>)
 800e24e:	f04f 32ff 	mov.w	r2, #4294967295
 800e252:	601a      	str	r2, [r3, #0]
 800e254:	e03e      	b.n	800e2d4 <xTaskIncrementTick+0x108>
 800e256:	4b31      	ldr	r3, [pc, #196]	; (800e31c <xTaskIncrementTick+0x150>)
 800e258:	681b      	ldr	r3, [r3, #0]
 800e25a:	68db      	ldr	r3, [r3, #12]
 800e25c:	68db      	ldr	r3, [r3, #12]
 800e25e:	60bb      	str	r3, [r7, #8]
 800e260:	68bb      	ldr	r3, [r7, #8]
 800e262:	685b      	ldr	r3, [r3, #4]
 800e264:	607b      	str	r3, [r7, #4]
 800e266:	693a      	ldr	r2, [r7, #16]
 800e268:	687b      	ldr	r3, [r7, #4]
 800e26a:	429a      	cmp	r2, r3
 800e26c:	d203      	bcs.n	800e276 <xTaskIncrementTick+0xaa>
 800e26e:	4a2e      	ldr	r2, [pc, #184]	; (800e328 <xTaskIncrementTick+0x15c>)
 800e270:	687b      	ldr	r3, [r7, #4]
 800e272:	6013      	str	r3, [r2, #0]
 800e274:	e02e      	b.n	800e2d4 <xTaskIncrementTick+0x108>
 800e276:	68bb      	ldr	r3, [r7, #8]
 800e278:	3304      	adds	r3, #4
 800e27a:	4618      	mov	r0, r3
 800e27c:	f7fe ff5d 	bl	800d13a <uxListRemove>
 800e280:	68bb      	ldr	r3, [r7, #8]
 800e282:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e284:	2b00      	cmp	r3, #0
 800e286:	d004      	beq.n	800e292 <xTaskIncrementTick+0xc6>
 800e288:	68bb      	ldr	r3, [r7, #8]
 800e28a:	3318      	adds	r3, #24
 800e28c:	4618      	mov	r0, r3
 800e28e:	f7fe ff54 	bl	800d13a <uxListRemove>
 800e292:	68bb      	ldr	r3, [r7, #8]
 800e294:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e296:	2201      	movs	r2, #1
 800e298:	409a      	lsls	r2, r3
 800e29a:	4b24      	ldr	r3, [pc, #144]	; (800e32c <xTaskIncrementTick+0x160>)
 800e29c:	681b      	ldr	r3, [r3, #0]
 800e29e:	4313      	orrs	r3, r2
 800e2a0:	4a22      	ldr	r2, [pc, #136]	; (800e32c <xTaskIncrementTick+0x160>)
 800e2a2:	6013      	str	r3, [r2, #0]
 800e2a4:	68bb      	ldr	r3, [r7, #8]
 800e2a6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e2a8:	4613      	mov	r3, r2
 800e2aa:	009b      	lsls	r3, r3, #2
 800e2ac:	4413      	add	r3, r2
 800e2ae:	009b      	lsls	r3, r3, #2
 800e2b0:	4a1f      	ldr	r2, [pc, #124]	; (800e330 <xTaskIncrementTick+0x164>)
 800e2b2:	441a      	add	r2, r3
 800e2b4:	68bb      	ldr	r3, [r7, #8]
 800e2b6:	3304      	adds	r3, #4
 800e2b8:	4619      	mov	r1, r3
 800e2ba:	4610      	mov	r0, r2
 800e2bc:	f7fe fee0 	bl	800d080 <vListInsertEnd>
 800e2c0:	68bb      	ldr	r3, [r7, #8]
 800e2c2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e2c4:	4b1b      	ldr	r3, [pc, #108]	; (800e334 <xTaskIncrementTick+0x168>)
 800e2c6:	681b      	ldr	r3, [r3, #0]
 800e2c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e2ca:	429a      	cmp	r2, r3
 800e2cc:	d3b9      	bcc.n	800e242 <xTaskIncrementTick+0x76>
 800e2ce:	2301      	movs	r3, #1
 800e2d0:	617b      	str	r3, [r7, #20]
 800e2d2:	e7b6      	b.n	800e242 <xTaskIncrementTick+0x76>
 800e2d4:	4b17      	ldr	r3, [pc, #92]	; (800e334 <xTaskIncrementTick+0x168>)
 800e2d6:	681b      	ldr	r3, [r3, #0]
 800e2d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e2da:	4915      	ldr	r1, [pc, #84]	; (800e330 <xTaskIncrementTick+0x164>)
 800e2dc:	4613      	mov	r3, r2
 800e2de:	009b      	lsls	r3, r3, #2
 800e2e0:	4413      	add	r3, r2
 800e2e2:	009b      	lsls	r3, r3, #2
 800e2e4:	440b      	add	r3, r1
 800e2e6:	681b      	ldr	r3, [r3, #0]
 800e2e8:	2b01      	cmp	r3, #1
 800e2ea:	d907      	bls.n	800e2fc <xTaskIncrementTick+0x130>
 800e2ec:	2301      	movs	r3, #1
 800e2ee:	617b      	str	r3, [r7, #20]
 800e2f0:	e004      	b.n	800e2fc <xTaskIncrementTick+0x130>
 800e2f2:	4b11      	ldr	r3, [pc, #68]	; (800e338 <xTaskIncrementTick+0x16c>)
 800e2f4:	681b      	ldr	r3, [r3, #0]
 800e2f6:	3301      	adds	r3, #1
 800e2f8:	4a0f      	ldr	r2, [pc, #60]	; (800e338 <xTaskIncrementTick+0x16c>)
 800e2fa:	6013      	str	r3, [r2, #0]
 800e2fc:	4b0f      	ldr	r3, [pc, #60]	; (800e33c <xTaskIncrementTick+0x170>)
 800e2fe:	681b      	ldr	r3, [r3, #0]
 800e300:	2b00      	cmp	r3, #0
 800e302:	d001      	beq.n	800e308 <xTaskIncrementTick+0x13c>
 800e304:	2301      	movs	r3, #1
 800e306:	617b      	str	r3, [r7, #20]
 800e308:	697b      	ldr	r3, [r7, #20]
 800e30a:	4618      	mov	r0, r3
 800e30c:	3718      	adds	r7, #24
 800e30e:	46bd      	mov	sp, r7
 800e310:	bd80      	pop	{r7, pc}
 800e312:	bf00      	nop
 800e314:	20001a44 	.word	0x20001a44
 800e318:	20001a20 	.word	0x20001a20
 800e31c:	200019d4 	.word	0x200019d4
 800e320:	200019d8 	.word	0x200019d8
 800e324:	20001a34 	.word	0x20001a34
 800e328:	20001a3c 	.word	0x20001a3c
 800e32c:	20001a24 	.word	0x20001a24
 800e330:	20001920 	.word	0x20001920
 800e334:	2000191c 	.word	0x2000191c
 800e338:	20001a2c 	.word	0x20001a2c
 800e33c:	20001a30 	.word	0x20001a30

0800e340 <vTaskSwitchContext>:
 800e340:	b580      	push	{r7, lr}
 800e342:	b088      	sub	sp, #32
 800e344:	af00      	add	r7, sp, #0
 800e346:	4b3a      	ldr	r3, [pc, #232]	; (800e430 <vTaskSwitchContext+0xf0>)
 800e348:	681b      	ldr	r3, [r3, #0]
 800e34a:	2b00      	cmp	r3, #0
 800e34c:	d003      	beq.n	800e356 <vTaskSwitchContext+0x16>
 800e34e:	4b39      	ldr	r3, [pc, #228]	; (800e434 <vTaskSwitchContext+0xf4>)
 800e350:	2201      	movs	r2, #1
 800e352:	601a      	str	r2, [r3, #0]
 800e354:	e067      	b.n	800e426 <vTaskSwitchContext+0xe6>
 800e356:	4b37      	ldr	r3, [pc, #220]	; (800e434 <vTaskSwitchContext+0xf4>)
 800e358:	2200      	movs	r2, #0
 800e35a:	601a      	str	r2, [r3, #0]
 800e35c:	4b36      	ldr	r3, [pc, #216]	; (800e438 <vTaskSwitchContext+0xf8>)
 800e35e:	681b      	ldr	r3, [r3, #0]
 800e360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e362:	61fb      	str	r3, [r7, #28]
 800e364:	f04f 33a5 	mov.w	r3, #2779096485	; 0xa5a5a5a5
 800e368:	61bb      	str	r3, [r7, #24]
 800e36a:	69fb      	ldr	r3, [r7, #28]
 800e36c:	681b      	ldr	r3, [r3, #0]
 800e36e:	69ba      	ldr	r2, [r7, #24]
 800e370:	429a      	cmp	r2, r3
 800e372:	d111      	bne.n	800e398 <vTaskSwitchContext+0x58>
 800e374:	69fb      	ldr	r3, [r7, #28]
 800e376:	3304      	adds	r3, #4
 800e378:	681b      	ldr	r3, [r3, #0]
 800e37a:	69ba      	ldr	r2, [r7, #24]
 800e37c:	429a      	cmp	r2, r3
 800e37e:	d10b      	bne.n	800e398 <vTaskSwitchContext+0x58>
 800e380:	69fb      	ldr	r3, [r7, #28]
 800e382:	3308      	adds	r3, #8
 800e384:	681b      	ldr	r3, [r3, #0]
 800e386:	69ba      	ldr	r2, [r7, #24]
 800e388:	429a      	cmp	r2, r3
 800e38a:	d105      	bne.n	800e398 <vTaskSwitchContext+0x58>
 800e38c:	69fb      	ldr	r3, [r7, #28]
 800e38e:	330c      	adds	r3, #12
 800e390:	681b      	ldr	r3, [r3, #0]
 800e392:	69ba      	ldr	r2, [r7, #24]
 800e394:	429a      	cmp	r2, r3
 800e396:	d008      	beq.n	800e3aa <vTaskSwitchContext+0x6a>
 800e398:	4b27      	ldr	r3, [pc, #156]	; (800e438 <vTaskSwitchContext+0xf8>)
 800e39a:	681a      	ldr	r2, [r3, #0]
 800e39c:	4b26      	ldr	r3, [pc, #152]	; (800e438 <vTaskSwitchContext+0xf8>)
 800e39e:	681b      	ldr	r3, [r3, #0]
 800e3a0:	3334      	adds	r3, #52	; 0x34
 800e3a2:	4619      	mov	r1, r3
 800e3a4:	4610      	mov	r0, r2
 800e3a6:	f7f2 f90a 	bl	80005be <vApplicationStackOverflowHook>
 800e3aa:	4b24      	ldr	r3, [pc, #144]	; (800e43c <vTaskSwitchContext+0xfc>)
 800e3ac:	681b      	ldr	r3, [r3, #0]
 800e3ae:	60fb      	str	r3, [r7, #12]
 800e3b0:	68fb      	ldr	r3, [r7, #12]
 800e3b2:	fab3 f383 	clz	r3, r3
 800e3b6:	72fb      	strb	r3, [r7, #11]
 800e3b8:	7afb      	ldrb	r3, [r7, #11]
 800e3ba:	f1c3 031f 	rsb	r3, r3, #31
 800e3be:	617b      	str	r3, [r7, #20]
 800e3c0:	491f      	ldr	r1, [pc, #124]	; (800e440 <vTaskSwitchContext+0x100>)
 800e3c2:	697a      	ldr	r2, [r7, #20]
 800e3c4:	4613      	mov	r3, r2
 800e3c6:	009b      	lsls	r3, r3, #2
 800e3c8:	4413      	add	r3, r2
 800e3ca:	009b      	lsls	r3, r3, #2
 800e3cc:	440b      	add	r3, r1
 800e3ce:	681b      	ldr	r3, [r3, #0]
 800e3d0:	2b00      	cmp	r3, #0
 800e3d2:	d10b      	bne.n	800e3ec <vTaskSwitchContext+0xac>
 800e3d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3d8:	b672      	cpsid	i
 800e3da:	f383 8811 	msr	BASEPRI, r3
 800e3de:	f3bf 8f6f 	isb	sy
 800e3e2:	f3bf 8f4f 	dsb	sy
 800e3e6:	b662      	cpsie	i
 800e3e8:	607b      	str	r3, [r7, #4]
 800e3ea:	e7fe      	b.n	800e3ea <vTaskSwitchContext+0xaa>
 800e3ec:	697a      	ldr	r2, [r7, #20]
 800e3ee:	4613      	mov	r3, r2
 800e3f0:	009b      	lsls	r3, r3, #2
 800e3f2:	4413      	add	r3, r2
 800e3f4:	009b      	lsls	r3, r3, #2
 800e3f6:	4a12      	ldr	r2, [pc, #72]	; (800e440 <vTaskSwitchContext+0x100>)
 800e3f8:	4413      	add	r3, r2
 800e3fa:	613b      	str	r3, [r7, #16]
 800e3fc:	693b      	ldr	r3, [r7, #16]
 800e3fe:	685b      	ldr	r3, [r3, #4]
 800e400:	685a      	ldr	r2, [r3, #4]
 800e402:	693b      	ldr	r3, [r7, #16]
 800e404:	605a      	str	r2, [r3, #4]
 800e406:	693b      	ldr	r3, [r7, #16]
 800e408:	685a      	ldr	r2, [r3, #4]
 800e40a:	693b      	ldr	r3, [r7, #16]
 800e40c:	3308      	adds	r3, #8
 800e40e:	429a      	cmp	r2, r3
 800e410:	d104      	bne.n	800e41c <vTaskSwitchContext+0xdc>
 800e412:	693b      	ldr	r3, [r7, #16]
 800e414:	685b      	ldr	r3, [r3, #4]
 800e416:	685a      	ldr	r2, [r3, #4]
 800e418:	693b      	ldr	r3, [r7, #16]
 800e41a:	605a      	str	r2, [r3, #4]
 800e41c:	693b      	ldr	r3, [r7, #16]
 800e41e:	685b      	ldr	r3, [r3, #4]
 800e420:	68db      	ldr	r3, [r3, #12]
 800e422:	4a05      	ldr	r2, [pc, #20]	; (800e438 <vTaskSwitchContext+0xf8>)
 800e424:	6013      	str	r3, [r2, #0]
 800e426:	bf00      	nop
 800e428:	3720      	adds	r7, #32
 800e42a:	46bd      	mov	sp, r7
 800e42c:	bd80      	pop	{r7, pc}
 800e42e:	bf00      	nop
 800e430:	20001a44 	.word	0x20001a44
 800e434:	20001a30 	.word	0x20001a30
 800e438:	2000191c 	.word	0x2000191c
 800e43c:	20001a24 	.word	0x20001a24
 800e440:	20001920 	.word	0x20001920

0800e444 <vTaskPlaceOnEventList>:
 800e444:	b580      	push	{r7, lr}
 800e446:	b084      	sub	sp, #16
 800e448:	af00      	add	r7, sp, #0
 800e44a:	6078      	str	r0, [r7, #4]
 800e44c:	6039      	str	r1, [r7, #0]
 800e44e:	687b      	ldr	r3, [r7, #4]
 800e450:	2b00      	cmp	r3, #0
 800e452:	d10b      	bne.n	800e46c <vTaskPlaceOnEventList+0x28>
 800e454:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e458:	b672      	cpsid	i
 800e45a:	f383 8811 	msr	BASEPRI, r3
 800e45e:	f3bf 8f6f 	isb	sy
 800e462:	f3bf 8f4f 	dsb	sy
 800e466:	b662      	cpsie	i
 800e468:	60fb      	str	r3, [r7, #12]
 800e46a:	e7fe      	b.n	800e46a <vTaskPlaceOnEventList+0x26>
 800e46c:	4b07      	ldr	r3, [pc, #28]	; (800e48c <vTaskPlaceOnEventList+0x48>)
 800e46e:	681b      	ldr	r3, [r3, #0]
 800e470:	3318      	adds	r3, #24
 800e472:	4619      	mov	r1, r3
 800e474:	6878      	ldr	r0, [r7, #4]
 800e476:	f7fe fe27 	bl	800d0c8 <vListInsert>
 800e47a:	2101      	movs	r1, #1
 800e47c:	6838      	ldr	r0, [r7, #0]
 800e47e:	f000 fb9d 	bl	800ebbc <prvAddCurrentTaskToDelayedList>
 800e482:	bf00      	nop
 800e484:	3710      	adds	r7, #16
 800e486:	46bd      	mov	sp, r7
 800e488:	bd80      	pop	{r7, pc}
 800e48a:	bf00      	nop
 800e48c:	2000191c 	.word	0x2000191c

0800e490 <xTaskRemoveFromEventList>:
 800e490:	b580      	push	{r7, lr}
 800e492:	b086      	sub	sp, #24
 800e494:	af00      	add	r7, sp, #0
 800e496:	6078      	str	r0, [r7, #4]
 800e498:	687b      	ldr	r3, [r7, #4]
 800e49a:	68db      	ldr	r3, [r3, #12]
 800e49c:	68db      	ldr	r3, [r3, #12]
 800e49e:	613b      	str	r3, [r7, #16]
 800e4a0:	693b      	ldr	r3, [r7, #16]
 800e4a2:	2b00      	cmp	r3, #0
 800e4a4:	d10b      	bne.n	800e4be <xTaskRemoveFromEventList+0x2e>
 800e4a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4aa:	b672      	cpsid	i
 800e4ac:	f383 8811 	msr	BASEPRI, r3
 800e4b0:	f3bf 8f6f 	isb	sy
 800e4b4:	f3bf 8f4f 	dsb	sy
 800e4b8:	b662      	cpsie	i
 800e4ba:	60fb      	str	r3, [r7, #12]
 800e4bc:	e7fe      	b.n	800e4bc <xTaskRemoveFromEventList+0x2c>
 800e4be:	693b      	ldr	r3, [r7, #16]
 800e4c0:	3318      	adds	r3, #24
 800e4c2:	4618      	mov	r0, r3
 800e4c4:	f7fe fe39 	bl	800d13a <uxListRemove>
 800e4c8:	4b1d      	ldr	r3, [pc, #116]	; (800e540 <xTaskRemoveFromEventList+0xb0>)
 800e4ca:	681b      	ldr	r3, [r3, #0]
 800e4cc:	2b00      	cmp	r3, #0
 800e4ce:	d11c      	bne.n	800e50a <xTaskRemoveFromEventList+0x7a>
 800e4d0:	693b      	ldr	r3, [r7, #16]
 800e4d2:	3304      	adds	r3, #4
 800e4d4:	4618      	mov	r0, r3
 800e4d6:	f7fe fe30 	bl	800d13a <uxListRemove>
 800e4da:	693b      	ldr	r3, [r7, #16]
 800e4dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4de:	2201      	movs	r2, #1
 800e4e0:	409a      	lsls	r2, r3
 800e4e2:	4b18      	ldr	r3, [pc, #96]	; (800e544 <xTaskRemoveFromEventList+0xb4>)
 800e4e4:	681b      	ldr	r3, [r3, #0]
 800e4e6:	4313      	orrs	r3, r2
 800e4e8:	4a16      	ldr	r2, [pc, #88]	; (800e544 <xTaskRemoveFromEventList+0xb4>)
 800e4ea:	6013      	str	r3, [r2, #0]
 800e4ec:	693b      	ldr	r3, [r7, #16]
 800e4ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e4f0:	4613      	mov	r3, r2
 800e4f2:	009b      	lsls	r3, r3, #2
 800e4f4:	4413      	add	r3, r2
 800e4f6:	009b      	lsls	r3, r3, #2
 800e4f8:	4a13      	ldr	r2, [pc, #76]	; (800e548 <xTaskRemoveFromEventList+0xb8>)
 800e4fa:	441a      	add	r2, r3
 800e4fc:	693b      	ldr	r3, [r7, #16]
 800e4fe:	3304      	adds	r3, #4
 800e500:	4619      	mov	r1, r3
 800e502:	4610      	mov	r0, r2
 800e504:	f7fe fdbc 	bl	800d080 <vListInsertEnd>
 800e508:	e005      	b.n	800e516 <xTaskRemoveFromEventList+0x86>
 800e50a:	693b      	ldr	r3, [r7, #16]
 800e50c:	3318      	adds	r3, #24
 800e50e:	4619      	mov	r1, r3
 800e510:	480e      	ldr	r0, [pc, #56]	; (800e54c <xTaskRemoveFromEventList+0xbc>)
 800e512:	f7fe fdb5 	bl	800d080 <vListInsertEnd>
 800e516:	693b      	ldr	r3, [r7, #16]
 800e518:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e51a:	4b0d      	ldr	r3, [pc, #52]	; (800e550 <xTaskRemoveFromEventList+0xc0>)
 800e51c:	681b      	ldr	r3, [r3, #0]
 800e51e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e520:	429a      	cmp	r2, r3
 800e522:	d905      	bls.n	800e530 <xTaskRemoveFromEventList+0xa0>
 800e524:	2301      	movs	r3, #1
 800e526:	617b      	str	r3, [r7, #20]
 800e528:	4b0a      	ldr	r3, [pc, #40]	; (800e554 <xTaskRemoveFromEventList+0xc4>)
 800e52a:	2201      	movs	r2, #1
 800e52c:	601a      	str	r2, [r3, #0]
 800e52e:	e001      	b.n	800e534 <xTaskRemoveFromEventList+0xa4>
 800e530:	2300      	movs	r3, #0
 800e532:	617b      	str	r3, [r7, #20]
 800e534:	697b      	ldr	r3, [r7, #20]
 800e536:	4618      	mov	r0, r3
 800e538:	3718      	adds	r7, #24
 800e53a:	46bd      	mov	sp, r7
 800e53c:	bd80      	pop	{r7, pc}
 800e53e:	bf00      	nop
 800e540:	20001a44 	.word	0x20001a44
 800e544:	20001a24 	.word	0x20001a24
 800e548:	20001920 	.word	0x20001920
 800e54c:	200019dc 	.word	0x200019dc
 800e550:	2000191c 	.word	0x2000191c
 800e554:	20001a30 	.word	0x20001a30

0800e558 <vTaskInternalSetTimeOutState>:
 800e558:	b480      	push	{r7}
 800e55a:	b083      	sub	sp, #12
 800e55c:	af00      	add	r7, sp, #0
 800e55e:	6078      	str	r0, [r7, #4]
 800e560:	4b06      	ldr	r3, [pc, #24]	; (800e57c <vTaskInternalSetTimeOutState+0x24>)
 800e562:	681a      	ldr	r2, [r3, #0]
 800e564:	687b      	ldr	r3, [r7, #4]
 800e566:	601a      	str	r2, [r3, #0]
 800e568:	4b05      	ldr	r3, [pc, #20]	; (800e580 <vTaskInternalSetTimeOutState+0x28>)
 800e56a:	681a      	ldr	r2, [r3, #0]
 800e56c:	687b      	ldr	r3, [r7, #4]
 800e56e:	605a      	str	r2, [r3, #4]
 800e570:	bf00      	nop
 800e572:	370c      	adds	r7, #12
 800e574:	46bd      	mov	sp, r7
 800e576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e57a:	4770      	bx	lr
 800e57c:	20001a34 	.word	0x20001a34
 800e580:	20001a20 	.word	0x20001a20

0800e584 <xTaskCheckForTimeOut>:
 800e584:	b580      	push	{r7, lr}
 800e586:	b088      	sub	sp, #32
 800e588:	af00      	add	r7, sp, #0
 800e58a:	6078      	str	r0, [r7, #4]
 800e58c:	6039      	str	r1, [r7, #0]
 800e58e:	687b      	ldr	r3, [r7, #4]
 800e590:	2b00      	cmp	r3, #0
 800e592:	d10b      	bne.n	800e5ac <xTaskCheckForTimeOut+0x28>
 800e594:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e598:	b672      	cpsid	i
 800e59a:	f383 8811 	msr	BASEPRI, r3
 800e59e:	f3bf 8f6f 	isb	sy
 800e5a2:	f3bf 8f4f 	dsb	sy
 800e5a6:	b662      	cpsie	i
 800e5a8:	613b      	str	r3, [r7, #16]
 800e5aa:	e7fe      	b.n	800e5aa <xTaskCheckForTimeOut+0x26>
 800e5ac:	683b      	ldr	r3, [r7, #0]
 800e5ae:	2b00      	cmp	r3, #0
 800e5b0:	d10b      	bne.n	800e5ca <xTaskCheckForTimeOut+0x46>
 800e5b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5b6:	b672      	cpsid	i
 800e5b8:	f383 8811 	msr	BASEPRI, r3
 800e5bc:	f3bf 8f6f 	isb	sy
 800e5c0:	f3bf 8f4f 	dsb	sy
 800e5c4:	b662      	cpsie	i
 800e5c6:	60fb      	str	r3, [r7, #12]
 800e5c8:	e7fe      	b.n	800e5c8 <xTaskCheckForTimeOut+0x44>
 800e5ca:	f000 fc65 	bl	800ee98 <vPortEnterCritical>
 800e5ce:	4b1d      	ldr	r3, [pc, #116]	; (800e644 <xTaskCheckForTimeOut+0xc0>)
 800e5d0:	681b      	ldr	r3, [r3, #0]
 800e5d2:	61bb      	str	r3, [r7, #24]
 800e5d4:	687b      	ldr	r3, [r7, #4]
 800e5d6:	685b      	ldr	r3, [r3, #4]
 800e5d8:	69ba      	ldr	r2, [r7, #24]
 800e5da:	1ad3      	subs	r3, r2, r3
 800e5dc:	617b      	str	r3, [r7, #20]
 800e5de:	683b      	ldr	r3, [r7, #0]
 800e5e0:	681b      	ldr	r3, [r3, #0]
 800e5e2:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e5e6:	d102      	bne.n	800e5ee <xTaskCheckForTimeOut+0x6a>
 800e5e8:	2300      	movs	r3, #0
 800e5ea:	61fb      	str	r3, [r7, #28]
 800e5ec:	e023      	b.n	800e636 <xTaskCheckForTimeOut+0xb2>
 800e5ee:	687b      	ldr	r3, [r7, #4]
 800e5f0:	681a      	ldr	r2, [r3, #0]
 800e5f2:	4b15      	ldr	r3, [pc, #84]	; (800e648 <xTaskCheckForTimeOut+0xc4>)
 800e5f4:	681b      	ldr	r3, [r3, #0]
 800e5f6:	429a      	cmp	r2, r3
 800e5f8:	d007      	beq.n	800e60a <xTaskCheckForTimeOut+0x86>
 800e5fa:	687b      	ldr	r3, [r7, #4]
 800e5fc:	685b      	ldr	r3, [r3, #4]
 800e5fe:	69ba      	ldr	r2, [r7, #24]
 800e600:	429a      	cmp	r2, r3
 800e602:	d302      	bcc.n	800e60a <xTaskCheckForTimeOut+0x86>
 800e604:	2301      	movs	r3, #1
 800e606:	61fb      	str	r3, [r7, #28]
 800e608:	e015      	b.n	800e636 <xTaskCheckForTimeOut+0xb2>
 800e60a:	683b      	ldr	r3, [r7, #0]
 800e60c:	681b      	ldr	r3, [r3, #0]
 800e60e:	697a      	ldr	r2, [r7, #20]
 800e610:	429a      	cmp	r2, r3
 800e612:	d20b      	bcs.n	800e62c <xTaskCheckForTimeOut+0xa8>
 800e614:	683b      	ldr	r3, [r7, #0]
 800e616:	681a      	ldr	r2, [r3, #0]
 800e618:	697b      	ldr	r3, [r7, #20]
 800e61a:	1ad2      	subs	r2, r2, r3
 800e61c:	683b      	ldr	r3, [r7, #0]
 800e61e:	601a      	str	r2, [r3, #0]
 800e620:	6878      	ldr	r0, [r7, #4]
 800e622:	f7ff ff99 	bl	800e558 <vTaskInternalSetTimeOutState>
 800e626:	2300      	movs	r3, #0
 800e628:	61fb      	str	r3, [r7, #28]
 800e62a:	e004      	b.n	800e636 <xTaskCheckForTimeOut+0xb2>
 800e62c:	683b      	ldr	r3, [r7, #0]
 800e62e:	2200      	movs	r2, #0
 800e630:	601a      	str	r2, [r3, #0]
 800e632:	2301      	movs	r3, #1
 800e634:	61fb      	str	r3, [r7, #28]
 800e636:	f000 fc61 	bl	800eefc <vPortExitCritical>
 800e63a:	69fb      	ldr	r3, [r7, #28]
 800e63c:	4618      	mov	r0, r3
 800e63e:	3720      	adds	r7, #32
 800e640:	46bd      	mov	sp, r7
 800e642:	bd80      	pop	{r7, pc}
 800e644:	20001a20 	.word	0x20001a20
 800e648:	20001a34 	.word	0x20001a34

0800e64c <vTaskMissedYield>:
 800e64c:	b480      	push	{r7}
 800e64e:	af00      	add	r7, sp, #0
 800e650:	4b03      	ldr	r3, [pc, #12]	; (800e660 <vTaskMissedYield+0x14>)
 800e652:	2201      	movs	r2, #1
 800e654:	601a      	str	r2, [r3, #0]
 800e656:	bf00      	nop
 800e658:	46bd      	mov	sp, r7
 800e65a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e65e:	4770      	bx	lr
 800e660:	20001a30 	.word	0x20001a30

0800e664 <prvIdleTask>:
 800e664:	b580      	push	{r7, lr}
 800e666:	b082      	sub	sp, #8
 800e668:	af00      	add	r7, sp, #0
 800e66a:	6078      	str	r0, [r7, #4]
 800e66c:	f000 f854 	bl	800e718 <prvCheckTasksWaitingTermination>
 800e670:	4b07      	ldr	r3, [pc, #28]	; (800e690 <prvIdleTask+0x2c>)
 800e672:	681b      	ldr	r3, [r3, #0]
 800e674:	2b01      	cmp	r3, #1
 800e676:	d907      	bls.n	800e688 <prvIdleTask+0x24>
 800e678:	4b06      	ldr	r3, [pc, #24]	; (800e694 <prvIdleTask+0x30>)
 800e67a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e67e:	601a      	str	r2, [r3, #0]
 800e680:	f3bf 8f4f 	dsb	sy
 800e684:	f3bf 8f6f 	isb	sy
 800e688:	f7f1 ff92 	bl	80005b0 <vApplicationIdleHook>
 800e68c:	e7ee      	b.n	800e66c <prvIdleTask+0x8>
 800e68e:	bf00      	nop
 800e690:	20001920 	.word	0x20001920
 800e694:	e000ed04 	.word	0xe000ed04

0800e698 <prvInitialiseTaskLists>:
 800e698:	b580      	push	{r7, lr}
 800e69a:	b082      	sub	sp, #8
 800e69c:	af00      	add	r7, sp, #0
 800e69e:	2300      	movs	r3, #0
 800e6a0:	607b      	str	r3, [r7, #4]
 800e6a2:	e00c      	b.n	800e6be <prvInitialiseTaskLists+0x26>
 800e6a4:	687a      	ldr	r2, [r7, #4]
 800e6a6:	4613      	mov	r3, r2
 800e6a8:	009b      	lsls	r3, r3, #2
 800e6aa:	4413      	add	r3, r2
 800e6ac:	009b      	lsls	r3, r3, #2
 800e6ae:	4a12      	ldr	r2, [pc, #72]	; (800e6f8 <prvInitialiseTaskLists+0x60>)
 800e6b0:	4413      	add	r3, r2
 800e6b2:	4618      	mov	r0, r3
 800e6b4:	f7fe fcb7 	bl	800d026 <vListInitialise>
 800e6b8:	687b      	ldr	r3, [r7, #4]
 800e6ba:	3301      	adds	r3, #1
 800e6bc:	607b      	str	r3, [r7, #4]
 800e6be:	687b      	ldr	r3, [r7, #4]
 800e6c0:	2b06      	cmp	r3, #6
 800e6c2:	d9ef      	bls.n	800e6a4 <prvInitialiseTaskLists+0xc>
 800e6c4:	480d      	ldr	r0, [pc, #52]	; (800e6fc <prvInitialiseTaskLists+0x64>)
 800e6c6:	f7fe fcae 	bl	800d026 <vListInitialise>
 800e6ca:	480d      	ldr	r0, [pc, #52]	; (800e700 <prvInitialiseTaskLists+0x68>)
 800e6cc:	f7fe fcab 	bl	800d026 <vListInitialise>
 800e6d0:	480c      	ldr	r0, [pc, #48]	; (800e704 <prvInitialiseTaskLists+0x6c>)
 800e6d2:	f7fe fca8 	bl	800d026 <vListInitialise>
 800e6d6:	480c      	ldr	r0, [pc, #48]	; (800e708 <prvInitialiseTaskLists+0x70>)
 800e6d8:	f7fe fca5 	bl	800d026 <vListInitialise>
 800e6dc:	480b      	ldr	r0, [pc, #44]	; (800e70c <prvInitialiseTaskLists+0x74>)
 800e6de:	f7fe fca2 	bl	800d026 <vListInitialise>
 800e6e2:	4b0b      	ldr	r3, [pc, #44]	; (800e710 <prvInitialiseTaskLists+0x78>)
 800e6e4:	4a05      	ldr	r2, [pc, #20]	; (800e6fc <prvInitialiseTaskLists+0x64>)
 800e6e6:	601a      	str	r2, [r3, #0]
 800e6e8:	4b0a      	ldr	r3, [pc, #40]	; (800e714 <prvInitialiseTaskLists+0x7c>)
 800e6ea:	4a05      	ldr	r2, [pc, #20]	; (800e700 <prvInitialiseTaskLists+0x68>)
 800e6ec:	601a      	str	r2, [r3, #0]
 800e6ee:	bf00      	nop
 800e6f0:	3708      	adds	r7, #8
 800e6f2:	46bd      	mov	sp, r7
 800e6f4:	bd80      	pop	{r7, pc}
 800e6f6:	bf00      	nop
 800e6f8:	20001920 	.word	0x20001920
 800e6fc:	200019ac 	.word	0x200019ac
 800e700:	200019c0 	.word	0x200019c0
 800e704:	200019dc 	.word	0x200019dc
 800e708:	200019f0 	.word	0x200019f0
 800e70c:	20001a08 	.word	0x20001a08
 800e710:	200019d4 	.word	0x200019d4
 800e714:	200019d8 	.word	0x200019d8

0800e718 <prvCheckTasksWaitingTermination>:
 800e718:	b580      	push	{r7, lr}
 800e71a:	b082      	sub	sp, #8
 800e71c:	af00      	add	r7, sp, #0
 800e71e:	e019      	b.n	800e754 <prvCheckTasksWaitingTermination+0x3c>
 800e720:	f000 fbba 	bl	800ee98 <vPortEnterCritical>
 800e724:	4b0f      	ldr	r3, [pc, #60]	; (800e764 <prvCheckTasksWaitingTermination+0x4c>)
 800e726:	68db      	ldr	r3, [r3, #12]
 800e728:	68db      	ldr	r3, [r3, #12]
 800e72a:	607b      	str	r3, [r7, #4]
 800e72c:	687b      	ldr	r3, [r7, #4]
 800e72e:	3304      	adds	r3, #4
 800e730:	4618      	mov	r0, r3
 800e732:	f7fe fd02 	bl	800d13a <uxListRemove>
 800e736:	4b0c      	ldr	r3, [pc, #48]	; (800e768 <prvCheckTasksWaitingTermination+0x50>)
 800e738:	681b      	ldr	r3, [r3, #0]
 800e73a:	3b01      	subs	r3, #1
 800e73c:	4a0a      	ldr	r2, [pc, #40]	; (800e768 <prvCheckTasksWaitingTermination+0x50>)
 800e73e:	6013      	str	r3, [r2, #0]
 800e740:	4b0a      	ldr	r3, [pc, #40]	; (800e76c <prvCheckTasksWaitingTermination+0x54>)
 800e742:	681b      	ldr	r3, [r3, #0]
 800e744:	3b01      	subs	r3, #1
 800e746:	4a09      	ldr	r2, [pc, #36]	; (800e76c <prvCheckTasksWaitingTermination+0x54>)
 800e748:	6013      	str	r3, [r2, #0]
 800e74a:	f000 fbd7 	bl	800eefc <vPortExitCritical>
 800e74e:	6878      	ldr	r0, [r7, #4]
 800e750:	f000 f80e 	bl	800e770 <prvDeleteTCB>
 800e754:	4b05      	ldr	r3, [pc, #20]	; (800e76c <prvCheckTasksWaitingTermination+0x54>)
 800e756:	681b      	ldr	r3, [r3, #0]
 800e758:	2b00      	cmp	r3, #0
 800e75a:	d1e1      	bne.n	800e720 <prvCheckTasksWaitingTermination+0x8>
 800e75c:	bf00      	nop
 800e75e:	3708      	adds	r7, #8
 800e760:	46bd      	mov	sp, r7
 800e762:	bd80      	pop	{r7, pc}
 800e764:	200019f0 	.word	0x200019f0
 800e768:	20001a1c 	.word	0x20001a1c
 800e76c:	20001a04 	.word	0x20001a04

0800e770 <prvDeleteTCB>:
 800e770:	b580      	push	{r7, lr}
 800e772:	b084      	sub	sp, #16
 800e774:	af00      	add	r7, sp, #0
 800e776:	6078      	str	r0, [r7, #4]
 800e778:	687b      	ldr	r3, [r7, #4]
 800e77a:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 800e77e:	2b00      	cmp	r3, #0
 800e780:	d108      	bne.n	800e794 <prvDeleteTCB+0x24>
 800e782:	687b      	ldr	r3, [r7, #4]
 800e784:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e786:	4618      	mov	r0, r3
 800e788:	f000 fd32 	bl	800f1f0 <vPortFree>
 800e78c:	6878      	ldr	r0, [r7, #4]
 800e78e:	f000 fd2f 	bl	800f1f0 <vPortFree>
 800e792:	e019      	b.n	800e7c8 <prvDeleteTCB+0x58>
 800e794:	687b      	ldr	r3, [r7, #4]
 800e796:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 800e79a:	2b01      	cmp	r3, #1
 800e79c:	d103      	bne.n	800e7a6 <prvDeleteTCB+0x36>
 800e79e:	6878      	ldr	r0, [r7, #4]
 800e7a0:	f000 fd26 	bl	800f1f0 <vPortFree>
 800e7a4:	e010      	b.n	800e7c8 <prvDeleteTCB+0x58>
 800e7a6:	687b      	ldr	r3, [r7, #4]
 800e7a8:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 800e7ac:	2b02      	cmp	r3, #2
 800e7ae:	d00b      	beq.n	800e7c8 <prvDeleteTCB+0x58>
 800e7b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7b4:	b672      	cpsid	i
 800e7b6:	f383 8811 	msr	BASEPRI, r3
 800e7ba:	f3bf 8f6f 	isb	sy
 800e7be:	f3bf 8f4f 	dsb	sy
 800e7c2:	b662      	cpsie	i
 800e7c4:	60fb      	str	r3, [r7, #12]
 800e7c6:	e7fe      	b.n	800e7c6 <prvDeleteTCB+0x56>
 800e7c8:	bf00      	nop
 800e7ca:	3710      	adds	r7, #16
 800e7cc:	46bd      	mov	sp, r7
 800e7ce:	bd80      	pop	{r7, pc}

0800e7d0 <prvResetNextTaskUnblockTime>:
 800e7d0:	b480      	push	{r7}
 800e7d2:	b083      	sub	sp, #12
 800e7d4:	af00      	add	r7, sp, #0
 800e7d6:	4b0c      	ldr	r3, [pc, #48]	; (800e808 <prvResetNextTaskUnblockTime+0x38>)
 800e7d8:	681b      	ldr	r3, [r3, #0]
 800e7da:	681b      	ldr	r3, [r3, #0]
 800e7dc:	2b00      	cmp	r3, #0
 800e7de:	d104      	bne.n	800e7ea <prvResetNextTaskUnblockTime+0x1a>
 800e7e0:	4b0a      	ldr	r3, [pc, #40]	; (800e80c <prvResetNextTaskUnblockTime+0x3c>)
 800e7e2:	f04f 32ff 	mov.w	r2, #4294967295
 800e7e6:	601a      	str	r2, [r3, #0]
 800e7e8:	e008      	b.n	800e7fc <prvResetNextTaskUnblockTime+0x2c>
 800e7ea:	4b07      	ldr	r3, [pc, #28]	; (800e808 <prvResetNextTaskUnblockTime+0x38>)
 800e7ec:	681b      	ldr	r3, [r3, #0]
 800e7ee:	68db      	ldr	r3, [r3, #12]
 800e7f0:	68db      	ldr	r3, [r3, #12]
 800e7f2:	607b      	str	r3, [r7, #4]
 800e7f4:	687b      	ldr	r3, [r7, #4]
 800e7f6:	685b      	ldr	r3, [r3, #4]
 800e7f8:	4a04      	ldr	r2, [pc, #16]	; (800e80c <prvResetNextTaskUnblockTime+0x3c>)
 800e7fa:	6013      	str	r3, [r2, #0]
 800e7fc:	bf00      	nop
 800e7fe:	370c      	adds	r7, #12
 800e800:	46bd      	mov	sp, r7
 800e802:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e806:	4770      	bx	lr
 800e808:	200019d4 	.word	0x200019d4
 800e80c:	20001a3c 	.word	0x20001a3c

0800e810 <xTaskGetSchedulerState>:
 800e810:	b480      	push	{r7}
 800e812:	b083      	sub	sp, #12
 800e814:	af00      	add	r7, sp, #0
 800e816:	4b0b      	ldr	r3, [pc, #44]	; (800e844 <xTaskGetSchedulerState+0x34>)
 800e818:	681b      	ldr	r3, [r3, #0]
 800e81a:	2b00      	cmp	r3, #0
 800e81c:	d102      	bne.n	800e824 <xTaskGetSchedulerState+0x14>
 800e81e:	2301      	movs	r3, #1
 800e820:	607b      	str	r3, [r7, #4]
 800e822:	e008      	b.n	800e836 <xTaskGetSchedulerState+0x26>
 800e824:	4b08      	ldr	r3, [pc, #32]	; (800e848 <xTaskGetSchedulerState+0x38>)
 800e826:	681b      	ldr	r3, [r3, #0]
 800e828:	2b00      	cmp	r3, #0
 800e82a:	d102      	bne.n	800e832 <xTaskGetSchedulerState+0x22>
 800e82c:	2302      	movs	r3, #2
 800e82e:	607b      	str	r3, [r7, #4]
 800e830:	e001      	b.n	800e836 <xTaskGetSchedulerState+0x26>
 800e832:	2300      	movs	r3, #0
 800e834:	607b      	str	r3, [r7, #4]
 800e836:	687b      	ldr	r3, [r7, #4]
 800e838:	4618      	mov	r0, r3
 800e83a:	370c      	adds	r7, #12
 800e83c:	46bd      	mov	sp, r7
 800e83e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e842:	4770      	bx	lr
 800e844:	20001a28 	.word	0x20001a28
 800e848:	20001a44 	.word	0x20001a44

0800e84c <xTaskPriorityInherit>:
 800e84c:	b580      	push	{r7, lr}
 800e84e:	b084      	sub	sp, #16
 800e850:	af00      	add	r7, sp, #0
 800e852:	6078      	str	r0, [r7, #4]
 800e854:	687b      	ldr	r3, [r7, #4]
 800e856:	60bb      	str	r3, [r7, #8]
 800e858:	2300      	movs	r3, #0
 800e85a:	60fb      	str	r3, [r7, #12]
 800e85c:	687b      	ldr	r3, [r7, #4]
 800e85e:	2b00      	cmp	r3, #0
 800e860:	d069      	beq.n	800e936 <xTaskPriorityInherit+0xea>
 800e862:	68bb      	ldr	r3, [r7, #8]
 800e864:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e866:	4b36      	ldr	r3, [pc, #216]	; (800e940 <xTaskPriorityInherit+0xf4>)
 800e868:	681b      	ldr	r3, [r3, #0]
 800e86a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e86c:	429a      	cmp	r2, r3
 800e86e:	d259      	bcs.n	800e924 <xTaskPriorityInherit+0xd8>
 800e870:	68bb      	ldr	r3, [r7, #8]
 800e872:	699b      	ldr	r3, [r3, #24]
 800e874:	2b00      	cmp	r3, #0
 800e876:	db06      	blt.n	800e886 <xTaskPriorityInherit+0x3a>
 800e878:	4b31      	ldr	r3, [pc, #196]	; (800e940 <xTaskPriorityInherit+0xf4>)
 800e87a:	681b      	ldr	r3, [r3, #0]
 800e87c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e87e:	f1c3 0207 	rsb	r2, r3, #7
 800e882:	68bb      	ldr	r3, [r7, #8]
 800e884:	619a      	str	r2, [r3, #24]
 800e886:	68bb      	ldr	r3, [r7, #8]
 800e888:	6959      	ldr	r1, [r3, #20]
 800e88a:	68bb      	ldr	r3, [r7, #8]
 800e88c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e88e:	4613      	mov	r3, r2
 800e890:	009b      	lsls	r3, r3, #2
 800e892:	4413      	add	r3, r2
 800e894:	009b      	lsls	r3, r3, #2
 800e896:	4a2b      	ldr	r2, [pc, #172]	; (800e944 <xTaskPriorityInherit+0xf8>)
 800e898:	4413      	add	r3, r2
 800e89a:	4299      	cmp	r1, r3
 800e89c:	d13a      	bne.n	800e914 <xTaskPriorityInherit+0xc8>
 800e89e:	68bb      	ldr	r3, [r7, #8]
 800e8a0:	3304      	adds	r3, #4
 800e8a2:	4618      	mov	r0, r3
 800e8a4:	f7fe fc49 	bl	800d13a <uxListRemove>
 800e8a8:	4603      	mov	r3, r0
 800e8aa:	2b00      	cmp	r3, #0
 800e8ac:	d115      	bne.n	800e8da <xTaskPriorityInherit+0x8e>
 800e8ae:	68bb      	ldr	r3, [r7, #8]
 800e8b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e8b2:	4924      	ldr	r1, [pc, #144]	; (800e944 <xTaskPriorityInherit+0xf8>)
 800e8b4:	4613      	mov	r3, r2
 800e8b6:	009b      	lsls	r3, r3, #2
 800e8b8:	4413      	add	r3, r2
 800e8ba:	009b      	lsls	r3, r3, #2
 800e8bc:	440b      	add	r3, r1
 800e8be:	681b      	ldr	r3, [r3, #0]
 800e8c0:	2b00      	cmp	r3, #0
 800e8c2:	d10a      	bne.n	800e8da <xTaskPriorityInherit+0x8e>
 800e8c4:	68bb      	ldr	r3, [r7, #8]
 800e8c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8c8:	2201      	movs	r2, #1
 800e8ca:	fa02 f303 	lsl.w	r3, r2, r3
 800e8ce:	43da      	mvns	r2, r3
 800e8d0:	4b1d      	ldr	r3, [pc, #116]	; (800e948 <xTaskPriorityInherit+0xfc>)
 800e8d2:	681b      	ldr	r3, [r3, #0]
 800e8d4:	4013      	ands	r3, r2
 800e8d6:	4a1c      	ldr	r2, [pc, #112]	; (800e948 <xTaskPriorityInherit+0xfc>)
 800e8d8:	6013      	str	r3, [r2, #0]
 800e8da:	4b19      	ldr	r3, [pc, #100]	; (800e940 <xTaskPriorityInherit+0xf4>)
 800e8dc:	681b      	ldr	r3, [r3, #0]
 800e8de:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e8e0:	68bb      	ldr	r3, [r7, #8]
 800e8e2:	62da      	str	r2, [r3, #44]	; 0x2c
 800e8e4:	68bb      	ldr	r3, [r7, #8]
 800e8e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8e8:	2201      	movs	r2, #1
 800e8ea:	409a      	lsls	r2, r3
 800e8ec:	4b16      	ldr	r3, [pc, #88]	; (800e948 <xTaskPriorityInherit+0xfc>)
 800e8ee:	681b      	ldr	r3, [r3, #0]
 800e8f0:	4313      	orrs	r3, r2
 800e8f2:	4a15      	ldr	r2, [pc, #84]	; (800e948 <xTaskPriorityInherit+0xfc>)
 800e8f4:	6013      	str	r3, [r2, #0]
 800e8f6:	68bb      	ldr	r3, [r7, #8]
 800e8f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e8fa:	4613      	mov	r3, r2
 800e8fc:	009b      	lsls	r3, r3, #2
 800e8fe:	4413      	add	r3, r2
 800e900:	009b      	lsls	r3, r3, #2
 800e902:	4a10      	ldr	r2, [pc, #64]	; (800e944 <xTaskPriorityInherit+0xf8>)
 800e904:	441a      	add	r2, r3
 800e906:	68bb      	ldr	r3, [r7, #8]
 800e908:	3304      	adds	r3, #4
 800e90a:	4619      	mov	r1, r3
 800e90c:	4610      	mov	r0, r2
 800e90e:	f7fe fbb7 	bl	800d080 <vListInsertEnd>
 800e912:	e004      	b.n	800e91e <xTaskPriorityInherit+0xd2>
 800e914:	4b0a      	ldr	r3, [pc, #40]	; (800e940 <xTaskPriorityInherit+0xf4>)
 800e916:	681b      	ldr	r3, [r3, #0]
 800e918:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e91a:	68bb      	ldr	r3, [r7, #8]
 800e91c:	62da      	str	r2, [r3, #44]	; 0x2c
 800e91e:	2301      	movs	r3, #1
 800e920:	60fb      	str	r3, [r7, #12]
 800e922:	e008      	b.n	800e936 <xTaskPriorityInherit+0xea>
 800e924:	68bb      	ldr	r3, [r7, #8]
 800e926:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800e928:	4b05      	ldr	r3, [pc, #20]	; (800e940 <xTaskPriorityInherit+0xf4>)
 800e92a:	681b      	ldr	r3, [r3, #0]
 800e92c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e92e:	429a      	cmp	r2, r3
 800e930:	d201      	bcs.n	800e936 <xTaskPriorityInherit+0xea>
 800e932:	2301      	movs	r3, #1
 800e934:	60fb      	str	r3, [r7, #12]
 800e936:	68fb      	ldr	r3, [r7, #12]
 800e938:	4618      	mov	r0, r3
 800e93a:	3710      	adds	r7, #16
 800e93c:	46bd      	mov	sp, r7
 800e93e:	bd80      	pop	{r7, pc}
 800e940:	2000191c 	.word	0x2000191c
 800e944:	20001920 	.word	0x20001920
 800e948:	20001a24 	.word	0x20001a24

0800e94c <xTaskPriorityDisinherit>:
 800e94c:	b580      	push	{r7, lr}
 800e94e:	b086      	sub	sp, #24
 800e950:	af00      	add	r7, sp, #0
 800e952:	6078      	str	r0, [r7, #4]
 800e954:	687b      	ldr	r3, [r7, #4]
 800e956:	613b      	str	r3, [r7, #16]
 800e958:	2300      	movs	r3, #0
 800e95a:	617b      	str	r3, [r7, #20]
 800e95c:	687b      	ldr	r3, [r7, #4]
 800e95e:	2b00      	cmp	r3, #0
 800e960:	d070      	beq.n	800ea44 <xTaskPriorityDisinherit+0xf8>
 800e962:	4b3b      	ldr	r3, [pc, #236]	; (800ea50 <xTaskPriorityDisinherit+0x104>)
 800e964:	681b      	ldr	r3, [r3, #0]
 800e966:	693a      	ldr	r2, [r7, #16]
 800e968:	429a      	cmp	r2, r3
 800e96a:	d00b      	beq.n	800e984 <xTaskPriorityDisinherit+0x38>
 800e96c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e970:	b672      	cpsid	i
 800e972:	f383 8811 	msr	BASEPRI, r3
 800e976:	f3bf 8f6f 	isb	sy
 800e97a:	f3bf 8f4f 	dsb	sy
 800e97e:	b662      	cpsie	i
 800e980:	60fb      	str	r3, [r7, #12]
 800e982:	e7fe      	b.n	800e982 <xTaskPriorityDisinherit+0x36>
 800e984:	693b      	ldr	r3, [r7, #16]
 800e986:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e988:	2b00      	cmp	r3, #0
 800e98a:	d10b      	bne.n	800e9a4 <xTaskPriorityDisinherit+0x58>
 800e98c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e990:	b672      	cpsid	i
 800e992:	f383 8811 	msr	BASEPRI, r3
 800e996:	f3bf 8f6f 	isb	sy
 800e99a:	f3bf 8f4f 	dsb	sy
 800e99e:	b662      	cpsie	i
 800e9a0:	60bb      	str	r3, [r7, #8]
 800e9a2:	e7fe      	b.n	800e9a2 <xTaskPriorityDisinherit+0x56>
 800e9a4:	693b      	ldr	r3, [r7, #16]
 800e9a6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e9a8:	1e5a      	subs	r2, r3, #1
 800e9aa:	693b      	ldr	r3, [r7, #16]
 800e9ac:	649a      	str	r2, [r3, #72]	; 0x48
 800e9ae:	693b      	ldr	r3, [r7, #16]
 800e9b0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e9b2:	693b      	ldr	r3, [r7, #16]
 800e9b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e9b6:	429a      	cmp	r2, r3
 800e9b8:	d044      	beq.n	800ea44 <xTaskPriorityDisinherit+0xf8>
 800e9ba:	693b      	ldr	r3, [r7, #16]
 800e9bc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e9be:	2b00      	cmp	r3, #0
 800e9c0:	d140      	bne.n	800ea44 <xTaskPriorityDisinherit+0xf8>
 800e9c2:	693b      	ldr	r3, [r7, #16]
 800e9c4:	3304      	adds	r3, #4
 800e9c6:	4618      	mov	r0, r3
 800e9c8:	f7fe fbb7 	bl	800d13a <uxListRemove>
 800e9cc:	4603      	mov	r3, r0
 800e9ce:	2b00      	cmp	r3, #0
 800e9d0:	d115      	bne.n	800e9fe <xTaskPriorityDisinherit+0xb2>
 800e9d2:	693b      	ldr	r3, [r7, #16]
 800e9d4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e9d6:	491f      	ldr	r1, [pc, #124]	; (800ea54 <xTaskPriorityDisinherit+0x108>)
 800e9d8:	4613      	mov	r3, r2
 800e9da:	009b      	lsls	r3, r3, #2
 800e9dc:	4413      	add	r3, r2
 800e9de:	009b      	lsls	r3, r3, #2
 800e9e0:	440b      	add	r3, r1
 800e9e2:	681b      	ldr	r3, [r3, #0]
 800e9e4:	2b00      	cmp	r3, #0
 800e9e6:	d10a      	bne.n	800e9fe <xTaskPriorityDisinherit+0xb2>
 800e9e8:	693b      	ldr	r3, [r7, #16]
 800e9ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9ec:	2201      	movs	r2, #1
 800e9ee:	fa02 f303 	lsl.w	r3, r2, r3
 800e9f2:	43da      	mvns	r2, r3
 800e9f4:	4b18      	ldr	r3, [pc, #96]	; (800ea58 <xTaskPriorityDisinherit+0x10c>)
 800e9f6:	681b      	ldr	r3, [r3, #0]
 800e9f8:	4013      	ands	r3, r2
 800e9fa:	4a17      	ldr	r2, [pc, #92]	; (800ea58 <xTaskPriorityDisinherit+0x10c>)
 800e9fc:	6013      	str	r3, [r2, #0]
 800e9fe:	693b      	ldr	r3, [r7, #16]
 800ea00:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ea02:	693b      	ldr	r3, [r7, #16]
 800ea04:	62da      	str	r2, [r3, #44]	; 0x2c
 800ea06:	693b      	ldr	r3, [r7, #16]
 800ea08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea0a:	f1c3 0207 	rsb	r2, r3, #7
 800ea0e:	693b      	ldr	r3, [r7, #16]
 800ea10:	619a      	str	r2, [r3, #24]
 800ea12:	693b      	ldr	r3, [r7, #16]
 800ea14:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea16:	2201      	movs	r2, #1
 800ea18:	409a      	lsls	r2, r3
 800ea1a:	4b0f      	ldr	r3, [pc, #60]	; (800ea58 <xTaskPriorityDisinherit+0x10c>)
 800ea1c:	681b      	ldr	r3, [r3, #0]
 800ea1e:	4313      	orrs	r3, r2
 800ea20:	4a0d      	ldr	r2, [pc, #52]	; (800ea58 <xTaskPriorityDisinherit+0x10c>)
 800ea22:	6013      	str	r3, [r2, #0]
 800ea24:	693b      	ldr	r3, [r7, #16]
 800ea26:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ea28:	4613      	mov	r3, r2
 800ea2a:	009b      	lsls	r3, r3, #2
 800ea2c:	4413      	add	r3, r2
 800ea2e:	009b      	lsls	r3, r3, #2
 800ea30:	4a08      	ldr	r2, [pc, #32]	; (800ea54 <xTaskPriorityDisinherit+0x108>)
 800ea32:	441a      	add	r2, r3
 800ea34:	693b      	ldr	r3, [r7, #16]
 800ea36:	3304      	adds	r3, #4
 800ea38:	4619      	mov	r1, r3
 800ea3a:	4610      	mov	r0, r2
 800ea3c:	f7fe fb20 	bl	800d080 <vListInsertEnd>
 800ea40:	2301      	movs	r3, #1
 800ea42:	617b      	str	r3, [r7, #20]
 800ea44:	697b      	ldr	r3, [r7, #20]
 800ea46:	4618      	mov	r0, r3
 800ea48:	3718      	adds	r7, #24
 800ea4a:	46bd      	mov	sp, r7
 800ea4c:	bd80      	pop	{r7, pc}
 800ea4e:	bf00      	nop
 800ea50:	2000191c 	.word	0x2000191c
 800ea54:	20001920 	.word	0x20001920
 800ea58:	20001a24 	.word	0x20001a24

0800ea5c <vTaskPriorityDisinheritAfterTimeout>:
 800ea5c:	b580      	push	{r7, lr}
 800ea5e:	b088      	sub	sp, #32
 800ea60:	af00      	add	r7, sp, #0
 800ea62:	6078      	str	r0, [r7, #4]
 800ea64:	6039      	str	r1, [r7, #0]
 800ea66:	687b      	ldr	r3, [r7, #4]
 800ea68:	61bb      	str	r3, [r7, #24]
 800ea6a:	2301      	movs	r3, #1
 800ea6c:	617b      	str	r3, [r7, #20]
 800ea6e:	687b      	ldr	r3, [r7, #4]
 800ea70:	2b00      	cmp	r3, #0
 800ea72:	f000 8085 	beq.w	800eb80 <vTaskPriorityDisinheritAfterTimeout+0x124>
 800ea76:	69bb      	ldr	r3, [r7, #24]
 800ea78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ea7a:	2b00      	cmp	r3, #0
 800ea7c:	d10b      	bne.n	800ea96 <vTaskPriorityDisinheritAfterTimeout+0x3a>
 800ea7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea82:	b672      	cpsid	i
 800ea84:	f383 8811 	msr	BASEPRI, r3
 800ea88:	f3bf 8f6f 	isb	sy
 800ea8c:	f3bf 8f4f 	dsb	sy
 800ea90:	b662      	cpsie	i
 800ea92:	60fb      	str	r3, [r7, #12]
 800ea94:	e7fe      	b.n	800ea94 <vTaskPriorityDisinheritAfterTimeout+0x38>
 800ea96:	69bb      	ldr	r3, [r7, #24]
 800ea98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ea9a:	683a      	ldr	r2, [r7, #0]
 800ea9c:	429a      	cmp	r2, r3
 800ea9e:	d902      	bls.n	800eaa6 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800eaa0:	683b      	ldr	r3, [r7, #0]
 800eaa2:	61fb      	str	r3, [r7, #28]
 800eaa4:	e002      	b.n	800eaac <vTaskPriorityDisinheritAfterTimeout+0x50>
 800eaa6:	69bb      	ldr	r3, [r7, #24]
 800eaa8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eaaa:	61fb      	str	r3, [r7, #28]
 800eaac:	69bb      	ldr	r3, [r7, #24]
 800eaae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eab0:	69fa      	ldr	r2, [r7, #28]
 800eab2:	429a      	cmp	r2, r3
 800eab4:	d064      	beq.n	800eb80 <vTaskPriorityDisinheritAfterTimeout+0x124>
 800eab6:	69bb      	ldr	r3, [r7, #24]
 800eab8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eaba:	697a      	ldr	r2, [r7, #20]
 800eabc:	429a      	cmp	r2, r3
 800eabe:	d15f      	bne.n	800eb80 <vTaskPriorityDisinheritAfterTimeout+0x124>
 800eac0:	4b31      	ldr	r3, [pc, #196]	; (800eb88 <vTaskPriorityDisinheritAfterTimeout+0x12c>)
 800eac2:	681b      	ldr	r3, [r3, #0]
 800eac4:	69ba      	ldr	r2, [r7, #24]
 800eac6:	429a      	cmp	r2, r3
 800eac8:	d10b      	bne.n	800eae2 <vTaskPriorityDisinheritAfterTimeout+0x86>
 800eaca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eace:	b672      	cpsid	i
 800ead0:	f383 8811 	msr	BASEPRI, r3
 800ead4:	f3bf 8f6f 	isb	sy
 800ead8:	f3bf 8f4f 	dsb	sy
 800eadc:	b662      	cpsie	i
 800eade:	60bb      	str	r3, [r7, #8]
 800eae0:	e7fe      	b.n	800eae0 <vTaskPriorityDisinheritAfterTimeout+0x84>
 800eae2:	69bb      	ldr	r3, [r7, #24]
 800eae4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eae6:	613b      	str	r3, [r7, #16]
 800eae8:	69bb      	ldr	r3, [r7, #24]
 800eaea:	69fa      	ldr	r2, [r7, #28]
 800eaec:	62da      	str	r2, [r3, #44]	; 0x2c
 800eaee:	69bb      	ldr	r3, [r7, #24]
 800eaf0:	699b      	ldr	r3, [r3, #24]
 800eaf2:	2b00      	cmp	r3, #0
 800eaf4:	db04      	blt.n	800eb00 <vTaskPriorityDisinheritAfterTimeout+0xa4>
 800eaf6:	69fb      	ldr	r3, [r7, #28]
 800eaf8:	f1c3 0207 	rsb	r2, r3, #7
 800eafc:	69bb      	ldr	r3, [r7, #24]
 800eafe:	619a      	str	r2, [r3, #24]
 800eb00:	69bb      	ldr	r3, [r7, #24]
 800eb02:	6959      	ldr	r1, [r3, #20]
 800eb04:	693a      	ldr	r2, [r7, #16]
 800eb06:	4613      	mov	r3, r2
 800eb08:	009b      	lsls	r3, r3, #2
 800eb0a:	4413      	add	r3, r2
 800eb0c:	009b      	lsls	r3, r3, #2
 800eb0e:	4a1f      	ldr	r2, [pc, #124]	; (800eb8c <vTaskPriorityDisinheritAfterTimeout+0x130>)
 800eb10:	4413      	add	r3, r2
 800eb12:	4299      	cmp	r1, r3
 800eb14:	d134      	bne.n	800eb80 <vTaskPriorityDisinheritAfterTimeout+0x124>
 800eb16:	69bb      	ldr	r3, [r7, #24]
 800eb18:	3304      	adds	r3, #4
 800eb1a:	4618      	mov	r0, r3
 800eb1c:	f7fe fb0d 	bl	800d13a <uxListRemove>
 800eb20:	4603      	mov	r3, r0
 800eb22:	2b00      	cmp	r3, #0
 800eb24:	d115      	bne.n	800eb52 <vTaskPriorityDisinheritAfterTimeout+0xf6>
 800eb26:	69bb      	ldr	r3, [r7, #24]
 800eb28:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800eb2a:	4918      	ldr	r1, [pc, #96]	; (800eb8c <vTaskPriorityDisinheritAfterTimeout+0x130>)
 800eb2c:	4613      	mov	r3, r2
 800eb2e:	009b      	lsls	r3, r3, #2
 800eb30:	4413      	add	r3, r2
 800eb32:	009b      	lsls	r3, r3, #2
 800eb34:	440b      	add	r3, r1
 800eb36:	681b      	ldr	r3, [r3, #0]
 800eb38:	2b00      	cmp	r3, #0
 800eb3a:	d10a      	bne.n	800eb52 <vTaskPriorityDisinheritAfterTimeout+0xf6>
 800eb3c:	69bb      	ldr	r3, [r7, #24]
 800eb3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb40:	2201      	movs	r2, #1
 800eb42:	fa02 f303 	lsl.w	r3, r2, r3
 800eb46:	43da      	mvns	r2, r3
 800eb48:	4b11      	ldr	r3, [pc, #68]	; (800eb90 <vTaskPriorityDisinheritAfterTimeout+0x134>)
 800eb4a:	681b      	ldr	r3, [r3, #0]
 800eb4c:	4013      	ands	r3, r2
 800eb4e:	4a10      	ldr	r2, [pc, #64]	; (800eb90 <vTaskPriorityDisinheritAfterTimeout+0x134>)
 800eb50:	6013      	str	r3, [r2, #0]
 800eb52:	69bb      	ldr	r3, [r7, #24]
 800eb54:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb56:	2201      	movs	r2, #1
 800eb58:	409a      	lsls	r2, r3
 800eb5a:	4b0d      	ldr	r3, [pc, #52]	; (800eb90 <vTaskPriorityDisinheritAfterTimeout+0x134>)
 800eb5c:	681b      	ldr	r3, [r3, #0]
 800eb5e:	4313      	orrs	r3, r2
 800eb60:	4a0b      	ldr	r2, [pc, #44]	; (800eb90 <vTaskPriorityDisinheritAfterTimeout+0x134>)
 800eb62:	6013      	str	r3, [r2, #0]
 800eb64:	69bb      	ldr	r3, [r7, #24]
 800eb66:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800eb68:	4613      	mov	r3, r2
 800eb6a:	009b      	lsls	r3, r3, #2
 800eb6c:	4413      	add	r3, r2
 800eb6e:	009b      	lsls	r3, r3, #2
 800eb70:	4a06      	ldr	r2, [pc, #24]	; (800eb8c <vTaskPriorityDisinheritAfterTimeout+0x130>)
 800eb72:	441a      	add	r2, r3
 800eb74:	69bb      	ldr	r3, [r7, #24]
 800eb76:	3304      	adds	r3, #4
 800eb78:	4619      	mov	r1, r3
 800eb7a:	4610      	mov	r0, r2
 800eb7c:	f7fe fa80 	bl	800d080 <vListInsertEnd>
 800eb80:	bf00      	nop
 800eb82:	3720      	adds	r7, #32
 800eb84:	46bd      	mov	sp, r7
 800eb86:	bd80      	pop	{r7, pc}
 800eb88:	2000191c 	.word	0x2000191c
 800eb8c:	20001920 	.word	0x20001920
 800eb90:	20001a24 	.word	0x20001a24

0800eb94 <pvTaskIncrementMutexHeldCount>:
 800eb94:	b480      	push	{r7}
 800eb96:	af00      	add	r7, sp, #0
 800eb98:	4b07      	ldr	r3, [pc, #28]	; (800ebb8 <pvTaskIncrementMutexHeldCount+0x24>)
 800eb9a:	681b      	ldr	r3, [r3, #0]
 800eb9c:	2b00      	cmp	r3, #0
 800eb9e:	d004      	beq.n	800ebaa <pvTaskIncrementMutexHeldCount+0x16>
 800eba0:	4b05      	ldr	r3, [pc, #20]	; (800ebb8 <pvTaskIncrementMutexHeldCount+0x24>)
 800eba2:	681b      	ldr	r3, [r3, #0]
 800eba4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800eba6:	3201      	adds	r2, #1
 800eba8:	649a      	str	r2, [r3, #72]	; 0x48
 800ebaa:	4b03      	ldr	r3, [pc, #12]	; (800ebb8 <pvTaskIncrementMutexHeldCount+0x24>)
 800ebac:	681b      	ldr	r3, [r3, #0]
 800ebae:	4618      	mov	r0, r3
 800ebb0:	46bd      	mov	sp, r7
 800ebb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebb6:	4770      	bx	lr
 800ebb8:	2000191c 	.word	0x2000191c

0800ebbc <prvAddCurrentTaskToDelayedList>:
 800ebbc:	b580      	push	{r7, lr}
 800ebbe:	b084      	sub	sp, #16
 800ebc0:	af00      	add	r7, sp, #0
 800ebc2:	6078      	str	r0, [r7, #4]
 800ebc4:	6039      	str	r1, [r7, #0]
 800ebc6:	4b29      	ldr	r3, [pc, #164]	; (800ec6c <prvAddCurrentTaskToDelayedList+0xb0>)
 800ebc8:	681b      	ldr	r3, [r3, #0]
 800ebca:	60fb      	str	r3, [r7, #12]
 800ebcc:	4b28      	ldr	r3, [pc, #160]	; (800ec70 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ebce:	681b      	ldr	r3, [r3, #0]
 800ebd0:	3304      	adds	r3, #4
 800ebd2:	4618      	mov	r0, r3
 800ebd4:	f7fe fab1 	bl	800d13a <uxListRemove>
 800ebd8:	4603      	mov	r3, r0
 800ebda:	2b00      	cmp	r3, #0
 800ebdc:	d10b      	bne.n	800ebf6 <prvAddCurrentTaskToDelayedList+0x3a>
 800ebde:	4b24      	ldr	r3, [pc, #144]	; (800ec70 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ebe0:	681b      	ldr	r3, [r3, #0]
 800ebe2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebe4:	2201      	movs	r2, #1
 800ebe6:	fa02 f303 	lsl.w	r3, r2, r3
 800ebea:	43da      	mvns	r2, r3
 800ebec:	4b21      	ldr	r3, [pc, #132]	; (800ec74 <prvAddCurrentTaskToDelayedList+0xb8>)
 800ebee:	681b      	ldr	r3, [r3, #0]
 800ebf0:	4013      	ands	r3, r2
 800ebf2:	4a20      	ldr	r2, [pc, #128]	; (800ec74 <prvAddCurrentTaskToDelayedList+0xb8>)
 800ebf4:	6013      	str	r3, [r2, #0]
 800ebf6:	687b      	ldr	r3, [r7, #4]
 800ebf8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ebfc:	d10a      	bne.n	800ec14 <prvAddCurrentTaskToDelayedList+0x58>
 800ebfe:	683b      	ldr	r3, [r7, #0]
 800ec00:	2b00      	cmp	r3, #0
 800ec02:	d007      	beq.n	800ec14 <prvAddCurrentTaskToDelayedList+0x58>
 800ec04:	4b1a      	ldr	r3, [pc, #104]	; (800ec70 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ec06:	681b      	ldr	r3, [r3, #0]
 800ec08:	3304      	adds	r3, #4
 800ec0a:	4619      	mov	r1, r3
 800ec0c:	481a      	ldr	r0, [pc, #104]	; (800ec78 <prvAddCurrentTaskToDelayedList+0xbc>)
 800ec0e:	f7fe fa37 	bl	800d080 <vListInsertEnd>
 800ec12:	e026      	b.n	800ec62 <prvAddCurrentTaskToDelayedList+0xa6>
 800ec14:	68fa      	ldr	r2, [r7, #12]
 800ec16:	687b      	ldr	r3, [r7, #4]
 800ec18:	4413      	add	r3, r2
 800ec1a:	60bb      	str	r3, [r7, #8]
 800ec1c:	4b14      	ldr	r3, [pc, #80]	; (800ec70 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ec1e:	681b      	ldr	r3, [r3, #0]
 800ec20:	68ba      	ldr	r2, [r7, #8]
 800ec22:	605a      	str	r2, [r3, #4]
 800ec24:	68ba      	ldr	r2, [r7, #8]
 800ec26:	68fb      	ldr	r3, [r7, #12]
 800ec28:	429a      	cmp	r2, r3
 800ec2a:	d209      	bcs.n	800ec40 <prvAddCurrentTaskToDelayedList+0x84>
 800ec2c:	4b13      	ldr	r3, [pc, #76]	; (800ec7c <prvAddCurrentTaskToDelayedList+0xc0>)
 800ec2e:	681a      	ldr	r2, [r3, #0]
 800ec30:	4b0f      	ldr	r3, [pc, #60]	; (800ec70 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ec32:	681b      	ldr	r3, [r3, #0]
 800ec34:	3304      	adds	r3, #4
 800ec36:	4619      	mov	r1, r3
 800ec38:	4610      	mov	r0, r2
 800ec3a:	f7fe fa45 	bl	800d0c8 <vListInsert>
 800ec3e:	e010      	b.n	800ec62 <prvAddCurrentTaskToDelayedList+0xa6>
 800ec40:	4b0f      	ldr	r3, [pc, #60]	; (800ec80 <prvAddCurrentTaskToDelayedList+0xc4>)
 800ec42:	681a      	ldr	r2, [r3, #0]
 800ec44:	4b0a      	ldr	r3, [pc, #40]	; (800ec70 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ec46:	681b      	ldr	r3, [r3, #0]
 800ec48:	3304      	adds	r3, #4
 800ec4a:	4619      	mov	r1, r3
 800ec4c:	4610      	mov	r0, r2
 800ec4e:	f7fe fa3b 	bl	800d0c8 <vListInsert>
 800ec52:	4b0c      	ldr	r3, [pc, #48]	; (800ec84 <prvAddCurrentTaskToDelayedList+0xc8>)
 800ec54:	681b      	ldr	r3, [r3, #0]
 800ec56:	68ba      	ldr	r2, [r7, #8]
 800ec58:	429a      	cmp	r2, r3
 800ec5a:	d202      	bcs.n	800ec62 <prvAddCurrentTaskToDelayedList+0xa6>
 800ec5c:	4a09      	ldr	r2, [pc, #36]	; (800ec84 <prvAddCurrentTaskToDelayedList+0xc8>)
 800ec5e:	68bb      	ldr	r3, [r7, #8]
 800ec60:	6013      	str	r3, [r2, #0]
 800ec62:	bf00      	nop
 800ec64:	3710      	adds	r7, #16
 800ec66:	46bd      	mov	sp, r7
 800ec68:	bd80      	pop	{r7, pc}
 800ec6a:	bf00      	nop
 800ec6c:	20001a20 	.word	0x20001a20
 800ec70:	2000191c 	.word	0x2000191c
 800ec74:	20001a24 	.word	0x20001a24
 800ec78:	20001a08 	.word	0x20001a08
 800ec7c:	200019d8 	.word	0x200019d8
 800ec80:	200019d4 	.word	0x200019d4
 800ec84:	20001a3c 	.word	0x20001a3c

0800ec88 <pxPortInitialiseStack>:
 800ec88:	b480      	push	{r7}
 800ec8a:	b085      	sub	sp, #20
 800ec8c:	af00      	add	r7, sp, #0
 800ec8e:	60f8      	str	r0, [r7, #12]
 800ec90:	60b9      	str	r1, [r7, #8]
 800ec92:	607a      	str	r2, [r7, #4]
 800ec94:	68fb      	ldr	r3, [r7, #12]
 800ec96:	3b04      	subs	r3, #4
 800ec98:	60fb      	str	r3, [r7, #12]
 800ec9a:	68fb      	ldr	r3, [r7, #12]
 800ec9c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800eca0:	601a      	str	r2, [r3, #0]
 800eca2:	68fb      	ldr	r3, [r7, #12]
 800eca4:	3b04      	subs	r3, #4
 800eca6:	60fb      	str	r3, [r7, #12]
 800eca8:	68bb      	ldr	r3, [r7, #8]
 800ecaa:	f023 0201 	bic.w	r2, r3, #1
 800ecae:	68fb      	ldr	r3, [r7, #12]
 800ecb0:	601a      	str	r2, [r3, #0]
 800ecb2:	68fb      	ldr	r3, [r7, #12]
 800ecb4:	3b04      	subs	r3, #4
 800ecb6:	60fb      	str	r3, [r7, #12]
 800ecb8:	4a0c      	ldr	r2, [pc, #48]	; (800ecec <pxPortInitialiseStack+0x64>)
 800ecba:	68fb      	ldr	r3, [r7, #12]
 800ecbc:	601a      	str	r2, [r3, #0]
 800ecbe:	68fb      	ldr	r3, [r7, #12]
 800ecc0:	3b14      	subs	r3, #20
 800ecc2:	60fb      	str	r3, [r7, #12]
 800ecc4:	687a      	ldr	r2, [r7, #4]
 800ecc6:	68fb      	ldr	r3, [r7, #12]
 800ecc8:	601a      	str	r2, [r3, #0]
 800ecca:	68fb      	ldr	r3, [r7, #12]
 800eccc:	3b04      	subs	r3, #4
 800ecce:	60fb      	str	r3, [r7, #12]
 800ecd0:	68fb      	ldr	r3, [r7, #12]
 800ecd2:	f06f 0202 	mvn.w	r2, #2
 800ecd6:	601a      	str	r2, [r3, #0]
 800ecd8:	68fb      	ldr	r3, [r7, #12]
 800ecda:	3b20      	subs	r3, #32
 800ecdc:	60fb      	str	r3, [r7, #12]
 800ecde:	68fb      	ldr	r3, [r7, #12]
 800ece0:	4618      	mov	r0, r3
 800ece2:	3714      	adds	r7, #20
 800ece4:	46bd      	mov	sp, r7
 800ece6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecea:	4770      	bx	lr
 800ecec:	0800ecf1 	.word	0x0800ecf1

0800ecf0 <prvTaskExitError>:
 800ecf0:	b480      	push	{r7}
 800ecf2:	b085      	sub	sp, #20
 800ecf4:	af00      	add	r7, sp, #0
 800ecf6:	2300      	movs	r3, #0
 800ecf8:	607b      	str	r3, [r7, #4]
 800ecfa:	4b13      	ldr	r3, [pc, #76]	; (800ed48 <prvTaskExitError+0x58>)
 800ecfc:	681b      	ldr	r3, [r3, #0]
 800ecfe:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ed02:	d00b      	beq.n	800ed1c <prvTaskExitError+0x2c>
 800ed04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed08:	b672      	cpsid	i
 800ed0a:	f383 8811 	msr	BASEPRI, r3
 800ed0e:	f3bf 8f6f 	isb	sy
 800ed12:	f3bf 8f4f 	dsb	sy
 800ed16:	b662      	cpsie	i
 800ed18:	60fb      	str	r3, [r7, #12]
 800ed1a:	e7fe      	b.n	800ed1a <prvTaskExitError+0x2a>
 800ed1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed20:	b672      	cpsid	i
 800ed22:	f383 8811 	msr	BASEPRI, r3
 800ed26:	f3bf 8f6f 	isb	sy
 800ed2a:	f3bf 8f4f 	dsb	sy
 800ed2e:	b662      	cpsie	i
 800ed30:	60bb      	str	r3, [r7, #8]
 800ed32:	bf00      	nop
 800ed34:	687b      	ldr	r3, [r7, #4]
 800ed36:	2b00      	cmp	r3, #0
 800ed38:	d0fc      	beq.n	800ed34 <prvTaskExitError+0x44>
 800ed3a:	bf00      	nop
 800ed3c:	3714      	adds	r7, #20
 800ed3e:	46bd      	mov	sp, r7
 800ed40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed44:	4770      	bx	lr
 800ed46:	bf00      	nop
 800ed48:	200013c0 	.word	0x200013c0
 800ed4c:	00000000 	.word	0x00000000

0800ed50 <SVC_Handler>:
 800ed50:	4b07      	ldr	r3, [pc, #28]	; (800ed70 <pxCurrentTCBConst2>)
 800ed52:	6819      	ldr	r1, [r3, #0]
 800ed54:	6808      	ldr	r0, [r1, #0]
 800ed56:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed5a:	f380 8809 	msr	PSP, r0
 800ed5e:	f3bf 8f6f 	isb	sy
 800ed62:	f04f 0000 	mov.w	r0, #0
 800ed66:	f380 8811 	msr	BASEPRI, r0
 800ed6a:	4770      	bx	lr
 800ed6c:	f3af 8000 	nop.w

0800ed70 <pxCurrentTCBConst2>:
 800ed70:	2000191c 	.word	0x2000191c
 800ed74:	bf00      	nop
 800ed76:	bf00      	nop

0800ed78 <prvPortStartFirstTask>:
 800ed78:	4808      	ldr	r0, [pc, #32]	; (800ed9c <prvPortStartFirstTask+0x24>)
 800ed7a:	6800      	ldr	r0, [r0, #0]
 800ed7c:	6800      	ldr	r0, [r0, #0]
 800ed7e:	f380 8808 	msr	MSP, r0
 800ed82:	f04f 0000 	mov.w	r0, #0
 800ed86:	f380 8814 	msr	CONTROL, r0
 800ed8a:	b662      	cpsie	i
 800ed8c:	b661      	cpsie	f
 800ed8e:	f3bf 8f4f 	dsb	sy
 800ed92:	f3bf 8f6f 	isb	sy
 800ed96:	df00      	svc	0
 800ed98:	bf00      	nop
 800ed9a:	bf00      	nop
 800ed9c:	e000ed08 	.word	0xe000ed08

0800eda0 <xPortStartScheduler>:
 800eda0:	b580      	push	{r7, lr}
 800eda2:	b084      	sub	sp, #16
 800eda4:	af00      	add	r7, sp, #0
 800eda6:	4b36      	ldr	r3, [pc, #216]	; (800ee80 <xPortStartScheduler+0xe0>)
 800eda8:	60fb      	str	r3, [r7, #12]
 800edaa:	68fb      	ldr	r3, [r7, #12]
 800edac:	781b      	ldrb	r3, [r3, #0]
 800edae:	b2db      	uxtb	r3, r3
 800edb0:	607b      	str	r3, [r7, #4]
 800edb2:	68fb      	ldr	r3, [r7, #12]
 800edb4:	22ff      	movs	r2, #255	; 0xff
 800edb6:	701a      	strb	r2, [r3, #0]
 800edb8:	68fb      	ldr	r3, [r7, #12]
 800edba:	781b      	ldrb	r3, [r3, #0]
 800edbc:	b2db      	uxtb	r3, r3
 800edbe:	70fb      	strb	r3, [r7, #3]
 800edc0:	78fb      	ldrb	r3, [r7, #3]
 800edc2:	b2db      	uxtb	r3, r3
 800edc4:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800edc8:	b2da      	uxtb	r2, r3
 800edca:	4b2e      	ldr	r3, [pc, #184]	; (800ee84 <xPortStartScheduler+0xe4>)
 800edcc:	701a      	strb	r2, [r3, #0]
 800edce:	4b2e      	ldr	r3, [pc, #184]	; (800ee88 <xPortStartScheduler+0xe8>)
 800edd0:	2207      	movs	r2, #7
 800edd2:	601a      	str	r2, [r3, #0]
 800edd4:	e009      	b.n	800edea <xPortStartScheduler+0x4a>
 800edd6:	4b2c      	ldr	r3, [pc, #176]	; (800ee88 <xPortStartScheduler+0xe8>)
 800edd8:	681b      	ldr	r3, [r3, #0]
 800edda:	3b01      	subs	r3, #1
 800eddc:	4a2a      	ldr	r2, [pc, #168]	; (800ee88 <xPortStartScheduler+0xe8>)
 800edde:	6013      	str	r3, [r2, #0]
 800ede0:	78fb      	ldrb	r3, [r7, #3]
 800ede2:	b2db      	uxtb	r3, r3
 800ede4:	005b      	lsls	r3, r3, #1
 800ede6:	b2db      	uxtb	r3, r3
 800ede8:	70fb      	strb	r3, [r7, #3]
 800edea:	78fb      	ldrb	r3, [r7, #3]
 800edec:	b2db      	uxtb	r3, r3
 800edee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800edf2:	2b80      	cmp	r3, #128	; 0x80
 800edf4:	d0ef      	beq.n	800edd6 <xPortStartScheduler+0x36>
 800edf6:	4b24      	ldr	r3, [pc, #144]	; (800ee88 <xPortStartScheduler+0xe8>)
 800edf8:	681b      	ldr	r3, [r3, #0]
 800edfa:	f1c3 0307 	rsb	r3, r3, #7
 800edfe:	2b04      	cmp	r3, #4
 800ee00:	d00b      	beq.n	800ee1a <xPortStartScheduler+0x7a>
 800ee02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee06:	b672      	cpsid	i
 800ee08:	f383 8811 	msr	BASEPRI, r3
 800ee0c:	f3bf 8f6f 	isb	sy
 800ee10:	f3bf 8f4f 	dsb	sy
 800ee14:	b662      	cpsie	i
 800ee16:	60bb      	str	r3, [r7, #8]
 800ee18:	e7fe      	b.n	800ee18 <xPortStartScheduler+0x78>
 800ee1a:	4b1b      	ldr	r3, [pc, #108]	; (800ee88 <xPortStartScheduler+0xe8>)
 800ee1c:	681b      	ldr	r3, [r3, #0]
 800ee1e:	021b      	lsls	r3, r3, #8
 800ee20:	4a19      	ldr	r2, [pc, #100]	; (800ee88 <xPortStartScheduler+0xe8>)
 800ee22:	6013      	str	r3, [r2, #0]
 800ee24:	4b18      	ldr	r3, [pc, #96]	; (800ee88 <xPortStartScheduler+0xe8>)
 800ee26:	681b      	ldr	r3, [r3, #0]
 800ee28:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800ee2c:	4a16      	ldr	r2, [pc, #88]	; (800ee88 <xPortStartScheduler+0xe8>)
 800ee2e:	6013      	str	r3, [r2, #0]
 800ee30:	687b      	ldr	r3, [r7, #4]
 800ee32:	b2da      	uxtb	r2, r3
 800ee34:	68fb      	ldr	r3, [r7, #12]
 800ee36:	701a      	strb	r2, [r3, #0]
 800ee38:	4b14      	ldr	r3, [pc, #80]	; (800ee8c <xPortStartScheduler+0xec>)
 800ee3a:	681b      	ldr	r3, [r3, #0]
 800ee3c:	4a13      	ldr	r2, [pc, #76]	; (800ee8c <xPortStartScheduler+0xec>)
 800ee3e:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800ee42:	6013      	str	r3, [r2, #0]
 800ee44:	4b11      	ldr	r3, [pc, #68]	; (800ee8c <xPortStartScheduler+0xec>)
 800ee46:	681b      	ldr	r3, [r3, #0]
 800ee48:	4a10      	ldr	r2, [pc, #64]	; (800ee8c <xPortStartScheduler+0xec>)
 800ee4a:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800ee4e:	6013      	str	r3, [r2, #0]
 800ee50:	f000 f8d4 	bl	800effc <vPortSetupTimerInterrupt>
 800ee54:	4b0e      	ldr	r3, [pc, #56]	; (800ee90 <xPortStartScheduler+0xf0>)
 800ee56:	2200      	movs	r2, #0
 800ee58:	601a      	str	r2, [r3, #0]
 800ee5a:	f000 f8f3 	bl	800f044 <vPortEnableVFP>
 800ee5e:	4b0d      	ldr	r3, [pc, #52]	; (800ee94 <xPortStartScheduler+0xf4>)
 800ee60:	681b      	ldr	r3, [r3, #0]
 800ee62:	4a0c      	ldr	r2, [pc, #48]	; (800ee94 <xPortStartScheduler+0xf4>)
 800ee64:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800ee68:	6013      	str	r3, [r2, #0]
 800ee6a:	f7ff ff85 	bl	800ed78 <prvPortStartFirstTask>
 800ee6e:	f7ff fa67 	bl	800e340 <vTaskSwitchContext>
 800ee72:	f7ff ff3d 	bl	800ecf0 <prvTaskExitError>
 800ee76:	2300      	movs	r3, #0
 800ee78:	4618      	mov	r0, r3
 800ee7a:	3710      	adds	r7, #16
 800ee7c:	46bd      	mov	sp, r7
 800ee7e:	bd80      	pop	{r7, pc}
 800ee80:	e000e400 	.word	0xe000e400
 800ee84:	20001a48 	.word	0x20001a48
 800ee88:	20001a4c 	.word	0x20001a4c
 800ee8c:	e000ed20 	.word	0xe000ed20
 800ee90:	200013c0 	.word	0x200013c0
 800ee94:	e000ef34 	.word	0xe000ef34

0800ee98 <vPortEnterCritical>:
 800ee98:	b480      	push	{r7}
 800ee9a:	b083      	sub	sp, #12
 800ee9c:	af00      	add	r7, sp, #0
 800ee9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eea2:	b672      	cpsid	i
 800eea4:	f383 8811 	msr	BASEPRI, r3
 800eea8:	f3bf 8f6f 	isb	sy
 800eeac:	f3bf 8f4f 	dsb	sy
 800eeb0:	b662      	cpsie	i
 800eeb2:	607b      	str	r3, [r7, #4]
 800eeb4:	4b0f      	ldr	r3, [pc, #60]	; (800eef4 <vPortEnterCritical+0x5c>)
 800eeb6:	681b      	ldr	r3, [r3, #0]
 800eeb8:	3301      	adds	r3, #1
 800eeba:	4a0e      	ldr	r2, [pc, #56]	; (800eef4 <vPortEnterCritical+0x5c>)
 800eebc:	6013      	str	r3, [r2, #0]
 800eebe:	4b0d      	ldr	r3, [pc, #52]	; (800eef4 <vPortEnterCritical+0x5c>)
 800eec0:	681b      	ldr	r3, [r3, #0]
 800eec2:	2b01      	cmp	r3, #1
 800eec4:	d110      	bne.n	800eee8 <vPortEnterCritical+0x50>
 800eec6:	4b0c      	ldr	r3, [pc, #48]	; (800eef8 <vPortEnterCritical+0x60>)
 800eec8:	681b      	ldr	r3, [r3, #0]
 800eeca:	b2db      	uxtb	r3, r3
 800eecc:	2b00      	cmp	r3, #0
 800eece:	d00b      	beq.n	800eee8 <vPortEnterCritical+0x50>
 800eed0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eed4:	b672      	cpsid	i
 800eed6:	f383 8811 	msr	BASEPRI, r3
 800eeda:	f3bf 8f6f 	isb	sy
 800eede:	f3bf 8f4f 	dsb	sy
 800eee2:	b662      	cpsie	i
 800eee4:	603b      	str	r3, [r7, #0]
 800eee6:	e7fe      	b.n	800eee6 <vPortEnterCritical+0x4e>
 800eee8:	bf00      	nop
 800eeea:	370c      	adds	r7, #12
 800eeec:	46bd      	mov	sp, r7
 800eeee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eef2:	4770      	bx	lr
 800eef4:	200013c0 	.word	0x200013c0
 800eef8:	e000ed04 	.word	0xe000ed04

0800eefc <vPortExitCritical>:
 800eefc:	b480      	push	{r7}
 800eefe:	b083      	sub	sp, #12
 800ef00:	af00      	add	r7, sp, #0
 800ef02:	4b12      	ldr	r3, [pc, #72]	; (800ef4c <vPortExitCritical+0x50>)
 800ef04:	681b      	ldr	r3, [r3, #0]
 800ef06:	2b00      	cmp	r3, #0
 800ef08:	d10b      	bne.n	800ef22 <vPortExitCritical+0x26>
 800ef0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef0e:	b672      	cpsid	i
 800ef10:	f383 8811 	msr	BASEPRI, r3
 800ef14:	f3bf 8f6f 	isb	sy
 800ef18:	f3bf 8f4f 	dsb	sy
 800ef1c:	b662      	cpsie	i
 800ef1e:	607b      	str	r3, [r7, #4]
 800ef20:	e7fe      	b.n	800ef20 <vPortExitCritical+0x24>
 800ef22:	4b0a      	ldr	r3, [pc, #40]	; (800ef4c <vPortExitCritical+0x50>)
 800ef24:	681b      	ldr	r3, [r3, #0]
 800ef26:	3b01      	subs	r3, #1
 800ef28:	4a08      	ldr	r2, [pc, #32]	; (800ef4c <vPortExitCritical+0x50>)
 800ef2a:	6013      	str	r3, [r2, #0]
 800ef2c:	4b07      	ldr	r3, [pc, #28]	; (800ef4c <vPortExitCritical+0x50>)
 800ef2e:	681b      	ldr	r3, [r3, #0]
 800ef30:	2b00      	cmp	r3, #0
 800ef32:	d104      	bne.n	800ef3e <vPortExitCritical+0x42>
 800ef34:	2300      	movs	r3, #0
 800ef36:	603b      	str	r3, [r7, #0]
 800ef38:	683b      	ldr	r3, [r7, #0]
 800ef3a:	f383 8811 	msr	BASEPRI, r3
 800ef3e:	bf00      	nop
 800ef40:	370c      	adds	r7, #12
 800ef42:	46bd      	mov	sp, r7
 800ef44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef48:	4770      	bx	lr
 800ef4a:	bf00      	nop
 800ef4c:	200013c0 	.word	0x200013c0

0800ef50 <PendSV_Handler>:
 800ef50:	f3ef 8009 	mrs	r0, PSP
 800ef54:	f3bf 8f6f 	isb	sy
 800ef58:	4b15      	ldr	r3, [pc, #84]	; (800efb0 <pxCurrentTCBConst>)
 800ef5a:	681a      	ldr	r2, [r3, #0]
 800ef5c:	f01e 0f10 	tst.w	lr, #16
 800ef60:	bf08      	it	eq
 800ef62:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800ef66:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef6a:	6010      	str	r0, [r2, #0]
 800ef6c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800ef70:	f04f 0050 	mov.w	r0, #80	; 0x50
 800ef74:	b672      	cpsid	i
 800ef76:	f380 8811 	msr	BASEPRI, r0
 800ef7a:	f3bf 8f4f 	dsb	sy
 800ef7e:	f3bf 8f6f 	isb	sy
 800ef82:	b662      	cpsie	i
 800ef84:	f7ff f9dc 	bl	800e340 <vTaskSwitchContext>
 800ef88:	f04f 0000 	mov.w	r0, #0
 800ef8c:	f380 8811 	msr	BASEPRI, r0
 800ef90:	bc09      	pop	{r0, r3}
 800ef92:	6819      	ldr	r1, [r3, #0]
 800ef94:	6808      	ldr	r0, [r1, #0]
 800ef96:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef9a:	f01e 0f10 	tst.w	lr, #16
 800ef9e:	bf08      	it	eq
 800efa0:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800efa4:	f380 8809 	msr	PSP, r0
 800efa8:	f3bf 8f6f 	isb	sy
 800efac:	4770      	bx	lr
 800efae:	bf00      	nop

0800efb0 <pxCurrentTCBConst>:
 800efb0:	2000191c 	.word	0x2000191c
 800efb4:	bf00      	nop
 800efb6:	bf00      	nop

0800efb8 <SysTick_Handler>:
 800efb8:	b580      	push	{r7, lr}
 800efba:	b082      	sub	sp, #8
 800efbc:	af00      	add	r7, sp, #0
 800efbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efc2:	b672      	cpsid	i
 800efc4:	f383 8811 	msr	BASEPRI, r3
 800efc8:	f3bf 8f6f 	isb	sy
 800efcc:	f3bf 8f4f 	dsb	sy
 800efd0:	b662      	cpsie	i
 800efd2:	607b      	str	r3, [r7, #4]
 800efd4:	f7ff f8fa 	bl	800e1cc <xTaskIncrementTick>
 800efd8:	4603      	mov	r3, r0
 800efda:	2b00      	cmp	r3, #0
 800efdc:	d003      	beq.n	800efe6 <SysTick_Handler+0x2e>
 800efde:	4b06      	ldr	r3, [pc, #24]	; (800eff8 <SysTick_Handler+0x40>)
 800efe0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800efe4:	601a      	str	r2, [r3, #0]
 800efe6:	2300      	movs	r3, #0
 800efe8:	603b      	str	r3, [r7, #0]
 800efea:	683b      	ldr	r3, [r7, #0]
 800efec:	f383 8811 	msr	BASEPRI, r3
 800eff0:	bf00      	nop
 800eff2:	3708      	adds	r7, #8
 800eff4:	46bd      	mov	sp, r7
 800eff6:	bd80      	pop	{r7, pc}
 800eff8:	e000ed04 	.word	0xe000ed04

0800effc <vPortSetupTimerInterrupt>:
 800effc:	b480      	push	{r7}
 800effe:	af00      	add	r7, sp, #0
 800f000:	4b0b      	ldr	r3, [pc, #44]	; (800f030 <vPortSetupTimerInterrupt+0x34>)
 800f002:	2200      	movs	r2, #0
 800f004:	601a      	str	r2, [r3, #0]
 800f006:	4b0b      	ldr	r3, [pc, #44]	; (800f034 <vPortSetupTimerInterrupt+0x38>)
 800f008:	2200      	movs	r2, #0
 800f00a:	601a      	str	r2, [r3, #0]
 800f00c:	4b0a      	ldr	r3, [pc, #40]	; (800f038 <vPortSetupTimerInterrupt+0x3c>)
 800f00e:	681b      	ldr	r3, [r3, #0]
 800f010:	4a0a      	ldr	r2, [pc, #40]	; (800f03c <vPortSetupTimerInterrupt+0x40>)
 800f012:	fba2 2303 	umull	r2, r3, r2, r3
 800f016:	099b      	lsrs	r3, r3, #6
 800f018:	4a09      	ldr	r2, [pc, #36]	; (800f040 <vPortSetupTimerInterrupt+0x44>)
 800f01a:	3b01      	subs	r3, #1
 800f01c:	6013      	str	r3, [r2, #0]
 800f01e:	4b04      	ldr	r3, [pc, #16]	; (800f030 <vPortSetupTimerInterrupt+0x34>)
 800f020:	2207      	movs	r2, #7
 800f022:	601a      	str	r2, [r3, #0]
 800f024:	bf00      	nop
 800f026:	46bd      	mov	sp, r7
 800f028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f02c:	4770      	bx	lr
 800f02e:	bf00      	nop
 800f030:	e000e010 	.word	0xe000e010
 800f034:	e000e018 	.word	0xe000e018
 800f038:	200013b4 	.word	0x200013b4
 800f03c:	10624dd3 	.word	0x10624dd3
 800f040:	e000e014 	.word	0xe000e014

0800f044 <vPortEnableVFP>:
 800f044:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800f054 <vPortEnableVFP+0x10>
 800f048:	6801      	ldr	r1, [r0, #0]
 800f04a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800f04e:	6001      	str	r1, [r0, #0]
 800f050:	4770      	bx	lr
 800f052:	bf00      	nop
 800f054:	e000ed88 	.word	0xe000ed88

0800f058 <pvPortMalloc>:
 800f058:	b580      	push	{r7, lr}
 800f05a:	b08a      	sub	sp, #40	; 0x28
 800f05c:	af00      	add	r7, sp, #0
 800f05e:	6078      	str	r0, [r7, #4]
 800f060:	2300      	movs	r3, #0
 800f062:	61fb      	str	r3, [r7, #28]
 800f064:	f7fe fff6 	bl	800e054 <vTaskSuspendAll>
 800f068:	4b5c      	ldr	r3, [pc, #368]	; (800f1dc <pvPortMalloc+0x184>)
 800f06a:	681b      	ldr	r3, [r3, #0]
 800f06c:	2b00      	cmp	r3, #0
 800f06e:	d101      	bne.n	800f074 <pvPortMalloc+0x1c>
 800f070:	f000 f91a 	bl	800f2a8 <prvHeapInit>
 800f074:	4b5a      	ldr	r3, [pc, #360]	; (800f1e0 <pvPortMalloc+0x188>)
 800f076:	681a      	ldr	r2, [r3, #0]
 800f078:	687b      	ldr	r3, [r7, #4]
 800f07a:	4013      	ands	r3, r2
 800f07c:	2b00      	cmp	r3, #0
 800f07e:	f040 8090 	bne.w	800f1a2 <pvPortMalloc+0x14a>
 800f082:	687b      	ldr	r3, [r7, #4]
 800f084:	2b00      	cmp	r3, #0
 800f086:	d01e      	beq.n	800f0c6 <pvPortMalloc+0x6e>
 800f088:	2208      	movs	r2, #8
 800f08a:	687b      	ldr	r3, [r7, #4]
 800f08c:	4413      	add	r3, r2
 800f08e:	607b      	str	r3, [r7, #4]
 800f090:	687b      	ldr	r3, [r7, #4]
 800f092:	f003 0307 	and.w	r3, r3, #7
 800f096:	2b00      	cmp	r3, #0
 800f098:	d015      	beq.n	800f0c6 <pvPortMalloc+0x6e>
 800f09a:	687b      	ldr	r3, [r7, #4]
 800f09c:	f023 0307 	bic.w	r3, r3, #7
 800f0a0:	3308      	adds	r3, #8
 800f0a2:	607b      	str	r3, [r7, #4]
 800f0a4:	687b      	ldr	r3, [r7, #4]
 800f0a6:	f003 0307 	and.w	r3, r3, #7
 800f0aa:	2b00      	cmp	r3, #0
 800f0ac:	d00b      	beq.n	800f0c6 <pvPortMalloc+0x6e>
 800f0ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0b2:	b672      	cpsid	i
 800f0b4:	f383 8811 	msr	BASEPRI, r3
 800f0b8:	f3bf 8f6f 	isb	sy
 800f0bc:	f3bf 8f4f 	dsb	sy
 800f0c0:	b662      	cpsie	i
 800f0c2:	617b      	str	r3, [r7, #20]
 800f0c4:	e7fe      	b.n	800f0c4 <pvPortMalloc+0x6c>
 800f0c6:	687b      	ldr	r3, [r7, #4]
 800f0c8:	2b00      	cmp	r3, #0
 800f0ca:	d06a      	beq.n	800f1a2 <pvPortMalloc+0x14a>
 800f0cc:	4b45      	ldr	r3, [pc, #276]	; (800f1e4 <pvPortMalloc+0x18c>)
 800f0ce:	681b      	ldr	r3, [r3, #0]
 800f0d0:	687a      	ldr	r2, [r7, #4]
 800f0d2:	429a      	cmp	r2, r3
 800f0d4:	d865      	bhi.n	800f1a2 <pvPortMalloc+0x14a>
 800f0d6:	4b44      	ldr	r3, [pc, #272]	; (800f1e8 <pvPortMalloc+0x190>)
 800f0d8:	623b      	str	r3, [r7, #32]
 800f0da:	4b43      	ldr	r3, [pc, #268]	; (800f1e8 <pvPortMalloc+0x190>)
 800f0dc:	681b      	ldr	r3, [r3, #0]
 800f0de:	627b      	str	r3, [r7, #36]	; 0x24
 800f0e0:	e004      	b.n	800f0ec <pvPortMalloc+0x94>
 800f0e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0e4:	623b      	str	r3, [r7, #32]
 800f0e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0e8:	681b      	ldr	r3, [r3, #0]
 800f0ea:	627b      	str	r3, [r7, #36]	; 0x24
 800f0ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0ee:	685b      	ldr	r3, [r3, #4]
 800f0f0:	687a      	ldr	r2, [r7, #4]
 800f0f2:	429a      	cmp	r2, r3
 800f0f4:	d903      	bls.n	800f0fe <pvPortMalloc+0xa6>
 800f0f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0f8:	681b      	ldr	r3, [r3, #0]
 800f0fa:	2b00      	cmp	r3, #0
 800f0fc:	d1f1      	bne.n	800f0e2 <pvPortMalloc+0x8a>
 800f0fe:	4b37      	ldr	r3, [pc, #220]	; (800f1dc <pvPortMalloc+0x184>)
 800f100:	681b      	ldr	r3, [r3, #0]
 800f102:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800f104:	429a      	cmp	r2, r3
 800f106:	d04c      	beq.n	800f1a2 <pvPortMalloc+0x14a>
 800f108:	6a3b      	ldr	r3, [r7, #32]
 800f10a:	681b      	ldr	r3, [r3, #0]
 800f10c:	2208      	movs	r2, #8
 800f10e:	4413      	add	r3, r2
 800f110:	61fb      	str	r3, [r7, #28]
 800f112:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f114:	681a      	ldr	r2, [r3, #0]
 800f116:	6a3b      	ldr	r3, [r7, #32]
 800f118:	601a      	str	r2, [r3, #0]
 800f11a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f11c:	685a      	ldr	r2, [r3, #4]
 800f11e:	687b      	ldr	r3, [r7, #4]
 800f120:	1ad2      	subs	r2, r2, r3
 800f122:	2308      	movs	r3, #8
 800f124:	005b      	lsls	r3, r3, #1
 800f126:	429a      	cmp	r2, r3
 800f128:	d920      	bls.n	800f16c <pvPortMalloc+0x114>
 800f12a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800f12c:	687b      	ldr	r3, [r7, #4]
 800f12e:	4413      	add	r3, r2
 800f130:	61bb      	str	r3, [r7, #24]
 800f132:	69bb      	ldr	r3, [r7, #24]
 800f134:	f003 0307 	and.w	r3, r3, #7
 800f138:	2b00      	cmp	r3, #0
 800f13a:	d00b      	beq.n	800f154 <pvPortMalloc+0xfc>
 800f13c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f140:	b672      	cpsid	i
 800f142:	f383 8811 	msr	BASEPRI, r3
 800f146:	f3bf 8f6f 	isb	sy
 800f14a:	f3bf 8f4f 	dsb	sy
 800f14e:	b662      	cpsie	i
 800f150:	613b      	str	r3, [r7, #16]
 800f152:	e7fe      	b.n	800f152 <pvPortMalloc+0xfa>
 800f154:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f156:	685a      	ldr	r2, [r3, #4]
 800f158:	687b      	ldr	r3, [r7, #4]
 800f15a:	1ad2      	subs	r2, r2, r3
 800f15c:	69bb      	ldr	r3, [r7, #24]
 800f15e:	605a      	str	r2, [r3, #4]
 800f160:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f162:	687a      	ldr	r2, [r7, #4]
 800f164:	605a      	str	r2, [r3, #4]
 800f166:	69b8      	ldr	r0, [r7, #24]
 800f168:	f000 f900 	bl	800f36c <prvInsertBlockIntoFreeList>
 800f16c:	4b1d      	ldr	r3, [pc, #116]	; (800f1e4 <pvPortMalloc+0x18c>)
 800f16e:	681a      	ldr	r2, [r3, #0]
 800f170:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f172:	685b      	ldr	r3, [r3, #4]
 800f174:	1ad3      	subs	r3, r2, r3
 800f176:	4a1b      	ldr	r2, [pc, #108]	; (800f1e4 <pvPortMalloc+0x18c>)
 800f178:	6013      	str	r3, [r2, #0]
 800f17a:	4b1a      	ldr	r3, [pc, #104]	; (800f1e4 <pvPortMalloc+0x18c>)
 800f17c:	681a      	ldr	r2, [r3, #0]
 800f17e:	4b1b      	ldr	r3, [pc, #108]	; (800f1ec <pvPortMalloc+0x194>)
 800f180:	681b      	ldr	r3, [r3, #0]
 800f182:	429a      	cmp	r2, r3
 800f184:	d203      	bcs.n	800f18e <pvPortMalloc+0x136>
 800f186:	4b17      	ldr	r3, [pc, #92]	; (800f1e4 <pvPortMalloc+0x18c>)
 800f188:	681b      	ldr	r3, [r3, #0]
 800f18a:	4a18      	ldr	r2, [pc, #96]	; (800f1ec <pvPortMalloc+0x194>)
 800f18c:	6013      	str	r3, [r2, #0]
 800f18e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f190:	685a      	ldr	r2, [r3, #4]
 800f192:	4b13      	ldr	r3, [pc, #76]	; (800f1e0 <pvPortMalloc+0x188>)
 800f194:	681b      	ldr	r3, [r3, #0]
 800f196:	431a      	orrs	r2, r3
 800f198:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f19a:	605a      	str	r2, [r3, #4]
 800f19c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f19e:	2200      	movs	r2, #0
 800f1a0:	601a      	str	r2, [r3, #0]
 800f1a2:	f7fe ff65 	bl	800e070 <xTaskResumeAll>
 800f1a6:	69fb      	ldr	r3, [r7, #28]
 800f1a8:	2b00      	cmp	r3, #0
 800f1aa:	d101      	bne.n	800f1b0 <pvPortMalloc+0x158>
 800f1ac:	f7f1 fa12 	bl	80005d4 <vApplicationMallocFailedHook>
 800f1b0:	69fb      	ldr	r3, [r7, #28]
 800f1b2:	f003 0307 	and.w	r3, r3, #7
 800f1b6:	2b00      	cmp	r3, #0
 800f1b8:	d00b      	beq.n	800f1d2 <pvPortMalloc+0x17a>
 800f1ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1be:	b672      	cpsid	i
 800f1c0:	f383 8811 	msr	BASEPRI, r3
 800f1c4:	f3bf 8f6f 	isb	sy
 800f1c8:	f3bf 8f4f 	dsb	sy
 800f1cc:	b662      	cpsie	i
 800f1ce:	60fb      	str	r3, [r7, #12]
 800f1d0:	e7fe      	b.n	800f1d0 <pvPortMalloc+0x178>
 800f1d2:	69fb      	ldr	r3, [r7, #28]
 800f1d4:	4618      	mov	r0, r3
 800f1d6:	3728      	adds	r7, #40	; 0x28
 800f1d8:	46bd      	mov	sp, r7
 800f1da:	bd80      	pop	{r7, pc}
 800f1dc:	20009a58 	.word	0x20009a58
 800f1e0:	20009a64 	.word	0x20009a64
 800f1e4:	20009a5c 	.word	0x20009a5c
 800f1e8:	20009a50 	.word	0x20009a50
 800f1ec:	20009a60 	.word	0x20009a60

0800f1f0 <vPortFree>:
 800f1f0:	b580      	push	{r7, lr}
 800f1f2:	b086      	sub	sp, #24
 800f1f4:	af00      	add	r7, sp, #0
 800f1f6:	6078      	str	r0, [r7, #4]
 800f1f8:	687b      	ldr	r3, [r7, #4]
 800f1fa:	617b      	str	r3, [r7, #20]
 800f1fc:	687b      	ldr	r3, [r7, #4]
 800f1fe:	2b00      	cmp	r3, #0
 800f200:	d04a      	beq.n	800f298 <vPortFree+0xa8>
 800f202:	2308      	movs	r3, #8
 800f204:	425b      	negs	r3, r3
 800f206:	697a      	ldr	r2, [r7, #20]
 800f208:	4413      	add	r3, r2
 800f20a:	617b      	str	r3, [r7, #20]
 800f20c:	697b      	ldr	r3, [r7, #20]
 800f20e:	613b      	str	r3, [r7, #16]
 800f210:	693b      	ldr	r3, [r7, #16]
 800f212:	685a      	ldr	r2, [r3, #4]
 800f214:	4b22      	ldr	r3, [pc, #136]	; (800f2a0 <vPortFree+0xb0>)
 800f216:	681b      	ldr	r3, [r3, #0]
 800f218:	4013      	ands	r3, r2
 800f21a:	2b00      	cmp	r3, #0
 800f21c:	d10b      	bne.n	800f236 <vPortFree+0x46>
 800f21e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f222:	b672      	cpsid	i
 800f224:	f383 8811 	msr	BASEPRI, r3
 800f228:	f3bf 8f6f 	isb	sy
 800f22c:	f3bf 8f4f 	dsb	sy
 800f230:	b662      	cpsie	i
 800f232:	60fb      	str	r3, [r7, #12]
 800f234:	e7fe      	b.n	800f234 <vPortFree+0x44>
 800f236:	693b      	ldr	r3, [r7, #16]
 800f238:	681b      	ldr	r3, [r3, #0]
 800f23a:	2b00      	cmp	r3, #0
 800f23c:	d00b      	beq.n	800f256 <vPortFree+0x66>
 800f23e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f242:	b672      	cpsid	i
 800f244:	f383 8811 	msr	BASEPRI, r3
 800f248:	f3bf 8f6f 	isb	sy
 800f24c:	f3bf 8f4f 	dsb	sy
 800f250:	b662      	cpsie	i
 800f252:	60bb      	str	r3, [r7, #8]
 800f254:	e7fe      	b.n	800f254 <vPortFree+0x64>
 800f256:	693b      	ldr	r3, [r7, #16]
 800f258:	685a      	ldr	r2, [r3, #4]
 800f25a:	4b11      	ldr	r3, [pc, #68]	; (800f2a0 <vPortFree+0xb0>)
 800f25c:	681b      	ldr	r3, [r3, #0]
 800f25e:	4013      	ands	r3, r2
 800f260:	2b00      	cmp	r3, #0
 800f262:	d019      	beq.n	800f298 <vPortFree+0xa8>
 800f264:	693b      	ldr	r3, [r7, #16]
 800f266:	681b      	ldr	r3, [r3, #0]
 800f268:	2b00      	cmp	r3, #0
 800f26a:	d115      	bne.n	800f298 <vPortFree+0xa8>
 800f26c:	693b      	ldr	r3, [r7, #16]
 800f26e:	685a      	ldr	r2, [r3, #4]
 800f270:	4b0b      	ldr	r3, [pc, #44]	; (800f2a0 <vPortFree+0xb0>)
 800f272:	681b      	ldr	r3, [r3, #0]
 800f274:	43db      	mvns	r3, r3
 800f276:	401a      	ands	r2, r3
 800f278:	693b      	ldr	r3, [r7, #16]
 800f27a:	605a      	str	r2, [r3, #4]
 800f27c:	f7fe feea 	bl	800e054 <vTaskSuspendAll>
 800f280:	693b      	ldr	r3, [r7, #16]
 800f282:	685a      	ldr	r2, [r3, #4]
 800f284:	4b07      	ldr	r3, [pc, #28]	; (800f2a4 <vPortFree+0xb4>)
 800f286:	681b      	ldr	r3, [r3, #0]
 800f288:	4413      	add	r3, r2
 800f28a:	4a06      	ldr	r2, [pc, #24]	; (800f2a4 <vPortFree+0xb4>)
 800f28c:	6013      	str	r3, [r2, #0]
 800f28e:	6938      	ldr	r0, [r7, #16]
 800f290:	f000 f86c 	bl	800f36c <prvInsertBlockIntoFreeList>
 800f294:	f7fe feec 	bl	800e070 <xTaskResumeAll>
 800f298:	bf00      	nop
 800f29a:	3718      	adds	r7, #24
 800f29c:	46bd      	mov	sp, r7
 800f29e:	bd80      	pop	{r7, pc}
 800f2a0:	20009a64 	.word	0x20009a64
 800f2a4:	20009a5c 	.word	0x20009a5c

0800f2a8 <prvHeapInit>:
 800f2a8:	b480      	push	{r7}
 800f2aa:	b085      	sub	sp, #20
 800f2ac:	af00      	add	r7, sp, #0
 800f2ae:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f2b2:	60bb      	str	r3, [r7, #8]
 800f2b4:	4b27      	ldr	r3, [pc, #156]	; (800f354 <prvHeapInit+0xac>)
 800f2b6:	60fb      	str	r3, [r7, #12]
 800f2b8:	68fb      	ldr	r3, [r7, #12]
 800f2ba:	f003 0307 	and.w	r3, r3, #7
 800f2be:	2b00      	cmp	r3, #0
 800f2c0:	d00c      	beq.n	800f2dc <prvHeapInit+0x34>
 800f2c2:	68fb      	ldr	r3, [r7, #12]
 800f2c4:	3307      	adds	r3, #7
 800f2c6:	60fb      	str	r3, [r7, #12]
 800f2c8:	68fb      	ldr	r3, [r7, #12]
 800f2ca:	f023 0307 	bic.w	r3, r3, #7
 800f2ce:	60fb      	str	r3, [r7, #12]
 800f2d0:	68ba      	ldr	r2, [r7, #8]
 800f2d2:	68fb      	ldr	r3, [r7, #12]
 800f2d4:	1ad3      	subs	r3, r2, r3
 800f2d6:	4a1f      	ldr	r2, [pc, #124]	; (800f354 <prvHeapInit+0xac>)
 800f2d8:	4413      	add	r3, r2
 800f2da:	60bb      	str	r3, [r7, #8]
 800f2dc:	68fb      	ldr	r3, [r7, #12]
 800f2de:	607b      	str	r3, [r7, #4]
 800f2e0:	4a1d      	ldr	r2, [pc, #116]	; (800f358 <prvHeapInit+0xb0>)
 800f2e2:	687b      	ldr	r3, [r7, #4]
 800f2e4:	6013      	str	r3, [r2, #0]
 800f2e6:	4b1c      	ldr	r3, [pc, #112]	; (800f358 <prvHeapInit+0xb0>)
 800f2e8:	2200      	movs	r2, #0
 800f2ea:	605a      	str	r2, [r3, #4]
 800f2ec:	687b      	ldr	r3, [r7, #4]
 800f2ee:	68ba      	ldr	r2, [r7, #8]
 800f2f0:	4413      	add	r3, r2
 800f2f2:	60fb      	str	r3, [r7, #12]
 800f2f4:	2208      	movs	r2, #8
 800f2f6:	68fb      	ldr	r3, [r7, #12]
 800f2f8:	1a9b      	subs	r3, r3, r2
 800f2fa:	60fb      	str	r3, [r7, #12]
 800f2fc:	68fb      	ldr	r3, [r7, #12]
 800f2fe:	f023 0307 	bic.w	r3, r3, #7
 800f302:	60fb      	str	r3, [r7, #12]
 800f304:	68fb      	ldr	r3, [r7, #12]
 800f306:	4a15      	ldr	r2, [pc, #84]	; (800f35c <prvHeapInit+0xb4>)
 800f308:	6013      	str	r3, [r2, #0]
 800f30a:	4b14      	ldr	r3, [pc, #80]	; (800f35c <prvHeapInit+0xb4>)
 800f30c:	681b      	ldr	r3, [r3, #0]
 800f30e:	2200      	movs	r2, #0
 800f310:	605a      	str	r2, [r3, #4]
 800f312:	4b12      	ldr	r3, [pc, #72]	; (800f35c <prvHeapInit+0xb4>)
 800f314:	681b      	ldr	r3, [r3, #0]
 800f316:	2200      	movs	r2, #0
 800f318:	601a      	str	r2, [r3, #0]
 800f31a:	687b      	ldr	r3, [r7, #4]
 800f31c:	603b      	str	r3, [r7, #0]
 800f31e:	683b      	ldr	r3, [r7, #0]
 800f320:	68fa      	ldr	r2, [r7, #12]
 800f322:	1ad2      	subs	r2, r2, r3
 800f324:	683b      	ldr	r3, [r7, #0]
 800f326:	605a      	str	r2, [r3, #4]
 800f328:	4b0c      	ldr	r3, [pc, #48]	; (800f35c <prvHeapInit+0xb4>)
 800f32a:	681a      	ldr	r2, [r3, #0]
 800f32c:	683b      	ldr	r3, [r7, #0]
 800f32e:	601a      	str	r2, [r3, #0]
 800f330:	683b      	ldr	r3, [r7, #0]
 800f332:	685b      	ldr	r3, [r3, #4]
 800f334:	4a0a      	ldr	r2, [pc, #40]	; (800f360 <prvHeapInit+0xb8>)
 800f336:	6013      	str	r3, [r2, #0]
 800f338:	683b      	ldr	r3, [r7, #0]
 800f33a:	685b      	ldr	r3, [r3, #4]
 800f33c:	4a09      	ldr	r2, [pc, #36]	; (800f364 <prvHeapInit+0xbc>)
 800f33e:	6013      	str	r3, [r2, #0]
 800f340:	4b09      	ldr	r3, [pc, #36]	; (800f368 <prvHeapInit+0xc0>)
 800f342:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 800f346:	601a      	str	r2, [r3, #0]
 800f348:	bf00      	nop
 800f34a:	3714      	adds	r7, #20
 800f34c:	46bd      	mov	sp, r7
 800f34e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f352:	4770      	bx	lr
 800f354:	20001a50 	.word	0x20001a50
 800f358:	20009a50 	.word	0x20009a50
 800f35c:	20009a58 	.word	0x20009a58
 800f360:	20009a60 	.word	0x20009a60
 800f364:	20009a5c 	.word	0x20009a5c
 800f368:	20009a64 	.word	0x20009a64

0800f36c <prvInsertBlockIntoFreeList>:
 800f36c:	b480      	push	{r7}
 800f36e:	b085      	sub	sp, #20
 800f370:	af00      	add	r7, sp, #0
 800f372:	6078      	str	r0, [r7, #4]
 800f374:	4b28      	ldr	r3, [pc, #160]	; (800f418 <prvInsertBlockIntoFreeList+0xac>)
 800f376:	60fb      	str	r3, [r7, #12]
 800f378:	e002      	b.n	800f380 <prvInsertBlockIntoFreeList+0x14>
 800f37a:	68fb      	ldr	r3, [r7, #12]
 800f37c:	681b      	ldr	r3, [r3, #0]
 800f37e:	60fb      	str	r3, [r7, #12]
 800f380:	68fb      	ldr	r3, [r7, #12]
 800f382:	681b      	ldr	r3, [r3, #0]
 800f384:	687a      	ldr	r2, [r7, #4]
 800f386:	429a      	cmp	r2, r3
 800f388:	d8f7      	bhi.n	800f37a <prvInsertBlockIntoFreeList+0xe>
 800f38a:	68fb      	ldr	r3, [r7, #12]
 800f38c:	60bb      	str	r3, [r7, #8]
 800f38e:	68fb      	ldr	r3, [r7, #12]
 800f390:	685b      	ldr	r3, [r3, #4]
 800f392:	68ba      	ldr	r2, [r7, #8]
 800f394:	4413      	add	r3, r2
 800f396:	687a      	ldr	r2, [r7, #4]
 800f398:	429a      	cmp	r2, r3
 800f39a:	d108      	bne.n	800f3ae <prvInsertBlockIntoFreeList+0x42>
 800f39c:	68fb      	ldr	r3, [r7, #12]
 800f39e:	685a      	ldr	r2, [r3, #4]
 800f3a0:	687b      	ldr	r3, [r7, #4]
 800f3a2:	685b      	ldr	r3, [r3, #4]
 800f3a4:	441a      	add	r2, r3
 800f3a6:	68fb      	ldr	r3, [r7, #12]
 800f3a8:	605a      	str	r2, [r3, #4]
 800f3aa:	68fb      	ldr	r3, [r7, #12]
 800f3ac:	607b      	str	r3, [r7, #4]
 800f3ae:	687b      	ldr	r3, [r7, #4]
 800f3b0:	60bb      	str	r3, [r7, #8]
 800f3b2:	687b      	ldr	r3, [r7, #4]
 800f3b4:	685b      	ldr	r3, [r3, #4]
 800f3b6:	68ba      	ldr	r2, [r7, #8]
 800f3b8:	441a      	add	r2, r3
 800f3ba:	68fb      	ldr	r3, [r7, #12]
 800f3bc:	681b      	ldr	r3, [r3, #0]
 800f3be:	429a      	cmp	r2, r3
 800f3c0:	d118      	bne.n	800f3f4 <prvInsertBlockIntoFreeList+0x88>
 800f3c2:	68fb      	ldr	r3, [r7, #12]
 800f3c4:	681a      	ldr	r2, [r3, #0]
 800f3c6:	4b15      	ldr	r3, [pc, #84]	; (800f41c <prvInsertBlockIntoFreeList+0xb0>)
 800f3c8:	681b      	ldr	r3, [r3, #0]
 800f3ca:	429a      	cmp	r2, r3
 800f3cc:	d00d      	beq.n	800f3ea <prvInsertBlockIntoFreeList+0x7e>
 800f3ce:	687b      	ldr	r3, [r7, #4]
 800f3d0:	685a      	ldr	r2, [r3, #4]
 800f3d2:	68fb      	ldr	r3, [r7, #12]
 800f3d4:	681b      	ldr	r3, [r3, #0]
 800f3d6:	685b      	ldr	r3, [r3, #4]
 800f3d8:	441a      	add	r2, r3
 800f3da:	687b      	ldr	r3, [r7, #4]
 800f3dc:	605a      	str	r2, [r3, #4]
 800f3de:	68fb      	ldr	r3, [r7, #12]
 800f3e0:	681b      	ldr	r3, [r3, #0]
 800f3e2:	681a      	ldr	r2, [r3, #0]
 800f3e4:	687b      	ldr	r3, [r7, #4]
 800f3e6:	601a      	str	r2, [r3, #0]
 800f3e8:	e008      	b.n	800f3fc <prvInsertBlockIntoFreeList+0x90>
 800f3ea:	4b0c      	ldr	r3, [pc, #48]	; (800f41c <prvInsertBlockIntoFreeList+0xb0>)
 800f3ec:	681a      	ldr	r2, [r3, #0]
 800f3ee:	687b      	ldr	r3, [r7, #4]
 800f3f0:	601a      	str	r2, [r3, #0]
 800f3f2:	e003      	b.n	800f3fc <prvInsertBlockIntoFreeList+0x90>
 800f3f4:	68fb      	ldr	r3, [r7, #12]
 800f3f6:	681a      	ldr	r2, [r3, #0]
 800f3f8:	687b      	ldr	r3, [r7, #4]
 800f3fa:	601a      	str	r2, [r3, #0]
 800f3fc:	68fa      	ldr	r2, [r7, #12]
 800f3fe:	687b      	ldr	r3, [r7, #4]
 800f400:	429a      	cmp	r2, r3
 800f402:	d002      	beq.n	800f40a <prvInsertBlockIntoFreeList+0x9e>
 800f404:	68fb      	ldr	r3, [r7, #12]
 800f406:	687a      	ldr	r2, [r7, #4]
 800f408:	601a      	str	r2, [r3, #0]
 800f40a:	bf00      	nop
 800f40c:	3714      	adds	r7, #20
 800f40e:	46bd      	mov	sp, r7
 800f410:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f414:	4770      	bx	lr
 800f416:	bf00      	nop
 800f418:	20009a50 	.word	0x20009a50
 800f41c:	20009a58 	.word	0x20009a58

0800f420 <__errno>:
 800f420:	4b01      	ldr	r3, [pc, #4]	; (800f428 <__errno+0x8>)
 800f422:	6818      	ldr	r0, [r3, #0]
 800f424:	4770      	bx	lr
 800f426:	bf00      	nop
 800f428:	200013c4 	.word	0x200013c4

0800f42c <__libc_init_array>:
 800f42c:	b570      	push	{r4, r5, r6, lr}
 800f42e:	4e0d      	ldr	r6, [pc, #52]	; (800f464 <__libc_init_array+0x38>)
 800f430:	4c0d      	ldr	r4, [pc, #52]	; (800f468 <__libc_init_array+0x3c>)
 800f432:	1ba4      	subs	r4, r4, r6
 800f434:	10a4      	asrs	r4, r4, #2
 800f436:	2500      	movs	r5, #0
 800f438:	42a5      	cmp	r5, r4
 800f43a:	d109      	bne.n	800f450 <__libc_init_array+0x24>
 800f43c:	4e0b      	ldr	r6, [pc, #44]	; (800f46c <__libc_init_array+0x40>)
 800f43e:	4c0c      	ldr	r4, [pc, #48]	; (800f470 <__libc_init_array+0x44>)
 800f440:	f000 fc28 	bl	800fc94 <_init>
 800f444:	1ba4      	subs	r4, r4, r6
 800f446:	10a4      	asrs	r4, r4, #2
 800f448:	2500      	movs	r5, #0
 800f44a:	42a5      	cmp	r5, r4
 800f44c:	d105      	bne.n	800f45a <__libc_init_array+0x2e>
 800f44e:	bd70      	pop	{r4, r5, r6, pc}
 800f450:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800f454:	4798      	blx	r3
 800f456:	3501      	adds	r5, #1
 800f458:	e7ee      	b.n	800f438 <__libc_init_array+0xc>
 800f45a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800f45e:	4798      	blx	r3
 800f460:	3501      	adds	r5, #1
 800f462:	e7f2      	b.n	800f44a <__libc_init_array+0x1e>
 800f464:	08011e04 	.word	0x08011e04
 800f468:	08011e04 	.word	0x08011e04
 800f46c:	08011e04 	.word	0x08011e04
 800f470:	08011e08 	.word	0x08011e08

0800f474 <memcpy>:
 800f474:	b510      	push	{r4, lr}
 800f476:	1e43      	subs	r3, r0, #1
 800f478:	440a      	add	r2, r1
 800f47a:	4291      	cmp	r1, r2
 800f47c:	d100      	bne.n	800f480 <memcpy+0xc>
 800f47e:	bd10      	pop	{r4, pc}
 800f480:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f484:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f488:	e7f7      	b.n	800f47a <memcpy+0x6>

0800f48a <memset>:
 800f48a:	4402      	add	r2, r0
 800f48c:	4603      	mov	r3, r0
 800f48e:	4293      	cmp	r3, r2
 800f490:	d100      	bne.n	800f494 <memset+0xa>
 800f492:	4770      	bx	lr
 800f494:	f803 1b01 	strb.w	r1, [r3], #1
 800f498:	e7f9      	b.n	800f48e <memset+0x4>
	...

0800f49c <siprintf>:
 800f49c:	b40e      	push	{r1, r2, r3}
 800f49e:	b500      	push	{lr}
 800f4a0:	b09c      	sub	sp, #112	; 0x70
 800f4a2:	ab1d      	add	r3, sp, #116	; 0x74
 800f4a4:	9002      	str	r0, [sp, #8]
 800f4a6:	9006      	str	r0, [sp, #24]
 800f4a8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800f4ac:	4809      	ldr	r0, [pc, #36]	; (800f4d4 <siprintf+0x38>)
 800f4ae:	9107      	str	r1, [sp, #28]
 800f4b0:	9104      	str	r1, [sp, #16]
 800f4b2:	4909      	ldr	r1, [pc, #36]	; (800f4d8 <siprintf+0x3c>)
 800f4b4:	f853 2b04 	ldr.w	r2, [r3], #4
 800f4b8:	9105      	str	r1, [sp, #20]
 800f4ba:	6800      	ldr	r0, [r0, #0]
 800f4bc:	9301      	str	r3, [sp, #4]
 800f4be:	a902      	add	r1, sp, #8
 800f4c0:	f000 f866 	bl	800f590 <_svfiprintf_r>
 800f4c4:	9b02      	ldr	r3, [sp, #8]
 800f4c6:	2200      	movs	r2, #0
 800f4c8:	701a      	strb	r2, [r3, #0]
 800f4ca:	b01c      	add	sp, #112	; 0x70
 800f4cc:	f85d eb04 	ldr.w	lr, [sp], #4
 800f4d0:	b003      	add	sp, #12
 800f4d2:	4770      	bx	lr
 800f4d4:	200013c4 	.word	0x200013c4
 800f4d8:	ffff0208 	.word	0xffff0208

0800f4dc <__ssputs_r>:
 800f4dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f4e0:	688e      	ldr	r6, [r1, #8]
 800f4e2:	429e      	cmp	r6, r3
 800f4e4:	4682      	mov	sl, r0
 800f4e6:	460c      	mov	r4, r1
 800f4e8:	4690      	mov	r8, r2
 800f4ea:	4699      	mov	r9, r3
 800f4ec:	d837      	bhi.n	800f55e <__ssputs_r+0x82>
 800f4ee:	898a      	ldrh	r2, [r1, #12]
 800f4f0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800f4f4:	d031      	beq.n	800f55a <__ssputs_r+0x7e>
 800f4f6:	6825      	ldr	r5, [r4, #0]
 800f4f8:	6909      	ldr	r1, [r1, #16]
 800f4fa:	1a6f      	subs	r7, r5, r1
 800f4fc:	6965      	ldr	r5, [r4, #20]
 800f4fe:	2302      	movs	r3, #2
 800f500:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800f504:	fb95 f5f3 	sdiv	r5, r5, r3
 800f508:	f109 0301 	add.w	r3, r9, #1
 800f50c:	443b      	add	r3, r7
 800f50e:	429d      	cmp	r5, r3
 800f510:	bf38      	it	cc
 800f512:	461d      	movcc	r5, r3
 800f514:	0553      	lsls	r3, r2, #21
 800f516:	d530      	bpl.n	800f57a <__ssputs_r+0x9e>
 800f518:	4629      	mov	r1, r5
 800f51a:	f000 fb21 	bl	800fb60 <_malloc_r>
 800f51e:	4606      	mov	r6, r0
 800f520:	b950      	cbnz	r0, 800f538 <__ssputs_r+0x5c>
 800f522:	230c      	movs	r3, #12
 800f524:	f8ca 3000 	str.w	r3, [sl]
 800f528:	89a3      	ldrh	r3, [r4, #12]
 800f52a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f52e:	81a3      	strh	r3, [r4, #12]
 800f530:	f04f 30ff 	mov.w	r0, #4294967295
 800f534:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f538:	463a      	mov	r2, r7
 800f53a:	6921      	ldr	r1, [r4, #16]
 800f53c:	f7ff ff9a 	bl	800f474 <memcpy>
 800f540:	89a3      	ldrh	r3, [r4, #12]
 800f542:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800f546:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f54a:	81a3      	strh	r3, [r4, #12]
 800f54c:	6126      	str	r6, [r4, #16]
 800f54e:	6165      	str	r5, [r4, #20]
 800f550:	443e      	add	r6, r7
 800f552:	1bed      	subs	r5, r5, r7
 800f554:	6026      	str	r6, [r4, #0]
 800f556:	60a5      	str	r5, [r4, #8]
 800f558:	464e      	mov	r6, r9
 800f55a:	454e      	cmp	r6, r9
 800f55c:	d900      	bls.n	800f560 <__ssputs_r+0x84>
 800f55e:	464e      	mov	r6, r9
 800f560:	4632      	mov	r2, r6
 800f562:	4641      	mov	r1, r8
 800f564:	6820      	ldr	r0, [r4, #0]
 800f566:	f000 fa93 	bl	800fa90 <memmove>
 800f56a:	68a3      	ldr	r3, [r4, #8]
 800f56c:	1b9b      	subs	r3, r3, r6
 800f56e:	60a3      	str	r3, [r4, #8]
 800f570:	6823      	ldr	r3, [r4, #0]
 800f572:	441e      	add	r6, r3
 800f574:	6026      	str	r6, [r4, #0]
 800f576:	2000      	movs	r0, #0
 800f578:	e7dc      	b.n	800f534 <__ssputs_r+0x58>
 800f57a:	462a      	mov	r2, r5
 800f57c:	f000 fb4a 	bl	800fc14 <_realloc_r>
 800f580:	4606      	mov	r6, r0
 800f582:	2800      	cmp	r0, #0
 800f584:	d1e2      	bne.n	800f54c <__ssputs_r+0x70>
 800f586:	6921      	ldr	r1, [r4, #16]
 800f588:	4650      	mov	r0, sl
 800f58a:	f000 fa9b 	bl	800fac4 <_free_r>
 800f58e:	e7c8      	b.n	800f522 <__ssputs_r+0x46>

0800f590 <_svfiprintf_r>:
 800f590:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f594:	461d      	mov	r5, r3
 800f596:	898b      	ldrh	r3, [r1, #12]
 800f598:	061f      	lsls	r7, r3, #24
 800f59a:	b09d      	sub	sp, #116	; 0x74
 800f59c:	4680      	mov	r8, r0
 800f59e:	460c      	mov	r4, r1
 800f5a0:	4616      	mov	r6, r2
 800f5a2:	d50f      	bpl.n	800f5c4 <_svfiprintf_r+0x34>
 800f5a4:	690b      	ldr	r3, [r1, #16]
 800f5a6:	b96b      	cbnz	r3, 800f5c4 <_svfiprintf_r+0x34>
 800f5a8:	2140      	movs	r1, #64	; 0x40
 800f5aa:	f000 fad9 	bl	800fb60 <_malloc_r>
 800f5ae:	6020      	str	r0, [r4, #0]
 800f5b0:	6120      	str	r0, [r4, #16]
 800f5b2:	b928      	cbnz	r0, 800f5c0 <_svfiprintf_r+0x30>
 800f5b4:	230c      	movs	r3, #12
 800f5b6:	f8c8 3000 	str.w	r3, [r8]
 800f5ba:	f04f 30ff 	mov.w	r0, #4294967295
 800f5be:	e0c8      	b.n	800f752 <_svfiprintf_r+0x1c2>
 800f5c0:	2340      	movs	r3, #64	; 0x40
 800f5c2:	6163      	str	r3, [r4, #20]
 800f5c4:	2300      	movs	r3, #0
 800f5c6:	9309      	str	r3, [sp, #36]	; 0x24
 800f5c8:	2320      	movs	r3, #32
 800f5ca:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f5ce:	2330      	movs	r3, #48	; 0x30
 800f5d0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f5d4:	9503      	str	r5, [sp, #12]
 800f5d6:	f04f 0b01 	mov.w	fp, #1
 800f5da:	4637      	mov	r7, r6
 800f5dc:	463d      	mov	r5, r7
 800f5de:	f815 3b01 	ldrb.w	r3, [r5], #1
 800f5e2:	b10b      	cbz	r3, 800f5e8 <_svfiprintf_r+0x58>
 800f5e4:	2b25      	cmp	r3, #37	; 0x25
 800f5e6:	d13e      	bne.n	800f666 <_svfiprintf_r+0xd6>
 800f5e8:	ebb7 0a06 	subs.w	sl, r7, r6
 800f5ec:	d00b      	beq.n	800f606 <_svfiprintf_r+0x76>
 800f5ee:	4653      	mov	r3, sl
 800f5f0:	4632      	mov	r2, r6
 800f5f2:	4621      	mov	r1, r4
 800f5f4:	4640      	mov	r0, r8
 800f5f6:	f7ff ff71 	bl	800f4dc <__ssputs_r>
 800f5fa:	3001      	adds	r0, #1
 800f5fc:	f000 80a4 	beq.w	800f748 <_svfiprintf_r+0x1b8>
 800f600:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f602:	4453      	add	r3, sl
 800f604:	9309      	str	r3, [sp, #36]	; 0x24
 800f606:	783b      	ldrb	r3, [r7, #0]
 800f608:	2b00      	cmp	r3, #0
 800f60a:	f000 809d 	beq.w	800f748 <_svfiprintf_r+0x1b8>
 800f60e:	2300      	movs	r3, #0
 800f610:	f04f 32ff 	mov.w	r2, #4294967295
 800f614:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f618:	9304      	str	r3, [sp, #16]
 800f61a:	9307      	str	r3, [sp, #28]
 800f61c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f620:	931a      	str	r3, [sp, #104]	; 0x68
 800f622:	462f      	mov	r7, r5
 800f624:	2205      	movs	r2, #5
 800f626:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f62a:	4850      	ldr	r0, [pc, #320]	; (800f76c <_svfiprintf_r+0x1dc>)
 800f62c:	f7f0 fdf0 	bl	8000210 <memchr>
 800f630:	9b04      	ldr	r3, [sp, #16]
 800f632:	b9d0      	cbnz	r0, 800f66a <_svfiprintf_r+0xda>
 800f634:	06d9      	lsls	r1, r3, #27
 800f636:	bf44      	itt	mi
 800f638:	2220      	movmi	r2, #32
 800f63a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800f63e:	071a      	lsls	r2, r3, #28
 800f640:	bf44      	itt	mi
 800f642:	222b      	movmi	r2, #43	; 0x2b
 800f644:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800f648:	782a      	ldrb	r2, [r5, #0]
 800f64a:	2a2a      	cmp	r2, #42	; 0x2a
 800f64c:	d015      	beq.n	800f67a <_svfiprintf_r+0xea>
 800f64e:	9a07      	ldr	r2, [sp, #28]
 800f650:	462f      	mov	r7, r5
 800f652:	2000      	movs	r0, #0
 800f654:	250a      	movs	r5, #10
 800f656:	4639      	mov	r1, r7
 800f658:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f65c:	3b30      	subs	r3, #48	; 0x30
 800f65e:	2b09      	cmp	r3, #9
 800f660:	d94d      	bls.n	800f6fe <_svfiprintf_r+0x16e>
 800f662:	b1b8      	cbz	r0, 800f694 <_svfiprintf_r+0x104>
 800f664:	e00f      	b.n	800f686 <_svfiprintf_r+0xf6>
 800f666:	462f      	mov	r7, r5
 800f668:	e7b8      	b.n	800f5dc <_svfiprintf_r+0x4c>
 800f66a:	4a40      	ldr	r2, [pc, #256]	; (800f76c <_svfiprintf_r+0x1dc>)
 800f66c:	1a80      	subs	r0, r0, r2
 800f66e:	fa0b f000 	lsl.w	r0, fp, r0
 800f672:	4318      	orrs	r0, r3
 800f674:	9004      	str	r0, [sp, #16]
 800f676:	463d      	mov	r5, r7
 800f678:	e7d3      	b.n	800f622 <_svfiprintf_r+0x92>
 800f67a:	9a03      	ldr	r2, [sp, #12]
 800f67c:	1d11      	adds	r1, r2, #4
 800f67e:	6812      	ldr	r2, [r2, #0]
 800f680:	9103      	str	r1, [sp, #12]
 800f682:	2a00      	cmp	r2, #0
 800f684:	db01      	blt.n	800f68a <_svfiprintf_r+0xfa>
 800f686:	9207      	str	r2, [sp, #28]
 800f688:	e004      	b.n	800f694 <_svfiprintf_r+0x104>
 800f68a:	4252      	negs	r2, r2
 800f68c:	f043 0302 	orr.w	r3, r3, #2
 800f690:	9207      	str	r2, [sp, #28]
 800f692:	9304      	str	r3, [sp, #16]
 800f694:	783b      	ldrb	r3, [r7, #0]
 800f696:	2b2e      	cmp	r3, #46	; 0x2e
 800f698:	d10c      	bne.n	800f6b4 <_svfiprintf_r+0x124>
 800f69a:	787b      	ldrb	r3, [r7, #1]
 800f69c:	2b2a      	cmp	r3, #42	; 0x2a
 800f69e:	d133      	bne.n	800f708 <_svfiprintf_r+0x178>
 800f6a0:	9b03      	ldr	r3, [sp, #12]
 800f6a2:	1d1a      	adds	r2, r3, #4
 800f6a4:	681b      	ldr	r3, [r3, #0]
 800f6a6:	9203      	str	r2, [sp, #12]
 800f6a8:	2b00      	cmp	r3, #0
 800f6aa:	bfb8      	it	lt
 800f6ac:	f04f 33ff 	movlt.w	r3, #4294967295
 800f6b0:	3702      	adds	r7, #2
 800f6b2:	9305      	str	r3, [sp, #20]
 800f6b4:	4d2e      	ldr	r5, [pc, #184]	; (800f770 <_svfiprintf_r+0x1e0>)
 800f6b6:	7839      	ldrb	r1, [r7, #0]
 800f6b8:	2203      	movs	r2, #3
 800f6ba:	4628      	mov	r0, r5
 800f6bc:	f7f0 fda8 	bl	8000210 <memchr>
 800f6c0:	b138      	cbz	r0, 800f6d2 <_svfiprintf_r+0x142>
 800f6c2:	2340      	movs	r3, #64	; 0x40
 800f6c4:	1b40      	subs	r0, r0, r5
 800f6c6:	fa03 f000 	lsl.w	r0, r3, r0
 800f6ca:	9b04      	ldr	r3, [sp, #16]
 800f6cc:	4303      	orrs	r3, r0
 800f6ce:	3701      	adds	r7, #1
 800f6d0:	9304      	str	r3, [sp, #16]
 800f6d2:	7839      	ldrb	r1, [r7, #0]
 800f6d4:	4827      	ldr	r0, [pc, #156]	; (800f774 <_svfiprintf_r+0x1e4>)
 800f6d6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f6da:	2206      	movs	r2, #6
 800f6dc:	1c7e      	adds	r6, r7, #1
 800f6de:	f7f0 fd97 	bl	8000210 <memchr>
 800f6e2:	2800      	cmp	r0, #0
 800f6e4:	d038      	beq.n	800f758 <_svfiprintf_r+0x1c8>
 800f6e6:	4b24      	ldr	r3, [pc, #144]	; (800f778 <_svfiprintf_r+0x1e8>)
 800f6e8:	bb13      	cbnz	r3, 800f730 <_svfiprintf_r+0x1a0>
 800f6ea:	9b03      	ldr	r3, [sp, #12]
 800f6ec:	3307      	adds	r3, #7
 800f6ee:	f023 0307 	bic.w	r3, r3, #7
 800f6f2:	3308      	adds	r3, #8
 800f6f4:	9303      	str	r3, [sp, #12]
 800f6f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6f8:	444b      	add	r3, r9
 800f6fa:	9309      	str	r3, [sp, #36]	; 0x24
 800f6fc:	e76d      	b.n	800f5da <_svfiprintf_r+0x4a>
 800f6fe:	fb05 3202 	mla	r2, r5, r2, r3
 800f702:	2001      	movs	r0, #1
 800f704:	460f      	mov	r7, r1
 800f706:	e7a6      	b.n	800f656 <_svfiprintf_r+0xc6>
 800f708:	2300      	movs	r3, #0
 800f70a:	3701      	adds	r7, #1
 800f70c:	9305      	str	r3, [sp, #20]
 800f70e:	4619      	mov	r1, r3
 800f710:	250a      	movs	r5, #10
 800f712:	4638      	mov	r0, r7
 800f714:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f718:	3a30      	subs	r2, #48	; 0x30
 800f71a:	2a09      	cmp	r2, #9
 800f71c:	d903      	bls.n	800f726 <_svfiprintf_r+0x196>
 800f71e:	2b00      	cmp	r3, #0
 800f720:	d0c8      	beq.n	800f6b4 <_svfiprintf_r+0x124>
 800f722:	9105      	str	r1, [sp, #20]
 800f724:	e7c6      	b.n	800f6b4 <_svfiprintf_r+0x124>
 800f726:	fb05 2101 	mla	r1, r5, r1, r2
 800f72a:	2301      	movs	r3, #1
 800f72c:	4607      	mov	r7, r0
 800f72e:	e7f0      	b.n	800f712 <_svfiprintf_r+0x182>
 800f730:	ab03      	add	r3, sp, #12
 800f732:	9300      	str	r3, [sp, #0]
 800f734:	4622      	mov	r2, r4
 800f736:	4b11      	ldr	r3, [pc, #68]	; (800f77c <_svfiprintf_r+0x1ec>)
 800f738:	a904      	add	r1, sp, #16
 800f73a:	4640      	mov	r0, r8
 800f73c:	f3af 8000 	nop.w
 800f740:	f1b0 3fff 	cmp.w	r0, #4294967295
 800f744:	4681      	mov	r9, r0
 800f746:	d1d6      	bne.n	800f6f6 <_svfiprintf_r+0x166>
 800f748:	89a3      	ldrh	r3, [r4, #12]
 800f74a:	065b      	lsls	r3, r3, #25
 800f74c:	f53f af35 	bmi.w	800f5ba <_svfiprintf_r+0x2a>
 800f750:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f752:	b01d      	add	sp, #116	; 0x74
 800f754:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f758:	ab03      	add	r3, sp, #12
 800f75a:	9300      	str	r3, [sp, #0]
 800f75c:	4622      	mov	r2, r4
 800f75e:	4b07      	ldr	r3, [pc, #28]	; (800f77c <_svfiprintf_r+0x1ec>)
 800f760:	a904      	add	r1, sp, #16
 800f762:	4640      	mov	r0, r8
 800f764:	f000 f882 	bl	800f86c <_printf_i>
 800f768:	e7ea      	b.n	800f740 <_svfiprintf_r+0x1b0>
 800f76a:	bf00      	nop
 800f76c:	08011dc8 	.word	0x08011dc8
 800f770:	08011dce 	.word	0x08011dce
 800f774:	08011dd2 	.word	0x08011dd2
 800f778:	00000000 	.word	0x00000000
 800f77c:	0800f4dd 	.word	0x0800f4dd

0800f780 <_printf_common>:
 800f780:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f784:	4691      	mov	r9, r2
 800f786:	461f      	mov	r7, r3
 800f788:	688a      	ldr	r2, [r1, #8]
 800f78a:	690b      	ldr	r3, [r1, #16]
 800f78c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800f790:	4293      	cmp	r3, r2
 800f792:	bfb8      	it	lt
 800f794:	4613      	movlt	r3, r2
 800f796:	f8c9 3000 	str.w	r3, [r9]
 800f79a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800f79e:	4606      	mov	r6, r0
 800f7a0:	460c      	mov	r4, r1
 800f7a2:	b112      	cbz	r2, 800f7aa <_printf_common+0x2a>
 800f7a4:	3301      	adds	r3, #1
 800f7a6:	f8c9 3000 	str.w	r3, [r9]
 800f7aa:	6823      	ldr	r3, [r4, #0]
 800f7ac:	0699      	lsls	r1, r3, #26
 800f7ae:	bf42      	ittt	mi
 800f7b0:	f8d9 3000 	ldrmi.w	r3, [r9]
 800f7b4:	3302      	addmi	r3, #2
 800f7b6:	f8c9 3000 	strmi.w	r3, [r9]
 800f7ba:	6825      	ldr	r5, [r4, #0]
 800f7bc:	f015 0506 	ands.w	r5, r5, #6
 800f7c0:	d107      	bne.n	800f7d2 <_printf_common+0x52>
 800f7c2:	f104 0a19 	add.w	sl, r4, #25
 800f7c6:	68e3      	ldr	r3, [r4, #12]
 800f7c8:	f8d9 2000 	ldr.w	r2, [r9]
 800f7cc:	1a9b      	subs	r3, r3, r2
 800f7ce:	42ab      	cmp	r3, r5
 800f7d0:	dc28      	bgt.n	800f824 <_printf_common+0xa4>
 800f7d2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800f7d6:	6822      	ldr	r2, [r4, #0]
 800f7d8:	3300      	adds	r3, #0
 800f7da:	bf18      	it	ne
 800f7dc:	2301      	movne	r3, #1
 800f7de:	0692      	lsls	r2, r2, #26
 800f7e0:	d42d      	bmi.n	800f83e <_printf_common+0xbe>
 800f7e2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800f7e6:	4639      	mov	r1, r7
 800f7e8:	4630      	mov	r0, r6
 800f7ea:	47c0      	blx	r8
 800f7ec:	3001      	adds	r0, #1
 800f7ee:	d020      	beq.n	800f832 <_printf_common+0xb2>
 800f7f0:	6823      	ldr	r3, [r4, #0]
 800f7f2:	68e5      	ldr	r5, [r4, #12]
 800f7f4:	f8d9 2000 	ldr.w	r2, [r9]
 800f7f8:	f003 0306 	and.w	r3, r3, #6
 800f7fc:	2b04      	cmp	r3, #4
 800f7fe:	bf08      	it	eq
 800f800:	1aad      	subeq	r5, r5, r2
 800f802:	68a3      	ldr	r3, [r4, #8]
 800f804:	6922      	ldr	r2, [r4, #16]
 800f806:	bf0c      	ite	eq
 800f808:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800f80c:	2500      	movne	r5, #0
 800f80e:	4293      	cmp	r3, r2
 800f810:	bfc4      	itt	gt
 800f812:	1a9b      	subgt	r3, r3, r2
 800f814:	18ed      	addgt	r5, r5, r3
 800f816:	f04f 0900 	mov.w	r9, #0
 800f81a:	341a      	adds	r4, #26
 800f81c:	454d      	cmp	r5, r9
 800f81e:	d11a      	bne.n	800f856 <_printf_common+0xd6>
 800f820:	2000      	movs	r0, #0
 800f822:	e008      	b.n	800f836 <_printf_common+0xb6>
 800f824:	2301      	movs	r3, #1
 800f826:	4652      	mov	r2, sl
 800f828:	4639      	mov	r1, r7
 800f82a:	4630      	mov	r0, r6
 800f82c:	47c0      	blx	r8
 800f82e:	3001      	adds	r0, #1
 800f830:	d103      	bne.n	800f83a <_printf_common+0xba>
 800f832:	f04f 30ff 	mov.w	r0, #4294967295
 800f836:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f83a:	3501      	adds	r5, #1
 800f83c:	e7c3      	b.n	800f7c6 <_printf_common+0x46>
 800f83e:	18e1      	adds	r1, r4, r3
 800f840:	1c5a      	adds	r2, r3, #1
 800f842:	2030      	movs	r0, #48	; 0x30
 800f844:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800f848:	4422      	add	r2, r4
 800f84a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800f84e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800f852:	3302      	adds	r3, #2
 800f854:	e7c5      	b.n	800f7e2 <_printf_common+0x62>
 800f856:	2301      	movs	r3, #1
 800f858:	4622      	mov	r2, r4
 800f85a:	4639      	mov	r1, r7
 800f85c:	4630      	mov	r0, r6
 800f85e:	47c0      	blx	r8
 800f860:	3001      	adds	r0, #1
 800f862:	d0e6      	beq.n	800f832 <_printf_common+0xb2>
 800f864:	f109 0901 	add.w	r9, r9, #1
 800f868:	e7d8      	b.n	800f81c <_printf_common+0x9c>
	...

0800f86c <_printf_i>:
 800f86c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f870:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 800f874:	460c      	mov	r4, r1
 800f876:	7e09      	ldrb	r1, [r1, #24]
 800f878:	b085      	sub	sp, #20
 800f87a:	296e      	cmp	r1, #110	; 0x6e
 800f87c:	4617      	mov	r7, r2
 800f87e:	4606      	mov	r6, r0
 800f880:	4698      	mov	r8, r3
 800f882:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800f884:	f000 80b3 	beq.w	800f9ee <_printf_i+0x182>
 800f888:	d822      	bhi.n	800f8d0 <_printf_i+0x64>
 800f88a:	2963      	cmp	r1, #99	; 0x63
 800f88c:	d036      	beq.n	800f8fc <_printf_i+0x90>
 800f88e:	d80a      	bhi.n	800f8a6 <_printf_i+0x3a>
 800f890:	2900      	cmp	r1, #0
 800f892:	f000 80b9 	beq.w	800fa08 <_printf_i+0x19c>
 800f896:	2958      	cmp	r1, #88	; 0x58
 800f898:	f000 8083 	beq.w	800f9a2 <_printf_i+0x136>
 800f89c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800f8a0:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 800f8a4:	e032      	b.n	800f90c <_printf_i+0xa0>
 800f8a6:	2964      	cmp	r1, #100	; 0x64
 800f8a8:	d001      	beq.n	800f8ae <_printf_i+0x42>
 800f8aa:	2969      	cmp	r1, #105	; 0x69
 800f8ac:	d1f6      	bne.n	800f89c <_printf_i+0x30>
 800f8ae:	6820      	ldr	r0, [r4, #0]
 800f8b0:	6813      	ldr	r3, [r2, #0]
 800f8b2:	0605      	lsls	r5, r0, #24
 800f8b4:	f103 0104 	add.w	r1, r3, #4
 800f8b8:	d52a      	bpl.n	800f910 <_printf_i+0xa4>
 800f8ba:	681b      	ldr	r3, [r3, #0]
 800f8bc:	6011      	str	r1, [r2, #0]
 800f8be:	2b00      	cmp	r3, #0
 800f8c0:	da03      	bge.n	800f8ca <_printf_i+0x5e>
 800f8c2:	222d      	movs	r2, #45	; 0x2d
 800f8c4:	425b      	negs	r3, r3
 800f8c6:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800f8ca:	486f      	ldr	r0, [pc, #444]	; (800fa88 <_printf_i+0x21c>)
 800f8cc:	220a      	movs	r2, #10
 800f8ce:	e039      	b.n	800f944 <_printf_i+0xd8>
 800f8d0:	2973      	cmp	r1, #115	; 0x73
 800f8d2:	f000 809d 	beq.w	800fa10 <_printf_i+0x1a4>
 800f8d6:	d808      	bhi.n	800f8ea <_printf_i+0x7e>
 800f8d8:	296f      	cmp	r1, #111	; 0x6f
 800f8da:	d020      	beq.n	800f91e <_printf_i+0xb2>
 800f8dc:	2970      	cmp	r1, #112	; 0x70
 800f8de:	d1dd      	bne.n	800f89c <_printf_i+0x30>
 800f8e0:	6823      	ldr	r3, [r4, #0]
 800f8e2:	f043 0320 	orr.w	r3, r3, #32
 800f8e6:	6023      	str	r3, [r4, #0]
 800f8e8:	e003      	b.n	800f8f2 <_printf_i+0x86>
 800f8ea:	2975      	cmp	r1, #117	; 0x75
 800f8ec:	d017      	beq.n	800f91e <_printf_i+0xb2>
 800f8ee:	2978      	cmp	r1, #120	; 0x78
 800f8f0:	d1d4      	bne.n	800f89c <_printf_i+0x30>
 800f8f2:	2378      	movs	r3, #120	; 0x78
 800f8f4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800f8f8:	4864      	ldr	r0, [pc, #400]	; (800fa8c <_printf_i+0x220>)
 800f8fa:	e055      	b.n	800f9a8 <_printf_i+0x13c>
 800f8fc:	6813      	ldr	r3, [r2, #0]
 800f8fe:	1d19      	adds	r1, r3, #4
 800f900:	681b      	ldr	r3, [r3, #0]
 800f902:	6011      	str	r1, [r2, #0]
 800f904:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800f908:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800f90c:	2301      	movs	r3, #1
 800f90e:	e08c      	b.n	800fa2a <_printf_i+0x1be>
 800f910:	681b      	ldr	r3, [r3, #0]
 800f912:	6011      	str	r1, [r2, #0]
 800f914:	f010 0f40 	tst.w	r0, #64	; 0x40
 800f918:	bf18      	it	ne
 800f91a:	b21b      	sxthne	r3, r3
 800f91c:	e7cf      	b.n	800f8be <_printf_i+0x52>
 800f91e:	6813      	ldr	r3, [r2, #0]
 800f920:	6825      	ldr	r5, [r4, #0]
 800f922:	1d18      	adds	r0, r3, #4
 800f924:	6010      	str	r0, [r2, #0]
 800f926:	0628      	lsls	r0, r5, #24
 800f928:	d501      	bpl.n	800f92e <_printf_i+0xc2>
 800f92a:	681b      	ldr	r3, [r3, #0]
 800f92c:	e002      	b.n	800f934 <_printf_i+0xc8>
 800f92e:	0668      	lsls	r0, r5, #25
 800f930:	d5fb      	bpl.n	800f92a <_printf_i+0xbe>
 800f932:	881b      	ldrh	r3, [r3, #0]
 800f934:	4854      	ldr	r0, [pc, #336]	; (800fa88 <_printf_i+0x21c>)
 800f936:	296f      	cmp	r1, #111	; 0x6f
 800f938:	bf14      	ite	ne
 800f93a:	220a      	movne	r2, #10
 800f93c:	2208      	moveq	r2, #8
 800f93e:	2100      	movs	r1, #0
 800f940:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800f944:	6865      	ldr	r5, [r4, #4]
 800f946:	60a5      	str	r5, [r4, #8]
 800f948:	2d00      	cmp	r5, #0
 800f94a:	f2c0 8095 	blt.w	800fa78 <_printf_i+0x20c>
 800f94e:	6821      	ldr	r1, [r4, #0]
 800f950:	f021 0104 	bic.w	r1, r1, #4
 800f954:	6021      	str	r1, [r4, #0]
 800f956:	2b00      	cmp	r3, #0
 800f958:	d13d      	bne.n	800f9d6 <_printf_i+0x16a>
 800f95a:	2d00      	cmp	r5, #0
 800f95c:	f040 808e 	bne.w	800fa7c <_printf_i+0x210>
 800f960:	4665      	mov	r5, ip
 800f962:	2a08      	cmp	r2, #8
 800f964:	d10b      	bne.n	800f97e <_printf_i+0x112>
 800f966:	6823      	ldr	r3, [r4, #0]
 800f968:	07db      	lsls	r3, r3, #31
 800f96a:	d508      	bpl.n	800f97e <_printf_i+0x112>
 800f96c:	6923      	ldr	r3, [r4, #16]
 800f96e:	6862      	ldr	r2, [r4, #4]
 800f970:	429a      	cmp	r2, r3
 800f972:	bfde      	ittt	le
 800f974:	2330      	movle	r3, #48	; 0x30
 800f976:	f805 3c01 	strble.w	r3, [r5, #-1]
 800f97a:	f105 35ff 	addle.w	r5, r5, #4294967295
 800f97e:	ebac 0305 	sub.w	r3, ip, r5
 800f982:	6123      	str	r3, [r4, #16]
 800f984:	f8cd 8000 	str.w	r8, [sp]
 800f988:	463b      	mov	r3, r7
 800f98a:	aa03      	add	r2, sp, #12
 800f98c:	4621      	mov	r1, r4
 800f98e:	4630      	mov	r0, r6
 800f990:	f7ff fef6 	bl	800f780 <_printf_common>
 800f994:	3001      	adds	r0, #1
 800f996:	d14d      	bne.n	800fa34 <_printf_i+0x1c8>
 800f998:	f04f 30ff 	mov.w	r0, #4294967295
 800f99c:	b005      	add	sp, #20
 800f99e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9a2:	4839      	ldr	r0, [pc, #228]	; (800fa88 <_printf_i+0x21c>)
 800f9a4:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800f9a8:	6813      	ldr	r3, [r2, #0]
 800f9aa:	6821      	ldr	r1, [r4, #0]
 800f9ac:	1d1d      	adds	r5, r3, #4
 800f9ae:	681b      	ldr	r3, [r3, #0]
 800f9b0:	6015      	str	r5, [r2, #0]
 800f9b2:	060a      	lsls	r2, r1, #24
 800f9b4:	d50b      	bpl.n	800f9ce <_printf_i+0x162>
 800f9b6:	07ca      	lsls	r2, r1, #31
 800f9b8:	bf44      	itt	mi
 800f9ba:	f041 0120 	orrmi.w	r1, r1, #32
 800f9be:	6021      	strmi	r1, [r4, #0]
 800f9c0:	b91b      	cbnz	r3, 800f9ca <_printf_i+0x15e>
 800f9c2:	6822      	ldr	r2, [r4, #0]
 800f9c4:	f022 0220 	bic.w	r2, r2, #32
 800f9c8:	6022      	str	r2, [r4, #0]
 800f9ca:	2210      	movs	r2, #16
 800f9cc:	e7b7      	b.n	800f93e <_printf_i+0xd2>
 800f9ce:	064d      	lsls	r5, r1, #25
 800f9d0:	bf48      	it	mi
 800f9d2:	b29b      	uxthmi	r3, r3
 800f9d4:	e7ef      	b.n	800f9b6 <_printf_i+0x14a>
 800f9d6:	4665      	mov	r5, ip
 800f9d8:	fbb3 f1f2 	udiv	r1, r3, r2
 800f9dc:	fb02 3311 	mls	r3, r2, r1, r3
 800f9e0:	5cc3      	ldrb	r3, [r0, r3]
 800f9e2:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800f9e6:	460b      	mov	r3, r1
 800f9e8:	2900      	cmp	r1, #0
 800f9ea:	d1f5      	bne.n	800f9d8 <_printf_i+0x16c>
 800f9ec:	e7b9      	b.n	800f962 <_printf_i+0xf6>
 800f9ee:	6813      	ldr	r3, [r2, #0]
 800f9f0:	6825      	ldr	r5, [r4, #0]
 800f9f2:	6961      	ldr	r1, [r4, #20]
 800f9f4:	1d18      	adds	r0, r3, #4
 800f9f6:	6010      	str	r0, [r2, #0]
 800f9f8:	0628      	lsls	r0, r5, #24
 800f9fa:	681b      	ldr	r3, [r3, #0]
 800f9fc:	d501      	bpl.n	800fa02 <_printf_i+0x196>
 800f9fe:	6019      	str	r1, [r3, #0]
 800fa00:	e002      	b.n	800fa08 <_printf_i+0x19c>
 800fa02:	066a      	lsls	r2, r5, #25
 800fa04:	d5fb      	bpl.n	800f9fe <_printf_i+0x192>
 800fa06:	8019      	strh	r1, [r3, #0]
 800fa08:	2300      	movs	r3, #0
 800fa0a:	6123      	str	r3, [r4, #16]
 800fa0c:	4665      	mov	r5, ip
 800fa0e:	e7b9      	b.n	800f984 <_printf_i+0x118>
 800fa10:	6813      	ldr	r3, [r2, #0]
 800fa12:	1d19      	adds	r1, r3, #4
 800fa14:	6011      	str	r1, [r2, #0]
 800fa16:	681d      	ldr	r5, [r3, #0]
 800fa18:	6862      	ldr	r2, [r4, #4]
 800fa1a:	2100      	movs	r1, #0
 800fa1c:	4628      	mov	r0, r5
 800fa1e:	f7f0 fbf7 	bl	8000210 <memchr>
 800fa22:	b108      	cbz	r0, 800fa28 <_printf_i+0x1bc>
 800fa24:	1b40      	subs	r0, r0, r5
 800fa26:	6060      	str	r0, [r4, #4]
 800fa28:	6863      	ldr	r3, [r4, #4]
 800fa2a:	6123      	str	r3, [r4, #16]
 800fa2c:	2300      	movs	r3, #0
 800fa2e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800fa32:	e7a7      	b.n	800f984 <_printf_i+0x118>
 800fa34:	6923      	ldr	r3, [r4, #16]
 800fa36:	462a      	mov	r2, r5
 800fa38:	4639      	mov	r1, r7
 800fa3a:	4630      	mov	r0, r6
 800fa3c:	47c0      	blx	r8
 800fa3e:	3001      	adds	r0, #1
 800fa40:	d0aa      	beq.n	800f998 <_printf_i+0x12c>
 800fa42:	6823      	ldr	r3, [r4, #0]
 800fa44:	079b      	lsls	r3, r3, #30
 800fa46:	d413      	bmi.n	800fa70 <_printf_i+0x204>
 800fa48:	68e0      	ldr	r0, [r4, #12]
 800fa4a:	9b03      	ldr	r3, [sp, #12]
 800fa4c:	4298      	cmp	r0, r3
 800fa4e:	bfb8      	it	lt
 800fa50:	4618      	movlt	r0, r3
 800fa52:	e7a3      	b.n	800f99c <_printf_i+0x130>
 800fa54:	2301      	movs	r3, #1
 800fa56:	464a      	mov	r2, r9
 800fa58:	4639      	mov	r1, r7
 800fa5a:	4630      	mov	r0, r6
 800fa5c:	47c0      	blx	r8
 800fa5e:	3001      	adds	r0, #1
 800fa60:	d09a      	beq.n	800f998 <_printf_i+0x12c>
 800fa62:	3501      	adds	r5, #1
 800fa64:	68e3      	ldr	r3, [r4, #12]
 800fa66:	9a03      	ldr	r2, [sp, #12]
 800fa68:	1a9b      	subs	r3, r3, r2
 800fa6a:	42ab      	cmp	r3, r5
 800fa6c:	dcf2      	bgt.n	800fa54 <_printf_i+0x1e8>
 800fa6e:	e7eb      	b.n	800fa48 <_printf_i+0x1dc>
 800fa70:	2500      	movs	r5, #0
 800fa72:	f104 0919 	add.w	r9, r4, #25
 800fa76:	e7f5      	b.n	800fa64 <_printf_i+0x1f8>
 800fa78:	2b00      	cmp	r3, #0
 800fa7a:	d1ac      	bne.n	800f9d6 <_printf_i+0x16a>
 800fa7c:	7803      	ldrb	r3, [r0, #0]
 800fa7e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800fa82:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800fa86:	e76c      	b.n	800f962 <_printf_i+0xf6>
 800fa88:	08011dd9 	.word	0x08011dd9
 800fa8c:	08011dea 	.word	0x08011dea

0800fa90 <memmove>:
 800fa90:	4288      	cmp	r0, r1
 800fa92:	b510      	push	{r4, lr}
 800fa94:	eb01 0302 	add.w	r3, r1, r2
 800fa98:	d807      	bhi.n	800faaa <memmove+0x1a>
 800fa9a:	1e42      	subs	r2, r0, #1
 800fa9c:	4299      	cmp	r1, r3
 800fa9e:	d00a      	beq.n	800fab6 <memmove+0x26>
 800faa0:	f811 4b01 	ldrb.w	r4, [r1], #1
 800faa4:	f802 4f01 	strb.w	r4, [r2, #1]!
 800faa8:	e7f8      	b.n	800fa9c <memmove+0xc>
 800faaa:	4283      	cmp	r3, r0
 800faac:	d9f5      	bls.n	800fa9a <memmove+0xa>
 800faae:	1881      	adds	r1, r0, r2
 800fab0:	1ad2      	subs	r2, r2, r3
 800fab2:	42d3      	cmn	r3, r2
 800fab4:	d100      	bne.n	800fab8 <memmove+0x28>
 800fab6:	bd10      	pop	{r4, pc}
 800fab8:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800fabc:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800fac0:	e7f7      	b.n	800fab2 <memmove+0x22>
	...

0800fac4 <_free_r>:
 800fac4:	b538      	push	{r3, r4, r5, lr}
 800fac6:	4605      	mov	r5, r0
 800fac8:	2900      	cmp	r1, #0
 800faca:	d045      	beq.n	800fb58 <_free_r+0x94>
 800facc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800fad0:	1f0c      	subs	r4, r1, #4
 800fad2:	2b00      	cmp	r3, #0
 800fad4:	bfb8      	it	lt
 800fad6:	18e4      	addlt	r4, r4, r3
 800fad8:	f000 f8d2 	bl	800fc80 <__malloc_lock>
 800fadc:	4a1f      	ldr	r2, [pc, #124]	; (800fb5c <_free_r+0x98>)
 800fade:	6813      	ldr	r3, [r2, #0]
 800fae0:	4610      	mov	r0, r2
 800fae2:	b933      	cbnz	r3, 800faf2 <_free_r+0x2e>
 800fae4:	6063      	str	r3, [r4, #4]
 800fae6:	6014      	str	r4, [r2, #0]
 800fae8:	4628      	mov	r0, r5
 800faea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800faee:	f000 b8c8 	b.w	800fc82 <__malloc_unlock>
 800faf2:	42a3      	cmp	r3, r4
 800faf4:	d90c      	bls.n	800fb10 <_free_r+0x4c>
 800faf6:	6821      	ldr	r1, [r4, #0]
 800faf8:	1862      	adds	r2, r4, r1
 800fafa:	4293      	cmp	r3, r2
 800fafc:	bf04      	itt	eq
 800fafe:	681a      	ldreq	r2, [r3, #0]
 800fb00:	685b      	ldreq	r3, [r3, #4]
 800fb02:	6063      	str	r3, [r4, #4]
 800fb04:	bf04      	itt	eq
 800fb06:	1852      	addeq	r2, r2, r1
 800fb08:	6022      	streq	r2, [r4, #0]
 800fb0a:	6004      	str	r4, [r0, #0]
 800fb0c:	e7ec      	b.n	800fae8 <_free_r+0x24>
 800fb0e:	4613      	mov	r3, r2
 800fb10:	685a      	ldr	r2, [r3, #4]
 800fb12:	b10a      	cbz	r2, 800fb18 <_free_r+0x54>
 800fb14:	42a2      	cmp	r2, r4
 800fb16:	d9fa      	bls.n	800fb0e <_free_r+0x4a>
 800fb18:	6819      	ldr	r1, [r3, #0]
 800fb1a:	1858      	adds	r0, r3, r1
 800fb1c:	42a0      	cmp	r0, r4
 800fb1e:	d10b      	bne.n	800fb38 <_free_r+0x74>
 800fb20:	6820      	ldr	r0, [r4, #0]
 800fb22:	4401      	add	r1, r0
 800fb24:	1858      	adds	r0, r3, r1
 800fb26:	4282      	cmp	r2, r0
 800fb28:	6019      	str	r1, [r3, #0]
 800fb2a:	d1dd      	bne.n	800fae8 <_free_r+0x24>
 800fb2c:	6810      	ldr	r0, [r2, #0]
 800fb2e:	6852      	ldr	r2, [r2, #4]
 800fb30:	605a      	str	r2, [r3, #4]
 800fb32:	4401      	add	r1, r0
 800fb34:	6019      	str	r1, [r3, #0]
 800fb36:	e7d7      	b.n	800fae8 <_free_r+0x24>
 800fb38:	d902      	bls.n	800fb40 <_free_r+0x7c>
 800fb3a:	230c      	movs	r3, #12
 800fb3c:	602b      	str	r3, [r5, #0]
 800fb3e:	e7d3      	b.n	800fae8 <_free_r+0x24>
 800fb40:	6820      	ldr	r0, [r4, #0]
 800fb42:	1821      	adds	r1, r4, r0
 800fb44:	428a      	cmp	r2, r1
 800fb46:	bf04      	itt	eq
 800fb48:	6811      	ldreq	r1, [r2, #0]
 800fb4a:	6852      	ldreq	r2, [r2, #4]
 800fb4c:	6062      	str	r2, [r4, #4]
 800fb4e:	bf04      	itt	eq
 800fb50:	1809      	addeq	r1, r1, r0
 800fb52:	6021      	streq	r1, [r4, #0]
 800fb54:	605c      	str	r4, [r3, #4]
 800fb56:	e7c7      	b.n	800fae8 <_free_r+0x24>
 800fb58:	bd38      	pop	{r3, r4, r5, pc}
 800fb5a:	bf00      	nop
 800fb5c:	20009a68 	.word	0x20009a68

0800fb60 <_malloc_r>:
 800fb60:	b570      	push	{r4, r5, r6, lr}
 800fb62:	1ccd      	adds	r5, r1, #3
 800fb64:	f025 0503 	bic.w	r5, r5, #3
 800fb68:	3508      	adds	r5, #8
 800fb6a:	2d0c      	cmp	r5, #12
 800fb6c:	bf38      	it	cc
 800fb6e:	250c      	movcc	r5, #12
 800fb70:	2d00      	cmp	r5, #0
 800fb72:	4606      	mov	r6, r0
 800fb74:	db01      	blt.n	800fb7a <_malloc_r+0x1a>
 800fb76:	42a9      	cmp	r1, r5
 800fb78:	d903      	bls.n	800fb82 <_malloc_r+0x22>
 800fb7a:	230c      	movs	r3, #12
 800fb7c:	6033      	str	r3, [r6, #0]
 800fb7e:	2000      	movs	r0, #0
 800fb80:	bd70      	pop	{r4, r5, r6, pc}
 800fb82:	f000 f87d 	bl	800fc80 <__malloc_lock>
 800fb86:	4a21      	ldr	r2, [pc, #132]	; (800fc0c <_malloc_r+0xac>)
 800fb88:	6814      	ldr	r4, [r2, #0]
 800fb8a:	4621      	mov	r1, r4
 800fb8c:	b991      	cbnz	r1, 800fbb4 <_malloc_r+0x54>
 800fb8e:	4c20      	ldr	r4, [pc, #128]	; (800fc10 <_malloc_r+0xb0>)
 800fb90:	6823      	ldr	r3, [r4, #0]
 800fb92:	b91b      	cbnz	r3, 800fb9c <_malloc_r+0x3c>
 800fb94:	4630      	mov	r0, r6
 800fb96:	f000 f863 	bl	800fc60 <_sbrk_r>
 800fb9a:	6020      	str	r0, [r4, #0]
 800fb9c:	4629      	mov	r1, r5
 800fb9e:	4630      	mov	r0, r6
 800fba0:	f000 f85e 	bl	800fc60 <_sbrk_r>
 800fba4:	1c43      	adds	r3, r0, #1
 800fba6:	d124      	bne.n	800fbf2 <_malloc_r+0x92>
 800fba8:	230c      	movs	r3, #12
 800fbaa:	6033      	str	r3, [r6, #0]
 800fbac:	4630      	mov	r0, r6
 800fbae:	f000 f868 	bl	800fc82 <__malloc_unlock>
 800fbb2:	e7e4      	b.n	800fb7e <_malloc_r+0x1e>
 800fbb4:	680b      	ldr	r3, [r1, #0]
 800fbb6:	1b5b      	subs	r3, r3, r5
 800fbb8:	d418      	bmi.n	800fbec <_malloc_r+0x8c>
 800fbba:	2b0b      	cmp	r3, #11
 800fbbc:	d90f      	bls.n	800fbde <_malloc_r+0x7e>
 800fbbe:	600b      	str	r3, [r1, #0]
 800fbc0:	50cd      	str	r5, [r1, r3]
 800fbc2:	18cc      	adds	r4, r1, r3
 800fbc4:	4630      	mov	r0, r6
 800fbc6:	f000 f85c 	bl	800fc82 <__malloc_unlock>
 800fbca:	f104 000b 	add.w	r0, r4, #11
 800fbce:	1d23      	adds	r3, r4, #4
 800fbd0:	f020 0007 	bic.w	r0, r0, #7
 800fbd4:	1ac3      	subs	r3, r0, r3
 800fbd6:	d0d3      	beq.n	800fb80 <_malloc_r+0x20>
 800fbd8:	425a      	negs	r2, r3
 800fbda:	50e2      	str	r2, [r4, r3]
 800fbdc:	e7d0      	b.n	800fb80 <_malloc_r+0x20>
 800fbde:	428c      	cmp	r4, r1
 800fbe0:	684b      	ldr	r3, [r1, #4]
 800fbe2:	bf16      	itet	ne
 800fbe4:	6063      	strne	r3, [r4, #4]
 800fbe6:	6013      	streq	r3, [r2, #0]
 800fbe8:	460c      	movne	r4, r1
 800fbea:	e7eb      	b.n	800fbc4 <_malloc_r+0x64>
 800fbec:	460c      	mov	r4, r1
 800fbee:	6849      	ldr	r1, [r1, #4]
 800fbf0:	e7cc      	b.n	800fb8c <_malloc_r+0x2c>
 800fbf2:	1cc4      	adds	r4, r0, #3
 800fbf4:	f024 0403 	bic.w	r4, r4, #3
 800fbf8:	42a0      	cmp	r0, r4
 800fbfa:	d005      	beq.n	800fc08 <_malloc_r+0xa8>
 800fbfc:	1a21      	subs	r1, r4, r0
 800fbfe:	4630      	mov	r0, r6
 800fc00:	f000 f82e 	bl	800fc60 <_sbrk_r>
 800fc04:	3001      	adds	r0, #1
 800fc06:	d0cf      	beq.n	800fba8 <_malloc_r+0x48>
 800fc08:	6025      	str	r5, [r4, #0]
 800fc0a:	e7db      	b.n	800fbc4 <_malloc_r+0x64>
 800fc0c:	20009a68 	.word	0x20009a68
 800fc10:	20009a6c 	.word	0x20009a6c

0800fc14 <_realloc_r>:
 800fc14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc16:	4607      	mov	r7, r0
 800fc18:	4614      	mov	r4, r2
 800fc1a:	460e      	mov	r6, r1
 800fc1c:	b921      	cbnz	r1, 800fc28 <_realloc_r+0x14>
 800fc1e:	4611      	mov	r1, r2
 800fc20:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800fc24:	f7ff bf9c 	b.w	800fb60 <_malloc_r>
 800fc28:	b922      	cbnz	r2, 800fc34 <_realloc_r+0x20>
 800fc2a:	f7ff ff4b 	bl	800fac4 <_free_r>
 800fc2e:	4625      	mov	r5, r4
 800fc30:	4628      	mov	r0, r5
 800fc32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fc34:	f000 f826 	bl	800fc84 <_malloc_usable_size_r>
 800fc38:	42a0      	cmp	r0, r4
 800fc3a:	d20f      	bcs.n	800fc5c <_realloc_r+0x48>
 800fc3c:	4621      	mov	r1, r4
 800fc3e:	4638      	mov	r0, r7
 800fc40:	f7ff ff8e 	bl	800fb60 <_malloc_r>
 800fc44:	4605      	mov	r5, r0
 800fc46:	2800      	cmp	r0, #0
 800fc48:	d0f2      	beq.n	800fc30 <_realloc_r+0x1c>
 800fc4a:	4631      	mov	r1, r6
 800fc4c:	4622      	mov	r2, r4
 800fc4e:	f7ff fc11 	bl	800f474 <memcpy>
 800fc52:	4631      	mov	r1, r6
 800fc54:	4638      	mov	r0, r7
 800fc56:	f7ff ff35 	bl	800fac4 <_free_r>
 800fc5a:	e7e9      	b.n	800fc30 <_realloc_r+0x1c>
 800fc5c:	4635      	mov	r5, r6
 800fc5e:	e7e7      	b.n	800fc30 <_realloc_r+0x1c>

0800fc60 <_sbrk_r>:
 800fc60:	b538      	push	{r3, r4, r5, lr}
 800fc62:	4c06      	ldr	r4, [pc, #24]	; (800fc7c <_sbrk_r+0x1c>)
 800fc64:	2300      	movs	r3, #0
 800fc66:	4605      	mov	r5, r0
 800fc68:	4608      	mov	r0, r1
 800fc6a:	6023      	str	r3, [r4, #0]
 800fc6c:	f7f6 fb10 	bl	8006290 <_sbrk>
 800fc70:	1c43      	adds	r3, r0, #1
 800fc72:	d102      	bne.n	800fc7a <_sbrk_r+0x1a>
 800fc74:	6823      	ldr	r3, [r4, #0]
 800fc76:	b103      	cbz	r3, 800fc7a <_sbrk_r+0x1a>
 800fc78:	602b      	str	r3, [r5, #0]
 800fc7a:	bd38      	pop	{r3, r4, r5, pc}
 800fc7c:	2000a150 	.word	0x2000a150

0800fc80 <__malloc_lock>:
 800fc80:	4770      	bx	lr

0800fc82 <__malloc_unlock>:
 800fc82:	4770      	bx	lr

0800fc84 <_malloc_usable_size_r>:
 800fc84:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800fc88:	1f18      	subs	r0, r3, #4
 800fc8a:	2b00      	cmp	r3, #0
 800fc8c:	bfbc      	itt	lt
 800fc8e:	580b      	ldrlt	r3, [r1, r0]
 800fc90:	18c0      	addlt	r0, r0, r3
 800fc92:	4770      	bx	lr

0800fc94 <_init>:
 800fc94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc96:	bf00      	nop
 800fc98:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fc9a:	bc08      	pop	{r3}
 800fc9c:	469e      	mov	lr, r3
 800fc9e:	4770      	bx	lr

0800fca0 <_fini>:
 800fca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fca2:	bf00      	nop
 800fca4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fca6:	bc08      	pop	{r3}
 800fca8:	469e      	mov	lr, r3
 800fcaa:	4770      	bx	lr
