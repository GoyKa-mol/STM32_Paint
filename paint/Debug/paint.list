
paint.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000fabc  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002158  0800fc8c  0800fc8c  0001fc8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08011de4  08011de4  00031428  2**0
                  CONTENTS
  4 .ARM          00000008  08011de4  08011de4  00021de4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08011dec  08011dec  00031428  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08011dec  08011dec  00021dec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08011df0  08011df0  00021df0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00001428  20000000  08011df4  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00008d2c  20001428  0801321c  00031428  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000a154  0801321c  0003a154  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00031428  2**0
                  CONTENTS, READONLY
 12 .debug_info   0002d2a1  00000000  00000000  00031458  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000055a5  00000000  00000000  0005e6f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00002660  00000000  00000000  00063ca0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000023c8  00000000  00000000  00066300  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0002e422  00000000  00000000  000686c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0001f9b8  00000000  00000000  00096aea  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    001154ce  00000000  00000000  000b64a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  001cb970  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000a590  00000000  00000000  001cb9ec  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20001428 	.word	0x20001428
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0800fc74 	.word	0x0800fc74

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	2000142c 	.word	0x2000142c
 800020c:	0800fc74 	.word	0x0800fc74

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b972 	b.w	80005ac <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9e08      	ldr	r6, [sp, #32]
 80002e6:	4604      	mov	r4, r0
 80002e8:	4688      	mov	r8, r1
 80002ea:	2b00      	cmp	r3, #0
 80002ec:	d14b      	bne.n	8000386 <__udivmoddi4+0xa6>
 80002ee:	428a      	cmp	r2, r1
 80002f0:	4615      	mov	r5, r2
 80002f2:	d967      	bls.n	80003c4 <__udivmoddi4+0xe4>
 80002f4:	fab2 f282 	clz	r2, r2
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0720 	rsb	r7, r2, #32
 80002fe:	fa01 f302 	lsl.w	r3, r1, r2
 8000302:	fa20 f707 	lsr.w	r7, r0, r7
 8000306:	4095      	lsls	r5, r2
 8000308:	ea47 0803 	orr.w	r8, r7, r3
 800030c:	4094      	lsls	r4, r2
 800030e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000312:	0c23      	lsrs	r3, r4, #16
 8000314:	fbb8 f7fe 	udiv	r7, r8, lr
 8000318:	fa1f fc85 	uxth.w	ip, r5
 800031c:	fb0e 8817 	mls	r8, lr, r7, r8
 8000320:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000324:	fb07 f10c 	mul.w	r1, r7, ip
 8000328:	4299      	cmp	r1, r3
 800032a:	d909      	bls.n	8000340 <__udivmoddi4+0x60>
 800032c:	18eb      	adds	r3, r5, r3
 800032e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000332:	f080 811b 	bcs.w	800056c <__udivmoddi4+0x28c>
 8000336:	4299      	cmp	r1, r3
 8000338:	f240 8118 	bls.w	800056c <__udivmoddi4+0x28c>
 800033c:	3f02      	subs	r7, #2
 800033e:	442b      	add	r3, r5
 8000340:	1a5b      	subs	r3, r3, r1
 8000342:	b2a4      	uxth	r4, r4
 8000344:	fbb3 f0fe 	udiv	r0, r3, lr
 8000348:	fb0e 3310 	mls	r3, lr, r0, r3
 800034c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000350:	fb00 fc0c 	mul.w	ip, r0, ip
 8000354:	45a4      	cmp	ip, r4
 8000356:	d909      	bls.n	800036c <__udivmoddi4+0x8c>
 8000358:	192c      	adds	r4, r5, r4
 800035a:	f100 33ff 	add.w	r3, r0, #4294967295
 800035e:	f080 8107 	bcs.w	8000570 <__udivmoddi4+0x290>
 8000362:	45a4      	cmp	ip, r4
 8000364:	f240 8104 	bls.w	8000570 <__udivmoddi4+0x290>
 8000368:	3802      	subs	r0, #2
 800036a:	442c      	add	r4, r5
 800036c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000370:	eba4 040c 	sub.w	r4, r4, ip
 8000374:	2700      	movs	r7, #0
 8000376:	b11e      	cbz	r6, 8000380 <__udivmoddi4+0xa0>
 8000378:	40d4      	lsrs	r4, r2
 800037a:	2300      	movs	r3, #0
 800037c:	e9c6 4300 	strd	r4, r3, [r6]
 8000380:	4639      	mov	r1, r7
 8000382:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000386:	428b      	cmp	r3, r1
 8000388:	d909      	bls.n	800039e <__udivmoddi4+0xbe>
 800038a:	2e00      	cmp	r6, #0
 800038c:	f000 80eb 	beq.w	8000566 <__udivmoddi4+0x286>
 8000390:	2700      	movs	r7, #0
 8000392:	e9c6 0100 	strd	r0, r1, [r6]
 8000396:	4638      	mov	r0, r7
 8000398:	4639      	mov	r1, r7
 800039a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039e:	fab3 f783 	clz	r7, r3
 80003a2:	2f00      	cmp	r7, #0
 80003a4:	d147      	bne.n	8000436 <__udivmoddi4+0x156>
 80003a6:	428b      	cmp	r3, r1
 80003a8:	d302      	bcc.n	80003b0 <__udivmoddi4+0xd0>
 80003aa:	4282      	cmp	r2, r0
 80003ac:	f200 80fa 	bhi.w	80005a4 <__udivmoddi4+0x2c4>
 80003b0:	1a84      	subs	r4, r0, r2
 80003b2:	eb61 0303 	sbc.w	r3, r1, r3
 80003b6:	2001      	movs	r0, #1
 80003b8:	4698      	mov	r8, r3
 80003ba:	2e00      	cmp	r6, #0
 80003bc:	d0e0      	beq.n	8000380 <__udivmoddi4+0xa0>
 80003be:	e9c6 4800 	strd	r4, r8, [r6]
 80003c2:	e7dd      	b.n	8000380 <__udivmoddi4+0xa0>
 80003c4:	b902      	cbnz	r2, 80003c8 <__udivmoddi4+0xe8>
 80003c6:	deff      	udf	#255	; 0xff
 80003c8:	fab2 f282 	clz	r2, r2
 80003cc:	2a00      	cmp	r2, #0
 80003ce:	f040 808f 	bne.w	80004f0 <__udivmoddi4+0x210>
 80003d2:	1b49      	subs	r1, r1, r5
 80003d4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003d8:	fa1f f885 	uxth.w	r8, r5
 80003dc:	2701      	movs	r7, #1
 80003de:	fbb1 fcfe 	udiv	ip, r1, lr
 80003e2:	0c23      	lsrs	r3, r4, #16
 80003e4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003e8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003ec:	fb08 f10c 	mul.w	r1, r8, ip
 80003f0:	4299      	cmp	r1, r3
 80003f2:	d907      	bls.n	8000404 <__udivmoddi4+0x124>
 80003f4:	18eb      	adds	r3, r5, r3
 80003f6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003fa:	d202      	bcs.n	8000402 <__udivmoddi4+0x122>
 80003fc:	4299      	cmp	r1, r3
 80003fe:	f200 80cd 	bhi.w	800059c <__udivmoddi4+0x2bc>
 8000402:	4684      	mov	ip, r0
 8000404:	1a59      	subs	r1, r3, r1
 8000406:	b2a3      	uxth	r3, r4
 8000408:	fbb1 f0fe 	udiv	r0, r1, lr
 800040c:	fb0e 1410 	mls	r4, lr, r0, r1
 8000410:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000414:	fb08 f800 	mul.w	r8, r8, r0
 8000418:	45a0      	cmp	r8, r4
 800041a:	d907      	bls.n	800042c <__udivmoddi4+0x14c>
 800041c:	192c      	adds	r4, r5, r4
 800041e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000422:	d202      	bcs.n	800042a <__udivmoddi4+0x14a>
 8000424:	45a0      	cmp	r8, r4
 8000426:	f200 80b6 	bhi.w	8000596 <__udivmoddi4+0x2b6>
 800042a:	4618      	mov	r0, r3
 800042c:	eba4 0408 	sub.w	r4, r4, r8
 8000430:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000434:	e79f      	b.n	8000376 <__udivmoddi4+0x96>
 8000436:	f1c7 0c20 	rsb	ip, r7, #32
 800043a:	40bb      	lsls	r3, r7
 800043c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000440:	ea4e 0e03 	orr.w	lr, lr, r3
 8000444:	fa01 f407 	lsl.w	r4, r1, r7
 8000448:	fa20 f50c 	lsr.w	r5, r0, ip
 800044c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000450:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000454:	4325      	orrs	r5, r4
 8000456:	fbb3 f9f8 	udiv	r9, r3, r8
 800045a:	0c2c      	lsrs	r4, r5, #16
 800045c:	fb08 3319 	mls	r3, r8, r9, r3
 8000460:	fa1f fa8e 	uxth.w	sl, lr
 8000464:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000468:	fb09 f40a 	mul.w	r4, r9, sl
 800046c:	429c      	cmp	r4, r3
 800046e:	fa02 f207 	lsl.w	r2, r2, r7
 8000472:	fa00 f107 	lsl.w	r1, r0, r7
 8000476:	d90b      	bls.n	8000490 <__udivmoddi4+0x1b0>
 8000478:	eb1e 0303 	adds.w	r3, lr, r3
 800047c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000480:	f080 8087 	bcs.w	8000592 <__udivmoddi4+0x2b2>
 8000484:	429c      	cmp	r4, r3
 8000486:	f240 8084 	bls.w	8000592 <__udivmoddi4+0x2b2>
 800048a:	f1a9 0902 	sub.w	r9, r9, #2
 800048e:	4473      	add	r3, lr
 8000490:	1b1b      	subs	r3, r3, r4
 8000492:	b2ad      	uxth	r5, r5
 8000494:	fbb3 f0f8 	udiv	r0, r3, r8
 8000498:	fb08 3310 	mls	r3, r8, r0, r3
 800049c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 80004a0:	fb00 fa0a 	mul.w	sl, r0, sl
 80004a4:	45a2      	cmp	sl, r4
 80004a6:	d908      	bls.n	80004ba <__udivmoddi4+0x1da>
 80004a8:	eb1e 0404 	adds.w	r4, lr, r4
 80004ac:	f100 33ff 	add.w	r3, r0, #4294967295
 80004b0:	d26b      	bcs.n	800058a <__udivmoddi4+0x2aa>
 80004b2:	45a2      	cmp	sl, r4
 80004b4:	d969      	bls.n	800058a <__udivmoddi4+0x2aa>
 80004b6:	3802      	subs	r0, #2
 80004b8:	4474      	add	r4, lr
 80004ba:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80004be:	fba0 8902 	umull	r8, r9, r0, r2
 80004c2:	eba4 040a 	sub.w	r4, r4, sl
 80004c6:	454c      	cmp	r4, r9
 80004c8:	46c2      	mov	sl, r8
 80004ca:	464b      	mov	r3, r9
 80004cc:	d354      	bcc.n	8000578 <__udivmoddi4+0x298>
 80004ce:	d051      	beq.n	8000574 <__udivmoddi4+0x294>
 80004d0:	2e00      	cmp	r6, #0
 80004d2:	d069      	beq.n	80005a8 <__udivmoddi4+0x2c8>
 80004d4:	ebb1 050a 	subs.w	r5, r1, sl
 80004d8:	eb64 0403 	sbc.w	r4, r4, r3
 80004dc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004e0:	40fd      	lsrs	r5, r7
 80004e2:	40fc      	lsrs	r4, r7
 80004e4:	ea4c 0505 	orr.w	r5, ip, r5
 80004e8:	e9c6 5400 	strd	r5, r4, [r6]
 80004ec:	2700      	movs	r7, #0
 80004ee:	e747      	b.n	8000380 <__udivmoddi4+0xa0>
 80004f0:	f1c2 0320 	rsb	r3, r2, #32
 80004f4:	fa20 f703 	lsr.w	r7, r0, r3
 80004f8:	4095      	lsls	r5, r2
 80004fa:	fa01 f002 	lsl.w	r0, r1, r2
 80004fe:	fa21 f303 	lsr.w	r3, r1, r3
 8000502:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000506:	4338      	orrs	r0, r7
 8000508:	0c01      	lsrs	r1, r0, #16
 800050a:	fbb3 f7fe 	udiv	r7, r3, lr
 800050e:	fa1f f885 	uxth.w	r8, r5
 8000512:	fb0e 3317 	mls	r3, lr, r7, r3
 8000516:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800051a:	fb07 f308 	mul.w	r3, r7, r8
 800051e:	428b      	cmp	r3, r1
 8000520:	fa04 f402 	lsl.w	r4, r4, r2
 8000524:	d907      	bls.n	8000536 <__udivmoddi4+0x256>
 8000526:	1869      	adds	r1, r5, r1
 8000528:	f107 3cff 	add.w	ip, r7, #4294967295
 800052c:	d22f      	bcs.n	800058e <__udivmoddi4+0x2ae>
 800052e:	428b      	cmp	r3, r1
 8000530:	d92d      	bls.n	800058e <__udivmoddi4+0x2ae>
 8000532:	3f02      	subs	r7, #2
 8000534:	4429      	add	r1, r5
 8000536:	1acb      	subs	r3, r1, r3
 8000538:	b281      	uxth	r1, r0
 800053a:	fbb3 f0fe 	udiv	r0, r3, lr
 800053e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000542:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000546:	fb00 f308 	mul.w	r3, r0, r8
 800054a:	428b      	cmp	r3, r1
 800054c:	d907      	bls.n	800055e <__udivmoddi4+0x27e>
 800054e:	1869      	adds	r1, r5, r1
 8000550:	f100 3cff 	add.w	ip, r0, #4294967295
 8000554:	d217      	bcs.n	8000586 <__udivmoddi4+0x2a6>
 8000556:	428b      	cmp	r3, r1
 8000558:	d915      	bls.n	8000586 <__udivmoddi4+0x2a6>
 800055a:	3802      	subs	r0, #2
 800055c:	4429      	add	r1, r5
 800055e:	1ac9      	subs	r1, r1, r3
 8000560:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000564:	e73b      	b.n	80003de <__udivmoddi4+0xfe>
 8000566:	4637      	mov	r7, r6
 8000568:	4630      	mov	r0, r6
 800056a:	e709      	b.n	8000380 <__udivmoddi4+0xa0>
 800056c:	4607      	mov	r7, r0
 800056e:	e6e7      	b.n	8000340 <__udivmoddi4+0x60>
 8000570:	4618      	mov	r0, r3
 8000572:	e6fb      	b.n	800036c <__udivmoddi4+0x8c>
 8000574:	4541      	cmp	r1, r8
 8000576:	d2ab      	bcs.n	80004d0 <__udivmoddi4+0x1f0>
 8000578:	ebb8 0a02 	subs.w	sl, r8, r2
 800057c:	eb69 020e 	sbc.w	r2, r9, lr
 8000580:	3801      	subs	r0, #1
 8000582:	4613      	mov	r3, r2
 8000584:	e7a4      	b.n	80004d0 <__udivmoddi4+0x1f0>
 8000586:	4660      	mov	r0, ip
 8000588:	e7e9      	b.n	800055e <__udivmoddi4+0x27e>
 800058a:	4618      	mov	r0, r3
 800058c:	e795      	b.n	80004ba <__udivmoddi4+0x1da>
 800058e:	4667      	mov	r7, ip
 8000590:	e7d1      	b.n	8000536 <__udivmoddi4+0x256>
 8000592:	4681      	mov	r9, r0
 8000594:	e77c      	b.n	8000490 <__udivmoddi4+0x1b0>
 8000596:	3802      	subs	r0, #2
 8000598:	442c      	add	r4, r5
 800059a:	e747      	b.n	800042c <__udivmoddi4+0x14c>
 800059c:	f1ac 0c02 	sub.w	ip, ip, #2
 80005a0:	442b      	add	r3, r5
 80005a2:	e72f      	b.n	8000404 <__udivmoddi4+0x124>
 80005a4:	4638      	mov	r0, r7
 80005a6:	e708      	b.n	80003ba <__udivmoddi4+0xda>
 80005a8:	4637      	mov	r7, r6
 80005aa:	e6e9      	b.n	8000380 <__udivmoddi4+0xa0>

080005ac <__aeabi_idiv0>:
 80005ac:	4770      	bx	lr
 80005ae:	bf00      	nop

080005b0 <vApplicationIdleHook>:
 80005b0:	b480      	push	{r7}
 80005b2:	af00      	add	r7, sp, #0
 80005b4:	bf00      	nop
 80005b6:	46bd      	mov	sp, r7
 80005b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005bc:	4770      	bx	lr

080005be <vApplicationStackOverflowHook>:
 80005be:	b480      	push	{r7}
 80005c0:	b083      	sub	sp, #12
 80005c2:	af00      	add	r7, sp, #0
 80005c4:	6078      	str	r0, [r7, #4]
 80005c6:	6039      	str	r1, [r7, #0]
 80005c8:	bf00      	nop
 80005ca:	370c      	adds	r7, #12
 80005cc:	46bd      	mov	sp, r7
 80005ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d2:	4770      	bx	lr

080005d4 <vApplicationMallocFailedHook>:
 80005d4:	b480      	push	{r7}
 80005d6:	af00      	add	r7, sp, #0
 80005d8:	bf00      	nop
 80005da:	46bd      	mov	sp, r7
 80005dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e0:	4770      	bx	lr
	...

080005e4 <vApplicationGetIdleTaskMemory>:
 80005e4:	b480      	push	{r7}
 80005e6:	b085      	sub	sp, #20
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	60f8      	str	r0, [r7, #12]
 80005ec:	60b9      	str	r1, [r7, #8]
 80005ee:	607a      	str	r2, [r7, #4]
 80005f0:	68fb      	ldr	r3, [r7, #12]
 80005f2:	4a07      	ldr	r2, [pc, #28]	; (8000610 <vApplicationGetIdleTaskMemory+0x2c>)
 80005f4:	601a      	str	r2, [r3, #0]
 80005f6:	68bb      	ldr	r3, [r7, #8]
 80005f8:	4a06      	ldr	r2, [pc, #24]	; (8000614 <vApplicationGetIdleTaskMemory+0x30>)
 80005fa:	601a      	str	r2, [r3, #0]
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	2280      	movs	r2, #128	; 0x80
 8000600:	601a      	str	r2, [r3, #0]
 8000602:	bf00      	nop
 8000604:	3714      	adds	r7, #20
 8000606:	46bd      	mov	sp, r7
 8000608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800060c:	4770      	bx	lr
 800060e:	bf00      	nop
 8000610:	20001444 	.word	0x20001444
 8000614:	2000149c 	.word	0x2000149c

08000618 <ft5336_Init>:
  *         from MCU to FT5336 : ie I2C channel initialization (if required).
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Init(uint16_t DeviceAddr)
{
 8000618:	b580      	push	{r7, lr}
 800061a:	b082      	sub	sp, #8
 800061c:	af00      	add	r7, sp, #0
 800061e:	4603      	mov	r3, r0
 8000620:	80fb      	strh	r3, [r7, #6]
  /* Wait at least 200ms after power up before accessing registers
   * Trsi timing (Time of starting to report point after resetting) from FT5336GQQ datasheet */
  TS_IO_Delay(200);
 8000622:	20c8      	movs	r0, #200	; 0xc8
 8000624:	f003 fba2 	bl	8003d6c <TS_IO_Delay>

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 8000628:	f000 fa7a 	bl	8000b20 <ft5336_I2C_InitializeIfRequired>
}
 800062c:	bf00      	nop
 800062e:	3708      	adds	r7, #8
 8000630:	46bd      	mov	sp, r7
 8000632:	bd80      	pop	{r7, pc}

08000634 <ft5336_Reset>:
  *         @note : Not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
 8000634:	b480      	push	{r7}
 8000636:	b083      	sub	sp, #12
 8000638:	af00      	add	r7, sp, #0
 800063a:	4603      	mov	r3, r0
 800063c:	80fb      	strh	r3, [r7, #6]
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 800063e:	bf00      	nop
 8000640:	370c      	adds	r7, #12
 8000642:	46bd      	mov	sp, r7
 8000644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000648:	4770      	bx	lr

0800064a <ft5336_ReadID>:
  *         able to read the FT5336 device ID, and verify this is a FT5336.
  * @param  DeviceAddr: I2C FT5336 Slave address.
  * @retval The Device ID (two bytes).
  */
uint16_t ft5336_ReadID(uint16_t DeviceAddr)
{
 800064a:	b580      	push	{r7, lr}
 800064c:	b084      	sub	sp, #16
 800064e:	af00      	add	r7, sp, #0
 8000650:	4603      	mov	r3, r0
 8000652:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t ucReadId = 0;
 8000654:	2300      	movs	r3, #0
 8000656:	737b      	strb	r3, [r7, #13]
  uint8_t nbReadAttempts = 0;
 8000658:	2300      	movs	r3, #0
 800065a:	73fb      	strb	r3, [r7, #15]
  uint8_t bFoundDevice = 0; /* Device not found by default */
 800065c:	2300      	movs	r3, #0
 800065e:	73bb      	strb	r3, [r7, #14]

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 8000660:	f000 fa5e 	bl	8000b20 <ft5336_I2C_InitializeIfRequired>

  /* At maximum 4 attempts to read ID : exit at first finding of the searched device ID */
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8000664:	2300      	movs	r3, #0
 8000666:	73fb      	strb	r3, [r7, #15]
 8000668:	e010      	b.n	800068c <ft5336_ReadID+0x42>
  {
    /* Read register FT5336_CHIP_ID_REG as DeviceID detection */
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 800066a:	88fb      	ldrh	r3, [r7, #6]
 800066c:	b2db      	uxtb	r3, r3
 800066e:	21a8      	movs	r1, #168	; 0xa8
 8000670:	4618      	mov	r0, r3
 8000672:	f003 fb5d 	bl	8003d30 <TS_IO_Read>
 8000676:	4603      	mov	r3, r0
 8000678:	737b      	strb	r3, [r7, #13]

    /* Found the searched device ID ? */
    if(ucReadId == FT5336_ID_VALUE)
 800067a:	7b7b      	ldrb	r3, [r7, #13]
 800067c:	b2db      	uxtb	r3, r3
 800067e:	2b51      	cmp	r3, #81	; 0x51
 8000680:	d101      	bne.n	8000686 <ft5336_ReadID+0x3c>
    {
      /* Set device as found */
      bFoundDevice = 1;
 8000682:	2301      	movs	r3, #1
 8000684:	73bb      	strb	r3, [r7, #14]
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8000686:	7bfb      	ldrb	r3, [r7, #15]
 8000688:	3301      	adds	r3, #1
 800068a:	73fb      	strb	r3, [r7, #15]
 800068c:	7bfb      	ldrb	r3, [r7, #15]
 800068e:	2b02      	cmp	r3, #2
 8000690:	d802      	bhi.n	8000698 <ft5336_ReadID+0x4e>
 8000692:	7bbb      	ldrb	r3, [r7, #14]
 8000694:	2b00      	cmp	r3, #0
 8000696:	d0e8      	beq.n	800066a <ft5336_ReadID+0x20>
    }
  }

  /* Return the device ID value */
  return (ucReadId);
 8000698:	7b7b      	ldrb	r3, [r7, #13]
 800069a:	b2db      	uxtb	r3, r3
 800069c:	b29b      	uxth	r3, r3
}
 800069e:	4618      	mov	r0, r3
 80006a0:	3710      	adds	r7, #16
 80006a2:	46bd      	mov	sp, r7
 80006a4:	bd80      	pop	{r7, pc}

080006a6 <ft5336_TS_Start>:
  * @brief  Configures the touch Screen IC device to start detecting touches
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address).
  * @retval None.
  */
void ft5336_TS_Start(uint16_t DeviceAddr)
{
 80006a6:	b580      	push	{r7, lr}
 80006a8:	b082      	sub	sp, #8
 80006aa:	af00      	add	r7, sp, #0
 80006ac:	4603      	mov	r3, r0
 80006ae:	80fb      	strh	r3, [r7, #6]
  /* Minimum static configuration of FT5336 */
  FT5336_ASSERT(ft5336_TS_Configure(DeviceAddr));
 80006b0:	88fb      	ldrh	r3, [r7, #6]
 80006b2:	4618      	mov	r0, r3
 80006b4:	f000 fa44 	bl	8000b40 <ft5336_TS_Configure>

  /* By default set FT5336 IC in Polling mode : no INT generation on FT5336 for new touch available */
  /* Note TS_INT is active low                                                                      */
  ft5336_TS_DisableIT(DeviceAddr);
 80006b8:	88fb      	ldrh	r3, [r7, #6]
 80006ba:	4618      	mov	r0, r3
 80006bc:	f000 f932 	bl	8000924 <ft5336_TS_DisableIT>
}
 80006c0:	bf00      	nop
 80006c2:	3708      	adds	r7, #8
 80006c4:	46bd      	mov	sp, r7
 80006c6:	bd80      	pop	{r7, pc}

080006c8 <ft5336_TS_DetectTouch>:
  *         variables).
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval : Number of active touches detected (can be 0, 1 or 2).
  */
uint8_t ft5336_TS_DetectTouch(uint16_t DeviceAddr)
{
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b084      	sub	sp, #16
 80006cc:	af00      	add	r7, sp, #0
 80006ce:	4603      	mov	r3, r0
 80006d0:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t nbTouch = 0;
 80006d2:	2300      	movs	r3, #0
 80006d4:	73fb      	strb	r3, [r7, #15]

  /* Read register FT5336_TD_STAT_REG to check number of touches detection */
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 80006d6:	88fb      	ldrh	r3, [r7, #6]
 80006d8:	b2db      	uxtb	r3, r3
 80006da:	2102      	movs	r1, #2
 80006dc:	4618      	mov	r0, r3
 80006de:	f003 fb27 	bl	8003d30 <TS_IO_Read>
 80006e2:	4603      	mov	r3, r0
 80006e4:	73fb      	strb	r3, [r7, #15]
  nbTouch &= FT5336_TD_STAT_MASK;
 80006e6:	7bfb      	ldrb	r3, [r7, #15]
 80006e8:	b2db      	uxtb	r3, r3
 80006ea:	f003 030f 	and.w	r3, r3, #15
 80006ee:	b2db      	uxtb	r3, r3
 80006f0:	73fb      	strb	r3, [r7, #15]

  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 80006f2:	7bfb      	ldrb	r3, [r7, #15]
 80006f4:	b2db      	uxtb	r3, r3
 80006f6:	2b05      	cmp	r3, #5
 80006f8:	d901      	bls.n	80006fe <ft5336_TS_DetectTouch+0x36>
  {
    /* If invalid number of touch detected, set it to zero */
    nbTouch = 0;
 80006fa:	2300      	movs	r3, #0
 80006fc:	73fb      	strb	r3, [r7, #15]
  }

  /* Update ft5336 driver internal global : current number of active touches */
  ft5336_handle.currActiveTouchNb = nbTouch;
 80006fe:	7bfb      	ldrb	r3, [r7, #15]
 8000700:	b2da      	uxtb	r2, r3
 8000702:	4b05      	ldr	r3, [pc, #20]	; (8000718 <ft5336_TS_DetectTouch+0x50>)
 8000704:	705a      	strb	r2, [r3, #1]

  /* Reset current active touch index on which to work on */
  ft5336_handle.currActiveTouchIdx = 0;
 8000706:	4b04      	ldr	r3, [pc, #16]	; (8000718 <ft5336_TS_DetectTouch+0x50>)
 8000708:	2200      	movs	r2, #0
 800070a:	709a      	strb	r2, [r3, #2]

  return(nbTouch);
 800070c:	7bfb      	ldrb	r3, [r7, #15]
 800070e:	b2db      	uxtb	r3, r3
}
 8000710:	4618      	mov	r0, r3
 8000712:	3710      	adds	r7, #16
 8000714:	46bd      	mov	sp, r7
 8000716:	bd80      	pop	{r7, pc}
 8000718:	2000169c 	.word	0x2000169c

0800071c <ft5336_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value
  * @retval None.
  */
void ft5336_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800071c:	b580      	push	{r7, lr}
 800071e:	b086      	sub	sp, #24
 8000720:	af00      	add	r7, sp, #0
 8000722:	4603      	mov	r3, r0
 8000724:	60b9      	str	r1, [r7, #8]
 8000726:	607a      	str	r2, [r7, #4]
 8000728:	81fb      	strh	r3, [r7, #14]
  volatile uint8_t ucReadData = 0;
 800072a:	2300      	movs	r3, #0
 800072c:	74fb      	strb	r3, [r7, #19]
  static uint16_t coord;
  uint8_t regAddressXLow = 0;
 800072e:	2300      	movs	r3, #0
 8000730:	75fb      	strb	r3, [r7, #23]
  uint8_t regAddressXHigh = 0;
 8000732:	2300      	movs	r3, #0
 8000734:	75bb      	strb	r3, [r7, #22]
  uint8_t regAddressYLow = 0;
 8000736:	2300      	movs	r3, #0
 8000738:	757b      	strb	r3, [r7, #21]
  uint8_t regAddressYHigh = 0;
 800073a:	2300      	movs	r3, #0
 800073c:	753b      	strb	r3, [r7, #20]

  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 800073e:	4b6d      	ldr	r3, [pc, #436]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 8000740:	789a      	ldrb	r2, [r3, #2]
 8000742:	4b6c      	ldr	r3, [pc, #432]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 8000744:	785b      	ldrb	r3, [r3, #1]
 8000746:	429a      	cmp	r2, r3
 8000748:	f080 80cf 	bcs.w	80008ea <ft5336_TS_GetXY+0x1ce>
  {
    switch(ft5336_handle.currActiveTouchIdx)
 800074c:	4b69      	ldr	r3, [pc, #420]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 800074e:	789b      	ldrb	r3, [r3, #2]
 8000750:	2b09      	cmp	r3, #9
 8000752:	d871      	bhi.n	8000838 <ft5336_TS_GetXY+0x11c>
 8000754:	a201      	add	r2, pc, #4	; (adr r2, 800075c <ft5336_TS_GetXY+0x40>)
 8000756:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800075a:	bf00      	nop
 800075c:	08000785 	.word	0x08000785
 8000760:	08000797 	.word	0x08000797
 8000764:	080007a9 	.word	0x080007a9
 8000768:	080007bb 	.word	0x080007bb
 800076c:	080007cd 	.word	0x080007cd
 8000770:	080007df 	.word	0x080007df
 8000774:	080007f1 	.word	0x080007f1
 8000778:	08000803 	.word	0x08000803
 800077c:	08000815 	.word	0x08000815
 8000780:	08000827 	.word	0x08000827
    {
    case 0 :
      regAddressXLow  = FT5336_P1_XL_REG;
 8000784:	2304      	movs	r3, #4
 8000786:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P1_XH_REG;
 8000788:	2303      	movs	r3, #3
 800078a:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P1_YL_REG;
 800078c:	2306      	movs	r3, #6
 800078e:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P1_YH_REG;
 8000790:	2305      	movs	r3, #5
 8000792:	753b      	strb	r3, [r7, #20]
      break;
 8000794:	e051      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 1 :
      regAddressXLow  = FT5336_P2_XL_REG;
 8000796:	230a      	movs	r3, #10
 8000798:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P2_XH_REG;
 800079a:	2309      	movs	r3, #9
 800079c:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P2_YL_REG;
 800079e:	230c      	movs	r3, #12
 80007a0:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P2_YH_REG;
 80007a2:	230b      	movs	r3, #11
 80007a4:	753b      	strb	r3, [r7, #20]
      break;
 80007a6:	e048      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 2 :
      regAddressXLow  = FT5336_P3_XL_REG;
 80007a8:	2310      	movs	r3, #16
 80007aa:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P3_XH_REG;
 80007ac:	230f      	movs	r3, #15
 80007ae:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P3_YL_REG;
 80007b0:	2312      	movs	r3, #18
 80007b2:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P3_YH_REG;
 80007b4:	2311      	movs	r3, #17
 80007b6:	753b      	strb	r3, [r7, #20]
      break;
 80007b8:	e03f      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 3 :
      regAddressXLow  = FT5336_P4_XL_REG;
 80007ba:	2316      	movs	r3, #22
 80007bc:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P4_XH_REG;
 80007be:	2315      	movs	r3, #21
 80007c0:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P4_YL_REG;
 80007c2:	2318      	movs	r3, #24
 80007c4:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P4_YH_REG;
 80007c6:	2317      	movs	r3, #23
 80007c8:	753b      	strb	r3, [r7, #20]
      break;
 80007ca:	e036      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 4 :
      regAddressXLow  = FT5336_P5_XL_REG;
 80007cc:	231c      	movs	r3, #28
 80007ce:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P5_XH_REG;
 80007d0:	231b      	movs	r3, #27
 80007d2:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P5_YL_REG;
 80007d4:	231e      	movs	r3, #30
 80007d6:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P5_YH_REG;
 80007d8:	231d      	movs	r3, #29
 80007da:	753b      	strb	r3, [r7, #20]
      break;
 80007dc:	e02d      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 5 :
      regAddressXLow  = FT5336_P6_XL_REG;
 80007de:	2322      	movs	r3, #34	; 0x22
 80007e0:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P6_XH_REG;
 80007e2:	2321      	movs	r3, #33	; 0x21
 80007e4:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P6_YL_REG;
 80007e6:	2324      	movs	r3, #36	; 0x24
 80007e8:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P6_YH_REG;
 80007ea:	2323      	movs	r3, #35	; 0x23
 80007ec:	753b      	strb	r3, [r7, #20]
      break;
 80007ee:	e024      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 6 :
      regAddressXLow  = FT5336_P7_XL_REG;
 80007f0:	2328      	movs	r3, #40	; 0x28
 80007f2:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P7_XH_REG;
 80007f4:	2327      	movs	r3, #39	; 0x27
 80007f6:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P7_YL_REG;
 80007f8:	232a      	movs	r3, #42	; 0x2a
 80007fa:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P7_YH_REG;
 80007fc:	2329      	movs	r3, #41	; 0x29
 80007fe:	753b      	strb	r3, [r7, #20]
      break;
 8000800:	e01b      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 7 :
      regAddressXLow  = FT5336_P8_XL_REG;
 8000802:	232e      	movs	r3, #46	; 0x2e
 8000804:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P8_XH_REG;
 8000806:	232d      	movs	r3, #45	; 0x2d
 8000808:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P8_YL_REG;
 800080a:	2330      	movs	r3, #48	; 0x30
 800080c:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P8_YH_REG;
 800080e:	232f      	movs	r3, #47	; 0x2f
 8000810:	753b      	strb	r3, [r7, #20]
      break;
 8000812:	e012      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 8 :
      regAddressXLow  = FT5336_P9_XL_REG;
 8000814:	2334      	movs	r3, #52	; 0x34
 8000816:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P9_XH_REG;
 8000818:	2333      	movs	r3, #51	; 0x33
 800081a:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P9_YL_REG;
 800081c:	2336      	movs	r3, #54	; 0x36
 800081e:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P9_YH_REG;
 8000820:	2335      	movs	r3, #53	; 0x35
 8000822:	753b      	strb	r3, [r7, #20]
      break;
 8000824:	e009      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    case 9 :
      regAddressXLow  = FT5336_P10_XL_REG;
 8000826:	233a      	movs	r3, #58	; 0x3a
 8000828:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P10_XH_REG;
 800082a:	2339      	movs	r3, #57	; 0x39
 800082c:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P10_YL_REG;
 800082e:	233c      	movs	r3, #60	; 0x3c
 8000830:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P10_YH_REG;
 8000832:	233b      	movs	r3, #59	; 0x3b
 8000834:	753b      	strb	r3, [r7, #20]
      break;
 8000836:	e000      	b.n	800083a <ft5336_TS_GetXY+0x11e>

    default :
      break;
 8000838:	bf00      	nop

    } /* end switch(ft5336_handle.currActiveTouchIdx) */

    /* Read low part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 800083a:	89fb      	ldrh	r3, [r7, #14]
 800083c:	b2db      	uxtb	r3, r3
 800083e:	7dfa      	ldrb	r2, [r7, #23]
 8000840:	4611      	mov	r1, r2
 8000842:	4618      	mov	r0, r3
 8000844:	f003 fa74 	bl	8003d30 <TS_IO_Read>
 8000848:	4603      	mov	r3, r0
 800084a:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 800084c:	7cfb      	ldrb	r3, [r7, #19]
 800084e:	b2db      	uxtb	r3, r3
 8000850:	b29a      	uxth	r2, r3
 8000852:	4b29      	ldr	r3, [pc, #164]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 8000854:	801a      	strh	r2, [r3, #0]

    /* Read high part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8000856:	89fb      	ldrh	r3, [r7, #14]
 8000858:	b2db      	uxtb	r3, r3
 800085a:	7dba      	ldrb	r2, [r7, #22]
 800085c:	4611      	mov	r1, r2
 800085e:	4618      	mov	r0, r3
 8000860:	f003 fa66 	bl	8003d30 <TS_IO_Read>
 8000864:	4603      	mov	r3, r0
 8000866:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8000868:	7cfb      	ldrb	r3, [r7, #19]
 800086a:	b2db      	uxtb	r3, r3
 800086c:	021b      	lsls	r3, r3, #8
 800086e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8000872:	b21a      	sxth	r2, r3
 8000874:	4b20      	ldr	r3, [pc, #128]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 8000876:	881b      	ldrh	r3, [r3, #0]
 8000878:	b21b      	sxth	r3, r3
 800087a:	4313      	orrs	r3, r2
 800087c:	b21b      	sxth	r3, r3
 800087e:	b29a      	uxth	r2, r3
 8000880:	4b1d      	ldr	r3, [pc, #116]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 8000882:	801a      	strh	r2, [r3, #0]

    /* Send back ready X position to caller */
    *X = coord;
 8000884:	4b1c      	ldr	r3, [pc, #112]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 8000886:	881a      	ldrh	r2, [r3, #0]
 8000888:	68bb      	ldr	r3, [r7, #8]
 800088a:	801a      	strh	r2, [r3, #0]

    /* Read low part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 800088c:	89fb      	ldrh	r3, [r7, #14]
 800088e:	b2db      	uxtb	r3, r3
 8000890:	7d7a      	ldrb	r2, [r7, #21]
 8000892:	4611      	mov	r1, r2
 8000894:	4618      	mov	r0, r3
 8000896:	f003 fa4b 	bl	8003d30 <TS_IO_Read>
 800089a:	4603      	mov	r3, r0
 800089c:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 800089e:	7cfb      	ldrb	r3, [r7, #19]
 80008a0:	b2db      	uxtb	r3, r3
 80008a2:	b29a      	uxth	r2, r3
 80008a4:	4b14      	ldr	r3, [pc, #80]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 80008a6:	801a      	strh	r2, [r3, #0]

    /* Read high part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 80008a8:	89fb      	ldrh	r3, [r7, #14]
 80008aa:	b2db      	uxtb	r3, r3
 80008ac:	7d3a      	ldrb	r2, [r7, #20]
 80008ae:	4611      	mov	r1, r2
 80008b0:	4618      	mov	r0, r3
 80008b2:	f003 fa3d 	bl	8003d30 <TS_IO_Read>
 80008b6:	4603      	mov	r3, r0
 80008b8:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 80008ba:	7cfb      	ldrb	r3, [r7, #19]
 80008bc:	b2db      	uxtb	r3, r3
 80008be:	021b      	lsls	r3, r3, #8
 80008c0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80008c4:	b21a      	sxth	r2, r3
 80008c6:	4b0c      	ldr	r3, [pc, #48]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 80008c8:	881b      	ldrh	r3, [r3, #0]
 80008ca:	b21b      	sxth	r3, r3
 80008cc:	4313      	orrs	r3, r2
 80008ce:	b21b      	sxth	r3, r3
 80008d0:	b29a      	uxth	r2, r3
 80008d2:	4b09      	ldr	r3, [pc, #36]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 80008d4:	801a      	strh	r2, [r3, #0]

    /* Send back ready Y position to caller */
    *Y = coord;
 80008d6:	4b08      	ldr	r3, [pc, #32]	; (80008f8 <ft5336_TS_GetXY+0x1dc>)
 80008d8:	881a      	ldrh	r2, [r3, #0]
 80008da:	687b      	ldr	r3, [r7, #4]
 80008dc:	801a      	strh	r2, [r3, #0]

    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 80008de:	4b05      	ldr	r3, [pc, #20]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 80008e0:	789b      	ldrb	r3, [r3, #2]
 80008e2:	3301      	adds	r3, #1
 80008e4:	b2da      	uxtb	r2, r3
 80008e6:	4b03      	ldr	r3, [pc, #12]	; (80008f4 <ft5336_TS_GetXY+0x1d8>)
 80008e8:	709a      	strb	r2, [r3, #2]

  } /* of if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb) */
}
 80008ea:	bf00      	nop
 80008ec:	3718      	adds	r7, #24
 80008ee:	46bd      	mov	sp, r7
 80008f0:	bd80      	pop	{r7, pc}
 80008f2:	bf00      	nop
 80008f4:	2000169c 	.word	0x2000169c
 80008f8:	200016a0 	.word	0x200016a0

080008fc <ft5336_TS_EnableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_EnableIT(uint16_t DeviceAddr)
{
 80008fc:	b580      	push	{r7, lr}
 80008fe:	b084      	sub	sp, #16
 8000900:	af00      	add	r7, sp, #0
 8000902:	4603      	mov	r3, r0
 8000904:	80fb      	strh	r3, [r7, #6]
   uint8_t regValue = 0;
 8000906:	2300      	movs	r3, #0
 8000908:	73fb      	strb	r3, [r7, #15]
   regValue = (FT5336_G_MODE_INTERRUPT_TRIGGER & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 800090a:	2301      	movs	r3, #1
 800090c:	73fb      	strb	r3, [r7, #15]

   /* Set interrupt trigger mode in FT5336_GMODE_REG */
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 800090e:	88fb      	ldrh	r3, [r7, #6]
 8000910:	b2db      	uxtb	r3, r3
 8000912:	7bfa      	ldrb	r2, [r7, #15]
 8000914:	21a4      	movs	r1, #164	; 0xa4
 8000916:	4618      	mov	r0, r3
 8000918:	f003 f9f0 	bl	8003cfc <TS_IO_Write>
}
 800091c:	bf00      	nop
 800091e:	3710      	adds	r7, #16
 8000920:	46bd      	mov	sp, r7
 8000922:	bd80      	pop	{r7, pc}

08000924 <ft5336_TS_DisableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_DisableIT(uint16_t DeviceAddr)
{
 8000924:	b580      	push	{r7, lr}
 8000926:	b084      	sub	sp, #16
 8000928:	af00      	add	r7, sp, #0
 800092a:	4603      	mov	r3, r0
 800092c:	80fb      	strh	r3, [r7, #6]
  uint8_t regValue = 0;
 800092e:	2300      	movs	r3, #0
 8000930:	73fb      	strb	r3, [r7, #15]
  regValue = (FT5336_G_MODE_INTERRUPT_POLLING & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 8000932:	2300      	movs	r3, #0
 8000934:	73fb      	strb	r3, [r7, #15]

  /* Set interrupt polling mode in FT5336_GMODE_REG */
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8000936:	88fb      	ldrh	r3, [r7, #6]
 8000938:	b2db      	uxtb	r3, r3
 800093a:	7bfa      	ldrb	r2, [r7, #15]
 800093c:	21a4      	movs	r1, #164	; 0xa4
 800093e:	4618      	mov	r0, r3
 8000940:	f003 f9dc 	bl	8003cfc <TS_IO_Write>
}
 8000944:	bf00      	nop
 8000946:	3710      	adds	r7, #16
 8000948:	46bd      	mov	sp, r7
 800094a:	bd80      	pop	{r7, pc}

0800094c <ft5336_TS_ITStatus>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval TS interrupts status : always return 0 here
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
 800094c:	b480      	push	{r7}
 800094e:	b083      	sub	sp, #12
 8000950:	af00      	add	r7, sp, #0
 8000952:	4603      	mov	r3, r0
 8000954:	80fb      	strh	r3, [r7, #6]
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
 8000956:	2300      	movs	r3, #0
}
 8000958:	4618      	mov	r0, r3
 800095a:	370c      	adds	r7, #12
 800095c:	46bd      	mov	sp, r7
 800095e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000962:	4770      	bx	lr

08000964 <ft5336_TS_ClearIT>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
{
 8000964:	b480      	push	{r7}
 8000966:	b083      	sub	sp, #12
 8000968:	af00      	add	r7, sp, #0
 800096a:	4603      	mov	r3, r0
 800096c:	80fb      	strh	r3, [r7, #6]
  /* Nothing to be done here for FT5336 */
}
 800096e:	bf00      	nop
 8000970:	370c      	adds	r7, #12
 8000972:	46bd      	mov	sp, r7
 8000974:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000978:	4770      	bx	lr

0800097a <ft5336_TS_GetGestureID>:
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @param  pGestureId : Pointer to get last touch gesture Identification.
  * @retval None.
  */
void ft5336_TS_GetGestureID(uint16_t DeviceAddr, uint32_t * pGestureId)
{
 800097a:	b580      	push	{r7, lr}
 800097c:	b084      	sub	sp, #16
 800097e:	af00      	add	r7, sp, #0
 8000980:	4603      	mov	r3, r0
 8000982:	6039      	str	r1, [r7, #0]
 8000984:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t ucReadData = 0;
 8000986:	2300      	movs	r3, #0
 8000988:	73fb      	strb	r3, [r7, #15]

  ucReadData = TS_IO_Read(DeviceAddr, FT5336_GEST_ID_REG);
 800098a:	88fb      	ldrh	r3, [r7, #6]
 800098c:	b2db      	uxtb	r3, r3
 800098e:	2101      	movs	r1, #1
 8000990:	4618      	mov	r0, r3
 8000992:	f003 f9cd 	bl	8003d30 <TS_IO_Read>
 8000996:	4603      	mov	r3, r0
 8000998:	73fb      	strb	r3, [r7, #15]

  * pGestureId = ucReadData;
 800099a:	7bfb      	ldrb	r3, [r7, #15]
 800099c:	b2db      	uxtb	r3, r3
 800099e:	461a      	mov	r2, r3
 80009a0:	683b      	ldr	r3, [r7, #0]
 80009a2:	601a      	str	r2, [r3, #0]
}
 80009a4:	bf00      	nop
 80009a6:	3710      	adds	r7, #16
 80009a8:	46bd      	mov	sp, r7
 80009aa:	bd80      	pop	{r7, pc}

080009ac <ft5336_TS_GetTouchInfo>:
void ft5336_TS_GetTouchInfo(uint16_t   DeviceAddr,
                            uint32_t   touchIdx,
                            uint32_t * pWeight,
                            uint32_t * pArea,
                            uint32_t * pEvent)
{
 80009ac:	b580      	push	{r7, lr}
 80009ae:	b086      	sub	sp, #24
 80009b0:	af00      	add	r7, sp, #0
 80009b2:	60b9      	str	r1, [r7, #8]
 80009b4:	607a      	str	r2, [r7, #4]
 80009b6:	603b      	str	r3, [r7, #0]
 80009b8:	4603      	mov	r3, r0
 80009ba:	81fb      	strh	r3, [r7, #14]
  volatile uint8_t ucReadData = 0;
 80009bc:	2300      	movs	r3, #0
 80009be:	753b      	strb	r3, [r7, #20]
  uint8_t regAddressXHigh = 0;
 80009c0:	2300      	movs	r3, #0
 80009c2:	75fb      	strb	r3, [r7, #23]
  uint8_t regAddressPWeight = 0;
 80009c4:	2300      	movs	r3, #0
 80009c6:	75bb      	strb	r3, [r7, #22]
  uint8_t regAddressPMisc = 0;
 80009c8:	2300      	movs	r3, #0
 80009ca:	757b      	strb	r3, [r7, #21]

  if(touchIdx < ft5336_handle.currActiveTouchNb)
 80009cc:	4b4d      	ldr	r3, [pc, #308]	; (8000b04 <ft5336_TS_GetTouchInfo+0x158>)
 80009ce:	785b      	ldrb	r3, [r3, #1]
 80009d0:	461a      	mov	r2, r3
 80009d2:	68bb      	ldr	r3, [r7, #8]
 80009d4:	4293      	cmp	r3, r2
 80009d6:	f080 8090 	bcs.w	8000afa <ft5336_TS_GetTouchInfo+0x14e>
  {
    switch(touchIdx)
 80009da:	68bb      	ldr	r3, [r7, #8]
 80009dc:	2b09      	cmp	r3, #9
 80009de:	d85d      	bhi.n	8000a9c <ft5336_TS_GetTouchInfo+0xf0>
 80009e0:	a201      	add	r2, pc, #4	; (adr r2, 80009e8 <ft5336_TS_GetTouchInfo+0x3c>)
 80009e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80009e6:	bf00      	nop
 80009e8:	08000a11 	.word	0x08000a11
 80009ec:	08000a1f 	.word	0x08000a1f
 80009f0:	08000a2d 	.word	0x08000a2d
 80009f4:	08000a3b 	.word	0x08000a3b
 80009f8:	08000a49 	.word	0x08000a49
 80009fc:	08000a57 	.word	0x08000a57
 8000a00:	08000a65 	.word	0x08000a65
 8000a04:	08000a73 	.word	0x08000a73
 8000a08:	08000a81 	.word	0x08000a81
 8000a0c:	08000a8f 	.word	0x08000a8f
    {
    case 0 :
      regAddressXHigh   = FT5336_P1_XH_REG;
 8000a10:	2303      	movs	r3, #3
 8000a12:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P1_WEIGHT_REG;
 8000a14:	2307      	movs	r3, #7
 8000a16:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P1_MISC_REG;
 8000a18:	2308      	movs	r3, #8
 8000a1a:	757b      	strb	r3, [r7, #21]
      break;
 8000a1c:	e03f      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 1 :
      regAddressXHigh   = FT5336_P2_XH_REG;
 8000a1e:	2309      	movs	r3, #9
 8000a20:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P2_WEIGHT_REG;
 8000a22:	230d      	movs	r3, #13
 8000a24:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P2_MISC_REG;
 8000a26:	230e      	movs	r3, #14
 8000a28:	757b      	strb	r3, [r7, #21]
      break;
 8000a2a:	e038      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 2 :
      regAddressXHigh   = FT5336_P3_XH_REG;
 8000a2c:	230f      	movs	r3, #15
 8000a2e:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P3_WEIGHT_REG;
 8000a30:	2313      	movs	r3, #19
 8000a32:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P3_MISC_REG;
 8000a34:	2314      	movs	r3, #20
 8000a36:	757b      	strb	r3, [r7, #21]
      break;
 8000a38:	e031      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 3 :
      regAddressXHigh   = FT5336_P4_XH_REG;
 8000a3a:	2315      	movs	r3, #21
 8000a3c:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P4_WEIGHT_REG;
 8000a3e:	2319      	movs	r3, #25
 8000a40:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P4_MISC_REG;
 8000a42:	231a      	movs	r3, #26
 8000a44:	757b      	strb	r3, [r7, #21]
      break;
 8000a46:	e02a      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 4 :
      regAddressXHigh   = FT5336_P5_XH_REG;
 8000a48:	231b      	movs	r3, #27
 8000a4a:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P5_WEIGHT_REG;
 8000a4c:	231f      	movs	r3, #31
 8000a4e:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P5_MISC_REG;
 8000a50:	2320      	movs	r3, #32
 8000a52:	757b      	strb	r3, [r7, #21]
      break;
 8000a54:	e023      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 5 :
      regAddressXHigh   = FT5336_P6_XH_REG;
 8000a56:	2321      	movs	r3, #33	; 0x21
 8000a58:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P6_WEIGHT_REG;
 8000a5a:	2325      	movs	r3, #37	; 0x25
 8000a5c:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P6_MISC_REG;
 8000a5e:	2326      	movs	r3, #38	; 0x26
 8000a60:	757b      	strb	r3, [r7, #21]
      break;
 8000a62:	e01c      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 6 :
      regAddressXHigh   = FT5336_P7_XH_REG;
 8000a64:	2327      	movs	r3, #39	; 0x27
 8000a66:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P7_WEIGHT_REG;
 8000a68:	232b      	movs	r3, #43	; 0x2b
 8000a6a:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P7_MISC_REG;
 8000a6c:	232c      	movs	r3, #44	; 0x2c
 8000a6e:	757b      	strb	r3, [r7, #21]
      break;
 8000a70:	e015      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 7 :
      regAddressXHigh   = FT5336_P8_XH_REG;
 8000a72:	232d      	movs	r3, #45	; 0x2d
 8000a74:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P8_WEIGHT_REG;
 8000a76:	2331      	movs	r3, #49	; 0x31
 8000a78:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P8_MISC_REG;
 8000a7a:	2332      	movs	r3, #50	; 0x32
 8000a7c:	757b      	strb	r3, [r7, #21]
      break;
 8000a7e:	e00e      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 8 :
      regAddressXHigh   = FT5336_P9_XH_REG;
 8000a80:	2333      	movs	r3, #51	; 0x33
 8000a82:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P9_WEIGHT_REG;
 8000a84:	2337      	movs	r3, #55	; 0x37
 8000a86:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P9_MISC_REG;
 8000a88:	2338      	movs	r3, #56	; 0x38
 8000a8a:	757b      	strb	r3, [r7, #21]
      break;
 8000a8c:	e007      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    case 9 :
      regAddressXHigh   = FT5336_P10_XH_REG;
 8000a8e:	2339      	movs	r3, #57	; 0x39
 8000a90:	75fb      	strb	r3, [r7, #23]
      regAddressPWeight = FT5336_P10_WEIGHT_REG;
 8000a92:	233d      	movs	r3, #61	; 0x3d
 8000a94:	75bb      	strb	r3, [r7, #22]
      regAddressPMisc   = FT5336_P10_MISC_REG;
 8000a96:	233e      	movs	r3, #62	; 0x3e
 8000a98:	757b      	strb	r3, [r7, #21]
      break;
 8000a9a:	e000      	b.n	8000a9e <ft5336_TS_GetTouchInfo+0xf2>

    default :
      break;
 8000a9c:	bf00      	nop

    } /* end switch(touchIdx) */

    /* Read Event Id of touch index */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8000a9e:	89fb      	ldrh	r3, [r7, #14]
 8000aa0:	b2db      	uxtb	r3, r3
 8000aa2:	7dfa      	ldrb	r2, [r7, #23]
 8000aa4:	4611      	mov	r1, r2
 8000aa6:	4618      	mov	r0, r3
 8000aa8:	f003 f942 	bl	8003d30 <TS_IO_Read>
 8000aac:	4603      	mov	r3, r0
 8000aae:	753b      	strb	r3, [r7, #20]
    * pEvent = (ucReadData & FT5336_TOUCH_EVT_FLAG_MASK) >> FT5336_TOUCH_EVT_FLAG_SHIFT;
 8000ab0:	7d3b      	ldrb	r3, [r7, #20]
 8000ab2:	b2db      	uxtb	r3, r3
 8000ab4:	119b      	asrs	r3, r3, #6
 8000ab6:	f003 0203 	and.w	r2, r3, #3
 8000aba:	6a3b      	ldr	r3, [r7, #32]
 8000abc:	601a      	str	r2, [r3, #0]

    /* Read weight of touch index */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPWeight);
 8000abe:	89fb      	ldrh	r3, [r7, #14]
 8000ac0:	b2db      	uxtb	r3, r3
 8000ac2:	7dba      	ldrb	r2, [r7, #22]
 8000ac4:	4611      	mov	r1, r2
 8000ac6:	4618      	mov	r0, r3
 8000ac8:	f003 f932 	bl	8003d30 <TS_IO_Read>
 8000acc:	4603      	mov	r3, r0
 8000ace:	753b      	strb	r3, [r7, #20]
    * pWeight = (ucReadData & FT5336_TOUCH_WEIGHT_MASK) >> FT5336_TOUCH_WEIGHT_SHIFT;
 8000ad0:	7d3b      	ldrb	r3, [r7, #20]
 8000ad2:	b2db      	uxtb	r3, r3
 8000ad4:	461a      	mov	r2, r3
 8000ad6:	687b      	ldr	r3, [r7, #4]
 8000ad8:	601a      	str	r2, [r3, #0]

    /* Read area of touch index */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressPMisc);
 8000ada:	89fb      	ldrh	r3, [r7, #14]
 8000adc:	b2db      	uxtb	r3, r3
 8000ade:	7d7a      	ldrb	r2, [r7, #21]
 8000ae0:	4611      	mov	r1, r2
 8000ae2:	4618      	mov	r0, r3
 8000ae4:	f003 f924 	bl	8003d30 <TS_IO_Read>
 8000ae8:	4603      	mov	r3, r0
 8000aea:	753b      	strb	r3, [r7, #20]
    * pArea = (ucReadData & FT5336_TOUCH_AREA_MASK) >> FT5336_TOUCH_AREA_SHIFT;
 8000aec:	7d3b      	ldrb	r3, [r7, #20]
 8000aee:	b2db      	uxtb	r3, r3
 8000af0:	111b      	asrs	r3, r3, #4
 8000af2:	f003 0204 	and.w	r2, r3, #4
 8000af6:	683b      	ldr	r3, [r7, #0]
 8000af8:	601a      	str	r2, [r3, #0]

  } /* of if(touchIdx < ft5336_handle.currActiveTouchNb) */
}
 8000afa:	bf00      	nop
 8000afc:	3718      	adds	r7, #24
 8000afe:	46bd      	mov	sp, r7
 8000b00:	bd80      	pop	{r7, pc}
 8000b02:	bf00      	nop
 8000b04:	2000169c 	.word	0x2000169c

08000b08 <ft5336_Get_I2C_InitializedStatus>:
  * @brief  Return the status of I2C was initialized or not.
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
 8000b08:	b480      	push	{r7}
 8000b0a:	af00      	add	r7, sp, #0
  return(ft5336_handle.i2cInitialized);
 8000b0c:	4b03      	ldr	r3, [pc, #12]	; (8000b1c <ft5336_Get_I2C_InitializedStatus+0x14>)
 8000b0e:	781b      	ldrb	r3, [r3, #0]
}
 8000b10:	4618      	mov	r0, r3
 8000b12:	46bd      	mov	sp, r7
 8000b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b18:	4770      	bx	lr
 8000b1a:	bf00      	nop
 8000b1c:	2000169c 	.word	0x2000169c

08000b20 <ft5336_I2C_InitializeIfRequired>:
  * @brief  I2C initialize if needed.
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
 8000b20:	b580      	push	{r7, lr}
 8000b22:	af00      	add	r7, sp, #0
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8000b24:	f7ff fff0 	bl	8000b08 <ft5336_Get_I2C_InitializedStatus>
 8000b28:	4603      	mov	r3, r0
 8000b2a:	2b00      	cmp	r3, #0
 8000b2c:	d104      	bne.n	8000b38 <ft5336_I2C_InitializeIfRequired+0x18>
  {
    /* Initialize TS IO BUS layer (I2C) */
    TS_IO_Init();
 8000b2e:	f003 f8db 	bl	8003ce8 <TS_IO_Init>

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8000b32:	4b02      	ldr	r3, [pc, #8]	; (8000b3c <ft5336_I2C_InitializeIfRequired+0x1c>)
 8000b34:	2201      	movs	r2, #1
 8000b36:	701a      	strb	r2, [r3, #0]
  }
}
 8000b38:	bf00      	nop
 8000b3a:	bd80      	pop	{r7, pc}
 8000b3c:	2000169c 	.word	0x2000169c

08000b40 <ft5336_TS_Configure>:
  * @brief  Basic static configuration of TouchScreen
  * @param  DeviceAddr: FT5336 Device address for communication on I2C Bus.
  * @retval Status FT5336_STATUS_OK or FT5336_STATUS_NOT_OK.
  */
static uint32_t ft5336_TS_Configure(uint16_t DeviceAddr)
{
 8000b40:	b480      	push	{r7}
 8000b42:	b085      	sub	sp, #20
 8000b44:	af00      	add	r7, sp, #0
 8000b46:	4603      	mov	r3, r0
 8000b48:	80fb      	strh	r3, [r7, #6]
  uint32_t status = FT5336_STATUS_OK;
 8000b4a:	2300      	movs	r3, #0
 8000b4c:	60fb      	str	r3, [r7, #12]

  /* Nothing special to be done for FT5336 */

  return(status);
 8000b4e:	68fb      	ldr	r3, [r7, #12]
}
 8000b50:	4618      	mov	r0, r3
 8000b52:	3714      	adds	r7, #20
 8000b54:	46bd      	mov	sp, r7
 8000b56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b5a:	4770      	bx	lr

08000b5c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000b5c:	b5b0      	push	{r4, r5, r7, lr}
 8000b5e:	b0b6      	sub	sp, #216	; 0xd8
 8000b60:	af02      	add	r7, sp, #8
  /* USER CODE BEGIN 1 */
	char text[50]={};
 8000b62:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000b66:	2232      	movs	r2, #50	; 0x32
 8000b68:	2100      	movs	r1, #0
 8000b6a:	4618      	mov	r0, r3
 8000b6c:	f00e fc7d 	bl	800f46a <memset>
	static TS_StateTypeDef  TS_State;
	uint32_t potl,potr,joystick_h, joystick_v;
	ADC_ChannelConfTypeDef sConfig = {0};
 8000b70:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000b74:	2200      	movs	r2, #0
 8000b76:	601a      	str	r2, [r3, #0]
 8000b78:	605a      	str	r2, [r3, #4]
 8000b7a:	609a      	str	r2, [r3, #8]
 8000b7c:	60da      	str	r2, [r3, #12]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 8000b7e:	2301      	movs	r3, #1
 8000b80:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000b84:	2300      	movs	r3, #0
 8000b86:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000b8a:	f005 fbe6 	bl	800635a <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000b8e:	f000 f999 	bl	8000ec4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000b92:	f001 f833 	bl	8001bfc <MX_GPIO_Init>
  MX_ADC3_Init();
 8000b96:	f000 fa97 	bl	80010c8 <MX_ADC3_Init>
  MX_I2C1_Init();
 8000b9a:	f000 fb43 	bl	8001224 <MX_I2C1_Init>
  MX_I2C3_Init();
 8000b9e:	f000 fb81 	bl	80012a4 <MX_I2C3_Init>
  MX_LTDC_Init();
 8000ba2:	f000 fbbf 	bl	8001324 <MX_LTDC_Init>
  MX_RTC_Init();
 8000ba6:	f000 fc3f 	bl	8001428 <MX_RTC_Init>
  MX_SPI2_Init();
 8000baa:	f000 fce3 	bl	8001574 <MX_SPI2_Init>
  MX_TIM1_Init();
 8000bae:	f000 fd1f 	bl	80015f0 <MX_TIM1_Init>
  MX_TIM2_Init();
 8000bb2:	f000 fd71 	bl	8001698 <MX_TIM2_Init>
  MX_TIM3_Init();
 8000bb6:	f000 fdbd 	bl	8001734 <MX_TIM3_Init>
  MX_TIM5_Init();
 8000bba:	f000 fe49 	bl	8001850 <MX_TIM5_Init>
  MX_TIM8_Init();
 8000bbe:	f000 fe95 	bl	80018ec <MX_TIM8_Init>
  MX_USART1_UART_Init();
 8000bc2:	f000 ff6d 	bl	8001aa0 <MX_USART1_UART_Init>
  MX_USART6_UART_Init();
 8000bc6:	f000 ff9b 	bl	8001b00 <MX_USART6_UART_Init>
  MX_ADC1_Init();
 8000bca:	f000 fa2b 	bl	8001024 <MX_ADC1_Init>
  MX_DAC_Init();
 8000bce:	f000 facd 	bl	800116c <MX_DAC_Init>
  MX_UART7_Init();
 8000bd2:	f000 ff35 	bl	8001a40 <MX_UART7_Init>
  MX_FMC_Init();
 8000bd6:	f000 ffc3 	bl	8001b60 <MX_FMC_Init>
  MX_DMA2D_Init();
 8000bda:	f000 faf1 	bl	80011c0 <MX_DMA2D_Init>
  /* USER CODE BEGIN 2 */
  BSP_LCD_Init();
 8000bde:	f003 f8d1 	bl	8003d84 <BSP_LCD_Init>
  BSP_LCD_LayerDefaultInit(0, LCD_FB_START_ADDRESS);
 8000be2:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8000be6:	2000      	movs	r0, #0
 8000be8:	f003 f964 	bl	8003eb4 <BSP_LCD_LayerDefaultInit>
  BSP_LCD_LayerDefaultInit(1, LCD_FB_START_ADDRESS+ BSP_LCD_GetXSize()*BSP_LCD_GetYSize()*4);
 8000bec:	f003 f93a 	bl	8003e64 <BSP_LCD_GetXSize>
 8000bf0:	4604      	mov	r4, r0
 8000bf2:	f003 f94b 	bl	8003e8c <BSP_LCD_GetYSize>
 8000bf6:	4603      	mov	r3, r0
 8000bf8:	fb03 f304 	mul.w	r3, r3, r4
 8000bfc:	f103 5340 	add.w	r3, r3, #805306368	; 0x30000000
 8000c00:	009b      	lsls	r3, r3, #2
 8000c02:	4619      	mov	r1, r3
 8000c04:	2001      	movs	r0, #1
 8000c06:	f003 f955 	bl	8003eb4 <BSP_LCD_LayerDefaultInit>
  BSP_LCD_DisplayOn();
 8000c0a:	f003 ff25 	bl	8004a58 <BSP_LCD_DisplayOn>
  BSP_LCD_SetFont(&Font12);
 8000c0e:	489a      	ldr	r0, [pc, #616]	; (8000e78 <main+0x31c>)
 8000c10:	f003 f9f2 	bl	8003ff8 <BSP_LCD_SetFont>
  BSP_LCD_SetBackColor(LCD_COLOR_WHITE);
 8000c14:	f04f 30ff 	mov.w	r0, #4294967295
 8000c18:	f003 f9d4 	bl	8003fc4 <BSP_LCD_SetBackColor>
  BSP_LCD_SelectLayer(1);
 8000c1c:	2001      	movs	r0, #1
 8000c1e:	f003 f9a9 	bl	8003f74 <BSP_LCD_SelectLayer>
  BSP_LCD_Clear(LCD_COLOR_TRANSPARENT);
 8000c22:	2000      	movs	r0, #0
 8000c24:	f003 fabe 	bl	80041a4 <BSP_LCD_Clear>
  BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8000c28:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8000c2c:	f003 f9b2 	bl	8003f94 <BSP_LCD_SetTextColor>
  BSP_LCD_FillRect(0, 245, 480, 5);
 8000c30:	2305      	movs	r3, #5
 8000c32:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8000c36:	21f5      	movs	r1, #245	; 0xf5
 8000c38:	2000      	movs	r0, #0
 8000c3a:	f003 fdf3 	bl	8004824 <BSP_LCD_FillRect>
  BSP_LCD_FillRect(480-5-taille_menu, 0, 5, 245);
 8000c3e:	23f5      	movs	r3, #245	; 0xf5
 8000c40:	2205      	movs	r2, #5
 8000c42:	2100      	movs	r1, #0
 8000c44:	f240 10a9 	movw	r0, #425	; 0x1a9
 8000c48:	f003 fdec 	bl	8004824 <BSP_LCD_FillRect>
  BSP_LCD_SelectLayer(0);
 8000c4c:	2000      	movs	r0, #0
 8000c4e:	f003 f991 	bl	8003f74 <BSP_LCD_SelectLayer>
  BSP_LCD_Clear(LCD_COLOR_WHITE);
 8000c52:	f04f 30ff 	mov.w	r0, #4294967295
 8000c56:	f003 faa5 	bl	80041a4 <BSP_LCD_Clear>
  BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8000c5a:	4888      	ldr	r0, [pc, #544]	; (8000e7c <main+0x320>)
 8000c5c:	f003 f99a 	bl	8003f94 <BSP_LCD_SetTextColor>

  BSP_TS_Init(BSP_LCD_GetXSize(), BSP_LCD_GetYSize());
 8000c60:	f003 f900 	bl	8003e64 <BSP_LCD_GetXSize>
 8000c64:	4603      	mov	r3, r0
 8000c66:	b29c      	uxth	r4, r3
 8000c68:	f003 f910 	bl	8003e8c <BSP_LCD_GetYSize>
 8000c6c:	4603      	mov	r3, r0
 8000c6e:	b29b      	uxth	r3, r3
 8000c70:	4619      	mov	r1, r3
 8000c72:	4620      	mov	r0, r4
 8000c74:	f004 fabe 	bl	80051f4 <BSP_TS_Init>
  /* USER CODE END 2 */

  /* Create the mutex(es) */
  /* definition and creation of myMutexLCD */
  osMutexDef(myMutexLCD);
 8000c78:	2300      	movs	r3, #0
 8000c7a:	677b      	str	r3, [r7, #116]	; 0x74
 8000c7c:	2300      	movs	r3, #0
 8000c7e:	67bb      	str	r3, [r7, #120]	; 0x78
  myMutexLCDHandle = osMutexCreate(osMutex(myMutexLCD));
 8000c80:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8000c84:	4618      	mov	r0, r3
 8000c86:	f00c f9a6 	bl	800cfd6 <osMutexCreate>
 8000c8a:	4602      	mov	r2, r0
 8000c8c:	4b7c      	ldr	r3, [pc, #496]	; (8000e80 <main+0x324>)
 8000c8e:	601a      	str	r2, [r3, #0]
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* definition and creation of defaultTask */
  osThreadDef(defaultTask, StartDefaultTask, osPriorityIdle, 0, 128);
 8000c90:	4b7c      	ldr	r3, [pc, #496]	; (8000e84 <main+0x328>)
 8000c92:	f107 0458 	add.w	r4, r7, #88	; 0x58
 8000c96:	461d      	mov	r5, r3
 8000c98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000c9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000c9c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000ca0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 8000ca4:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000ca8:	2100      	movs	r1, #0
 8000caa:	4618      	mov	r0, r3
 8000cac:	f00c f933 	bl	800cf16 <osThreadCreate>
 8000cb0:	4602      	mov	r2, r0
 8000cb2:	4b75      	ldr	r3, [pc, #468]	; (8000e88 <main+0x32c>)
 8000cb4:	601a      	str	r2, [r3, #0]

  /* definition and creation of Mode */
  osThreadDef(Mode, StartMode, osPriorityAboveNormal, 0, 4096);
 8000cb6:	4b75      	ldr	r3, [pc, #468]	; (8000e8c <main+0x330>)
 8000cb8:	f107 043c 	add.w	r4, r7, #60	; 0x3c
 8000cbc:	461d      	mov	r5, r3
 8000cbe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000cc0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000cc2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000cc6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  ModeHandle = osThreadCreate(osThread(Mode), NULL);
 8000cca:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000cce:	2100      	movs	r1, #0
 8000cd0:	4618      	mov	r0, r3
 8000cd2:	f00c f920 	bl	800cf16 <osThreadCreate>
 8000cd6:	4602      	mov	r2, r0
 8000cd8:	4b6d      	ldr	r3, [pc, #436]	; (8000e90 <main+0x334>)
 8000cda:	601a      	str	r2, [r3, #0]

  /* definition and creation of Peindre */
  osThreadDef(Peindre, StartPeindre, osPriorityLow, 0, 1024);
 8000cdc:	4b6d      	ldr	r3, [pc, #436]	; (8000e94 <main+0x338>)
 8000cde:	f107 0420 	add.w	r4, r7, #32
 8000ce2:	461d      	mov	r5, r3
 8000ce4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000ce6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000ce8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000cec:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  PeindreHandle = osThreadCreate(osThread(Peindre), NULL);
 8000cf0:	f107 0320 	add.w	r3, r7, #32
 8000cf4:	2100      	movs	r1, #0
 8000cf6:	4618      	mov	r0, r3
 8000cf8:	f00c f90d 	bl	800cf16 <osThreadCreate>
 8000cfc:	4602      	mov	r2, r0
 8000cfe:	4b66      	ldr	r3, [pc, #408]	; (8000e98 <main+0x33c>)
 8000d00:	601a      	str	r2, [r3, #0]

  /* definition and creation of TaskEtat */
  osThreadDef(TaskEtat, StartTaskEtat, osPriorityHigh, 0, 1024);
 8000d02:	4b66      	ldr	r3, [pc, #408]	; (8000e9c <main+0x340>)
 8000d04:	1d3c      	adds	r4, r7, #4
 8000d06:	461d      	mov	r5, r3
 8000d08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000d0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000d0c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8000d10:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  TaskEtatHandle = osThreadCreate(osThread(TaskEtat), NULL);
 8000d14:	1d3b      	adds	r3, r7, #4
 8000d16:	2100      	movs	r1, #0
 8000d18:	4618      	mov	r0, r3
 8000d1a:	f00c f8fc 	bl	800cf16 <osThreadCreate>
 8000d1e:	4602      	mov	r2, r0
 8000d20:	4b5f      	ldr	r3, [pc, #380]	; (8000ea0 <main+0x344>)
 8000d22:	601a      	str	r2, [r3, #0]
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 8000d24:	f00c f8f0 	bl	800cf08 <osKernelStart>
  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  HAL_GPIO_WritePin(LED13_GPIO_Port,LED13_Pin,HAL_GPIO_ReadPin(BP1_GPIO_Port,BP1_Pin));
 8000d28:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000d2c:	485d      	ldr	r0, [pc, #372]	; (8000ea4 <main+0x348>)
 8000d2e:	f007 f80b 	bl	8007d48 <HAL_GPIO_ReadPin>
 8000d32:	4603      	mov	r3, r0
 8000d34:	461a      	mov	r2, r3
 8000d36:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8000d3a:	485b      	ldr	r0, [pc, #364]	; (8000ea8 <main+0x34c>)
 8000d3c:	f007 f81c 	bl	8007d78 <HAL_GPIO_WritePin>
	  HAL_GPIO_WritePin(LED14_GPIO_Port,LED14_Pin,HAL_GPIO_ReadPin(BP2_GPIO_Port,BP2_Pin));
 8000d40:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8000d44:	4857      	ldr	r0, [pc, #348]	; (8000ea4 <main+0x348>)
 8000d46:	f006 ffff 	bl	8007d48 <HAL_GPIO_ReadPin>
 8000d4a:	4603      	mov	r3, r0
 8000d4c:	461a      	mov	r2, r3
 8000d4e:	2120      	movs	r1, #32
 8000d50:	4856      	ldr	r0, [pc, #344]	; (8000eac <main+0x350>)
 8000d52:	f007 f811 	bl	8007d78 <HAL_GPIO_WritePin>
	  sprintf(text,"BP1 : %d",HAL_GPIO_ReadPin(BP1_GPIO_Port,BP1_Pin));
 8000d56:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000d5a:	4852      	ldr	r0, [pc, #328]	; (8000ea4 <main+0x348>)
 8000d5c:	f006 fff4 	bl	8007d48 <HAL_GPIO_ReadPin>
 8000d60:	4603      	mov	r3, r0
 8000d62:	461a      	mov	r2, r3
 8000d64:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000d68:	4951      	ldr	r1, [pc, #324]	; (8000eb0 <main+0x354>)
 8000d6a:	4618      	mov	r0, r3
 8000d6c:	f00e fb86 	bl	800f47c <siprintf>
	  BSP_LCD_DisplayStringAtLine(5,(uint8_t*) text);
 8000d70:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000d74:	4619      	mov	r1, r3
 8000d76:	2005      	movs	r0, #5
 8000d78:	f003 fb44 	bl	8004404 <BSP_LCD_DisplayStringAtLine>

	  sConfig.Channel = ADC_CHANNEL_6;
 8000d7c:	2306      	movs	r3, #6
 8000d7e:	67fb      	str	r3, [r7, #124]	; 0x7c
	  HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8000d80:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000d84:	4619      	mov	r1, r3
 8000d86:	484b      	ldr	r0, [pc, #300]	; (8000eb4 <main+0x358>)
 8000d88:	f005 fccc 	bl	8006724 <HAL_ADC_ConfigChannel>
	  HAL_ADC_Start(&hadc3);
 8000d8c:	4849      	ldr	r0, [pc, #292]	; (8000eb4 <main+0x358>)
 8000d8e:	f005 fb77 	bl	8006480 <HAL_ADC_Start>
	  while(HAL_ADC_PollForConversion(&hadc3, 100)!=HAL_OK);
 8000d92:	bf00      	nop
 8000d94:	2164      	movs	r1, #100	; 0x64
 8000d96:	4847      	ldr	r0, [pc, #284]	; (8000eb4 <main+0x358>)
 8000d98:	f005 fc32 	bl	8006600 <HAL_ADC_PollForConversion>
 8000d9c:	4603      	mov	r3, r0
 8000d9e:	2b00      	cmp	r3, #0
 8000da0:	d1f8      	bne.n	8000d94 <main+0x238>
	  potr = HAL_ADC_GetValue(&hadc3);
 8000da2:	4844      	ldr	r0, [pc, #272]	; (8000eb4 <main+0x358>)
 8000da4:	f005 fcb0 	bl	8006708 <HAL_ADC_GetValue>
 8000da8:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc

	  sConfig.Channel = ADC_CHANNEL_7;
 8000dac:	2307      	movs	r3, #7
 8000dae:	67fb      	str	r3, [r7, #124]	; 0x7c
	  HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8000db0:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000db4:	4619      	mov	r1, r3
 8000db6:	483f      	ldr	r0, [pc, #252]	; (8000eb4 <main+0x358>)
 8000db8:	f005 fcb4 	bl	8006724 <HAL_ADC_ConfigChannel>
	  HAL_ADC_Start(&hadc3);
 8000dbc:	483d      	ldr	r0, [pc, #244]	; (8000eb4 <main+0x358>)
 8000dbe:	f005 fb5f 	bl	8006480 <HAL_ADC_Start>
	  while(HAL_ADC_PollForConversion(&hadc3, 100)!=HAL_OK);
 8000dc2:	bf00      	nop
 8000dc4:	2164      	movs	r1, #100	; 0x64
 8000dc6:	483b      	ldr	r0, [pc, #236]	; (8000eb4 <main+0x358>)
 8000dc8:	f005 fc1a 	bl	8006600 <HAL_ADC_PollForConversion>
 8000dcc:	4603      	mov	r3, r0
 8000dce:	2b00      	cmp	r3, #0
 8000dd0:	d1f8      	bne.n	8000dc4 <main+0x268>
	  potl = HAL_ADC_GetValue(&hadc3);
 8000dd2:	4838      	ldr	r0, [pc, #224]	; (8000eb4 <main+0x358>)
 8000dd4:	f005 fc98 	bl	8006708 <HAL_ADC_GetValue>
 8000dd8:	f8c7 00c8 	str.w	r0, [r7, #200]	; 0xc8

	  sConfig.Channel = ADC_CHANNEL_8;
 8000ddc:	2308      	movs	r3, #8
 8000dde:	67fb      	str	r3, [r7, #124]	; 0x7c
	  HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8000de0:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8000de4:	4619      	mov	r1, r3
 8000de6:	4833      	ldr	r0, [pc, #204]	; (8000eb4 <main+0x358>)
 8000de8:	f005 fc9c 	bl	8006724 <HAL_ADC_ConfigChannel>
	  HAL_ADC_Start(&hadc3);
 8000dec:	4831      	ldr	r0, [pc, #196]	; (8000eb4 <main+0x358>)
 8000dee:	f005 fb47 	bl	8006480 <HAL_ADC_Start>
	  while(HAL_ADC_PollForConversion(&hadc3, 100)!=HAL_OK);
 8000df2:	bf00      	nop
 8000df4:	2164      	movs	r1, #100	; 0x64
 8000df6:	482f      	ldr	r0, [pc, #188]	; (8000eb4 <main+0x358>)
 8000df8:	f005 fc02 	bl	8006600 <HAL_ADC_PollForConversion>
 8000dfc:	4603      	mov	r3, r0
 8000dfe:	2b00      	cmp	r3, #0
 8000e00:	d1f8      	bne.n	8000df4 <main+0x298>
	  joystick_v = HAL_ADC_GetValue(&hadc3);
 8000e02:	482c      	ldr	r0, [pc, #176]	; (8000eb4 <main+0x358>)
 8000e04:	f005 fc80 	bl	8006708 <HAL_ADC_GetValue>
 8000e08:	f8c7 00c4 	str.w	r0, [r7, #196]	; 0xc4

	  HAL_ADC_Start(&hadc1);
 8000e0c:	482a      	ldr	r0, [pc, #168]	; (8000eb8 <main+0x35c>)
 8000e0e:	f005 fb37 	bl	8006480 <HAL_ADC_Start>
	  while(HAL_ADC_PollForConversion(&hadc1, 100)!=HAL_OK);
 8000e12:	bf00      	nop
 8000e14:	2164      	movs	r1, #100	; 0x64
 8000e16:	4828      	ldr	r0, [pc, #160]	; (8000eb8 <main+0x35c>)
 8000e18:	f005 fbf2 	bl	8006600 <HAL_ADC_PollForConversion>
 8000e1c:	4603      	mov	r3, r0
 8000e1e:	2b00      	cmp	r3, #0
 8000e20:	d1f8      	bne.n	8000e14 <main+0x2b8>
	  joystick_h = HAL_ADC_GetValue(&hadc1);
 8000e22:	4825      	ldr	r0, [pc, #148]	; (8000eb8 <main+0x35c>)
 8000e24:	f005 fc70 	bl	8006708 <HAL_ADC_GetValue>
 8000e28:	f8c7 00c0 	str.w	r0, [r7, #192]	; 0xc0

	  sprintf(text,"POTL : %4u POTR : %4u joy_v : %4u joy_h : %4u",(uint)potl,(uint)potr,(uint)joystick_v,(uint)joystick_h);
 8000e2c:	f107 008c 	add.w	r0, r7, #140	; 0x8c
 8000e30:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8000e34:	9301      	str	r3, [sp, #4]
 8000e36:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8000e3a:	9300      	str	r3, [sp, #0]
 8000e3c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8000e40:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 8000e44:	491d      	ldr	r1, [pc, #116]	; (8000ebc <main+0x360>)
 8000e46:	f00e fb19 	bl	800f47c <siprintf>
	  BSP_LCD_DisplayStringAtLine(9,(uint8_t*) text);
 8000e4a:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000e4e:	4619      	mov	r1, r3
 8000e50:	2009      	movs	r0, #9
 8000e52:	f003 fad7 	bl	8004404 <BSP_LCD_DisplayStringAtLine>

	  BSP_TS_GetState(&TS_State);
 8000e56:	481a      	ldr	r0, [pc, #104]	; (8000ec0 <main+0x364>)
 8000e58:	f004 fa0c 	bl	8005274 <BSP_TS_GetState>
	  if(TS_State.touchDetected){
 8000e5c:	4b18      	ldr	r3, [pc, #96]	; (8000ec0 <main+0x364>)
 8000e5e:	781b      	ldrb	r3, [r3, #0]
 8000e60:	2b00      	cmp	r3, #0
 8000e62:	f43f af61 	beq.w	8000d28 <main+0x1cc>
		  BSP_LCD_FillCircle(TS_State.touchX[0],TS_State.touchY[0],4);
 8000e66:	4b16      	ldr	r3, [pc, #88]	; (8000ec0 <main+0x364>)
 8000e68:	8858      	ldrh	r0, [r3, #2]
 8000e6a:	4b15      	ldr	r3, [pc, #84]	; (8000ec0 <main+0x364>)
 8000e6c:	899b      	ldrh	r3, [r3, #12]
 8000e6e:	2204      	movs	r2, #4
 8000e70:	4619      	mov	r1, r3
 8000e72:	f003 fd51 	bl	8004918 <BSP_LCD_FillCircle>
	  HAL_GPIO_WritePin(LED13_GPIO_Port,LED13_Pin,HAL_GPIO_ReadPin(BP1_GPIO_Port,BP1_Pin));
 8000e76:	e757      	b.n	8000d28 <main+0x1cc>
 8000e78:	200013a8 	.word	0x200013a8
 8000e7c:	ffff0000 	.word	0xffff0000
 8000e80:	20009c34 	.word	0x20009c34
 8000e84:	0800fcd4 	.word	0x0800fcd4
 8000e88:	20009a70 	.word	0x20009a70
 8000e8c:	0800fcf8 	.word	0x0800fcf8
 8000e90:	2000a020 	.word	0x2000a020
 8000e94:	0800fd1c 	.word	0x0800fd1c
 8000e98:	20009ba4 	.word	0x20009ba4
 8000e9c:	0800fd44 	.word	0x0800fd44
 8000ea0:	20009f68 	.word	0x20009f68
 8000ea4:	40020000 	.word	0x40020000
 8000ea8:	40021c00 	.word	0x40021c00
 8000eac:	40021000 	.word	0x40021000
 8000eb0:	0800fc8c 	.word	0x0800fc8c
 8000eb4:	20009da8 	.word	0x20009da8
 8000eb8:	20009d60 	.word	0x20009d60
 8000ebc:	0800fc98 	.word	0x0800fc98
 8000ec0:	200016a4 	.word	0x200016a4

08000ec4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ec4:	b580      	push	{r7, lr}
 8000ec6:	b0b4      	sub	sp, #208	; 0xd0
 8000ec8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000eca:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8000ece:	2230      	movs	r2, #48	; 0x30
 8000ed0:	2100      	movs	r1, #0
 8000ed2:	4618      	mov	r0, r3
 8000ed4:	f00e fac9 	bl	800f46a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ed8:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000edc:	2200      	movs	r2, #0
 8000ede:	601a      	str	r2, [r3, #0]
 8000ee0:	605a      	str	r2, [r3, #4]
 8000ee2:	609a      	str	r2, [r3, #8]
 8000ee4:	60da      	str	r2, [r3, #12]
 8000ee6:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ee8:	f107 0308 	add.w	r3, r7, #8
 8000eec:	2284      	movs	r2, #132	; 0x84
 8000eee:	2100      	movs	r1, #0
 8000ef0:	4618      	mov	r0, r3
 8000ef2:	f00e faba 	bl	800f46a <memset>

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 8000ef6:	f008 f899 	bl	800902c <HAL_PWR_EnableBkUpAccess>
  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000efa:	4b47      	ldr	r3, [pc, #284]	; (8001018 <SystemClock_Config+0x154>)
 8000efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000efe:	4a46      	ldr	r2, [pc, #280]	; (8001018 <SystemClock_Config+0x154>)
 8000f00:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000f04:	6413      	str	r3, [r2, #64]	; 0x40
 8000f06:	4b44      	ldr	r3, [pc, #272]	; (8001018 <SystemClock_Config+0x154>)
 8000f08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f0a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000f0e:	607b      	str	r3, [r7, #4]
 8000f10:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000f12:	4b42      	ldr	r3, [pc, #264]	; (800101c <SystemClock_Config+0x158>)
 8000f14:	681b      	ldr	r3, [r3, #0]
 8000f16:	4a41      	ldr	r2, [pc, #260]	; (800101c <SystemClock_Config+0x158>)
 8000f18:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000f1c:	6013      	str	r3, [r2, #0]
 8000f1e:	4b3f      	ldr	r3, [pc, #252]	; (800101c <SystemClock_Config+0x158>)
 8000f20:	681b      	ldr	r3, [r3, #0]
 8000f22:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000f26:	603b      	str	r3, [r7, #0]
 8000f28:	683b      	ldr	r3, [r7, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 8000f2a:	2309      	movs	r3, #9
 8000f2c:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000f30:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000f34:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 8000f38:	2301      	movs	r3, #1
 8000f3a:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000f3e:	2302      	movs	r3, #2
 8000f40:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000f44:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000f48:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
  RCC_OscInitStruct.PLL.PLLM = 25;
 8000f4c:	2319      	movs	r3, #25
 8000f4e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
  RCC_OscInitStruct.PLL.PLLN = 400;
 8000f52:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000f56:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000f5a:	2302      	movs	r3, #2
 8000f5c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.PLL.PLLQ = 9;
 8000f60:	2309      	movs	r3, #9
 8000f62:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000f66:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 8000f6a:	4618      	mov	r0, r3
 8000f6c:	f008 f8be 	bl	80090ec <HAL_RCC_OscConfig>
 8000f70:	4603      	mov	r3, r0
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	d001      	beq.n	8000f7a <SystemClock_Config+0xb6>
  {
    Error_Handler();
 8000f76:	f002 fd5d 	bl	8003a34 <Error_Handler>
  }
  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000f7a:	f008 f867 	bl	800904c <HAL_PWREx_EnableOverDrive>
 8000f7e:	4603      	mov	r3, r0
 8000f80:	2b00      	cmp	r3, #0
 8000f82:	d001      	beq.n	8000f88 <SystemClock_Config+0xc4>
  {
    Error_Handler();
 8000f84:	f002 fd56 	bl	8003a34 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000f88:	230f      	movs	r3, #15
 8000f8a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000f8e:	2302      	movs	r3, #2
 8000f90:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000f94:	2300      	movs	r3, #0
 8000f96:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000f9a:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000f9e:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000fa2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000fa6:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 8000faa:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 8000fae:	2106      	movs	r1, #6
 8000fb0:	4618      	mov	r0, r3
 8000fb2:	f008 fb3f 	bl	8009634 <HAL_RCC_ClockConfig>
 8000fb6:	4603      	mov	r3, r0
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d001      	beq.n	8000fc0 <SystemClock_Config+0xfc>
  {
    Error_Handler();
 8000fbc:	f002 fd3a 	bl	8003a34 <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC|RCC_PERIPHCLK_RTC
 8000fc0:	4b17      	ldr	r3, [pc, #92]	; (8001020 <SystemClock_Config+0x15c>)
 8000fc2:	60bb      	str	r3, [r7, #8]
                              |RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART6
                              |RCC_PERIPHCLK_UART7|RCC_PERIPHCLK_I2C1
                              |RCC_PERIPHCLK_I2C3;
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000fc4:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8000fc8:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 8000fca:	2305      	movs	r3, #5
 8000fcc:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000fce:	2302      	movs	r3, #2
 8000fd0:	623b      	str	r3, [r7, #32]
  PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV8;
 8000fd2:	2303      	movs	r3, #3
 8000fd4:	62bb      	str	r3, [r7, #40]	; 0x28
  PeriphClkInitStruct.PLLSAIDivQ = 1;
 8000fd6:	2301      	movs	r3, #1
 8000fd8:	633b      	str	r3, [r7, #48]	; 0x30
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000fda:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8000fde:	637b      	str	r3, [r7, #52]	; 0x34
  PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 8000fe0:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000fe4:	63bb      	str	r3, [r7, #56]	; 0x38
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8000fe6:	2300      	movs	r3, #0
 8000fe8:	64fb      	str	r3, [r7, #76]	; 0x4c
  PeriphClkInitStruct.Usart6ClockSelection = RCC_USART6CLKSOURCE_PCLK2;
 8000fea:	2300      	movs	r3, #0
 8000fec:	663b      	str	r3, [r7, #96]	; 0x60
  PeriphClkInitStruct.Uart7ClockSelection = RCC_UART7CLKSOURCE_PCLK1;
 8000fee:	2300      	movs	r3, #0
 8000ff0:	667b      	str	r3, [r7, #100]	; 0x64
  PeriphClkInitStruct.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	66fb      	str	r3, [r7, #108]	; 0x6c
  PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	677b      	str	r3, [r7, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000ffa:	f107 0308 	add.w	r3, r7, #8
 8000ffe:	4618      	mov	r0, r3
 8001000:	f008 fd1c 	bl	8009a3c <HAL_RCCEx_PeriphCLKConfig>
 8001004:	4603      	mov	r3, r0
 8001006:	2b00      	cmp	r3, #0
 8001008:	d001      	beq.n	800100e <SystemClock_Config+0x14a>
  {
    Error_Handler();
 800100a:	f002 fd13 	bl	8003a34 <Error_Handler>
  }
}
 800100e:	bf00      	nop
 8001010:	37d0      	adds	r7, #208	; 0xd0
 8001012:	46bd      	mov	sp, r7
 8001014:	bd80      	pop	{r7, pc}
 8001016:	bf00      	nop
 8001018:	40023800 	.word	0x40023800
 800101c:	40007000 	.word	0x40007000
 8001020:	00015868 	.word	0x00015868

08001024 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001024:	b580      	push	{r7, lr}
 8001026:	b084      	sub	sp, #16
 8001028:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800102a:	463b      	mov	r3, r7
 800102c:	2200      	movs	r2, #0
 800102e:	601a      	str	r2, [r3, #0]
 8001030:	605a      	str	r2, [r3, #4]
 8001032:	609a      	str	r2, [r3, #8]
 8001034:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC1_Init 1 */

  /* USER CODE END ADC1_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8001036:	4b21      	ldr	r3, [pc, #132]	; (80010bc <MX_ADC1_Init+0x98>)
 8001038:	4a21      	ldr	r2, [pc, #132]	; (80010c0 <MX_ADC1_Init+0x9c>)
 800103a:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800103c:	4b1f      	ldr	r3, [pc, #124]	; (80010bc <MX_ADC1_Init+0x98>)
 800103e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8001042:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001044:	4b1d      	ldr	r3, [pc, #116]	; (80010bc <MX_ADC1_Init+0x98>)
 8001046:	2200      	movs	r2, #0
 8001048:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 800104a:	4b1c      	ldr	r3, [pc, #112]	; (80010bc <MX_ADC1_Init+0x98>)
 800104c:	2200      	movs	r2, #0
 800104e:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001050:	4b1a      	ldr	r3, [pc, #104]	; (80010bc <MX_ADC1_Init+0x98>)
 8001052:	2200      	movs	r2, #0
 8001054:	619a      	str	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001056:	4b19      	ldr	r3, [pc, #100]	; (80010bc <MX_ADC1_Init+0x98>)
 8001058:	2200      	movs	r2, #0
 800105a:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800105e:	4b17      	ldr	r3, [pc, #92]	; (80010bc <MX_ADC1_Init+0x98>)
 8001060:	2200      	movs	r2, #0
 8001062:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001064:	4b15      	ldr	r3, [pc, #84]	; (80010bc <MX_ADC1_Init+0x98>)
 8001066:	4a17      	ldr	r2, [pc, #92]	; (80010c4 <MX_ADC1_Init+0xa0>)
 8001068:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800106a:	4b14      	ldr	r3, [pc, #80]	; (80010bc <MX_ADC1_Init+0x98>)
 800106c:	2200      	movs	r2, #0
 800106e:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001070:	4b12      	ldr	r3, [pc, #72]	; (80010bc <MX_ADC1_Init+0x98>)
 8001072:	2201      	movs	r2, #1
 8001074:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001076:	4b11      	ldr	r3, [pc, #68]	; (80010bc <MX_ADC1_Init+0x98>)
 8001078:	2200      	movs	r2, #0
 800107a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800107e:	4b0f      	ldr	r3, [pc, #60]	; (80010bc <MX_ADC1_Init+0x98>)
 8001080:	2201      	movs	r2, #1
 8001082:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001084:	480d      	ldr	r0, [pc, #52]	; (80010bc <MX_ADC1_Init+0x98>)
 8001086:	f005 f9b7 	bl	80063f8 <HAL_ADC_Init>
 800108a:	4603      	mov	r3, r0
 800108c:	2b00      	cmp	r3, #0
 800108e:	d001      	beq.n	8001094 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8001090:	f002 fcd0 	bl	8003a34 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 8001094:	2300      	movs	r3, #0
 8001096:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8001098:	2301      	movs	r3, #1
 800109a:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800109c:	2300      	movs	r3, #0
 800109e:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80010a0:	463b      	mov	r3, r7
 80010a2:	4619      	mov	r1, r3
 80010a4:	4805      	ldr	r0, [pc, #20]	; (80010bc <MX_ADC1_Init+0x98>)
 80010a6:	f005 fb3d 	bl	8006724 <HAL_ADC_ConfigChannel>
 80010aa:	4603      	mov	r3, r0
 80010ac:	2b00      	cmp	r3, #0
 80010ae:	d001      	beq.n	80010b4 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 80010b0:	f002 fcc0 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80010b4:	bf00      	nop
 80010b6:	3710      	adds	r7, #16
 80010b8:	46bd      	mov	sp, r7
 80010ba:	bd80      	pop	{r7, pc}
 80010bc:	20009d60 	.word	0x20009d60
 80010c0:	40012000 	.word	0x40012000
 80010c4:	0f000001 	.word	0x0f000001

080010c8 <MX_ADC3_Init>:
  * @brief ADC3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC3_Init(void)
{
 80010c8:	b580      	push	{r7, lr}
 80010ca:	b084      	sub	sp, #16
 80010cc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80010ce:	463b      	mov	r3, r7
 80010d0:	2200      	movs	r2, #0
 80010d2:	601a      	str	r2, [r3, #0]
 80010d4:	605a      	str	r2, [r3, #4]
 80010d6:	609a      	str	r2, [r3, #8]
 80010d8:	60da      	str	r2, [r3, #12]
  /* USER CODE BEGIN ADC3_Init 1 */

  /* USER CODE END ADC3_Init 1 */
  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc3.Instance = ADC3;
 80010da:	4b21      	ldr	r3, [pc, #132]	; (8001160 <MX_ADC3_Init+0x98>)
 80010dc:	4a21      	ldr	r2, [pc, #132]	; (8001164 <MX_ADC3_Init+0x9c>)
 80010de:	601a      	str	r2, [r3, #0]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80010e0:	4b1f      	ldr	r3, [pc, #124]	; (8001160 <MX_ADC3_Init+0x98>)
 80010e2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80010e6:	605a      	str	r2, [r3, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 80010e8:	4b1d      	ldr	r3, [pc, #116]	; (8001160 <MX_ADC3_Init+0x98>)
 80010ea:	2200      	movs	r2, #0
 80010ec:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80010ee:	4b1c      	ldr	r3, [pc, #112]	; (8001160 <MX_ADC3_Init+0x98>)
 80010f0:	2200      	movs	r2, #0
 80010f2:	611a      	str	r2, [r3, #16]
  hadc3.Init.ContinuousConvMode = DISABLE;
 80010f4:	4b1a      	ldr	r3, [pc, #104]	; (8001160 <MX_ADC3_Init+0x98>)
 80010f6:	2200      	movs	r2, #0
 80010f8:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 80010fa:	4b19      	ldr	r3, [pc, #100]	; (8001160 <MX_ADC3_Init+0x98>)
 80010fc:	2200      	movs	r2, #0
 80010fe:	f883 2020 	strb.w	r2, [r3, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001102:	4b17      	ldr	r3, [pc, #92]	; (8001160 <MX_ADC3_Init+0x98>)
 8001104:	2200      	movs	r2, #0
 8001106:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001108:	4b15      	ldr	r3, [pc, #84]	; (8001160 <MX_ADC3_Init+0x98>)
 800110a:	4a17      	ldr	r2, [pc, #92]	; (8001168 <MX_ADC3_Init+0xa0>)
 800110c:	629a      	str	r2, [r3, #40]	; 0x28
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800110e:	4b14      	ldr	r3, [pc, #80]	; (8001160 <MX_ADC3_Init+0x98>)
 8001110:	2200      	movs	r2, #0
 8001112:	60da      	str	r2, [r3, #12]
  hadc3.Init.NbrOfConversion = 1;
 8001114:	4b12      	ldr	r3, [pc, #72]	; (8001160 <MX_ADC3_Init+0x98>)
 8001116:	2201      	movs	r2, #1
 8001118:	61da      	str	r2, [r3, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 800111a:	4b11      	ldr	r3, [pc, #68]	; (8001160 <MX_ADC3_Init+0x98>)
 800111c:	2200      	movs	r2, #0
 800111e:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001122:	4b0f      	ldr	r3, [pc, #60]	; (8001160 <MX_ADC3_Init+0x98>)
 8001124:	2201      	movs	r2, #1
 8001126:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8001128:	480d      	ldr	r0, [pc, #52]	; (8001160 <MX_ADC3_Init+0x98>)
 800112a:	f005 f965 	bl	80063f8 <HAL_ADC_Init>
 800112e:	4603      	mov	r3, r0
 8001130:	2b00      	cmp	r3, #0
 8001132:	d001      	beq.n	8001138 <MX_ADC3_Init+0x70>
  {
    Error_Handler();
 8001134:	f002 fc7e 	bl	8003a34 <Error_Handler>
  }
  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_6;
 8001138:	2306      	movs	r3, #6
 800113a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800113c:	2301      	movs	r3, #1
 800113e:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001140:	2300      	movs	r3, #0
 8001142:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001144:	463b      	mov	r3, r7
 8001146:	4619      	mov	r1, r3
 8001148:	4805      	ldr	r0, [pc, #20]	; (8001160 <MX_ADC3_Init+0x98>)
 800114a:	f005 faeb 	bl	8006724 <HAL_ADC_ConfigChannel>
 800114e:	4603      	mov	r3, r0
 8001150:	2b00      	cmp	r3, #0
 8001152:	d001      	beq.n	8001158 <MX_ADC3_Init+0x90>
  {
    Error_Handler();
 8001154:	f002 fc6e 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 8001158:	bf00      	nop
 800115a:	3710      	adds	r7, #16
 800115c:	46bd      	mov	sp, r7
 800115e:	bd80      	pop	{r7, pc}
 8001160:	20009da8 	.word	0x20009da8
 8001164:	40012200 	.word	0x40012200
 8001168:	0f000001 	.word	0x0f000001

0800116c <MX_DAC_Init>:
  * @brief DAC Initialization Function
  * @param None
  * @retval None
  */
static void MX_DAC_Init(void)
{
 800116c:	b580      	push	{r7, lr}
 800116e:	b082      	sub	sp, #8
 8001170:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN DAC_Init 0 */

  /* USER CODE END DAC_Init 0 */

  DAC_ChannelConfTypeDef sConfig = {0};
 8001172:	463b      	mov	r3, r7
 8001174:	2200      	movs	r2, #0
 8001176:	601a      	str	r2, [r3, #0]
 8001178:	605a      	str	r2, [r3, #4]
  /* USER CODE BEGIN DAC_Init 1 */

  /* USER CODE END DAC_Init 1 */
  /** DAC Initialization
  */
  hdac.Instance = DAC;
 800117a:	4b0f      	ldr	r3, [pc, #60]	; (80011b8 <MX_DAC_Init+0x4c>)
 800117c:	4a0f      	ldr	r2, [pc, #60]	; (80011bc <MX_DAC_Init+0x50>)
 800117e:	601a      	str	r2, [r3, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001180:	480d      	ldr	r0, [pc, #52]	; (80011b8 <MX_DAC_Init+0x4c>)
 8001182:	f005 fdf5 	bl	8006d70 <HAL_DAC_Init>
 8001186:	4603      	mov	r3, r0
 8001188:	2b00      	cmp	r3, #0
 800118a:	d001      	beq.n	8001190 <MX_DAC_Init+0x24>
  {
    Error_Handler();
 800118c:	f002 fc52 	bl	8003a34 <Error_Handler>
  }
  /** DAC channel OUT1 config
  */
  sConfig.DAC_Trigger = DAC_TRIGGER_NONE;
 8001190:	2300      	movs	r3, #0
 8001192:	603b      	str	r3, [r7, #0]
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001194:	2300      	movs	r3, #0
 8001196:	607b      	str	r3, [r7, #4]
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_1) != HAL_OK)
 8001198:	463b      	mov	r3, r7
 800119a:	2200      	movs	r2, #0
 800119c:	4619      	mov	r1, r3
 800119e:	4806      	ldr	r0, [pc, #24]	; (80011b8 <MX_DAC_Init+0x4c>)
 80011a0:	f005 fe5c 	bl	8006e5c <HAL_DAC_ConfigChannel>
 80011a4:	4603      	mov	r3, r0
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	d001      	beq.n	80011ae <MX_DAC_Init+0x42>
  {
    Error_Handler();
 80011aa:	f002 fc43 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN DAC_Init 2 */

  /* USER CODE END DAC_Init 2 */

}
 80011ae:	bf00      	nop
 80011b0:	3708      	adds	r7, #8
 80011b2:	46bd      	mov	sp, r7
 80011b4:	bd80      	pop	{r7, pc}
 80011b6:	bf00      	nop
 80011b8:	20009e70 	.word	0x20009e70
 80011bc:	40007400 	.word	0x40007400

080011c0 <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 80011c0:	b580      	push	{r7, lr}
 80011c2:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 80011c4:	4b15      	ldr	r3, [pc, #84]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011c6:	4a16      	ldr	r2, [pc, #88]	; (8001220 <MX_DMA2D_Init+0x60>)
 80011c8:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 80011ca:	4b14      	ldr	r3, [pc, #80]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011cc:	2200      	movs	r2, #0
 80011ce:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 80011d0:	4b12      	ldr	r3, [pc, #72]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011d2:	2200      	movs	r2, #0
 80011d4:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 80011d6:	4b11      	ldr	r3, [pc, #68]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011d8:	2200      	movs	r2, #0
 80011da:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 80011dc:	4b0f      	ldr	r3, [pc, #60]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011de:	2200      	movs	r2, #0
 80011e0:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 80011e2:	4b0e      	ldr	r3, [pc, #56]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011e4:	2200      	movs	r2, #0
 80011e6:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80011e8:	4b0c      	ldr	r3, [pc, #48]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011ea:	2200      	movs	r2, #0
 80011ec:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80011ee:	4b0b      	ldr	r3, [pc, #44]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011f0:	2200      	movs	r2, #0
 80011f2:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80011f4:	4809      	ldr	r0, [pc, #36]	; (800121c <MX_DMA2D_Init+0x5c>)
 80011f6:	f006 f867 	bl	80072c8 <HAL_DMA2D_Init>
 80011fa:	4603      	mov	r3, r0
 80011fc:	2b00      	cmp	r3, #0
 80011fe:	d001      	beq.n	8001204 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 8001200:	f002 fc18 	bl	8003a34 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001204:	2101      	movs	r1, #1
 8001206:	4805      	ldr	r0, [pc, #20]	; (800121c <MX_DMA2D_Init+0x5c>)
 8001208:	f006 f9bc 	bl	8007584 <HAL_DMA2D_ConfigLayer>
 800120c:	4603      	mov	r3, r0
 800120e:	2b00      	cmp	r3, #0
 8001210:	d001      	beq.n	8001216 <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 8001212:	f002 fc0f 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 8001216:	bf00      	nop
 8001218:	bd80      	pop	{r7, pc}
 800121a:	bf00      	nop
 800121c:	20009f6c 	.word	0x20009f6c
 8001220:	4002b000 	.word	0x4002b000

08001224 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001224:	b580      	push	{r7, lr}
 8001226:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001228:	4b1b      	ldr	r3, [pc, #108]	; (8001298 <MX_I2C1_Init+0x74>)
 800122a:	4a1c      	ldr	r2, [pc, #112]	; (800129c <MX_I2C1_Init+0x78>)
 800122c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00C0EAFF;
 800122e:	4b1a      	ldr	r3, [pc, #104]	; (8001298 <MX_I2C1_Init+0x74>)
 8001230:	4a1b      	ldr	r2, [pc, #108]	; (80012a0 <MX_I2C1_Init+0x7c>)
 8001232:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001234:	4b18      	ldr	r3, [pc, #96]	; (8001298 <MX_I2C1_Init+0x74>)
 8001236:	2200      	movs	r2, #0
 8001238:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800123a:	4b17      	ldr	r3, [pc, #92]	; (8001298 <MX_I2C1_Init+0x74>)
 800123c:	2201      	movs	r2, #1
 800123e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001240:	4b15      	ldr	r3, [pc, #84]	; (8001298 <MX_I2C1_Init+0x74>)
 8001242:	2200      	movs	r2, #0
 8001244:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001246:	4b14      	ldr	r3, [pc, #80]	; (8001298 <MX_I2C1_Init+0x74>)
 8001248:	2200      	movs	r2, #0
 800124a:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 800124c:	4b12      	ldr	r3, [pc, #72]	; (8001298 <MX_I2C1_Init+0x74>)
 800124e:	2200      	movs	r2, #0
 8001250:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001252:	4b11      	ldr	r3, [pc, #68]	; (8001298 <MX_I2C1_Init+0x74>)
 8001254:	2200      	movs	r2, #0
 8001256:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001258:	4b0f      	ldr	r3, [pc, #60]	; (8001298 <MX_I2C1_Init+0x74>)
 800125a:	2200      	movs	r2, #0
 800125c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800125e:	480e      	ldr	r0, [pc, #56]	; (8001298 <MX_I2C1_Init+0x74>)
 8001260:	f006 fdbc 	bl	8007ddc <HAL_I2C_Init>
 8001264:	4603      	mov	r3, r0
 8001266:	2b00      	cmp	r3, #0
 8001268:	d001      	beq.n	800126e <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 800126a:	f002 fbe3 	bl	8003a34 <Error_Handler>
  }
  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800126e:	2100      	movs	r1, #0
 8001270:	4809      	ldr	r0, [pc, #36]	; (8001298 <MX_I2C1_Init+0x74>)
 8001272:	f007 facb 	bl	800880c <HAL_I2CEx_ConfigAnalogFilter>
 8001276:	4603      	mov	r3, r0
 8001278:	2b00      	cmp	r3, #0
 800127a:	d001      	beq.n	8001280 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 800127c:	f002 fbda 	bl	8003a34 <Error_Handler>
  }
  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8001280:	2100      	movs	r1, #0
 8001282:	4805      	ldr	r0, [pc, #20]	; (8001298 <MX_I2C1_Init+0x74>)
 8001284:	f007 fb0d 	bl	80088a2 <HAL_I2CEx_ConfigDigitalFilter>
 8001288:	4603      	mov	r3, r0
 800128a:	2b00      	cmp	r3, #0
 800128c:	d001      	beq.n	8001292 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 800128e:	f002 fbd1 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001292:	bf00      	nop
 8001294:	bd80      	pop	{r7, pc}
 8001296:	bf00      	nop
 8001298:	20009be8 	.word	0x20009be8
 800129c:	40005400 	.word	0x40005400
 80012a0:	00c0eaff 	.word	0x00c0eaff

080012a4 <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 80012a4:	b580      	push	{r7, lr}
 80012a6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 80012a8:	4b1b      	ldr	r3, [pc, #108]	; (8001318 <MX_I2C3_Init+0x74>)
 80012aa:	4a1c      	ldr	r2, [pc, #112]	; (800131c <MX_I2C3_Init+0x78>)
 80012ac:	601a      	str	r2, [r3, #0]
  hi2c3.Init.Timing = 0x00C0EAFF;
 80012ae:	4b1a      	ldr	r3, [pc, #104]	; (8001318 <MX_I2C3_Init+0x74>)
 80012b0:	4a1b      	ldr	r2, [pc, #108]	; (8001320 <MX_I2C3_Init+0x7c>)
 80012b2:	605a      	str	r2, [r3, #4]
  hi2c3.Init.OwnAddress1 = 0;
 80012b4:	4b18      	ldr	r3, [pc, #96]	; (8001318 <MX_I2C3_Init+0x74>)
 80012b6:	2200      	movs	r2, #0
 80012b8:	609a      	str	r2, [r3, #8]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012ba:	4b17      	ldr	r3, [pc, #92]	; (8001318 <MX_I2C3_Init+0x74>)
 80012bc:	2201      	movs	r2, #1
 80012be:	60da      	str	r2, [r3, #12]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012c0:	4b15      	ldr	r3, [pc, #84]	; (8001318 <MX_I2C3_Init+0x74>)
 80012c2:	2200      	movs	r2, #0
 80012c4:	611a      	str	r2, [r3, #16]
  hi2c3.Init.OwnAddress2 = 0;
 80012c6:	4b14      	ldr	r3, [pc, #80]	; (8001318 <MX_I2C3_Init+0x74>)
 80012c8:	2200      	movs	r2, #0
 80012ca:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 80012cc:	4b12      	ldr	r3, [pc, #72]	; (8001318 <MX_I2C3_Init+0x74>)
 80012ce:	2200      	movs	r2, #0
 80012d0:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012d2:	4b11      	ldr	r3, [pc, #68]	; (8001318 <MX_I2C3_Init+0x74>)
 80012d4:	2200      	movs	r2, #0
 80012d6:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012d8:	4b0f      	ldr	r3, [pc, #60]	; (8001318 <MX_I2C3_Init+0x74>)
 80012da:	2200      	movs	r2, #0
 80012dc:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80012de:	480e      	ldr	r0, [pc, #56]	; (8001318 <MX_I2C3_Init+0x74>)
 80012e0:	f006 fd7c 	bl	8007ddc <HAL_I2C_Init>
 80012e4:	4603      	mov	r3, r0
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d001      	beq.n	80012ee <MX_I2C3_Init+0x4a>
  {
    Error_Handler();
 80012ea:	f002 fba3 	bl	8003a34 <Error_Handler>
  }
  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80012ee:	2100      	movs	r1, #0
 80012f0:	4809      	ldr	r0, [pc, #36]	; (8001318 <MX_I2C3_Init+0x74>)
 80012f2:	f007 fa8b 	bl	800880c <HAL_I2CEx_ConfigAnalogFilter>
 80012f6:	4603      	mov	r3, r0
 80012f8:	2b00      	cmp	r3, #0
 80012fa:	d001      	beq.n	8001300 <MX_I2C3_Init+0x5c>
  {
    Error_Handler();
 80012fc:	f002 fb9a 	bl	8003a34 <Error_Handler>
  }
  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001300:	2100      	movs	r1, #0
 8001302:	4805      	ldr	r0, [pc, #20]	; (8001318 <MX_I2C3_Init+0x74>)
 8001304:	f007 facd 	bl	80088a2 <HAL_I2CEx_ConfigDigitalFilter>
 8001308:	4603      	mov	r3, r0
 800130a:	2b00      	cmp	r3, #0
 800130c:	d001      	beq.n	8001312 <MX_I2C3_Init+0x6e>
  {
    Error_Handler();
 800130e:	f002 fb91 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8001312:	bf00      	nop
 8001314:	bd80      	pop	{r7, pc}
 8001316:	bf00      	nop
 8001318:	20009a74 	.word	0x20009a74
 800131c:	40005c00 	.word	0x40005c00
 8001320:	00c0eaff 	.word	0x00c0eaff

08001324 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 8001324:	b580      	push	{r7, lr}
 8001326:	b08e      	sub	sp, #56	; 0x38
 8001328:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800132a:	1d3b      	adds	r3, r7, #4
 800132c:	2234      	movs	r2, #52	; 0x34
 800132e:	2100      	movs	r1, #0
 8001330:	4618      	mov	r0, r3
 8001332:	f00e f89a 	bl	800f46a <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8001336:	4b3a      	ldr	r3, [pc, #232]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001338:	4a3a      	ldr	r2, [pc, #232]	; (8001424 <MX_LTDC_Init+0x100>)
 800133a:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800133c:	4b38      	ldr	r3, [pc, #224]	; (8001420 <MX_LTDC_Init+0xfc>)
 800133e:	2200      	movs	r2, #0
 8001340:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8001342:	4b37      	ldr	r3, [pc, #220]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001344:	2200      	movs	r2, #0
 8001346:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001348:	4b35      	ldr	r3, [pc, #212]	; (8001420 <MX_LTDC_Init+0xfc>)
 800134a:	2200      	movs	r2, #0
 800134c:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800134e:	4b34      	ldr	r3, [pc, #208]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001350:	2200      	movs	r2, #0
 8001352:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 40;
 8001354:	4b32      	ldr	r3, [pc, #200]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001356:	2228      	movs	r2, #40	; 0x28
 8001358:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 9;
 800135a:	4b31      	ldr	r3, [pc, #196]	; (8001420 <MX_LTDC_Init+0xfc>)
 800135c:	2209      	movs	r2, #9
 800135e:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 53;
 8001360:	4b2f      	ldr	r3, [pc, #188]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001362:	2235      	movs	r2, #53	; 0x35
 8001364:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 11;
 8001366:	4b2e      	ldr	r3, [pc, #184]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001368:	220b      	movs	r2, #11
 800136a:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 533;
 800136c:	4b2c      	ldr	r3, [pc, #176]	; (8001420 <MX_LTDC_Init+0xfc>)
 800136e:	f240 2215 	movw	r2, #533	; 0x215
 8001372:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 283;
 8001374:	4b2a      	ldr	r3, [pc, #168]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001376:	f240 121b 	movw	r2, #283	; 0x11b
 800137a:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 565;
 800137c:	4b28      	ldr	r3, [pc, #160]	; (8001420 <MX_LTDC_Init+0xfc>)
 800137e:	f240 2235 	movw	r2, #565	; 0x235
 8001382:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 285;
 8001384:	4b26      	ldr	r3, [pc, #152]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001386:	f240 121d 	movw	r2, #285	; 0x11d
 800138a:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 800138c:	4b24      	ldr	r3, [pc, #144]	; (8001420 <MX_LTDC_Init+0xfc>)
 800138e:	2200      	movs	r2, #0
 8001390:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8001394:	4b22      	ldr	r3, [pc, #136]	; (8001420 <MX_LTDC_Init+0xfc>)
 8001396:	2200      	movs	r2, #0
 8001398:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 800139c:	4b20      	ldr	r3, [pc, #128]	; (8001420 <MX_LTDC_Init+0xfc>)
 800139e:	2200      	movs	r2, #0
 80013a0:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80013a4:	481e      	ldr	r0, [pc, #120]	; (8001420 <MX_LTDC_Init+0xfc>)
 80013a6:	f007 fac9 	bl	800893c <HAL_LTDC_Init>
 80013aa:	4603      	mov	r3, r0
 80013ac:	2b00      	cmp	r3, #0
 80013ae:	d001      	beq.n	80013b4 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 80013b0:	f002 fb40 	bl	8003a34 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 80013b4:	2300      	movs	r3, #0
 80013b6:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 480;
 80013b8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80013bc:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 80013be:	2300      	movs	r3, #0
 80013c0:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 272;
 80013c2:	f44f 7388 	mov.w	r3, #272	; 0x110
 80013c6:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80013c8:	2302      	movs	r3, #2
 80013ca:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 80013cc:	23ff      	movs	r3, #255	; 0xff
 80013ce:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 80013d0:	2300      	movs	r3, #0
 80013d2:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 80013d4:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80013d8:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 80013da:	2307      	movs	r3, #7
 80013dc:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xC0000000;
 80013de:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
 80013e2:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 480;
 80013e4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80013e8:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 272;
 80013ea:	f44f 7388 	mov.w	r3, #272	; 0x110
 80013ee:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 80013f0:	2300      	movs	r3, #0
 80013f2:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 80013f6:	2300      	movs	r3, #0
 80013f8:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 80013fc:	2300      	movs	r3, #0
 80013fe:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001402:	1d3b      	adds	r3, r7, #4
 8001404:	2200      	movs	r2, #0
 8001406:	4619      	mov	r1, r3
 8001408:	4805      	ldr	r0, [pc, #20]	; (8001420 <MX_LTDC_Init+0xfc>)
 800140a:	f007 fc29 	bl	8008c60 <HAL_LTDC_ConfigLayer>
 800140e:	4603      	mov	r3, r0
 8001410:	2b00      	cmp	r3, #0
 8001412:	d001      	beq.n	8001418 <MX_LTDC_Init+0xf4>
  {
    Error_Handler();
 8001414:	f002 fb0e 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8001418:	bf00      	nop
 800141a:	3738      	adds	r7, #56	; 0x38
 800141c:	46bd      	mov	sp, r7
 800141e:	bd80      	pop	{r7, pc}
 8001420:	20009cb8 	.word	0x20009cb8
 8001424:	40016800 	.word	0x40016800

08001428 <MX_RTC_Init>:
  * @brief RTC Initialization Function
  * @param None
  * @retval None
  */
static void MX_RTC_Init(void)
{
 8001428:	b580      	push	{r7, lr}
 800142a:	b092      	sub	sp, #72	; 0x48
 800142c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RTC_Init 0 */

  /* USER CODE END RTC_Init 0 */

  RTC_TimeTypeDef sTime = {0};
 800142e:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001432:	2200      	movs	r2, #0
 8001434:	601a      	str	r2, [r3, #0]
 8001436:	605a      	str	r2, [r3, #4]
 8001438:	609a      	str	r2, [r3, #8]
 800143a:	60da      	str	r2, [r3, #12]
 800143c:	611a      	str	r2, [r3, #16]
 800143e:	615a      	str	r2, [r3, #20]
  RTC_DateTypeDef sDate = {0};
 8001440:	2300      	movs	r3, #0
 8001442:	62fb      	str	r3, [r7, #44]	; 0x2c
  RTC_AlarmTypeDef sAlarm = {0};
 8001444:	463b      	mov	r3, r7
 8001446:	222c      	movs	r2, #44	; 0x2c
 8001448:	2100      	movs	r1, #0
 800144a:	4618      	mov	r0, r3
 800144c:	f00e f80d 	bl	800f46a <memset>
  /* USER CODE BEGIN RTC_Init 1 */

  /* USER CODE END RTC_Init 1 */
  /** Initialize RTC Only
  */
  hrtc.Instance = RTC;
 8001450:	4b46      	ldr	r3, [pc, #280]	; (800156c <MX_RTC_Init+0x144>)
 8001452:	4a47      	ldr	r2, [pc, #284]	; (8001570 <MX_RTC_Init+0x148>)
 8001454:	601a      	str	r2, [r3, #0]
  hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 8001456:	4b45      	ldr	r3, [pc, #276]	; (800156c <MX_RTC_Init+0x144>)
 8001458:	2200      	movs	r2, #0
 800145a:	605a      	str	r2, [r3, #4]
  hrtc.Init.AsynchPrediv = 127;
 800145c:	4b43      	ldr	r3, [pc, #268]	; (800156c <MX_RTC_Init+0x144>)
 800145e:	227f      	movs	r2, #127	; 0x7f
 8001460:	609a      	str	r2, [r3, #8]
  hrtc.Init.SynchPrediv = 255;
 8001462:	4b42      	ldr	r3, [pc, #264]	; (800156c <MX_RTC_Init+0x144>)
 8001464:	22ff      	movs	r2, #255	; 0xff
 8001466:	60da      	str	r2, [r3, #12]
  hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 8001468:	4b40      	ldr	r3, [pc, #256]	; (800156c <MX_RTC_Init+0x144>)
 800146a:	2200      	movs	r2, #0
 800146c:	611a      	str	r2, [r3, #16]
  hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 800146e:	4b3f      	ldr	r3, [pc, #252]	; (800156c <MX_RTC_Init+0x144>)
 8001470:	2200      	movs	r2, #0
 8001472:	615a      	str	r2, [r3, #20]
  hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 8001474:	4b3d      	ldr	r3, [pc, #244]	; (800156c <MX_RTC_Init+0x144>)
 8001476:	2200      	movs	r2, #0
 8001478:	619a      	str	r2, [r3, #24]
  if (HAL_RTC_Init(&hrtc) != HAL_OK)
 800147a:	483c      	ldr	r0, [pc, #240]	; (800156c <MX_RTC_Init+0x144>)
 800147c:	f008 fecc 	bl	800a218 <HAL_RTC_Init>
 8001480:	4603      	mov	r3, r0
 8001482:	2b00      	cmp	r3, #0
 8001484:	d001      	beq.n	800148a <MX_RTC_Init+0x62>
  {
    Error_Handler();
 8001486:	f002 fad5 	bl	8003a34 <Error_Handler>

  /* USER CODE END Check_RTC_BKUP */

  /** Initialize RTC and set the Time and Date
  */
  sTime.Hours = 0x0;
 800148a:	2300      	movs	r3, #0
 800148c:	f887 3030 	strb.w	r3, [r7, #48]	; 0x30
  sTime.Minutes = 0x0;
 8001490:	2300      	movs	r3, #0
 8001492:	f887 3031 	strb.w	r3, [r7, #49]	; 0x31
  sTime.Seconds = 0x0;
 8001496:	2300      	movs	r3, #0
 8001498:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
  sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 800149c:	2300      	movs	r3, #0
 800149e:	643b      	str	r3, [r7, #64]	; 0x40
  sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 80014a0:	2300      	movs	r3, #0
 80014a2:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 80014a4:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80014a8:	2201      	movs	r2, #1
 80014aa:	4619      	mov	r1, r3
 80014ac:	482f      	ldr	r0, [pc, #188]	; (800156c <MX_RTC_Init+0x144>)
 80014ae:	f008 ff2f 	bl	800a310 <HAL_RTC_SetTime>
 80014b2:	4603      	mov	r3, r0
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d001      	beq.n	80014bc <MX_RTC_Init+0x94>
  {
    Error_Handler();
 80014b8:	f002 fabc 	bl	8003a34 <Error_Handler>
  }
  sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 80014bc:	2301      	movs	r3, #1
 80014be:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
  sDate.Month = RTC_MONTH_JANUARY;
 80014c2:	2301      	movs	r3, #1
 80014c4:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
  sDate.Date = 0x1;
 80014c8:	2301      	movs	r3, #1
 80014ca:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
  sDate.Year = 0x0;
 80014ce:	2300      	movs	r3, #0
 80014d0:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
  if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 80014d4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80014d8:	2201      	movs	r2, #1
 80014da:	4619      	mov	r1, r3
 80014dc:	4823      	ldr	r0, [pc, #140]	; (800156c <MX_RTC_Init+0x144>)
 80014de:	f008 ffd5 	bl	800a48c <HAL_RTC_SetDate>
 80014e2:	4603      	mov	r3, r0
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d001      	beq.n	80014ec <MX_RTC_Init+0xc4>
  {
    Error_Handler();
 80014e8:	f002 faa4 	bl	8003a34 <Error_Handler>
  }
  /** Enable the Alarm A
  */
  sAlarm.AlarmTime.Hours = 0x0;
 80014ec:	2300      	movs	r3, #0
 80014ee:	703b      	strb	r3, [r7, #0]
  sAlarm.AlarmTime.Minutes = 0x0;
 80014f0:	2300      	movs	r3, #0
 80014f2:	707b      	strb	r3, [r7, #1]
  sAlarm.AlarmTime.Seconds = 0x0;
 80014f4:	2300      	movs	r3, #0
 80014f6:	70bb      	strb	r3, [r7, #2]
  sAlarm.AlarmTime.SubSeconds = 0x0;
 80014f8:	2300      	movs	r3, #0
 80014fa:	607b      	str	r3, [r7, #4]
  sAlarm.AlarmTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 80014fc:	2300      	movs	r3, #0
 80014fe:	613b      	str	r3, [r7, #16]
  sAlarm.AlarmTime.StoreOperation = RTC_STOREOPERATION_RESET;
 8001500:	2300      	movs	r3, #0
 8001502:	617b      	str	r3, [r7, #20]
  sAlarm.AlarmMask = RTC_ALARMMASK_NONE;
 8001504:	2300      	movs	r3, #0
 8001506:	61bb      	str	r3, [r7, #24]
  sAlarm.AlarmSubSecondMask = RTC_ALARMSUBSECONDMASK_ALL;
 8001508:	2300      	movs	r3, #0
 800150a:	61fb      	str	r3, [r7, #28]
  sAlarm.AlarmDateWeekDaySel = RTC_ALARMDATEWEEKDAYSEL_DATE;
 800150c:	2300      	movs	r3, #0
 800150e:	623b      	str	r3, [r7, #32]
  sAlarm.AlarmDateWeekDay = 0x1;
 8001510:	2301      	movs	r3, #1
 8001512:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
  sAlarm.Alarm = RTC_ALARM_A;
 8001516:	f44f 7380 	mov.w	r3, #256	; 0x100
 800151a:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 800151c:	463b      	mov	r3, r7
 800151e:	2201      	movs	r2, #1
 8001520:	4619      	mov	r1, r3
 8001522:	4812      	ldr	r0, [pc, #72]	; (800156c <MX_RTC_Init+0x144>)
 8001524:	f009 f85a 	bl	800a5dc <HAL_RTC_SetAlarm>
 8001528:	4603      	mov	r3, r0
 800152a:	2b00      	cmp	r3, #0
 800152c:	d001      	beq.n	8001532 <MX_RTC_Init+0x10a>
  {
    Error_Handler();
 800152e:	f002 fa81 	bl	8003a34 <Error_Handler>
  }
  /** Enable the Alarm B
  */
  sAlarm.Alarm = RTC_ALARM_B;
 8001532:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001536:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_RTC_SetAlarm(&hrtc, &sAlarm, RTC_FORMAT_BCD) != HAL_OK)
 8001538:	463b      	mov	r3, r7
 800153a:	2201      	movs	r2, #1
 800153c:	4619      	mov	r1, r3
 800153e:	480b      	ldr	r0, [pc, #44]	; (800156c <MX_RTC_Init+0x144>)
 8001540:	f009 f84c 	bl	800a5dc <HAL_RTC_SetAlarm>
 8001544:	4603      	mov	r3, r0
 8001546:	2b00      	cmp	r3, #0
 8001548:	d001      	beq.n	800154e <MX_RTC_Init+0x126>
  {
    Error_Handler();
 800154a:	f002 fa73 	bl	8003a34 <Error_Handler>
  }
  /** Enable the TimeStamp
  */
  if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_POS1) != HAL_OK)
 800154e:	2202      	movs	r2, #2
 8001550:	2100      	movs	r1, #0
 8001552:	4806      	ldr	r0, [pc, #24]	; (800156c <MX_RTC_Init+0x144>)
 8001554:	f009 f9cc 	bl	800a8f0 <HAL_RTCEx_SetTimeStamp>
 8001558:	4603      	mov	r3, r0
 800155a:	2b00      	cmp	r3, #0
 800155c:	d001      	beq.n	8001562 <MX_RTC_Init+0x13a>
  {
    Error_Handler();
 800155e:	f002 fa69 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN RTC_Init 2 */

  /* USER CODE END RTC_Init 2 */

}
 8001562:	bf00      	nop
 8001564:	3748      	adds	r7, #72	; 0x48
 8001566:	46bd      	mov	sp, r7
 8001568:	bd80      	pop	{r7, pc}
 800156a:	bf00      	nop
 800156c:	20009e88 	.word	0x20009e88
 8001570:	40002800 	.word	0x40002800

08001574 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8001574:	b580      	push	{r7, lr}
 8001576:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8001578:	4b1b      	ldr	r3, [pc, #108]	; (80015e8 <MX_SPI2_Init+0x74>)
 800157a:	4a1c      	ldr	r2, [pc, #112]	; (80015ec <MX_SPI2_Init+0x78>)
 800157c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800157e:	4b1a      	ldr	r3, [pc, #104]	; (80015e8 <MX_SPI2_Init+0x74>)
 8001580:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001584:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001586:	4b18      	ldr	r3, [pc, #96]	; (80015e8 <MX_SPI2_Init+0x74>)
 8001588:	2200      	movs	r2, #0
 800158a:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 800158c:	4b16      	ldr	r3, [pc, #88]	; (80015e8 <MX_SPI2_Init+0x74>)
 800158e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001592:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001594:	4b14      	ldr	r3, [pc, #80]	; (80015e8 <MX_SPI2_Init+0x74>)
 8001596:	2200      	movs	r2, #0
 8001598:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 800159a:	4b13      	ldr	r3, [pc, #76]	; (80015e8 <MX_SPI2_Init+0x74>)
 800159c:	2200      	movs	r2, #0
 800159e:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_HARD_OUTPUT;
 80015a0:	4b11      	ldr	r3, [pc, #68]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015a2:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80015a6:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80015a8:	4b0f      	ldr	r3, [pc, #60]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015aa:	2200      	movs	r2, #0
 80015ac:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80015ae:	4b0e      	ldr	r3, [pc, #56]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015b0:	2200      	movs	r2, #0
 80015b2:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80015b4:	4b0c      	ldr	r3, [pc, #48]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015b6:	2200      	movs	r2, #0
 80015b8:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80015ba:	4b0b      	ldr	r3, [pc, #44]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015bc:	2200      	movs	r2, #0
 80015be:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 7;
 80015c0:	4b09      	ldr	r3, [pc, #36]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015c2:	2207      	movs	r2, #7
 80015c4:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 80015c6:	4b08      	ldr	r3, [pc, #32]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015c8:	2200      	movs	r2, #0
 80015ca:	631a      	str	r2, [r3, #48]	; 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 80015cc:	4b06      	ldr	r3, [pc, #24]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015ce:	2208      	movs	r2, #8
 80015d0:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80015d2:	4805      	ldr	r0, [pc, #20]	; (80015e8 <MX_SPI2_Init+0x74>)
 80015d4:	f009 fa61 	bl	800aa9a <HAL_SPI_Init>
 80015d8:	4603      	mov	r3, r0
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d001      	beq.n	80015e2 <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 80015de:	f002 fa29 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 80015e2:	bf00      	nop
 80015e4:	bd80      	pop	{r7, pc}
 80015e6:	bf00      	nop
 80015e8:	20009ac0 	.word	0x20009ac0
 80015ec:	40003800 	.word	0x40003800

080015f0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80015f0:	b580      	push	{r7, lr}
 80015f2:	b088      	sub	sp, #32
 80015f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80015f6:	f107 0310 	add.w	r3, r7, #16
 80015fa:	2200      	movs	r2, #0
 80015fc:	601a      	str	r2, [r3, #0]
 80015fe:	605a      	str	r2, [r3, #4]
 8001600:	609a      	str	r2, [r3, #8]
 8001602:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001604:	1d3b      	adds	r3, r7, #4
 8001606:	2200      	movs	r2, #0
 8001608:	601a      	str	r2, [r3, #0]
 800160a:	605a      	str	r2, [r3, #4]
 800160c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 800160e:	4b20      	ldr	r3, [pc, #128]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001610:	4a20      	ldr	r2, [pc, #128]	; (8001694 <MX_TIM1_Init+0xa4>)
 8001612:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8001614:	4b1e      	ldr	r3, [pc, #120]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001616:	2200      	movs	r2, #0
 8001618:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800161a:	4b1d      	ldr	r3, [pc, #116]	; (8001690 <MX_TIM1_Init+0xa0>)
 800161c:	2200      	movs	r2, #0
 800161e:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8001620:	4b1b      	ldr	r3, [pc, #108]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001622:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001626:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001628:	4b19      	ldr	r3, [pc, #100]	; (8001690 <MX_TIM1_Init+0xa0>)
 800162a:	2200      	movs	r2, #0
 800162c:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 800162e:	4b18      	ldr	r3, [pc, #96]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001630:	2200      	movs	r2, #0
 8001632:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001634:	4b16      	ldr	r3, [pc, #88]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001636:	2200      	movs	r2, #0
 8001638:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800163a:	4815      	ldr	r0, [pc, #84]	; (8001690 <MX_TIM1_Init+0xa0>)
 800163c:	f009 fabf 	bl	800abbe <HAL_TIM_Base_Init>
 8001640:	4603      	mov	r3, r0
 8001642:	2b00      	cmp	r3, #0
 8001644:	d001      	beq.n	800164a <MX_TIM1_Init+0x5a>
  {
    Error_Handler();
 8001646:	f002 f9f5 	bl	8003a34 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800164a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800164e:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8001650:	f107 0310 	add.w	r3, r7, #16
 8001654:	4619      	mov	r1, r3
 8001656:	480e      	ldr	r0, [pc, #56]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001658:	f009 fd72 	bl	800b140 <HAL_TIM_ConfigClockSource>
 800165c:	4603      	mov	r3, r0
 800165e:	2b00      	cmp	r3, #0
 8001660:	d001      	beq.n	8001666 <MX_TIM1_Init+0x76>
  {
    Error_Handler();
 8001662:	f002 f9e7 	bl	8003a34 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001666:	2300      	movs	r3, #0
 8001668:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 800166a:	2300      	movs	r3, #0
 800166c:	60bb      	str	r3, [r7, #8]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800166e:	2300      	movs	r3, #0
 8001670:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001672:	1d3b      	adds	r3, r7, #4
 8001674:	4619      	mov	r1, r3
 8001676:	4806      	ldr	r0, [pc, #24]	; (8001690 <MX_TIM1_Init+0xa0>)
 8001678:	f00a faa6 	bl	800bbc8 <HAL_TIMEx_MasterConfigSynchronization>
 800167c:	4603      	mov	r3, r0
 800167e:	2b00      	cmp	r3, #0
 8001680:	d001      	beq.n	8001686 <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 8001682:	f002 f9d7 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8001686:	bf00      	nop
 8001688:	3720      	adds	r7, #32
 800168a:	46bd      	mov	sp, r7
 800168c:	bd80      	pop	{r7, pc}
 800168e:	bf00      	nop
 8001690:	20009ea8 	.word	0x20009ea8
 8001694:	40010000 	.word	0x40010000

08001698 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001698:	b580      	push	{r7, lr}
 800169a:	b088      	sub	sp, #32
 800169c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800169e:	f107 0310 	add.w	r3, r7, #16
 80016a2:	2200      	movs	r2, #0
 80016a4:	601a      	str	r2, [r3, #0]
 80016a6:	605a      	str	r2, [r3, #4]
 80016a8:	609a      	str	r2, [r3, #8]
 80016aa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80016ac:	1d3b      	adds	r3, r7, #4
 80016ae:	2200      	movs	r2, #0
 80016b0:	601a      	str	r2, [r3, #0]
 80016b2:	605a      	str	r2, [r3, #4]
 80016b4:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80016b6:	4b1e      	ldr	r3, [pc, #120]	; (8001730 <MX_TIM2_Init+0x98>)
 80016b8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80016bc:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 80016be:	4b1c      	ldr	r3, [pc, #112]	; (8001730 <MX_TIM2_Init+0x98>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80016c4:	4b1a      	ldr	r3, [pc, #104]	; (8001730 <MX_TIM2_Init+0x98>)
 80016c6:	2200      	movs	r2, #0
 80016c8:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 80016ca:	4b19      	ldr	r3, [pc, #100]	; (8001730 <MX_TIM2_Init+0x98>)
 80016cc:	f04f 32ff 	mov.w	r2, #4294967295
 80016d0:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80016d2:	4b17      	ldr	r3, [pc, #92]	; (8001730 <MX_TIM2_Init+0x98>)
 80016d4:	2200      	movs	r2, #0
 80016d6:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80016d8:	4b15      	ldr	r3, [pc, #84]	; (8001730 <MX_TIM2_Init+0x98>)
 80016da:	2200      	movs	r2, #0
 80016dc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80016de:	4814      	ldr	r0, [pc, #80]	; (8001730 <MX_TIM2_Init+0x98>)
 80016e0:	f009 fa6d 	bl	800abbe <HAL_TIM_Base_Init>
 80016e4:	4603      	mov	r3, r0
 80016e6:	2b00      	cmp	r3, #0
 80016e8:	d001      	beq.n	80016ee <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 80016ea:	f002 f9a3 	bl	8003a34 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80016ee:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80016f2:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80016f4:	f107 0310 	add.w	r3, r7, #16
 80016f8:	4619      	mov	r1, r3
 80016fa:	480d      	ldr	r0, [pc, #52]	; (8001730 <MX_TIM2_Init+0x98>)
 80016fc:	f009 fd20 	bl	800b140 <HAL_TIM_ConfigClockSource>
 8001700:	4603      	mov	r3, r0
 8001702:	2b00      	cmp	r3, #0
 8001704:	d001      	beq.n	800170a <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 8001706:	f002 f995 	bl	8003a34 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800170a:	2300      	movs	r3, #0
 800170c:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800170e:	2300      	movs	r3, #0
 8001710:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001712:	1d3b      	adds	r3, r7, #4
 8001714:	4619      	mov	r1, r3
 8001716:	4806      	ldr	r0, [pc, #24]	; (8001730 <MX_TIM2_Init+0x98>)
 8001718:	f00a fa56 	bl	800bbc8 <HAL_TIMEx_MasterConfigSynchronization>
 800171c:	4603      	mov	r3, r0
 800171e:	2b00      	cmp	r3, #0
 8001720:	d001      	beq.n	8001726 <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 8001722:	f002 f987 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001726:	bf00      	nop
 8001728:	3720      	adds	r7, #32
 800172a:	46bd      	mov	sp, r7
 800172c:	bd80      	pop	{r7, pc}
 800172e:	bf00      	nop
 8001730:	20009fac 	.word	0x20009fac

08001734 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001734:	b580      	push	{r7, lr}
 8001736:	b094      	sub	sp, #80	; 0x50
 8001738:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800173a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800173e:	2200      	movs	r2, #0
 8001740:	601a      	str	r2, [r3, #0]
 8001742:	605a      	str	r2, [r3, #4]
 8001744:	609a      	str	r2, [r3, #8]
 8001746:	60da      	str	r2, [r3, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8001748:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800174c:	2200      	movs	r2, #0
 800174e:	601a      	str	r2, [r3, #0]
 8001750:	605a      	str	r2, [r3, #4]
 8001752:	609a      	str	r2, [r3, #8]
 8001754:	60da      	str	r2, [r3, #12]
 8001756:	611a      	str	r2, [r3, #16]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001758:	f107 0320 	add.w	r3, r7, #32
 800175c:	2200      	movs	r2, #0
 800175e:	601a      	str	r2, [r3, #0]
 8001760:	605a      	str	r2, [r3, #4]
 8001762:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001764:	1d3b      	adds	r3, r7, #4
 8001766:	2200      	movs	r2, #0
 8001768:	601a      	str	r2, [r3, #0]
 800176a:	605a      	str	r2, [r3, #4]
 800176c:	609a      	str	r2, [r3, #8]
 800176e:	60da      	str	r2, [r3, #12]
 8001770:	611a      	str	r2, [r3, #16]
 8001772:	615a      	str	r2, [r3, #20]
 8001774:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001776:	4b34      	ldr	r3, [pc, #208]	; (8001848 <MX_TIM3_Init+0x114>)
 8001778:	4a34      	ldr	r2, [pc, #208]	; (800184c <MX_TIM3_Init+0x118>)
 800177a:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 800177c:	4b32      	ldr	r3, [pc, #200]	; (8001848 <MX_TIM3_Init+0x114>)
 800177e:	2200      	movs	r2, #0
 8001780:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001782:	4b31      	ldr	r3, [pc, #196]	; (8001848 <MX_TIM3_Init+0x114>)
 8001784:	2200      	movs	r2, #0
 8001786:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8001788:	4b2f      	ldr	r3, [pc, #188]	; (8001848 <MX_TIM3_Init+0x114>)
 800178a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800178e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001790:	4b2d      	ldr	r3, [pc, #180]	; (8001848 <MX_TIM3_Init+0x114>)
 8001792:	2200      	movs	r2, #0
 8001794:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001796:	4b2c      	ldr	r3, [pc, #176]	; (8001848 <MX_TIM3_Init+0x114>)
 8001798:	2200      	movs	r2, #0
 800179a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800179c:	482a      	ldr	r0, [pc, #168]	; (8001848 <MX_TIM3_Init+0x114>)
 800179e:	f009 fa0e 	bl	800abbe <HAL_TIM_Base_Init>
 80017a2:	4603      	mov	r3, r0
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d001      	beq.n	80017ac <MX_TIM3_Init+0x78>
  {
    Error_Handler();
 80017a8:	f002 f944 	bl	8003a34 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017ac:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80017b0:	643b      	str	r3, [r7, #64]	; 0x40
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80017b2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80017b6:	4619      	mov	r1, r3
 80017b8:	4823      	ldr	r0, [pc, #140]	; (8001848 <MX_TIM3_Init+0x114>)
 80017ba:	f009 fcc1 	bl	800b140 <HAL_TIM_ConfigClockSource>
 80017be:	4603      	mov	r3, r0
 80017c0:	2b00      	cmp	r3, #0
 80017c2:	d001      	beq.n	80017c8 <MX_TIM3_Init+0x94>
  {
    Error_Handler();
 80017c4:	f002 f936 	bl	8003a34 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 80017c8:	481f      	ldr	r0, [pc, #124]	; (8001848 <MX_TIM3_Init+0x114>)
 80017ca:	f009 fa4d 	bl	800ac68 <HAL_TIM_PWM_Init>
 80017ce:	4603      	mov	r3, r0
 80017d0:	2b00      	cmp	r3, #0
 80017d2:	d001      	beq.n	80017d8 <MX_TIM3_Init+0xa4>
  {
    Error_Handler();
 80017d4:	f002 f92e 	bl	8003a34 <Error_Handler>
  }
  sSlaveConfig.SlaveMode = TIM_SLAVEMODE_DISABLE;
 80017d8:	2300      	movs	r3, #0
 80017da:	62fb      	str	r3, [r7, #44]	; 0x2c
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 80017dc:	2300      	movs	r3, #0
 80017de:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 80017e0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80017e4:	4619      	mov	r1, r3
 80017e6:	4818      	ldr	r0, [pc, #96]	; (8001848 <MX_TIM3_Init+0x114>)
 80017e8:	f009 fd64 	bl	800b2b4 <HAL_TIM_SlaveConfigSynchro>
 80017ec:	4603      	mov	r3, r0
 80017ee:	2b00      	cmp	r3, #0
 80017f0:	d001      	beq.n	80017f6 <MX_TIM3_Init+0xc2>
  {
    Error_Handler();
 80017f2:	f002 f91f 	bl	8003a34 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80017f6:	2300      	movs	r3, #0
 80017f8:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017fa:	2300      	movs	r3, #0
 80017fc:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80017fe:	f107 0320 	add.w	r3, r7, #32
 8001802:	4619      	mov	r1, r3
 8001804:	4810      	ldr	r0, [pc, #64]	; (8001848 <MX_TIM3_Init+0x114>)
 8001806:	f00a f9df 	bl	800bbc8 <HAL_TIMEx_MasterConfigSynchronization>
 800180a:	4603      	mov	r3, r0
 800180c:	2b00      	cmp	r3, #0
 800180e:	d001      	beq.n	8001814 <MX_TIM3_Init+0xe0>
  {
    Error_Handler();
 8001810:	f002 f910 	bl	8003a34 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001814:	2360      	movs	r3, #96	; 0x60
 8001816:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001818:	2300      	movs	r3, #0
 800181a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800181c:	2300      	movs	r3, #0
 800181e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001820:	2300      	movs	r3, #0
 8001822:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001824:	1d3b      	adds	r3, r7, #4
 8001826:	2200      	movs	r2, #0
 8001828:	4619      	mov	r1, r3
 800182a:	4807      	ldr	r0, [pc, #28]	; (8001848 <MX_TIM3_Init+0x114>)
 800182c:	f009 fb70 	bl	800af10 <HAL_TIM_PWM_ConfigChannel>
 8001830:	4603      	mov	r3, r0
 8001832:	2b00      	cmp	r3, #0
 8001834:	d001      	beq.n	800183a <MX_TIM3_Init+0x106>
  {
    Error_Handler();
 8001836:	f002 f8fd 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 800183a:	4803      	ldr	r0, [pc, #12]	; (8001848 <MX_TIM3_Init+0x114>)
 800183c:	f004 faae 	bl	8005d9c <HAL_TIM_MspPostInit>

}
 8001840:	bf00      	nop
 8001842:	3750      	adds	r7, #80	; 0x50
 8001844:	46bd      	mov	sp, r7
 8001846:	bd80      	pop	{r7, pc}
 8001848:	20009c78 	.word	0x20009c78
 800184c:	40000400 	.word	0x40000400

08001850 <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8001850:	b580      	push	{r7, lr}
 8001852:	b088      	sub	sp, #32
 8001854:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001856:	f107 0310 	add.w	r3, r7, #16
 800185a:	2200      	movs	r2, #0
 800185c:	601a      	str	r2, [r3, #0]
 800185e:	605a      	str	r2, [r3, #4]
 8001860:	609a      	str	r2, [r3, #8]
 8001862:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001864:	1d3b      	adds	r3, r7, #4
 8001866:	2200      	movs	r2, #0
 8001868:	601a      	str	r2, [r3, #0]
 800186a:	605a      	str	r2, [r3, #4]
 800186c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 800186e:	4b1d      	ldr	r3, [pc, #116]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001870:	4a1d      	ldr	r2, [pc, #116]	; (80018e8 <MX_TIM5_Init+0x98>)
 8001872:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 8001874:	4b1b      	ldr	r3, [pc, #108]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001876:	2200      	movs	r2, #0
 8001878:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 800187a:	4b1a      	ldr	r3, [pc, #104]	; (80018e4 <MX_TIM5_Init+0x94>)
 800187c:	2200      	movs	r2, #0
 800187e:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8001880:	4b18      	ldr	r3, [pc, #96]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001882:	f04f 32ff 	mov.w	r2, #4294967295
 8001886:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001888:	4b16      	ldr	r3, [pc, #88]	; (80018e4 <MX_TIM5_Init+0x94>)
 800188a:	2200      	movs	r2, #0
 800188c:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800188e:	4b15      	ldr	r3, [pc, #84]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001890:	2200      	movs	r2, #0
 8001892:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 8001894:	4813      	ldr	r0, [pc, #76]	; (80018e4 <MX_TIM5_Init+0x94>)
 8001896:	f009 f992 	bl	800abbe <HAL_TIM_Base_Init>
 800189a:	4603      	mov	r3, r0
 800189c:	2b00      	cmp	r3, #0
 800189e:	d001      	beq.n	80018a4 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 80018a0:	f002 f8c8 	bl	8003a34 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018a4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80018a8:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 80018aa:	f107 0310 	add.w	r3, r7, #16
 80018ae:	4619      	mov	r1, r3
 80018b0:	480c      	ldr	r0, [pc, #48]	; (80018e4 <MX_TIM5_Init+0x94>)
 80018b2:	f009 fc45 	bl	800b140 <HAL_TIM_ConfigClockSource>
 80018b6:	4603      	mov	r3, r0
 80018b8:	2b00      	cmp	r3, #0
 80018ba:	d001      	beq.n	80018c0 <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 80018bc:	f002 f8ba 	bl	8003a34 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80018c0:	2300      	movs	r3, #0
 80018c2:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018c4:	2300      	movs	r3, #0
 80018c6:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 80018c8:	1d3b      	adds	r3, r7, #4
 80018ca:	4619      	mov	r1, r3
 80018cc:	4805      	ldr	r0, [pc, #20]	; (80018e4 <MX_TIM5_Init+0x94>)
 80018ce:	f00a f97b 	bl	800bbc8 <HAL_TIMEx_MasterConfigSynchronization>
 80018d2:	4603      	mov	r3, r0
 80018d4:	2b00      	cmp	r3, #0
 80018d6:	d001      	beq.n	80018dc <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 80018d8:	f002 f8ac 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 80018dc:	bf00      	nop
 80018de:	3720      	adds	r7, #32
 80018e0:	46bd      	mov	sp, r7
 80018e2:	bd80      	pop	{r7, pc}
 80018e4:	20009c38 	.word	0x20009c38
 80018e8:	40000c00 	.word	0x40000c00

080018ec <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 80018ec:	b580      	push	{r7, lr}
 80018ee:	b09a      	sub	sp, #104	; 0x68
 80018f0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80018f2:	f107 0358 	add.w	r3, r7, #88	; 0x58
 80018f6:	2200      	movs	r2, #0
 80018f8:	601a      	str	r2, [r3, #0]
 80018fa:	605a      	str	r2, [r3, #4]
 80018fc:	609a      	str	r2, [r3, #8]
 80018fe:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001900:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8001904:	2200      	movs	r2, #0
 8001906:	601a      	str	r2, [r3, #0]
 8001908:	605a      	str	r2, [r3, #4]
 800190a:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800190c:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8001910:	2200      	movs	r2, #0
 8001912:	601a      	str	r2, [r3, #0]
 8001914:	605a      	str	r2, [r3, #4]
 8001916:	609a      	str	r2, [r3, #8]
 8001918:	60da      	str	r2, [r3, #12]
 800191a:	611a      	str	r2, [r3, #16]
 800191c:	615a      	str	r2, [r3, #20]
 800191e:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001920:	1d3b      	adds	r3, r7, #4
 8001922:	222c      	movs	r2, #44	; 0x2c
 8001924:	2100      	movs	r1, #0
 8001926:	4618      	mov	r0, r3
 8001928:	f00d fd9f 	bl	800f46a <memset>

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 800192c:	4b42      	ldr	r3, [pc, #264]	; (8001a38 <MX_TIM8_Init+0x14c>)
 800192e:	4a43      	ldr	r2, [pc, #268]	; (8001a3c <MX_TIM8_Init+0x150>)
 8001930:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 8001932:	4b41      	ldr	r3, [pc, #260]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001934:	2200      	movs	r2, #0
 8001936:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001938:	4b3f      	ldr	r3, [pc, #252]	; (8001a38 <MX_TIM8_Init+0x14c>)
 800193a:	2200      	movs	r2, #0
 800193c:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 65535;
 800193e:	4b3e      	ldr	r3, [pc, #248]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001940:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001944:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001946:	4b3c      	ldr	r3, [pc, #240]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001948:	2200      	movs	r2, #0
 800194a:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 800194c:	4b3a      	ldr	r3, [pc, #232]	; (8001a38 <MX_TIM8_Init+0x14c>)
 800194e:	2200      	movs	r2, #0
 8001950:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001952:	4b39      	ldr	r3, [pc, #228]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001954:	2200      	movs	r2, #0
 8001956:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 8001958:	4837      	ldr	r0, [pc, #220]	; (8001a38 <MX_TIM8_Init+0x14c>)
 800195a:	f009 f930 	bl	800abbe <HAL_TIM_Base_Init>
 800195e:	4603      	mov	r3, r0
 8001960:	2b00      	cmp	r3, #0
 8001962:	d001      	beq.n	8001968 <MX_TIM8_Init+0x7c>
  {
    Error_Handler();
 8001964:	f002 f866 	bl	8003a34 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001968:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800196c:	65bb      	str	r3, [r7, #88]	; 0x58
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 800196e:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8001972:	4619      	mov	r1, r3
 8001974:	4830      	ldr	r0, [pc, #192]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001976:	f009 fbe3 	bl	800b140 <HAL_TIM_ConfigClockSource>
 800197a:	4603      	mov	r3, r0
 800197c:	2b00      	cmp	r3, #0
 800197e:	d001      	beq.n	8001984 <MX_TIM8_Init+0x98>
  {
    Error_Handler();
 8001980:	f002 f858 	bl	8003a34 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 8001984:	482c      	ldr	r0, [pc, #176]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001986:	f009 f96f 	bl	800ac68 <HAL_TIM_PWM_Init>
 800198a:	4603      	mov	r3, r0
 800198c:	2b00      	cmp	r3, #0
 800198e:	d001      	beq.n	8001994 <MX_TIM8_Init+0xa8>
  {
    Error_Handler();
 8001990:	f002 f850 	bl	8003a34 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001994:	2300      	movs	r3, #0
 8001996:	64fb      	str	r3, [r7, #76]	; 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8001998:	2300      	movs	r3, #0
 800199a:	653b      	str	r3, [r7, #80]	; 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800199c:	2300      	movs	r3, #0
 800199e:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 80019a0:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 80019a4:	4619      	mov	r1, r3
 80019a6:	4824      	ldr	r0, [pc, #144]	; (8001a38 <MX_TIM8_Init+0x14c>)
 80019a8:	f00a f90e 	bl	800bbc8 <HAL_TIMEx_MasterConfigSynchronization>
 80019ac:	4603      	mov	r3, r0
 80019ae:	2b00      	cmp	r3, #0
 80019b0:	d001      	beq.n	80019b6 <MX_TIM8_Init+0xca>
  {
    Error_Handler();
 80019b2:	f002 f83f 	bl	8003a34 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80019b6:	2360      	movs	r3, #96	; 0x60
 80019b8:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.Pulse = 0;
 80019ba:	2300      	movs	r3, #0
 80019bc:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80019be:	2300      	movs	r3, #0
 80019c0:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80019c2:	2300      	movs	r3, #0
 80019c4:	643b      	str	r3, [r7, #64]	; 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80019c6:	2300      	movs	r3, #0
 80019c8:	647b      	str	r3, [r7, #68]	; 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80019ca:	2300      	movs	r3, #0
 80019cc:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 80019ce:	f107 0330 	add.w	r3, r7, #48	; 0x30
 80019d2:	220c      	movs	r2, #12
 80019d4:	4619      	mov	r1, r3
 80019d6:	4818      	ldr	r0, [pc, #96]	; (8001a38 <MX_TIM8_Init+0x14c>)
 80019d8:	f009 fa9a 	bl	800af10 <HAL_TIM_PWM_ConfigChannel>
 80019dc:	4603      	mov	r3, r0
 80019de:	2b00      	cmp	r3, #0
 80019e0:	d001      	beq.n	80019e6 <MX_TIM8_Init+0xfa>
  {
    Error_Handler();
 80019e2:	f002 f827 	bl	8003a34 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80019e6:	2300      	movs	r3, #0
 80019e8:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80019ea:	2300      	movs	r3, #0
 80019ec:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80019ee:	2300      	movs	r3, #0
 80019f0:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80019f2:	2300      	movs	r3, #0
 80019f4:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80019f6:	2300      	movs	r3, #0
 80019f8:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80019fa:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80019fe:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 8001a00:	2300      	movs	r3, #0
 8001a02:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8001a04:	2300      	movs	r3, #0
 8001a06:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8001a08:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8001a0c:	627b      	str	r3, [r7, #36]	; 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 8001a0e:	2300      	movs	r3, #0
 8001a10:	62bb      	str	r3, [r7, #40]	; 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001a12:	2300      	movs	r3, #0
 8001a14:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 8001a16:	1d3b      	adds	r3, r7, #4
 8001a18:	4619      	mov	r1, r3
 8001a1a:	4807      	ldr	r0, [pc, #28]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001a1c:	f00a f962 	bl	800bce4 <HAL_TIMEx_ConfigBreakDeadTime>
 8001a20:	4603      	mov	r3, r0
 8001a22:	2b00      	cmp	r3, #0
 8001a24:	d001      	beq.n	8001a2a <MX_TIM8_Init+0x13e>
  {
    Error_Handler();
 8001a26:	f002 f805 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */
  HAL_TIM_MspPostInit(&htim8);
 8001a2a:	4803      	ldr	r0, [pc, #12]	; (8001a38 <MX_TIM8_Init+0x14c>)
 8001a2c:	f004 f9b6 	bl	8005d9c <HAL_TIM_MspPostInit>

}
 8001a30:	bf00      	nop
 8001a32:	3768      	adds	r7, #104	; 0x68
 8001a34:	46bd      	mov	sp, r7
 8001a36:	bd80      	pop	{r7, pc}
 8001a38:	20009ba8 	.word	0x20009ba8
 8001a3c:	40010400 	.word	0x40010400

08001a40 <MX_UART7_Init>:
  * @brief UART7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART7_Init(void)
{
 8001a40:	b580      	push	{r7, lr}
 8001a42:	af00      	add	r7, sp, #0
  /* USER CODE END UART7_Init 0 */

  /* USER CODE BEGIN UART7_Init 1 */

  /* USER CODE END UART7_Init 1 */
  huart7.Instance = UART7;
 8001a44:	4b14      	ldr	r3, [pc, #80]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a46:	4a15      	ldr	r2, [pc, #84]	; (8001a9c <MX_UART7_Init+0x5c>)
 8001a48:	601a      	str	r2, [r3, #0]
  huart7.Init.BaudRate = 115200;
 8001a4a:	4b13      	ldr	r3, [pc, #76]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a4c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001a50:	605a      	str	r2, [r3, #4]
  huart7.Init.WordLength = UART_WORDLENGTH_8B;
 8001a52:	4b11      	ldr	r3, [pc, #68]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a54:	2200      	movs	r2, #0
 8001a56:	609a      	str	r2, [r3, #8]
  huart7.Init.StopBits = UART_STOPBITS_1;
 8001a58:	4b0f      	ldr	r3, [pc, #60]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	60da      	str	r2, [r3, #12]
  huart7.Init.Parity = UART_PARITY_NONE;
 8001a5e:	4b0e      	ldr	r3, [pc, #56]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a60:	2200      	movs	r2, #0
 8001a62:	611a      	str	r2, [r3, #16]
  huart7.Init.Mode = UART_MODE_TX_RX;
 8001a64:	4b0c      	ldr	r3, [pc, #48]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a66:	220c      	movs	r2, #12
 8001a68:	615a      	str	r2, [r3, #20]
  huart7.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001a6a:	4b0b      	ldr	r3, [pc, #44]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a6c:	2200      	movs	r2, #0
 8001a6e:	619a      	str	r2, [r3, #24]
  huart7.Init.OverSampling = UART_OVERSAMPLING_16;
 8001a70:	4b09      	ldr	r3, [pc, #36]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a72:	2200      	movs	r2, #0
 8001a74:	61da      	str	r2, [r3, #28]
  huart7.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001a76:	4b08      	ldr	r3, [pc, #32]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a78:	2200      	movs	r2, #0
 8001a7a:	621a      	str	r2, [r3, #32]
  huart7.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001a7c:	4b06      	ldr	r3, [pc, #24]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a7e:	2200      	movs	r2, #0
 8001a80:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart7) != HAL_OK)
 8001a82:	4805      	ldr	r0, [pc, #20]	; (8001a98 <MX_UART7_Init+0x58>)
 8001a84:	f00a f9ca 	bl	800be1c <HAL_UART_Init>
 8001a88:	4603      	mov	r3, r0
 8001a8a:	2b00      	cmp	r3, #0
 8001a8c:	d001      	beq.n	8001a92 <MX_UART7_Init+0x52>
  {
    Error_Handler();
 8001a8e:	f001 ffd1 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN UART7_Init 2 */

  /* USER CODE END UART7_Init 2 */

}
 8001a92:	bf00      	nop
 8001a94:	bd80      	pop	{r7, pc}
 8001a96:	bf00      	nop
 8001a98:	20009b24 	.word	0x20009b24
 8001a9c:	40007800 	.word	0x40007800

08001aa0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001aa0:	b580      	push	{r7, lr}
 8001aa2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001aa4:	4b14      	ldr	r3, [pc, #80]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001aa6:	4a15      	ldr	r2, [pc, #84]	; (8001afc <MX_USART1_UART_Init+0x5c>)
 8001aa8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8001aaa:	4b13      	ldr	r3, [pc, #76]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001aac:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001ab0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001ab2:	4b11      	ldr	r3, [pc, #68]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ab4:	2200      	movs	r2, #0
 8001ab6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001ab8:	4b0f      	ldr	r3, [pc, #60]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001aba:	2200      	movs	r2, #0
 8001abc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001abe:	4b0e      	ldr	r3, [pc, #56]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ac0:	2200      	movs	r2, #0
 8001ac2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001ac4:	4b0c      	ldr	r3, [pc, #48]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ac6:	220c      	movs	r2, #12
 8001ac8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001aca:	4b0b      	ldr	r3, [pc, #44]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001acc:	2200      	movs	r2, #0
 8001ace:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001ad0:	4b09      	ldr	r3, [pc, #36]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ad2:	2200      	movs	r2, #0
 8001ad4:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001ad6:	4b08      	ldr	r3, [pc, #32]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ad8:	2200      	movs	r2, #0
 8001ada:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001adc:	4b06      	ldr	r3, [pc, #24]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ade:	2200      	movs	r2, #0
 8001ae0:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001ae2:	4805      	ldr	r0, [pc, #20]	; (8001af8 <MX_USART1_UART_Init+0x58>)
 8001ae4:	f00a f99a 	bl	800be1c <HAL_UART_Init>
 8001ae8:	4603      	mov	r3, r0
 8001aea:	2b00      	cmp	r3, #0
 8001aec:	d001      	beq.n	8001af2 <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 8001aee:	f001 ffa1 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001af2:	bf00      	nop
 8001af4:	bd80      	pop	{r7, pc}
 8001af6:	bf00      	nop
 8001af8:	20009df0 	.word	0x20009df0
 8001afc:	40011000 	.word	0x40011000

08001b00 <MX_USART6_UART_Init>:
  * @brief USART6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART6_UART_Init(void)
{
 8001b00:	b580      	push	{r7, lr}
 8001b02:	af00      	add	r7, sp, #0
  /* USER CODE END USART6_Init 0 */

  /* USER CODE BEGIN USART6_Init 1 */

  /* USER CODE END USART6_Init 1 */
  huart6.Instance = USART6;
 8001b04:	4b14      	ldr	r3, [pc, #80]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b06:	4a15      	ldr	r2, [pc, #84]	; (8001b5c <MX_USART6_UART_Init+0x5c>)
 8001b08:	601a      	str	r2, [r3, #0]
  huart6.Init.BaudRate = 115200;
 8001b0a:	4b13      	ldr	r3, [pc, #76]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b0c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001b10:	605a      	str	r2, [r3, #4]
  huart6.Init.WordLength = UART_WORDLENGTH_8B;
 8001b12:	4b11      	ldr	r3, [pc, #68]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b14:	2200      	movs	r2, #0
 8001b16:	609a      	str	r2, [r3, #8]
  huart6.Init.StopBits = UART_STOPBITS_1;
 8001b18:	4b0f      	ldr	r3, [pc, #60]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b1a:	2200      	movs	r2, #0
 8001b1c:	60da      	str	r2, [r3, #12]
  huart6.Init.Parity = UART_PARITY_NONE;
 8001b1e:	4b0e      	ldr	r3, [pc, #56]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b20:	2200      	movs	r2, #0
 8001b22:	611a      	str	r2, [r3, #16]
  huart6.Init.Mode = UART_MODE_TX_RX;
 8001b24:	4b0c      	ldr	r3, [pc, #48]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b26:	220c      	movs	r2, #12
 8001b28:	615a      	str	r2, [r3, #20]
  huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001b2a:	4b0b      	ldr	r3, [pc, #44]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b2c:	2200      	movs	r2, #0
 8001b2e:	619a      	str	r2, [r3, #24]
  huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 8001b30:	4b09      	ldr	r3, [pc, #36]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b32:	2200      	movs	r2, #0
 8001b34:	61da      	str	r2, [r3, #28]
  huart6.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001b36:	4b08      	ldr	r3, [pc, #32]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b38:	2200      	movs	r2, #0
 8001b3a:	621a      	str	r2, [r3, #32]
  huart6.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001b3c:	4b06      	ldr	r3, [pc, #24]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b3e:	2200      	movs	r2, #0
 8001b40:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart6) != HAL_OK)
 8001b42:	4805      	ldr	r0, [pc, #20]	; (8001b58 <MX_USART6_UART_Init+0x58>)
 8001b44:	f00a f96a 	bl	800be1c <HAL_UART_Init>
 8001b48:	4603      	mov	r3, r0
 8001b4a:	2b00      	cmp	r3, #0
 8001b4c:	d001      	beq.n	8001b52 <MX_USART6_UART_Init+0x52>
  {
    Error_Handler();
 8001b4e:	f001 ff71 	bl	8003a34 <Error_Handler>
  }
  /* USER CODE BEGIN USART6_Init 2 */

  /* USER CODE END USART6_Init 2 */

}
 8001b52:	bf00      	nop
 8001b54:	bd80      	pop	{r7, pc}
 8001b56:	bf00      	nop
 8001b58:	20009ee8 	.word	0x20009ee8
 8001b5c:	40011400 	.word	0x40011400

08001b60 <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 8001b60:	b580      	push	{r7, lr}
 8001b62:	b088      	sub	sp, #32
 8001b64:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 8001b66:	1d3b      	adds	r3, r7, #4
 8001b68:	2200      	movs	r2, #0
 8001b6a:	601a      	str	r2, [r3, #0]
 8001b6c:	605a      	str	r2, [r3, #4]
 8001b6e:	609a      	str	r2, [r3, #8]
 8001b70:	60da      	str	r2, [r3, #12]
 8001b72:	611a      	str	r2, [r3, #16]
 8001b74:	615a      	str	r2, [r3, #20]
 8001b76:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001b78:	4b1e      	ldr	r3, [pc, #120]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b7a:	4a1f      	ldr	r2, [pc, #124]	; (8001bf8 <MX_FMC_Init+0x98>)
 8001b7c:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001b7e:	4b1d      	ldr	r3, [pc, #116]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b80:	2200      	movs	r2, #0
 8001b82:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001b84:	4b1b      	ldr	r3, [pc, #108]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b86:	2200      	movs	r2, #0
 8001b88:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001b8a:	4b1a      	ldr	r3, [pc, #104]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b8c:	2204      	movs	r2, #4
 8001b8e:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8001b90:	4b18      	ldr	r3, [pc, #96]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b92:	2210      	movs	r2, #16
 8001b94:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001b96:	4b17      	ldr	r3, [pc, #92]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b98:	2240      	movs	r2, #64	; 0x40
 8001b9a:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_1;
 8001b9c:	4b15      	ldr	r3, [pc, #84]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001b9e:	2280      	movs	r2, #128	; 0x80
 8001ba0:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001ba2:	4b14      	ldr	r3, [pc, #80]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001ba4:	2200      	movs	r2, #0
 8001ba6:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001ba8:	4b12      	ldr	r3, [pc, #72]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001baa:	2200      	movs	r2, #0
 8001bac:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001bae:	4b11      	ldr	r3, [pc, #68]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001bb0:	2200      	movs	r2, #0
 8001bb2:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8001bb4:	4b0f      	ldr	r3, [pc, #60]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001bb6:	2200      	movs	r2, #0
 8001bb8:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 16;
 8001bba:	2310      	movs	r3, #16
 8001bbc:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 16;
 8001bbe:	2310      	movs	r3, #16
 8001bc0:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 16;
 8001bc2:	2310      	movs	r3, #16
 8001bc4:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 16;
 8001bc6:	2310      	movs	r3, #16
 8001bc8:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 16;
 8001bca:	2310      	movs	r3, #16
 8001bcc:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 16;
 8001bce:	2310      	movs	r3, #16
 8001bd0:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 16;
 8001bd2:	2310      	movs	r3, #16
 8001bd4:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001bd6:	1d3b      	adds	r3, r7, #4
 8001bd8:	4619      	mov	r1, r3
 8001bda:	4806      	ldr	r0, [pc, #24]	; (8001bf4 <MX_FMC_Init+0x94>)
 8001bdc:	f008 fede 	bl	800a99c <HAL_SDRAM_Init>
 8001be0:	4603      	mov	r3, r0
 8001be2:	2b00      	cmp	r3, #0
 8001be4:	d001      	beq.n	8001bea <MX_FMC_Init+0x8a>
  {
    Error_Handler( );
 8001be6:	f001 ff25 	bl	8003a34 <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */

  /* USER CODE END FMC_Init 2 */
}
 8001bea:	bf00      	nop
 8001bec:	3720      	adds	r7, #32
 8001bee:	46bd      	mov	sp, r7
 8001bf0:	bd80      	pop	{r7, pc}
 8001bf2:	bf00      	nop
 8001bf4:	20009fec 	.word	0x20009fec
 8001bf8:	a0000140 	.word	0xa0000140

08001bfc <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001bfc:	b580      	push	{r7, lr}
 8001bfe:	b090      	sub	sp, #64	; 0x40
 8001c00:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c02:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001c06:	2200      	movs	r2, #0
 8001c08:	601a      	str	r2, [r3, #0]
 8001c0a:	605a      	str	r2, [r3, #4]
 8001c0c:	609a      	str	r2, [r3, #8]
 8001c0e:	60da      	str	r2, [r3, #12]
 8001c10:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001c12:	4bb0      	ldr	r3, [pc, #704]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c16:	4aaf      	ldr	r2, [pc, #700]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c18:	f043 0310 	orr.w	r3, r3, #16
 8001c1c:	6313      	str	r3, [r2, #48]	; 0x30
 8001c1e:	4bad      	ldr	r3, [pc, #692]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c22:	f003 0310 	and.w	r3, r3, #16
 8001c26:	62bb      	str	r3, [r7, #40]	; 0x28
 8001c28:	6abb      	ldr	r3, [r7, #40]	; 0x28
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c2a:	4baa      	ldr	r3, [pc, #680]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c2e:	4aa9      	ldr	r2, [pc, #676]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c30:	f043 0302 	orr.w	r3, r3, #2
 8001c34:	6313      	str	r3, [r2, #48]	; 0x30
 8001c36:	4ba7      	ldr	r3, [pc, #668]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c3a:	f003 0302 	and.w	r3, r3, #2
 8001c3e:	627b      	str	r3, [r7, #36]	; 0x24
 8001c40:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c42:	4ba4      	ldr	r3, [pc, #656]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c46:	4aa3      	ldr	r2, [pc, #652]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c48:	f043 0301 	orr.w	r3, r3, #1
 8001c4c:	6313      	str	r3, [r2, #48]	; 0x30
 8001c4e:	4ba1      	ldr	r3, [pc, #644]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c52:	f003 0301 	and.w	r3, r3, #1
 8001c56:	623b      	str	r3, [r7, #32]
 8001c58:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c5a:	4b9e      	ldr	r3, [pc, #632]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c5e:	4a9d      	ldr	r2, [pc, #628]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c60:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001c64:	6313      	str	r3, [r2, #48]	; 0x30
 8001c66:	4b9b      	ldr	r3, [pc, #620]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c6a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001c6e:	61fb      	str	r3, [r7, #28]
 8001c70:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001c72:	4b98      	ldr	r3, [pc, #608]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c76:	4a97      	ldr	r2, [pc, #604]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c78:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001c7c:	6313      	str	r3, [r2, #48]	; 0x30
 8001c7e:	4b95      	ldr	r3, [pc, #596]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c82:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001c86:	61bb      	str	r3, [r7, #24]
 8001c88:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c8a:	4b92      	ldr	r3, [pc, #584]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c8e:	4a91      	ldr	r2, [pc, #580]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c90:	f043 0308 	orr.w	r3, r3, #8
 8001c94:	6313      	str	r3, [r2, #48]	; 0x30
 8001c96:	4b8f      	ldr	r3, [pc, #572]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001c98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c9a:	f003 0308 	and.w	r3, r3, #8
 8001c9e:	617b      	str	r3, [r7, #20]
 8001ca0:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001ca2:	4b8c      	ldr	r3, [pc, #560]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001ca4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ca6:	4a8b      	ldr	r2, [pc, #556]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001ca8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001cac:	6313      	str	r3, [r2, #48]	; 0x30
 8001cae:	4b89      	ldr	r3, [pc, #548]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cb2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001cb6:	613b      	str	r3, [r7, #16]
 8001cb8:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001cba:	4b86      	ldr	r3, [pc, #536]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cbe:	4a85      	ldr	r2, [pc, #532]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cc0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001cc4:	6313      	str	r3, [r2, #48]	; 0x30
 8001cc6:	4b83      	ldr	r3, [pc, #524]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cca:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001cce:	60fb      	str	r3, [r7, #12]
 8001cd0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cd2:	4b80      	ldr	r3, [pc, #512]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cd6:	4a7f      	ldr	r2, [pc, #508]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cd8:	f043 0304 	orr.w	r3, r3, #4
 8001cdc:	6313      	str	r3, [r2, #48]	; 0x30
 8001cde:	4b7d      	ldr	r3, [pc, #500]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001ce0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ce2:	f003 0304 	and.w	r3, r3, #4
 8001ce6:	60bb      	str	r3, [r7, #8]
 8001ce8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001cea:	4b7a      	ldr	r3, [pc, #488]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cee:	4a79      	ldr	r2, [pc, #484]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cf0:	f043 0320 	orr.w	r3, r3, #32
 8001cf4:	6313      	str	r3, [r2, #48]	; 0x30
 8001cf6:	4b77      	ldr	r3, [pc, #476]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001cf8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cfa:	f003 0320 	and.w	r3, r3, #32
 8001cfe:	607b      	str	r3, [r7, #4]
 8001d00:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001d02:	4b74      	ldr	r3, [pc, #464]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001d04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d06:	4a73      	ldr	r2, [pc, #460]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001d08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001d0c:	6313      	str	r3, [r2, #48]	; 0x30
 8001d0e:	4b71      	ldr	r3, [pc, #452]	; (8001ed4 <MX_GPIO_Init+0x2d8>)
 8001d10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d12:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001d16:	603b      	str	r3, [r7, #0]
 8001d18:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, LED14_Pin|LED15_Pin, GPIO_PIN_RESET);
 8001d1a:	2200      	movs	r2, #0
 8001d1c:	2160      	movs	r1, #96	; 0x60
 8001d1e:	486e      	ldr	r0, [pc, #440]	; (8001ed8 <MX_GPIO_Init+0x2dc>)
 8001d20:	f006 f82a 	bl	8007d78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 8001d24:	2201      	movs	r2, #1
 8001d26:	2120      	movs	r1, #32
 8001d28:	486c      	ldr	r0, [pc, #432]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001d2a:	f006 f825 	bl	8007d78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED16_GPIO_Port, LED16_Pin, GPIO_PIN_RESET);
 8001d2e:	2200      	movs	r2, #0
 8001d30:	2108      	movs	r1, #8
 8001d32:	486a      	ldr	r0, [pc, #424]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001d34:	f006 f820 	bl	8007d78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED3_GPIO_Port, LED3_Pin, GPIO_PIN_RESET);
 8001d38:	2200      	movs	r2, #0
 8001d3a:	2108      	movs	r1, #8
 8001d3c:	4868      	ldr	r0, [pc, #416]	; (8001ee0 <MX_GPIO_Init+0x2e4>)
 8001d3e:	f006 f81b 	bl	8007d78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8001d42:	2201      	movs	r2, #1
 8001d44:	2108      	movs	r1, #8
 8001d46:	4867      	ldr	r0, [pc, #412]	; (8001ee4 <MX_GPIO_Init+0x2e8>)
 8001d48:	f006 f816 	bl	8007d78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8001d4c:	2201      	movs	r2, #1
 8001d4e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001d52:	4863      	ldr	r0, [pc, #396]	; (8001ee0 <MX_GPIO_Init+0x2e4>)
 8001d54:	f006 f810 	bl	8007d78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOH, LED13_Pin|LED17_Pin|LED11_Pin|LED12_Pin
 8001d58:	2200      	movs	r2, #0
 8001d5a:	f645 6140 	movw	r1, #24128	; 0x5e40
 8001d5e:	4862      	ldr	r0, [pc, #392]	; (8001ee8 <MX_GPIO_Init+0x2ec>)
 8001d60:	f006 f80a 	bl	8007d78 <HAL_GPIO_WritePin>
                          |LED2_Pin|LED18_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(EXT_RST_GPIO_Port, EXT_RST_Pin, GPIO_PIN_RESET);
 8001d64:	2200      	movs	r2, #0
 8001d66:	2108      	movs	r1, #8
 8001d68:	4860      	ldr	r0, [pc, #384]	; (8001eec <MX_GPIO_Init+0x2f0>)
 8001d6a:	f006 f805 	bl	8007d78 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PE3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001d6e:	2308      	movs	r3, #8
 8001d70:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001d72:	2300      	movs	r3, #0
 8001d74:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d76:	2300      	movs	r3, #0
 8001d78:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d7a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001d7e:	4619      	mov	r1, r3
 8001d80:	4855      	ldr	r0, [pc, #340]	; (8001ed8 <MX_GPIO_Init+0x2dc>)
 8001d82:	f005 fd2d 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D2_Pin
                           ULPI_D1_Pin ULPI_D4_Pin */
  GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D2_Pin
 8001d86:	f643 0323 	movw	r3, #14371	; 0x3823
 8001d8a:	62fb      	str	r3, [r7, #44]	; 0x2c
                          |ULPI_D1_Pin|ULPI_D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d8c:	2302      	movs	r3, #2
 8001d8e:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d90:	2300      	movs	r3, #0
 8001d92:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d94:	2303      	movs	r3, #3
 8001d96:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001d98:	230a      	movs	r3, #10
 8001d9a:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d9c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001da0:	4619      	mov	r1, r3
 8001da2:	4853      	ldr	r0, [pc, #332]	; (8001ef0 <MX_GPIO_Init+0x2f4>)
 8001da4:	f005 fd1c 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : BP2_Pin BP1_Pin */
  GPIO_InitStruct.Pin = BP2_Pin|BP1_Pin;
 8001da8:	f44f 4301 	mov.w	r3, #33024	; 0x8100
 8001dac:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001dae:	4b51      	ldr	r3, [pc, #324]	; (8001ef4 <MX_GPIO_Init+0x2f8>)
 8001db0:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001db2:	2300      	movs	r3, #0
 8001db4:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001db6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001dba:	4619      	mov	r1, r3
 8001dbc:	484e      	ldr	r0, [pc, #312]	; (8001ef8 <MX_GPIO_Init+0x2fc>)
 8001dbe:	f005 fd0f 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED14_Pin LED15_Pin */
  GPIO_InitStruct.Pin = LED14_Pin|LED15_Pin;
 8001dc2:	2360      	movs	r3, #96	; 0x60
 8001dc4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001dc6:	2301      	movs	r3, #1
 8001dc8:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dca:	2300      	movs	r3, #0
 8001dcc:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001dce:	2300      	movs	r3, #0
 8001dd0:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001dd2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001dd6:	4619      	mov	r1, r3
 8001dd8:	483f      	ldr	r0, [pc, #252]	; (8001ed8 <MX_GPIO_Init+0x2dc>)
 8001dda:	f005 fd01 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_VBUS_Pin */
  GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 8001dde:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001de2:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001de4:	2300      	movs	r3, #0
 8001de6:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001de8:	2300      	movs	r3, #0
 8001dea:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 8001dec:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001df0:	4619      	mov	r1, r3
 8001df2:	4842      	ldr	r0, [pc, #264]	; (8001efc <MX_GPIO_Init+0x300>)
 8001df4:	f005 fcf4 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : Audio_INT_Pin */
  GPIO_InitStruct.Pin = Audio_INT_Pin;
 8001df8:	2340      	movs	r3, #64	; 0x40
 8001dfa:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8001dfc:	4b40      	ldr	r3, [pc, #256]	; (8001f00 <MX_GPIO_Init+0x304>)
 8001dfe:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e00:	2300      	movs	r3, #0
 8001e02:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(Audio_INT_GPIO_Port, &GPIO_InitStruct);
 8001e04:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e08:	4619      	mov	r1, r3
 8001e0a:	4834      	ldr	r0, [pc, #208]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001e0c:	f005 fce8 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : OTG_FS_PowerSwitchOn_Pin LED16_Pin */
  GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin|LED16_Pin;
 8001e10:	2328      	movs	r3, #40	; 0x28
 8001e12:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e14:	2301      	movs	r3, #1
 8001e16:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e18:	2300      	movs	r3, #0
 8001e1a:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e1c:	2300      	movs	r3, #0
 8001e1e:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e20:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e24:	4619      	mov	r1, r3
 8001e26:	482d      	ldr	r0, [pc, #180]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001e28:	f005 fcda 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED3_Pin LCD_DISP_Pin */
  GPIO_InitStruct.Pin = LED3_Pin|LCD_DISP_Pin;
 8001e2c:	f241 0308 	movw	r3, #4104	; 0x1008
 8001e30:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e32:	2301      	movs	r3, #1
 8001e34:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e36:	2300      	movs	r3, #0
 8001e38:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e3a:	2300      	movs	r3, #0
 8001e3c:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001e3e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e42:	4619      	mov	r1, r3
 8001e44:	4826      	ldr	r0, [pc, #152]	; (8001ee0 <MX_GPIO_Init+0x2e4>)
 8001e46:	f005 fccb 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : uSD_Detect_Pin */
  GPIO_InitStruct.Pin = uSD_Detect_Pin;
 8001e4a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001e4e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e50:	2300      	movs	r3, #0
 8001e52:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e54:	2300      	movs	r3, #0
 8001e56:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 8001e58:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e5c:	4619      	mov	r1, r3
 8001e5e:	4829      	ldr	r0, [pc, #164]	; (8001f04 <MX_GPIO_Init+0x308>)
 8001e60:	f005 fcbe 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_BL_CTRL_Pin */
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 8001e64:	2308      	movs	r3, #8
 8001e66:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e68:	2301      	movs	r3, #1
 8001e6a:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e6c:	2300      	movs	r3, #0
 8001e6e:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e70:	2300      	movs	r3, #0
 8001e72:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001e74:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e78:	4619      	mov	r1, r3
 8001e7a:	481a      	ldr	r0, [pc, #104]	; (8001ee4 <MX_GPIO_Init+0x2e8>)
 8001e7c:	f005 fcb0 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
  GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 8001e80:	2310      	movs	r3, #16
 8001e82:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e84:	2300      	movs	r3, #0
 8001e86:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e88:	2300      	movs	r3, #0
 8001e8a:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 8001e8c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001e90:	4619      	mov	r1, r3
 8001e92:	4812      	ldr	r0, [pc, #72]	; (8001edc <MX_GPIO_Init+0x2e0>)
 8001e94:	f005 fca4 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : TP3_Pin NC2_Pin */
  GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 8001e98:	f248 0304 	movw	r3, #32772	; 0x8004
 8001e9c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ea2:	2300      	movs	r3, #0
 8001ea4:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001ea6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001eaa:	4619      	mov	r1, r3
 8001eac:	480e      	ldr	r0, [pc, #56]	; (8001ee8 <MX_GPIO_Init+0x2ec>)
 8001eae:	f005 fc97 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED13_Pin LED17_Pin LED11_Pin LED12_Pin
                           LED2_Pin LED18_Pin */
  GPIO_InitStruct.Pin = LED13_Pin|LED17_Pin|LED11_Pin|LED12_Pin
 8001eb2:	f645 6340 	movw	r3, #24128	; 0x5e40
 8001eb6:	62fb      	str	r3, [r7, #44]	; 0x2c
                          |LED2_Pin|LED18_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001eb8:	2301      	movs	r3, #1
 8001eba:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ec0:	2300      	movs	r3, #0
 8001ec2:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001ec4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001ec8:	4619      	mov	r1, r3
 8001eca:	4807      	ldr	r0, [pc, #28]	; (8001ee8 <MX_GPIO_Init+0x2ec>)
 8001ecc:	f005 fc88 	bl	80077e0 <HAL_GPIO_Init>
 8001ed0:	e01a      	b.n	8001f08 <MX_GPIO_Init+0x30c>
 8001ed2:	bf00      	nop
 8001ed4:	40023800 	.word	0x40023800
 8001ed8:	40021000 	.word	0x40021000
 8001edc:	40020c00 	.word	0x40020c00
 8001ee0:	40022000 	.word	0x40022000
 8001ee4:	40022800 	.word	0x40022800
 8001ee8:	40021c00 	.word	0x40021c00
 8001eec:	40021800 	.word	0x40021800
 8001ef0:	40020400 	.word	0x40020400
 8001ef4:	10110000 	.word	0x10110000
 8001ef8:	40020000 	.word	0x40020000
 8001efc:	40022400 	.word	0x40022400
 8001f00:	10120000 	.word	0x10120000
 8001f04:	40020800 	.word	0x40020800

  /*Configure GPIO pin : LCD_INT_Pin */
  GPIO_InitStruct.Pin = LCD_INT_Pin;
 8001f08:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f0c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8001f0e:	4b3a      	ldr	r3, [pc, #232]	; (8001ff8 <MX_GPIO_Init+0x3fc>)
 8001f10:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f12:	2300      	movs	r3, #0
 8001f14:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 8001f16:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f1a:	4619      	mov	r1, r3
 8001f1c:	4837      	ldr	r0, [pc, #220]	; (8001ffc <MX_GPIO_Init+0x400>)
 8001f1e:	f005 fc5f 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : ULPI_NXT_Pin */
  GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 8001f22:	2310      	movs	r3, #16
 8001f24:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f26:	2302      	movs	r3, #2
 8001f28:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f2a:	2300      	movs	r3, #0
 8001f2c:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f2e:	2303      	movs	r3, #3
 8001f30:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001f32:	230a      	movs	r3, #10
 8001f34:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 8001f36:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f3a:	4619      	mov	r1, r3
 8001f3c:	4830      	ldr	r0, [pc, #192]	; (8002000 <MX_GPIO_Init+0x404>)
 8001f3e:	f005 fc4f 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : BP_joystick_Pin */
  GPIO_InitStruct.Pin = BP_joystick_Pin;
 8001f42:	2380      	movs	r3, #128	; 0x80
 8001f44:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001f46:	4b2f      	ldr	r3, [pc, #188]	; (8002004 <MX_GPIO_Init+0x408>)
 8001f48:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(BP_joystick_GPIO_Port, &GPIO_InitStruct);
 8001f4e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f52:	4619      	mov	r1, r3
 8001f54:	482c      	ldr	r0, [pc, #176]	; (8002008 <MX_GPIO_Init+0x40c>)
 8001f56:	f005 fc43 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
  GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 8001f5a:	2305      	movs	r3, #5
 8001f5c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f5e:	2302      	movs	r3, #2
 8001f60:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f62:	2300      	movs	r3, #0
 8001f64:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f66:	2303      	movs	r3, #3
 8001f68:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001f6a:	230a      	movs	r3, #10
 8001f6c:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f6e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f72:	4619      	mov	r1, r3
 8001f74:	4825      	ldr	r0, [pc, #148]	; (800200c <MX_GPIO_Init+0x410>)
 8001f76:	f005 fc33 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : EXT_RST_Pin */
  GPIO_InitStruct.Pin = EXT_RST_Pin;
 8001f7a:	2308      	movs	r3, #8
 8001f7c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f7e:	2301      	movs	r3, #1
 8001f80:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f82:	2300      	movs	r3, #0
 8001f84:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f86:	2300      	movs	r3, #0
 8001f88:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(EXT_RST_GPIO_Port, &GPIO_InitStruct);
 8001f8a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001f8e:	4619      	mov	r1, r3
 8001f90:	481d      	ldr	r0, [pc, #116]	; (8002008 <MX_GPIO_Init+0x40c>)
 8001f92:	f005 fc25 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pin : RMII_RXER_Pin */
  GPIO_InitStruct.Pin = RMII_RXER_Pin;
 8001f96:	2304      	movs	r3, #4
 8001f98:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001f9a:	2300      	movs	r3, #0
 8001f9c:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 8001fa2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001fa6:	4619      	mov	r1, r3
 8001fa8:	4817      	ldr	r0, [pc, #92]	; (8002008 <MX_GPIO_Init+0x40c>)
 8001faa:	f005 fc19 	bl	80077e0 <HAL_GPIO_Init>

  /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
  GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 8001fae:	2328      	movs	r3, #40	; 0x28
 8001fb0:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fb2:	2302      	movs	r3, #2
 8001fb4:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fb6:	2300      	movs	r3, #0
 8001fb8:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fba:	2303      	movs	r3, #3
 8001fbc:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001fbe:	230a      	movs	r3, #10
 8001fc0:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fc2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001fc6:	4619      	mov	r1, r3
 8001fc8:	4811      	ldr	r0, [pc, #68]	; (8002010 <MX_GPIO_Init+0x414>)
 8001fca:	f005 fc09 	bl	80077e0 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 8001fce:	2200      	movs	r2, #0
 8001fd0:	2105      	movs	r1, #5
 8001fd2:	2017      	movs	r0, #23
 8001fd4:	f004 fea2 	bl	8006d1c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001fd8:	2017      	movs	r0, #23
 8001fda:	f004 febb 	bl	8006d54 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8001fde:	2200      	movs	r2, #0
 8001fe0:	2105      	movs	r1, #5
 8001fe2:	2028      	movs	r0, #40	; 0x28
 8001fe4:	f004 fe9a 	bl	8006d1c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001fe8:	2028      	movs	r0, #40	; 0x28
 8001fea:	f004 feb3 	bl	8006d54 <HAL_NVIC_EnableIRQ>

}
 8001fee:	bf00      	nop
 8001ff0:	3740      	adds	r7, #64	; 0x40
 8001ff2:	46bd      	mov	sp, r7
 8001ff4:	bd80      	pop	{r7, pc}
 8001ff6:	bf00      	nop
 8001ff8:	10120000 	.word	0x10120000
 8001ffc:	40022000 	.word	0x40022000
 8002000:	40021c00 	.word	0x40021c00
 8002004:	10110000 	.word	0x10110000
 8002008:	40021800 	.word	0x40021800
 800200c:	40020800 	.word	0x40020800
 8002010:	40020000 	.word	0x40020000

08002014 <HAL_GPIO_EXTI_Callback>:

/*
 * Fonction d'interuption
 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8002014:	b480      	push	{r7}
 8002016:	b083      	sub	sp, #12
 8002018:	af00      	add	r7, sp, #0
 800201a:	4603      	mov	r3, r0
 800201c:	80fb      	strh	r3, [r7, #6]
	// PIN_7 : appuie joystick, on passe au menu sélectionné
	if(GPIO_Pin == GPIO_PIN_7) etat = etat_int;
 800201e:	88fb      	ldrh	r3, [r7, #6]
 8002020:	2b80      	cmp	r3, #128	; 0x80
 8002022:	d104      	bne.n	800202e <HAL_GPIO_EXTI_Callback+0x1a>
 8002024:	4b0c      	ldr	r3, [pc, #48]	; (8002058 <HAL_GPIO_EXTI_Callback+0x44>)
 8002026:	781a      	ldrb	r2, [r3, #0]
 8002028:	4b0c      	ldr	r3, [pc, #48]	; (800205c <HAL_GPIO_EXTI_Callback+0x48>)
 800202a:	701a      	strb	r2, [r3, #0]
	// PIN_8 : appuie bouton 1, on démarre l'enregistrement sur PC
	else if(GPIO_Pin==GPIO_PIN_8) etat = 8;
	// PIN_15 : appuie sur le bouton 2, on clear l'écran de dessin
	else if(GPIO_Pin==GPIO_PIN_15) etat = 7;
}
 800202c:	e00e      	b.n	800204c <HAL_GPIO_EXTI_Callback+0x38>
	else if(GPIO_Pin==GPIO_PIN_8) etat = 8;
 800202e:	88fb      	ldrh	r3, [r7, #6]
 8002030:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002034:	d103      	bne.n	800203e <HAL_GPIO_EXTI_Callback+0x2a>
 8002036:	4b09      	ldr	r3, [pc, #36]	; (800205c <HAL_GPIO_EXTI_Callback+0x48>)
 8002038:	2208      	movs	r2, #8
 800203a:	701a      	strb	r2, [r3, #0]
}
 800203c:	e006      	b.n	800204c <HAL_GPIO_EXTI_Callback+0x38>
	else if(GPIO_Pin==GPIO_PIN_15) etat = 7;
 800203e:	88fb      	ldrh	r3, [r7, #6]
 8002040:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8002044:	d102      	bne.n	800204c <HAL_GPIO_EXTI_Callback+0x38>
 8002046:	4b05      	ldr	r3, [pc, #20]	; (800205c <HAL_GPIO_EXTI_Callback+0x48>)
 8002048:	2207      	movs	r2, #7
 800204a:	701a      	strb	r2, [r3, #0]
}
 800204c:	bf00      	nop
 800204e:	370c      	adds	r7, #12
 8002050:	46bd      	mov	sp, r7
 8002052:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002056:	4770      	bx	lr
 8002058:	2000139f 	.word	0x2000139f
 800205c:	2000139e 	.word	0x2000139e

08002060 <TestConditionBord>:
/*
test les condition de bord en un point pour ne pas ecrire
hors de l'écran.
*/
char TestConditionBord(uint16_t x, uint16_t y, uint16_t rad)
{
 8002060:	b480      	push	{r7}
 8002062:	b085      	sub	sp, #20
 8002064:	af00      	add	r7, sp, #0
 8002066:	4603      	mov	r3, r0
 8002068:	80fb      	strh	r3, [r7, #6]
 800206a:	460b      	mov	r3, r1
 800206c:	80bb      	strh	r3, [r7, #4]
 800206e:	4613      	mov	r3, r2
 8002070:	807b      	strh	r3, [r7, #2]
	char bool = 0;
 8002072:	2300      	movs	r3, #0
 8002074:	73fb      	strb	r3, [r7, #15]
	if(((x-rad)>=0) && ((x+rad)<=480-5-taille_menu) && ((y-rad)>=0) && ((y+rad)<246))
 8002076:	88fa      	ldrh	r2, [r7, #6]
 8002078:	887b      	ldrh	r3, [r7, #2]
 800207a:	1ad3      	subs	r3, r2, r3
 800207c:	2b00      	cmp	r3, #0
 800207e:	db11      	blt.n	80020a4 <TestConditionBord+0x44>
 8002080:	88fa      	ldrh	r2, [r7, #6]
 8002082:	887b      	ldrh	r3, [r7, #2]
 8002084:	4413      	add	r3, r2
 8002086:	f5b3 7fd5 	cmp.w	r3, #426	; 0x1aa
 800208a:	da0b      	bge.n	80020a4 <TestConditionBord+0x44>
 800208c:	88ba      	ldrh	r2, [r7, #4]
 800208e:	887b      	ldrh	r3, [r7, #2]
 8002090:	1ad3      	subs	r3, r2, r3
 8002092:	2b00      	cmp	r3, #0
 8002094:	db06      	blt.n	80020a4 <TestConditionBord+0x44>
 8002096:	88ba      	ldrh	r2, [r7, #4]
 8002098:	887b      	ldrh	r3, [r7, #2]
 800209a:	4413      	add	r3, r2
 800209c:	2bf5      	cmp	r3, #245	; 0xf5
 800209e:	dc01      	bgt.n	80020a4 <TestConditionBord+0x44>
	{
		bool = 1;
 80020a0:	2301      	movs	r3, #1
 80020a2:	73fb      	strb	r3, [r7, #15]
	}
	return bool;
 80020a4:	7bfb      	ldrb	r3, [r7, #15]
}
 80020a6:	4618      	mov	r0, r3
 80020a8:	3714      	adds	r7, #20
 80020aa:	46bd      	mov	sp, r7
 80020ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020b0:	4770      	bx	lr
	...

080020b4 <LCD_PAINTBRUSH>:
/*
 * dessine la forme du pinceau actuel pour la zone de dessin
 */
void LCD_PAINTBRUSH(uint16_t x, uint16_t y,uint16_t rad)
{
 80020b4:	b580      	push	{r7, lr}
 80020b6:	b084      	sub	sp, #16
 80020b8:	af00      	add	r7, sp, #0
 80020ba:	4603      	mov	r3, r0
 80020bc:	80fb      	strh	r3, [r7, #6]
 80020be:	460b      	mov	r3, r1
 80020c0:	80bb      	strh	r3, [r7, #4]
 80020c2:	4613      	mov	r3, r2
 80020c4:	807b      	strh	r3, [r7, #2]
	uint32_t px_color;
	switch(brush)
 80020c6:	4b53      	ldr	r3, [pc, #332]	; (8002214 <LCD_PAINTBRUSH+0x160>)
 80020c8:	781b      	ldrb	r3, [r3, #0]
 80020ca:	2b01      	cmp	r3, #1
 80020cc:	d00b      	beq.n	80020e6 <LCD_PAINTBRUSH+0x32>
 80020ce:	2b02      	cmp	r3, #2
 80020d0:	d011      	beq.n	80020f6 <LCD_PAINTBRUSH+0x42>
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	d000      	beq.n	80020d8 <LCD_PAINTBRUSH+0x24>
		if ((BSP_LCD_ReadPixel(x, y - 1) == px_color)
				&& TestConditionBord(x, y-1, 0))
			LCD_PAINTBRUSH(x, y - 1, rad);
		break;
	}
}
 80020d6:	e099      	b.n	800220c <LCD_PAINTBRUSH+0x158>
		BSP_LCD_FillCircle(x, y, rad);
 80020d8:	887a      	ldrh	r2, [r7, #2]
 80020da:	88b9      	ldrh	r1, [r7, #4]
 80020dc:	88fb      	ldrh	r3, [r7, #6]
 80020de:	4618      	mov	r0, r3
 80020e0:	f002 fc1a 	bl	8004918 <BSP_LCD_FillCircle>
		break;
 80020e4:	e092      	b.n	800220c <LCD_PAINTBRUSH+0x158>
		BSP_LCD_FillRect(0, 0, 425, 246);
 80020e6:	23f6      	movs	r3, #246	; 0xf6
 80020e8:	f240 12a9 	movw	r2, #425	; 0x1a9
 80020ec:	2100      	movs	r1, #0
 80020ee:	2000      	movs	r0, #0
 80020f0:	f002 fb98 	bl	8004824 <BSP_LCD_FillRect>
		break;
 80020f4:	e08a      	b.n	800220c <LCD_PAINTBRUSH+0x158>
		px_color = BSP_LCD_ReadPixel(x, y);
 80020f6:	88ba      	ldrh	r2, [r7, #4]
 80020f8:	88fb      	ldrh	r3, [r7, #6]
 80020fa:	4611      	mov	r1, r2
 80020fc:	4618      	mov	r0, r3
 80020fe:	f001 ffab 	bl	8004058 <BSP_LCD_ReadPixel>
 8002102:	60f8      	str	r0, [r7, #12]
		BSP_LCD_DrawPixel(x, y, couleur);
 8002104:	4b44      	ldr	r3, [pc, #272]	; (8002218 <LCD_PAINTBRUSH+0x164>)
 8002106:	681a      	ldr	r2, [r3, #0]
 8002108:	88b9      	ldrh	r1, [r7, #4]
 800210a:	88fb      	ldrh	r3, [r7, #6]
 800210c:	4618      	mov	r0, r3
 800210e:	f002 fb41 	bl	8004794 <BSP_LCD_DrawPixel>
		if ((BSP_LCD_ReadPixel(x + 1, y) == px_color)
 8002112:	88fb      	ldrh	r3, [r7, #6]
 8002114:	3301      	adds	r3, #1
 8002116:	b29b      	uxth	r3, r3
 8002118:	88ba      	ldrh	r2, [r7, #4]
 800211a:	4611      	mov	r1, r2
 800211c:	4618      	mov	r0, r3
 800211e:	f001 ff9b 	bl	8004058 <BSP_LCD_ReadPixel>
 8002122:	4602      	mov	r2, r0
 8002124:	68fb      	ldr	r3, [r7, #12]
 8002126:	4293      	cmp	r3, r2
 8002128:	d112      	bne.n	8002150 <LCD_PAINTBRUSH+0x9c>
				&& TestConditionBord(x + 1, y, 0))
 800212a:	88fb      	ldrh	r3, [r7, #6]
 800212c:	3301      	adds	r3, #1
 800212e:	b29b      	uxth	r3, r3
 8002130:	88b9      	ldrh	r1, [r7, #4]
 8002132:	2200      	movs	r2, #0
 8002134:	4618      	mov	r0, r3
 8002136:	f7ff ff93 	bl	8002060 <TestConditionBord>
 800213a:	4603      	mov	r3, r0
 800213c:	2b00      	cmp	r3, #0
 800213e:	d007      	beq.n	8002150 <LCD_PAINTBRUSH+0x9c>
			LCD_PAINTBRUSH(x + 1, y, rad);
 8002140:	88fb      	ldrh	r3, [r7, #6]
 8002142:	3301      	adds	r3, #1
 8002144:	b29b      	uxth	r3, r3
 8002146:	887a      	ldrh	r2, [r7, #2]
 8002148:	88b9      	ldrh	r1, [r7, #4]
 800214a:	4618      	mov	r0, r3
 800214c:	f7ff ffb2 	bl	80020b4 <LCD_PAINTBRUSH>
		if ((BSP_LCD_ReadPixel(x - 1, y) == px_color)
 8002150:	88fb      	ldrh	r3, [r7, #6]
 8002152:	3b01      	subs	r3, #1
 8002154:	b29b      	uxth	r3, r3
 8002156:	88ba      	ldrh	r2, [r7, #4]
 8002158:	4611      	mov	r1, r2
 800215a:	4618      	mov	r0, r3
 800215c:	f001 ff7c 	bl	8004058 <BSP_LCD_ReadPixel>
 8002160:	4602      	mov	r2, r0
 8002162:	68fb      	ldr	r3, [r7, #12]
 8002164:	4293      	cmp	r3, r2
 8002166:	d112      	bne.n	800218e <LCD_PAINTBRUSH+0xda>
				&& TestConditionBord(x - 1, y, 0))
 8002168:	88fb      	ldrh	r3, [r7, #6]
 800216a:	3b01      	subs	r3, #1
 800216c:	b29b      	uxth	r3, r3
 800216e:	88b9      	ldrh	r1, [r7, #4]
 8002170:	2200      	movs	r2, #0
 8002172:	4618      	mov	r0, r3
 8002174:	f7ff ff74 	bl	8002060 <TestConditionBord>
 8002178:	4603      	mov	r3, r0
 800217a:	2b00      	cmp	r3, #0
 800217c:	d007      	beq.n	800218e <LCD_PAINTBRUSH+0xda>
			LCD_PAINTBRUSH(x - 1, y, rad);
 800217e:	88fb      	ldrh	r3, [r7, #6]
 8002180:	3b01      	subs	r3, #1
 8002182:	b29b      	uxth	r3, r3
 8002184:	887a      	ldrh	r2, [r7, #2]
 8002186:	88b9      	ldrh	r1, [r7, #4]
 8002188:	4618      	mov	r0, r3
 800218a:	f7ff ff93 	bl	80020b4 <LCD_PAINTBRUSH>
		if ((BSP_LCD_ReadPixel(x, y + 1) == px_color)
 800218e:	88bb      	ldrh	r3, [r7, #4]
 8002190:	3301      	adds	r3, #1
 8002192:	b29a      	uxth	r2, r3
 8002194:	88fb      	ldrh	r3, [r7, #6]
 8002196:	4611      	mov	r1, r2
 8002198:	4618      	mov	r0, r3
 800219a:	f001 ff5d 	bl	8004058 <BSP_LCD_ReadPixel>
 800219e:	4602      	mov	r2, r0
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	4293      	cmp	r3, r2
 80021a4:	d112      	bne.n	80021cc <LCD_PAINTBRUSH+0x118>
				&& TestConditionBord(x, y+1, 0))
 80021a6:	88bb      	ldrh	r3, [r7, #4]
 80021a8:	3301      	adds	r3, #1
 80021aa:	b299      	uxth	r1, r3
 80021ac:	88fb      	ldrh	r3, [r7, #6]
 80021ae:	2200      	movs	r2, #0
 80021b0:	4618      	mov	r0, r3
 80021b2:	f7ff ff55 	bl	8002060 <TestConditionBord>
 80021b6:	4603      	mov	r3, r0
 80021b8:	2b00      	cmp	r3, #0
 80021ba:	d007      	beq.n	80021cc <LCD_PAINTBRUSH+0x118>
			LCD_PAINTBRUSH(x, y + 1, rad);
 80021bc:	88bb      	ldrh	r3, [r7, #4]
 80021be:	3301      	adds	r3, #1
 80021c0:	b299      	uxth	r1, r3
 80021c2:	887a      	ldrh	r2, [r7, #2]
 80021c4:	88fb      	ldrh	r3, [r7, #6]
 80021c6:	4618      	mov	r0, r3
 80021c8:	f7ff ff74 	bl	80020b4 <LCD_PAINTBRUSH>
		if ((BSP_LCD_ReadPixel(x, y - 1) == px_color)
 80021cc:	88bb      	ldrh	r3, [r7, #4]
 80021ce:	3b01      	subs	r3, #1
 80021d0:	b29a      	uxth	r2, r3
 80021d2:	88fb      	ldrh	r3, [r7, #6]
 80021d4:	4611      	mov	r1, r2
 80021d6:	4618      	mov	r0, r3
 80021d8:	f001 ff3e 	bl	8004058 <BSP_LCD_ReadPixel>
 80021dc:	4602      	mov	r2, r0
 80021de:	68fb      	ldr	r3, [r7, #12]
 80021e0:	4293      	cmp	r3, r2
 80021e2:	d112      	bne.n	800220a <LCD_PAINTBRUSH+0x156>
				&& TestConditionBord(x, y-1, 0))
 80021e4:	88bb      	ldrh	r3, [r7, #4]
 80021e6:	3b01      	subs	r3, #1
 80021e8:	b299      	uxth	r1, r3
 80021ea:	88fb      	ldrh	r3, [r7, #6]
 80021ec:	2200      	movs	r2, #0
 80021ee:	4618      	mov	r0, r3
 80021f0:	f7ff ff36 	bl	8002060 <TestConditionBord>
 80021f4:	4603      	mov	r3, r0
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d007      	beq.n	800220a <LCD_PAINTBRUSH+0x156>
			LCD_PAINTBRUSH(x, y - 1, rad);
 80021fa:	88bb      	ldrh	r3, [r7, #4]
 80021fc:	3b01      	subs	r3, #1
 80021fe:	b299      	uxth	r1, r3
 8002200:	887a      	ldrh	r2, [r7, #2]
 8002202:	88fb      	ldrh	r3, [r7, #6]
 8002204:	4618      	mov	r0, r3
 8002206:	f7ff ff55 	bl	80020b4 <LCD_PAINTBRUSH>
		break;
 800220a:	bf00      	nop
}
 800220c:	bf00      	nop
 800220e:	3710      	adds	r7, #16
 8002210:	46bd      	mov	sp, r7
 8002212:	bd80      	pop	{r7, pc}
 8002214:	2000139d 	.word	0x2000139d
 8002218:	20009e84 	.word	0x20009e84

0800221c <LCD_PAINTBRUSH_SAMPLE>:
/*
 * Dessine la forme du pinceau actuel pour la zone menu (fonction séparé car
 * pour la fonction de remplissage du fond on veut juste afficher un logo).
 */
void LCD_PAINTBRUSH_SAMPLE(uint16_t x, uint16_t y,uint16_t rad)
{
 800221c:	b580      	push	{r7, lr}
 800221e:	b088      	sub	sp, #32
 8002220:	af00      	add	r7, sp, #0
 8002222:	4603      	mov	r3, r0
 8002224:	80fb      	strh	r3, [r7, #6]
 8002226:	460b      	mov	r3, r1
 8002228:	80bb      	strh	r3, [r7, #4]
 800222a:	4613      	mov	r3, r2
 800222c:	807b      	strh	r3, [r7, #2]
	uint32_t color;
	switch(brush)
 800222e:	4b48      	ldr	r3, [pc, #288]	; (8002350 <LCD_PAINTBRUSH_SAMPLE+0x134>)
 8002230:	781b      	ldrb	r3, [r3, #0]
 8002232:	2b01      	cmp	r3, #1
 8002234:	d00b      	beq.n	800224e <LCD_PAINTBRUSH_SAMPLE+0x32>
 8002236:	2b02      	cmp	r3, #2
 8002238:	d03b      	beq.n	80022b2 <LCD_PAINTBRUSH_SAMPLE+0x96>
 800223a:	2b00      	cmp	r3, #0
 800223c:	d000      	beq.n	8002240 <LCD_PAINTBRUSH_SAMPLE+0x24>
				BSP_LCD_DrawPixel(x-15+j, y-15+i, color);
			}
		}
		break;
	}
}
 800223e:	e082      	b.n	8002346 <LCD_PAINTBRUSH_SAMPLE+0x12a>
		BSP_LCD_FillCircle(x, y, rad);
 8002240:	887a      	ldrh	r2, [r7, #2]
 8002242:	88b9      	ldrh	r1, [r7, #4]
 8002244:	88fb      	ldrh	r3, [r7, #6]
 8002246:	4618      	mov	r0, r3
 8002248:	f002 fb66 	bl	8004918 <BSP_LCD_FillCircle>
		break;
 800224c:	e07b      	b.n	8002346 <LCD_PAINTBRUSH_SAMPLE+0x12a>
		for(int i=0; i<30;i++)
 800224e:	2300      	movs	r3, #0
 8002250:	61fb      	str	r3, [r7, #28]
 8002252:	e02a      	b.n	80022aa <LCD_PAINTBRUSH_SAMPLE+0x8e>
			for(int j=0; j<30;j++)
 8002254:	2300      	movs	r3, #0
 8002256:	61bb      	str	r3, [r7, #24]
 8002258:	e021      	b.n	800229e <LCD_PAINTBRUSH_SAMPLE+0x82>
				if(brush_background[i][j]==0) BSP_LCD_DrawPixel(x-15+j, y-15+i, LCD_COLOR_BLACK);
 800225a:	493e      	ldr	r1, [pc, #248]	; (8002354 <LCD_PAINTBRUSH_SAMPLE+0x138>)
 800225c:	69fa      	ldr	r2, [r7, #28]
 800225e:	4613      	mov	r3, r2
 8002260:	011b      	lsls	r3, r3, #4
 8002262:	1a9b      	subs	r3, r3, r2
 8002264:	005b      	lsls	r3, r3, #1
 8002266:	18ca      	adds	r2, r1, r3
 8002268:	69bb      	ldr	r3, [r7, #24]
 800226a:	4413      	add	r3, r2
 800226c:	781b      	ldrb	r3, [r3, #0]
 800226e:	2b00      	cmp	r3, #0
 8002270:	d112      	bne.n	8002298 <LCD_PAINTBRUSH_SAMPLE+0x7c>
 8002272:	69bb      	ldr	r3, [r7, #24]
 8002274:	b29a      	uxth	r2, r3
 8002276:	88fb      	ldrh	r3, [r7, #6]
 8002278:	4413      	add	r3, r2
 800227a:	b29b      	uxth	r3, r3
 800227c:	3b0f      	subs	r3, #15
 800227e:	b298      	uxth	r0, r3
 8002280:	69fb      	ldr	r3, [r7, #28]
 8002282:	b29a      	uxth	r2, r3
 8002284:	88bb      	ldrh	r3, [r7, #4]
 8002286:	4413      	add	r3, r2
 8002288:	b29b      	uxth	r3, r3
 800228a:	3b0f      	subs	r3, #15
 800228c:	b29b      	uxth	r3, r3
 800228e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8002292:	4619      	mov	r1, r3
 8002294:	f002 fa7e 	bl	8004794 <BSP_LCD_DrawPixel>
			for(int j=0; j<30;j++)
 8002298:	69bb      	ldr	r3, [r7, #24]
 800229a:	3301      	adds	r3, #1
 800229c:	61bb      	str	r3, [r7, #24]
 800229e:	69bb      	ldr	r3, [r7, #24]
 80022a0:	2b1d      	cmp	r3, #29
 80022a2:	ddda      	ble.n	800225a <LCD_PAINTBRUSH_SAMPLE+0x3e>
		for(int i=0; i<30;i++)
 80022a4:	69fb      	ldr	r3, [r7, #28]
 80022a6:	3301      	adds	r3, #1
 80022a8:	61fb      	str	r3, [r7, #28]
 80022aa:	69fb      	ldr	r3, [r7, #28]
 80022ac:	2b1d      	cmp	r3, #29
 80022ae:	ddd1      	ble.n	8002254 <LCD_PAINTBRUSH_SAMPLE+0x38>
		break;
 80022b0:	e049      	b.n	8002346 <LCD_PAINTBRUSH_SAMPLE+0x12a>
		for(int i=0; i<34;i++)
 80022b2:	2300      	movs	r3, #0
 80022b4:	617b      	str	r3, [r7, #20]
 80022b6:	e042      	b.n	800233e <LCD_PAINTBRUSH_SAMPLE+0x122>
			for(int j=0; j<30;j++)
 80022b8:	2300      	movs	r3, #0
 80022ba:	613b      	str	r3, [r7, #16]
 80022bc:	e039      	b.n	8002332 <LCD_PAINTBRUSH_SAMPLE+0x116>
				color = brush_remplir[i][j] | (brush_remplir[i][j]<<8) | (brush_remplir[i][j]<<16) | 0xFF000000;
 80022be:	4926      	ldr	r1, [pc, #152]	; (8002358 <LCD_PAINTBRUSH_SAMPLE+0x13c>)
 80022c0:	697a      	ldr	r2, [r7, #20]
 80022c2:	4613      	mov	r3, r2
 80022c4:	011b      	lsls	r3, r3, #4
 80022c6:	1a9b      	subs	r3, r3, r2
 80022c8:	005b      	lsls	r3, r3, #1
 80022ca:	693a      	ldr	r2, [r7, #16]
 80022cc:	4413      	add	r3, r2
 80022ce:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 80022d2:	4821      	ldr	r0, [pc, #132]	; (8002358 <LCD_PAINTBRUSH_SAMPLE+0x13c>)
 80022d4:	697a      	ldr	r2, [r7, #20]
 80022d6:	4613      	mov	r3, r2
 80022d8:	011b      	lsls	r3, r3, #4
 80022da:	1a9b      	subs	r3, r3, r2
 80022dc:	005b      	lsls	r3, r3, #1
 80022de:	693a      	ldr	r2, [r7, #16]
 80022e0:	4413      	add	r3, r2
 80022e2:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80022e6:	021b      	lsls	r3, r3, #8
 80022e8:	4319      	orrs	r1, r3
 80022ea:	481b      	ldr	r0, [pc, #108]	; (8002358 <LCD_PAINTBRUSH_SAMPLE+0x13c>)
 80022ec:	697a      	ldr	r2, [r7, #20]
 80022ee:	4613      	mov	r3, r2
 80022f0:	011b      	lsls	r3, r3, #4
 80022f2:	1a9b      	subs	r3, r3, r2
 80022f4:	005b      	lsls	r3, r3, #1
 80022f6:	693a      	ldr	r2, [r7, #16]
 80022f8:	4413      	add	r3, r2
 80022fa:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80022fe:	041b      	lsls	r3, r3, #16
 8002300:	430b      	orrs	r3, r1
 8002302:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002306:	60fb      	str	r3, [r7, #12]
				BSP_LCD_DrawPixel(x-15+j, y-15+i, color);
 8002308:	693b      	ldr	r3, [r7, #16]
 800230a:	b29a      	uxth	r2, r3
 800230c:	88fb      	ldrh	r3, [r7, #6]
 800230e:	4413      	add	r3, r2
 8002310:	b29b      	uxth	r3, r3
 8002312:	3b0f      	subs	r3, #15
 8002314:	b298      	uxth	r0, r3
 8002316:	697b      	ldr	r3, [r7, #20]
 8002318:	b29a      	uxth	r2, r3
 800231a:	88bb      	ldrh	r3, [r7, #4]
 800231c:	4413      	add	r3, r2
 800231e:	b29b      	uxth	r3, r3
 8002320:	3b0f      	subs	r3, #15
 8002322:	b29b      	uxth	r3, r3
 8002324:	68fa      	ldr	r2, [r7, #12]
 8002326:	4619      	mov	r1, r3
 8002328:	f002 fa34 	bl	8004794 <BSP_LCD_DrawPixel>
			for(int j=0; j<30;j++)
 800232c:	693b      	ldr	r3, [r7, #16]
 800232e:	3301      	adds	r3, #1
 8002330:	613b      	str	r3, [r7, #16]
 8002332:	693b      	ldr	r3, [r7, #16]
 8002334:	2b1d      	cmp	r3, #29
 8002336:	ddc2      	ble.n	80022be <LCD_PAINTBRUSH_SAMPLE+0xa2>
		for(int i=0; i<34;i++)
 8002338:	697b      	ldr	r3, [r7, #20]
 800233a:	3301      	adds	r3, #1
 800233c:	617b      	str	r3, [r7, #20]
 800233e:	697b      	ldr	r3, [r7, #20]
 8002340:	2b21      	cmp	r3, #33	; 0x21
 8002342:	ddb9      	ble.n	80022b8 <LCD_PAINTBRUSH_SAMPLE+0x9c>
		break;
 8002344:	bf00      	nop
}
 8002346:	bf00      	nop
 8002348:	3720      	adds	r7, #32
 800234a:	46bd      	mov	sp, r7
 800234c:	bd80      	pop	{r7, pc}
 800234e:	bf00      	nop
 8002350:	2000139d 	.word	0x2000139d
 8002354:	20001018 	.word	0x20001018
 8002358:	20000028 	.word	0x20000028

0800235c <AfficheTonalite>:
 * pour afficher toutes les tonalité il faudrait 256*6 = 1536 pixels, on prend donc que
 * 64 niveaux de tonalité pour chaque mélange (R+V, V+R, V+B, B+V, B+R, R+B). Soit un total
 * de 64*6 = 384 pixels nécessaire
 */
void AfficheTonalite()
{
 800235c:	b580      	push	{r7, lr}
 800235e:	b08e      	sub	sp, #56	; 0x38
 8002360:	af00      	add	r7, sp, #0
	uint32_t RVB = 0x0;
 8002362:	2300      	movs	r3, #0
 8002364:	607b      	str	r3, [r7, #4]
	BSP_LCD_SelectLayer(1);
 8002366:	2001      	movs	r0, #1
 8002368:	f001 fe04 	bl	8003f74 <BSP_LCD_SelectLayer>
	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 800236c:	f04f 30ff 	mov.w	r0, #4294967295
 8002370:	f001 fe10 	bl	8003f94 <BSP_LCD_SetTextColor>
	BSP_LCD_FillRect(0, 251, 480, 21);
 8002374:	2315      	movs	r3, #21
 8002376:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800237a:	21fb      	movs	r1, #251	; 0xfb
 800237c:	2000      	movs	r0, #0
 800237e:	f002 fa51 	bl	8004824 <BSP_LCD_FillRect>
	//affichage R+V :
	for(uint32_t i = 0;i<256; i = i+4)
 8002382:	2300      	movs	r3, #0
 8002384:	637b      	str	r3, [r7, #52]	; 0x34
 8002386:	e022      	b.n	80023ce <AfficheTonalite+0x72>
   {
		RVB = 0xFFFF0000 | (i<<8); //Red à 255, Vert augmente
 8002388:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800238a:	021a      	lsls	r2, r3, #8
 800238c:	4b76      	ldr	r3, [pc, #472]	; (8002568 <AfficheTonalite+0x20c>)
 800238e:	4313      	orrs	r3, r2
 8002390:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 8002392:	2300      	movs	r3, #0
 8002394:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8002398:	e012      	b.n	80023c0 <AfficheTonalite+0x64>
		{
			BSP_LCD_DrawPixel(50+i/4, 252+j, RVB);
 800239a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800239c:	089b      	lsrs	r3, r3, #2
 800239e:	b29b      	uxth	r3, r3
 80023a0:	3332      	adds	r3, #50	; 0x32
 80023a2:	b298      	uxth	r0, r3
 80023a4:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80023a8:	b29b      	uxth	r3, r3
 80023aa:	33fc      	adds	r3, #252	; 0xfc
 80023ac:	b29b      	uxth	r3, r3
 80023ae:	687a      	ldr	r2, [r7, #4]
 80023b0:	4619      	mov	r1, r3
 80023b2:	f002 f9ef 	bl	8004794 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 80023b6:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80023ba:	3301      	adds	r3, #1
 80023bc:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 80023c0:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 80023c4:	2b11      	cmp	r3, #17
 80023c6:	d9e8      	bls.n	800239a <AfficheTonalite+0x3e>
	for(uint32_t i = 0;i<256; i = i+4)
 80023c8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80023ca:	3304      	adds	r3, #4
 80023cc:	637b      	str	r3, [r7, #52]	; 0x34
 80023ce:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80023d0:	2bff      	cmp	r3, #255	; 0xff
 80023d2:	d9d9      	bls.n	8002388 <AfficheTonalite+0x2c>
		}
   }
	//affichage V+R :
	for(uint32_t i = 252;i<253; i = i-4)
 80023d4:	23fc      	movs	r3, #252	; 0xfc
 80023d6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80023d8:	e023      	b.n	8002422 <AfficheTonalite+0xc6>
		// i est un uint donc quand i passe en dessus de 0 il est interprèter comme un grand nombre d'où le i<253
   {
		RVB = 0xFF00FF00 | (i<<16); //Vert à 255, Red diminue
 80023da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80023dc:	041b      	lsls	r3, r3, #16
 80023de:	f043 23ff 	orr.w	r3, r3, #4278255360	; 0xff00ff00
 80023e2:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 80023e4:	2300      	movs	r3, #0
 80023e6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80023ea:	e013      	b.n	8002414 <AfficheTonalite+0xb8>
		{
			BSP_LCD_DrawPixel(114+(63-i/4), 252+j, RVB);
 80023ec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80023ee:	089b      	lsrs	r3, r3, #2
 80023f0:	b29b      	uxth	r3, r3
 80023f2:	f1c3 03b1 	rsb	r3, r3, #177	; 0xb1
 80023f6:	b298      	uxth	r0, r3
 80023f8:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80023fc:	b29b      	uxth	r3, r3
 80023fe:	33fc      	adds	r3, #252	; 0xfc
 8002400:	b29b      	uxth	r3, r3
 8002402:	687a      	ldr	r2, [r7, #4]
 8002404:	4619      	mov	r1, r3
 8002406:	f002 f9c5 	bl	8004794 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 800240a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800240e:	3301      	adds	r3, #1
 8002410:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002414:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8002418:	2b11      	cmp	r3, #17
 800241a:	d9e7      	bls.n	80023ec <AfficheTonalite+0x90>
	for(uint32_t i = 252;i<253; i = i-4)
 800241c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800241e:	3b04      	subs	r3, #4
 8002420:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002422:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002424:	2bfc      	cmp	r3, #252	; 0xfc
 8002426:	d9d8      	bls.n	80023da <AfficheTonalite+0x7e>
		}
   }
	//affichage V+B :
	for(uint32_t i = 0;i<256; i = i+4)
 8002428:	2300      	movs	r3, #0
 800242a:	627b      	str	r3, [r7, #36]	; 0x24
 800242c:	e021      	b.n	8002472 <AfficheTonalite+0x116>
   {
		RVB = 0xFF00FF00 | i; // Vert à 255, Bleu augmente
 800242e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002430:	f043 23ff 	orr.w	r3, r3, #4278255360	; 0xff00ff00
 8002434:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 8002436:	2300      	movs	r3, #0
 8002438:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800243c:	e012      	b.n	8002464 <AfficheTonalite+0x108>
		{
			BSP_LCD_DrawPixel(178+i/4, 252+j, RVB);
 800243e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002440:	089b      	lsrs	r3, r3, #2
 8002442:	b29b      	uxth	r3, r3
 8002444:	33b2      	adds	r3, #178	; 0xb2
 8002446:	b298      	uxth	r0, r3
 8002448:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800244c:	b29b      	uxth	r3, r3
 800244e:	33fc      	adds	r3, #252	; 0xfc
 8002450:	b29b      	uxth	r3, r3
 8002452:	687a      	ldr	r2, [r7, #4]
 8002454:	4619      	mov	r1, r3
 8002456:	f002 f99d 	bl	8004794 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 800245a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800245e:	3301      	adds	r3, #1
 8002460:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8002464:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8002468:	2b11      	cmp	r3, #17
 800246a:	d9e8      	bls.n	800243e <AfficheTonalite+0xe2>
	for(uint32_t i = 0;i<256; i = i+4)
 800246c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800246e:	3304      	adds	r3, #4
 8002470:	627b      	str	r3, [r7, #36]	; 0x24
 8002472:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002474:	2bff      	cmp	r3, #255	; 0xff
 8002476:	d9da      	bls.n	800242e <AfficheTonalite+0xd2>
		}
   }
	//affichage B+V :
	for(uint32_t i = 252;i<253; i = i-4)
 8002478:	23fc      	movs	r3, #252	; 0xfc
 800247a:	61fb      	str	r3, [r7, #28]
 800247c:	e01f      	b.n	80024be <AfficheTonalite+0x162>
   {
		RVB = 0xFF0000FF | (i<<8); // Bleu à 255, Vert diminue
 800247e:	69fb      	ldr	r3, [r7, #28]
 8002480:	021a      	lsls	r2, r3, #8
 8002482:	4b3a      	ldr	r3, [pc, #232]	; (800256c <AfficheTonalite+0x210>)
 8002484:	4313      	orrs	r3, r2
 8002486:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 8002488:	2300      	movs	r3, #0
 800248a:	76fb      	strb	r3, [r7, #27]
 800248c:	e011      	b.n	80024b2 <AfficheTonalite+0x156>
		{
			BSP_LCD_DrawPixel(242+(63-i/4), 252+j, RVB);
 800248e:	69fb      	ldr	r3, [r7, #28]
 8002490:	089b      	lsrs	r3, r3, #2
 8002492:	b29a      	uxth	r2, r3
 8002494:	f240 1331 	movw	r3, #305	; 0x131
 8002498:	1a9b      	subs	r3, r3, r2
 800249a:	b298      	uxth	r0, r3
 800249c:	7efb      	ldrb	r3, [r7, #27]
 800249e:	b29b      	uxth	r3, r3
 80024a0:	33fc      	adds	r3, #252	; 0xfc
 80024a2:	b29b      	uxth	r3, r3
 80024a4:	687a      	ldr	r2, [r7, #4]
 80024a6:	4619      	mov	r1, r3
 80024a8:	f002 f974 	bl	8004794 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 80024ac:	7efb      	ldrb	r3, [r7, #27]
 80024ae:	3301      	adds	r3, #1
 80024b0:	76fb      	strb	r3, [r7, #27]
 80024b2:	7efb      	ldrb	r3, [r7, #27]
 80024b4:	2b11      	cmp	r3, #17
 80024b6:	d9ea      	bls.n	800248e <AfficheTonalite+0x132>
	for(uint32_t i = 252;i<253; i = i-4)
 80024b8:	69fb      	ldr	r3, [r7, #28]
 80024ba:	3b04      	subs	r3, #4
 80024bc:	61fb      	str	r3, [r7, #28]
 80024be:	69fb      	ldr	r3, [r7, #28]
 80024c0:	2bfc      	cmp	r3, #252	; 0xfc
 80024c2:	d9dc      	bls.n	800247e <AfficheTonalite+0x122>
		}
   }
	//affichage B+R :
	for(uint32_t i = 0;i<256; i = i+4)
 80024c4:	2300      	movs	r3, #0
 80024c6:	617b      	str	r3, [r7, #20]
 80024c8:	e01e      	b.n	8002508 <AfficheTonalite+0x1ac>
   {
		RVB = 0xFF0000FF | (i<<16);// Bleu à 255, Red augmente
 80024ca:	697b      	ldr	r3, [r7, #20]
 80024cc:	041a      	lsls	r2, r3, #16
 80024ce:	4b27      	ldr	r3, [pc, #156]	; (800256c <AfficheTonalite+0x210>)
 80024d0:	4313      	orrs	r3, r2
 80024d2:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 80024d4:	2300      	movs	r3, #0
 80024d6:	74fb      	strb	r3, [r7, #19]
 80024d8:	e010      	b.n	80024fc <AfficheTonalite+0x1a0>
		{
			BSP_LCD_DrawPixel(306+i/4, 252+j, RVB);
 80024da:	697b      	ldr	r3, [r7, #20]
 80024dc:	089b      	lsrs	r3, r3, #2
 80024de:	b29b      	uxth	r3, r3
 80024e0:	f503 7399 	add.w	r3, r3, #306	; 0x132
 80024e4:	b298      	uxth	r0, r3
 80024e6:	7cfb      	ldrb	r3, [r7, #19]
 80024e8:	b29b      	uxth	r3, r3
 80024ea:	33fc      	adds	r3, #252	; 0xfc
 80024ec:	b29b      	uxth	r3, r3
 80024ee:	687a      	ldr	r2, [r7, #4]
 80024f0:	4619      	mov	r1, r3
 80024f2:	f002 f94f 	bl	8004794 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 80024f6:	7cfb      	ldrb	r3, [r7, #19]
 80024f8:	3301      	adds	r3, #1
 80024fa:	74fb      	strb	r3, [r7, #19]
 80024fc:	7cfb      	ldrb	r3, [r7, #19]
 80024fe:	2b11      	cmp	r3, #17
 8002500:	d9eb      	bls.n	80024da <AfficheTonalite+0x17e>
	for(uint32_t i = 0;i<256; i = i+4)
 8002502:	697b      	ldr	r3, [r7, #20]
 8002504:	3304      	adds	r3, #4
 8002506:	617b      	str	r3, [r7, #20]
 8002508:	697b      	ldr	r3, [r7, #20]
 800250a:	2bff      	cmp	r3, #255	; 0xff
 800250c:	d9dd      	bls.n	80024ca <AfficheTonalite+0x16e>
		}
   }
	//affichage R+B :
	for(uint32_t i = 252;i<253; i = i-4)
 800250e:	23fc      	movs	r3, #252	; 0xfc
 8002510:	60fb      	str	r3, [r7, #12]
 8002512:	e01e      	b.n	8002552 <AfficheTonalite+0x1f6>
   {
		RVB = 0xFFFF0000 | (i);// Red à 255, Bleu diminue
 8002514:	68fa      	ldr	r2, [r7, #12]
 8002516:	4b14      	ldr	r3, [pc, #80]	; (8002568 <AfficheTonalite+0x20c>)
 8002518:	4313      	orrs	r3, r2
 800251a:	607b      	str	r3, [r7, #4]
		for(char j = 0; j<18; j++)
 800251c:	2300      	movs	r3, #0
 800251e:	72fb      	strb	r3, [r7, #11]
 8002520:	e011      	b.n	8002546 <AfficheTonalite+0x1ea>
		{
			BSP_LCD_DrawPixel(370+(63-i/4), 252+j, RVB);
 8002522:	68fb      	ldr	r3, [r7, #12]
 8002524:	089b      	lsrs	r3, r3, #2
 8002526:	b29a      	uxth	r2, r3
 8002528:	f240 13b1 	movw	r3, #433	; 0x1b1
 800252c:	1a9b      	subs	r3, r3, r2
 800252e:	b298      	uxth	r0, r3
 8002530:	7afb      	ldrb	r3, [r7, #11]
 8002532:	b29b      	uxth	r3, r3
 8002534:	33fc      	adds	r3, #252	; 0xfc
 8002536:	b29b      	uxth	r3, r3
 8002538:	687a      	ldr	r2, [r7, #4]
 800253a:	4619      	mov	r1, r3
 800253c:	f002 f92a 	bl	8004794 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 8002540:	7afb      	ldrb	r3, [r7, #11]
 8002542:	3301      	adds	r3, #1
 8002544:	72fb      	strb	r3, [r7, #11]
 8002546:	7afb      	ldrb	r3, [r7, #11]
 8002548:	2b11      	cmp	r3, #17
 800254a:	d9ea      	bls.n	8002522 <AfficheTonalite+0x1c6>
	for(uint32_t i = 252;i<253; i = i-4)
 800254c:	68fb      	ldr	r3, [r7, #12]
 800254e:	3b04      	subs	r3, #4
 8002550:	60fb      	str	r3, [r7, #12]
 8002552:	68fb      	ldr	r3, [r7, #12]
 8002554:	2bfc      	cmp	r3, #252	; 0xfc
 8002556:	d9dd      	bls.n	8002514 <AfficheTonalite+0x1b8>
		}
   }
	osDelay(200);
 8002558:	20c8      	movs	r0, #200	; 0xc8
 800255a:	f00a fd28 	bl	800cfae <osDelay>
}
 800255e:	bf00      	nop
 8002560:	3738      	adds	r7, #56	; 0x38
 8002562:	46bd      	mov	sp, r7
 8002564:	bd80      	pop	{r7, pc}
 8002566:	bf00      	nop
 8002568:	ffff0000 	.word	0xffff0000
 800256c:	ff0000ff 	.word	0xff0000ff

08002570 <AfficheLuminosite>:

/*
 * Affiche le dégradé de luminosité pour que l'utilisateur puisse faire son choix
 */
void AfficheLuminosite(float ton, float sat)
{
 8002570:	b580      	push	{r7, lr}
 8002572:	b086      	sub	sp, #24
 8002574:	af00      	add	r7, sp, #0
 8002576:	ed87 0a01 	vstr	s0, [r7, #4]
 800257a:	edc7 0a00 	vstr	s1, [r7]
	float lum;
	uint32_t color;
	BSP_LCD_SelectLayer(1);
 800257e:	2001      	movs	r0, #1
 8002580:	f001 fcf8 	bl	8003f74 <BSP_LCD_SelectLayer>
	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002584:	f04f 30ff 	mov.w	r0, #4294967295
 8002588:	f001 fd04 	bl	8003f94 <BSP_LCD_SetTextColor>
	BSP_LCD_FillRect(0, 251, 480, 21);
 800258c:	2315      	movs	r3, #21
 800258e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002592:	21fb      	movs	r1, #251	; 0xfb
 8002594:	2000      	movs	r0, #0
 8002596:	f002 f945 	bl	8004824 <BSP_LCD_FillRect>
	for(uint32_t i = 0;i<256;i++)
 800259a:	2300      	movs	r3, #0
 800259c:	617b      	str	r3, [r7, #20]
 800259e:	e02e      	b.n	80025fe <AfficheLuminosite+0x8e>
    {
		lum = (float)i/255;
 80025a0:	697b      	ldr	r3, [r7, #20]
 80025a2:	ee07 3a90 	vmov	s15, r3
 80025a6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80025aa:	eddf 6a1a 	vldr	s13, [pc, #104]	; 8002614 <AfficheLuminosite+0xa4>
 80025ae:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80025b2:	edc7 7a03 	vstr	s15, [r7, #12]
		color = FindCouleur(ton, sat, lum) | 0xFF000000;
 80025b6:	ed97 1a03 	vldr	s2, [r7, #12]
 80025ba:	edd7 0a00 	vldr	s1, [r7]
 80025be:	ed97 0a01 	vldr	s0, [r7, #4]
 80025c2:	f000 f87d 	bl	80026c0 <FindCouleur>
 80025c6:	4603      	mov	r3, r0
 80025c8:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80025cc:	60bb      	str	r3, [r7, #8]
		for(char j = 0; j<18; j++)
 80025ce:	2300      	movs	r3, #0
 80025d0:	74fb      	strb	r3, [r7, #19]
 80025d2:	e00e      	b.n	80025f2 <AfficheLuminosite+0x82>
		{
			BSP_LCD_DrawPixel(100+i, 252+j, color);
 80025d4:	697b      	ldr	r3, [r7, #20]
 80025d6:	b29b      	uxth	r3, r3
 80025d8:	3364      	adds	r3, #100	; 0x64
 80025da:	b298      	uxth	r0, r3
 80025dc:	7cfb      	ldrb	r3, [r7, #19]
 80025de:	b29b      	uxth	r3, r3
 80025e0:	33fc      	adds	r3, #252	; 0xfc
 80025e2:	b29b      	uxth	r3, r3
 80025e4:	68ba      	ldr	r2, [r7, #8]
 80025e6:	4619      	mov	r1, r3
 80025e8:	f002 f8d4 	bl	8004794 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 80025ec:	7cfb      	ldrb	r3, [r7, #19]
 80025ee:	3301      	adds	r3, #1
 80025f0:	74fb      	strb	r3, [r7, #19]
 80025f2:	7cfb      	ldrb	r3, [r7, #19]
 80025f4:	2b11      	cmp	r3, #17
 80025f6:	d9ed      	bls.n	80025d4 <AfficheLuminosite+0x64>
	for(uint32_t i = 0;i<256;i++)
 80025f8:	697b      	ldr	r3, [r7, #20]
 80025fa:	3301      	adds	r3, #1
 80025fc:	617b      	str	r3, [r7, #20]
 80025fe:	697b      	ldr	r3, [r7, #20]
 8002600:	2bff      	cmp	r3, #255	; 0xff
 8002602:	d9cd      	bls.n	80025a0 <AfficheLuminosite+0x30>
		}
    }
	osDelay(200);
 8002604:	20c8      	movs	r0, #200	; 0xc8
 8002606:	f00a fcd2 	bl	800cfae <osDelay>
}
 800260a:	bf00      	nop
 800260c:	3718      	adds	r7, #24
 800260e:	46bd      	mov	sp, r7
 8002610:	bd80      	pop	{r7, pc}
 8002612:	bf00      	nop
 8002614:	437f0000 	.word	0x437f0000

08002618 <AfficheSaturation>:

/*
 * Affiche le dégradé de saturation pour que l'utilisateur puisse faire son choix
 */
void AfficheSaturation(float ton, float lum)
{
 8002618:	b580      	push	{r7, lr}
 800261a:	b086      	sub	sp, #24
 800261c:	af00      	add	r7, sp, #0
 800261e:	ed87 0a01 	vstr	s0, [r7, #4]
 8002622:	edc7 0a00 	vstr	s1, [r7]
	float sat;
	uint32_t color;
	BSP_LCD_SelectLayer(1);
 8002626:	2001      	movs	r0, #1
 8002628:	f001 fca4 	bl	8003f74 <BSP_LCD_SelectLayer>
	BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 800262c:	f04f 30ff 	mov.w	r0, #4294967295
 8002630:	f001 fcb0 	bl	8003f94 <BSP_LCD_SetTextColor>
	BSP_LCD_FillRect(0, 251, 480, 21);
 8002634:	2315      	movs	r3, #21
 8002636:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 800263a:	21fb      	movs	r1, #251	; 0xfb
 800263c:	2000      	movs	r0, #0
 800263e:	f002 f8f1 	bl	8004824 <BSP_LCD_FillRect>
	for(uint32_t i = 0;i<256;i++)
 8002642:	2300      	movs	r3, #0
 8002644:	617b      	str	r3, [r7, #20]
 8002646:	e02e      	b.n	80026a6 <AfficheSaturation+0x8e>
    {
		sat = (float)i/255;
 8002648:	697b      	ldr	r3, [r7, #20]
 800264a:	ee07 3a90 	vmov	s15, r3
 800264e:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002652:	eddf 6a1a 	vldr	s13, [pc, #104]	; 80026bc <AfficheSaturation+0xa4>
 8002656:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800265a:	edc7 7a03 	vstr	s15, [r7, #12]
		color = FindCouleur(ton, sat, lum) | 0xFF000000;
 800265e:	ed97 1a00 	vldr	s2, [r7]
 8002662:	edd7 0a03 	vldr	s1, [r7, #12]
 8002666:	ed97 0a01 	vldr	s0, [r7, #4]
 800266a:	f000 f829 	bl	80026c0 <FindCouleur>
 800266e:	4603      	mov	r3, r0
 8002670:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002674:	60bb      	str	r3, [r7, #8]
		for(char j = 0; j<18; j++)
 8002676:	2300      	movs	r3, #0
 8002678:	74fb      	strb	r3, [r7, #19]
 800267a:	e00e      	b.n	800269a <AfficheSaturation+0x82>
		{
			BSP_LCD_DrawPixel(100+i, 252+j, color);
 800267c:	697b      	ldr	r3, [r7, #20]
 800267e:	b29b      	uxth	r3, r3
 8002680:	3364      	adds	r3, #100	; 0x64
 8002682:	b298      	uxth	r0, r3
 8002684:	7cfb      	ldrb	r3, [r7, #19]
 8002686:	b29b      	uxth	r3, r3
 8002688:	33fc      	adds	r3, #252	; 0xfc
 800268a:	b29b      	uxth	r3, r3
 800268c:	68ba      	ldr	r2, [r7, #8]
 800268e:	4619      	mov	r1, r3
 8002690:	f002 f880 	bl	8004794 <BSP_LCD_DrawPixel>
		for(char j = 0; j<18; j++)
 8002694:	7cfb      	ldrb	r3, [r7, #19]
 8002696:	3301      	adds	r3, #1
 8002698:	74fb      	strb	r3, [r7, #19]
 800269a:	7cfb      	ldrb	r3, [r7, #19]
 800269c:	2b11      	cmp	r3, #17
 800269e:	d9ed      	bls.n	800267c <AfficheSaturation+0x64>
	for(uint32_t i = 0;i<256;i++)
 80026a0:	697b      	ldr	r3, [r7, #20]
 80026a2:	3301      	adds	r3, #1
 80026a4:	617b      	str	r3, [r7, #20]
 80026a6:	697b      	ldr	r3, [r7, #20]
 80026a8:	2bff      	cmp	r3, #255	; 0xff
 80026aa:	d9cd      	bls.n	8002648 <AfficheSaturation+0x30>
		}
    }
	osDelay(200);
 80026ac:	20c8      	movs	r0, #200	; 0xc8
 80026ae:	f00a fc7e 	bl	800cfae <osDelay>
}
 80026b2:	bf00      	nop
 80026b4:	3718      	adds	r7, #24
 80026b6:	46bd      	mov	sp, r7
 80026b8:	bd80      	pop	{r7, pc}
 80026ba:	bf00      	nop
 80026bc:	437f0000 	.word	0x437f0000

080026c0 <FindCouleur>:
/*
 * trouve la couleur RVB à partir de la couleur TSL:
 * renvoi un entier de la forme RGB-888 : 0xRRVVBB
 */
uint32_t FindCouleur(float ton, float sat, float lum)
{
 80026c0:	b580      	push	{r7, lr}
 80026c2:	b08e      	sub	sp, #56	; 0x38
 80026c4:	af00      	add	r7, sp, #0
 80026c6:	ed87 0a03 	vstr	s0, [r7, #12]
 80026ca:	edc7 0a02 	vstr	s1, [r7, #8]
 80026ce:	ed87 1a01 	vstr	s2, [r7, #4]
	char Red, Green, Blue;
	uint32_t color = 0;
 80026d2:	2300      	movs	r3, #0
 80026d4:	62bb      	str	r3, [r7, #40]	; 0x28
	float R = 0;
 80026d6:	f04f 0300 	mov.w	r3, #0
 80026da:	637b      	str	r3, [r7, #52]	; 0x34
	float V = 0;
 80026dc:	f04f 0300 	mov.w	r3, #0
 80026e0:	633b      	str	r3, [r7, #48]	; 0x30
	float B = 0;
 80026e2:	f04f 0300 	mov.w	r3, #0
 80026e6:	62fb      	str	r3, [r7, #44]	; 0x2c
	float C;
	float m;
	float T_prime;
	float X;
	C = lum*sat;
 80026e8:	ed97 7a01 	vldr	s14, [r7, #4]
 80026ec:	edd7 7a02 	vldr	s15, [r7, #8]
 80026f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80026f4:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
	m = lum-C;
 80026f8:	ed97 7a01 	vldr	s14, [r7, #4]
 80026fc:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8002700:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002704:	edc7 7a08 	vstr	s15, [r7, #32]
	T_prime = ton/60;
 8002708:	ed97 7a03 	vldr	s14, [r7, #12]
 800270c:	eddf 6a61 	vldr	s13, [pc, #388]	; 8002894 <FindCouleur+0x1d4>
 8002710:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002714:	edc7 7a07 	vstr	s15, [r7, #28]
	X = C*(1-absolu((modulo(T_prime, 2))-1));
 8002718:	2002      	movs	r0, #2
 800271a:	ed97 0a07 	vldr	s0, [r7, #28]
 800271e:	f000 f917 	bl	8002950 <modulo>
 8002722:	eeb0 7a40 	vmov.f32	s14, s0
 8002726:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800272a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800272e:	eeb0 0a67 	vmov.f32	s0, s15
 8002732:	f000 f92f 	bl	8002994 <absolu>
 8002736:	eeb0 7a40 	vmov.f32	s14, s0
 800273a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800273e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002742:	ed97 7a09 	vldr	s14, [r7, #36]	; 0x24
 8002746:	ee67 7a27 	vmul.f32	s15, s14, s15
 800274a:	edc7 7a06 	vstr	s15, [r7, #24]
	if((T_prime>=0) && (T_prime<1))
 800274e:	edd7 7a07 	vldr	s15, [r7, #28]
 8002752:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800275a:	db0d      	blt.n	8002778 <FindCouleur+0xb8>
 800275c:	edd7 7a07 	vldr	s15, [r7, #28]
 8002760:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8002764:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002768:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800276c:	d504      	bpl.n	8002778 <FindCouleur+0xb8>
	{
		R = C;
 800276e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002770:	637b      	str	r3, [r7, #52]	; 0x34
		V = X;
 8002772:	69bb      	ldr	r3, [r7, #24]
 8002774:	633b      	str	r3, [r7, #48]	; 0x30
 8002776:	e044      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<2)
 8002778:	edd7 7a07 	vldr	s15, [r7, #28]
 800277c:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 8002780:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002784:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002788:	d504      	bpl.n	8002794 <FindCouleur+0xd4>
	{
		R = X;
 800278a:	69bb      	ldr	r3, [r7, #24]
 800278c:	637b      	str	r3, [r7, #52]	; 0x34
		V = C;
 800278e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002790:	633b      	str	r3, [r7, #48]	; 0x30
 8002792:	e036      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<3)
 8002794:	edd7 7a07 	vldr	s15, [r7, #28]
 8002798:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
 800279c:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027a4:	d504      	bpl.n	80027b0 <FindCouleur+0xf0>
	{
		B = X;
 80027a6:	69bb      	ldr	r3, [r7, #24]
 80027a8:	62fb      	str	r3, [r7, #44]	; 0x2c
		V = C;
 80027aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027ac:	633b      	str	r3, [r7, #48]	; 0x30
 80027ae:	e028      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<4)
 80027b0:	edd7 7a07 	vldr	s15, [r7, #28]
 80027b4:	eeb1 7a00 	vmov.f32	s14, #16	; 0x40800000  4.0
 80027b8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027c0:	d504      	bpl.n	80027cc <FindCouleur+0x10c>
	{
		B = C;
 80027c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027c4:	62fb      	str	r3, [r7, #44]	; 0x2c
		V = X;
 80027c6:	69bb      	ldr	r3, [r7, #24]
 80027c8:	633b      	str	r3, [r7, #48]	; 0x30
 80027ca:	e01a      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<5)
 80027cc:	edd7 7a07 	vldr	s15, [r7, #28]
 80027d0:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 80027d4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027dc:	d504      	bpl.n	80027e8 <FindCouleur+0x128>
	{
		B = C;
 80027de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027e0:	62fb      	str	r3, [r7, #44]	; 0x2c
		R = X;
 80027e2:	69bb      	ldr	r3, [r7, #24]
 80027e4:	637b      	str	r3, [r7, #52]	; 0x34
 80027e6:	e00c      	b.n	8002802 <FindCouleur+0x142>
	}
	else if(T_prime<6)
 80027e8:	edd7 7a07 	vldr	s15, [r7, #28]
 80027ec:	eeb1 7a08 	vmov.f32	s14, #24	; 0x40c00000  6.0
 80027f0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027f8:	d503      	bpl.n	8002802 <FindCouleur+0x142>
	{
		R = C;
 80027fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80027fc:	637b      	str	r3, [r7, #52]	; 0x34
		B = X;
 80027fe:	69bb      	ldr	r3, [r7, #24]
 8002800:	62fb      	str	r3, [r7, #44]	; 0x2c
	}
	R = (R+m)*255;
 8002802:	ed97 7a0d 	vldr	s14, [r7, #52]	; 0x34
 8002806:	edd7 7a08 	vldr	s15, [r7, #32]
 800280a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800280e:	ed9f 7a22 	vldr	s14, [pc, #136]	; 8002898 <FindCouleur+0x1d8>
 8002812:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002816:	edc7 7a0d 	vstr	s15, [r7, #52]	; 0x34
	V = (V+m)*255;
 800281a:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800281e:	edd7 7a08 	vldr	s15, [r7, #32]
 8002822:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002826:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8002898 <FindCouleur+0x1d8>
 800282a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800282e:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30
	B = (B+m)*255;
 8002832:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8002836:	edd7 7a08 	vldr	s15, [r7, #32]
 800283a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800283e:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8002898 <FindCouleur+0x1d8>
 8002842:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002846:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
	Red = (int)R;
 800284a:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800284e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002852:	edc7 7a00 	vstr	s15, [r7]
 8002856:	683b      	ldr	r3, [r7, #0]
 8002858:	75fb      	strb	r3, [r7, #23]
	Green = (int)V;
 800285a:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 800285e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002862:	edc7 7a00 	vstr	s15, [r7]
 8002866:	683b      	ldr	r3, [r7, #0]
 8002868:	75bb      	strb	r3, [r7, #22]
	Blue = (int)B;
 800286a:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 800286e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002872:	edc7 7a00 	vstr	s15, [r7]
 8002876:	683b      	ldr	r3, [r7, #0]
 8002878:	757b      	strb	r3, [r7, #21]
	color = (Red<<16)+(Green<<8)+Blue;
 800287a:	7dfb      	ldrb	r3, [r7, #23]
 800287c:	041a      	lsls	r2, r3, #16
 800287e:	7dbb      	ldrb	r3, [r7, #22]
 8002880:	021b      	lsls	r3, r3, #8
 8002882:	441a      	add	r2, r3
 8002884:	7d7b      	ldrb	r3, [r7, #21]
 8002886:	4413      	add	r3, r2
 8002888:	62bb      	str	r3, [r7, #40]	; 0x28
	return color;
 800288a:	6abb      	ldr	r3, [r7, #40]	; 0x28
}
 800288c:	4618      	mov	r0, r3
 800288e:	3738      	adds	r7, #56	; 0x38
 8002890:	46bd      	mov	sp, r7
 8002892:	bd80      	pop	{r7, pc}
 8002894:	42700000 	.word	0x42700000
 8002898:	437f0000 	.word	0x437f0000

0800289c <FindTonalite>:
/*
 * Renvoi la tonalité entre 0° et 360° à partir de la position du doigt sur la barre
 */
float FindTonalite(uint16_t pos)
{
 800289c:	b480      	push	{r7}
 800289e:	b085      	sub	sp, #20
 80028a0:	af00      	add	r7, sp, #0
 80028a2:	4603      	mov	r3, r0
 80028a4:	80fb      	strh	r3, [r7, #6]
	float ton;
	ton = (float)pos;
 80028a6:	88fb      	ldrh	r3, [r7, #6]
 80028a8:	ee07 3a90 	vmov	s15, r3
 80028ac:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80028b0:	edc7 7a03 	vstr	s15, [r7, #12]
	ton = (ton/383)*360;
 80028b4:	ed97 7a03 	vldr	s14, [r7, #12]
 80028b8:	eddf 6a09 	vldr	s13, [pc, #36]	; 80028e0 <FindTonalite+0x44>
 80028bc:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80028c0:	ed9f 7a08 	vldr	s14, [pc, #32]	; 80028e4 <FindTonalite+0x48>
 80028c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80028c8:	edc7 7a03 	vstr	s15, [r7, #12]
	return ton;
 80028cc:	68fb      	ldr	r3, [r7, #12]
 80028ce:	ee07 3a90 	vmov	s15, r3
}
 80028d2:	eeb0 0a67 	vmov.f32	s0, s15
 80028d6:	3714      	adds	r7, #20
 80028d8:	46bd      	mov	sp, r7
 80028da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028de:	4770      	bx	lr
 80028e0:	43bf8000 	.word	0x43bf8000
 80028e4:	43b40000 	.word	0x43b40000

080028e8 <FindLuminosite>:

/*
 * Renvoi la Luminosité entre 0 et 1 à partir de la position du doigt sur la barre
 */
float FindLuminosite(uint16_t pos)
{
 80028e8:	b480      	push	{r7}
 80028ea:	b083      	sub	sp, #12
 80028ec:	af00      	add	r7, sp, #0
 80028ee:	4603      	mov	r3, r0
 80028f0:	80fb      	strh	r3, [r7, #6]
	return (float) pos/255;
 80028f2:	88fb      	ldrh	r3, [r7, #6]
 80028f4:	ee07 3a90 	vmov	s15, r3
 80028f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80028fc:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8002918 <FindLuminosite+0x30>
 8002900:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8002904:	eef0 7a66 	vmov.f32	s15, s13
}
 8002908:	eeb0 0a67 	vmov.f32	s0, s15
 800290c:	370c      	adds	r7, #12
 800290e:	46bd      	mov	sp, r7
 8002910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002914:	4770      	bx	lr
 8002916:	bf00      	nop
 8002918:	437f0000 	.word	0x437f0000

0800291c <FindSaturation>:

/*
 * Renvoi la Saturation entre 0 et 1 à partir de la position du doigt sur la barre
 */
float FindSaturation(uint16_t pos)
{
 800291c:	b480      	push	{r7}
 800291e:	b083      	sub	sp, #12
 8002920:	af00      	add	r7, sp, #0
 8002922:	4603      	mov	r3, r0
 8002924:	80fb      	strh	r3, [r7, #6]
	return (float)pos/255;
 8002926:	88fb      	ldrh	r3, [r7, #6]
 8002928:	ee07 3a90 	vmov	s15, r3
 800292c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002930:	ed9f 7a06 	vldr	s14, [pc, #24]	; 800294c <FindSaturation+0x30>
 8002934:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8002938:	eef0 7a66 	vmov.f32	s15, s13
}
 800293c:	eeb0 0a67 	vmov.f32	s0, s15
 8002940:	370c      	adds	r7, #12
 8002942:	46bd      	mov	sp, r7
 8002944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002948:	4770      	bx	lr
 800294a:	bf00      	nop
 800294c:	437f0000 	.word	0x437f0000

08002950 <modulo>:

float modulo(float val, char mod)
{
 8002950:	b480      	push	{r7}
 8002952:	b085      	sub	sp, #20
 8002954:	af00      	add	r7, sp, #0
 8002956:	ed87 0a01 	vstr	s0, [r7, #4]
 800295a:	4603      	mov	r3, r0
 800295c:	70fb      	strb	r3, [r7, #3]
	uint32_t q;
	q = (int) val/mod;
 800295e:	edd7 7a01 	vldr	s15, [r7, #4]
 8002962:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8002966:	ee17 2a90 	vmov	r2, s15
 800296a:	78fb      	ldrb	r3, [r7, #3]
 800296c:	fb92 f3f3 	sdiv	r3, r2, r3
 8002970:	60fb      	str	r3, [r7, #12]
	return(val - 2*q);
 8002972:	68fb      	ldr	r3, [r7, #12]
 8002974:	005b      	lsls	r3, r3, #1
 8002976:	ee07 3a90 	vmov	s15, r3
 800297a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800297e:	ed97 7a01 	vldr	s14, [r7, #4]
 8002982:	ee77 7a67 	vsub.f32	s15, s14, s15
}
 8002986:	eeb0 0a67 	vmov.f32	s0, s15
 800298a:	3714      	adds	r7, #20
 800298c:	46bd      	mov	sp, r7
 800298e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002992:	4770      	bx	lr

08002994 <absolu>:

float absolu(float val)
{
 8002994:	b480      	push	{r7}
 8002996:	b083      	sub	sp, #12
 8002998:	af00      	add	r7, sp, #0
 800299a:	ed87 0a01 	vstr	s0, [r7, #4]
	if(val<0) return -val;
 800299e:	edd7 7a01 	vldr	s15, [r7, #4]
 80029a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80029a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80029aa:	d504      	bpl.n	80029b6 <absolu+0x22>
 80029ac:	edd7 7a01 	vldr	s15, [r7, #4]
 80029b0:	eef1 7a67 	vneg.f32	s15, s15
 80029b4:	e001      	b.n	80029ba <absolu+0x26>
	else return val;
 80029b6:	edd7 7a01 	vldr	s15, [r7, #4]
}
 80029ba:	eeb0 0a67 	vmov.f32	s0, s15
 80029be:	370c      	adds	r7, #12
 80029c0:	46bd      	mov	sp, r7
 80029c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029c6:	4770      	bx	lr

080029c8 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void const * argument)
{
 80029c8:	b580      	push	{r7, lr}
 80029ca:	b082      	sub	sp, #8
 80029cc:	af00      	add	r7, sp, #0
 80029ce:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
 80029d0:	2001      	movs	r0, #1
 80029d2:	f00a faec 	bl	800cfae <osDelay>
 80029d6:	e7fb      	b.n	80029d0 <StartDefaultTask+0x8>

080029d8 <StartMode>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartMode */
void StartMode(void const * argument)
{
 80029d8:	b5b0      	push	{r4, r5, r7, lr}
 80029da:	b0ce      	sub	sp, #312	; 0x138
 80029dc:	af00      	add	r7, sp, #0
 80029de:	1d3b      	adds	r3, r7, #4
 80029e0:	6018      	str	r0, [r3, #0]
  /* USER CODE BEGIN StartMode */
  /* Infinite loop */
  TickType_t xLastWakeTime;
  xLastWakeTime = xTaskGetTickCount();
 80029e2:	f00b fbd3 	bl	800e18c <xTaskGetTickCount>
 80029e6:	4603      	mov	r3, r0
 80029e8:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
  static TS_StateTypeDef  TS_State;
  char radius_prec; //rayon précédent pour supprimer le curseur dans la sélection
  char sous_menu = 0; // permet de savoir si on est dans un sous menu
 80029ec:	2300      	movs	r3, #0
 80029ee:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
  char menu_couleur = 0; // permet de savoir si on est dans un des sous_menu couleur (tonalité, saturation, luminosité)
 80029f2:	2300      	movs	r3, #0
 80029f4:	f887 3136 	strb.w	r3, [r7, #310]	; 0x136
  //valeur TSL pour la couleur
  float ton = 180.0;
 80029f8:	4baa      	ldr	r3, [pc, #680]	; (8002ca4 <StartMode+0x2cc>)
 80029fa:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
  float lum = 0.5;
 80029fe:	f04f 537c 	mov.w	r3, #1056964608	; 0x3f000000
 8002a02:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
  float sat = 0.5;
 8002a06:	f04f 537c 	mov.w	r3, #1056964608	; 0x3f000000
 8002a0a:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
  char text[] = "   Layer   |   Pinceau   | Transparence |   Couleur   |    Taille   ";
 8002a0e:	4aa6      	ldr	r2, [pc, #664]	; (8002ca8 <StartMode+0x2d0>)
 8002a10:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 8002a14:	4611      	mov	r1, r2
 8002a16:	2245      	movs	r2, #69	; 0x45
 8002a18:	4618      	mov	r0, r3
 8002a1a:	f00c fd1b 	bl	800f454 <memcpy>
  char text_layer[] = "Calque 1        |        Calque 2";
 8002a1e:	4ba3      	ldr	r3, [pc, #652]	; (8002cac <StartMode+0x2d4>)
 8002a20:	f107 04a0 	add.w	r4, r7, #160	; 0xa0
 8002a24:	461d      	mov	r5, r3
 8002a26:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a28:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a2a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a2c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a2e:	682b      	ldr	r3, [r5, #0]
 8002a30:	8023      	strh	r3, [r4, #0]
  char text_alpha[] = "Choisir la transparence : ";
 8002a32:	4b9f      	ldr	r3, [pc, #636]	; (8002cb0 <StartMode+0x2d8>)
 8002a34:	f107 0484 	add.w	r4, r7, #132	; 0x84
 8002a38:	461d      	mov	r5, r3
 8002a3a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a3c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a3e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a42:	c403      	stmia	r4!, {r0, r1}
 8002a44:	8022      	strh	r2, [r4, #0]
 8002a46:	3402      	adds	r4, #2
 8002a48:	0c13      	lsrs	r3, r2, #16
 8002a4a:	7023      	strb	r3, [r4, #0]
  char text_couleur[] = "Tonalite  |    Saturation    | Luminosite";
 8002a4c:	4b99      	ldr	r3, [pc, #612]	; (8002cb4 <StartMode+0x2dc>)
 8002a4e:	f107 0458 	add.w	r4, r7, #88	; 0x58
 8002a52:	461d      	mov	r5, r3
 8002a54:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a56:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a58:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a5a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a5c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a60:	c403      	stmia	r4!, {r0, r1}
 8002a62:	8022      	strh	r2, [r4, #0]
  couleur = FindCouleur(180,0.5,0.5)|0xFF000000;
 8002a64:	eeb6 1a00 	vmov.f32	s2, #96	; 0x3f000000  0.5
 8002a68:	eef6 0a00 	vmov.f32	s1, #96	; 0x3f000000  0.5
 8002a6c:	ed9f 0a92 	vldr	s0, [pc, #584]	; 8002cb8 <StartMode+0x2e0>
 8002a70:	f7ff fe26 	bl	80026c0 <FindCouleur>
 8002a74:	4603      	mov	r3, r0
 8002a76:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002a7a:	4a90      	ldr	r2, [pc, #576]	; (8002cbc <StartMode+0x2e4>)
 8002a7c:	6013      	str	r3, [r2, #0]
  char text_taille[] = "Taille du pinceau :   px";
 8002a7e:	4b90      	ldr	r3, [pc, #576]	; (8002cc0 <StartMode+0x2e8>)
 8002a80:	f107 043c 	add.w	r4, r7, #60	; 0x3c
 8002a84:	461d      	mov	r5, r3
 8002a86:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a88:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002a8a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a8e:	c403      	stmia	r4!, {r0, r1}
 8002a90:	7022      	strb	r2, [r4, #0]
  char text_brush[] = " <<<<            Valider            >>>>";
 8002a92:	f107 0310 	add.w	r3, r7, #16
 8002a96:	4a8b      	ldr	r2, [pc, #556]	; (8002cc4 <StartMode+0x2ec>)
 8002a98:	461c      	mov	r4, r3
 8002a9a:	4615      	mov	r5, r2
 8002a9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a9e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002aa0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002aa2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002aa4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002aa8:	c403      	stmia	r4!, {r0, r1}
 8002aaa:	7022      	strb	r2, [r4, #0]
  char demande_envoi[] = "d";
 8002aac:	f107 030c 	add.w	r3, r7, #12
 8002ab0:	2264      	movs	r2, #100	; 0x64
 8002ab2:	801a      	strh	r2, [r3, #0]
  char confirmation;
  uint32_t pixel;
  char R,V,B;
  for(;;)
  {
	  switch(etat)
 8002ab4:	4b84      	ldr	r3, [pc, #528]	; (8002cc8 <StartMode+0x2f0>)
 8002ab6:	781b      	ldrb	r3, [r3, #0]
 8002ab8:	2b08      	cmp	r3, #8
 8002aba:	f200 8643 	bhi.w	8003744 <StartMode+0xd6c>
 8002abe:	a201      	add	r2, pc, #4	; (adr r2, 8002ac4 <StartMode+0xec>)
 8002ac0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002ac4:	08003745 	.word	0x08003745
 8002ac8:	08002ae9 	.word	0x08002ae9
 8002acc:	08002bdb 	.word	0x08002bdb
 8002ad0:	08002ce5 	.word	0x08002ce5
 8002ad4:	08002ecb 	.word	0x08002ecb
 8002ad8:	0800304f 	.word	0x0800304f
 8002adc:	08003431 	.word	0x08003431
 8002ae0:	080035f7 	.word	0x080035f7
 8002ae4:	0800365d 	.word	0x0800365d
		  break;
	  /*
	   * etat d'affichage du menu
	   */
	  case 1 :
		  if(myMutexLCDHandle != NULL)
 8002ae8:	4b78      	ldr	r3, [pc, #480]	; (8002ccc <StartMode+0x2f4>)
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d06f      	beq.n	8002bd0 <StartMode+0x1f8>
		  {
			   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002af0:	4b76      	ldr	r3, [pc, #472]	; (8002ccc <StartMode+0x2f4>)
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	2101      	movs	r1, #1
 8002af6:	4618      	mov	r0, r3
 8002af8:	f00a fdd0 	bl	800d69c <xQueueSemaphoreTake>
 8002afc:	4603      	mov	r3, r0
 8002afe:	2b01      	cmp	r3, #1
 8002b00:	d166      	bne.n	8002bd0 <StartMode+0x1f8>
			   {
				   BSP_LCD_SelectLayer(1);
 8002b02:	2001      	movs	r0, #1
 8002b04:	f001 fa36 	bl	8003f74 <BSP_LCD_SelectLayer>
				   BSP_LCD_SetFont(&Font12);
 8002b08:	4871      	ldr	r0, [pc, #452]	; (8002cd0 <StartMode+0x2f8>)
 8002b0a:	f001 fa75 	bl	8003ff8 <BSP_LCD_SetFont>
				   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002b0e:	f04f 30ff 	mov.w	r0, #4294967295
 8002b12:	f001 fa3f 	bl	8003f94 <BSP_LCD_SetTextColor>
				   BSP_LCD_FillRect(0, 251, 480, 21);
 8002b16:	2315      	movs	r3, #21
 8002b18:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002b1c:	21fb      	movs	r1, #251	; 0xfb
 8002b1e:	2000      	movs	r0, #0
 8002b20:	f001 fe80 	bl	8004824 <BSP_LCD_FillRect>
				   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8002b24:	486b      	ldr	r0, [pc, #428]	; (8002cd4 <StartMode+0x2fc>)
 8002b26:	f001 fa35 	bl	8003f94 <BSP_LCD_SetTextColor>
				   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text, CENTER_MODE);
 8002b2a:	f107 02c4 	add.w	r2, r7, #196	; 0xc4
 8002b2e:	2301      	movs	r3, #1
 8002b30:	21fc      	movs	r1, #252	; 0xfc
 8002b32:	2000      	movs	r0, #0
 8002b34:	f001 fba2 	bl	800427c <BSP_LCD_DisplayStringAt>
				   BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8002b38:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8002b3c:	f001 fa2a 	bl	8003f94 <BSP_LCD_SetTextColor>
				   LCD_PAINTBRUSH_SAMPLE(480-taille_menu/2, 3*taille_menu/2, taille_menu/2-5);
 8002b40:	2214      	movs	r2, #20
 8002b42:	214b      	movs	r1, #75	; 0x4b
 8002b44:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002b48:	f7ff fb68 	bl	800221c <LCD_PAINTBRUSH_SAMPLE>
				   BSP_LCD_SetTextColor(0xFFFF00FF); //violet
 8002b4c:	f46f 407f 	mvn.w	r0, #65280	; 0xff00
 8002b50:	f001 fa20 	bl	8003f94 <BSP_LCD_SetTextColor>
				   BSP_LCD_FillRect(98*etat_int-170, 265, 35, 5);
 8002b54:	4b60      	ldr	r3, [pc, #384]	; (8002cd8 <StartMode+0x300>)
 8002b56:	781b      	ldrb	r3, [r3, #0]
 8002b58:	b29b      	uxth	r3, r3
 8002b5a:	461a      	mov	r2, r3
 8002b5c:	00d2      	lsls	r2, r2, #3
 8002b5e:	1ad3      	subs	r3, r2, r3
 8002b60:	461a      	mov	r2, r3
 8002b62:	00d2      	lsls	r2, r2, #3
 8002b64:	1ad3      	subs	r3, r2, r3
 8002b66:	005b      	lsls	r3, r3, #1
 8002b68:	b29b      	uxth	r3, r3
 8002b6a:	3baa      	subs	r3, #170	; 0xaa
 8002b6c:	b298      	uxth	r0, r3
 8002b6e:	2305      	movs	r3, #5
 8002b70:	2223      	movs	r2, #35	; 0x23
 8002b72:	f240 1109 	movw	r1, #265	; 0x109
 8002b76:	f001 fe55 	bl	8004824 <BSP_LCD_FillRect>
				   BSP_LCD_SetTextColor(couleur | 0xFF000000);
 8002b7a:	4b50      	ldr	r3, [pc, #320]	; (8002cbc <StartMode+0x2e4>)
 8002b7c:	681b      	ldr	r3, [r3, #0]
 8002b7e:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002b82:	4618      	mov	r0, r3
 8002b84:	f001 fa06 	bl	8003f94 <BSP_LCD_SetTextColor>
				   BSP_LCD_FillCircle(480-taille_menu/2, taille_menu/2, taille_menu/2-5);
 8002b88:	2214      	movs	r2, #20
 8002b8a:	2119      	movs	r1, #25
 8002b8c:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002b90:	f001 fec2 	bl	8004918 <BSP_LCD_FillCircle>
				   BSP_LCD_SetTextColor(couleur & 0xFF000000);
 8002b94:	4b49      	ldr	r3, [pc, #292]	; (8002cbc <StartMode+0x2e4>)
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002b9c:	4618      	mov	r0, r3
 8002b9e:	f001 f9f9 	bl	8003f94 <BSP_LCD_SetTextColor>
				   BSP_LCD_FillCircle(480-taille_menu/2, 5*taille_menu/2, taille_menu/2-5);
 8002ba2:	2214      	movs	r2, #20
 8002ba4:	217d      	movs	r1, #125	; 0x7d
 8002ba6:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002baa:	f001 feb5 	bl	8004918 <BSP_LCD_FillCircle>
				   BSP_LCD_SelectLayer(layer);
 8002bae:	4b4b      	ldr	r3, [pc, #300]	; (8002cdc <StartMode+0x304>)
 8002bb0:	781b      	ldrb	r3, [r3, #0]
 8002bb2:	4618      	mov	r0, r3
 8002bb4:	f001 f9de 	bl	8003f74 <BSP_LCD_SelectLayer>
				   BSP_LCD_SetTextColor(couleur);
 8002bb8:	4b40      	ldr	r3, [pc, #256]	; (8002cbc <StartMode+0x2e4>)
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	4618      	mov	r0, r3
 8002bbe:	f001 f9e9 	bl	8003f94 <BSP_LCD_SetTextColor>
				   xSemaphoreGive(myMutexLCDHandle);
 8002bc2:	4b42      	ldr	r3, [pc, #264]	; (8002ccc <StartMode+0x2f4>)
 8002bc4:	6818      	ldr	r0, [r3, #0]
 8002bc6:	2300      	movs	r3, #0
 8002bc8:	2200      	movs	r2, #0
 8002bca:	2100      	movs	r1, #0
 8002bcc:	f00a fc64 	bl	800d498 <xQueueGenericSend>
			   }
		   }
		  etat = 0;
 8002bd0:	4b3d      	ldr	r3, [pc, #244]	; (8002cc8 <StartMode+0x2f0>)
 8002bd2:	2200      	movs	r2, #0
 8002bd4:	701a      	strb	r2, [r3, #0]
		  break;
 8002bd6:	f000 bdb5 	b.w	8003744 <StartMode+0xd6c>
	  /*
	   * etat de sélection du calque
	   */
	  case 2 :
		  if(sous_menu == 0)
 8002bda:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 8002bde:	2b00      	cmp	r3, #0
 8002be0:	d12e      	bne.n	8002c40 <StartMode+0x268>
		  {
			  if(myMutexLCDHandle != NULL)
 8002be2:	4b3a      	ldr	r3, [pc, #232]	; (8002ccc <StartMode+0x2f4>)
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	2b00      	cmp	r3, #0
 8002be8:	d02a      	beq.n	8002c40 <StartMode+0x268>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002bea:	4b38      	ldr	r3, [pc, #224]	; (8002ccc <StartMode+0x2f4>)
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	2101      	movs	r1, #1
 8002bf0:	4618      	mov	r0, r3
 8002bf2:	f00a fd53 	bl	800d69c <xQueueSemaphoreTake>
 8002bf6:	4603      	mov	r3, r0
 8002bf8:	2b01      	cmp	r3, #1
 8002bfa:	d121      	bne.n	8002c40 <StartMode+0x268>
				   {
					   BSP_LCD_SelectLayer(1);
 8002bfc:	2001      	movs	r0, #1
 8002bfe:	f001 f9b9 	bl	8003f74 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetFont(&Font12);
 8002c02:	4833      	ldr	r0, [pc, #204]	; (8002cd0 <StartMode+0x2f8>)
 8002c04:	f001 f9f8 	bl	8003ff8 <BSP_LCD_SetFont>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002c08:	f04f 30ff 	mov.w	r0, #4294967295
 8002c0c:	f001 f9c2 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 8002c10:	2315      	movs	r3, #21
 8002c12:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002c16:	21fb      	movs	r1, #251	; 0xfb
 8002c18:	2000      	movs	r0, #0
 8002c1a:	f001 fe03 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8002c1e:	482d      	ldr	r0, [pc, #180]	; (8002cd4 <StartMode+0x2fc>)
 8002c20:	f001 f9b8 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_layer, CENTER_MODE);
 8002c24:	f107 02a0 	add.w	r2, r7, #160	; 0xa0
 8002c28:	2301      	movs	r3, #1
 8002c2a:	21fc      	movs	r1, #252	; 0xfc
 8002c2c:	2000      	movs	r0, #0
 8002c2e:	f001 fb25 	bl	800427c <BSP_LCD_DisplayStringAt>
					   xSemaphoreGive(myMutexLCDHandle);
 8002c32:	4b26      	ldr	r3, [pc, #152]	; (8002ccc <StartMode+0x2f4>)
 8002c34:	6818      	ldr	r0, [r3, #0]
 8002c36:	2300      	movs	r3, #0
 8002c38:	2200      	movs	r2, #0
 8002c3a:	2100      	movs	r1, #0
 8002c3c:	f00a fc2c 	bl	800d498 <xQueueGenericSend>
				   }
			   }

		  }
		  sous_menu = 1;
 8002c40:	2301      	movs	r3, #1
 8002c42:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
		  BSP_TS_GetState(&TS_State);
 8002c46:	4826      	ldr	r0, [pc, #152]	; (8002ce0 <StartMode+0x308>)
 8002c48:	f002 fb14 	bl	8005274 <BSP_TS_GetState>
		  if(TS_State.touchDetected)
 8002c4c:	4b24      	ldr	r3, [pc, #144]	; (8002ce0 <StartMode+0x308>)
 8002c4e:	781b      	ldrb	r3, [r3, #0]
 8002c50:	2b00      	cmp	r3, #0
 8002c52:	d01c      	beq.n	8002c8e <StartMode+0x2b6>
		  {
			  if((TS_State.touchX[0]<240) && TS_State.touchY[0] > 272-haut_menu)
 8002c54:	4b22      	ldr	r3, [pc, #136]	; (8002ce0 <StartMode+0x308>)
 8002c56:	885b      	ldrh	r3, [r3, #2]
 8002c58:	2bef      	cmp	r3, #239	; 0xef
 8002c5a:	d80a      	bhi.n	8002c72 <StartMode+0x29a>
 8002c5c:	4b20      	ldr	r3, [pc, #128]	; (8002ce0 <StartMode+0x308>)
 8002c5e:	899b      	ldrh	r3, [r3, #12]
 8002c60:	2bf0      	cmp	r3, #240	; 0xf0
 8002c62:	d906      	bls.n	8002c72 <StartMode+0x29a>
			  {
				  layer = 0;
 8002c64:	4b1d      	ldr	r3, [pc, #116]	; (8002cdc <StartMode+0x304>)
 8002c66:	2200      	movs	r2, #0
 8002c68:	701a      	strb	r2, [r3, #0]
				  sous_menu = 0;
 8002c6a:	2300      	movs	r3, #0
 8002c6c:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
 8002c70:	e00d      	b.n	8002c8e <StartMode+0x2b6>
			  }
			  else if((TS_State.touchX[0]>240) && TS_State.touchY[0] > 272-haut_menu)
 8002c72:	4b1b      	ldr	r3, [pc, #108]	; (8002ce0 <StartMode+0x308>)
 8002c74:	885b      	ldrh	r3, [r3, #2]
 8002c76:	2bf0      	cmp	r3, #240	; 0xf0
 8002c78:	d909      	bls.n	8002c8e <StartMode+0x2b6>
 8002c7a:	4b19      	ldr	r3, [pc, #100]	; (8002ce0 <StartMode+0x308>)
 8002c7c:	899b      	ldrh	r3, [r3, #12]
 8002c7e:	2bf0      	cmp	r3, #240	; 0xf0
 8002c80:	d905      	bls.n	8002c8e <StartMode+0x2b6>
			  {
				  layer = 1;
 8002c82:	4b16      	ldr	r3, [pc, #88]	; (8002cdc <StartMode+0x304>)
 8002c84:	2201      	movs	r2, #1
 8002c86:	701a      	strb	r2, [r3, #0]
				  sous_menu = 0;
 8002c88:	2300      	movs	r3, #0
 8002c8a:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
			  }
		  }
		  if(sous_menu == 0) etat = 1; //on revient au menu de base
 8002c8e:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	f040 854d 	bne.w	8003732 <StartMode+0xd5a>
 8002c98:	4b0b      	ldr	r3, [pc, #44]	; (8002cc8 <StartMode+0x2f0>)
 8002c9a:	2201      	movs	r2, #1
 8002c9c:	701a      	strb	r2, [r3, #0]
		  break;
 8002c9e:	f000 bd48 	b.w	8003732 <StartMode+0xd5a>
 8002ca2:	bf00      	nop
 8002ca4:	43340000 	.word	0x43340000
 8002ca8:	0800fd60 	.word	0x0800fd60
 8002cac:	0800fda8 	.word	0x0800fda8
 8002cb0:	0800fdcc 	.word	0x0800fdcc
 8002cb4:	0800fde8 	.word	0x0800fde8
 8002cb8:	43340000 	.word	0x43340000
 8002cbc:	20009e84 	.word	0x20009e84
 8002cc0:	0800fe14 	.word	0x0800fe14
 8002cc4:	0800fe30 	.word	0x0800fe30
 8002cc8:	2000139e 	.word	0x2000139e
 8002ccc:	20009c34 	.word	0x20009c34
 8002cd0:	200013a8 	.word	0x200013a8
 8002cd4:	ffff0000 	.word	0xffff0000
 8002cd8:	2000139f 	.word	0x2000139f
 8002cdc:	200016a2 	.word	0x200016a2
 8002ce0:	200016d0 	.word	0x200016d0
	  /*
	   * etat de sélection du pinceau
	   */
	  case 3 :
		  if(sous_menu == 0)
 8002ce4:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d12e      	bne.n	8002d4a <StartMode+0x372>
		  {
			  if(myMutexLCDHandle != NULL)
 8002cec:	4ba8      	ldr	r3, [pc, #672]	; (8002f90 <StartMode+0x5b8>)
 8002cee:	681b      	ldr	r3, [r3, #0]
 8002cf0:	2b00      	cmp	r3, #0
 8002cf2:	d02a      	beq.n	8002d4a <StartMode+0x372>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002cf4:	4ba6      	ldr	r3, [pc, #664]	; (8002f90 <StartMode+0x5b8>)
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	2101      	movs	r1, #1
 8002cfa:	4618      	mov	r0, r3
 8002cfc:	f00a fcce 	bl	800d69c <xQueueSemaphoreTake>
 8002d00:	4603      	mov	r3, r0
 8002d02:	2b01      	cmp	r3, #1
 8002d04:	d121      	bne.n	8002d4a <StartMode+0x372>
				   {
					   BSP_LCD_SelectLayer(1);
 8002d06:	2001      	movs	r0, #1
 8002d08:	f001 f934 	bl	8003f74 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetFont(&Font12);
 8002d0c:	48a1      	ldr	r0, [pc, #644]	; (8002f94 <StartMode+0x5bc>)
 8002d0e:	f001 f973 	bl	8003ff8 <BSP_LCD_SetFont>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002d12:	f04f 30ff 	mov.w	r0, #4294967295
 8002d16:	f001 f93d 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 8002d1a:	2315      	movs	r3, #21
 8002d1c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002d20:	21fb      	movs	r1, #251	; 0xfb
 8002d22:	2000      	movs	r0, #0
 8002d24:	f001 fd7e 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8002d28:	489b      	ldr	r0, [pc, #620]	; (8002f98 <StartMode+0x5c0>)
 8002d2a:	f001 f933 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_brush, CENTER_MODE);
 8002d2e:	f107 0210 	add.w	r2, r7, #16
 8002d32:	2301      	movs	r3, #1
 8002d34:	21fc      	movs	r1, #252	; 0xfc
 8002d36:	2000      	movs	r0, #0
 8002d38:	f001 faa0 	bl	800427c <BSP_LCD_DisplayStringAt>
					   xSemaphoreGive(myMutexLCDHandle);
 8002d3c:	4b94      	ldr	r3, [pc, #592]	; (8002f90 <StartMode+0x5b8>)
 8002d3e:	6818      	ldr	r0, [r3, #0]
 8002d40:	2300      	movs	r3, #0
 8002d42:	2200      	movs	r2, #0
 8002d44:	2100      	movs	r1, #0
 8002d46:	f00a fba7 	bl	800d498 <xQueueGenericSend>
				   }
			   }

		  }
		  sous_menu = 1;
 8002d4a:	2301      	movs	r3, #1
 8002d4c:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
		  BSP_TS_GetState(&TS_State);
 8002d50:	4892      	ldr	r0, [pc, #584]	; (8002f9c <StartMode+0x5c4>)
 8002d52:	f002 fa8f 	bl	8005274 <BSP_TS_GetState>
		  if(TS_State.touchDetected)
 8002d56:	4b91      	ldr	r3, [pc, #580]	; (8002f9c <StartMode+0x5c4>)
 8002d58:	781b      	ldrb	r3, [r3, #0]
 8002d5a:	2b00      	cmp	r3, #0
 8002d5c:	f000 80ab 	beq.w	8002eb6 <StartMode+0x4de>
		  {
			  if((TS_State.touchX[0]<190) && TS_State.touchY[0] > 272-haut_menu)
 8002d60:	4b8e      	ldr	r3, [pc, #568]	; (8002f9c <StartMode+0x5c4>)
 8002d62:	885b      	ldrh	r3, [r3, #2]
 8002d64:	2bbd      	cmp	r3, #189	; 0xbd
 8002d66:	d848      	bhi.n	8002dfa <StartMode+0x422>
 8002d68:	4b8c      	ldr	r3, [pc, #560]	; (8002f9c <StartMode+0x5c4>)
 8002d6a:	899b      	ldrh	r3, [r3, #12]
 8002d6c:	2bf0      	cmp	r3, #240	; 0xf0
 8002d6e:	d944      	bls.n	8002dfa <StartMode+0x422>
			  {
				  if(brush==0) brush = max_brush;
 8002d70:	4b8b      	ldr	r3, [pc, #556]	; (8002fa0 <StartMode+0x5c8>)
 8002d72:	781b      	ldrb	r3, [r3, #0]
 8002d74:	2b00      	cmp	r3, #0
 8002d76:	d103      	bne.n	8002d80 <StartMode+0x3a8>
 8002d78:	4b89      	ldr	r3, [pc, #548]	; (8002fa0 <StartMode+0x5c8>)
 8002d7a:	2202      	movs	r2, #2
 8002d7c:	701a      	strb	r2, [r3, #0]
 8002d7e:	e005      	b.n	8002d8c <StartMode+0x3b4>
				  else brush -= 1;
 8002d80:	4b87      	ldr	r3, [pc, #540]	; (8002fa0 <StartMode+0x5c8>)
 8002d82:	781b      	ldrb	r3, [r3, #0]
 8002d84:	3b01      	subs	r3, #1
 8002d86:	b2da      	uxtb	r2, r3
 8002d88:	4b85      	ldr	r3, [pc, #532]	; (8002fa0 <StartMode+0x5c8>)
 8002d8a:	701a      	strb	r2, [r3, #0]
				  if(myMutexLCDHandle != NULL)
 8002d8c:	4b80      	ldr	r3, [pc, #512]	; (8002f90 <StartMode+0x5b8>)
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	2b00      	cmp	r3, #0
 8002d92:	d02d      	beq.n	8002df0 <StartMode+0x418>
				  {
					   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002d94:	4b7e      	ldr	r3, [pc, #504]	; (8002f90 <StartMode+0x5b8>)
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	2101      	movs	r1, #1
 8002d9a:	4618      	mov	r0, r3
 8002d9c:	f00a fc7e 	bl	800d69c <xQueueSemaphoreTake>
 8002da0:	4603      	mov	r3, r0
 8002da2:	2b01      	cmp	r3, #1
 8002da4:	d124      	bne.n	8002df0 <StartMode+0x418>
					   {
						  BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002da6:	f04f 30ff 	mov.w	r0, #4294967295
 8002daa:	f001 f8f3 	bl	8003f94 <BSP_LCD_SetTextColor>
						  BSP_LCD_FillRect(480-taille_menu , taille_menu, taille_menu-1, taille_menu);
 8002dae:	2332      	movs	r3, #50	; 0x32
 8002db0:	2231      	movs	r2, #49	; 0x31
 8002db2:	2132      	movs	r1, #50	; 0x32
 8002db4:	f44f 70d7 	mov.w	r0, #430	; 0x1ae
 8002db8:	f001 fd34 	bl	8004824 <BSP_LCD_FillRect>
						  BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8002dbc:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8002dc0:	f001 f8e8 	bl	8003f94 <BSP_LCD_SetTextColor>
						  LCD_PAINTBRUSH_SAMPLE(480-taille_menu/2, 3*taille_menu/2, taille_menu/2-5);
 8002dc4:	2214      	movs	r2, #20
 8002dc6:	214b      	movs	r1, #75	; 0x4b
 8002dc8:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002dcc:	f7ff fa26 	bl	800221c <LCD_PAINTBRUSH_SAMPLE>
						  BSP_LCD_SetTextColor(couleur);
 8002dd0:	4b74      	ldr	r3, [pc, #464]	; (8002fa4 <StartMode+0x5cc>)
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	4618      	mov	r0, r3
 8002dd6:	f001 f8dd 	bl	8003f94 <BSP_LCD_SetTextColor>
						  xSemaphoreGive(myMutexLCDHandle);
 8002dda:	4b6d      	ldr	r3, [pc, #436]	; (8002f90 <StartMode+0x5b8>)
 8002ddc:	6818      	ldr	r0, [r3, #0]
 8002dde:	2300      	movs	r3, #0
 8002de0:	2200      	movs	r2, #0
 8002de2:	2100      	movs	r1, #0
 8002de4:	f00a fb58 	bl	800d498 <xQueueGenericSend>
					   }
				  }
				  while(TS_State.touchDetected) BSP_TS_GetState(&TS_State);;
 8002de8:	e002      	b.n	8002df0 <StartMode+0x418>
 8002dea:	486c      	ldr	r0, [pc, #432]	; (8002f9c <StartMode+0x5c4>)
 8002dec:	f002 fa42 	bl	8005274 <BSP_TS_GetState>
 8002df0:	4b6a      	ldr	r3, [pc, #424]	; (8002f9c <StartMode+0x5c4>)
 8002df2:	781b      	ldrb	r3, [r3, #0]
 8002df4:	2b00      	cmp	r3, #0
 8002df6:	d1f8      	bne.n	8002dea <StartMode+0x412>
			  if((TS_State.touchX[0]<190) && TS_State.touchY[0] > 272-haut_menu)
 8002df8:	e05d      	b.n	8002eb6 <StartMode+0x4de>
			  }
			  else if((TS_State.touchX[0]>290) && TS_State.touchY[0] > 272-haut_menu)
 8002dfa:	4b68      	ldr	r3, [pc, #416]	; (8002f9c <StartMode+0x5c4>)
 8002dfc:	885b      	ldrh	r3, [r3, #2]
 8002dfe:	f5b3 7f91 	cmp.w	r3, #290	; 0x122
 8002e02:	d948      	bls.n	8002e96 <StartMode+0x4be>
 8002e04:	4b65      	ldr	r3, [pc, #404]	; (8002f9c <StartMode+0x5c4>)
 8002e06:	899b      	ldrh	r3, [r3, #12]
 8002e08:	2bf0      	cmp	r3, #240	; 0xf0
 8002e0a:	d944      	bls.n	8002e96 <StartMode+0x4be>
			  {
				  if(brush==max_brush) brush = 0;
 8002e0c:	4b64      	ldr	r3, [pc, #400]	; (8002fa0 <StartMode+0x5c8>)
 8002e0e:	781b      	ldrb	r3, [r3, #0]
 8002e10:	2b02      	cmp	r3, #2
 8002e12:	d103      	bne.n	8002e1c <StartMode+0x444>
 8002e14:	4b62      	ldr	r3, [pc, #392]	; (8002fa0 <StartMode+0x5c8>)
 8002e16:	2200      	movs	r2, #0
 8002e18:	701a      	strb	r2, [r3, #0]
 8002e1a:	e005      	b.n	8002e28 <StartMode+0x450>
				  else brush += 1;
 8002e1c:	4b60      	ldr	r3, [pc, #384]	; (8002fa0 <StartMode+0x5c8>)
 8002e1e:	781b      	ldrb	r3, [r3, #0]
 8002e20:	3301      	adds	r3, #1
 8002e22:	b2da      	uxtb	r2, r3
 8002e24:	4b5e      	ldr	r3, [pc, #376]	; (8002fa0 <StartMode+0x5c8>)
 8002e26:	701a      	strb	r2, [r3, #0]
				  if(myMutexLCDHandle != NULL)
 8002e28:	4b59      	ldr	r3, [pc, #356]	; (8002f90 <StartMode+0x5b8>)
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	2b00      	cmp	r3, #0
 8002e2e:	d02d      	beq.n	8002e8c <StartMode+0x4b4>
				  {
					   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8002e30:	4b57      	ldr	r3, [pc, #348]	; (8002f90 <StartMode+0x5b8>)
 8002e32:	681b      	ldr	r3, [r3, #0]
 8002e34:	2101      	movs	r1, #1
 8002e36:	4618      	mov	r0, r3
 8002e38:	f00a fc30 	bl	800d69c <xQueueSemaphoreTake>
 8002e3c:	4603      	mov	r3, r0
 8002e3e:	2b01      	cmp	r3, #1
 8002e40:	d124      	bne.n	8002e8c <StartMode+0x4b4>
					   {
						  BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002e42:	f04f 30ff 	mov.w	r0, #4294967295
 8002e46:	f001 f8a5 	bl	8003f94 <BSP_LCD_SetTextColor>
						  BSP_LCD_FillRect(480-taille_menu , taille_menu, taille_menu-1, taille_menu);
 8002e4a:	2332      	movs	r3, #50	; 0x32
 8002e4c:	2231      	movs	r2, #49	; 0x31
 8002e4e:	2132      	movs	r1, #50	; 0x32
 8002e50:	f44f 70d7 	mov.w	r0, #430	; 0x1ae
 8002e54:	f001 fce6 	bl	8004824 <BSP_LCD_FillRect>
						  BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8002e58:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8002e5c:	f001 f89a 	bl	8003f94 <BSP_LCD_SetTextColor>
						  LCD_PAINTBRUSH_SAMPLE(480-taille_menu/2, 3*taille_menu/2, taille_menu/2-5);
 8002e60:	2214      	movs	r2, #20
 8002e62:	214b      	movs	r1, #75	; 0x4b
 8002e64:	f240 10c7 	movw	r0, #455	; 0x1c7
 8002e68:	f7ff f9d8 	bl	800221c <LCD_PAINTBRUSH_SAMPLE>
						  BSP_LCD_SetTextColor(couleur);
 8002e6c:	4b4d      	ldr	r3, [pc, #308]	; (8002fa4 <StartMode+0x5cc>)
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	4618      	mov	r0, r3
 8002e72:	f001 f88f 	bl	8003f94 <BSP_LCD_SetTextColor>
						  xSemaphoreGive(myMutexLCDHandle);
 8002e76:	4b46      	ldr	r3, [pc, #280]	; (8002f90 <StartMode+0x5b8>)
 8002e78:	6818      	ldr	r0, [r3, #0]
 8002e7a:	2300      	movs	r3, #0
 8002e7c:	2200      	movs	r2, #0
 8002e7e:	2100      	movs	r1, #0
 8002e80:	f00a fb0a 	bl	800d498 <xQueueGenericSend>
					   }
				  }
				  while(TS_State.touchDetected) BSP_TS_GetState(&TS_State);;
 8002e84:	e002      	b.n	8002e8c <StartMode+0x4b4>
 8002e86:	4845      	ldr	r0, [pc, #276]	; (8002f9c <StartMode+0x5c4>)
 8002e88:	f002 f9f4 	bl	8005274 <BSP_TS_GetState>
 8002e8c:	4b43      	ldr	r3, [pc, #268]	; (8002f9c <StartMode+0x5c4>)
 8002e8e:	781b      	ldrb	r3, [r3, #0]
 8002e90:	2b00      	cmp	r3, #0
 8002e92:	d1f8      	bne.n	8002e86 <StartMode+0x4ae>
			  else if((TS_State.touchX[0]>290) && TS_State.touchY[0] > 272-haut_menu)
 8002e94:	e00f      	b.n	8002eb6 <StartMode+0x4de>
			  }
			  else if((TS_State.touchX[0]>190) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<290))
 8002e96:	4b41      	ldr	r3, [pc, #260]	; (8002f9c <StartMode+0x5c4>)
 8002e98:	885b      	ldrh	r3, [r3, #2]
 8002e9a:	2bbe      	cmp	r3, #190	; 0xbe
 8002e9c:	d90b      	bls.n	8002eb6 <StartMode+0x4de>
 8002e9e:	4b3f      	ldr	r3, [pc, #252]	; (8002f9c <StartMode+0x5c4>)
 8002ea0:	899b      	ldrh	r3, [r3, #12]
 8002ea2:	2bf0      	cmp	r3, #240	; 0xf0
 8002ea4:	d907      	bls.n	8002eb6 <StartMode+0x4de>
 8002ea6:	4b3d      	ldr	r3, [pc, #244]	; (8002f9c <StartMode+0x5c4>)
 8002ea8:	885b      	ldrh	r3, [r3, #2]
 8002eaa:	f5b3 7f91 	cmp.w	r3, #290	; 0x122
 8002eae:	d202      	bcs.n	8002eb6 <StartMode+0x4de>
			  {
				  sous_menu = 0;
 8002eb0:	2300      	movs	r3, #0
 8002eb2:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
			  }
		  }
		  if(sous_menu == 0) etat = 1; //on revient au menu de base
 8002eb6:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	f040 843b 	bne.w	8003736 <StartMode+0xd5e>
 8002ec0:	4b39      	ldr	r3, [pc, #228]	; (8002fa8 <StartMode+0x5d0>)
 8002ec2:	2201      	movs	r2, #1
 8002ec4:	701a      	strb	r2, [r3, #0]
		  break;
 8002ec6:	f000 bc36 	b.w	8003736 <StartMode+0xd5e>
	  /*
	   * etat de sélection de la transparence
	   */
	  case 4 :
		  if(sous_menu == 0)
 8002eca:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d156      	bne.n	8002f80 <StartMode+0x5a8>
		  {
			  if(myMutexLCDHandle != NULL)
 8002ed2:	4b2f      	ldr	r3, [pc, #188]	; (8002f90 <StartMode+0x5b8>)
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	d052      	beq.n	8002f80 <StartMode+0x5a8>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 8002eda:	4b2d      	ldr	r3, [pc, #180]	; (8002f90 <StartMode+0x5b8>)
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002ee2:	4618      	mov	r0, r3
 8002ee4:	f00a fbda 	bl	800d69c <xQueueSemaphoreTake>
 8002ee8:	4603      	mov	r3, r0
 8002eea:	2b01      	cmp	r3, #1
 8002eec:	d148      	bne.n	8002f80 <StartMode+0x5a8>
				   {
					   BSP_LCD_SelectLayer(1);
 8002eee:	2001      	movs	r0, #1
 8002ef0:	f001 f840 	bl	8003f74 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8002ef4:	f04f 30ff 	mov.w	r0, #4294967295
 8002ef8:	f001 f84c 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 8002efc:	2315      	movs	r3, #21
 8002efe:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8002f02:	21fb      	movs	r1, #251	; 0xfb
 8002f04:	2000      	movs	r0, #0
 8002f06:	f001 fc8d 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8002f0a:	4823      	ldr	r0, [pc, #140]	; (8002f98 <StartMode+0x5c0>)
 8002f0c:	f001 f842 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_alpha, LEFT_MODE);
 8002f10:	f107 0284 	add.w	r2, r7, #132	; 0x84
 8002f14:	2303      	movs	r3, #3
 8002f16:	21fc      	movs	r1, #252	; 0xfc
 8002f18:	2000      	movs	r0, #0
 8002f1a:	f001 f9af 	bl	800427c <BSP_LCD_DisplayStringAt>
					   for(uint32_t i = 0;i<256; i++)
 8002f1e:	2300      	movs	r3, #0
 8002f20:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8002f24:	e021      	b.n	8002f6a <StartMode+0x592>
					   {
						   for(char j = 0; j<18; j++)
 8002f26:	2300      	movs	r3, #0
 8002f28:	f887 3123 	strb.w	r3, [r7, #291]	; 0x123
 8002f2c:	e014      	b.n	8002f58 <StartMode+0x580>
						   {
							   BSP_LCD_DrawPixel(200+i, 252+j, i << 24);
 8002f2e:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8002f32:	b29b      	uxth	r3, r3
 8002f34:	33c8      	adds	r3, #200	; 0xc8
 8002f36:	b298      	uxth	r0, r3
 8002f38:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8002f3c:	b29b      	uxth	r3, r3
 8002f3e:	33fc      	adds	r3, #252	; 0xfc
 8002f40:	b299      	uxth	r1, r3
 8002f42:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8002f46:	061b      	lsls	r3, r3, #24
 8002f48:	461a      	mov	r2, r3
 8002f4a:	f001 fc23 	bl	8004794 <BSP_LCD_DrawPixel>
						   for(char j = 0; j<18; j++)
 8002f4e:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8002f52:	3301      	adds	r3, #1
 8002f54:	f887 3123 	strb.w	r3, [r7, #291]	; 0x123
 8002f58:	f897 3123 	ldrb.w	r3, [r7, #291]	; 0x123
 8002f5c:	2b11      	cmp	r3, #17
 8002f5e:	d9e6      	bls.n	8002f2e <StartMode+0x556>
					   for(uint32_t i = 0;i<256; i++)
 8002f60:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8002f64:	3301      	adds	r3, #1
 8002f66:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8002f6a:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8002f6e:	2bff      	cmp	r3, #255	; 0xff
 8002f70:	d9d9      	bls.n	8002f26 <StartMode+0x54e>
						   }
					   }
					   xSemaphoreGive(myMutexLCDHandle);
 8002f72:	4b07      	ldr	r3, [pc, #28]	; (8002f90 <StartMode+0x5b8>)
 8002f74:	6818      	ldr	r0, [r3, #0]
 8002f76:	2300      	movs	r3, #0
 8002f78:	2200      	movs	r2, #0
 8002f7a:	2100      	movs	r1, #0
 8002f7c:	f00a fa8c 	bl	800d498 <xQueueGenericSend>
				   }
			   }
		  }
		  sous_menu = 1;
 8002f80:	2301      	movs	r3, #1
 8002f82:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
		  BSP_TS_GetState(&TS_State);
 8002f86:	4805      	ldr	r0, [pc, #20]	; (8002f9c <StartMode+0x5c4>)
 8002f88:	f002 f974 	bl	8005274 <BSP_TS_GetState>
		  while(TS_State.touchDetected)
 8002f8c:	e052      	b.n	8003034 <StartMode+0x65c>
 8002f8e:	bf00      	nop
 8002f90:	20009c34 	.word	0x20009c34
 8002f94:	200013a8 	.word	0x200013a8
 8002f98:	ffff0000 	.word	0xffff0000
 8002f9c:	200016d0 	.word	0x200016d0
 8002fa0:	2000139d 	.word	0x2000139d
 8002fa4:	20009e84 	.word	0x20009e84
 8002fa8:	2000139e 	.word	0x2000139e
		  {
			  if((TS_State.touchX[0]>200) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<455))
 8002fac:	4bbd      	ldr	r3, [pc, #756]	; (80032a4 <StartMode+0x8cc>)
 8002fae:	885b      	ldrh	r3, [r3, #2]
 8002fb0:	2bc8      	cmp	r3, #200	; 0xc8
 8002fb2:	d939      	bls.n	8003028 <StartMode+0x650>
 8002fb4:	4bbb      	ldr	r3, [pc, #748]	; (80032a4 <StartMode+0x8cc>)
 8002fb6:	899b      	ldrh	r3, [r3, #12]
 8002fb8:	2bf0      	cmp	r3, #240	; 0xf0
 8002fba:	d935      	bls.n	8003028 <StartMode+0x650>
 8002fbc:	4bb9      	ldr	r3, [pc, #740]	; (80032a4 <StartMode+0x8cc>)
 8002fbe:	885b      	ldrh	r3, [r3, #2]
 8002fc0:	f5b3 7fe3 	cmp.w	r3, #454	; 0x1c6
 8002fc4:	d830      	bhi.n	8003028 <StartMode+0x650>
			  {
				  couleur &= 0x00FFFFFF; //on enlève l'ancienne transparence
 8002fc6:	4bb8      	ldr	r3, [pc, #736]	; (80032a8 <StartMode+0x8d0>)
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8002fce:	4ab6      	ldr	r2, [pc, #728]	; (80032a8 <StartMode+0x8d0>)
 8002fd0:	6013      	str	r3, [r2, #0]
				  couleur |= ((TS_State.touchX[0]-200)<<24);
 8002fd2:	4bb4      	ldr	r3, [pc, #720]	; (80032a4 <StartMode+0x8cc>)
 8002fd4:	885b      	ldrh	r3, [r3, #2]
 8002fd6:	3bc8      	subs	r3, #200	; 0xc8
 8002fd8:	061b      	lsls	r3, r3, #24
 8002fda:	461a      	mov	r2, r3
 8002fdc:	4bb2      	ldr	r3, [pc, #712]	; (80032a8 <StartMode+0x8d0>)
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	4313      	orrs	r3, r2
 8002fe2:	4ab1      	ldr	r2, [pc, #708]	; (80032a8 <StartMode+0x8d0>)
 8002fe4:	6013      	str	r3, [r2, #0]
				  if(myMutexLCDHandle != NULL)
 8002fe6:	4bb1      	ldr	r3, [pc, #708]	; (80032ac <StartMode+0x8d4>)
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	d01c      	beq.n	8003028 <StartMode+0x650>
				  {
					   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 8002fee:	4baf      	ldr	r3, [pc, #700]	; (80032ac <StartMode+0x8d4>)
 8002ff0:	681b      	ldr	r3, [r3, #0]
 8002ff2:	2164      	movs	r1, #100	; 0x64
 8002ff4:	4618      	mov	r0, r3
 8002ff6:	f00a fb51 	bl	800d69c <xQueueSemaphoreTake>
 8002ffa:	4603      	mov	r3, r0
 8002ffc:	2b01      	cmp	r3, #1
 8002ffe:	d113      	bne.n	8003028 <StartMode+0x650>
					   {
						   BSP_LCD_SetTextColor(couleur & 0xFF000000);
 8003000:	4ba9      	ldr	r3, [pc, #676]	; (80032a8 <StartMode+0x8d0>)
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003008:	4618      	mov	r0, r3
 800300a:	f000 ffc3 	bl	8003f94 <BSP_LCD_SetTextColor>
						   BSP_LCD_FillCircle(480-taille_menu/2, 5*taille_menu/2, taille_menu/2-5);
 800300e:	2214      	movs	r2, #20
 8003010:	217d      	movs	r1, #125	; 0x7d
 8003012:	f240 10c7 	movw	r0, #455	; 0x1c7
 8003016:	f001 fc7f 	bl	8004918 <BSP_LCD_FillCircle>
						   xSemaphoreGive(myMutexLCDHandle);
 800301a:	4ba4      	ldr	r3, [pc, #656]	; (80032ac <StartMode+0x8d4>)
 800301c:	6818      	ldr	r0, [r3, #0]
 800301e:	2300      	movs	r3, #0
 8003020:	2200      	movs	r2, #0
 8003022:	2100      	movs	r1, #0
 8003024:	f00a fa38 	bl	800d498 <xQueueGenericSend>
					   }
				   }
			  }
			  sous_menu = 0;
 8003028:	2300      	movs	r3, #0
 800302a:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
			  BSP_TS_GetState(&TS_State);
 800302e:	489d      	ldr	r0, [pc, #628]	; (80032a4 <StartMode+0x8cc>)
 8003030:	f002 f920 	bl	8005274 <BSP_TS_GetState>
		  while(TS_State.touchDetected)
 8003034:	4b9b      	ldr	r3, [pc, #620]	; (80032a4 <StartMode+0x8cc>)
 8003036:	781b      	ldrb	r3, [r3, #0]
 8003038:	2b00      	cmp	r3, #0
 800303a:	d1b7      	bne.n	8002fac <StartMode+0x5d4>
		  }
		  if(sous_menu == 0) etat = 1;
 800303c:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 8003040:	2b00      	cmp	r3, #0
 8003042:	f040 837a 	bne.w	800373a <StartMode+0xd62>
 8003046:	4b9a      	ldr	r3, [pc, #616]	; (80032b0 <StartMode+0x8d8>)
 8003048:	2201      	movs	r2, #1
 800304a:	701a      	strb	r2, [r3, #0]
		  break;
 800304c:	e375      	b.n	800373a <StartMode+0xd62>
	  /*
	   * etat de sélection de la couleur
	   */
	  case 5 :
		  if(sous_menu == 0)
 800304e:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 8003052:	2b00      	cmp	r3, #0
 8003054:	d12c      	bne.n	80030b0 <StartMode+0x6d8>
		  {
			  if(myMutexLCDHandle != NULL)
 8003056:	4b95      	ldr	r3, [pc, #596]	; (80032ac <StartMode+0x8d4>)
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	2b00      	cmp	r3, #0
 800305c:	d028      	beq.n	80030b0 <StartMode+0x6d8>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 800305e:	4b93      	ldr	r3, [pc, #588]	; (80032ac <StartMode+0x8d4>)
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003066:	4618      	mov	r0, r3
 8003068:	f00a fb18 	bl	800d69c <xQueueSemaphoreTake>
 800306c:	4603      	mov	r3, r0
 800306e:	2b01      	cmp	r3, #1
 8003070:	d11e      	bne.n	80030b0 <StartMode+0x6d8>
				   {
					   BSP_LCD_SelectLayer(1);
 8003072:	2001      	movs	r0, #1
 8003074:	f000 ff7e 	bl	8003f74 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8003078:	f04f 30ff 	mov.w	r0, #4294967295
 800307c:	f000 ff8a 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 8003080:	2315      	movs	r3, #21
 8003082:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003086:	21fb      	movs	r1, #251	; 0xfb
 8003088:	2000      	movs	r0, #0
 800308a:	f001 fbcb 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 800308e:	4889      	ldr	r0, [pc, #548]	; (80032b4 <StartMode+0x8dc>)
 8003090:	f000 ff80 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_couleur, CENTER_MODE);
 8003094:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8003098:	2301      	movs	r3, #1
 800309a:	21fc      	movs	r1, #252	; 0xfc
 800309c:	2000      	movs	r0, #0
 800309e:	f001 f8ed 	bl	800427c <BSP_LCD_DisplayStringAt>
					   xSemaphoreGive(myMutexLCDHandle);
 80030a2:	4b82      	ldr	r3, [pc, #520]	; (80032ac <StartMode+0x8d4>)
 80030a4:	6818      	ldr	r0, [r3, #0]
 80030a6:	2300      	movs	r3, #0
 80030a8:	2200      	movs	r2, #0
 80030aa:	2100      	movs	r1, #0
 80030ac:	f00a f9f4 	bl	800d498 <xQueueGenericSend>
				   }
			  }
		  }
		  sous_menu = 1;
 80030b0:	2301      	movs	r3, #1
 80030b2:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
		  switch(menu_couleur)
 80030b6:	f897 3136 	ldrb.w	r3, [r7, #310]	; 0x136
 80030ba:	2b03      	cmp	r3, #3
 80030bc:	f200 81af 	bhi.w	800341e <StartMode+0xa46>
 80030c0:	a201      	add	r2, pc, #4	; (adr r2, 80030c8 <StartMode+0x6f0>)
 80030c2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80030c6:	bf00      	nop
 80030c8:	080030d9 	.word	0x080030d9
 80030cc:	080031f3 	.word	0x080031f3
 80030d0:	080032b9 	.word	0x080032b9
 80030d4:	0800336b 	.word	0x0800336b
		  {
		  /*
		   * premier sous_menu : choix entre tonalité, saturation et luminosité
		   */
		  case 0 :
			  BSP_TS_GetState(&TS_State);
 80030d8:	4872      	ldr	r0, [pc, #456]	; (80032a4 <StartMode+0x8cc>)
 80030da:	f002 f8cb 	bl	8005274 <BSP_TS_GetState>
			  if(TS_State.touchDetected && menu_couleur == 0)
 80030de:	4b71      	ldr	r3, [pc, #452]	; (80032a4 <StartMode+0x8cc>)
 80030e0:	781b      	ldrb	r3, [r3, #0]
 80030e2:	2b00      	cmp	r3, #0
 80030e4:	f000 819a 	beq.w	800341c <StartMode+0xa44>
 80030e8:	f897 3136 	ldrb.w	r3, [r7, #310]	; 0x136
 80030ec:	2b00      	cmp	r3, #0
 80030ee:	f040 8195 	bne.w	800341c <StartMode+0xa44>
			  {
				  if((TS_State.touchX[0]<170) && TS_State.touchY[0] > 272-haut_menu)
 80030f2:	4b6c      	ldr	r3, [pc, #432]	; (80032a4 <StartMode+0x8cc>)
 80030f4:	885b      	ldrh	r3, [r3, #2]
 80030f6:	2ba9      	cmp	r3, #169	; 0xa9
 80030f8:	d81e      	bhi.n	8003138 <StartMode+0x760>
 80030fa:	4b6a      	ldr	r3, [pc, #424]	; (80032a4 <StartMode+0x8cc>)
 80030fc:	899b      	ldrh	r3, [r3, #12]
 80030fe:	2bf0      	cmp	r3, #240	; 0xf0
 8003100:	d91a      	bls.n	8003138 <StartMode+0x760>
					  // clique sur tonalité
				  {
					  menu_couleur = 1;
 8003102:	2301      	movs	r3, #1
 8003104:	f887 3136 	strb.w	r3, [r7, #310]	; 0x136
					  if(myMutexLCDHandle != NULL)
 8003108:	4b68      	ldr	r3, [pc, #416]	; (80032ac <StartMode+0x8d4>)
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	2b00      	cmp	r3, #0
 800310e:	d06c      	beq.n	80031ea <StartMode+0x812>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 8003110:	4b66      	ldr	r3, [pc, #408]	; (80032ac <StartMode+0x8d4>)
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003118:	4618      	mov	r0, r3
 800311a:	f00a fabf 	bl	800d69c <xQueueSemaphoreTake>
 800311e:	4603      	mov	r3, r0
 8003120:	2b01      	cmp	r3, #1
 8003122:	d162      	bne.n	80031ea <StartMode+0x812>
						   {
							   AfficheTonalite();
 8003124:	f7ff f91a 	bl	800235c <AfficheTonalite>
							   xSemaphoreGive(myMutexLCDHandle);
 8003128:	4b60      	ldr	r3, [pc, #384]	; (80032ac <StartMode+0x8d4>)
 800312a:	6818      	ldr	r0, [r3, #0]
 800312c:	2300      	movs	r3, #0
 800312e:	2200      	movs	r2, #0
 8003130:	2100      	movs	r1, #0
 8003132:	f00a f9b1 	bl	800d498 <xQueueGenericSend>
					  if(myMutexLCDHandle != NULL)
 8003136:	e058      	b.n	80031ea <StartMode+0x812>
						   }
					  }
				  }
				  else if((TS_State.touchX[0]>310) && TS_State.touchY[0] > 272-haut_menu)
 8003138:	4b5a      	ldr	r3, [pc, #360]	; (80032a4 <StartMode+0x8cc>)
 800313a:	885b      	ldrh	r3, [r3, #2]
 800313c:	f5b3 7f9b 	cmp.w	r3, #310	; 0x136
 8003140:	d922      	bls.n	8003188 <StartMode+0x7b0>
 8003142:	4b58      	ldr	r3, [pc, #352]	; (80032a4 <StartMode+0x8cc>)
 8003144:	899b      	ldrh	r3, [r3, #12]
 8003146:	2bf0      	cmp	r3, #240	; 0xf0
 8003148:	d91e      	bls.n	8003188 <StartMode+0x7b0>
					  //clique sur luminosité
				  {
					  menu_couleur = 2;
 800314a:	2302      	movs	r3, #2
 800314c:	f887 3136 	strb.w	r3, [r7, #310]	; 0x136
					  if(myMutexLCDHandle != NULL)
 8003150:	4b56      	ldr	r3, [pc, #344]	; (80032ac <StartMode+0x8d4>)
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	2b00      	cmp	r3, #0
 8003156:	d04a      	beq.n	80031ee <StartMode+0x816>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 8003158:	4b54      	ldr	r3, [pc, #336]	; (80032ac <StartMode+0x8d4>)
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003160:	4618      	mov	r0, r3
 8003162:	f00a fa9b 	bl	800d69c <xQueueSemaphoreTake>
 8003166:	4603      	mov	r3, r0
 8003168:	2b01      	cmp	r3, #1
 800316a:	d140      	bne.n	80031ee <StartMode+0x816>
						   {
							   AfficheLuminosite(ton, sat);
 800316c:	edd7 0a4a 	vldr	s1, [r7, #296]	; 0x128
 8003170:	ed97 0a4c 	vldr	s0, [r7, #304]	; 0x130
 8003174:	f7ff f9fc 	bl	8002570 <AfficheLuminosite>
							   xSemaphoreGive(myMutexLCDHandle);
 8003178:	4b4c      	ldr	r3, [pc, #304]	; (80032ac <StartMode+0x8d4>)
 800317a:	6818      	ldr	r0, [r3, #0]
 800317c:	2300      	movs	r3, #0
 800317e:	2200      	movs	r2, #0
 8003180:	2100      	movs	r1, #0
 8003182:	f00a f989 	bl	800d498 <xQueueGenericSend>
					  if(myMutexLCDHandle != NULL)
 8003186:	e032      	b.n	80031ee <StartMode+0x816>
						   }
					  }
				  }
				  else if((TS_State.touchX[0]<310) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]>170))
 8003188:	4b46      	ldr	r3, [pc, #280]	; (80032a4 <StartMode+0x8cc>)
 800318a:	885b      	ldrh	r3, [r3, #2]
 800318c:	f5b3 7f9b 	cmp.w	r3, #310	; 0x136
 8003190:	f080 8144 	bcs.w	800341c <StartMode+0xa44>
 8003194:	4b43      	ldr	r3, [pc, #268]	; (80032a4 <StartMode+0x8cc>)
 8003196:	899b      	ldrh	r3, [r3, #12]
 8003198:	2bf0      	cmp	r3, #240	; 0xf0
 800319a:	f240 813f 	bls.w	800341c <StartMode+0xa44>
 800319e:	4b41      	ldr	r3, [pc, #260]	; (80032a4 <StartMode+0x8cc>)
 80031a0:	885b      	ldrh	r3, [r3, #2]
 80031a2:	2baa      	cmp	r3, #170	; 0xaa
 80031a4:	f240 813a 	bls.w	800341c <StartMode+0xa44>
					  //clique sur saturation
				  {
					  menu_couleur = 3;
 80031a8:	2303      	movs	r3, #3
 80031aa:	f887 3136 	strb.w	r3, [r7, #310]	; 0x136
					  if(myMutexLCDHandle != NULL)
 80031ae:	4b3f      	ldr	r3, [pc, #252]	; (80032ac <StartMode+0x8d4>)
 80031b0:	681b      	ldr	r3, [r3, #0]
 80031b2:	2b00      	cmp	r3, #0
 80031b4:	f000 8132 	beq.w	800341c <StartMode+0xa44>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 80031b8:	4b3c      	ldr	r3, [pc, #240]	; (80032ac <StartMode+0x8d4>)
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80031c0:	4618      	mov	r0, r3
 80031c2:	f00a fa6b 	bl	800d69c <xQueueSemaphoreTake>
 80031c6:	4603      	mov	r3, r0
 80031c8:	2b01      	cmp	r3, #1
 80031ca:	f040 8127 	bne.w	800341c <StartMode+0xa44>
						   {
							   AfficheSaturation(ton, lum);
 80031ce:	edd7 0a4b 	vldr	s1, [r7, #300]	; 0x12c
 80031d2:	ed97 0a4c 	vldr	s0, [r7, #304]	; 0x130
 80031d6:	f7ff fa1f 	bl	8002618 <AfficheSaturation>
							   xSemaphoreGive(myMutexLCDHandle);
 80031da:	4b34      	ldr	r3, [pc, #208]	; (80032ac <StartMode+0x8d4>)
 80031dc:	6818      	ldr	r0, [r3, #0]
 80031de:	2300      	movs	r3, #0
 80031e0:	2200      	movs	r2, #0
 80031e2:	2100      	movs	r1, #0
 80031e4:	f00a f958 	bl	800d498 <xQueueGenericSend>
						   }
					  }
				  }
			  }
			  break;
 80031e8:	e118      	b.n	800341c <StartMode+0xa44>
					  if(myMutexLCDHandle != NULL)
 80031ea:	bf00      	nop
 80031ec:	e116      	b.n	800341c <StartMode+0xa44>
					  if(myMutexLCDHandle != NULL)
 80031ee:	bf00      	nop
			  break;
 80031f0:	e114      	b.n	800341c <StartMode+0xa44>
		  /*
		   * on a affiché l'arc en ciel des tonalités, l'utilisateur choisit maintenant celle-ci.
		   */
		  case 1:
			  BSP_TS_GetState(&TS_State);
 80031f2:	482c      	ldr	r0, [pc, #176]	; (80032a4 <StartMode+0x8cc>)
 80031f4:	f002 f83e 	bl	8005274 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 80031f8:	e04f      	b.n	800329a <StartMode+0x8c2>
			  {
				  if((TS_State.touchX[0]>=50) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<433))
 80031fa:	4b2a      	ldr	r3, [pc, #168]	; (80032a4 <StartMode+0x8cc>)
 80031fc:	885b      	ldrh	r3, [r3, #2]
 80031fe:	2b31      	cmp	r3, #49	; 0x31
 8003200:	d942      	bls.n	8003288 <StartMode+0x8b0>
 8003202:	4b28      	ldr	r3, [pc, #160]	; (80032a4 <StartMode+0x8cc>)
 8003204:	899b      	ldrh	r3, [r3, #12]
 8003206:	2bf0      	cmp	r3, #240	; 0xf0
 8003208:	d93e      	bls.n	8003288 <StartMode+0x8b0>
 800320a:	4b26      	ldr	r3, [pc, #152]	; (80032a4 <StartMode+0x8cc>)
 800320c:	885b      	ldrh	r3, [r3, #2]
 800320e:	f5b3 7fd8 	cmp.w	r3, #432	; 0x1b0
 8003212:	d839      	bhi.n	8003288 <StartMode+0x8b0>
				  {
					  ton = FindTonalite(TS_State.touchX[0]-50);
 8003214:	4b23      	ldr	r3, [pc, #140]	; (80032a4 <StartMode+0x8cc>)
 8003216:	885b      	ldrh	r3, [r3, #2]
 8003218:	3b32      	subs	r3, #50	; 0x32
 800321a:	b29b      	uxth	r3, r3
 800321c:	4618      	mov	r0, r3
 800321e:	f7ff fb3d 	bl	800289c <FindTonalite>
 8003222:	ed87 0a4c 	vstr	s0, [r7, #304]	; 0x130
					  couleur = FindCouleur(ton, sat, lum) | (couleur & 0xFF000000);
 8003226:	ed97 1a4b 	vldr	s2, [r7, #300]	; 0x12c
 800322a:	edd7 0a4a 	vldr	s1, [r7, #296]	; 0x128
 800322e:	ed97 0a4c 	vldr	s0, [r7, #304]	; 0x130
 8003232:	f7ff fa45 	bl	80026c0 <FindCouleur>
 8003236:	4602      	mov	r2, r0
 8003238:	4b1b      	ldr	r3, [pc, #108]	; (80032a8 <StartMode+0x8d0>)
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003240:	4313      	orrs	r3, r2
 8003242:	4a19      	ldr	r2, [pc, #100]	; (80032a8 <StartMode+0x8d0>)
 8003244:	6013      	str	r3, [r2, #0]
					  if(myMutexLCDHandle != NULL)
 8003246:	4b19      	ldr	r3, [pc, #100]	; (80032ac <StartMode+0x8d4>)
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	2b00      	cmp	r3, #0
 800324c:	d01c      	beq.n	8003288 <StartMode+0x8b0>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 800324e:	4b17      	ldr	r3, [pc, #92]	; (80032ac <StartMode+0x8d4>)
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	2164      	movs	r1, #100	; 0x64
 8003254:	4618      	mov	r0, r3
 8003256:	f00a fa21 	bl	800d69c <xQueueSemaphoreTake>
 800325a:	4603      	mov	r3, r0
 800325c:	2b01      	cmp	r3, #1
 800325e:	d113      	bne.n	8003288 <StartMode+0x8b0>
						   {
							   BSP_LCD_SetTextColor(couleur | 0xFF000000);
 8003260:	4b11      	ldr	r3, [pc, #68]	; (80032a8 <StartMode+0x8d0>)
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003268:	4618      	mov	r0, r3
 800326a:	f000 fe93 	bl	8003f94 <BSP_LCD_SetTextColor>
							   BSP_LCD_FillCircle(480-taille_menu/2, taille_menu/2, taille_menu/2-5);
 800326e:	2214      	movs	r2, #20
 8003270:	2119      	movs	r1, #25
 8003272:	f240 10c7 	movw	r0, #455	; 0x1c7
 8003276:	f001 fb4f 	bl	8004918 <BSP_LCD_FillCircle>
							   xSemaphoreGive(myMutexLCDHandle);
 800327a:	4b0c      	ldr	r3, [pc, #48]	; (80032ac <StartMode+0x8d4>)
 800327c:	6818      	ldr	r0, [r3, #0]
 800327e:	2300      	movs	r3, #0
 8003280:	2200      	movs	r2, #0
 8003282:	2100      	movs	r1, #0
 8003284:	f00a f908 	bl	800d498 <xQueueGenericSend>
						   }
					   }
				  }
				  menu_couleur = 0;
 8003288:	2300      	movs	r3, #0
 800328a:	f887 3136 	strb.w	r3, [r7, #310]	; 0x136
				  sous_menu = 0;
 800328e:	2300      	movs	r3, #0
 8003290:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
				  BSP_TS_GetState(&TS_State);
 8003294:	4803      	ldr	r0, [pc, #12]	; (80032a4 <StartMode+0x8cc>)
 8003296:	f001 ffed 	bl	8005274 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 800329a:	4b02      	ldr	r3, [pc, #8]	; (80032a4 <StartMode+0x8cc>)
 800329c:	781b      	ldrb	r3, [r3, #0]
 800329e:	2b00      	cmp	r3, #0
 80032a0:	d1ab      	bne.n	80031fa <StartMode+0x822>
			  }
			  break;
 80032a2:	e0bc      	b.n	800341e <StartMode+0xa46>
 80032a4:	200016d0 	.word	0x200016d0
 80032a8:	20009e84 	.word	0x20009e84
 80032ac:	20009c34 	.word	0x20009c34
 80032b0:	2000139e 	.word	0x2000139e
 80032b4:	ffff0000 	.word	0xffff0000
		  /*
		   * On a Affiché le dégradé de luminosité, l'utilisateur chosit maintenant celle-ci
		   */
		  case 2:
			  BSP_TS_GetState(&TS_State);
 80032b8:	488f      	ldr	r0, [pc, #572]	; (80034f8 <StartMode+0xb20>)
 80032ba:	f001 ffdb 	bl	8005274 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 80032be:	e04f      	b.n	8003360 <StartMode+0x988>
			  {
				  if((TS_State.touchX[0]>=100) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<=356))
 80032c0:	4b8d      	ldr	r3, [pc, #564]	; (80034f8 <StartMode+0xb20>)
 80032c2:	885b      	ldrh	r3, [r3, #2]
 80032c4:	2b63      	cmp	r3, #99	; 0x63
 80032c6:	d942      	bls.n	800334e <StartMode+0x976>
 80032c8:	4b8b      	ldr	r3, [pc, #556]	; (80034f8 <StartMode+0xb20>)
 80032ca:	899b      	ldrh	r3, [r3, #12]
 80032cc:	2bf0      	cmp	r3, #240	; 0xf0
 80032ce:	d93e      	bls.n	800334e <StartMode+0x976>
 80032d0:	4b89      	ldr	r3, [pc, #548]	; (80034f8 <StartMode+0xb20>)
 80032d2:	885b      	ldrh	r3, [r3, #2]
 80032d4:	f5b3 7fb2 	cmp.w	r3, #356	; 0x164
 80032d8:	d839      	bhi.n	800334e <StartMode+0x976>
				  {
					  lum = FindLuminosite(TS_State.touchX[0]-100);
 80032da:	4b87      	ldr	r3, [pc, #540]	; (80034f8 <StartMode+0xb20>)
 80032dc:	885b      	ldrh	r3, [r3, #2]
 80032de:	3b64      	subs	r3, #100	; 0x64
 80032e0:	b29b      	uxth	r3, r3
 80032e2:	4618      	mov	r0, r3
 80032e4:	f7ff fb00 	bl	80028e8 <FindLuminosite>
 80032e8:	ed87 0a4b 	vstr	s0, [r7, #300]	; 0x12c
					  couleur = FindCouleur(ton, sat, lum) | (couleur & 0xFF000000);
 80032ec:	ed97 1a4b 	vldr	s2, [r7, #300]	; 0x12c
 80032f0:	edd7 0a4a 	vldr	s1, [r7, #296]	; 0x128
 80032f4:	ed97 0a4c 	vldr	s0, [r7, #304]	; 0x130
 80032f8:	f7ff f9e2 	bl	80026c0 <FindCouleur>
 80032fc:	4602      	mov	r2, r0
 80032fe:	4b7f      	ldr	r3, [pc, #508]	; (80034fc <StartMode+0xb24>)
 8003300:	681b      	ldr	r3, [r3, #0]
 8003302:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003306:	4313      	orrs	r3, r2
 8003308:	4a7c      	ldr	r2, [pc, #496]	; (80034fc <StartMode+0xb24>)
 800330a:	6013      	str	r3, [r2, #0]
					  if(myMutexLCDHandle != NULL)
 800330c:	4b7c      	ldr	r3, [pc, #496]	; (8003500 <StartMode+0xb28>)
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	2b00      	cmp	r3, #0
 8003312:	d01c      	beq.n	800334e <StartMode+0x976>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 8003314:	4b7a      	ldr	r3, [pc, #488]	; (8003500 <StartMode+0xb28>)
 8003316:	681b      	ldr	r3, [r3, #0]
 8003318:	2164      	movs	r1, #100	; 0x64
 800331a:	4618      	mov	r0, r3
 800331c:	f00a f9be 	bl	800d69c <xQueueSemaphoreTake>
 8003320:	4603      	mov	r3, r0
 8003322:	2b01      	cmp	r3, #1
 8003324:	d113      	bne.n	800334e <StartMode+0x976>
						   {
							   BSP_LCD_SetTextColor(couleur | 0xFF000000);
 8003326:	4b75      	ldr	r3, [pc, #468]	; (80034fc <StartMode+0xb24>)
 8003328:	681b      	ldr	r3, [r3, #0]
 800332a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800332e:	4618      	mov	r0, r3
 8003330:	f000 fe30 	bl	8003f94 <BSP_LCD_SetTextColor>
							   BSP_LCD_FillCircle(480-taille_menu/2, taille_menu/2, taille_menu/2-5);
 8003334:	2214      	movs	r2, #20
 8003336:	2119      	movs	r1, #25
 8003338:	f240 10c7 	movw	r0, #455	; 0x1c7
 800333c:	f001 faec 	bl	8004918 <BSP_LCD_FillCircle>
							   xSemaphoreGive(myMutexLCDHandle);
 8003340:	4b6f      	ldr	r3, [pc, #444]	; (8003500 <StartMode+0xb28>)
 8003342:	6818      	ldr	r0, [r3, #0]
 8003344:	2300      	movs	r3, #0
 8003346:	2200      	movs	r2, #0
 8003348:	2100      	movs	r1, #0
 800334a:	f00a f8a5 	bl	800d498 <xQueueGenericSend>
						   }
					   }
				  }
				  menu_couleur = 0;
 800334e:	2300      	movs	r3, #0
 8003350:	f887 3136 	strb.w	r3, [r7, #310]	; 0x136
				  sous_menu = 0;
 8003354:	2300      	movs	r3, #0
 8003356:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
				  BSP_TS_GetState(&TS_State);
 800335a:	4867      	ldr	r0, [pc, #412]	; (80034f8 <StartMode+0xb20>)
 800335c:	f001 ff8a 	bl	8005274 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 8003360:	4b65      	ldr	r3, [pc, #404]	; (80034f8 <StartMode+0xb20>)
 8003362:	781b      	ldrb	r3, [r3, #0]
 8003364:	2b00      	cmp	r3, #0
 8003366:	d1ab      	bne.n	80032c0 <StartMode+0x8e8>
			  }
			  break;
 8003368:	e059      	b.n	800341e <StartMode+0xa46>
		  /*
		   * On a Affiché le dégradé de saturation, l'utilisateur chosit maintenant celle-ci
		   */
		  case 3:
			  BSP_TS_GetState(&TS_State);
 800336a:	4863      	ldr	r0, [pc, #396]	; (80034f8 <StartMode+0xb20>)
 800336c:	f001 ff82 	bl	8005274 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 8003370:	e04f      	b.n	8003412 <StartMode+0xa3a>
			  {
				  if((TS_State.touchX[0]>=100) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<=356))
 8003372:	4b61      	ldr	r3, [pc, #388]	; (80034f8 <StartMode+0xb20>)
 8003374:	885b      	ldrh	r3, [r3, #2]
 8003376:	2b63      	cmp	r3, #99	; 0x63
 8003378:	d942      	bls.n	8003400 <StartMode+0xa28>
 800337a:	4b5f      	ldr	r3, [pc, #380]	; (80034f8 <StartMode+0xb20>)
 800337c:	899b      	ldrh	r3, [r3, #12]
 800337e:	2bf0      	cmp	r3, #240	; 0xf0
 8003380:	d93e      	bls.n	8003400 <StartMode+0xa28>
 8003382:	4b5d      	ldr	r3, [pc, #372]	; (80034f8 <StartMode+0xb20>)
 8003384:	885b      	ldrh	r3, [r3, #2]
 8003386:	f5b3 7fb2 	cmp.w	r3, #356	; 0x164
 800338a:	d839      	bhi.n	8003400 <StartMode+0xa28>
				  {
					  sat = FindSaturation(TS_State.touchX[0]-100);
 800338c:	4b5a      	ldr	r3, [pc, #360]	; (80034f8 <StartMode+0xb20>)
 800338e:	885b      	ldrh	r3, [r3, #2]
 8003390:	3b64      	subs	r3, #100	; 0x64
 8003392:	b29b      	uxth	r3, r3
 8003394:	4618      	mov	r0, r3
 8003396:	f7ff fac1 	bl	800291c <FindSaturation>
 800339a:	ed87 0a4a 	vstr	s0, [r7, #296]	; 0x128
					  couleur = FindCouleur(ton, sat, lum) | (couleur & 0xFF000000);
 800339e:	ed97 1a4b 	vldr	s2, [r7, #300]	; 0x12c
 80033a2:	edd7 0a4a 	vldr	s1, [r7, #296]	; 0x128
 80033a6:	ed97 0a4c 	vldr	s0, [r7, #304]	; 0x130
 80033aa:	f7ff f989 	bl	80026c0 <FindCouleur>
 80033ae:	4602      	mov	r2, r0
 80033b0:	4b52      	ldr	r3, [pc, #328]	; (80034fc <StartMode+0xb24>)
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80033b8:	4313      	orrs	r3, r2
 80033ba:	4a50      	ldr	r2, [pc, #320]	; (80034fc <StartMode+0xb24>)
 80033bc:	6013      	str	r3, [r2, #0]
					  if(myMutexLCDHandle != NULL)
 80033be:	4b50      	ldr	r3, [pc, #320]	; (8003500 <StartMode+0xb28>)
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d01c      	beq.n	8003400 <StartMode+0xa28>
					  {
						   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 80033c6:	4b4e      	ldr	r3, [pc, #312]	; (8003500 <StartMode+0xb28>)
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	2164      	movs	r1, #100	; 0x64
 80033cc:	4618      	mov	r0, r3
 80033ce:	f00a f965 	bl	800d69c <xQueueSemaphoreTake>
 80033d2:	4603      	mov	r3, r0
 80033d4:	2b01      	cmp	r3, #1
 80033d6:	d113      	bne.n	8003400 <StartMode+0xa28>
						   {
							   BSP_LCD_SetTextColor(couleur | 0xFF000000);
 80033d8:	4b48      	ldr	r3, [pc, #288]	; (80034fc <StartMode+0xb24>)
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80033e0:	4618      	mov	r0, r3
 80033e2:	f000 fdd7 	bl	8003f94 <BSP_LCD_SetTextColor>
							   BSP_LCD_FillCircle(480-taille_menu/2, taille_menu/2, taille_menu/2-5);
 80033e6:	2214      	movs	r2, #20
 80033e8:	2119      	movs	r1, #25
 80033ea:	f240 10c7 	movw	r0, #455	; 0x1c7
 80033ee:	f001 fa93 	bl	8004918 <BSP_LCD_FillCircle>
							   xSemaphoreGive(myMutexLCDHandle);
 80033f2:	4b43      	ldr	r3, [pc, #268]	; (8003500 <StartMode+0xb28>)
 80033f4:	6818      	ldr	r0, [r3, #0]
 80033f6:	2300      	movs	r3, #0
 80033f8:	2200      	movs	r2, #0
 80033fa:	2100      	movs	r1, #0
 80033fc:	f00a f84c 	bl	800d498 <xQueueGenericSend>
						   }
					   }
				  }
				  menu_couleur = 0;
 8003400:	2300      	movs	r3, #0
 8003402:	f887 3136 	strb.w	r3, [r7, #310]	; 0x136
				  sous_menu = 0;
 8003406:	2300      	movs	r3, #0
 8003408:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
				  BSP_TS_GetState(&TS_State);
 800340c:	483a      	ldr	r0, [pc, #232]	; (80034f8 <StartMode+0xb20>)
 800340e:	f001 ff31 	bl	8005274 <BSP_TS_GetState>
			  while(TS_State.touchDetected)
 8003412:	4b39      	ldr	r3, [pc, #228]	; (80034f8 <StartMode+0xb20>)
 8003414:	781b      	ldrb	r3, [r3, #0]
 8003416:	2b00      	cmp	r3, #0
 8003418:	d1ab      	bne.n	8003372 <StartMode+0x99a>
			  }
			  break;
 800341a:	e000      	b.n	800341e <StartMode+0xa46>
			  break;
 800341c:	bf00      	nop
		  }
		  if(sous_menu==0) etat = 1;
 800341e:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 8003422:	2b00      	cmp	r3, #0
 8003424:	f040 818b 	bne.w	800373e <StartMode+0xd66>
 8003428:	4b36      	ldr	r3, [pc, #216]	; (8003504 <StartMode+0xb2c>)
 800342a:	2201      	movs	r2, #1
 800342c:	701a      	strb	r2, [r3, #0]
		  break;
 800342e:	e186      	b.n	800373e <StartMode+0xd66>
	  /*
	   * etat de sélection de la taille
	   */
	  case 6 :
		  if(sous_menu == 0)
 8003430:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 8003434:	2b00      	cmp	r3, #0
 8003436:	d158      	bne.n	80034ea <StartMode+0xb12>
		  {
			  if(myMutexLCDHandle != NULL)
 8003438:	4b31      	ldr	r3, [pc, #196]	; (8003500 <StartMode+0xb28>)
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	2b00      	cmp	r3, #0
 800343e:	d054      	beq.n	80034ea <StartMode+0xb12>
			  {
				   if(xSemaphoreTake(myMutexLCDHandle,1000) == pdTRUE)
 8003440:	4b2f      	ldr	r3, [pc, #188]	; (8003500 <StartMode+0xb28>)
 8003442:	681b      	ldr	r3, [r3, #0]
 8003444:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8003448:	4618      	mov	r0, r3
 800344a:	f00a f927 	bl	800d69c <xQueueSemaphoreTake>
 800344e:	4603      	mov	r3, r0
 8003450:	2b01      	cmp	r3, #1
 8003452:	d14a      	bne.n	80034ea <StartMode+0xb12>
				   {
					   BSP_LCD_SelectLayer(1);
 8003454:	2001      	movs	r0, #1
 8003456:	f000 fd8d 	bl	8003f74 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 800345a:	f04f 30ff 	mov.w	r0, #4294967295
 800345e:	f000 fd99 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(0, 251, 480, 21);
 8003462:	2315      	movs	r3, #21
 8003464:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003468:	21fb      	movs	r1, #251	; 0xfb
 800346a:	2000      	movs	r0, #0
 800346c:	f001 f9da 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 8003470:	4825      	ldr	r0, [pc, #148]	; (8003508 <StartMode+0xb30>)
 8003472:	f000 fd8f 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_DisplayStringAt(0, 252,(uint8_t*) text_taille, LEFT_MODE);
 8003476:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 800347a:	2303      	movs	r3, #3
 800347c:	21fc      	movs	r1, #252	; 0xfc
 800347e:	2000      	movs	r0, #0
 8003480:	f000 fefc 	bl	800427c <BSP_LCD_DisplayStringAt>
					   BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 8003484:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8003488:	f000 fd84 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_DrawHLine(220, 261, 240);
 800348c:	22f0      	movs	r2, #240	; 0xf0
 800348e:	f240 1105 	movw	r1, #261	; 0x105
 8003492:	20dc      	movs	r0, #220	; 0xdc
 8003494:	f000 ffce 	bl	8004434 <BSP_LCD_DrawHLine>
					   BSP_LCD_DrawVLine(220, 252, 18);
 8003498:	2212      	movs	r2, #18
 800349a:	21fc      	movs	r1, #252	; 0xfc
 800349c:	20dc      	movs	r0, #220	; 0xdc
 800349e:	f001 f827 	bl	80044f0 <BSP_LCD_DrawVLine>
					   BSP_LCD_DrawVLine(460, 252, 18);
 80034a2:	2212      	movs	r2, #18
 80034a4:	21fc      	movs	r1, #252	; 0xfc
 80034a6:	f44f 70e6 	mov.w	r0, #460	; 0x1cc
 80034aa:	f001 f821 	bl	80044f0 <BSP_LCD_DrawVLine>
					   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 80034ae:	4816      	ldr	r0, [pc, #88]	; (8003508 <StartMode+0xb30>)
 80034b0:	f000 fd70 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(220+12*radius, 252, 5, 18);
 80034b4:	4b15      	ldr	r3, [pc, #84]	; (800350c <StartMode+0xb34>)
 80034b6:	781b      	ldrb	r3, [r3, #0]
 80034b8:	b29b      	uxth	r3, r3
 80034ba:	461a      	mov	r2, r3
 80034bc:	0052      	lsls	r2, r2, #1
 80034be:	4413      	add	r3, r2
 80034c0:	009b      	lsls	r3, r3, #2
 80034c2:	b29b      	uxth	r3, r3
 80034c4:	33dc      	adds	r3, #220	; 0xdc
 80034c6:	b298      	uxth	r0, r3
 80034c8:	2312      	movs	r3, #18
 80034ca:	2205      	movs	r2, #5
 80034cc:	21fc      	movs	r1, #252	; 0xfc
 80034ce:	f001 f9a9 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(couleur);
 80034d2:	4b0a      	ldr	r3, [pc, #40]	; (80034fc <StartMode+0xb24>)
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	4618      	mov	r0, r3
 80034d8:	f000 fd5c 	bl	8003f94 <BSP_LCD_SetTextColor>
					   xSemaphoreGive(myMutexLCDHandle);
 80034dc:	4b08      	ldr	r3, [pc, #32]	; (8003500 <StartMode+0xb28>)
 80034de:	6818      	ldr	r0, [r3, #0]
 80034e0:	2300      	movs	r3, #0
 80034e2:	2200      	movs	r2, #0
 80034e4:	2100      	movs	r1, #0
 80034e6:	f009 ffd7 	bl	800d498 <xQueueGenericSend>
				   }
			  }
		  }
		  sous_menu = 1;
 80034ea:	2301      	movs	r3, #1
 80034ec:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
		  BSP_TS_GetState(&TS_State);
 80034f0:	4801      	ldr	r0, [pc, #4]	; (80034f8 <StartMode+0xb20>)
 80034f2:	f001 febf 	bl	8005274 <BSP_TS_GetState>
		  while(TS_State.touchDetected)
 80034f6:	e071      	b.n	80035dc <StartMode+0xc04>
 80034f8:	200016d0 	.word	0x200016d0
 80034fc:	20009e84 	.word	0x20009e84
 8003500:	20009c34 	.word	0x20009c34
 8003504:	2000139e 	.word	0x2000139e
 8003508:	ffff0000 	.word	0xffff0000
 800350c:	2000139c 	.word	0x2000139c
		  {
			  if((TS_State.touchX[0]>220) && (TS_State.touchY[0] > 272-haut_menu) && (TS_State.touchX[0]<460))
 8003510:	4b90      	ldr	r3, [pc, #576]	; (8003754 <StartMode+0xd7c>)
 8003512:	885b      	ldrh	r3, [r3, #2]
 8003514:	2bdc      	cmp	r3, #220	; 0xdc
 8003516:	d95b      	bls.n	80035d0 <StartMode+0xbf8>
 8003518:	4b8e      	ldr	r3, [pc, #568]	; (8003754 <StartMode+0xd7c>)
 800351a:	899b      	ldrh	r3, [r3, #12]
 800351c:	2bf0      	cmp	r3, #240	; 0xf0
 800351e:	d957      	bls.n	80035d0 <StartMode+0xbf8>
 8003520:	4b8c      	ldr	r3, [pc, #560]	; (8003754 <StartMode+0xd7c>)
 8003522:	885b      	ldrh	r3, [r3, #2]
 8003524:	f5b3 7fe6 	cmp.w	r3, #460	; 0x1cc
 8003528:	d252      	bcs.n	80035d0 <StartMode+0xbf8>
			  {
				  radius_prec = radius;
 800352a:	4b8b      	ldr	r3, [pc, #556]	; (8003758 <StartMode+0xd80>)
 800352c:	781b      	ldrb	r3, [r3, #0]
 800352e:	f887 3113 	strb.w	r3, [r7, #275]	; 0x113
				  radius = (TS_State.touchX[0]-208)/12;
 8003532:	4b88      	ldr	r3, [pc, #544]	; (8003754 <StartMode+0xd7c>)
 8003534:	885b      	ldrh	r3, [r3, #2]
 8003536:	3bd0      	subs	r3, #208	; 0xd0
 8003538:	4a88      	ldr	r2, [pc, #544]	; (800375c <StartMode+0xd84>)
 800353a:	fb82 1203 	smull	r1, r2, r2, r3
 800353e:	1052      	asrs	r2, r2, #1
 8003540:	17db      	asrs	r3, r3, #31
 8003542:	1ad3      	subs	r3, r2, r3
 8003544:	b2da      	uxtb	r2, r3
 8003546:	4b84      	ldr	r3, [pc, #528]	; (8003758 <StartMode+0xd80>)
 8003548:	701a      	strb	r2, [r3, #0]
				  if(myMutexLCDHandle != NULL)
 800354a:	4b85      	ldr	r3, [pc, #532]	; (8003760 <StartMode+0xd88>)
 800354c:	681b      	ldr	r3, [r3, #0]
 800354e:	2b00      	cmp	r3, #0
 8003550:	d03e      	beq.n	80035d0 <StartMode+0xbf8>
				  {
					   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 8003552:	4b83      	ldr	r3, [pc, #524]	; (8003760 <StartMode+0xd88>)
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	2164      	movs	r1, #100	; 0x64
 8003558:	4618      	mov	r0, r3
 800355a:	f00a f89f 	bl	800d69c <xQueueSemaphoreTake>
 800355e:	4603      	mov	r3, r0
 8003560:	2b01      	cmp	r3, #1
 8003562:	d135      	bne.n	80035d0 <StartMode+0xbf8>
					   {
						   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8003564:	f04f 30ff 	mov.w	r0, #4294967295
 8003568:	f000 fd14 	bl	8003f94 <BSP_LCD_SetTextColor>
						   BSP_LCD_FillRect(220+12*radius_prec, 252, 5, 18);
 800356c:	f897 3113 	ldrb.w	r3, [r7, #275]	; 0x113
 8003570:	b29b      	uxth	r3, r3
 8003572:	461a      	mov	r2, r3
 8003574:	0052      	lsls	r2, r2, #1
 8003576:	4413      	add	r3, r2
 8003578:	009b      	lsls	r3, r3, #2
 800357a:	b29b      	uxth	r3, r3
 800357c:	33dc      	adds	r3, #220	; 0xdc
 800357e:	b298      	uxth	r0, r3
 8003580:	2312      	movs	r3, #18
 8003582:	2205      	movs	r2, #5
 8003584:	21fc      	movs	r1, #252	; 0xfc
 8003586:	f001 f94d 	bl	8004824 <BSP_LCD_FillRect>
						   BSP_LCD_SetTextColor(LCD_COLOR_BLACK);
 800358a:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 800358e:	f000 fd01 	bl	8003f94 <BSP_LCD_SetTextColor>
						   BSP_LCD_DrawHLine(220, 261, 240);
 8003592:	22f0      	movs	r2, #240	; 0xf0
 8003594:	f240 1105 	movw	r1, #261	; 0x105
 8003598:	20dc      	movs	r0, #220	; 0xdc
 800359a:	f000 ff4b 	bl	8004434 <BSP_LCD_DrawHLine>
						   BSP_LCD_SetTextColor(LCD_COLOR_RED);
 800359e:	4871      	ldr	r0, [pc, #452]	; (8003764 <StartMode+0xd8c>)
 80035a0:	f000 fcf8 	bl	8003f94 <BSP_LCD_SetTextColor>
						   BSP_LCD_FillRect(220+12*radius, 252, 5, 18);
 80035a4:	4b6c      	ldr	r3, [pc, #432]	; (8003758 <StartMode+0xd80>)
 80035a6:	781b      	ldrb	r3, [r3, #0]
 80035a8:	b29b      	uxth	r3, r3
 80035aa:	461a      	mov	r2, r3
 80035ac:	0052      	lsls	r2, r2, #1
 80035ae:	4413      	add	r3, r2
 80035b0:	009b      	lsls	r3, r3, #2
 80035b2:	b29b      	uxth	r3, r3
 80035b4:	33dc      	adds	r3, #220	; 0xdc
 80035b6:	b298      	uxth	r0, r3
 80035b8:	2312      	movs	r3, #18
 80035ba:	2205      	movs	r2, #5
 80035bc:	21fc      	movs	r1, #252	; 0xfc
 80035be:	f001 f931 	bl	8004824 <BSP_LCD_FillRect>
						   xSemaphoreGive(myMutexLCDHandle);
 80035c2:	4b67      	ldr	r3, [pc, #412]	; (8003760 <StartMode+0xd88>)
 80035c4:	6818      	ldr	r0, [r3, #0]
 80035c6:	2300      	movs	r3, #0
 80035c8:	2200      	movs	r2, #0
 80035ca:	2100      	movs	r1, #0
 80035cc:	f009 ff64 	bl	800d498 <xQueueGenericSend>
					   }
				   }
			  }
			  sous_menu = 0;
 80035d0:	2300      	movs	r3, #0
 80035d2:	f887 3137 	strb.w	r3, [r7, #311]	; 0x137
			  BSP_TS_GetState(&TS_State);
 80035d6:	485f      	ldr	r0, [pc, #380]	; (8003754 <StartMode+0xd7c>)
 80035d8:	f001 fe4c 	bl	8005274 <BSP_TS_GetState>
		  while(TS_State.touchDetected)
 80035dc:	4b5d      	ldr	r3, [pc, #372]	; (8003754 <StartMode+0xd7c>)
 80035de:	781b      	ldrb	r3, [r3, #0]
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	d195      	bne.n	8003510 <StartMode+0xb38>
		  }
		  if(sous_menu==0) etat = 1;
 80035e4:	f897 3137 	ldrb.w	r3, [r7, #311]	; 0x137
 80035e8:	2b00      	cmp	r3, #0
 80035ea:	f040 80aa 	bne.w	8003742 <StartMode+0xd6a>
 80035ee:	4b5e      	ldr	r3, [pc, #376]	; (8003768 <StartMode+0xd90>)
 80035f0:	2201      	movs	r2, #1
 80035f2:	701a      	strb	r2, [r3, #0]
		  break;
 80035f4:	e0a5      	b.n	8003742 <StartMode+0xd6a>
	  /*
	   * etat de clear de la page de dessin.
	   */
	  case 7 :
		  if(myMutexLCDHandle != NULL)
 80035f6:	4b5a      	ldr	r3, [pc, #360]	; (8003760 <StartMode+0xd88>)
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d02a      	beq.n	8003654 <StartMode+0xc7c>
		  {
			   if(xSemaphoreTake(myMutexLCDHandle,100) == pdTRUE)
 80035fe:	4b58      	ldr	r3, [pc, #352]	; (8003760 <StartMode+0xd88>)
 8003600:	681b      	ldr	r3, [r3, #0]
 8003602:	2164      	movs	r1, #100	; 0x64
 8003604:	4618      	mov	r0, r3
 8003606:	f00a f849 	bl	800d69c <xQueueSemaphoreTake>
 800360a:	4603      	mov	r3, r0
 800360c:	2b01      	cmp	r3, #1
 800360e:	d121      	bne.n	8003654 <StartMode+0xc7c>
			   {
				  BSP_LCD_SelectLayer(0);
 8003610:	2000      	movs	r0, #0
 8003612:	f000 fcaf 	bl	8003f74 <BSP_LCD_SelectLayer>
				  BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8003616:	f04f 30ff 	mov.w	r0, #4294967295
 800361a:	f000 fcbb 	bl	8003f94 <BSP_LCD_SetTextColor>
				  BSP_LCD_FillRect(0, 0, 480-taille_menu-5, 246);
 800361e:	23f6      	movs	r3, #246	; 0xf6
 8003620:	f240 12a9 	movw	r2, #425	; 0x1a9
 8003624:	2100      	movs	r1, #0
 8003626:	2000      	movs	r0, #0
 8003628:	f001 f8fc 	bl	8004824 <BSP_LCD_FillRect>
				  BSP_LCD_SelectLayer(1);
 800362c:	2001      	movs	r0, #1
 800362e:	f000 fca1 	bl	8003f74 <BSP_LCD_SelectLayer>
				  BSP_LCD_SetTextColor(LCD_COLOR_TRANSPARENT);
 8003632:	2000      	movs	r0, #0
 8003634:	f000 fcae 	bl	8003f94 <BSP_LCD_SetTextColor>
				  BSP_LCD_FillRect(0, 0, 480-taille_menu-5, 246);
 8003638:	23f6      	movs	r3, #246	; 0xf6
 800363a:	f240 12a9 	movw	r2, #425	; 0x1a9
 800363e:	2100      	movs	r1, #0
 8003640:	2000      	movs	r0, #0
 8003642:	f001 f8ef 	bl	8004824 <BSP_LCD_FillRect>
				  xSemaphoreGive(myMutexLCDHandle);
 8003646:	4b46      	ldr	r3, [pc, #280]	; (8003760 <StartMode+0xd88>)
 8003648:	6818      	ldr	r0, [r3, #0]
 800364a:	2300      	movs	r3, #0
 800364c:	2200      	movs	r2, #0
 800364e:	2100      	movs	r1, #0
 8003650:	f009 ff22 	bl	800d498 <xQueueGenericSend>
			   }
		   }
		  etat = 1;
 8003654:	4b44      	ldr	r3, [pc, #272]	; (8003768 <StartMode+0xd90>)
 8003656:	2201      	movs	r2, #1
 8003658:	701a      	strb	r2, [r3, #0]
		  break;
 800365a:	e073      	b.n	8003744 <StartMode+0xd6c>
	  /*
	   * etat d'enregistrement du dessin
	   */
	  case 8 :
		  HAL_UART_Transmit(&huart1, demande_envoi, 1, 100);
 800365c:	f107 010c 	add.w	r1, r7, #12
 8003660:	2364      	movs	r3, #100	; 0x64
 8003662:	2201      	movs	r2, #1
 8003664:	4841      	ldr	r0, [pc, #260]	; (800376c <StartMode+0xd94>)
 8003666:	f008 fc27 	bl	800beb8 <HAL_UART_Transmit>
		  HAL_UART_Receive(&huart1, &confirmation, 1, 250);
 800366a:	f107 010b 	add.w	r1, r7, #11
 800366e:	23fa      	movs	r3, #250	; 0xfa
 8003670:	2201      	movs	r2, #1
 8003672:	483e      	ldr	r0, [pc, #248]	; (800376c <StartMode+0xd94>)
 8003674:	f008 fcb1 	bl	800bfda <HAL_UART_Receive>
		  if(confirmation=='a')
 8003678:	f107 030b 	add.w	r3, r7, #11
 800367c:	781b      	ldrb	r3, [r3, #0]
 800367e:	2b61      	cmp	r3, #97	; 0x61
 8003680:	d153      	bne.n	800372a <StartMode+0xd52>
		  {
			  for(int i = 0; i<246; i++)
 8003682:	2300      	movs	r3, #0
 8003684:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8003688:	e047      	b.n	800371a <StartMode+0xd42>
			  {
				  for(int j = 0; j<425;j++)
 800368a:	2300      	movs	r3, #0
 800368c:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8003690:	e039      	b.n	8003706 <StartMode+0xd2e>
				  {
					  pixel = BSP_LCD_ReadPixel(j, i);
 8003692:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
 8003696:	b29b      	uxth	r3, r3
 8003698:	f8d7 211c 	ldr.w	r2, [r7, #284]	; 0x11c
 800369c:	b292      	uxth	r2, r2
 800369e:	4611      	mov	r1, r2
 80036a0:	4618      	mov	r0, r3
 80036a2:	f000 fcd9 	bl	8004058 <BSP_LCD_ReadPixel>
 80036a6:	f8c7 0114 	str.w	r0, [r7, #276]	; 0x114
					  R = (pixel >> 16) & 0xFF;
 80036aa:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80036ae:	0c1b      	lsrs	r3, r3, #16
 80036b0:	b2da      	uxtb	r2, r3
 80036b2:	f107 030a 	add.w	r3, r7, #10
 80036b6:	701a      	strb	r2, [r3, #0]
					  V = (pixel >> 8) & 0xFF;
 80036b8:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80036bc:	0a1b      	lsrs	r3, r3, #8
 80036be:	b2da      	uxtb	r2, r3
 80036c0:	f107 0309 	add.w	r3, r7, #9
 80036c4:	701a      	strb	r2, [r3, #0]
					  B = pixel & 0xFF;
 80036c6:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 80036ca:	b2da      	uxtb	r2, r3
 80036cc:	f107 0308 	add.w	r3, r7, #8
 80036d0:	701a      	strb	r2, [r3, #0]
					  HAL_UART_Transmit(&huart1, &R, 1, 100);
 80036d2:	f107 010a 	add.w	r1, r7, #10
 80036d6:	2364      	movs	r3, #100	; 0x64
 80036d8:	2201      	movs	r2, #1
 80036da:	4824      	ldr	r0, [pc, #144]	; (800376c <StartMode+0xd94>)
 80036dc:	f008 fbec 	bl	800beb8 <HAL_UART_Transmit>
					  HAL_UART_Transmit(&huart1, &V, 1, 100);
 80036e0:	f107 0109 	add.w	r1, r7, #9
 80036e4:	2364      	movs	r3, #100	; 0x64
 80036e6:	2201      	movs	r2, #1
 80036e8:	4820      	ldr	r0, [pc, #128]	; (800376c <StartMode+0xd94>)
 80036ea:	f008 fbe5 	bl	800beb8 <HAL_UART_Transmit>
					  HAL_UART_Transmit(&huart1, &B, 1, 100);
 80036ee:	f107 0108 	add.w	r1, r7, #8
 80036f2:	2364      	movs	r3, #100	; 0x64
 80036f4:	2201      	movs	r2, #1
 80036f6:	481d      	ldr	r0, [pc, #116]	; (800376c <StartMode+0xd94>)
 80036f8:	f008 fbde 	bl	800beb8 <HAL_UART_Transmit>
				  for(int j = 0; j<425;j++)
 80036fc:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
 8003700:	3301      	adds	r3, #1
 8003702:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8003706:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
 800370a:	f5b3 7fd4 	cmp.w	r3, #424	; 0x1a8
 800370e:	ddc0      	ble.n	8003692 <StartMode+0xcba>
			  for(int i = 0; i<246; i++)
 8003710:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8003714:	3301      	adds	r3, #1
 8003716:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 800371a:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800371e:	2bf5      	cmp	r3, #245	; 0xf5
 8003720:	ddb3      	ble.n	800368a <StartMode+0xcb2>
				  }
			  }
			  confirmation = 'n';
 8003722:	f107 030b 	add.w	r3, r7, #11
 8003726:	226e      	movs	r2, #110	; 0x6e
 8003728:	701a      	strb	r2, [r3, #0]
		  }
		  etat = 1;
 800372a:	4b0f      	ldr	r3, [pc, #60]	; (8003768 <StartMode+0xd90>)
 800372c:	2201      	movs	r2, #1
 800372e:	701a      	strb	r2, [r3, #0]
		  break;
 8003730:	e008      	b.n	8003744 <StartMode+0xd6c>
		  break;
 8003732:	bf00      	nop
 8003734:	e006      	b.n	8003744 <StartMode+0xd6c>
		  break;
 8003736:	bf00      	nop
 8003738:	e004      	b.n	8003744 <StartMode+0xd6c>
		  break;
 800373a:	bf00      	nop
 800373c:	e002      	b.n	8003744 <StartMode+0xd6c>
		  break;
 800373e:	bf00      	nop
 8003740:	e000      	b.n	8003744 <StartMode+0xd6c>
		  break;
 8003742:	bf00      	nop
	  }
	  vTaskDelayUntil(&xLastWakeTime, 100);
 8003744:	f507 7386 	add.w	r3, r7, #268	; 0x10c
 8003748:	2164      	movs	r1, #100	; 0x64
 800374a:	4618      	mov	r0, r3
 800374c:	f00a fb5a 	bl	800de04 <vTaskDelayUntil>
	  switch(etat)
 8003750:	f7ff b9b0 	b.w	8002ab4 <StartMode+0xdc>
 8003754:	200016d0 	.word	0x200016d0
 8003758:	2000139c 	.word	0x2000139c
 800375c:	2aaaaaab 	.word	0x2aaaaaab
 8003760:	20009c34 	.word	0x20009c34
 8003764:	ffff0000 	.word	0xffff0000
 8003768:	2000139e 	.word	0x2000139e
 800376c:	20009df0 	.word	0x20009df0

08003770 <StartPeindre>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartPeindre */
void StartPeindre(void const * argument)
{
 8003770:	b580      	push	{r7, lr}
 8003772:	b082      	sub	sp, #8
 8003774:	af00      	add	r7, sp, #0
 8003776:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartPeindre */
	static TS_StateTypeDef  TS_State;
	/* Infinite loop */
	for(;;)
	{
	  BSP_TS_GetState(&TS_State);
 8003778:	4819      	ldr	r0, [pc, #100]	; (80037e0 <StartPeindre+0x70>)
 800377a:	f001 fd7b 	bl	8005274 <BSP_TS_GetState>
	  if(TS_State.touchDetected && (TestConditionBord(TS_State.touchX[0], TS_State.touchY[0], radius)))
 800377e:	4b18      	ldr	r3, [pc, #96]	; (80037e0 <StartPeindre+0x70>)
 8003780:	781b      	ldrb	r3, [r3, #0]
 8003782:	2b00      	cmp	r3, #0
 8003784:	d0f8      	beq.n	8003778 <StartPeindre+0x8>
 8003786:	4b16      	ldr	r3, [pc, #88]	; (80037e0 <StartPeindre+0x70>)
 8003788:	8858      	ldrh	r0, [r3, #2]
 800378a:	4b15      	ldr	r3, [pc, #84]	; (80037e0 <StartPeindre+0x70>)
 800378c:	8999      	ldrh	r1, [r3, #12]
 800378e:	4b15      	ldr	r3, [pc, #84]	; (80037e4 <StartPeindre+0x74>)
 8003790:	781b      	ldrb	r3, [r3, #0]
 8003792:	b29b      	uxth	r3, r3
 8003794:	461a      	mov	r2, r3
 8003796:	f7fe fc63 	bl	8002060 <TestConditionBord>
 800379a:	4603      	mov	r3, r0
 800379c:	2b00      	cmp	r3, #0
 800379e:	d0eb      	beq.n	8003778 <StartPeindre+0x8>
	  {
		  if(myMutexLCDHandle != NULL)
 80037a0:	4b11      	ldr	r3, [pc, #68]	; (80037e8 <StartPeindre+0x78>)
 80037a2:	681b      	ldr	r3, [r3, #0]
 80037a4:	2b00      	cmp	r3, #0
 80037a6:	d0e7      	beq.n	8003778 <StartPeindre+0x8>
		   {
			   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 80037a8:	4b0f      	ldr	r3, [pc, #60]	; (80037e8 <StartPeindre+0x78>)
 80037aa:	681b      	ldr	r3, [r3, #0]
 80037ac:	2101      	movs	r1, #1
 80037ae:	4618      	mov	r0, r3
 80037b0:	f009 ff74 	bl	800d69c <xQueueSemaphoreTake>
 80037b4:	4603      	mov	r3, r0
 80037b6:	2b01      	cmp	r3, #1
 80037b8:	d1de      	bne.n	8003778 <StartPeindre+0x8>
			   {
				   LCD_PAINTBRUSH(TS_State.touchX[0],TS_State.touchY[0],radius);
 80037ba:	4b09      	ldr	r3, [pc, #36]	; (80037e0 <StartPeindre+0x70>)
 80037bc:	8858      	ldrh	r0, [r3, #2]
 80037be:	4b08      	ldr	r3, [pc, #32]	; (80037e0 <StartPeindre+0x70>)
 80037c0:	8999      	ldrh	r1, [r3, #12]
 80037c2:	4b08      	ldr	r3, [pc, #32]	; (80037e4 <StartPeindre+0x74>)
 80037c4:	781b      	ldrb	r3, [r3, #0]
 80037c6:	b29b      	uxth	r3, r3
 80037c8:	461a      	mov	r2, r3
 80037ca:	f7fe fc73 	bl	80020b4 <LCD_PAINTBRUSH>
				   xSemaphoreGive(myMutexLCDHandle);
 80037ce:	4b06      	ldr	r3, [pc, #24]	; (80037e8 <StartPeindre+0x78>)
 80037d0:	6818      	ldr	r0, [r3, #0]
 80037d2:	2300      	movs	r3, #0
 80037d4:	2200      	movs	r2, #0
 80037d6:	2100      	movs	r1, #0
 80037d8:	f009 fe5e 	bl	800d498 <xQueueGenericSend>
	  BSP_TS_GetState(&TS_State);
 80037dc:	e7cc      	b.n	8003778 <StartPeindre+0x8>
 80037de:	bf00      	nop
 80037e0:	200016fc 	.word	0x200016fc
 80037e4:	2000139c 	.word	0x2000139c
 80037e8:	20009c34 	.word	0x20009c34

080037ec <StartTaskEtat>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTaskEtat */
void StartTaskEtat(void const * argument)
{
 80037ec:	b580      	push	{r7, lr}
 80037ee:	b088      	sub	sp, #32
 80037f0:	af00      	add	r7, sp, #0
 80037f2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartTaskEtat */
	TickType_t xLastWakeTime;
	xLastWakeTime = xTaskGetTickCount();
 80037f4:	f00a fcca 	bl	800e18c <xTaskGetTickCount>
 80037f8:	4603      	mov	r3, r0
 80037fa:	61bb      	str	r3, [r7, #24]
	ADC_ChannelConfTypeDef sConfig = {0};
 80037fc:	f107 0308 	add.w	r3, r7, #8
 8003800:	2200      	movs	r2, #0
 8003802:	601a      	str	r2, [r3, #0]
 8003804:	605a      	str	r2, [r3, #4]
 8003806:	609a      	str	r2, [r3, #8]
 8003808:	60da      	str	r2, [r3, #12]
	sConfig.Rank = ADC_REGULAR_RANK_1;
 800380a:	2301      	movs	r3, #1
 800380c:	60fb      	str	r3, [r7, #12]
	sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800380e:	2300      	movs	r3, #0
 8003810:	613b      	str	r3, [r7, #16]
	sConfig.Channel = ADC_CHANNEL_8;
 8003812:	2308      	movs	r3, #8
 8003814:	60bb      	str	r3, [r7, #8]
	HAL_ADC_ConfigChannel(&hadc3, &sConfig);
 8003816:	f107 0308 	add.w	r3, r7, #8
 800381a:	4619      	mov	r1, r3
 800381c:	4875      	ldr	r0, [pc, #468]	; (80039f4 <StartTaskEtat+0x208>)
 800381e:	f002 ff81 	bl	8006724 <HAL_ADC_ConfigChannel>
	char etat_prec = 2;
 8003822:	2302      	movs	r3, #2
 8003824:	77fb      	strb	r3, [r7, #31]
	uint16_t joystick_h;
	/* Infinite loop */
	for(;;)
	{
	  if(etat == 0)
 8003826:	4b74      	ldr	r3, [pc, #464]	; (80039f8 <StartTaskEtat+0x20c>)
 8003828:	781b      	ldrb	r3, [r3, #0]
 800382a:	2b00      	cmp	r3, #0
 800382c:	f040 80d9 	bne.w	80039e2 <StartTaskEtat+0x1f6>
	  {
		  HAL_ADC_Start(&hadc1);
 8003830:	4872      	ldr	r0, [pc, #456]	; (80039fc <StartTaskEtat+0x210>)
 8003832:	f002 fe25 	bl	8006480 <HAL_ADC_Start>
		  while(HAL_ADC_PollForConversion(&hadc1, 100)!=HAL_OK);
 8003836:	bf00      	nop
 8003838:	2164      	movs	r1, #100	; 0x64
 800383a:	4870      	ldr	r0, [pc, #448]	; (80039fc <StartTaskEtat+0x210>)
 800383c:	f002 fee0 	bl	8006600 <HAL_ADC_PollForConversion>
 8003840:	4603      	mov	r3, r0
 8003842:	2b00      	cmp	r3, #0
 8003844:	d1f8      	bne.n	8003838 <StartTaskEtat+0x4c>
		  joystick_h = HAL_ADC_GetValue(&hadc1);
 8003846:	486d      	ldr	r0, [pc, #436]	; (80039fc <StartTaskEtat+0x210>)
 8003848:	f002 ff5e 	bl	8006708 <HAL_ADC_GetValue>
 800384c:	4603      	mov	r3, r0
 800384e:	83bb      	strh	r3, [r7, #28]
		  if(joystick_h > 2500)
 8003850:	8bbb      	ldrh	r3, [r7, #28]
 8003852:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8003856:	4293      	cmp	r3, r2
 8003858:	d960      	bls.n	800391c <StartTaskEtat+0x130>
		  {
			  etat_prec = etat_int;
 800385a:	4b69      	ldr	r3, [pc, #420]	; (8003a00 <StartTaskEtat+0x214>)
 800385c:	781b      	ldrb	r3, [r3, #0]
 800385e:	77fb      	strb	r3, [r7, #31]
			  etat_int -= 1;
 8003860:	4b67      	ldr	r3, [pc, #412]	; (8003a00 <StartTaskEtat+0x214>)
 8003862:	781b      	ldrb	r3, [r3, #0]
 8003864:	3b01      	subs	r3, #1
 8003866:	b2da      	uxtb	r2, r3
 8003868:	4b65      	ldr	r3, [pc, #404]	; (8003a00 <StartTaskEtat+0x214>)
 800386a:	701a      	strb	r2, [r3, #0]
			  if(etat_int < 2) etat_int = etat_max;
 800386c:	4b64      	ldr	r3, [pc, #400]	; (8003a00 <StartTaskEtat+0x214>)
 800386e:	781b      	ldrb	r3, [r3, #0]
 8003870:	2b01      	cmp	r3, #1
 8003872:	d802      	bhi.n	800387a <StartTaskEtat+0x8e>
 8003874:	4b62      	ldr	r3, [pc, #392]	; (8003a00 <StartTaskEtat+0x214>)
 8003876:	2206      	movs	r2, #6
 8003878:	701a      	strb	r2, [r3, #0]
			  if(myMutexLCDHandle != NULL)
 800387a:	4b62      	ldr	r3, [pc, #392]	; (8003a04 <StartTaskEtat+0x218>)
 800387c:	681b      	ldr	r3, [r3, #0]
 800387e:	2b00      	cmp	r3, #0
 8003880:	f000 80af 	beq.w	80039e2 <StartTaskEtat+0x1f6>
			   {
				   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 8003884:	4b5f      	ldr	r3, [pc, #380]	; (8003a04 <StartTaskEtat+0x218>)
 8003886:	681b      	ldr	r3, [r3, #0]
 8003888:	2101      	movs	r1, #1
 800388a:	4618      	mov	r0, r3
 800388c:	f009 ff06 	bl	800d69c <xQueueSemaphoreTake>
 8003890:	4603      	mov	r3, r0
 8003892:	2b01      	cmp	r3, #1
 8003894:	f040 80a5 	bne.w	80039e2 <StartTaskEtat+0x1f6>
				   {
					   BSP_LCD_SelectLayer(1);
 8003898:	2001      	movs	r0, #1
 800389a:	f000 fb6b 	bl	8003f74 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 800389e:	f04f 30ff 	mov.w	r0, #4294967295
 80038a2:	f000 fb77 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(98*etat_prec-170, 265, 35, 5);
 80038a6:	7ffb      	ldrb	r3, [r7, #31]
 80038a8:	b29b      	uxth	r3, r3
 80038aa:	461a      	mov	r2, r3
 80038ac:	00d2      	lsls	r2, r2, #3
 80038ae:	1ad3      	subs	r3, r2, r3
 80038b0:	461a      	mov	r2, r3
 80038b2:	00d2      	lsls	r2, r2, #3
 80038b4:	1ad3      	subs	r3, r2, r3
 80038b6:	005b      	lsls	r3, r3, #1
 80038b8:	b29b      	uxth	r3, r3
 80038ba:	3baa      	subs	r3, #170	; 0xaa
 80038bc:	b298      	uxth	r0, r3
 80038be:	2305      	movs	r3, #5
 80038c0:	2223      	movs	r2, #35	; 0x23
 80038c2:	f240 1109 	movw	r1, #265	; 0x109
 80038c6:	f000 ffad 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(0xFFFF00FF);
 80038ca:	f46f 407f 	mvn.w	r0, #65280	; 0xff00
 80038ce:	f000 fb61 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(98*etat_int-170, 265, 35, 5);
 80038d2:	4b4b      	ldr	r3, [pc, #300]	; (8003a00 <StartTaskEtat+0x214>)
 80038d4:	781b      	ldrb	r3, [r3, #0]
 80038d6:	b29b      	uxth	r3, r3
 80038d8:	461a      	mov	r2, r3
 80038da:	00d2      	lsls	r2, r2, #3
 80038dc:	1ad3      	subs	r3, r2, r3
 80038de:	461a      	mov	r2, r3
 80038e0:	00d2      	lsls	r2, r2, #3
 80038e2:	1ad3      	subs	r3, r2, r3
 80038e4:	005b      	lsls	r3, r3, #1
 80038e6:	b29b      	uxth	r3, r3
 80038e8:	3baa      	subs	r3, #170	; 0xaa
 80038ea:	b298      	uxth	r0, r3
 80038ec:	2305      	movs	r3, #5
 80038ee:	2223      	movs	r2, #35	; 0x23
 80038f0:	f240 1109 	movw	r1, #265	; 0x109
 80038f4:	f000 ff96 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SelectLayer(layer);
 80038f8:	4b43      	ldr	r3, [pc, #268]	; (8003a08 <StartTaskEtat+0x21c>)
 80038fa:	781b      	ldrb	r3, [r3, #0]
 80038fc:	4618      	mov	r0, r3
 80038fe:	f000 fb39 	bl	8003f74 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(couleur);
 8003902:	4b42      	ldr	r3, [pc, #264]	; (8003a0c <StartTaskEtat+0x220>)
 8003904:	681b      	ldr	r3, [r3, #0]
 8003906:	4618      	mov	r0, r3
 8003908:	f000 fb44 	bl	8003f94 <BSP_LCD_SetTextColor>
					   xSemaphoreGive(myMutexLCDHandle);
 800390c:	4b3d      	ldr	r3, [pc, #244]	; (8003a04 <StartTaskEtat+0x218>)
 800390e:	6818      	ldr	r0, [r3, #0]
 8003910:	2300      	movs	r3, #0
 8003912:	2200      	movs	r2, #0
 8003914:	2100      	movs	r1, #0
 8003916:	f009 fdbf 	bl	800d498 <xQueueGenericSend>
 800391a:	e062      	b.n	80039e2 <StartTaskEtat+0x1f6>
				   }
			   }
		  }
		  else if(joystick_h < 1500)
 800391c:	8bbb      	ldrh	r3, [r7, #28]
 800391e:	f240 52db 	movw	r2, #1499	; 0x5db
 8003922:	4293      	cmp	r3, r2
 8003924:	d85d      	bhi.n	80039e2 <StartTaskEtat+0x1f6>
		  {
			  etat_prec = etat_int;
 8003926:	4b36      	ldr	r3, [pc, #216]	; (8003a00 <StartTaskEtat+0x214>)
 8003928:	781b      	ldrb	r3, [r3, #0]
 800392a:	77fb      	strb	r3, [r7, #31]
			  etat_int += 1;
 800392c:	4b34      	ldr	r3, [pc, #208]	; (8003a00 <StartTaskEtat+0x214>)
 800392e:	781b      	ldrb	r3, [r3, #0]
 8003930:	3301      	adds	r3, #1
 8003932:	b2da      	uxtb	r2, r3
 8003934:	4b32      	ldr	r3, [pc, #200]	; (8003a00 <StartTaskEtat+0x214>)
 8003936:	701a      	strb	r2, [r3, #0]
			  if (etat_int > etat_max) etat_int = 2;
 8003938:	4b31      	ldr	r3, [pc, #196]	; (8003a00 <StartTaskEtat+0x214>)
 800393a:	781b      	ldrb	r3, [r3, #0]
 800393c:	2b06      	cmp	r3, #6
 800393e:	d902      	bls.n	8003946 <StartTaskEtat+0x15a>
 8003940:	4b2f      	ldr	r3, [pc, #188]	; (8003a00 <StartTaskEtat+0x214>)
 8003942:	2202      	movs	r2, #2
 8003944:	701a      	strb	r2, [r3, #0]
			  if(myMutexLCDHandle != NULL)
 8003946:	4b2f      	ldr	r3, [pc, #188]	; (8003a04 <StartTaskEtat+0x218>)
 8003948:	681b      	ldr	r3, [r3, #0]
 800394a:	2b00      	cmp	r3, #0
 800394c:	d049      	beq.n	80039e2 <StartTaskEtat+0x1f6>
			   {
				   if(xSemaphoreTake(myMutexLCDHandle,1) == pdTRUE)
 800394e:	4b2d      	ldr	r3, [pc, #180]	; (8003a04 <StartTaskEtat+0x218>)
 8003950:	681b      	ldr	r3, [r3, #0]
 8003952:	2101      	movs	r1, #1
 8003954:	4618      	mov	r0, r3
 8003956:	f009 fea1 	bl	800d69c <xQueueSemaphoreTake>
 800395a:	4603      	mov	r3, r0
 800395c:	2b01      	cmp	r3, #1
 800395e:	d140      	bne.n	80039e2 <StartTaskEtat+0x1f6>
				   {
					   BSP_LCD_SelectLayer(1);
 8003960:	2001      	movs	r0, #1
 8003962:	f000 fb07 	bl	8003f74 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
 8003966:	f04f 30ff 	mov.w	r0, #4294967295
 800396a:	f000 fb13 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(98*etat_prec-170, 265, 35, 5);
 800396e:	7ffb      	ldrb	r3, [r7, #31]
 8003970:	b29b      	uxth	r3, r3
 8003972:	461a      	mov	r2, r3
 8003974:	00d2      	lsls	r2, r2, #3
 8003976:	1ad3      	subs	r3, r2, r3
 8003978:	461a      	mov	r2, r3
 800397a:	00d2      	lsls	r2, r2, #3
 800397c:	1ad3      	subs	r3, r2, r3
 800397e:	005b      	lsls	r3, r3, #1
 8003980:	b29b      	uxth	r3, r3
 8003982:	3baa      	subs	r3, #170	; 0xaa
 8003984:	b298      	uxth	r0, r3
 8003986:	2305      	movs	r3, #5
 8003988:	2223      	movs	r2, #35	; 0x23
 800398a:	f240 1109 	movw	r1, #265	; 0x109
 800398e:	f000 ff49 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SetTextColor(0xFFFF00FF); //violet
 8003992:	f46f 407f 	mvn.w	r0, #65280	; 0xff00
 8003996:	f000 fafd 	bl	8003f94 <BSP_LCD_SetTextColor>
					   BSP_LCD_FillRect(98*etat_int-170, 265, 35, 5);
 800399a:	4b19      	ldr	r3, [pc, #100]	; (8003a00 <StartTaskEtat+0x214>)
 800399c:	781b      	ldrb	r3, [r3, #0]
 800399e:	b29b      	uxth	r3, r3
 80039a0:	461a      	mov	r2, r3
 80039a2:	00d2      	lsls	r2, r2, #3
 80039a4:	1ad3      	subs	r3, r2, r3
 80039a6:	461a      	mov	r2, r3
 80039a8:	00d2      	lsls	r2, r2, #3
 80039aa:	1ad3      	subs	r3, r2, r3
 80039ac:	005b      	lsls	r3, r3, #1
 80039ae:	b29b      	uxth	r3, r3
 80039b0:	3baa      	subs	r3, #170	; 0xaa
 80039b2:	b298      	uxth	r0, r3
 80039b4:	2305      	movs	r3, #5
 80039b6:	2223      	movs	r2, #35	; 0x23
 80039b8:	f240 1109 	movw	r1, #265	; 0x109
 80039bc:	f000 ff32 	bl	8004824 <BSP_LCD_FillRect>
					   BSP_LCD_SelectLayer(layer);
 80039c0:	4b11      	ldr	r3, [pc, #68]	; (8003a08 <StartTaskEtat+0x21c>)
 80039c2:	781b      	ldrb	r3, [r3, #0]
 80039c4:	4618      	mov	r0, r3
 80039c6:	f000 fad5 	bl	8003f74 <BSP_LCD_SelectLayer>
					   BSP_LCD_SetTextColor(couleur);
 80039ca:	4b10      	ldr	r3, [pc, #64]	; (8003a0c <StartTaskEtat+0x220>)
 80039cc:	681b      	ldr	r3, [r3, #0]
 80039ce:	4618      	mov	r0, r3
 80039d0:	f000 fae0 	bl	8003f94 <BSP_LCD_SetTextColor>
					   xSemaphoreGive(myMutexLCDHandle);
 80039d4:	4b0b      	ldr	r3, [pc, #44]	; (8003a04 <StartTaskEtat+0x218>)
 80039d6:	6818      	ldr	r0, [r3, #0]
 80039d8:	2300      	movs	r3, #0
 80039da:	2200      	movs	r2, #0
 80039dc:	2100      	movs	r1, #0
 80039de:	f009 fd5b 	bl	800d498 <xQueueGenericSend>
				   }
			   }
		  }
	  }
	  vTaskDelayUntil(&xLastWakeTime, 300);
 80039e2:	f107 0318 	add.w	r3, r7, #24
 80039e6:	f44f 7196 	mov.w	r1, #300	; 0x12c
 80039ea:	4618      	mov	r0, r3
 80039ec:	f00a fa0a 	bl	800de04 <vTaskDelayUntil>
	  if(etat == 0)
 80039f0:	e719      	b.n	8003826 <StartTaskEtat+0x3a>
 80039f2:	bf00      	nop
 80039f4:	20009da8 	.word	0x20009da8
 80039f8:	2000139e 	.word	0x2000139e
 80039fc:	20009d60 	.word	0x20009d60
 8003a00:	2000139f 	.word	0x2000139f
 8003a04:	20009c34 	.word	0x20009c34
 8003a08:	200016a2 	.word	0x200016a2
 8003a0c:	20009e84 	.word	0x20009e84

08003a10 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003a10:	b580      	push	{r7, lr}
 8003a12:	b082      	sub	sp, #8
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	4a04      	ldr	r2, [pc, #16]	; (8003a30 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8003a1e:	4293      	cmp	r3, r2
 8003a20:	d101      	bne.n	8003a26 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8003a22:	f002 fca7 	bl	8006374 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8003a26:	bf00      	nop
 8003a28:	3708      	adds	r7, #8
 8003a2a:	46bd      	mov	sp, r7
 8003a2c:	bd80      	pop	{r7, pc}
 8003a2e:	bf00      	nop
 8003a30:	40001000 	.word	0x40001000

08003a34 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003a34:	b480      	push	{r7}
 8003a36:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003a38:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8003a3a:	e7fe      	b.n	8003a3a <Error_Handler+0x6>

08003a3c <I2Cx_MspInit>:
 8003a3c:	b580      	push	{r7, lr}
 8003a3e:	b08c      	sub	sp, #48	; 0x30
 8003a40:	af00      	add	r7, sp, #0
 8003a42:	6078      	str	r0, [r7, #4]
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	4a51      	ldr	r2, [pc, #324]	; (8003b8c <I2Cx_MspInit+0x150>)
 8003a48:	4293      	cmp	r3, r2
 8003a4a:	d14d      	bne.n	8003ae8 <I2Cx_MspInit+0xac>
 8003a4c:	4b50      	ldr	r3, [pc, #320]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003a4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a50:	4a4f      	ldr	r2, [pc, #316]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003a52:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003a56:	6313      	str	r3, [r2, #48]	; 0x30
 8003a58:	4b4d      	ldr	r3, [pc, #308]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003a5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a5c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003a60:	61bb      	str	r3, [r7, #24]
 8003a62:	69bb      	ldr	r3, [r7, #24]
 8003a64:	2380      	movs	r3, #128	; 0x80
 8003a66:	61fb      	str	r3, [r7, #28]
 8003a68:	2312      	movs	r3, #18
 8003a6a:	623b      	str	r3, [r7, #32]
 8003a6c:	2300      	movs	r3, #0
 8003a6e:	627b      	str	r3, [r7, #36]	; 0x24
 8003a70:	2302      	movs	r3, #2
 8003a72:	62bb      	str	r3, [r7, #40]	; 0x28
 8003a74:	2304      	movs	r3, #4
 8003a76:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003a78:	f107 031c 	add.w	r3, r7, #28
 8003a7c:	4619      	mov	r1, r3
 8003a7e:	4845      	ldr	r0, [pc, #276]	; (8003b94 <I2Cx_MspInit+0x158>)
 8003a80:	f003 feae 	bl	80077e0 <HAL_GPIO_Init>
 8003a84:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003a88:	61fb      	str	r3, [r7, #28]
 8003a8a:	f107 031c 	add.w	r3, r7, #28
 8003a8e:	4619      	mov	r1, r3
 8003a90:	4840      	ldr	r0, [pc, #256]	; (8003b94 <I2Cx_MspInit+0x158>)
 8003a92:	f003 fea5 	bl	80077e0 <HAL_GPIO_Init>
 8003a96:	4b3e      	ldr	r3, [pc, #248]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003a98:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003a9a:	4a3d      	ldr	r2, [pc, #244]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003a9c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003aa0:	6413      	str	r3, [r2, #64]	; 0x40
 8003aa2:	4b3b      	ldr	r3, [pc, #236]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003aa4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003aa6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8003aaa:	617b      	str	r3, [r7, #20]
 8003aac:	697b      	ldr	r3, [r7, #20]
 8003aae:	4b38      	ldr	r3, [pc, #224]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003ab0:	6a1b      	ldr	r3, [r3, #32]
 8003ab2:	4a37      	ldr	r2, [pc, #220]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003ab4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8003ab8:	6213      	str	r3, [r2, #32]
 8003aba:	4b35      	ldr	r3, [pc, #212]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003abc:	6a1b      	ldr	r3, [r3, #32]
 8003abe:	4a34      	ldr	r2, [pc, #208]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003ac0:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8003ac4:	6213      	str	r3, [r2, #32]
 8003ac6:	2200      	movs	r2, #0
 8003ac8:	210f      	movs	r1, #15
 8003aca:	2048      	movs	r0, #72	; 0x48
 8003acc:	f003 f926 	bl	8006d1c <HAL_NVIC_SetPriority>
 8003ad0:	2048      	movs	r0, #72	; 0x48
 8003ad2:	f003 f93f 	bl	8006d54 <HAL_NVIC_EnableIRQ>
 8003ad6:	2200      	movs	r2, #0
 8003ad8:	210f      	movs	r1, #15
 8003ada:	2049      	movs	r0, #73	; 0x49
 8003adc:	f003 f91e 	bl	8006d1c <HAL_NVIC_SetPriority>
 8003ae0:	2049      	movs	r0, #73	; 0x49
 8003ae2:	f003 f937 	bl	8006d54 <HAL_NVIC_EnableIRQ>
 8003ae6:	e04d      	b.n	8003b84 <I2Cx_MspInit+0x148>
 8003ae8:	4b29      	ldr	r3, [pc, #164]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003aea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003aec:	4a28      	ldr	r2, [pc, #160]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003aee:	f043 0302 	orr.w	r3, r3, #2
 8003af2:	6313      	str	r3, [r2, #48]	; 0x30
 8003af4:	4b26      	ldr	r3, [pc, #152]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003af6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003af8:	f003 0302 	and.w	r3, r3, #2
 8003afc:	613b      	str	r3, [r7, #16]
 8003afe:	693b      	ldr	r3, [r7, #16]
 8003b00:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003b04:	61fb      	str	r3, [r7, #28]
 8003b06:	2312      	movs	r3, #18
 8003b08:	623b      	str	r3, [r7, #32]
 8003b0a:	2300      	movs	r3, #0
 8003b0c:	627b      	str	r3, [r7, #36]	; 0x24
 8003b0e:	2302      	movs	r3, #2
 8003b10:	62bb      	str	r3, [r7, #40]	; 0x28
 8003b12:	2304      	movs	r3, #4
 8003b14:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003b16:	f107 031c 	add.w	r3, r7, #28
 8003b1a:	4619      	mov	r1, r3
 8003b1c:	481e      	ldr	r0, [pc, #120]	; (8003b98 <I2Cx_MspInit+0x15c>)
 8003b1e:	f003 fe5f 	bl	80077e0 <HAL_GPIO_Init>
 8003b22:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003b26:	61fb      	str	r3, [r7, #28]
 8003b28:	f107 031c 	add.w	r3, r7, #28
 8003b2c:	4619      	mov	r1, r3
 8003b2e:	481a      	ldr	r0, [pc, #104]	; (8003b98 <I2Cx_MspInit+0x15c>)
 8003b30:	f003 fe56 	bl	80077e0 <HAL_GPIO_Init>
 8003b34:	4b16      	ldr	r3, [pc, #88]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003b36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b38:	4a15      	ldr	r2, [pc, #84]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003b3a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003b3e:	6413      	str	r3, [r2, #64]	; 0x40
 8003b40:	4b13      	ldr	r3, [pc, #76]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003b44:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003b48:	60fb      	str	r3, [r7, #12]
 8003b4a:	68fb      	ldr	r3, [r7, #12]
 8003b4c:	4b10      	ldr	r3, [pc, #64]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003b4e:	6a1b      	ldr	r3, [r3, #32]
 8003b50:	4a0f      	ldr	r2, [pc, #60]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003b52:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8003b56:	6213      	str	r3, [r2, #32]
 8003b58:	4b0d      	ldr	r3, [pc, #52]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003b5a:	6a1b      	ldr	r3, [r3, #32]
 8003b5c:	4a0c      	ldr	r2, [pc, #48]	; (8003b90 <I2Cx_MspInit+0x154>)
 8003b5e:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8003b62:	6213      	str	r3, [r2, #32]
 8003b64:	2200      	movs	r2, #0
 8003b66:	210f      	movs	r1, #15
 8003b68:	201f      	movs	r0, #31
 8003b6a:	f003 f8d7 	bl	8006d1c <HAL_NVIC_SetPriority>
 8003b6e:	201f      	movs	r0, #31
 8003b70:	f003 f8f0 	bl	8006d54 <HAL_NVIC_EnableIRQ>
 8003b74:	2200      	movs	r2, #0
 8003b76:	210f      	movs	r1, #15
 8003b78:	2020      	movs	r0, #32
 8003b7a:	f003 f8cf 	bl	8006d1c <HAL_NVIC_SetPriority>
 8003b7e:	2020      	movs	r0, #32
 8003b80:	f003 f8e8 	bl	8006d54 <HAL_NVIC_EnableIRQ>
 8003b84:	bf00      	nop
 8003b86:	3730      	adds	r7, #48	; 0x30
 8003b88:	46bd      	mov	sp, r7
 8003b8a:	bd80      	pop	{r7, pc}
 8003b8c:	20001728 	.word	0x20001728
 8003b90:	40023800 	.word	0x40023800
 8003b94:	40021c00 	.word	0x40021c00
 8003b98:	40020400 	.word	0x40020400

08003b9c <I2Cx_Init>:
 8003b9c:	b580      	push	{r7, lr}
 8003b9e:	b082      	sub	sp, #8
 8003ba0:	af00      	add	r7, sp, #0
 8003ba2:	6078      	str	r0, [r7, #4]
 8003ba4:	6878      	ldr	r0, [r7, #4]
 8003ba6:	f004 fc07 	bl	80083b8 <HAL_I2C_GetState>
 8003baa:	4603      	mov	r3, r0
 8003bac:	2b00      	cmp	r3, #0
 8003bae:	d125      	bne.n	8003bfc <I2Cx_Init+0x60>
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	4a14      	ldr	r2, [pc, #80]	; (8003c04 <I2Cx_Init+0x68>)
 8003bb4:	4293      	cmp	r3, r2
 8003bb6:	d103      	bne.n	8003bc0 <I2Cx_Init+0x24>
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	4a13      	ldr	r2, [pc, #76]	; (8003c08 <I2Cx_Init+0x6c>)
 8003bbc:	601a      	str	r2, [r3, #0]
 8003bbe:	e002      	b.n	8003bc6 <I2Cx_Init+0x2a>
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	4a12      	ldr	r2, [pc, #72]	; (8003c0c <I2Cx_Init+0x70>)
 8003bc4:	601a      	str	r2, [r3, #0]
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	4a11      	ldr	r2, [pc, #68]	; (8003c10 <I2Cx_Init+0x74>)
 8003bca:	605a      	str	r2, [r3, #4]
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	2200      	movs	r2, #0
 8003bd0:	609a      	str	r2, [r3, #8]
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	2201      	movs	r2, #1
 8003bd6:	60da      	str	r2, [r3, #12]
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	2200      	movs	r2, #0
 8003bdc:	611a      	str	r2, [r3, #16]
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	2200      	movs	r2, #0
 8003be2:	615a      	str	r2, [r3, #20]
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	2200      	movs	r2, #0
 8003be8:	61da      	str	r2, [r3, #28]
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	2200      	movs	r2, #0
 8003bee:	621a      	str	r2, [r3, #32]
 8003bf0:	6878      	ldr	r0, [r7, #4]
 8003bf2:	f7ff ff23 	bl	8003a3c <I2Cx_MspInit>
 8003bf6:	6878      	ldr	r0, [r7, #4]
 8003bf8:	f004 f8f0 	bl	8007ddc <HAL_I2C_Init>
 8003bfc:	bf00      	nop
 8003bfe:	3708      	adds	r7, #8
 8003c00:	46bd      	mov	sp, r7
 8003c02:	bd80      	pop	{r7, pc}
 8003c04:	20001728 	.word	0x20001728
 8003c08:	40005c00 	.word	0x40005c00
 8003c0c:	40005400 	.word	0x40005400
 8003c10:	40912732 	.word	0x40912732

08003c14 <I2Cx_ReadMultiple>:
 8003c14:	b580      	push	{r7, lr}
 8003c16:	b08a      	sub	sp, #40	; 0x28
 8003c18:	af04      	add	r7, sp, #16
 8003c1a:	60f8      	str	r0, [r7, #12]
 8003c1c:	4608      	mov	r0, r1
 8003c1e:	4611      	mov	r1, r2
 8003c20:	461a      	mov	r2, r3
 8003c22:	4603      	mov	r3, r0
 8003c24:	72fb      	strb	r3, [r7, #11]
 8003c26:	460b      	mov	r3, r1
 8003c28:	813b      	strh	r3, [r7, #8]
 8003c2a:	4613      	mov	r3, r2
 8003c2c:	80fb      	strh	r3, [r7, #6]
 8003c2e:	2300      	movs	r3, #0
 8003c30:	75fb      	strb	r3, [r7, #23]
 8003c32:	7afb      	ldrb	r3, [r7, #11]
 8003c34:	b299      	uxth	r1, r3
 8003c36:	88f8      	ldrh	r0, [r7, #6]
 8003c38:	893a      	ldrh	r2, [r7, #8]
 8003c3a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003c3e:	9302      	str	r3, [sp, #8]
 8003c40:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003c42:	9301      	str	r3, [sp, #4]
 8003c44:	6a3b      	ldr	r3, [r7, #32]
 8003c46:	9300      	str	r3, [sp, #0]
 8003c48:	4603      	mov	r3, r0
 8003c4a:	68f8      	ldr	r0, [r7, #12]
 8003c4c:	f004 fa9a 	bl	8008184 <HAL_I2C_Mem_Read>
 8003c50:	4603      	mov	r3, r0
 8003c52:	75fb      	strb	r3, [r7, #23]
 8003c54:	7dfb      	ldrb	r3, [r7, #23]
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	d004      	beq.n	8003c64 <I2Cx_ReadMultiple+0x50>
 8003c5a:	7afb      	ldrb	r3, [r7, #11]
 8003c5c:	4619      	mov	r1, r3
 8003c5e:	68f8      	ldr	r0, [r7, #12]
 8003c60:	f000 f832 	bl	8003cc8 <I2Cx_Error>
 8003c64:	7dfb      	ldrb	r3, [r7, #23]
 8003c66:	4618      	mov	r0, r3
 8003c68:	3718      	adds	r7, #24
 8003c6a:	46bd      	mov	sp, r7
 8003c6c:	bd80      	pop	{r7, pc}

08003c6e <I2Cx_WriteMultiple>:
 8003c6e:	b580      	push	{r7, lr}
 8003c70:	b08a      	sub	sp, #40	; 0x28
 8003c72:	af04      	add	r7, sp, #16
 8003c74:	60f8      	str	r0, [r7, #12]
 8003c76:	4608      	mov	r0, r1
 8003c78:	4611      	mov	r1, r2
 8003c7a:	461a      	mov	r2, r3
 8003c7c:	4603      	mov	r3, r0
 8003c7e:	72fb      	strb	r3, [r7, #11]
 8003c80:	460b      	mov	r3, r1
 8003c82:	813b      	strh	r3, [r7, #8]
 8003c84:	4613      	mov	r3, r2
 8003c86:	80fb      	strh	r3, [r7, #6]
 8003c88:	2300      	movs	r3, #0
 8003c8a:	75fb      	strb	r3, [r7, #23]
 8003c8c:	7afb      	ldrb	r3, [r7, #11]
 8003c8e:	b299      	uxth	r1, r3
 8003c90:	88f8      	ldrh	r0, [r7, #6]
 8003c92:	893a      	ldrh	r2, [r7, #8]
 8003c94:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003c98:	9302      	str	r3, [sp, #8]
 8003c9a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003c9c:	9301      	str	r3, [sp, #4]
 8003c9e:	6a3b      	ldr	r3, [r7, #32]
 8003ca0:	9300      	str	r3, [sp, #0]
 8003ca2:	4603      	mov	r3, r0
 8003ca4:	68f8      	ldr	r0, [r7, #12]
 8003ca6:	f004 f959 	bl	8007f5c <HAL_I2C_Mem_Write>
 8003caa:	4603      	mov	r3, r0
 8003cac:	75fb      	strb	r3, [r7, #23]
 8003cae:	7dfb      	ldrb	r3, [r7, #23]
 8003cb0:	2b00      	cmp	r3, #0
 8003cb2:	d004      	beq.n	8003cbe <I2Cx_WriteMultiple+0x50>
 8003cb4:	7afb      	ldrb	r3, [r7, #11]
 8003cb6:	4619      	mov	r1, r3
 8003cb8:	68f8      	ldr	r0, [r7, #12]
 8003cba:	f000 f805 	bl	8003cc8 <I2Cx_Error>
 8003cbe:	7dfb      	ldrb	r3, [r7, #23]
 8003cc0:	4618      	mov	r0, r3
 8003cc2:	3718      	adds	r7, #24
 8003cc4:	46bd      	mov	sp, r7
 8003cc6:	bd80      	pop	{r7, pc}

08003cc8 <I2Cx_Error>:
 8003cc8:	b580      	push	{r7, lr}
 8003cca:	b082      	sub	sp, #8
 8003ccc:	af00      	add	r7, sp, #0
 8003cce:	6078      	str	r0, [r7, #4]
 8003cd0:	460b      	mov	r3, r1
 8003cd2:	70fb      	strb	r3, [r7, #3]
 8003cd4:	6878      	ldr	r0, [r7, #4]
 8003cd6:	f004 f911 	bl	8007efc <HAL_I2C_DeInit>
 8003cda:	6878      	ldr	r0, [r7, #4]
 8003cdc:	f7ff ff5e 	bl	8003b9c <I2Cx_Init>
 8003ce0:	bf00      	nop
 8003ce2:	3708      	adds	r7, #8
 8003ce4:	46bd      	mov	sp, r7
 8003ce6:	bd80      	pop	{r7, pc}

08003ce8 <TS_IO_Init>:
 8003ce8:	b580      	push	{r7, lr}
 8003cea:	af00      	add	r7, sp, #0
 8003cec:	4802      	ldr	r0, [pc, #8]	; (8003cf8 <TS_IO_Init+0x10>)
 8003cee:	f7ff ff55 	bl	8003b9c <I2Cx_Init>
 8003cf2:	bf00      	nop
 8003cf4:	bd80      	pop	{r7, pc}
 8003cf6:	bf00      	nop
 8003cf8:	20001728 	.word	0x20001728

08003cfc <TS_IO_Write>:
 8003cfc:	b580      	push	{r7, lr}
 8003cfe:	b084      	sub	sp, #16
 8003d00:	af02      	add	r7, sp, #8
 8003d02:	4603      	mov	r3, r0
 8003d04:	71fb      	strb	r3, [r7, #7]
 8003d06:	460b      	mov	r3, r1
 8003d08:	71bb      	strb	r3, [r7, #6]
 8003d0a:	4613      	mov	r3, r2
 8003d0c:	717b      	strb	r3, [r7, #5]
 8003d0e:	79bb      	ldrb	r3, [r7, #6]
 8003d10:	b29a      	uxth	r2, r3
 8003d12:	79f9      	ldrb	r1, [r7, #7]
 8003d14:	2301      	movs	r3, #1
 8003d16:	9301      	str	r3, [sp, #4]
 8003d18:	1d7b      	adds	r3, r7, #5
 8003d1a:	9300      	str	r3, [sp, #0]
 8003d1c:	2301      	movs	r3, #1
 8003d1e:	4803      	ldr	r0, [pc, #12]	; (8003d2c <TS_IO_Write+0x30>)
 8003d20:	f7ff ffa5 	bl	8003c6e <I2Cx_WriteMultiple>
 8003d24:	bf00      	nop
 8003d26:	3708      	adds	r7, #8
 8003d28:	46bd      	mov	sp, r7
 8003d2a:	bd80      	pop	{r7, pc}
 8003d2c:	20001728 	.word	0x20001728

08003d30 <TS_IO_Read>:
 8003d30:	b580      	push	{r7, lr}
 8003d32:	b086      	sub	sp, #24
 8003d34:	af02      	add	r7, sp, #8
 8003d36:	4603      	mov	r3, r0
 8003d38:	460a      	mov	r2, r1
 8003d3a:	71fb      	strb	r3, [r7, #7]
 8003d3c:	4613      	mov	r3, r2
 8003d3e:	71bb      	strb	r3, [r7, #6]
 8003d40:	2300      	movs	r3, #0
 8003d42:	73fb      	strb	r3, [r7, #15]
 8003d44:	79bb      	ldrb	r3, [r7, #6]
 8003d46:	b29a      	uxth	r2, r3
 8003d48:	79f9      	ldrb	r1, [r7, #7]
 8003d4a:	2301      	movs	r3, #1
 8003d4c:	9301      	str	r3, [sp, #4]
 8003d4e:	f107 030f 	add.w	r3, r7, #15
 8003d52:	9300      	str	r3, [sp, #0]
 8003d54:	2301      	movs	r3, #1
 8003d56:	4804      	ldr	r0, [pc, #16]	; (8003d68 <TS_IO_Read+0x38>)
 8003d58:	f7ff ff5c 	bl	8003c14 <I2Cx_ReadMultiple>
 8003d5c:	7bfb      	ldrb	r3, [r7, #15]
 8003d5e:	4618      	mov	r0, r3
 8003d60:	3710      	adds	r7, #16
 8003d62:	46bd      	mov	sp, r7
 8003d64:	bd80      	pop	{r7, pc}
 8003d66:	bf00      	nop
 8003d68:	20001728 	.word	0x20001728

08003d6c <TS_IO_Delay>:
 8003d6c:	b580      	push	{r7, lr}
 8003d6e:	b082      	sub	sp, #8
 8003d70:	af00      	add	r7, sp, #0
 8003d72:	6078      	str	r0, [r7, #4]
 8003d74:	6878      	ldr	r0, [r7, #4]
 8003d76:	f002 fb1d 	bl	80063b4 <HAL_Delay>
 8003d7a:	bf00      	nop
 8003d7c:	3708      	adds	r7, #8
 8003d7e:	46bd      	mov	sp, r7
 8003d80:	bd80      	pop	{r7, pc}
	...

08003d84 <BSP_LCD_Init>:
 8003d84:	b580      	push	{r7, lr}
 8003d86:	af00      	add	r7, sp, #0
 8003d88:	4b31      	ldr	r3, [pc, #196]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003d8a:	2228      	movs	r2, #40	; 0x28
 8003d8c:	615a      	str	r2, [r3, #20]
 8003d8e:	4b30      	ldr	r3, [pc, #192]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003d90:	2209      	movs	r2, #9
 8003d92:	619a      	str	r2, [r3, #24]
 8003d94:	4b2e      	ldr	r3, [pc, #184]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003d96:	2235      	movs	r2, #53	; 0x35
 8003d98:	61da      	str	r2, [r3, #28]
 8003d9a:	4b2d      	ldr	r3, [pc, #180]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003d9c:	220b      	movs	r2, #11
 8003d9e:	621a      	str	r2, [r3, #32]
 8003da0:	4b2b      	ldr	r3, [pc, #172]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003da2:	f240 121b 	movw	r2, #283	; 0x11b
 8003da6:	629a      	str	r2, [r3, #40]	; 0x28
 8003da8:	4b29      	ldr	r3, [pc, #164]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003daa:	f240 2215 	movw	r2, #533	; 0x215
 8003dae:	625a      	str	r2, [r3, #36]	; 0x24
 8003db0:	4b27      	ldr	r3, [pc, #156]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003db2:	f240 121d 	movw	r2, #285	; 0x11d
 8003db6:	631a      	str	r2, [r3, #48]	; 0x30
 8003db8:	4b25      	ldr	r3, [pc, #148]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003dba:	f240 2235 	movw	r2, #565	; 0x235
 8003dbe:	62da      	str	r2, [r3, #44]	; 0x2c
 8003dc0:	2100      	movs	r1, #0
 8003dc2:	4823      	ldr	r0, [pc, #140]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003dc4:	f000 ff40 	bl	8004c48 <BSP_LCD_ClockConfig>
 8003dc8:	4b21      	ldr	r3, [pc, #132]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003dca:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8003dce:	661a      	str	r2, [r3, #96]	; 0x60
 8003dd0:	4b1f      	ldr	r3, [pc, #124]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003dd2:	f44f 7288 	mov.w	r2, #272	; 0x110
 8003dd6:	665a      	str	r2, [r3, #100]	; 0x64
 8003dd8:	4b1d      	ldr	r3, [pc, #116]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003dda:	2200      	movs	r2, #0
 8003ddc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8003de0:	4b1b      	ldr	r3, [pc, #108]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003de2:	2200      	movs	r2, #0
 8003de4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8003de8:	4b19      	ldr	r3, [pc, #100]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003dea:	2200      	movs	r2, #0
 8003dec:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 8003df0:	4b17      	ldr	r3, [pc, #92]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003df2:	2200      	movs	r2, #0
 8003df4:	605a      	str	r2, [r3, #4]
 8003df6:	4b16      	ldr	r3, [pc, #88]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003df8:	2200      	movs	r2, #0
 8003dfa:	609a      	str	r2, [r3, #8]
 8003dfc:	4b14      	ldr	r3, [pc, #80]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003dfe:	2200      	movs	r2, #0
 8003e00:	60da      	str	r2, [r3, #12]
 8003e02:	4b13      	ldr	r3, [pc, #76]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003e04:	2200      	movs	r2, #0
 8003e06:	611a      	str	r2, [r3, #16]
 8003e08:	4b11      	ldr	r3, [pc, #68]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003e0a:	4a12      	ldr	r2, [pc, #72]	; (8003e54 <BSP_LCD_Init+0xd0>)
 8003e0c:	601a      	str	r2, [r3, #0]
 8003e0e:	4810      	ldr	r0, [pc, #64]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003e10:	f004 ff64 	bl	8008cdc <HAL_LTDC_GetState>
 8003e14:	4603      	mov	r3, r0
 8003e16:	2b00      	cmp	r3, #0
 8003e18:	d103      	bne.n	8003e22 <BSP_LCD_Init+0x9e>
 8003e1a:	2100      	movs	r1, #0
 8003e1c:	480c      	ldr	r0, [pc, #48]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003e1e:	f000 fe39 	bl	8004a94 <BSP_LCD_MspInit>
 8003e22:	480b      	ldr	r0, [pc, #44]	; (8003e50 <BSP_LCD_Init+0xcc>)
 8003e24:	f004 fd8a 	bl	800893c <HAL_LTDC_Init>
 8003e28:	2201      	movs	r2, #1
 8003e2a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8003e2e:	480a      	ldr	r0, [pc, #40]	; (8003e58 <BSP_LCD_Init+0xd4>)
 8003e30:	f003 ffa2 	bl	8007d78 <HAL_GPIO_WritePin>
 8003e34:	2201      	movs	r2, #1
 8003e36:	2108      	movs	r1, #8
 8003e38:	4808      	ldr	r0, [pc, #32]	; (8003e5c <BSP_LCD_Init+0xd8>)
 8003e3a:	f003 ff9d 	bl	8007d78 <HAL_GPIO_WritePin>
 8003e3e:	f001 f823 	bl	8004e88 <BSP_SDRAM_Init>
 8003e42:	4807      	ldr	r0, [pc, #28]	; (8003e60 <BSP_LCD_Init+0xdc>)
 8003e44:	f000 f8d8 	bl	8003ff8 <BSP_LCD_SetFont>
 8003e48:	2300      	movs	r3, #0
 8003e4a:	4618      	mov	r0, r3
 8003e4c:	bd80      	pop	{r7, pc}
 8003e4e:	bf00      	nop
 8003e50:	2000a030 	.word	0x2000a030
 8003e54:	40016800 	.word	0x40016800
 8003e58:	40022000 	.word	0x40022000
 8003e5c:	40022800 	.word	0x40022800
 8003e60:	200013a0 	.word	0x200013a0

08003e64 <BSP_LCD_GetXSize>:
 8003e64:	b480      	push	{r7}
 8003e66:	af00      	add	r7, sp, #0
 8003e68:	4b06      	ldr	r3, [pc, #24]	; (8003e84 <BSP_LCD_GetXSize+0x20>)
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	4a06      	ldr	r2, [pc, #24]	; (8003e88 <BSP_LCD_GetXSize+0x24>)
 8003e6e:	2134      	movs	r1, #52	; 0x34
 8003e70:	fb01 f303 	mul.w	r3, r1, r3
 8003e74:	4413      	add	r3, r2
 8003e76:	3360      	adds	r3, #96	; 0x60
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	4618      	mov	r0, r3
 8003e7c:	46bd      	mov	sp, r7
 8003e7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e82:	4770      	bx	lr
 8003e84:	200017b4 	.word	0x200017b4
 8003e88:	2000a030 	.word	0x2000a030

08003e8c <BSP_LCD_GetYSize>:
 8003e8c:	b480      	push	{r7}
 8003e8e:	af00      	add	r7, sp, #0
 8003e90:	4b06      	ldr	r3, [pc, #24]	; (8003eac <BSP_LCD_GetYSize+0x20>)
 8003e92:	681b      	ldr	r3, [r3, #0]
 8003e94:	4a06      	ldr	r2, [pc, #24]	; (8003eb0 <BSP_LCD_GetYSize+0x24>)
 8003e96:	2134      	movs	r1, #52	; 0x34
 8003e98:	fb01 f303 	mul.w	r3, r1, r3
 8003e9c:	4413      	add	r3, r2
 8003e9e:	3364      	adds	r3, #100	; 0x64
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	4618      	mov	r0, r3
 8003ea4:	46bd      	mov	sp, r7
 8003ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eaa:	4770      	bx	lr
 8003eac:	200017b4 	.word	0x200017b4
 8003eb0:	2000a030 	.word	0x2000a030

08003eb4 <BSP_LCD_LayerDefaultInit>:
 8003eb4:	b580      	push	{r7, lr}
 8003eb6:	b090      	sub	sp, #64	; 0x40
 8003eb8:	af00      	add	r7, sp, #0
 8003eba:	4603      	mov	r3, r0
 8003ebc:	6039      	str	r1, [r7, #0]
 8003ebe:	80fb      	strh	r3, [r7, #6]
 8003ec0:	2300      	movs	r3, #0
 8003ec2:	60fb      	str	r3, [r7, #12]
 8003ec4:	f7ff ffce 	bl	8003e64 <BSP_LCD_GetXSize>
 8003ec8:	4603      	mov	r3, r0
 8003eca:	613b      	str	r3, [r7, #16]
 8003ecc:	2300      	movs	r3, #0
 8003ece:	617b      	str	r3, [r7, #20]
 8003ed0:	f7ff ffdc 	bl	8003e8c <BSP_LCD_GetYSize>
 8003ed4:	4603      	mov	r3, r0
 8003ed6:	61bb      	str	r3, [r7, #24]
 8003ed8:	2300      	movs	r3, #0
 8003eda:	61fb      	str	r3, [r7, #28]
 8003edc:	683b      	ldr	r3, [r7, #0]
 8003ede:	633b      	str	r3, [r7, #48]	; 0x30
 8003ee0:	23ff      	movs	r3, #255	; 0xff
 8003ee2:	623b      	str	r3, [r7, #32]
 8003ee4:	2300      	movs	r3, #0
 8003ee6:	627b      	str	r3, [r7, #36]	; 0x24
 8003ee8:	2300      	movs	r3, #0
 8003eea:	f887 303c 	strb.w	r3, [r7, #60]	; 0x3c
 8003eee:	2300      	movs	r3, #0
 8003ef0:	f887 303d 	strb.w	r3, [r7, #61]	; 0x3d
 8003ef4:	2300      	movs	r3, #0
 8003ef6:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e
 8003efa:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8003efe:	62bb      	str	r3, [r7, #40]	; 0x28
 8003f00:	2307      	movs	r3, #7
 8003f02:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003f04:	f7ff ffae 	bl	8003e64 <BSP_LCD_GetXSize>
 8003f08:	4603      	mov	r3, r0
 8003f0a:	637b      	str	r3, [r7, #52]	; 0x34
 8003f0c:	f7ff ffbe 	bl	8003e8c <BSP_LCD_GetYSize>
 8003f10:	4603      	mov	r3, r0
 8003f12:	63bb      	str	r3, [r7, #56]	; 0x38
 8003f14:	88fa      	ldrh	r2, [r7, #6]
 8003f16:	f107 030c 	add.w	r3, r7, #12
 8003f1a:	4619      	mov	r1, r3
 8003f1c:	4812      	ldr	r0, [pc, #72]	; (8003f68 <BSP_LCD_LayerDefaultInit+0xb4>)
 8003f1e:	f004 fe9f 	bl	8008c60 <HAL_LTDC_ConfigLayer>
 8003f22:	88fa      	ldrh	r2, [r7, #6]
 8003f24:	4911      	ldr	r1, [pc, #68]	; (8003f6c <BSP_LCD_LayerDefaultInit+0xb8>)
 8003f26:	4613      	mov	r3, r2
 8003f28:	005b      	lsls	r3, r3, #1
 8003f2a:	4413      	add	r3, r2
 8003f2c:	009b      	lsls	r3, r3, #2
 8003f2e:	440b      	add	r3, r1
 8003f30:	3304      	adds	r3, #4
 8003f32:	f04f 32ff 	mov.w	r2, #4294967295
 8003f36:	601a      	str	r2, [r3, #0]
 8003f38:	88fa      	ldrh	r2, [r7, #6]
 8003f3a:	490c      	ldr	r1, [pc, #48]	; (8003f6c <BSP_LCD_LayerDefaultInit+0xb8>)
 8003f3c:	4613      	mov	r3, r2
 8003f3e:	005b      	lsls	r3, r3, #1
 8003f40:	4413      	add	r3, r2
 8003f42:	009b      	lsls	r3, r3, #2
 8003f44:	440b      	add	r3, r1
 8003f46:	3308      	adds	r3, #8
 8003f48:	4a09      	ldr	r2, [pc, #36]	; (8003f70 <BSP_LCD_LayerDefaultInit+0xbc>)
 8003f4a:	601a      	str	r2, [r3, #0]
 8003f4c:	88fa      	ldrh	r2, [r7, #6]
 8003f4e:	4907      	ldr	r1, [pc, #28]	; (8003f6c <BSP_LCD_LayerDefaultInit+0xb8>)
 8003f50:	4613      	mov	r3, r2
 8003f52:	005b      	lsls	r3, r3, #1
 8003f54:	4413      	add	r3, r2
 8003f56:	009b      	lsls	r3, r3, #2
 8003f58:	440b      	add	r3, r1
 8003f5a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8003f5e:	601a      	str	r2, [r3, #0]
 8003f60:	bf00      	nop
 8003f62:	3740      	adds	r7, #64	; 0x40
 8003f64:	46bd      	mov	sp, r7
 8003f66:	bd80      	pop	{r7, pc}
 8003f68:	2000a030 	.word	0x2000a030
 8003f6c:	200017b8 	.word	0x200017b8
 8003f70:	200013a0 	.word	0x200013a0

08003f74 <BSP_LCD_SelectLayer>:
 8003f74:	b480      	push	{r7}
 8003f76:	b083      	sub	sp, #12
 8003f78:	af00      	add	r7, sp, #0
 8003f7a:	6078      	str	r0, [r7, #4]
 8003f7c:	4a04      	ldr	r2, [pc, #16]	; (8003f90 <BSP_LCD_SelectLayer+0x1c>)
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	6013      	str	r3, [r2, #0]
 8003f82:	bf00      	nop
 8003f84:	370c      	adds	r7, #12
 8003f86:	46bd      	mov	sp, r7
 8003f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f8c:	4770      	bx	lr
 8003f8e:	bf00      	nop
 8003f90:	200017b4 	.word	0x200017b4

08003f94 <BSP_LCD_SetTextColor>:
 8003f94:	b480      	push	{r7}
 8003f96:	b083      	sub	sp, #12
 8003f98:	af00      	add	r7, sp, #0
 8003f9a:	6078      	str	r0, [r7, #4]
 8003f9c:	4b07      	ldr	r3, [pc, #28]	; (8003fbc <BSP_LCD_SetTextColor+0x28>)
 8003f9e:	681a      	ldr	r2, [r3, #0]
 8003fa0:	4907      	ldr	r1, [pc, #28]	; (8003fc0 <BSP_LCD_SetTextColor+0x2c>)
 8003fa2:	4613      	mov	r3, r2
 8003fa4:	005b      	lsls	r3, r3, #1
 8003fa6:	4413      	add	r3, r2
 8003fa8:	009b      	lsls	r3, r3, #2
 8003faa:	440b      	add	r3, r1
 8003fac:	687a      	ldr	r2, [r7, #4]
 8003fae:	601a      	str	r2, [r3, #0]
 8003fb0:	bf00      	nop
 8003fb2:	370c      	adds	r7, #12
 8003fb4:	46bd      	mov	sp, r7
 8003fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fba:	4770      	bx	lr
 8003fbc:	200017b4 	.word	0x200017b4
 8003fc0:	200017b8 	.word	0x200017b8

08003fc4 <BSP_LCD_SetBackColor>:
 8003fc4:	b480      	push	{r7}
 8003fc6:	b083      	sub	sp, #12
 8003fc8:	af00      	add	r7, sp, #0
 8003fca:	6078      	str	r0, [r7, #4]
 8003fcc:	4b08      	ldr	r3, [pc, #32]	; (8003ff0 <BSP_LCD_SetBackColor+0x2c>)
 8003fce:	681a      	ldr	r2, [r3, #0]
 8003fd0:	4908      	ldr	r1, [pc, #32]	; (8003ff4 <BSP_LCD_SetBackColor+0x30>)
 8003fd2:	4613      	mov	r3, r2
 8003fd4:	005b      	lsls	r3, r3, #1
 8003fd6:	4413      	add	r3, r2
 8003fd8:	009b      	lsls	r3, r3, #2
 8003fda:	440b      	add	r3, r1
 8003fdc:	3304      	adds	r3, #4
 8003fde:	687a      	ldr	r2, [r7, #4]
 8003fe0:	601a      	str	r2, [r3, #0]
 8003fe2:	bf00      	nop
 8003fe4:	370c      	adds	r7, #12
 8003fe6:	46bd      	mov	sp, r7
 8003fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fec:	4770      	bx	lr
 8003fee:	bf00      	nop
 8003ff0:	200017b4 	.word	0x200017b4
 8003ff4:	200017b8 	.word	0x200017b8

08003ff8 <BSP_LCD_SetFont>:
 8003ff8:	b480      	push	{r7}
 8003ffa:	b083      	sub	sp, #12
 8003ffc:	af00      	add	r7, sp, #0
 8003ffe:	6078      	str	r0, [r7, #4]
 8004000:	4b08      	ldr	r3, [pc, #32]	; (8004024 <BSP_LCD_SetFont+0x2c>)
 8004002:	681a      	ldr	r2, [r3, #0]
 8004004:	4908      	ldr	r1, [pc, #32]	; (8004028 <BSP_LCD_SetFont+0x30>)
 8004006:	4613      	mov	r3, r2
 8004008:	005b      	lsls	r3, r3, #1
 800400a:	4413      	add	r3, r2
 800400c:	009b      	lsls	r3, r3, #2
 800400e:	440b      	add	r3, r1
 8004010:	3308      	adds	r3, #8
 8004012:	687a      	ldr	r2, [r7, #4]
 8004014:	601a      	str	r2, [r3, #0]
 8004016:	bf00      	nop
 8004018:	370c      	adds	r7, #12
 800401a:	46bd      	mov	sp, r7
 800401c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004020:	4770      	bx	lr
 8004022:	bf00      	nop
 8004024:	200017b4 	.word	0x200017b4
 8004028:	200017b8 	.word	0x200017b8

0800402c <BSP_LCD_GetFont>:
 800402c:	b480      	push	{r7}
 800402e:	af00      	add	r7, sp, #0
 8004030:	4b07      	ldr	r3, [pc, #28]	; (8004050 <BSP_LCD_GetFont+0x24>)
 8004032:	681a      	ldr	r2, [r3, #0]
 8004034:	4907      	ldr	r1, [pc, #28]	; (8004054 <BSP_LCD_GetFont+0x28>)
 8004036:	4613      	mov	r3, r2
 8004038:	005b      	lsls	r3, r3, #1
 800403a:	4413      	add	r3, r2
 800403c:	009b      	lsls	r3, r3, #2
 800403e:	440b      	add	r3, r1
 8004040:	3308      	adds	r3, #8
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	4618      	mov	r0, r3
 8004046:	46bd      	mov	sp, r7
 8004048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800404c:	4770      	bx	lr
 800404e:	bf00      	nop
 8004050:	200017b4 	.word	0x200017b4
 8004054:	200017b8 	.word	0x200017b8

08004058 <BSP_LCD_ReadPixel>:
 8004058:	b5b0      	push	{r4, r5, r7, lr}
 800405a:	b084      	sub	sp, #16
 800405c:	af00      	add	r7, sp, #0
 800405e:	4603      	mov	r3, r0
 8004060:	460a      	mov	r2, r1
 8004062:	80fb      	strh	r3, [r7, #6]
 8004064:	4613      	mov	r3, r2
 8004066:	80bb      	strh	r3, [r7, #4]
 8004068:	2300      	movs	r3, #0
 800406a:	60fb      	str	r3, [r7, #12]
 800406c:	4b4b      	ldr	r3, [pc, #300]	; (800419c <BSP_LCD_ReadPixel+0x144>)
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	4a4b      	ldr	r2, [pc, #300]	; (80041a0 <BSP_LCD_ReadPixel+0x148>)
 8004072:	2134      	movs	r1, #52	; 0x34
 8004074:	fb01 f303 	mul.w	r3, r1, r3
 8004078:	4413      	add	r3, r2
 800407a:	3348      	adds	r3, #72	; 0x48
 800407c:	681b      	ldr	r3, [r3, #0]
 800407e:	2b00      	cmp	r3, #0
 8004080:	d115      	bne.n	80040ae <BSP_LCD_ReadPixel+0x56>
 8004082:	4b46      	ldr	r3, [pc, #280]	; (800419c <BSP_LCD_ReadPixel+0x144>)
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	4a46      	ldr	r2, [pc, #280]	; (80041a0 <BSP_LCD_ReadPixel+0x148>)
 8004088:	2134      	movs	r1, #52	; 0x34
 800408a:	fb01 f303 	mul.w	r3, r1, r3
 800408e:	4413      	add	r3, r2
 8004090:	335c      	adds	r3, #92	; 0x5c
 8004092:	681c      	ldr	r4, [r3, #0]
 8004094:	88bd      	ldrh	r5, [r7, #4]
 8004096:	f7ff fee5 	bl	8003e64 <BSP_LCD_GetXSize>
 800409a:	4603      	mov	r3, r0
 800409c:	fb03 f205 	mul.w	r2, r3, r5
 80040a0:	88fb      	ldrh	r3, [r7, #6]
 80040a2:	4413      	add	r3, r2
 80040a4:	009b      	lsls	r3, r3, #2
 80040a6:	4423      	add	r3, r4
 80040a8:	681b      	ldr	r3, [r3, #0]
 80040aa:	60fb      	str	r3, [r7, #12]
 80040ac:	e070      	b.n	8004190 <BSP_LCD_ReadPixel+0x138>
 80040ae:	4b3b      	ldr	r3, [pc, #236]	; (800419c <BSP_LCD_ReadPixel+0x144>)
 80040b0:	681b      	ldr	r3, [r3, #0]
 80040b2:	4a3b      	ldr	r2, [pc, #236]	; (80041a0 <BSP_LCD_ReadPixel+0x148>)
 80040b4:	2134      	movs	r1, #52	; 0x34
 80040b6:	fb01 f303 	mul.w	r3, r1, r3
 80040ba:	4413      	add	r3, r2
 80040bc:	3348      	adds	r3, #72	; 0x48
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	2b01      	cmp	r3, #1
 80040c2:	d117      	bne.n	80040f4 <BSP_LCD_ReadPixel+0x9c>
 80040c4:	4b35      	ldr	r3, [pc, #212]	; (800419c <BSP_LCD_ReadPixel+0x144>)
 80040c6:	681b      	ldr	r3, [r3, #0]
 80040c8:	4a35      	ldr	r2, [pc, #212]	; (80041a0 <BSP_LCD_ReadPixel+0x148>)
 80040ca:	2134      	movs	r1, #52	; 0x34
 80040cc:	fb01 f303 	mul.w	r3, r1, r3
 80040d0:	4413      	add	r3, r2
 80040d2:	335c      	adds	r3, #92	; 0x5c
 80040d4:	681c      	ldr	r4, [r3, #0]
 80040d6:	88bd      	ldrh	r5, [r7, #4]
 80040d8:	f7ff fec4 	bl	8003e64 <BSP_LCD_GetXSize>
 80040dc:	4603      	mov	r3, r0
 80040de:	fb03 f205 	mul.w	r2, r3, r5
 80040e2:	88fb      	ldrh	r3, [r7, #6]
 80040e4:	4413      	add	r3, r2
 80040e6:	009b      	lsls	r3, r3, #2
 80040e8:	4423      	add	r3, r4
 80040ea:	681b      	ldr	r3, [r3, #0]
 80040ec:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80040f0:	60fb      	str	r3, [r7, #12]
 80040f2:	e04d      	b.n	8004190 <BSP_LCD_ReadPixel+0x138>
 80040f4:	4b29      	ldr	r3, [pc, #164]	; (800419c <BSP_LCD_ReadPixel+0x144>)
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	4a29      	ldr	r2, [pc, #164]	; (80041a0 <BSP_LCD_ReadPixel+0x148>)
 80040fa:	2134      	movs	r1, #52	; 0x34
 80040fc:	fb01 f303 	mul.w	r3, r1, r3
 8004100:	4413      	add	r3, r2
 8004102:	3348      	adds	r3, #72	; 0x48
 8004104:	681b      	ldr	r3, [r3, #0]
 8004106:	2b02      	cmp	r3, #2
 8004108:	d015      	beq.n	8004136 <BSP_LCD_ReadPixel+0xde>
 800410a:	4b24      	ldr	r3, [pc, #144]	; (800419c <BSP_LCD_ReadPixel+0x144>)
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	4a24      	ldr	r2, [pc, #144]	; (80041a0 <BSP_LCD_ReadPixel+0x148>)
 8004110:	2134      	movs	r1, #52	; 0x34
 8004112:	fb01 f303 	mul.w	r3, r1, r3
 8004116:	4413      	add	r3, r2
 8004118:	3348      	adds	r3, #72	; 0x48
 800411a:	681b      	ldr	r3, [r3, #0]
 800411c:	2b04      	cmp	r3, #4
 800411e:	d00a      	beq.n	8004136 <BSP_LCD_ReadPixel+0xde>
 8004120:	4b1e      	ldr	r3, [pc, #120]	; (800419c <BSP_LCD_ReadPixel+0x144>)
 8004122:	681b      	ldr	r3, [r3, #0]
 8004124:	4a1e      	ldr	r2, [pc, #120]	; (80041a0 <BSP_LCD_ReadPixel+0x148>)
 8004126:	2134      	movs	r1, #52	; 0x34
 8004128:	fb01 f303 	mul.w	r3, r1, r3
 800412c:	4413      	add	r3, r2
 800412e:	3348      	adds	r3, #72	; 0x48
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	2b07      	cmp	r3, #7
 8004134:	d116      	bne.n	8004164 <BSP_LCD_ReadPixel+0x10c>
 8004136:	4b19      	ldr	r3, [pc, #100]	; (800419c <BSP_LCD_ReadPixel+0x144>)
 8004138:	681b      	ldr	r3, [r3, #0]
 800413a:	4a19      	ldr	r2, [pc, #100]	; (80041a0 <BSP_LCD_ReadPixel+0x148>)
 800413c:	2134      	movs	r1, #52	; 0x34
 800413e:	fb01 f303 	mul.w	r3, r1, r3
 8004142:	4413      	add	r3, r2
 8004144:	335c      	adds	r3, #92	; 0x5c
 8004146:	681c      	ldr	r4, [r3, #0]
 8004148:	88bd      	ldrh	r5, [r7, #4]
 800414a:	f7ff fe8b 	bl	8003e64 <BSP_LCD_GetXSize>
 800414e:	4603      	mov	r3, r0
 8004150:	fb03 f205 	mul.w	r2, r3, r5
 8004154:	88fb      	ldrh	r3, [r7, #6]
 8004156:	4413      	add	r3, r2
 8004158:	005b      	lsls	r3, r3, #1
 800415a:	4423      	add	r3, r4
 800415c:	881b      	ldrh	r3, [r3, #0]
 800415e:	b29b      	uxth	r3, r3
 8004160:	60fb      	str	r3, [r7, #12]
 8004162:	e015      	b.n	8004190 <BSP_LCD_ReadPixel+0x138>
 8004164:	4b0d      	ldr	r3, [pc, #52]	; (800419c <BSP_LCD_ReadPixel+0x144>)
 8004166:	681b      	ldr	r3, [r3, #0]
 8004168:	4a0d      	ldr	r2, [pc, #52]	; (80041a0 <BSP_LCD_ReadPixel+0x148>)
 800416a:	2134      	movs	r1, #52	; 0x34
 800416c:	fb01 f303 	mul.w	r3, r1, r3
 8004170:	4413      	add	r3, r2
 8004172:	335c      	adds	r3, #92	; 0x5c
 8004174:	681c      	ldr	r4, [r3, #0]
 8004176:	88bd      	ldrh	r5, [r7, #4]
 8004178:	f7ff fe74 	bl	8003e64 <BSP_LCD_GetXSize>
 800417c:	4603      	mov	r3, r0
 800417e:	fb03 f205 	mul.w	r2, r3, r5
 8004182:	88fb      	ldrh	r3, [r7, #6]
 8004184:	4413      	add	r3, r2
 8004186:	005b      	lsls	r3, r3, #1
 8004188:	4423      	add	r3, r4
 800418a:	781b      	ldrb	r3, [r3, #0]
 800418c:	b2db      	uxtb	r3, r3
 800418e:	60fb      	str	r3, [r7, #12]
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	4618      	mov	r0, r3
 8004194:	3710      	adds	r7, #16
 8004196:	46bd      	mov	sp, r7
 8004198:	bdb0      	pop	{r4, r5, r7, pc}
 800419a:	bf00      	nop
 800419c:	200017b4 	.word	0x200017b4
 80041a0:	2000a030 	.word	0x2000a030

080041a4 <BSP_LCD_Clear>:
 80041a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80041a6:	b085      	sub	sp, #20
 80041a8:	af02      	add	r7, sp, #8
 80041aa:	6078      	str	r0, [r7, #4]
 80041ac:	4b0f      	ldr	r3, [pc, #60]	; (80041ec <BSP_LCD_Clear+0x48>)
 80041ae:	681c      	ldr	r4, [r3, #0]
 80041b0:	4b0e      	ldr	r3, [pc, #56]	; (80041ec <BSP_LCD_Clear+0x48>)
 80041b2:	681b      	ldr	r3, [r3, #0]
 80041b4:	4a0e      	ldr	r2, [pc, #56]	; (80041f0 <BSP_LCD_Clear+0x4c>)
 80041b6:	2134      	movs	r1, #52	; 0x34
 80041b8:	fb01 f303 	mul.w	r3, r1, r3
 80041bc:	4413      	add	r3, r2
 80041be:	335c      	adds	r3, #92	; 0x5c
 80041c0:	681b      	ldr	r3, [r3, #0]
 80041c2:	461d      	mov	r5, r3
 80041c4:	f7ff fe4e 	bl	8003e64 <BSP_LCD_GetXSize>
 80041c8:	4606      	mov	r6, r0
 80041ca:	f7ff fe5f 	bl	8003e8c <BSP_LCD_GetYSize>
 80041ce:	4602      	mov	r2, r0
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	9301      	str	r3, [sp, #4]
 80041d4:	2300      	movs	r3, #0
 80041d6:	9300      	str	r3, [sp, #0]
 80041d8:	4613      	mov	r3, r2
 80041da:	4632      	mov	r2, r6
 80041dc:	4629      	mov	r1, r5
 80041de:	4620      	mov	r0, r4
 80041e0:	f000 fe06 	bl	8004df0 <LL_FillBuffer>
 80041e4:	bf00      	nop
 80041e6:	370c      	adds	r7, #12
 80041e8:	46bd      	mov	sp, r7
 80041ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041ec:	200017b4 	.word	0x200017b4
 80041f0:	2000a030 	.word	0x2000a030

080041f4 <BSP_LCD_DisplayChar>:
 80041f4:	b590      	push	{r4, r7, lr}
 80041f6:	b083      	sub	sp, #12
 80041f8:	af00      	add	r7, sp, #0
 80041fa:	4603      	mov	r3, r0
 80041fc:	80fb      	strh	r3, [r7, #6]
 80041fe:	460b      	mov	r3, r1
 8004200:	80bb      	strh	r3, [r7, #4]
 8004202:	4613      	mov	r3, r2
 8004204:	70fb      	strb	r3, [r7, #3]
 8004206:	4b1b      	ldr	r3, [pc, #108]	; (8004274 <BSP_LCD_DisplayChar+0x80>)
 8004208:	681a      	ldr	r2, [r3, #0]
 800420a:	491b      	ldr	r1, [pc, #108]	; (8004278 <BSP_LCD_DisplayChar+0x84>)
 800420c:	4613      	mov	r3, r2
 800420e:	005b      	lsls	r3, r3, #1
 8004210:	4413      	add	r3, r2
 8004212:	009b      	lsls	r3, r3, #2
 8004214:	440b      	add	r3, r1
 8004216:	3308      	adds	r3, #8
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	6819      	ldr	r1, [r3, #0]
 800421c:	78fb      	ldrb	r3, [r7, #3]
 800421e:	f1a3 0020 	sub.w	r0, r3, #32
 8004222:	4b14      	ldr	r3, [pc, #80]	; (8004274 <BSP_LCD_DisplayChar+0x80>)
 8004224:	681a      	ldr	r2, [r3, #0]
 8004226:	4c14      	ldr	r4, [pc, #80]	; (8004278 <BSP_LCD_DisplayChar+0x84>)
 8004228:	4613      	mov	r3, r2
 800422a:	005b      	lsls	r3, r3, #1
 800422c:	4413      	add	r3, r2
 800422e:	009b      	lsls	r3, r3, #2
 8004230:	4423      	add	r3, r4
 8004232:	3308      	adds	r3, #8
 8004234:	681b      	ldr	r3, [r3, #0]
 8004236:	88db      	ldrh	r3, [r3, #6]
 8004238:	fb03 f000 	mul.w	r0, r3, r0
 800423c:	4b0d      	ldr	r3, [pc, #52]	; (8004274 <BSP_LCD_DisplayChar+0x80>)
 800423e:	681a      	ldr	r2, [r3, #0]
 8004240:	4c0d      	ldr	r4, [pc, #52]	; (8004278 <BSP_LCD_DisplayChar+0x84>)
 8004242:	4613      	mov	r3, r2
 8004244:	005b      	lsls	r3, r3, #1
 8004246:	4413      	add	r3, r2
 8004248:	009b      	lsls	r3, r3, #2
 800424a:	4423      	add	r3, r4
 800424c:	3308      	adds	r3, #8
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	889b      	ldrh	r3, [r3, #4]
 8004252:	3307      	adds	r3, #7
 8004254:	2b00      	cmp	r3, #0
 8004256:	da00      	bge.n	800425a <BSP_LCD_DisplayChar+0x66>
 8004258:	3307      	adds	r3, #7
 800425a:	10db      	asrs	r3, r3, #3
 800425c:	fb03 f300 	mul.w	r3, r3, r0
 8004260:	18ca      	adds	r2, r1, r3
 8004262:	88b9      	ldrh	r1, [r7, #4]
 8004264:	88fb      	ldrh	r3, [r7, #6]
 8004266:	4618      	mov	r0, r3
 8004268:	f000 fd0a 	bl	8004c80 <DrawChar>
 800426c:	bf00      	nop
 800426e:	370c      	adds	r7, #12
 8004270:	46bd      	mov	sp, r7
 8004272:	bd90      	pop	{r4, r7, pc}
 8004274:	200017b4 	.word	0x200017b4
 8004278:	200017b8 	.word	0x200017b8

0800427c <BSP_LCD_DisplayStringAt>:
 800427c:	b5b0      	push	{r4, r5, r7, lr}
 800427e:	b088      	sub	sp, #32
 8004280:	af00      	add	r7, sp, #0
 8004282:	60ba      	str	r2, [r7, #8]
 8004284:	461a      	mov	r2, r3
 8004286:	4603      	mov	r3, r0
 8004288:	81fb      	strh	r3, [r7, #14]
 800428a:	460b      	mov	r3, r1
 800428c:	81bb      	strh	r3, [r7, #12]
 800428e:	4613      	mov	r3, r2
 8004290:	71fb      	strb	r3, [r7, #7]
 8004292:	2301      	movs	r3, #1
 8004294:	83fb      	strh	r3, [r7, #30]
 8004296:	2300      	movs	r3, #0
 8004298:	83bb      	strh	r3, [r7, #28]
 800429a:	2300      	movs	r3, #0
 800429c:	61bb      	str	r3, [r7, #24]
 800429e:	2300      	movs	r3, #0
 80042a0:	613b      	str	r3, [r7, #16]
 80042a2:	68bb      	ldr	r3, [r7, #8]
 80042a4:	617b      	str	r3, [r7, #20]
 80042a6:	e002      	b.n	80042ae <BSP_LCD_DisplayStringAt+0x32>
 80042a8:	69bb      	ldr	r3, [r7, #24]
 80042aa:	3301      	adds	r3, #1
 80042ac:	61bb      	str	r3, [r7, #24]
 80042ae:	697b      	ldr	r3, [r7, #20]
 80042b0:	1c5a      	adds	r2, r3, #1
 80042b2:	617a      	str	r2, [r7, #20]
 80042b4:	781b      	ldrb	r3, [r3, #0]
 80042b6:	2b00      	cmp	r3, #0
 80042b8:	d1f6      	bne.n	80042a8 <BSP_LCD_DisplayStringAt+0x2c>
 80042ba:	f7ff fdd3 	bl	8003e64 <BSP_LCD_GetXSize>
 80042be:	4b4f      	ldr	r3, [pc, #316]	; (80043fc <BSP_LCD_DisplayStringAt+0x180>)
 80042c0:	681a      	ldr	r2, [r3, #0]
 80042c2:	494f      	ldr	r1, [pc, #316]	; (8004400 <BSP_LCD_DisplayStringAt+0x184>)
 80042c4:	4613      	mov	r3, r2
 80042c6:	005b      	lsls	r3, r3, #1
 80042c8:	4413      	add	r3, r2
 80042ca:	009b      	lsls	r3, r3, #2
 80042cc:	440b      	add	r3, r1
 80042ce:	3308      	adds	r3, #8
 80042d0:	681b      	ldr	r3, [r3, #0]
 80042d2:	889b      	ldrh	r3, [r3, #4]
 80042d4:	fbb0 f3f3 	udiv	r3, r0, r3
 80042d8:	613b      	str	r3, [r7, #16]
 80042da:	79fb      	ldrb	r3, [r7, #7]
 80042dc:	2b02      	cmp	r3, #2
 80042de:	d01c      	beq.n	800431a <BSP_LCD_DisplayStringAt+0x9e>
 80042e0:	2b03      	cmp	r3, #3
 80042e2:	d017      	beq.n	8004314 <BSP_LCD_DisplayStringAt+0x98>
 80042e4:	2b01      	cmp	r3, #1
 80042e6:	d12e      	bne.n	8004346 <BSP_LCD_DisplayStringAt+0xca>
 80042e8:	693a      	ldr	r2, [r7, #16]
 80042ea:	69bb      	ldr	r3, [r7, #24]
 80042ec:	1ad1      	subs	r1, r2, r3
 80042ee:	4b43      	ldr	r3, [pc, #268]	; (80043fc <BSP_LCD_DisplayStringAt+0x180>)
 80042f0:	681a      	ldr	r2, [r3, #0]
 80042f2:	4843      	ldr	r0, [pc, #268]	; (8004400 <BSP_LCD_DisplayStringAt+0x184>)
 80042f4:	4613      	mov	r3, r2
 80042f6:	005b      	lsls	r3, r3, #1
 80042f8:	4413      	add	r3, r2
 80042fa:	009b      	lsls	r3, r3, #2
 80042fc:	4403      	add	r3, r0
 80042fe:	3308      	adds	r3, #8
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	889b      	ldrh	r3, [r3, #4]
 8004304:	fb03 f301 	mul.w	r3, r3, r1
 8004308:	085b      	lsrs	r3, r3, #1
 800430a:	b29a      	uxth	r2, r3
 800430c:	89fb      	ldrh	r3, [r7, #14]
 800430e:	4413      	add	r3, r2
 8004310:	83fb      	strh	r3, [r7, #30]
 8004312:	e01b      	b.n	800434c <BSP_LCD_DisplayStringAt+0xd0>
 8004314:	89fb      	ldrh	r3, [r7, #14]
 8004316:	83fb      	strh	r3, [r7, #30]
 8004318:	e018      	b.n	800434c <BSP_LCD_DisplayStringAt+0xd0>
 800431a:	693a      	ldr	r2, [r7, #16]
 800431c:	69bb      	ldr	r3, [r7, #24]
 800431e:	1ad3      	subs	r3, r2, r3
 8004320:	b299      	uxth	r1, r3
 8004322:	4b36      	ldr	r3, [pc, #216]	; (80043fc <BSP_LCD_DisplayStringAt+0x180>)
 8004324:	681a      	ldr	r2, [r3, #0]
 8004326:	4836      	ldr	r0, [pc, #216]	; (8004400 <BSP_LCD_DisplayStringAt+0x184>)
 8004328:	4613      	mov	r3, r2
 800432a:	005b      	lsls	r3, r3, #1
 800432c:	4413      	add	r3, r2
 800432e:	009b      	lsls	r3, r3, #2
 8004330:	4403      	add	r3, r0
 8004332:	3308      	adds	r3, #8
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	889b      	ldrh	r3, [r3, #4]
 8004338:	fb11 f303 	smulbb	r3, r1, r3
 800433c:	b29a      	uxth	r2, r3
 800433e:	89fb      	ldrh	r3, [r7, #14]
 8004340:	1ad3      	subs	r3, r2, r3
 8004342:	83fb      	strh	r3, [r7, #30]
 8004344:	e002      	b.n	800434c <BSP_LCD_DisplayStringAt+0xd0>
 8004346:	89fb      	ldrh	r3, [r7, #14]
 8004348:	83fb      	strh	r3, [r7, #30]
 800434a:	bf00      	nop
 800434c:	8bfb      	ldrh	r3, [r7, #30]
 800434e:	2b00      	cmp	r3, #0
 8004350:	d003      	beq.n	800435a <BSP_LCD_DisplayStringAt+0xde>
 8004352:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 8004356:	2b00      	cmp	r3, #0
 8004358:	da1d      	bge.n	8004396 <BSP_LCD_DisplayStringAt+0x11a>
 800435a:	2301      	movs	r3, #1
 800435c:	83fb      	strh	r3, [r7, #30]
 800435e:	e01a      	b.n	8004396 <BSP_LCD_DisplayStringAt+0x11a>
 8004360:	68bb      	ldr	r3, [r7, #8]
 8004362:	781a      	ldrb	r2, [r3, #0]
 8004364:	89b9      	ldrh	r1, [r7, #12]
 8004366:	8bfb      	ldrh	r3, [r7, #30]
 8004368:	4618      	mov	r0, r3
 800436a:	f7ff ff43 	bl	80041f4 <BSP_LCD_DisplayChar>
 800436e:	4b23      	ldr	r3, [pc, #140]	; (80043fc <BSP_LCD_DisplayStringAt+0x180>)
 8004370:	681a      	ldr	r2, [r3, #0]
 8004372:	4923      	ldr	r1, [pc, #140]	; (8004400 <BSP_LCD_DisplayStringAt+0x184>)
 8004374:	4613      	mov	r3, r2
 8004376:	005b      	lsls	r3, r3, #1
 8004378:	4413      	add	r3, r2
 800437a:	009b      	lsls	r3, r3, #2
 800437c:	440b      	add	r3, r1
 800437e:	3308      	adds	r3, #8
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	889a      	ldrh	r2, [r3, #4]
 8004384:	8bfb      	ldrh	r3, [r7, #30]
 8004386:	4413      	add	r3, r2
 8004388:	83fb      	strh	r3, [r7, #30]
 800438a:	68bb      	ldr	r3, [r7, #8]
 800438c:	3301      	adds	r3, #1
 800438e:	60bb      	str	r3, [r7, #8]
 8004390:	8bbb      	ldrh	r3, [r7, #28]
 8004392:	3301      	adds	r3, #1
 8004394:	83bb      	strh	r3, [r7, #28]
 8004396:	68bb      	ldr	r3, [r7, #8]
 8004398:	781b      	ldrb	r3, [r3, #0]
 800439a:	2b00      	cmp	r3, #0
 800439c:	bf14      	ite	ne
 800439e:	2301      	movne	r3, #1
 80043a0:	2300      	moveq	r3, #0
 80043a2:	b2dc      	uxtb	r4, r3
 80043a4:	f7ff fd5e 	bl	8003e64 <BSP_LCD_GetXSize>
 80043a8:	4605      	mov	r5, r0
 80043aa:	8bb9      	ldrh	r1, [r7, #28]
 80043ac:	4b13      	ldr	r3, [pc, #76]	; (80043fc <BSP_LCD_DisplayStringAt+0x180>)
 80043ae:	681a      	ldr	r2, [r3, #0]
 80043b0:	4813      	ldr	r0, [pc, #76]	; (8004400 <BSP_LCD_DisplayStringAt+0x184>)
 80043b2:	4613      	mov	r3, r2
 80043b4:	005b      	lsls	r3, r3, #1
 80043b6:	4413      	add	r3, r2
 80043b8:	009b      	lsls	r3, r3, #2
 80043ba:	4403      	add	r3, r0
 80043bc:	3308      	adds	r3, #8
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	889b      	ldrh	r3, [r3, #4]
 80043c2:	fb03 f301 	mul.w	r3, r3, r1
 80043c6:	1aeb      	subs	r3, r5, r3
 80043c8:	b299      	uxth	r1, r3
 80043ca:	4b0c      	ldr	r3, [pc, #48]	; (80043fc <BSP_LCD_DisplayStringAt+0x180>)
 80043cc:	681a      	ldr	r2, [r3, #0]
 80043ce:	480c      	ldr	r0, [pc, #48]	; (8004400 <BSP_LCD_DisplayStringAt+0x184>)
 80043d0:	4613      	mov	r3, r2
 80043d2:	005b      	lsls	r3, r3, #1
 80043d4:	4413      	add	r3, r2
 80043d6:	009b      	lsls	r3, r3, #2
 80043d8:	4403      	add	r3, r0
 80043da:	3308      	adds	r3, #8
 80043dc:	681b      	ldr	r3, [r3, #0]
 80043de:	889b      	ldrh	r3, [r3, #4]
 80043e0:	4299      	cmp	r1, r3
 80043e2:	bf2c      	ite	cs
 80043e4:	2301      	movcs	r3, #1
 80043e6:	2300      	movcc	r3, #0
 80043e8:	b2db      	uxtb	r3, r3
 80043ea:	4023      	ands	r3, r4
 80043ec:	b2db      	uxtb	r3, r3
 80043ee:	2b00      	cmp	r3, #0
 80043f0:	d1b6      	bne.n	8004360 <BSP_LCD_DisplayStringAt+0xe4>
 80043f2:	bf00      	nop
 80043f4:	3720      	adds	r7, #32
 80043f6:	46bd      	mov	sp, r7
 80043f8:	bdb0      	pop	{r4, r5, r7, pc}
 80043fa:	bf00      	nop
 80043fc:	200017b4 	.word	0x200017b4
 8004400:	200017b8 	.word	0x200017b8

08004404 <BSP_LCD_DisplayStringAtLine>:
 8004404:	b580      	push	{r7, lr}
 8004406:	b082      	sub	sp, #8
 8004408:	af00      	add	r7, sp, #0
 800440a:	4603      	mov	r3, r0
 800440c:	6039      	str	r1, [r7, #0]
 800440e:	80fb      	strh	r3, [r7, #6]
 8004410:	f7ff fe0c 	bl	800402c <BSP_LCD_GetFont>
 8004414:	4603      	mov	r3, r0
 8004416:	88db      	ldrh	r3, [r3, #6]
 8004418:	88fa      	ldrh	r2, [r7, #6]
 800441a:	fb12 f303 	smulbb	r3, r2, r3
 800441e:	b299      	uxth	r1, r3
 8004420:	2303      	movs	r3, #3
 8004422:	683a      	ldr	r2, [r7, #0]
 8004424:	2000      	movs	r0, #0
 8004426:	f7ff ff29 	bl	800427c <BSP_LCD_DisplayStringAt>
 800442a:	bf00      	nop
 800442c:	3708      	adds	r7, #8
 800442e:	46bd      	mov	sp, r7
 8004430:	bd80      	pop	{r7, pc}
	...

08004434 <BSP_LCD_DrawHLine>:
 8004434:	b5b0      	push	{r4, r5, r7, lr}
 8004436:	b086      	sub	sp, #24
 8004438:	af02      	add	r7, sp, #8
 800443a:	4603      	mov	r3, r0
 800443c:	80fb      	strh	r3, [r7, #6]
 800443e:	460b      	mov	r3, r1
 8004440:	80bb      	strh	r3, [r7, #4]
 8004442:	4613      	mov	r3, r2
 8004444:	807b      	strh	r3, [r7, #2]
 8004446:	2300      	movs	r3, #0
 8004448:	60fb      	str	r3, [r7, #12]
 800444a:	4b26      	ldr	r3, [pc, #152]	; (80044e4 <BSP_LCD_DrawHLine+0xb0>)
 800444c:	681b      	ldr	r3, [r3, #0]
 800444e:	4a26      	ldr	r2, [pc, #152]	; (80044e8 <BSP_LCD_DrawHLine+0xb4>)
 8004450:	2134      	movs	r1, #52	; 0x34
 8004452:	fb01 f303 	mul.w	r3, r1, r3
 8004456:	4413      	add	r3, r2
 8004458:	3348      	adds	r3, #72	; 0x48
 800445a:	681b      	ldr	r3, [r3, #0]
 800445c:	2b02      	cmp	r3, #2
 800445e:	d114      	bne.n	800448a <BSP_LCD_DrawHLine+0x56>
 8004460:	4b20      	ldr	r3, [pc, #128]	; (80044e4 <BSP_LCD_DrawHLine+0xb0>)
 8004462:	681b      	ldr	r3, [r3, #0]
 8004464:	4a20      	ldr	r2, [pc, #128]	; (80044e8 <BSP_LCD_DrawHLine+0xb4>)
 8004466:	2134      	movs	r1, #52	; 0x34
 8004468:	fb01 f303 	mul.w	r3, r1, r3
 800446c:	4413      	add	r3, r2
 800446e:	335c      	adds	r3, #92	; 0x5c
 8004470:	681c      	ldr	r4, [r3, #0]
 8004472:	f7ff fcf7 	bl	8003e64 <BSP_LCD_GetXSize>
 8004476:	4602      	mov	r2, r0
 8004478:	88bb      	ldrh	r3, [r7, #4]
 800447a:	fb03 f202 	mul.w	r2, r3, r2
 800447e:	88fb      	ldrh	r3, [r7, #6]
 8004480:	4413      	add	r3, r2
 8004482:	005b      	lsls	r3, r3, #1
 8004484:	4423      	add	r3, r4
 8004486:	60fb      	str	r3, [r7, #12]
 8004488:	e013      	b.n	80044b2 <BSP_LCD_DrawHLine+0x7e>
 800448a:	4b16      	ldr	r3, [pc, #88]	; (80044e4 <BSP_LCD_DrawHLine+0xb0>)
 800448c:	681b      	ldr	r3, [r3, #0]
 800448e:	4a16      	ldr	r2, [pc, #88]	; (80044e8 <BSP_LCD_DrawHLine+0xb4>)
 8004490:	2134      	movs	r1, #52	; 0x34
 8004492:	fb01 f303 	mul.w	r3, r1, r3
 8004496:	4413      	add	r3, r2
 8004498:	335c      	adds	r3, #92	; 0x5c
 800449a:	681c      	ldr	r4, [r3, #0]
 800449c:	f7ff fce2 	bl	8003e64 <BSP_LCD_GetXSize>
 80044a0:	4602      	mov	r2, r0
 80044a2:	88bb      	ldrh	r3, [r7, #4]
 80044a4:	fb03 f202 	mul.w	r2, r3, r2
 80044a8:	88fb      	ldrh	r3, [r7, #6]
 80044aa:	4413      	add	r3, r2
 80044ac:	009b      	lsls	r3, r3, #2
 80044ae:	4423      	add	r3, r4
 80044b0:	60fb      	str	r3, [r7, #12]
 80044b2:	4b0c      	ldr	r3, [pc, #48]	; (80044e4 <BSP_LCD_DrawHLine+0xb0>)
 80044b4:	6818      	ldr	r0, [r3, #0]
 80044b6:	68fc      	ldr	r4, [r7, #12]
 80044b8:	887d      	ldrh	r5, [r7, #2]
 80044ba:	4b0a      	ldr	r3, [pc, #40]	; (80044e4 <BSP_LCD_DrawHLine+0xb0>)
 80044bc:	681a      	ldr	r2, [r3, #0]
 80044be:	490b      	ldr	r1, [pc, #44]	; (80044ec <BSP_LCD_DrawHLine+0xb8>)
 80044c0:	4613      	mov	r3, r2
 80044c2:	005b      	lsls	r3, r3, #1
 80044c4:	4413      	add	r3, r2
 80044c6:	009b      	lsls	r3, r3, #2
 80044c8:	440b      	add	r3, r1
 80044ca:	681b      	ldr	r3, [r3, #0]
 80044cc:	9301      	str	r3, [sp, #4]
 80044ce:	2300      	movs	r3, #0
 80044d0:	9300      	str	r3, [sp, #0]
 80044d2:	2301      	movs	r3, #1
 80044d4:	462a      	mov	r2, r5
 80044d6:	4621      	mov	r1, r4
 80044d8:	f000 fc8a 	bl	8004df0 <LL_FillBuffer>
 80044dc:	bf00      	nop
 80044de:	3710      	adds	r7, #16
 80044e0:	46bd      	mov	sp, r7
 80044e2:	bdb0      	pop	{r4, r5, r7, pc}
 80044e4:	200017b4 	.word	0x200017b4
 80044e8:	2000a030 	.word	0x2000a030
 80044ec:	200017b8 	.word	0x200017b8

080044f0 <BSP_LCD_DrawVLine>:
 80044f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044f2:	b087      	sub	sp, #28
 80044f4:	af02      	add	r7, sp, #8
 80044f6:	4603      	mov	r3, r0
 80044f8:	80fb      	strh	r3, [r7, #6]
 80044fa:	460b      	mov	r3, r1
 80044fc:	80bb      	strh	r3, [r7, #4]
 80044fe:	4613      	mov	r3, r2
 8004500:	807b      	strh	r3, [r7, #2]
 8004502:	2300      	movs	r3, #0
 8004504:	60fb      	str	r3, [r7, #12]
 8004506:	4b28      	ldr	r3, [pc, #160]	; (80045a8 <BSP_LCD_DrawVLine+0xb8>)
 8004508:	681b      	ldr	r3, [r3, #0]
 800450a:	4a28      	ldr	r2, [pc, #160]	; (80045ac <BSP_LCD_DrawVLine+0xbc>)
 800450c:	2134      	movs	r1, #52	; 0x34
 800450e:	fb01 f303 	mul.w	r3, r1, r3
 8004512:	4413      	add	r3, r2
 8004514:	3348      	adds	r3, #72	; 0x48
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	2b02      	cmp	r3, #2
 800451a:	d114      	bne.n	8004546 <BSP_LCD_DrawVLine+0x56>
 800451c:	4b22      	ldr	r3, [pc, #136]	; (80045a8 <BSP_LCD_DrawVLine+0xb8>)
 800451e:	681b      	ldr	r3, [r3, #0]
 8004520:	4a22      	ldr	r2, [pc, #136]	; (80045ac <BSP_LCD_DrawVLine+0xbc>)
 8004522:	2134      	movs	r1, #52	; 0x34
 8004524:	fb01 f303 	mul.w	r3, r1, r3
 8004528:	4413      	add	r3, r2
 800452a:	335c      	adds	r3, #92	; 0x5c
 800452c:	681c      	ldr	r4, [r3, #0]
 800452e:	f7ff fc99 	bl	8003e64 <BSP_LCD_GetXSize>
 8004532:	4602      	mov	r2, r0
 8004534:	88bb      	ldrh	r3, [r7, #4]
 8004536:	fb03 f202 	mul.w	r2, r3, r2
 800453a:	88fb      	ldrh	r3, [r7, #6]
 800453c:	4413      	add	r3, r2
 800453e:	005b      	lsls	r3, r3, #1
 8004540:	4423      	add	r3, r4
 8004542:	60fb      	str	r3, [r7, #12]
 8004544:	e013      	b.n	800456e <BSP_LCD_DrawVLine+0x7e>
 8004546:	4b18      	ldr	r3, [pc, #96]	; (80045a8 <BSP_LCD_DrawVLine+0xb8>)
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	4a18      	ldr	r2, [pc, #96]	; (80045ac <BSP_LCD_DrawVLine+0xbc>)
 800454c:	2134      	movs	r1, #52	; 0x34
 800454e:	fb01 f303 	mul.w	r3, r1, r3
 8004552:	4413      	add	r3, r2
 8004554:	335c      	adds	r3, #92	; 0x5c
 8004556:	681c      	ldr	r4, [r3, #0]
 8004558:	f7ff fc84 	bl	8003e64 <BSP_LCD_GetXSize>
 800455c:	4602      	mov	r2, r0
 800455e:	88bb      	ldrh	r3, [r7, #4]
 8004560:	fb03 f202 	mul.w	r2, r3, r2
 8004564:	88fb      	ldrh	r3, [r7, #6]
 8004566:	4413      	add	r3, r2
 8004568:	009b      	lsls	r3, r3, #2
 800456a:	4423      	add	r3, r4
 800456c:	60fb      	str	r3, [r7, #12]
 800456e:	4b0e      	ldr	r3, [pc, #56]	; (80045a8 <BSP_LCD_DrawVLine+0xb8>)
 8004570:	681c      	ldr	r4, [r3, #0]
 8004572:	68fd      	ldr	r5, [r7, #12]
 8004574:	887e      	ldrh	r6, [r7, #2]
 8004576:	f7ff fc75 	bl	8003e64 <BSP_LCD_GetXSize>
 800457a:	4603      	mov	r3, r0
 800457c:	1e59      	subs	r1, r3, #1
 800457e:	4b0a      	ldr	r3, [pc, #40]	; (80045a8 <BSP_LCD_DrawVLine+0xb8>)
 8004580:	681a      	ldr	r2, [r3, #0]
 8004582:	480b      	ldr	r0, [pc, #44]	; (80045b0 <BSP_LCD_DrawVLine+0xc0>)
 8004584:	4613      	mov	r3, r2
 8004586:	005b      	lsls	r3, r3, #1
 8004588:	4413      	add	r3, r2
 800458a:	009b      	lsls	r3, r3, #2
 800458c:	4403      	add	r3, r0
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	9301      	str	r3, [sp, #4]
 8004592:	9100      	str	r1, [sp, #0]
 8004594:	4633      	mov	r3, r6
 8004596:	2201      	movs	r2, #1
 8004598:	4629      	mov	r1, r5
 800459a:	4620      	mov	r0, r4
 800459c:	f000 fc28 	bl	8004df0 <LL_FillBuffer>
 80045a0:	bf00      	nop
 80045a2:	3714      	adds	r7, #20
 80045a4:	46bd      	mov	sp, r7
 80045a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80045a8:	200017b4 	.word	0x200017b4
 80045ac:	2000a030 	.word	0x2000a030
 80045b0:	200017b8 	.word	0x200017b8

080045b4 <BSP_LCD_DrawCircle>:
 80045b4:	b590      	push	{r4, r7, lr}
 80045b6:	b087      	sub	sp, #28
 80045b8:	af00      	add	r7, sp, #0
 80045ba:	4603      	mov	r3, r0
 80045bc:	80fb      	strh	r3, [r7, #6]
 80045be:	460b      	mov	r3, r1
 80045c0:	80bb      	strh	r3, [r7, #4]
 80045c2:	4613      	mov	r3, r2
 80045c4:	807b      	strh	r3, [r7, #2]
 80045c6:	887b      	ldrh	r3, [r7, #2]
 80045c8:	005b      	lsls	r3, r3, #1
 80045ca:	f1c3 0303 	rsb	r3, r3, #3
 80045ce:	617b      	str	r3, [r7, #20]
 80045d0:	2300      	movs	r3, #0
 80045d2:	613b      	str	r3, [r7, #16]
 80045d4:	887b      	ldrh	r3, [r7, #2]
 80045d6:	60fb      	str	r3, [r7, #12]
 80045d8:	e0cf      	b.n	800477a <BSP_LCD_DrawCircle+0x1c6>
 80045da:	693b      	ldr	r3, [r7, #16]
 80045dc:	b29a      	uxth	r2, r3
 80045de:	88fb      	ldrh	r3, [r7, #6]
 80045e0:	4413      	add	r3, r2
 80045e2:	b298      	uxth	r0, r3
 80045e4:	68fb      	ldr	r3, [r7, #12]
 80045e6:	b29b      	uxth	r3, r3
 80045e8:	88ba      	ldrh	r2, [r7, #4]
 80045ea:	1ad3      	subs	r3, r2, r3
 80045ec:	b29c      	uxth	r4, r3
 80045ee:	4b67      	ldr	r3, [pc, #412]	; (800478c <BSP_LCD_DrawCircle+0x1d8>)
 80045f0:	681a      	ldr	r2, [r3, #0]
 80045f2:	4967      	ldr	r1, [pc, #412]	; (8004790 <BSP_LCD_DrawCircle+0x1dc>)
 80045f4:	4613      	mov	r3, r2
 80045f6:	005b      	lsls	r3, r3, #1
 80045f8:	4413      	add	r3, r2
 80045fa:	009b      	lsls	r3, r3, #2
 80045fc:	440b      	add	r3, r1
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	461a      	mov	r2, r3
 8004602:	4621      	mov	r1, r4
 8004604:	f000 f8c6 	bl	8004794 <BSP_LCD_DrawPixel>
 8004608:	693b      	ldr	r3, [r7, #16]
 800460a:	b29b      	uxth	r3, r3
 800460c:	88fa      	ldrh	r2, [r7, #6]
 800460e:	1ad3      	subs	r3, r2, r3
 8004610:	b298      	uxth	r0, r3
 8004612:	68fb      	ldr	r3, [r7, #12]
 8004614:	b29b      	uxth	r3, r3
 8004616:	88ba      	ldrh	r2, [r7, #4]
 8004618:	1ad3      	subs	r3, r2, r3
 800461a:	b29c      	uxth	r4, r3
 800461c:	4b5b      	ldr	r3, [pc, #364]	; (800478c <BSP_LCD_DrawCircle+0x1d8>)
 800461e:	681a      	ldr	r2, [r3, #0]
 8004620:	495b      	ldr	r1, [pc, #364]	; (8004790 <BSP_LCD_DrawCircle+0x1dc>)
 8004622:	4613      	mov	r3, r2
 8004624:	005b      	lsls	r3, r3, #1
 8004626:	4413      	add	r3, r2
 8004628:	009b      	lsls	r3, r3, #2
 800462a:	440b      	add	r3, r1
 800462c:	681b      	ldr	r3, [r3, #0]
 800462e:	461a      	mov	r2, r3
 8004630:	4621      	mov	r1, r4
 8004632:	f000 f8af 	bl	8004794 <BSP_LCD_DrawPixel>
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	b29a      	uxth	r2, r3
 800463a:	88fb      	ldrh	r3, [r7, #6]
 800463c:	4413      	add	r3, r2
 800463e:	b298      	uxth	r0, r3
 8004640:	693b      	ldr	r3, [r7, #16]
 8004642:	b29b      	uxth	r3, r3
 8004644:	88ba      	ldrh	r2, [r7, #4]
 8004646:	1ad3      	subs	r3, r2, r3
 8004648:	b29c      	uxth	r4, r3
 800464a:	4b50      	ldr	r3, [pc, #320]	; (800478c <BSP_LCD_DrawCircle+0x1d8>)
 800464c:	681a      	ldr	r2, [r3, #0]
 800464e:	4950      	ldr	r1, [pc, #320]	; (8004790 <BSP_LCD_DrawCircle+0x1dc>)
 8004650:	4613      	mov	r3, r2
 8004652:	005b      	lsls	r3, r3, #1
 8004654:	4413      	add	r3, r2
 8004656:	009b      	lsls	r3, r3, #2
 8004658:	440b      	add	r3, r1
 800465a:	681b      	ldr	r3, [r3, #0]
 800465c:	461a      	mov	r2, r3
 800465e:	4621      	mov	r1, r4
 8004660:	f000 f898 	bl	8004794 <BSP_LCD_DrawPixel>
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	b29b      	uxth	r3, r3
 8004668:	88fa      	ldrh	r2, [r7, #6]
 800466a:	1ad3      	subs	r3, r2, r3
 800466c:	b298      	uxth	r0, r3
 800466e:	693b      	ldr	r3, [r7, #16]
 8004670:	b29b      	uxth	r3, r3
 8004672:	88ba      	ldrh	r2, [r7, #4]
 8004674:	1ad3      	subs	r3, r2, r3
 8004676:	b29c      	uxth	r4, r3
 8004678:	4b44      	ldr	r3, [pc, #272]	; (800478c <BSP_LCD_DrawCircle+0x1d8>)
 800467a:	681a      	ldr	r2, [r3, #0]
 800467c:	4944      	ldr	r1, [pc, #272]	; (8004790 <BSP_LCD_DrawCircle+0x1dc>)
 800467e:	4613      	mov	r3, r2
 8004680:	005b      	lsls	r3, r3, #1
 8004682:	4413      	add	r3, r2
 8004684:	009b      	lsls	r3, r3, #2
 8004686:	440b      	add	r3, r1
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	461a      	mov	r2, r3
 800468c:	4621      	mov	r1, r4
 800468e:	f000 f881 	bl	8004794 <BSP_LCD_DrawPixel>
 8004692:	693b      	ldr	r3, [r7, #16]
 8004694:	b29a      	uxth	r2, r3
 8004696:	88fb      	ldrh	r3, [r7, #6]
 8004698:	4413      	add	r3, r2
 800469a:	b298      	uxth	r0, r3
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	b29a      	uxth	r2, r3
 80046a0:	88bb      	ldrh	r3, [r7, #4]
 80046a2:	4413      	add	r3, r2
 80046a4:	b29c      	uxth	r4, r3
 80046a6:	4b39      	ldr	r3, [pc, #228]	; (800478c <BSP_LCD_DrawCircle+0x1d8>)
 80046a8:	681a      	ldr	r2, [r3, #0]
 80046aa:	4939      	ldr	r1, [pc, #228]	; (8004790 <BSP_LCD_DrawCircle+0x1dc>)
 80046ac:	4613      	mov	r3, r2
 80046ae:	005b      	lsls	r3, r3, #1
 80046b0:	4413      	add	r3, r2
 80046b2:	009b      	lsls	r3, r3, #2
 80046b4:	440b      	add	r3, r1
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	461a      	mov	r2, r3
 80046ba:	4621      	mov	r1, r4
 80046bc:	f000 f86a 	bl	8004794 <BSP_LCD_DrawPixel>
 80046c0:	693b      	ldr	r3, [r7, #16]
 80046c2:	b29b      	uxth	r3, r3
 80046c4:	88fa      	ldrh	r2, [r7, #6]
 80046c6:	1ad3      	subs	r3, r2, r3
 80046c8:	b298      	uxth	r0, r3
 80046ca:	68fb      	ldr	r3, [r7, #12]
 80046cc:	b29a      	uxth	r2, r3
 80046ce:	88bb      	ldrh	r3, [r7, #4]
 80046d0:	4413      	add	r3, r2
 80046d2:	b29c      	uxth	r4, r3
 80046d4:	4b2d      	ldr	r3, [pc, #180]	; (800478c <BSP_LCD_DrawCircle+0x1d8>)
 80046d6:	681a      	ldr	r2, [r3, #0]
 80046d8:	492d      	ldr	r1, [pc, #180]	; (8004790 <BSP_LCD_DrawCircle+0x1dc>)
 80046da:	4613      	mov	r3, r2
 80046dc:	005b      	lsls	r3, r3, #1
 80046de:	4413      	add	r3, r2
 80046e0:	009b      	lsls	r3, r3, #2
 80046e2:	440b      	add	r3, r1
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	461a      	mov	r2, r3
 80046e8:	4621      	mov	r1, r4
 80046ea:	f000 f853 	bl	8004794 <BSP_LCD_DrawPixel>
 80046ee:	68fb      	ldr	r3, [r7, #12]
 80046f0:	b29a      	uxth	r2, r3
 80046f2:	88fb      	ldrh	r3, [r7, #6]
 80046f4:	4413      	add	r3, r2
 80046f6:	b298      	uxth	r0, r3
 80046f8:	693b      	ldr	r3, [r7, #16]
 80046fa:	b29a      	uxth	r2, r3
 80046fc:	88bb      	ldrh	r3, [r7, #4]
 80046fe:	4413      	add	r3, r2
 8004700:	b29c      	uxth	r4, r3
 8004702:	4b22      	ldr	r3, [pc, #136]	; (800478c <BSP_LCD_DrawCircle+0x1d8>)
 8004704:	681a      	ldr	r2, [r3, #0]
 8004706:	4922      	ldr	r1, [pc, #136]	; (8004790 <BSP_LCD_DrawCircle+0x1dc>)
 8004708:	4613      	mov	r3, r2
 800470a:	005b      	lsls	r3, r3, #1
 800470c:	4413      	add	r3, r2
 800470e:	009b      	lsls	r3, r3, #2
 8004710:	440b      	add	r3, r1
 8004712:	681b      	ldr	r3, [r3, #0]
 8004714:	461a      	mov	r2, r3
 8004716:	4621      	mov	r1, r4
 8004718:	f000 f83c 	bl	8004794 <BSP_LCD_DrawPixel>
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	b29b      	uxth	r3, r3
 8004720:	88fa      	ldrh	r2, [r7, #6]
 8004722:	1ad3      	subs	r3, r2, r3
 8004724:	b298      	uxth	r0, r3
 8004726:	693b      	ldr	r3, [r7, #16]
 8004728:	b29a      	uxth	r2, r3
 800472a:	88bb      	ldrh	r3, [r7, #4]
 800472c:	4413      	add	r3, r2
 800472e:	b29c      	uxth	r4, r3
 8004730:	4b16      	ldr	r3, [pc, #88]	; (800478c <BSP_LCD_DrawCircle+0x1d8>)
 8004732:	681a      	ldr	r2, [r3, #0]
 8004734:	4916      	ldr	r1, [pc, #88]	; (8004790 <BSP_LCD_DrawCircle+0x1dc>)
 8004736:	4613      	mov	r3, r2
 8004738:	005b      	lsls	r3, r3, #1
 800473a:	4413      	add	r3, r2
 800473c:	009b      	lsls	r3, r3, #2
 800473e:	440b      	add	r3, r1
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	461a      	mov	r2, r3
 8004744:	4621      	mov	r1, r4
 8004746:	f000 f825 	bl	8004794 <BSP_LCD_DrawPixel>
 800474a:	697b      	ldr	r3, [r7, #20]
 800474c:	2b00      	cmp	r3, #0
 800474e:	da06      	bge.n	800475e <BSP_LCD_DrawCircle+0x1aa>
 8004750:	693b      	ldr	r3, [r7, #16]
 8004752:	009a      	lsls	r2, r3, #2
 8004754:	697b      	ldr	r3, [r7, #20]
 8004756:	4413      	add	r3, r2
 8004758:	3306      	adds	r3, #6
 800475a:	617b      	str	r3, [r7, #20]
 800475c:	e00a      	b.n	8004774 <BSP_LCD_DrawCircle+0x1c0>
 800475e:	693a      	ldr	r2, [r7, #16]
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	1ad3      	subs	r3, r2, r3
 8004764:	009a      	lsls	r2, r3, #2
 8004766:	697b      	ldr	r3, [r7, #20]
 8004768:	4413      	add	r3, r2
 800476a:	330a      	adds	r3, #10
 800476c:	617b      	str	r3, [r7, #20]
 800476e:	68fb      	ldr	r3, [r7, #12]
 8004770:	3b01      	subs	r3, #1
 8004772:	60fb      	str	r3, [r7, #12]
 8004774:	693b      	ldr	r3, [r7, #16]
 8004776:	3301      	adds	r3, #1
 8004778:	613b      	str	r3, [r7, #16]
 800477a:	693a      	ldr	r2, [r7, #16]
 800477c:	68fb      	ldr	r3, [r7, #12]
 800477e:	429a      	cmp	r2, r3
 8004780:	f67f af2b 	bls.w	80045da <BSP_LCD_DrawCircle+0x26>
 8004784:	bf00      	nop
 8004786:	371c      	adds	r7, #28
 8004788:	46bd      	mov	sp, r7
 800478a:	bd90      	pop	{r4, r7, pc}
 800478c:	200017b4 	.word	0x200017b4
 8004790:	200017b8 	.word	0x200017b8

08004794 <BSP_LCD_DrawPixel>:
 8004794:	b5b0      	push	{r4, r5, r7, lr}
 8004796:	b082      	sub	sp, #8
 8004798:	af00      	add	r7, sp, #0
 800479a:	4603      	mov	r3, r0
 800479c:	603a      	str	r2, [r7, #0]
 800479e:	80fb      	strh	r3, [r7, #6]
 80047a0:	460b      	mov	r3, r1
 80047a2:	80bb      	strh	r3, [r7, #4]
 80047a4:	4b1d      	ldr	r3, [pc, #116]	; (800481c <BSP_LCD_DrawPixel+0x88>)
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	4a1d      	ldr	r2, [pc, #116]	; (8004820 <BSP_LCD_DrawPixel+0x8c>)
 80047aa:	2134      	movs	r1, #52	; 0x34
 80047ac:	fb01 f303 	mul.w	r3, r1, r3
 80047b0:	4413      	add	r3, r2
 80047b2:	3348      	adds	r3, #72	; 0x48
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	2b02      	cmp	r3, #2
 80047b8:	d116      	bne.n	80047e8 <BSP_LCD_DrawPixel+0x54>
 80047ba:	4b18      	ldr	r3, [pc, #96]	; (800481c <BSP_LCD_DrawPixel+0x88>)
 80047bc:	681b      	ldr	r3, [r3, #0]
 80047be:	4a18      	ldr	r2, [pc, #96]	; (8004820 <BSP_LCD_DrawPixel+0x8c>)
 80047c0:	2134      	movs	r1, #52	; 0x34
 80047c2:	fb01 f303 	mul.w	r3, r1, r3
 80047c6:	4413      	add	r3, r2
 80047c8:	335c      	adds	r3, #92	; 0x5c
 80047ca:	681c      	ldr	r4, [r3, #0]
 80047cc:	88bd      	ldrh	r5, [r7, #4]
 80047ce:	f7ff fb49 	bl	8003e64 <BSP_LCD_GetXSize>
 80047d2:	4603      	mov	r3, r0
 80047d4:	fb03 f205 	mul.w	r2, r3, r5
 80047d8:	88fb      	ldrh	r3, [r7, #6]
 80047da:	4413      	add	r3, r2
 80047dc:	005b      	lsls	r3, r3, #1
 80047de:	4423      	add	r3, r4
 80047e0:	683a      	ldr	r2, [r7, #0]
 80047e2:	b292      	uxth	r2, r2
 80047e4:	801a      	strh	r2, [r3, #0]
 80047e6:	e015      	b.n	8004814 <BSP_LCD_DrawPixel+0x80>
 80047e8:	4b0c      	ldr	r3, [pc, #48]	; (800481c <BSP_LCD_DrawPixel+0x88>)
 80047ea:	681b      	ldr	r3, [r3, #0]
 80047ec:	4a0c      	ldr	r2, [pc, #48]	; (8004820 <BSP_LCD_DrawPixel+0x8c>)
 80047ee:	2134      	movs	r1, #52	; 0x34
 80047f0:	fb01 f303 	mul.w	r3, r1, r3
 80047f4:	4413      	add	r3, r2
 80047f6:	335c      	adds	r3, #92	; 0x5c
 80047f8:	681c      	ldr	r4, [r3, #0]
 80047fa:	88bd      	ldrh	r5, [r7, #4]
 80047fc:	f7ff fb32 	bl	8003e64 <BSP_LCD_GetXSize>
 8004800:	4603      	mov	r3, r0
 8004802:	fb03 f205 	mul.w	r2, r3, r5
 8004806:	88fb      	ldrh	r3, [r7, #6]
 8004808:	4413      	add	r3, r2
 800480a:	009b      	lsls	r3, r3, #2
 800480c:	4423      	add	r3, r4
 800480e:	461a      	mov	r2, r3
 8004810:	683b      	ldr	r3, [r7, #0]
 8004812:	6013      	str	r3, [r2, #0]
 8004814:	bf00      	nop
 8004816:	3708      	adds	r7, #8
 8004818:	46bd      	mov	sp, r7
 800481a:	bdb0      	pop	{r4, r5, r7, pc}
 800481c:	200017b4 	.word	0x200017b4
 8004820:	2000a030 	.word	0x2000a030

08004824 <BSP_LCD_FillRect>:
 8004824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004828:	b086      	sub	sp, #24
 800482a:	af02      	add	r7, sp, #8
 800482c:	4604      	mov	r4, r0
 800482e:	4608      	mov	r0, r1
 8004830:	4611      	mov	r1, r2
 8004832:	461a      	mov	r2, r3
 8004834:	4623      	mov	r3, r4
 8004836:	80fb      	strh	r3, [r7, #6]
 8004838:	4603      	mov	r3, r0
 800483a:	80bb      	strh	r3, [r7, #4]
 800483c:	460b      	mov	r3, r1
 800483e:	807b      	strh	r3, [r7, #2]
 8004840:	4613      	mov	r3, r2
 8004842:	803b      	strh	r3, [r7, #0]
 8004844:	2300      	movs	r3, #0
 8004846:	60fb      	str	r3, [r7, #12]
 8004848:	4b30      	ldr	r3, [pc, #192]	; (800490c <BSP_LCD_FillRect+0xe8>)
 800484a:	681a      	ldr	r2, [r3, #0]
 800484c:	4930      	ldr	r1, [pc, #192]	; (8004910 <BSP_LCD_FillRect+0xec>)
 800484e:	4613      	mov	r3, r2
 8004850:	005b      	lsls	r3, r3, #1
 8004852:	4413      	add	r3, r2
 8004854:	009b      	lsls	r3, r3, #2
 8004856:	440b      	add	r3, r1
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	4618      	mov	r0, r3
 800485c:	f7ff fb9a 	bl	8003f94 <BSP_LCD_SetTextColor>
 8004860:	4b2a      	ldr	r3, [pc, #168]	; (800490c <BSP_LCD_FillRect+0xe8>)
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	4a2b      	ldr	r2, [pc, #172]	; (8004914 <BSP_LCD_FillRect+0xf0>)
 8004866:	2134      	movs	r1, #52	; 0x34
 8004868:	fb01 f303 	mul.w	r3, r1, r3
 800486c:	4413      	add	r3, r2
 800486e:	3348      	adds	r3, #72	; 0x48
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	2b02      	cmp	r3, #2
 8004874:	d114      	bne.n	80048a0 <BSP_LCD_FillRect+0x7c>
 8004876:	4b25      	ldr	r3, [pc, #148]	; (800490c <BSP_LCD_FillRect+0xe8>)
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	4a26      	ldr	r2, [pc, #152]	; (8004914 <BSP_LCD_FillRect+0xf0>)
 800487c:	2134      	movs	r1, #52	; 0x34
 800487e:	fb01 f303 	mul.w	r3, r1, r3
 8004882:	4413      	add	r3, r2
 8004884:	335c      	adds	r3, #92	; 0x5c
 8004886:	681c      	ldr	r4, [r3, #0]
 8004888:	f7ff faec 	bl	8003e64 <BSP_LCD_GetXSize>
 800488c:	4602      	mov	r2, r0
 800488e:	88bb      	ldrh	r3, [r7, #4]
 8004890:	fb03 f202 	mul.w	r2, r3, r2
 8004894:	88fb      	ldrh	r3, [r7, #6]
 8004896:	4413      	add	r3, r2
 8004898:	005b      	lsls	r3, r3, #1
 800489a:	4423      	add	r3, r4
 800489c:	60fb      	str	r3, [r7, #12]
 800489e:	e013      	b.n	80048c8 <BSP_LCD_FillRect+0xa4>
 80048a0:	4b1a      	ldr	r3, [pc, #104]	; (800490c <BSP_LCD_FillRect+0xe8>)
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	4a1b      	ldr	r2, [pc, #108]	; (8004914 <BSP_LCD_FillRect+0xf0>)
 80048a6:	2134      	movs	r1, #52	; 0x34
 80048a8:	fb01 f303 	mul.w	r3, r1, r3
 80048ac:	4413      	add	r3, r2
 80048ae:	335c      	adds	r3, #92	; 0x5c
 80048b0:	681c      	ldr	r4, [r3, #0]
 80048b2:	f7ff fad7 	bl	8003e64 <BSP_LCD_GetXSize>
 80048b6:	4602      	mov	r2, r0
 80048b8:	88bb      	ldrh	r3, [r7, #4]
 80048ba:	fb03 f202 	mul.w	r2, r3, r2
 80048be:	88fb      	ldrh	r3, [r7, #6]
 80048c0:	4413      	add	r3, r2
 80048c2:	009b      	lsls	r3, r3, #2
 80048c4:	4423      	add	r3, r4
 80048c6:	60fb      	str	r3, [r7, #12]
 80048c8:	4b10      	ldr	r3, [pc, #64]	; (800490c <BSP_LCD_FillRect+0xe8>)
 80048ca:	681c      	ldr	r4, [r3, #0]
 80048cc:	68fd      	ldr	r5, [r7, #12]
 80048ce:	887e      	ldrh	r6, [r7, #2]
 80048d0:	f8b7 8000 	ldrh.w	r8, [r7]
 80048d4:	f7ff fac6 	bl	8003e64 <BSP_LCD_GetXSize>
 80048d8:	4602      	mov	r2, r0
 80048da:	887b      	ldrh	r3, [r7, #2]
 80048dc:	1ad1      	subs	r1, r2, r3
 80048de:	4b0b      	ldr	r3, [pc, #44]	; (800490c <BSP_LCD_FillRect+0xe8>)
 80048e0:	681a      	ldr	r2, [r3, #0]
 80048e2:	480b      	ldr	r0, [pc, #44]	; (8004910 <BSP_LCD_FillRect+0xec>)
 80048e4:	4613      	mov	r3, r2
 80048e6:	005b      	lsls	r3, r3, #1
 80048e8:	4413      	add	r3, r2
 80048ea:	009b      	lsls	r3, r3, #2
 80048ec:	4403      	add	r3, r0
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	9301      	str	r3, [sp, #4]
 80048f2:	9100      	str	r1, [sp, #0]
 80048f4:	4643      	mov	r3, r8
 80048f6:	4632      	mov	r2, r6
 80048f8:	4629      	mov	r1, r5
 80048fa:	4620      	mov	r0, r4
 80048fc:	f000 fa78 	bl	8004df0 <LL_FillBuffer>
 8004900:	bf00      	nop
 8004902:	3710      	adds	r7, #16
 8004904:	46bd      	mov	sp, r7
 8004906:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800490a:	bf00      	nop
 800490c:	200017b4 	.word	0x200017b4
 8004910:	200017b8 	.word	0x200017b8
 8004914:	2000a030 	.word	0x2000a030

08004918 <BSP_LCD_FillCircle>:
 8004918:	b580      	push	{r7, lr}
 800491a:	b086      	sub	sp, #24
 800491c:	af00      	add	r7, sp, #0
 800491e:	4603      	mov	r3, r0
 8004920:	80fb      	strh	r3, [r7, #6]
 8004922:	460b      	mov	r3, r1
 8004924:	80bb      	strh	r3, [r7, #4]
 8004926:	4613      	mov	r3, r2
 8004928:	807b      	strh	r3, [r7, #2]
 800492a:	887b      	ldrh	r3, [r7, #2]
 800492c:	005b      	lsls	r3, r3, #1
 800492e:	f1c3 0303 	rsb	r3, r3, #3
 8004932:	617b      	str	r3, [r7, #20]
 8004934:	2300      	movs	r3, #0
 8004936:	613b      	str	r3, [r7, #16]
 8004938:	887b      	ldrh	r3, [r7, #2]
 800493a:	60fb      	str	r3, [r7, #12]
 800493c:	4b44      	ldr	r3, [pc, #272]	; (8004a50 <BSP_LCD_FillCircle+0x138>)
 800493e:	681a      	ldr	r2, [r3, #0]
 8004940:	4944      	ldr	r1, [pc, #272]	; (8004a54 <BSP_LCD_FillCircle+0x13c>)
 8004942:	4613      	mov	r3, r2
 8004944:	005b      	lsls	r3, r3, #1
 8004946:	4413      	add	r3, r2
 8004948:	009b      	lsls	r3, r3, #2
 800494a:	440b      	add	r3, r1
 800494c:	681b      	ldr	r3, [r3, #0]
 800494e:	4618      	mov	r0, r3
 8004950:	f7ff fb20 	bl	8003f94 <BSP_LCD_SetTextColor>
 8004954:	e061      	b.n	8004a1a <BSP_LCD_FillCircle+0x102>
 8004956:	68fb      	ldr	r3, [r7, #12]
 8004958:	2b00      	cmp	r3, #0
 800495a:	d021      	beq.n	80049a0 <BSP_LCD_FillCircle+0x88>
 800495c:	68fb      	ldr	r3, [r7, #12]
 800495e:	b29b      	uxth	r3, r3
 8004960:	88fa      	ldrh	r2, [r7, #6]
 8004962:	1ad3      	subs	r3, r2, r3
 8004964:	b298      	uxth	r0, r3
 8004966:	693b      	ldr	r3, [r7, #16]
 8004968:	b29a      	uxth	r2, r3
 800496a:	88bb      	ldrh	r3, [r7, #4]
 800496c:	4413      	add	r3, r2
 800496e:	b299      	uxth	r1, r3
 8004970:	68fb      	ldr	r3, [r7, #12]
 8004972:	b29b      	uxth	r3, r3
 8004974:	005b      	lsls	r3, r3, #1
 8004976:	b29b      	uxth	r3, r3
 8004978:	461a      	mov	r2, r3
 800497a:	f7ff fd5b 	bl	8004434 <BSP_LCD_DrawHLine>
 800497e:	68fb      	ldr	r3, [r7, #12]
 8004980:	b29b      	uxth	r3, r3
 8004982:	88fa      	ldrh	r2, [r7, #6]
 8004984:	1ad3      	subs	r3, r2, r3
 8004986:	b298      	uxth	r0, r3
 8004988:	693b      	ldr	r3, [r7, #16]
 800498a:	b29b      	uxth	r3, r3
 800498c:	88ba      	ldrh	r2, [r7, #4]
 800498e:	1ad3      	subs	r3, r2, r3
 8004990:	b299      	uxth	r1, r3
 8004992:	68fb      	ldr	r3, [r7, #12]
 8004994:	b29b      	uxth	r3, r3
 8004996:	005b      	lsls	r3, r3, #1
 8004998:	b29b      	uxth	r3, r3
 800499a:	461a      	mov	r2, r3
 800499c:	f7ff fd4a 	bl	8004434 <BSP_LCD_DrawHLine>
 80049a0:	693b      	ldr	r3, [r7, #16]
 80049a2:	2b00      	cmp	r3, #0
 80049a4:	d021      	beq.n	80049ea <BSP_LCD_FillCircle+0xd2>
 80049a6:	693b      	ldr	r3, [r7, #16]
 80049a8:	b29b      	uxth	r3, r3
 80049aa:	88fa      	ldrh	r2, [r7, #6]
 80049ac:	1ad3      	subs	r3, r2, r3
 80049ae:	b298      	uxth	r0, r3
 80049b0:	68fb      	ldr	r3, [r7, #12]
 80049b2:	b29b      	uxth	r3, r3
 80049b4:	88ba      	ldrh	r2, [r7, #4]
 80049b6:	1ad3      	subs	r3, r2, r3
 80049b8:	b299      	uxth	r1, r3
 80049ba:	693b      	ldr	r3, [r7, #16]
 80049bc:	b29b      	uxth	r3, r3
 80049be:	005b      	lsls	r3, r3, #1
 80049c0:	b29b      	uxth	r3, r3
 80049c2:	461a      	mov	r2, r3
 80049c4:	f7ff fd36 	bl	8004434 <BSP_LCD_DrawHLine>
 80049c8:	693b      	ldr	r3, [r7, #16]
 80049ca:	b29b      	uxth	r3, r3
 80049cc:	88fa      	ldrh	r2, [r7, #6]
 80049ce:	1ad3      	subs	r3, r2, r3
 80049d0:	b298      	uxth	r0, r3
 80049d2:	68fb      	ldr	r3, [r7, #12]
 80049d4:	b29a      	uxth	r2, r3
 80049d6:	88bb      	ldrh	r3, [r7, #4]
 80049d8:	4413      	add	r3, r2
 80049da:	b299      	uxth	r1, r3
 80049dc:	693b      	ldr	r3, [r7, #16]
 80049de:	b29b      	uxth	r3, r3
 80049e0:	005b      	lsls	r3, r3, #1
 80049e2:	b29b      	uxth	r3, r3
 80049e4:	461a      	mov	r2, r3
 80049e6:	f7ff fd25 	bl	8004434 <BSP_LCD_DrawHLine>
 80049ea:	697b      	ldr	r3, [r7, #20]
 80049ec:	2b00      	cmp	r3, #0
 80049ee:	da06      	bge.n	80049fe <BSP_LCD_FillCircle+0xe6>
 80049f0:	693b      	ldr	r3, [r7, #16]
 80049f2:	009a      	lsls	r2, r3, #2
 80049f4:	697b      	ldr	r3, [r7, #20]
 80049f6:	4413      	add	r3, r2
 80049f8:	3306      	adds	r3, #6
 80049fa:	617b      	str	r3, [r7, #20]
 80049fc:	e00a      	b.n	8004a14 <BSP_LCD_FillCircle+0xfc>
 80049fe:	693a      	ldr	r2, [r7, #16]
 8004a00:	68fb      	ldr	r3, [r7, #12]
 8004a02:	1ad3      	subs	r3, r2, r3
 8004a04:	009a      	lsls	r2, r3, #2
 8004a06:	697b      	ldr	r3, [r7, #20]
 8004a08:	4413      	add	r3, r2
 8004a0a:	330a      	adds	r3, #10
 8004a0c:	617b      	str	r3, [r7, #20]
 8004a0e:	68fb      	ldr	r3, [r7, #12]
 8004a10:	3b01      	subs	r3, #1
 8004a12:	60fb      	str	r3, [r7, #12]
 8004a14:	693b      	ldr	r3, [r7, #16]
 8004a16:	3301      	adds	r3, #1
 8004a18:	613b      	str	r3, [r7, #16]
 8004a1a:	693a      	ldr	r2, [r7, #16]
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	429a      	cmp	r2, r3
 8004a20:	d999      	bls.n	8004956 <BSP_LCD_FillCircle+0x3e>
 8004a22:	4b0b      	ldr	r3, [pc, #44]	; (8004a50 <BSP_LCD_FillCircle+0x138>)
 8004a24:	681a      	ldr	r2, [r3, #0]
 8004a26:	490b      	ldr	r1, [pc, #44]	; (8004a54 <BSP_LCD_FillCircle+0x13c>)
 8004a28:	4613      	mov	r3, r2
 8004a2a:	005b      	lsls	r3, r3, #1
 8004a2c:	4413      	add	r3, r2
 8004a2e:	009b      	lsls	r3, r3, #2
 8004a30:	440b      	add	r3, r1
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	4618      	mov	r0, r3
 8004a36:	f7ff faad 	bl	8003f94 <BSP_LCD_SetTextColor>
 8004a3a:	887a      	ldrh	r2, [r7, #2]
 8004a3c:	88b9      	ldrh	r1, [r7, #4]
 8004a3e:	88fb      	ldrh	r3, [r7, #6]
 8004a40:	4618      	mov	r0, r3
 8004a42:	f7ff fdb7 	bl	80045b4 <BSP_LCD_DrawCircle>
 8004a46:	bf00      	nop
 8004a48:	3718      	adds	r7, #24
 8004a4a:	46bd      	mov	sp, r7
 8004a4c:	bd80      	pop	{r7, pc}
 8004a4e:	bf00      	nop
 8004a50:	200017b4 	.word	0x200017b4
 8004a54:	200017b8 	.word	0x200017b8

08004a58 <BSP_LCD_DisplayOn>:
 8004a58:	b580      	push	{r7, lr}
 8004a5a:	af00      	add	r7, sp, #0
 8004a5c:	4b0a      	ldr	r3, [pc, #40]	; (8004a88 <BSP_LCD_DisplayOn+0x30>)
 8004a5e:	681b      	ldr	r3, [r3, #0]
 8004a60:	699a      	ldr	r2, [r3, #24]
 8004a62:	4b09      	ldr	r3, [pc, #36]	; (8004a88 <BSP_LCD_DisplayOn+0x30>)
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	f042 0201 	orr.w	r2, r2, #1
 8004a6a:	619a      	str	r2, [r3, #24]
 8004a6c:	2201      	movs	r2, #1
 8004a6e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8004a72:	4806      	ldr	r0, [pc, #24]	; (8004a8c <BSP_LCD_DisplayOn+0x34>)
 8004a74:	f003 f980 	bl	8007d78 <HAL_GPIO_WritePin>
 8004a78:	2201      	movs	r2, #1
 8004a7a:	2108      	movs	r1, #8
 8004a7c:	4804      	ldr	r0, [pc, #16]	; (8004a90 <BSP_LCD_DisplayOn+0x38>)
 8004a7e:	f003 f97b 	bl	8007d78 <HAL_GPIO_WritePin>
 8004a82:	bf00      	nop
 8004a84:	bd80      	pop	{r7, pc}
 8004a86:	bf00      	nop
 8004a88:	2000a030 	.word	0x2000a030
 8004a8c:	40022000 	.word	0x40022000
 8004a90:	40022800 	.word	0x40022800

08004a94 <BSP_LCD_MspInit>:
 8004a94:	b580      	push	{r7, lr}
 8004a96:	b090      	sub	sp, #64	; 0x40
 8004a98:	af00      	add	r7, sp, #0
 8004a9a:	6078      	str	r0, [r7, #4]
 8004a9c:	6039      	str	r1, [r7, #0]
 8004a9e:	4b64      	ldr	r3, [pc, #400]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004aa0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004aa2:	4a63      	ldr	r2, [pc, #396]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004aa4:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8004aa8:	6453      	str	r3, [r2, #68]	; 0x44
 8004aaa:	4b61      	ldr	r3, [pc, #388]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004aac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004aae:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8004ab2:	62bb      	str	r3, [r7, #40]	; 0x28
 8004ab4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004ab6:	4b5e      	ldr	r3, [pc, #376]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004ab8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004aba:	4a5d      	ldr	r2, [pc, #372]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004abc:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8004ac0:	6313      	str	r3, [r2, #48]	; 0x30
 8004ac2:	4b5b      	ldr	r3, [pc, #364]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004ac4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ac6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8004aca:	627b      	str	r3, [r7, #36]	; 0x24
 8004acc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ace:	4b58      	ldr	r3, [pc, #352]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004ad0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ad2:	4a57      	ldr	r2, [pc, #348]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004ad4:	f043 0310 	orr.w	r3, r3, #16
 8004ad8:	6313      	str	r3, [r2, #48]	; 0x30
 8004ada:	4b55      	ldr	r3, [pc, #340]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004adc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ade:	f003 0310 	and.w	r3, r3, #16
 8004ae2:	623b      	str	r3, [r7, #32]
 8004ae4:	6a3b      	ldr	r3, [r7, #32]
 8004ae6:	4b52      	ldr	r3, [pc, #328]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004ae8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004aea:	4a51      	ldr	r2, [pc, #324]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004aec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004af0:	6313      	str	r3, [r2, #48]	; 0x30
 8004af2:	4b4f      	ldr	r3, [pc, #316]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004af6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004afa:	61fb      	str	r3, [r7, #28]
 8004afc:	69fb      	ldr	r3, [r7, #28]
 8004afe:	4b4c      	ldr	r3, [pc, #304]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b02:	4a4b      	ldr	r2, [pc, #300]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b04:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b08:	6313      	str	r3, [r2, #48]	; 0x30
 8004b0a:	4b49      	ldr	r3, [pc, #292]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b0e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b12:	61bb      	str	r3, [r7, #24]
 8004b14:	69bb      	ldr	r3, [r7, #24]
 8004b16:	4b46      	ldr	r3, [pc, #280]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b1a:	4a45      	ldr	r2, [pc, #276]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b1c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004b20:	6313      	str	r3, [r2, #48]	; 0x30
 8004b22:	4b43      	ldr	r3, [pc, #268]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b26:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004b2a:	617b      	str	r3, [r7, #20]
 8004b2c:	697b      	ldr	r3, [r7, #20]
 8004b2e:	4b40      	ldr	r3, [pc, #256]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b32:	4a3f      	ldr	r2, [pc, #252]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b34:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004b38:	6313      	str	r3, [r2, #48]	; 0x30
 8004b3a:	4b3d      	ldr	r3, [pc, #244]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b3e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004b42:	613b      	str	r3, [r7, #16]
 8004b44:	693b      	ldr	r3, [r7, #16]
 8004b46:	4b3a      	ldr	r3, [pc, #232]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b4a:	4a39      	ldr	r2, [pc, #228]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b4c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004b50:	6313      	str	r3, [r2, #48]	; 0x30
 8004b52:	4b37      	ldr	r3, [pc, #220]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b56:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b5a:	60fb      	str	r3, [r7, #12]
 8004b5c:	68fb      	ldr	r3, [r7, #12]
 8004b5e:	4b34      	ldr	r3, [pc, #208]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b62:	4a33      	ldr	r2, [pc, #204]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b64:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004b68:	6313      	str	r3, [r2, #48]	; 0x30
 8004b6a:	4b31      	ldr	r3, [pc, #196]	; (8004c30 <BSP_LCD_MspInit+0x19c>)
 8004b6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b6e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8004b72:	60bb      	str	r3, [r7, #8]
 8004b74:	68bb      	ldr	r3, [r7, #8]
 8004b76:	2310      	movs	r3, #16
 8004b78:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b7a:	2302      	movs	r3, #2
 8004b7c:	633b      	str	r3, [r7, #48]	; 0x30
 8004b7e:	2300      	movs	r3, #0
 8004b80:	637b      	str	r3, [r7, #52]	; 0x34
 8004b82:	2302      	movs	r3, #2
 8004b84:	63bb      	str	r3, [r7, #56]	; 0x38
 8004b86:	230e      	movs	r3, #14
 8004b88:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004b8a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004b8e:	4619      	mov	r1, r3
 8004b90:	4828      	ldr	r0, [pc, #160]	; (8004c34 <BSP_LCD_MspInit+0x1a0>)
 8004b92:	f002 fe25 	bl	80077e0 <HAL_GPIO_Init>
 8004b96:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004b9a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b9c:	2302      	movs	r3, #2
 8004b9e:	633b      	str	r3, [r7, #48]	; 0x30
 8004ba0:	2309      	movs	r3, #9
 8004ba2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004ba4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004ba8:	4619      	mov	r1, r3
 8004baa:	4823      	ldr	r0, [pc, #140]	; (8004c38 <BSP_LCD_MspInit+0x1a4>)
 8004bac:	f002 fe18 	bl	80077e0 <HAL_GPIO_Init>
 8004bb0:	f44f 4366 	mov.w	r3, #58880	; 0xe600
 8004bb4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bb6:	2302      	movs	r3, #2
 8004bb8:	633b      	str	r3, [r7, #48]	; 0x30
 8004bba:	230e      	movs	r3, #14
 8004bbc:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004bbe:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004bc2:	4619      	mov	r1, r3
 8004bc4:	481d      	ldr	r0, [pc, #116]	; (8004c3c <BSP_LCD_MspInit+0x1a8>)
 8004bc6:	f002 fe0b 	bl	80077e0 <HAL_GPIO_Init>
 8004bca:	f64e 73ff 	movw	r3, #61439	; 0xefff
 8004bce:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004bd0:	2302      	movs	r3, #2
 8004bd2:	633b      	str	r3, [r7, #48]	; 0x30
 8004bd4:	230e      	movs	r3, #14
 8004bd6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004bd8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004bdc:	4619      	mov	r1, r3
 8004bde:	4818      	ldr	r0, [pc, #96]	; (8004c40 <BSP_LCD_MspInit+0x1ac>)
 8004be0:	f002 fdfe 	bl	80077e0 <HAL_GPIO_Init>
 8004be4:	23f7      	movs	r3, #247	; 0xf7
 8004be6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004be8:	2302      	movs	r3, #2
 8004bea:	633b      	str	r3, [r7, #48]	; 0x30
 8004bec:	230e      	movs	r3, #14
 8004bee:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004bf0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004bf4:	4619      	mov	r1, r3
 8004bf6:	4813      	ldr	r0, [pc, #76]	; (8004c44 <BSP_LCD_MspInit+0x1b0>)
 8004bf8:	f002 fdf2 	bl	80077e0 <HAL_GPIO_Init>
 8004bfc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8004c00:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004c02:	2301      	movs	r3, #1
 8004c04:	633b      	str	r3, [r7, #48]	; 0x30
 8004c06:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004c0a:	4619      	mov	r1, r3
 8004c0c:	480b      	ldr	r0, [pc, #44]	; (8004c3c <BSP_LCD_MspInit+0x1a8>)
 8004c0e:	f002 fde7 	bl	80077e0 <HAL_GPIO_Init>
 8004c12:	2308      	movs	r3, #8
 8004c14:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004c16:	2301      	movs	r3, #1
 8004c18:	633b      	str	r3, [r7, #48]	; 0x30
 8004c1a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8004c1e:	4619      	mov	r1, r3
 8004c20:	4808      	ldr	r0, [pc, #32]	; (8004c44 <BSP_LCD_MspInit+0x1b0>)
 8004c22:	f002 fddd 	bl	80077e0 <HAL_GPIO_Init>
 8004c26:	bf00      	nop
 8004c28:	3740      	adds	r7, #64	; 0x40
 8004c2a:	46bd      	mov	sp, r7
 8004c2c:	bd80      	pop	{r7, pc}
 8004c2e:	bf00      	nop
 8004c30:	40023800 	.word	0x40023800
 8004c34:	40021000 	.word	0x40021000
 8004c38:	40021800 	.word	0x40021800
 8004c3c:	40022000 	.word	0x40022000
 8004c40:	40022400 	.word	0x40022400
 8004c44:	40022800 	.word	0x40022800

08004c48 <BSP_LCD_ClockConfig>:
 8004c48:	b580      	push	{r7, lr}
 8004c4a:	b082      	sub	sp, #8
 8004c4c:	af00      	add	r7, sp, #0
 8004c4e:	6078      	str	r0, [r7, #4]
 8004c50:	6039      	str	r1, [r7, #0]
 8004c52:	4b0a      	ldr	r3, [pc, #40]	; (8004c7c <BSP_LCD_ClockConfig+0x34>)
 8004c54:	2208      	movs	r2, #8
 8004c56:	601a      	str	r2, [r3, #0]
 8004c58:	4b08      	ldr	r3, [pc, #32]	; (8004c7c <BSP_LCD_ClockConfig+0x34>)
 8004c5a:	22c0      	movs	r2, #192	; 0xc0
 8004c5c:	615a      	str	r2, [r3, #20]
 8004c5e:	4b07      	ldr	r3, [pc, #28]	; (8004c7c <BSP_LCD_ClockConfig+0x34>)
 8004c60:	2205      	movs	r2, #5
 8004c62:	61da      	str	r2, [r3, #28]
 8004c64:	4b05      	ldr	r3, [pc, #20]	; (8004c7c <BSP_LCD_ClockConfig+0x34>)
 8004c66:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8004c6a:	62da      	str	r2, [r3, #44]	; 0x2c
 8004c6c:	4803      	ldr	r0, [pc, #12]	; (8004c7c <BSP_LCD_ClockConfig+0x34>)
 8004c6e:	f004 fee5 	bl	8009a3c <HAL_RCCEx_PeriphCLKConfig>
 8004c72:	bf00      	nop
 8004c74:	3708      	adds	r7, #8
 8004c76:	46bd      	mov	sp, r7
 8004c78:	bd80      	pop	{r7, pc}
 8004c7a:	bf00      	nop
 8004c7c:	200017d0 	.word	0x200017d0

08004c80 <DrawChar>:
 8004c80:	b580      	push	{r7, lr}
 8004c82:	b088      	sub	sp, #32
 8004c84:	af00      	add	r7, sp, #0
 8004c86:	4603      	mov	r3, r0
 8004c88:	603a      	str	r2, [r7, #0]
 8004c8a:	80fb      	strh	r3, [r7, #6]
 8004c8c:	460b      	mov	r3, r1
 8004c8e:	80bb      	strh	r3, [r7, #4]
 8004c90:	2300      	movs	r3, #0
 8004c92:	61fb      	str	r3, [r7, #28]
 8004c94:	2300      	movs	r3, #0
 8004c96:	61bb      	str	r3, [r7, #24]
 8004c98:	4b53      	ldr	r3, [pc, #332]	; (8004de8 <DrawChar+0x168>)
 8004c9a:	681a      	ldr	r2, [r3, #0]
 8004c9c:	4953      	ldr	r1, [pc, #332]	; (8004dec <DrawChar+0x16c>)
 8004c9e:	4613      	mov	r3, r2
 8004ca0:	005b      	lsls	r3, r3, #1
 8004ca2:	4413      	add	r3, r2
 8004ca4:	009b      	lsls	r3, r3, #2
 8004ca6:	440b      	add	r3, r1
 8004ca8:	3308      	adds	r3, #8
 8004caa:	681b      	ldr	r3, [r3, #0]
 8004cac:	88db      	ldrh	r3, [r3, #6]
 8004cae:	827b      	strh	r3, [r7, #18]
 8004cb0:	4b4d      	ldr	r3, [pc, #308]	; (8004de8 <DrawChar+0x168>)
 8004cb2:	681a      	ldr	r2, [r3, #0]
 8004cb4:	494d      	ldr	r1, [pc, #308]	; (8004dec <DrawChar+0x16c>)
 8004cb6:	4613      	mov	r3, r2
 8004cb8:	005b      	lsls	r3, r3, #1
 8004cba:	4413      	add	r3, r2
 8004cbc:	009b      	lsls	r3, r3, #2
 8004cbe:	440b      	add	r3, r1
 8004cc0:	3308      	adds	r3, #8
 8004cc2:	681b      	ldr	r3, [r3, #0]
 8004cc4:	889b      	ldrh	r3, [r3, #4]
 8004cc6:	823b      	strh	r3, [r7, #16]
 8004cc8:	8a3b      	ldrh	r3, [r7, #16]
 8004cca:	3307      	adds	r3, #7
 8004ccc:	2b00      	cmp	r3, #0
 8004cce:	da00      	bge.n	8004cd2 <DrawChar+0x52>
 8004cd0:	3307      	adds	r3, #7
 8004cd2:	10db      	asrs	r3, r3, #3
 8004cd4:	b2db      	uxtb	r3, r3
 8004cd6:	00db      	lsls	r3, r3, #3
 8004cd8:	b2da      	uxtb	r2, r3
 8004cda:	8a3b      	ldrh	r3, [r7, #16]
 8004cdc:	b2db      	uxtb	r3, r3
 8004cde:	1ad3      	subs	r3, r2, r3
 8004ce0:	73fb      	strb	r3, [r7, #15]
 8004ce2:	2300      	movs	r3, #0
 8004ce4:	61fb      	str	r3, [r7, #28]
 8004ce6:	e076      	b.n	8004dd6 <DrawChar+0x156>
 8004ce8:	8a3b      	ldrh	r3, [r7, #16]
 8004cea:	3307      	adds	r3, #7
 8004cec:	2b00      	cmp	r3, #0
 8004cee:	da00      	bge.n	8004cf2 <DrawChar+0x72>
 8004cf0:	3307      	adds	r3, #7
 8004cf2:	10db      	asrs	r3, r3, #3
 8004cf4:	461a      	mov	r2, r3
 8004cf6:	69fb      	ldr	r3, [r7, #28]
 8004cf8:	fb03 f302 	mul.w	r3, r3, r2
 8004cfc:	683a      	ldr	r2, [r7, #0]
 8004cfe:	4413      	add	r3, r2
 8004d00:	60bb      	str	r3, [r7, #8]
 8004d02:	8a3b      	ldrh	r3, [r7, #16]
 8004d04:	3307      	adds	r3, #7
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	da00      	bge.n	8004d0c <DrawChar+0x8c>
 8004d0a:	3307      	adds	r3, #7
 8004d0c:	10db      	asrs	r3, r3, #3
 8004d0e:	2b01      	cmp	r3, #1
 8004d10:	d002      	beq.n	8004d18 <DrawChar+0x98>
 8004d12:	2b02      	cmp	r3, #2
 8004d14:	d004      	beq.n	8004d20 <DrawChar+0xa0>
 8004d16:	e00c      	b.n	8004d32 <DrawChar+0xb2>
 8004d18:	68bb      	ldr	r3, [r7, #8]
 8004d1a:	781b      	ldrb	r3, [r3, #0]
 8004d1c:	617b      	str	r3, [r7, #20]
 8004d1e:	e016      	b.n	8004d4e <DrawChar+0xce>
 8004d20:	68bb      	ldr	r3, [r7, #8]
 8004d22:	781b      	ldrb	r3, [r3, #0]
 8004d24:	021b      	lsls	r3, r3, #8
 8004d26:	68ba      	ldr	r2, [r7, #8]
 8004d28:	3201      	adds	r2, #1
 8004d2a:	7812      	ldrb	r2, [r2, #0]
 8004d2c:	4313      	orrs	r3, r2
 8004d2e:	617b      	str	r3, [r7, #20]
 8004d30:	e00d      	b.n	8004d4e <DrawChar+0xce>
 8004d32:	68bb      	ldr	r3, [r7, #8]
 8004d34:	781b      	ldrb	r3, [r3, #0]
 8004d36:	041a      	lsls	r2, r3, #16
 8004d38:	68bb      	ldr	r3, [r7, #8]
 8004d3a:	3301      	adds	r3, #1
 8004d3c:	781b      	ldrb	r3, [r3, #0]
 8004d3e:	021b      	lsls	r3, r3, #8
 8004d40:	4313      	orrs	r3, r2
 8004d42:	68ba      	ldr	r2, [r7, #8]
 8004d44:	3202      	adds	r2, #2
 8004d46:	7812      	ldrb	r2, [r2, #0]
 8004d48:	4313      	orrs	r3, r2
 8004d4a:	617b      	str	r3, [r7, #20]
 8004d4c:	bf00      	nop
 8004d4e:	2300      	movs	r3, #0
 8004d50:	61bb      	str	r3, [r7, #24]
 8004d52:	e036      	b.n	8004dc2 <DrawChar+0x142>
 8004d54:	8a3a      	ldrh	r2, [r7, #16]
 8004d56:	69bb      	ldr	r3, [r7, #24]
 8004d58:	1ad2      	subs	r2, r2, r3
 8004d5a:	7bfb      	ldrb	r3, [r7, #15]
 8004d5c:	4413      	add	r3, r2
 8004d5e:	3b01      	subs	r3, #1
 8004d60:	2201      	movs	r2, #1
 8004d62:	fa02 f303 	lsl.w	r3, r2, r3
 8004d66:	461a      	mov	r2, r3
 8004d68:	697b      	ldr	r3, [r7, #20]
 8004d6a:	4013      	ands	r3, r2
 8004d6c:	2b00      	cmp	r3, #0
 8004d6e:	d012      	beq.n	8004d96 <DrawChar+0x116>
 8004d70:	69bb      	ldr	r3, [r7, #24]
 8004d72:	b29a      	uxth	r2, r3
 8004d74:	88fb      	ldrh	r3, [r7, #6]
 8004d76:	4413      	add	r3, r2
 8004d78:	b298      	uxth	r0, r3
 8004d7a:	4b1b      	ldr	r3, [pc, #108]	; (8004de8 <DrawChar+0x168>)
 8004d7c:	681a      	ldr	r2, [r3, #0]
 8004d7e:	491b      	ldr	r1, [pc, #108]	; (8004dec <DrawChar+0x16c>)
 8004d80:	4613      	mov	r3, r2
 8004d82:	005b      	lsls	r3, r3, #1
 8004d84:	4413      	add	r3, r2
 8004d86:	009b      	lsls	r3, r3, #2
 8004d88:	440b      	add	r3, r1
 8004d8a:	681a      	ldr	r2, [r3, #0]
 8004d8c:	88bb      	ldrh	r3, [r7, #4]
 8004d8e:	4619      	mov	r1, r3
 8004d90:	f7ff fd00 	bl	8004794 <BSP_LCD_DrawPixel>
 8004d94:	e012      	b.n	8004dbc <DrawChar+0x13c>
 8004d96:	69bb      	ldr	r3, [r7, #24]
 8004d98:	b29a      	uxth	r2, r3
 8004d9a:	88fb      	ldrh	r3, [r7, #6]
 8004d9c:	4413      	add	r3, r2
 8004d9e:	b298      	uxth	r0, r3
 8004da0:	4b11      	ldr	r3, [pc, #68]	; (8004de8 <DrawChar+0x168>)
 8004da2:	681a      	ldr	r2, [r3, #0]
 8004da4:	4911      	ldr	r1, [pc, #68]	; (8004dec <DrawChar+0x16c>)
 8004da6:	4613      	mov	r3, r2
 8004da8:	005b      	lsls	r3, r3, #1
 8004daa:	4413      	add	r3, r2
 8004dac:	009b      	lsls	r3, r3, #2
 8004dae:	440b      	add	r3, r1
 8004db0:	3304      	adds	r3, #4
 8004db2:	681a      	ldr	r2, [r3, #0]
 8004db4:	88bb      	ldrh	r3, [r7, #4]
 8004db6:	4619      	mov	r1, r3
 8004db8:	f7ff fcec 	bl	8004794 <BSP_LCD_DrawPixel>
 8004dbc:	69bb      	ldr	r3, [r7, #24]
 8004dbe:	3301      	adds	r3, #1
 8004dc0:	61bb      	str	r3, [r7, #24]
 8004dc2:	8a3b      	ldrh	r3, [r7, #16]
 8004dc4:	69ba      	ldr	r2, [r7, #24]
 8004dc6:	429a      	cmp	r2, r3
 8004dc8:	d3c4      	bcc.n	8004d54 <DrawChar+0xd4>
 8004dca:	88bb      	ldrh	r3, [r7, #4]
 8004dcc:	3301      	adds	r3, #1
 8004dce:	80bb      	strh	r3, [r7, #4]
 8004dd0:	69fb      	ldr	r3, [r7, #28]
 8004dd2:	3301      	adds	r3, #1
 8004dd4:	61fb      	str	r3, [r7, #28]
 8004dd6:	8a7b      	ldrh	r3, [r7, #18]
 8004dd8:	69fa      	ldr	r2, [r7, #28]
 8004dda:	429a      	cmp	r2, r3
 8004ddc:	d384      	bcc.n	8004ce8 <DrawChar+0x68>
 8004dde:	bf00      	nop
 8004de0:	3720      	adds	r7, #32
 8004de2:	46bd      	mov	sp, r7
 8004de4:	bd80      	pop	{r7, pc}
 8004de6:	bf00      	nop
 8004de8:	200017b4 	.word	0x200017b4
 8004dec:	200017b8 	.word	0x200017b8

08004df0 <LL_FillBuffer>:
 8004df0:	b580      	push	{r7, lr}
 8004df2:	b086      	sub	sp, #24
 8004df4:	af02      	add	r7, sp, #8
 8004df6:	60f8      	str	r0, [r7, #12]
 8004df8:	60b9      	str	r1, [r7, #8]
 8004dfa:	607a      	str	r2, [r7, #4]
 8004dfc:	603b      	str	r3, [r7, #0]
 8004dfe:	4b1e      	ldr	r3, [pc, #120]	; (8004e78 <LL_FillBuffer+0x88>)
 8004e00:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004e04:	605a      	str	r2, [r3, #4]
 8004e06:	4b1d      	ldr	r3, [pc, #116]	; (8004e7c <LL_FillBuffer+0x8c>)
 8004e08:	681b      	ldr	r3, [r3, #0]
 8004e0a:	4a1d      	ldr	r2, [pc, #116]	; (8004e80 <LL_FillBuffer+0x90>)
 8004e0c:	2134      	movs	r1, #52	; 0x34
 8004e0e:	fb01 f303 	mul.w	r3, r1, r3
 8004e12:	4413      	add	r3, r2
 8004e14:	3348      	adds	r3, #72	; 0x48
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	2b02      	cmp	r3, #2
 8004e1a:	d103      	bne.n	8004e24 <LL_FillBuffer+0x34>
 8004e1c:	4b16      	ldr	r3, [pc, #88]	; (8004e78 <LL_FillBuffer+0x88>)
 8004e1e:	2202      	movs	r2, #2
 8004e20:	609a      	str	r2, [r3, #8]
 8004e22:	e002      	b.n	8004e2a <LL_FillBuffer+0x3a>
 8004e24:	4b14      	ldr	r3, [pc, #80]	; (8004e78 <LL_FillBuffer+0x88>)
 8004e26:	2200      	movs	r2, #0
 8004e28:	609a      	str	r2, [r3, #8]
 8004e2a:	4a13      	ldr	r2, [pc, #76]	; (8004e78 <LL_FillBuffer+0x88>)
 8004e2c:	69bb      	ldr	r3, [r7, #24]
 8004e2e:	60d3      	str	r3, [r2, #12]
 8004e30:	4b11      	ldr	r3, [pc, #68]	; (8004e78 <LL_FillBuffer+0x88>)
 8004e32:	4a14      	ldr	r2, [pc, #80]	; (8004e84 <LL_FillBuffer+0x94>)
 8004e34:	601a      	str	r2, [r3, #0]
 8004e36:	4810      	ldr	r0, [pc, #64]	; (8004e78 <LL_FillBuffer+0x88>)
 8004e38:	f002 fa46 	bl	80072c8 <HAL_DMA2D_Init>
 8004e3c:	4603      	mov	r3, r0
 8004e3e:	2b00      	cmp	r3, #0
 8004e40:	d115      	bne.n	8004e6e <LL_FillBuffer+0x7e>
 8004e42:	68f9      	ldr	r1, [r7, #12]
 8004e44:	480c      	ldr	r0, [pc, #48]	; (8004e78 <LL_FillBuffer+0x88>)
 8004e46:	f002 fb9d 	bl	8007584 <HAL_DMA2D_ConfigLayer>
 8004e4a:	4603      	mov	r3, r0
 8004e4c:	2b00      	cmp	r3, #0
 8004e4e:	d10e      	bne.n	8004e6e <LL_FillBuffer+0x7e>
 8004e50:	68ba      	ldr	r2, [r7, #8]
 8004e52:	683b      	ldr	r3, [r7, #0]
 8004e54:	9300      	str	r3, [sp, #0]
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	69f9      	ldr	r1, [r7, #28]
 8004e5a:	4807      	ldr	r0, [pc, #28]	; (8004e78 <LL_FillBuffer+0x88>)
 8004e5c:	f002 fa7e 	bl	800735c <HAL_DMA2D_Start>
 8004e60:	4603      	mov	r3, r0
 8004e62:	2b00      	cmp	r3, #0
 8004e64:	d103      	bne.n	8004e6e <LL_FillBuffer+0x7e>
 8004e66:	210a      	movs	r1, #10
 8004e68:	4803      	ldr	r0, [pc, #12]	; (8004e78 <LL_FillBuffer+0x88>)
 8004e6a:	f002 faa2 	bl	80073b2 <HAL_DMA2D_PollForTransfer>
 8004e6e:	bf00      	nop
 8004e70:	3710      	adds	r7, #16
 8004e72:	46bd      	mov	sp, r7
 8004e74:	bd80      	pop	{r7, pc}
 8004e76:	bf00      	nop
 8004e78:	20001774 	.word	0x20001774
 8004e7c:	200017b4 	.word	0x200017b4
 8004e80:	2000a030 	.word	0x2000a030
 8004e84:	4002b000 	.word	0x4002b000

08004e88 <BSP_SDRAM_Init>:
 8004e88:	b580      	push	{r7, lr}
 8004e8a:	af00      	add	r7, sp, #0
 8004e8c:	4b29      	ldr	r3, [pc, #164]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004e8e:	4a2a      	ldr	r2, [pc, #168]	; (8004f38 <BSP_SDRAM_Init+0xb0>)
 8004e90:	601a      	str	r2, [r3, #0]
 8004e92:	4b2a      	ldr	r3, [pc, #168]	; (8004f3c <BSP_SDRAM_Init+0xb4>)
 8004e94:	2202      	movs	r2, #2
 8004e96:	601a      	str	r2, [r3, #0]
 8004e98:	4b28      	ldr	r3, [pc, #160]	; (8004f3c <BSP_SDRAM_Init+0xb4>)
 8004e9a:	2207      	movs	r2, #7
 8004e9c:	605a      	str	r2, [r3, #4]
 8004e9e:	4b27      	ldr	r3, [pc, #156]	; (8004f3c <BSP_SDRAM_Init+0xb4>)
 8004ea0:	2204      	movs	r2, #4
 8004ea2:	609a      	str	r2, [r3, #8]
 8004ea4:	4b25      	ldr	r3, [pc, #148]	; (8004f3c <BSP_SDRAM_Init+0xb4>)
 8004ea6:	2207      	movs	r2, #7
 8004ea8:	60da      	str	r2, [r3, #12]
 8004eaa:	4b24      	ldr	r3, [pc, #144]	; (8004f3c <BSP_SDRAM_Init+0xb4>)
 8004eac:	2202      	movs	r2, #2
 8004eae:	611a      	str	r2, [r3, #16]
 8004eb0:	4b22      	ldr	r3, [pc, #136]	; (8004f3c <BSP_SDRAM_Init+0xb4>)
 8004eb2:	2202      	movs	r2, #2
 8004eb4:	615a      	str	r2, [r3, #20]
 8004eb6:	4b21      	ldr	r3, [pc, #132]	; (8004f3c <BSP_SDRAM_Init+0xb4>)
 8004eb8:	2202      	movs	r2, #2
 8004eba:	619a      	str	r2, [r3, #24]
 8004ebc:	4b1d      	ldr	r3, [pc, #116]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004ebe:	2200      	movs	r2, #0
 8004ec0:	605a      	str	r2, [r3, #4]
 8004ec2:	4b1c      	ldr	r3, [pc, #112]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004ec4:	2200      	movs	r2, #0
 8004ec6:	609a      	str	r2, [r3, #8]
 8004ec8:	4b1a      	ldr	r3, [pc, #104]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004eca:	2204      	movs	r2, #4
 8004ecc:	60da      	str	r2, [r3, #12]
 8004ece:	4b19      	ldr	r3, [pc, #100]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004ed0:	2210      	movs	r2, #16
 8004ed2:	611a      	str	r2, [r3, #16]
 8004ed4:	4b17      	ldr	r3, [pc, #92]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004ed6:	2240      	movs	r2, #64	; 0x40
 8004ed8:	615a      	str	r2, [r3, #20]
 8004eda:	4b16      	ldr	r3, [pc, #88]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004edc:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004ee0:	619a      	str	r2, [r3, #24]
 8004ee2:	4b14      	ldr	r3, [pc, #80]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004ee4:	2200      	movs	r2, #0
 8004ee6:	61da      	str	r2, [r3, #28]
 8004ee8:	4b12      	ldr	r3, [pc, #72]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004eea:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004eee:	621a      	str	r2, [r3, #32]
 8004ef0:	4b10      	ldr	r3, [pc, #64]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004ef2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8004ef6:	625a      	str	r2, [r3, #36]	; 0x24
 8004ef8:	4b0e      	ldr	r3, [pc, #56]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004efa:	2200      	movs	r2, #0
 8004efc:	629a      	str	r2, [r3, #40]	; 0x28
 8004efe:	2100      	movs	r1, #0
 8004f00:	480c      	ldr	r0, [pc, #48]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004f02:	f000 f87f 	bl	8005004 <BSP_SDRAM_MspInit>
 8004f06:	490d      	ldr	r1, [pc, #52]	; (8004f3c <BSP_SDRAM_Init+0xb4>)
 8004f08:	480a      	ldr	r0, [pc, #40]	; (8004f34 <BSP_SDRAM_Init+0xac>)
 8004f0a:	f005 fd47 	bl	800a99c <HAL_SDRAM_Init>
 8004f0e:	4603      	mov	r3, r0
 8004f10:	2b00      	cmp	r3, #0
 8004f12:	d003      	beq.n	8004f1c <BSP_SDRAM_Init+0x94>
 8004f14:	4b0a      	ldr	r3, [pc, #40]	; (8004f40 <BSP_SDRAM_Init+0xb8>)
 8004f16:	2201      	movs	r2, #1
 8004f18:	701a      	strb	r2, [r3, #0]
 8004f1a:	e002      	b.n	8004f22 <BSP_SDRAM_Init+0x9a>
 8004f1c:	4b08      	ldr	r3, [pc, #32]	; (8004f40 <BSP_SDRAM_Init+0xb8>)
 8004f1e:	2200      	movs	r2, #0
 8004f20:	701a      	strb	r2, [r3, #0]
 8004f22:	f240 6003 	movw	r0, #1539	; 0x603
 8004f26:	f000 f80d 	bl	8004f44 <BSP_SDRAM_Initialization_sequence>
 8004f2a:	4b05      	ldr	r3, [pc, #20]	; (8004f40 <BSP_SDRAM_Init+0xb8>)
 8004f2c:	781b      	ldrb	r3, [r3, #0]
 8004f2e:	4618      	mov	r0, r3
 8004f30:	bd80      	pop	{r7, pc}
 8004f32:	bf00      	nop
 8004f34:	2000a0d8 	.word	0x2000a0d8
 8004f38:	a0000140 	.word	0xa0000140
 8004f3c:	20001854 	.word	0x20001854
 8004f40:	200013b0 	.word	0x200013b0

08004f44 <BSP_SDRAM_Initialization_sequence>:
 8004f44:	b580      	push	{r7, lr}
 8004f46:	b084      	sub	sp, #16
 8004f48:	af00      	add	r7, sp, #0
 8004f4a:	6078      	str	r0, [r7, #4]
 8004f4c:	2300      	movs	r3, #0
 8004f4e:	60fb      	str	r3, [r7, #12]
 8004f50:	4b2a      	ldr	r3, [pc, #168]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f52:	2201      	movs	r2, #1
 8004f54:	601a      	str	r2, [r3, #0]
 8004f56:	4b29      	ldr	r3, [pc, #164]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f58:	2210      	movs	r2, #16
 8004f5a:	605a      	str	r2, [r3, #4]
 8004f5c:	4b27      	ldr	r3, [pc, #156]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f5e:	2201      	movs	r2, #1
 8004f60:	609a      	str	r2, [r3, #8]
 8004f62:	4b26      	ldr	r3, [pc, #152]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f64:	2200      	movs	r2, #0
 8004f66:	60da      	str	r2, [r3, #12]
 8004f68:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004f6c:	4923      	ldr	r1, [pc, #140]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f6e:	4824      	ldr	r0, [pc, #144]	; (8005000 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8004f70:	f005 fd48 	bl	800aa04 <HAL_SDRAM_SendCommand>
 8004f74:	2001      	movs	r0, #1
 8004f76:	f001 fa1d 	bl	80063b4 <HAL_Delay>
 8004f7a:	4b20      	ldr	r3, [pc, #128]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f7c:	2202      	movs	r2, #2
 8004f7e:	601a      	str	r2, [r3, #0]
 8004f80:	4b1e      	ldr	r3, [pc, #120]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f82:	2210      	movs	r2, #16
 8004f84:	605a      	str	r2, [r3, #4]
 8004f86:	4b1d      	ldr	r3, [pc, #116]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f88:	2201      	movs	r2, #1
 8004f8a:	609a      	str	r2, [r3, #8]
 8004f8c:	4b1b      	ldr	r3, [pc, #108]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f8e:	2200      	movs	r2, #0
 8004f90:	60da      	str	r2, [r3, #12]
 8004f92:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004f96:	4919      	ldr	r1, [pc, #100]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004f98:	4819      	ldr	r0, [pc, #100]	; (8005000 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8004f9a:	f005 fd33 	bl	800aa04 <HAL_SDRAM_SendCommand>
 8004f9e:	4b17      	ldr	r3, [pc, #92]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fa0:	2203      	movs	r2, #3
 8004fa2:	601a      	str	r2, [r3, #0]
 8004fa4:	4b15      	ldr	r3, [pc, #84]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fa6:	2210      	movs	r2, #16
 8004fa8:	605a      	str	r2, [r3, #4]
 8004faa:	4b14      	ldr	r3, [pc, #80]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fac:	2208      	movs	r2, #8
 8004fae:	609a      	str	r2, [r3, #8]
 8004fb0:	4b12      	ldr	r3, [pc, #72]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fb2:	2200      	movs	r2, #0
 8004fb4:	60da      	str	r2, [r3, #12]
 8004fb6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004fba:	4910      	ldr	r1, [pc, #64]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fbc:	4810      	ldr	r0, [pc, #64]	; (8005000 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8004fbe:	f005 fd21 	bl	800aa04 <HAL_SDRAM_SendCommand>
 8004fc2:	f44f 7308 	mov.w	r3, #544	; 0x220
 8004fc6:	60fb      	str	r3, [r7, #12]
 8004fc8:	4b0c      	ldr	r3, [pc, #48]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fca:	2204      	movs	r2, #4
 8004fcc:	601a      	str	r2, [r3, #0]
 8004fce:	4b0b      	ldr	r3, [pc, #44]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fd0:	2210      	movs	r2, #16
 8004fd2:	605a      	str	r2, [r3, #4]
 8004fd4:	4b09      	ldr	r3, [pc, #36]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fd6:	2201      	movs	r2, #1
 8004fd8:	609a      	str	r2, [r3, #8]
 8004fda:	68fb      	ldr	r3, [r7, #12]
 8004fdc:	4a07      	ldr	r2, [pc, #28]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fde:	60d3      	str	r3, [r2, #12]
 8004fe0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004fe4:	4905      	ldr	r1, [pc, #20]	; (8004ffc <BSP_SDRAM_Initialization_sequence+0xb8>)
 8004fe6:	4806      	ldr	r0, [pc, #24]	; (8005000 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8004fe8:	f005 fd0c 	bl	800aa04 <HAL_SDRAM_SendCommand>
 8004fec:	6879      	ldr	r1, [r7, #4]
 8004fee:	4804      	ldr	r0, [pc, #16]	; (8005000 <BSP_SDRAM_Initialization_sequence+0xbc>)
 8004ff0:	f005 fd33 	bl	800aa5a <HAL_SDRAM_ProgramRefreshRate>
 8004ff4:	bf00      	nop
 8004ff6:	3710      	adds	r7, #16
 8004ff8:	46bd      	mov	sp, r7
 8004ffa:	bd80      	pop	{r7, pc}
 8004ffc:	20001870 	.word	0x20001870
 8005000:	2000a0d8 	.word	0x2000a0d8

08005004 <BSP_SDRAM_MspInit>:
 8005004:	b580      	push	{r7, lr}
 8005006:	b090      	sub	sp, #64	; 0x40
 8005008:	af00      	add	r7, sp, #0
 800500a:	6078      	str	r0, [r7, #4]
 800500c:	6039      	str	r1, [r7, #0]
 800500e:	4b70      	ldr	r3, [pc, #448]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005010:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005012:	4a6f      	ldr	r2, [pc, #444]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005014:	f043 0301 	orr.w	r3, r3, #1
 8005018:	6393      	str	r3, [r2, #56]	; 0x38
 800501a:	4b6d      	ldr	r3, [pc, #436]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 800501c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800501e:	f003 0301 	and.w	r3, r3, #1
 8005022:	62bb      	str	r3, [r7, #40]	; 0x28
 8005024:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005026:	4b6a      	ldr	r3, [pc, #424]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005028:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800502a:	4a69      	ldr	r2, [pc, #420]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 800502c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8005030:	6313      	str	r3, [r2, #48]	; 0x30
 8005032:	4b67      	ldr	r3, [pc, #412]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005034:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005036:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800503a:	627b      	str	r3, [r7, #36]	; 0x24
 800503c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800503e:	4b64      	ldr	r3, [pc, #400]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005040:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005042:	4a63      	ldr	r2, [pc, #396]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005044:	f043 0304 	orr.w	r3, r3, #4
 8005048:	6313      	str	r3, [r2, #48]	; 0x30
 800504a:	4b61      	ldr	r3, [pc, #388]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 800504c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800504e:	f003 0304 	and.w	r3, r3, #4
 8005052:	623b      	str	r3, [r7, #32]
 8005054:	6a3b      	ldr	r3, [r7, #32]
 8005056:	4b5e      	ldr	r3, [pc, #376]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005058:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800505a:	4a5d      	ldr	r2, [pc, #372]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 800505c:	f043 0308 	orr.w	r3, r3, #8
 8005060:	6313      	str	r3, [r2, #48]	; 0x30
 8005062:	4b5b      	ldr	r3, [pc, #364]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005064:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005066:	f003 0308 	and.w	r3, r3, #8
 800506a:	61fb      	str	r3, [r7, #28]
 800506c:	69fb      	ldr	r3, [r7, #28]
 800506e:	4b58      	ldr	r3, [pc, #352]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005070:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005072:	4a57      	ldr	r2, [pc, #348]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005074:	f043 0310 	orr.w	r3, r3, #16
 8005078:	6313      	str	r3, [r2, #48]	; 0x30
 800507a:	4b55      	ldr	r3, [pc, #340]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 800507c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800507e:	f003 0310 	and.w	r3, r3, #16
 8005082:	61bb      	str	r3, [r7, #24]
 8005084:	69bb      	ldr	r3, [r7, #24]
 8005086:	4b52      	ldr	r3, [pc, #328]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005088:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800508a:	4a51      	ldr	r2, [pc, #324]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 800508c:	f043 0320 	orr.w	r3, r3, #32
 8005090:	6313      	str	r3, [r2, #48]	; 0x30
 8005092:	4b4f      	ldr	r3, [pc, #316]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 8005094:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005096:	f003 0320 	and.w	r3, r3, #32
 800509a:	617b      	str	r3, [r7, #20]
 800509c:	697b      	ldr	r3, [r7, #20]
 800509e:	4b4c      	ldr	r3, [pc, #304]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 80050a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050a2:	4a4b      	ldr	r2, [pc, #300]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 80050a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80050a8:	6313      	str	r3, [r2, #48]	; 0x30
 80050aa:	4b49      	ldr	r3, [pc, #292]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 80050ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050ae:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80050b2:	613b      	str	r3, [r7, #16]
 80050b4:	693b      	ldr	r3, [r7, #16]
 80050b6:	4b46      	ldr	r3, [pc, #280]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 80050b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050ba:	4a45      	ldr	r2, [pc, #276]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 80050bc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80050c0:	6313      	str	r3, [r2, #48]	; 0x30
 80050c2:	4b43      	ldr	r3, [pc, #268]	; (80051d0 <BSP_SDRAM_MspInit+0x1cc>)
 80050c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050c6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80050ca:	60fb      	str	r3, [r7, #12]
 80050cc:	68fb      	ldr	r3, [r7, #12]
 80050ce:	2302      	movs	r3, #2
 80050d0:	633b      	str	r3, [r7, #48]	; 0x30
 80050d2:	2301      	movs	r3, #1
 80050d4:	637b      	str	r3, [r7, #52]	; 0x34
 80050d6:	2302      	movs	r3, #2
 80050d8:	63bb      	str	r3, [r7, #56]	; 0x38
 80050da:	230c      	movs	r3, #12
 80050dc:	63fb      	str	r3, [r7, #60]	; 0x3c
 80050de:	2308      	movs	r3, #8
 80050e0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80050e2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80050e6:	4619      	mov	r1, r3
 80050e8:	483a      	ldr	r0, [pc, #232]	; (80051d4 <BSP_SDRAM_MspInit+0x1d0>)
 80050ea:	f002 fb79 	bl	80077e0 <HAL_GPIO_Init>
 80050ee:	f24c 7303 	movw	r3, #50947	; 0xc703
 80050f2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80050f4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80050f8:	4619      	mov	r1, r3
 80050fa:	4837      	ldr	r0, [pc, #220]	; (80051d8 <BSP_SDRAM_MspInit+0x1d4>)
 80050fc:	f002 fb70 	bl	80077e0 <HAL_GPIO_Init>
 8005100:	f64f 7383 	movw	r3, #65411	; 0xff83
 8005104:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005106:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800510a:	4619      	mov	r1, r3
 800510c:	4833      	ldr	r0, [pc, #204]	; (80051dc <BSP_SDRAM_MspInit+0x1d8>)
 800510e:	f002 fb67 	bl	80077e0 <HAL_GPIO_Init>
 8005112:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8005116:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005118:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800511c:	4619      	mov	r1, r3
 800511e:	4830      	ldr	r0, [pc, #192]	; (80051e0 <BSP_SDRAM_MspInit+0x1dc>)
 8005120:	f002 fb5e 	bl	80077e0 <HAL_GPIO_Init>
 8005124:	f248 1333 	movw	r3, #33075	; 0x8133
 8005128:	62fb      	str	r3, [r7, #44]	; 0x2c
 800512a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800512e:	4619      	mov	r1, r3
 8005130:	482c      	ldr	r0, [pc, #176]	; (80051e4 <BSP_SDRAM_MspInit+0x1e0>)
 8005132:	f002 fb55 	bl	80077e0 <HAL_GPIO_Init>
 8005136:	2328      	movs	r3, #40	; 0x28
 8005138:	62fb      	str	r3, [r7, #44]	; 0x2c
 800513a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800513e:	4619      	mov	r1, r3
 8005140:	4829      	ldr	r0, [pc, #164]	; (80051e8 <BSP_SDRAM_MspInit+0x1e4>)
 8005142:	f002 fb4d 	bl	80077e0 <HAL_GPIO_Init>
 8005146:	4b29      	ldr	r3, [pc, #164]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 8005148:	2200      	movs	r2, #0
 800514a:	605a      	str	r2, [r3, #4]
 800514c:	4b27      	ldr	r3, [pc, #156]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 800514e:	2280      	movs	r2, #128	; 0x80
 8005150:	609a      	str	r2, [r3, #8]
 8005152:	4b26      	ldr	r3, [pc, #152]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 8005154:	f44f 7200 	mov.w	r2, #512	; 0x200
 8005158:	60da      	str	r2, [r3, #12]
 800515a:	4b24      	ldr	r3, [pc, #144]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 800515c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8005160:	611a      	str	r2, [r3, #16]
 8005162:	4b22      	ldr	r3, [pc, #136]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 8005164:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8005168:	615a      	str	r2, [r3, #20]
 800516a:	4b20      	ldr	r3, [pc, #128]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 800516c:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8005170:	619a      	str	r2, [r3, #24]
 8005172:	4b1e      	ldr	r3, [pc, #120]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 8005174:	2200      	movs	r2, #0
 8005176:	61da      	str	r2, [r3, #28]
 8005178:	4b1c      	ldr	r3, [pc, #112]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 800517a:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800517e:	621a      	str	r2, [r3, #32]
 8005180:	4b1a      	ldr	r3, [pc, #104]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 8005182:	2200      	movs	r2, #0
 8005184:	625a      	str	r2, [r3, #36]	; 0x24
 8005186:	4b19      	ldr	r3, [pc, #100]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 8005188:	2203      	movs	r2, #3
 800518a:	629a      	str	r2, [r3, #40]	; 0x28
 800518c:	4b17      	ldr	r3, [pc, #92]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 800518e:	2200      	movs	r2, #0
 8005190:	62da      	str	r2, [r3, #44]	; 0x2c
 8005192:	4b16      	ldr	r3, [pc, #88]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 8005194:	2200      	movs	r2, #0
 8005196:	631a      	str	r2, [r3, #48]	; 0x30
 8005198:	4b14      	ldr	r3, [pc, #80]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 800519a:	4a15      	ldr	r2, [pc, #84]	; (80051f0 <BSP_SDRAM_MspInit+0x1ec>)
 800519c:	601a      	str	r2, [r3, #0]
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	4a12      	ldr	r2, [pc, #72]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 80051a2:	631a      	str	r2, [r3, #48]	; 0x30
 80051a4:	4a11      	ldr	r2, [pc, #68]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	6393      	str	r3, [r2, #56]	; 0x38
 80051aa:	4810      	ldr	r0, [pc, #64]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 80051ac:	f001 ff5c 	bl	8007068 <HAL_DMA_DeInit>
 80051b0:	480e      	ldr	r0, [pc, #56]	; (80051ec <BSP_SDRAM_MspInit+0x1e8>)
 80051b2:	f001 feab 	bl	8006f0c <HAL_DMA_Init>
 80051b6:	2200      	movs	r2, #0
 80051b8:	210f      	movs	r1, #15
 80051ba:	2038      	movs	r0, #56	; 0x38
 80051bc:	f001 fdae 	bl	8006d1c <HAL_NVIC_SetPriority>
 80051c0:	2038      	movs	r0, #56	; 0x38
 80051c2:	f001 fdc7 	bl	8006d54 <HAL_NVIC_EnableIRQ>
 80051c6:	bf00      	nop
 80051c8:	3740      	adds	r7, #64	; 0x40
 80051ca:	46bd      	mov	sp, r7
 80051cc:	bd80      	pop	{r7, pc}
 80051ce:	bf00      	nop
 80051d0:	40023800 	.word	0x40023800
 80051d4:	40020800 	.word	0x40020800
 80051d8:	40020c00 	.word	0x40020c00
 80051dc:	40021000 	.word	0x40021000
 80051e0:	40021400 	.word	0x40021400
 80051e4:	40021800 	.word	0x40021800
 80051e8:	40021c00 	.word	0x40021c00
 80051ec:	20001880 	.word	0x20001880
 80051f0:	40026410 	.word	0x40026410

080051f4 <BSP_TS_Init>:
 80051f4:	b580      	push	{r7, lr}
 80051f6:	b084      	sub	sp, #16
 80051f8:	af00      	add	r7, sp, #0
 80051fa:	4603      	mov	r3, r0
 80051fc:	460a      	mov	r2, r1
 80051fe:	80fb      	strh	r3, [r7, #6]
 8005200:	4613      	mov	r3, r2
 8005202:	80bb      	strh	r3, [r7, #4]
 8005204:	2300      	movs	r3, #0
 8005206:	73fb      	strb	r3, [r7, #15]
 8005208:	4a14      	ldr	r2, [pc, #80]	; (800525c <BSP_TS_Init+0x68>)
 800520a:	88fb      	ldrh	r3, [r7, #6]
 800520c:	8013      	strh	r3, [r2, #0]
 800520e:	4a14      	ldr	r2, [pc, #80]	; (8005260 <BSP_TS_Init+0x6c>)
 8005210:	88bb      	ldrh	r3, [r7, #4]
 8005212:	8013      	strh	r3, [r2, #0]
 8005214:	4b13      	ldr	r3, [pc, #76]	; (8005264 <BSP_TS_Init+0x70>)
 8005216:	681b      	ldr	r3, [r3, #0]
 8005218:	2070      	movs	r0, #112	; 0x70
 800521a:	4798      	blx	r3
 800521c:	4b11      	ldr	r3, [pc, #68]	; (8005264 <BSP_TS_Init+0x70>)
 800521e:	685b      	ldr	r3, [r3, #4]
 8005220:	2070      	movs	r0, #112	; 0x70
 8005222:	4798      	blx	r3
 8005224:	4603      	mov	r3, r0
 8005226:	2b51      	cmp	r3, #81	; 0x51
 8005228:	d111      	bne.n	800524e <BSP_TS_Init+0x5a>
 800522a:	4b0f      	ldr	r3, [pc, #60]	; (8005268 <BSP_TS_Init+0x74>)
 800522c:	4a0d      	ldr	r2, [pc, #52]	; (8005264 <BSP_TS_Init+0x70>)
 800522e:	601a      	str	r2, [r3, #0]
 8005230:	4b0e      	ldr	r3, [pc, #56]	; (800526c <BSP_TS_Init+0x78>)
 8005232:	2270      	movs	r2, #112	; 0x70
 8005234:	701a      	strb	r2, [r3, #0]
 8005236:	4b0e      	ldr	r3, [pc, #56]	; (8005270 <BSP_TS_Init+0x7c>)
 8005238:	2208      	movs	r2, #8
 800523a:	701a      	strb	r2, [r3, #0]
 800523c:	4b0a      	ldr	r3, [pc, #40]	; (8005268 <BSP_TS_Init+0x74>)
 800523e:	681b      	ldr	r3, [r3, #0]
 8005240:	68db      	ldr	r3, [r3, #12]
 8005242:	4a0a      	ldr	r2, [pc, #40]	; (800526c <BSP_TS_Init+0x78>)
 8005244:	7812      	ldrb	r2, [r2, #0]
 8005246:	b292      	uxth	r2, r2
 8005248:	4610      	mov	r0, r2
 800524a:	4798      	blx	r3
 800524c:	e001      	b.n	8005252 <BSP_TS_Init+0x5e>
 800524e:	2303      	movs	r3, #3
 8005250:	73fb      	strb	r3, [r7, #15]
 8005252:	7bfb      	ldrb	r3, [r7, #15]
 8005254:	4618      	mov	r0, r3
 8005256:	3710      	adds	r7, #16
 8005258:	46bd      	mov	sp, r7
 800525a:	bd80      	pop	{r7, pc}
 800525c:	200018e4 	.word	0x200018e4
 8005260:	200018e6 	.word	0x200018e6
 8005264:	20000000 	.word	0x20000000
 8005268:	200018e0 	.word	0x200018e0
 800526c:	200018e9 	.word	0x200018e9
 8005270:	200018e8 	.word	0x200018e8

08005274 <BSP_TS_GetState>:
 8005274:	b590      	push	{r4, r7, lr}
 8005276:	b097      	sub	sp, #92	; 0x5c
 8005278:	af02      	add	r7, sp, #8
 800527a:	6078      	str	r0, [r7, #4]
 800527c:	2300      	movs	r3, #0
 800527e:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8005282:	2300      	movs	r3, #0
 8005284:	613b      	str	r3, [r7, #16]
 8005286:	2300      	movs	r3, #0
 8005288:	60fb      	str	r3, [r7, #12]
 800528a:	2300      	movs	r3, #0
 800528c:	60bb      	str	r3, [r7, #8]
 800528e:	4b97      	ldr	r3, [pc, #604]	; (80054ec <BSP_TS_GetState+0x278>)
 8005290:	681b      	ldr	r3, [r3, #0]
 8005292:	691b      	ldr	r3, [r3, #16]
 8005294:	4a96      	ldr	r2, [pc, #600]	; (80054f0 <BSP_TS_GetState+0x27c>)
 8005296:	7812      	ldrb	r2, [r2, #0]
 8005298:	b292      	uxth	r2, r2
 800529a:	4610      	mov	r0, r2
 800529c:	4798      	blx	r3
 800529e:	4603      	mov	r3, r0
 80052a0:	461a      	mov	r2, r3
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	701a      	strb	r2, [r3, #0]
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	781b      	ldrb	r3, [r3, #0]
 80052aa:	2b00      	cmp	r3, #0
 80052ac:	f000 81a8 	beq.w	8005600 <BSP_TS_GetState+0x38c>
 80052b0:	2300      	movs	r3, #0
 80052b2:	64bb      	str	r3, [r7, #72]	; 0x48
 80052b4:	e197      	b.n	80055e6 <BSP_TS_GetState+0x372>
 80052b6:	4b8d      	ldr	r3, [pc, #564]	; (80054ec <BSP_TS_GetState+0x278>)
 80052b8:	681b      	ldr	r3, [r3, #0]
 80052ba:	695b      	ldr	r3, [r3, #20]
 80052bc:	4a8c      	ldr	r2, [pc, #560]	; (80054f0 <BSP_TS_GetState+0x27c>)
 80052be:	7812      	ldrb	r2, [r2, #0]
 80052c0:	b290      	uxth	r0, r2
 80052c2:	f107 0120 	add.w	r1, r7, #32
 80052c6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80052c8:	0052      	lsls	r2, r2, #1
 80052ca:	188c      	adds	r4, r1, r2
 80052cc:	f107 0114 	add.w	r1, r7, #20
 80052d0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80052d2:	0052      	lsls	r2, r2, #1
 80052d4:	440a      	add	r2, r1
 80052d6:	4621      	mov	r1, r4
 80052d8:	4798      	blx	r3
 80052da:	4b86      	ldr	r3, [pc, #536]	; (80054f4 <BSP_TS_GetState+0x280>)
 80052dc:	781b      	ldrb	r3, [r3, #0]
 80052de:	2b01      	cmp	r3, #1
 80052e0:	d11b      	bne.n	800531a <BSP_TS_GetState+0xa6>
 80052e2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80052e4:	005b      	lsls	r3, r3, #1
 80052e6:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80052ea:	4413      	add	r3, r2
 80052ec:	f833 2c30 	ldrh.w	r2, [r3, #-48]
 80052f0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80052f2:	005b      	lsls	r3, r3, #1
 80052f4:	f107 0150 	add.w	r1, r7, #80	; 0x50
 80052f8:	440b      	add	r3, r1
 80052fa:	f823 2c18 	strh.w	r2, [r3, #-24]
 80052fe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005300:	005b      	lsls	r3, r3, #1
 8005302:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8005306:	4413      	add	r3, r2
 8005308:	f833 2c3c 	ldrh.w	r2, [r3, #-60]
 800530c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800530e:	005b      	lsls	r3, r3, #1
 8005310:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005314:	440b      	add	r3, r1
 8005316:	f823 2c24 	strh.w	r2, [r3, #-36]
 800531a:	4b76      	ldr	r3, [pc, #472]	; (80054f4 <BSP_TS_GetState+0x280>)
 800531c:	781b      	ldrb	r3, [r3, #0]
 800531e:	f003 0302 	and.w	r3, r3, #2
 8005322:	2b00      	cmp	r3, #0
 8005324:	d010      	beq.n	8005348 <BSP_TS_GetState+0xd4>
 8005326:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005328:	005b      	lsls	r3, r3, #1
 800532a:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800532e:	4413      	add	r3, r2
 8005330:	f833 3c30 	ldrh.w	r3, [r3, #-48]
 8005334:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
 8005338:	b29a      	uxth	r2, r3
 800533a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800533c:	005b      	lsls	r3, r3, #1
 800533e:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005342:	440b      	add	r3, r1
 8005344:	f823 2c18 	strh.w	r2, [r3, #-24]
 8005348:	4b6a      	ldr	r3, [pc, #424]	; (80054f4 <BSP_TS_GetState+0x280>)
 800534a:	781b      	ldrb	r3, [r3, #0]
 800534c:	f003 0304 	and.w	r3, r3, #4
 8005350:	2b00      	cmp	r3, #0
 8005352:	d010      	beq.n	8005376 <BSP_TS_GetState+0x102>
 8005354:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005356:	005b      	lsls	r3, r3, #1
 8005358:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800535c:	4413      	add	r3, r2
 800535e:	f833 3c3c 	ldrh.w	r3, [r3, #-60]
 8005362:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
 8005366:	b29a      	uxth	r2, r3
 8005368:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800536a:	005b      	lsls	r3, r3, #1
 800536c:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005370:	440b      	add	r3, r1
 8005372:	f823 2c24 	strh.w	r2, [r3, #-36]
 8005376:	4b5f      	ldr	r3, [pc, #380]	; (80054f4 <BSP_TS_GetState+0x280>)
 8005378:	781b      	ldrb	r3, [r3, #0]
 800537a:	f003 0308 	and.w	r3, r3, #8
 800537e:	2b00      	cmp	r3, #0
 8005380:	d01b      	beq.n	80053ba <BSP_TS_GetState+0x146>
 8005382:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005384:	005b      	lsls	r3, r3, #1
 8005386:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800538a:	4413      	add	r3, r2
 800538c:	f833 2c30 	ldrh.w	r2, [r3, #-48]
 8005390:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005392:	005b      	lsls	r3, r3, #1
 8005394:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005398:	440b      	add	r3, r1
 800539a:	f823 2c24 	strh.w	r2, [r3, #-36]
 800539e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053a0:	005b      	lsls	r3, r3, #1
 80053a2:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80053a6:	4413      	add	r3, r2
 80053a8:	f833 2c3c 	ldrh.w	r2, [r3, #-60]
 80053ac:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053ae:	005b      	lsls	r3, r3, #1
 80053b0:	f107 0150 	add.w	r1, r7, #80	; 0x50
 80053b4:	440b      	add	r3, r1
 80053b6:	f823 2c18 	strh.w	r2, [r3, #-24]
 80053ba:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053bc:	005b      	lsls	r3, r3, #1
 80053be:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80053c2:	4413      	add	r3, r2
 80053c4:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 80053c8:	4619      	mov	r1, r3
 80053ca:	4a4b      	ldr	r2, [pc, #300]	; (80054f8 <BSP_TS_GetState+0x284>)
 80053cc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053ce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80053d2:	4299      	cmp	r1, r3
 80053d4:	d90e      	bls.n	80053f4 <BSP_TS_GetState+0x180>
 80053d6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053d8:	005b      	lsls	r3, r3, #1
 80053da:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80053de:	4413      	add	r3, r2
 80053e0:	f833 2c18 	ldrh.w	r2, [r3, #-24]
 80053e4:	4944      	ldr	r1, [pc, #272]	; (80054f8 <BSP_TS_GetState+0x284>)
 80053e6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053e8:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80053ec:	b29b      	uxth	r3, r3
 80053ee:	1ad3      	subs	r3, r2, r3
 80053f0:	b29b      	uxth	r3, r3
 80053f2:	e00d      	b.n	8005410 <BSP_TS_GetState+0x19c>
 80053f4:	4a40      	ldr	r2, [pc, #256]	; (80054f8 <BSP_TS_GetState+0x284>)
 80053f6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80053f8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80053fc:	b29a      	uxth	r2, r3
 80053fe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005400:	005b      	lsls	r3, r3, #1
 8005402:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005406:	440b      	add	r3, r1
 8005408:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 800540c:	1ad3      	subs	r3, r2, r3
 800540e:	b29b      	uxth	r3, r3
 8005410:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8005414:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005416:	005b      	lsls	r3, r3, #1
 8005418:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800541c:	4413      	add	r3, r2
 800541e:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 8005422:	4619      	mov	r1, r3
 8005424:	4a35      	ldr	r2, [pc, #212]	; (80054fc <BSP_TS_GetState+0x288>)
 8005426:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005428:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800542c:	4299      	cmp	r1, r3
 800542e:	d90e      	bls.n	800544e <BSP_TS_GetState+0x1da>
 8005430:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005432:	005b      	lsls	r3, r3, #1
 8005434:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8005438:	4413      	add	r3, r2
 800543a:	f833 2c24 	ldrh.w	r2, [r3, #-36]
 800543e:	492f      	ldr	r1, [pc, #188]	; (80054fc <BSP_TS_GetState+0x288>)
 8005440:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005442:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8005446:	b29b      	uxth	r3, r3
 8005448:	1ad3      	subs	r3, r2, r3
 800544a:	b29b      	uxth	r3, r3
 800544c:	e00d      	b.n	800546a <BSP_TS_GetState+0x1f6>
 800544e:	4a2b      	ldr	r2, [pc, #172]	; (80054fc <BSP_TS_GetState+0x288>)
 8005450:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005452:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005456:	b29a      	uxth	r2, r3
 8005458:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800545a:	005b      	lsls	r3, r3, #1
 800545c:	f107 0150 	add.w	r1, r7, #80	; 0x50
 8005460:	440b      	add	r3, r1
 8005462:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 8005466:	1ad3      	subs	r3, r2, r3
 8005468:	b29b      	uxth	r3, r3
 800546a:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
 800546e:	f8b7 2046 	ldrh.w	r2, [r7, #70]	; 0x46
 8005472:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 8005476:	4413      	add	r3, r2
 8005478:	2b05      	cmp	r3, #5
 800547a:	dd17      	ble.n	80054ac <BSP_TS_GetState+0x238>
 800547c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800547e:	005b      	lsls	r3, r3, #1
 8005480:	f107 0250 	add.w	r2, r7, #80	; 0x50
 8005484:	4413      	add	r3, r2
 8005486:	f833 3c18 	ldrh.w	r3, [r3, #-24]
 800548a:	4619      	mov	r1, r3
 800548c:	4a1a      	ldr	r2, [pc, #104]	; (80054f8 <BSP_TS_GetState+0x284>)
 800548e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005490:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8005494:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005496:	005b      	lsls	r3, r3, #1
 8005498:	f107 0250 	add.w	r2, r7, #80	; 0x50
 800549c:	4413      	add	r3, r2
 800549e:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 80054a2:	4619      	mov	r1, r3
 80054a4:	4a15      	ldr	r2, [pc, #84]	; (80054fc <BSP_TS_GetState+0x288>)
 80054a6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054a8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 80054ac:	4b10      	ldr	r3, [pc, #64]	; (80054f0 <BSP_TS_GetState+0x27c>)
 80054ae:	781b      	ldrb	r3, [r3, #0]
 80054b0:	2b70      	cmp	r3, #112	; 0x70
 80054b2:	d125      	bne.n	8005500 <BSP_TS_GetState+0x28c>
 80054b4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054b6:	005b      	lsls	r3, r3, #1
 80054b8:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80054bc:	4413      	add	r3, r2
 80054be:	f833 1c18 	ldrh.w	r1, [r3, #-24]
 80054c2:	687a      	ldr	r2, [r7, #4]
 80054c4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054c6:	005b      	lsls	r3, r3, #1
 80054c8:	4413      	add	r3, r2
 80054ca:	460a      	mov	r2, r1
 80054cc:	805a      	strh	r2, [r3, #2]
 80054ce:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054d0:	005b      	lsls	r3, r3, #1
 80054d2:	f107 0250 	add.w	r2, r7, #80	; 0x50
 80054d6:	4413      	add	r3, r2
 80054d8:	f833 1c24 	ldrh.w	r1, [r3, #-36]
 80054dc:	687a      	ldr	r2, [r7, #4]
 80054de:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80054e0:	3304      	adds	r3, #4
 80054e2:	005b      	lsls	r3, r3, #1
 80054e4:	4413      	add	r3, r2
 80054e6:	460a      	mov	r2, r1
 80054e8:	809a      	strh	r2, [r3, #4]
 80054ea:	e02c      	b.n	8005546 <BSP_TS_GetState+0x2d2>
 80054ec:	200018e0 	.word	0x200018e0
 80054f0:	200018e9 	.word	0x200018e9
 80054f4:	200018e8 	.word	0x200018e8
 80054f8:	200018ec 	.word	0x200018ec
 80054fc:	20001900 	.word	0x20001900
 8005500:	4b42      	ldr	r3, [pc, #264]	; (800560c <BSP_TS_GetState+0x398>)
 8005502:	881b      	ldrh	r3, [r3, #0]
 8005504:	4619      	mov	r1, r3
 8005506:	4a42      	ldr	r2, [pc, #264]	; (8005610 <BSP_TS_GetState+0x39c>)
 8005508:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800550a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800550e:	fb03 f301 	mul.w	r3, r3, r1
 8005512:	0b1b      	lsrs	r3, r3, #12
 8005514:	b299      	uxth	r1, r3
 8005516:	687a      	ldr	r2, [r7, #4]
 8005518:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800551a:	005b      	lsls	r3, r3, #1
 800551c:	4413      	add	r3, r2
 800551e:	460a      	mov	r2, r1
 8005520:	805a      	strh	r2, [r3, #2]
 8005522:	4b3c      	ldr	r3, [pc, #240]	; (8005614 <BSP_TS_GetState+0x3a0>)
 8005524:	881b      	ldrh	r3, [r3, #0]
 8005526:	4619      	mov	r1, r3
 8005528:	4a3b      	ldr	r2, [pc, #236]	; (8005618 <BSP_TS_GetState+0x3a4>)
 800552a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800552c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005530:	fb03 f301 	mul.w	r3, r3, r1
 8005534:	0b1b      	lsrs	r3, r3, #12
 8005536:	b299      	uxth	r1, r3
 8005538:	687a      	ldr	r2, [r7, #4]
 800553a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800553c:	3304      	adds	r3, #4
 800553e:	005b      	lsls	r3, r3, #1
 8005540:	4413      	add	r3, r2
 8005542:	460a      	mov	r2, r1
 8005544:	809a      	strh	r2, [r3, #4]
 8005546:	4b35      	ldr	r3, [pc, #212]	; (800561c <BSP_TS_GetState+0x3a8>)
 8005548:	781b      	ldrb	r3, [r3, #0]
 800554a:	b298      	uxth	r0, r3
 800554c:	f107 010c 	add.w	r1, r7, #12
 8005550:	f107 0210 	add.w	r2, r7, #16
 8005554:	f107 0308 	add.w	r3, r7, #8
 8005558:	9300      	str	r3, [sp, #0]
 800555a:	460b      	mov	r3, r1
 800555c:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800555e:	f7fb fa25 	bl	80009ac <ft5336_TS_GetTouchInfo>
 8005562:	693b      	ldr	r3, [r7, #16]
 8005564:	b2d9      	uxtb	r1, r3
 8005566:	687a      	ldr	r2, [r7, #4]
 8005568:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800556a:	4413      	add	r3, r2
 800556c:	3316      	adds	r3, #22
 800556e:	460a      	mov	r2, r1
 8005570:	701a      	strb	r2, [r3, #0]
 8005572:	68fb      	ldr	r3, [r7, #12]
 8005574:	b2d9      	uxtb	r1, r3
 8005576:	687a      	ldr	r2, [r7, #4]
 8005578:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800557a:	4413      	add	r3, r2
 800557c:	3320      	adds	r3, #32
 800557e:	460a      	mov	r2, r1
 8005580:	701a      	strb	r2, [r3, #0]
 8005582:	68bb      	ldr	r3, [r7, #8]
 8005584:	2b03      	cmp	r3, #3
 8005586:	d827      	bhi.n	80055d8 <BSP_TS_GetState+0x364>
 8005588:	a201      	add	r2, pc, #4	; (adr r2, 8005590 <BSP_TS_GetState+0x31c>)
 800558a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800558e:	bf00      	nop
 8005590:	080055a1 	.word	0x080055a1
 8005594:	080055af 	.word	0x080055af
 8005598:	080055bd 	.word	0x080055bd
 800559c:	080055cb 	.word	0x080055cb
 80055a0:	687a      	ldr	r2, [r7, #4]
 80055a2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055a4:	4413      	add	r3, r2
 80055a6:	331b      	adds	r3, #27
 80055a8:	2201      	movs	r2, #1
 80055aa:	701a      	strb	r2, [r3, #0]
 80055ac:	e018      	b.n	80055e0 <BSP_TS_GetState+0x36c>
 80055ae:	687a      	ldr	r2, [r7, #4]
 80055b0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055b2:	4413      	add	r3, r2
 80055b4:	331b      	adds	r3, #27
 80055b6:	2202      	movs	r2, #2
 80055b8:	701a      	strb	r2, [r3, #0]
 80055ba:	e011      	b.n	80055e0 <BSP_TS_GetState+0x36c>
 80055bc:	687a      	ldr	r2, [r7, #4]
 80055be:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055c0:	4413      	add	r3, r2
 80055c2:	331b      	adds	r3, #27
 80055c4:	2203      	movs	r2, #3
 80055c6:	701a      	strb	r2, [r3, #0]
 80055c8:	e00a      	b.n	80055e0 <BSP_TS_GetState+0x36c>
 80055ca:	687a      	ldr	r2, [r7, #4]
 80055cc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055ce:	4413      	add	r3, r2
 80055d0:	331b      	adds	r3, #27
 80055d2:	2200      	movs	r2, #0
 80055d4:	701a      	strb	r2, [r3, #0]
 80055d6:	e003      	b.n	80055e0 <BSP_TS_GetState+0x36c>
 80055d8:	2301      	movs	r3, #1
 80055da:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 80055de:	bf00      	nop
 80055e0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055e2:	3301      	adds	r3, #1
 80055e4:	64bb      	str	r3, [r7, #72]	; 0x48
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	781b      	ldrb	r3, [r3, #0]
 80055ea:	461a      	mov	r2, r3
 80055ec:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80055ee:	4293      	cmp	r3, r2
 80055f0:	f4ff ae61 	bcc.w	80052b6 <BSP_TS_GetState+0x42>
 80055f4:	6878      	ldr	r0, [r7, #4]
 80055f6:	f000 f813 	bl	8005620 <BSP_TS_Get_GestureId>
 80055fa:	4603      	mov	r3, r0
 80055fc:	f887 304f 	strb.w	r3, [r7, #79]	; 0x4f
 8005600:	f897 304f 	ldrb.w	r3, [r7, #79]	; 0x4f
 8005604:	4618      	mov	r0, r3
 8005606:	3754      	adds	r7, #84	; 0x54
 8005608:	46bd      	mov	sp, r7
 800560a:	bd90      	pop	{r4, r7, pc}
 800560c:	200018e4 	.word	0x200018e4
 8005610:	200018ec 	.word	0x200018ec
 8005614:	200018e6 	.word	0x200018e6
 8005618:	20001900 	.word	0x20001900
 800561c:	200018e9 	.word	0x200018e9

08005620 <BSP_TS_Get_GestureId>:
 8005620:	b580      	push	{r7, lr}
 8005622:	b084      	sub	sp, #16
 8005624:	af00      	add	r7, sp, #0
 8005626:	6078      	str	r0, [r7, #4]
 8005628:	2300      	movs	r3, #0
 800562a:	60bb      	str	r3, [r7, #8]
 800562c:	2300      	movs	r3, #0
 800562e:	73fb      	strb	r3, [r7, #15]
 8005630:	4b1f      	ldr	r3, [pc, #124]	; (80056b0 <BSP_TS_Get_GestureId+0x90>)
 8005632:	781b      	ldrb	r3, [r3, #0]
 8005634:	b29b      	uxth	r3, r3
 8005636:	f107 0208 	add.w	r2, r7, #8
 800563a:	4611      	mov	r1, r2
 800563c:	4618      	mov	r0, r3
 800563e:	f7fb f99c 	bl	800097a <ft5336_TS_GetGestureID>
 8005642:	68bb      	ldr	r3, [r7, #8]
 8005644:	2b18      	cmp	r3, #24
 8005646:	d01b      	beq.n	8005680 <BSP_TS_Get_GestureId+0x60>
 8005648:	2b18      	cmp	r3, #24
 800564a:	d806      	bhi.n	800565a <BSP_TS_Get_GestureId+0x3a>
 800564c:	2b10      	cmp	r3, #16
 800564e:	d00f      	beq.n	8005670 <BSP_TS_Get_GestureId+0x50>
 8005650:	2b14      	cmp	r3, #20
 8005652:	d011      	beq.n	8005678 <BSP_TS_Get_GestureId+0x58>
 8005654:	2b00      	cmp	r3, #0
 8005656:	d007      	beq.n	8005668 <BSP_TS_Get_GestureId+0x48>
 8005658:	e022      	b.n	80056a0 <BSP_TS_Get_GestureId+0x80>
 800565a:	2b40      	cmp	r3, #64	; 0x40
 800565c:	d018      	beq.n	8005690 <BSP_TS_Get_GestureId+0x70>
 800565e:	2b49      	cmp	r3, #73	; 0x49
 8005660:	d01a      	beq.n	8005698 <BSP_TS_Get_GestureId+0x78>
 8005662:	2b1c      	cmp	r3, #28
 8005664:	d010      	beq.n	8005688 <BSP_TS_Get_GestureId+0x68>
 8005666:	e01b      	b.n	80056a0 <BSP_TS_Get_GestureId+0x80>
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	2200      	movs	r2, #0
 800566c:	629a      	str	r2, [r3, #40]	; 0x28
 800566e:	e01a      	b.n	80056a6 <BSP_TS_Get_GestureId+0x86>
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	2201      	movs	r2, #1
 8005674:	629a      	str	r2, [r3, #40]	; 0x28
 8005676:	e016      	b.n	80056a6 <BSP_TS_Get_GestureId+0x86>
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	2202      	movs	r2, #2
 800567c:	629a      	str	r2, [r3, #40]	; 0x28
 800567e:	e012      	b.n	80056a6 <BSP_TS_Get_GestureId+0x86>
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	2203      	movs	r2, #3
 8005684:	629a      	str	r2, [r3, #40]	; 0x28
 8005686:	e00e      	b.n	80056a6 <BSP_TS_Get_GestureId+0x86>
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	2204      	movs	r2, #4
 800568c:	629a      	str	r2, [r3, #40]	; 0x28
 800568e:	e00a      	b.n	80056a6 <BSP_TS_Get_GestureId+0x86>
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	2205      	movs	r2, #5
 8005694:	629a      	str	r2, [r3, #40]	; 0x28
 8005696:	e006      	b.n	80056a6 <BSP_TS_Get_GestureId+0x86>
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	2206      	movs	r2, #6
 800569c:	629a      	str	r2, [r3, #40]	; 0x28
 800569e:	e002      	b.n	80056a6 <BSP_TS_Get_GestureId+0x86>
 80056a0:	2301      	movs	r3, #1
 80056a2:	73fb      	strb	r3, [r7, #15]
 80056a4:	bf00      	nop
 80056a6:	7bfb      	ldrb	r3, [r7, #15]
 80056a8:	4618      	mov	r0, r3
 80056aa:	3710      	adds	r7, #16
 80056ac:	46bd      	mov	sp, r7
 80056ae:	bd80      	pop	{r7, pc}
 80056b0:	200018e9 	.word	0x200018e9

080056b4 <HAL_MspInit>:
 80056b4:	b580      	push	{r7, lr}
 80056b6:	b082      	sub	sp, #8
 80056b8:	af00      	add	r7, sp, #0
 80056ba:	4b11      	ldr	r3, [pc, #68]	; (8005700 <HAL_MspInit+0x4c>)
 80056bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80056be:	4a10      	ldr	r2, [pc, #64]	; (8005700 <HAL_MspInit+0x4c>)
 80056c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80056c4:	6413      	str	r3, [r2, #64]	; 0x40
 80056c6:	4b0e      	ldr	r3, [pc, #56]	; (8005700 <HAL_MspInit+0x4c>)
 80056c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80056ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80056ce:	607b      	str	r3, [r7, #4]
 80056d0:	687b      	ldr	r3, [r7, #4]
 80056d2:	4b0b      	ldr	r3, [pc, #44]	; (8005700 <HAL_MspInit+0x4c>)
 80056d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80056d6:	4a0a      	ldr	r2, [pc, #40]	; (8005700 <HAL_MspInit+0x4c>)
 80056d8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80056dc:	6453      	str	r3, [r2, #68]	; 0x44
 80056de:	4b08      	ldr	r3, [pc, #32]	; (8005700 <HAL_MspInit+0x4c>)
 80056e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80056e2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80056e6:	603b      	str	r3, [r7, #0]
 80056e8:	683b      	ldr	r3, [r7, #0]
 80056ea:	2200      	movs	r2, #0
 80056ec:	210f      	movs	r1, #15
 80056ee:	f06f 0001 	mvn.w	r0, #1
 80056f2:	f001 fb13 	bl	8006d1c <HAL_NVIC_SetPriority>
 80056f6:	bf00      	nop
 80056f8:	3708      	adds	r7, #8
 80056fa:	46bd      	mov	sp, r7
 80056fc:	bd80      	pop	{r7, pc}
 80056fe:	bf00      	nop
 8005700:	40023800 	.word	0x40023800

08005704 <HAL_ADC_MspInit>:
 8005704:	b580      	push	{r7, lr}
 8005706:	b08c      	sub	sp, #48	; 0x30
 8005708:	af00      	add	r7, sp, #0
 800570a:	6078      	str	r0, [r7, #4]
 800570c:	f107 031c 	add.w	r3, r7, #28
 8005710:	2200      	movs	r2, #0
 8005712:	601a      	str	r2, [r3, #0]
 8005714:	605a      	str	r2, [r3, #4]
 8005716:	609a      	str	r2, [r3, #8]
 8005718:	60da      	str	r2, [r3, #12]
 800571a:	611a      	str	r2, [r3, #16]
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	4a2a      	ldr	r2, [pc, #168]	; (80057cc <HAL_ADC_MspInit+0xc8>)
 8005722:	4293      	cmp	r3, r2
 8005724:	d124      	bne.n	8005770 <HAL_ADC_MspInit+0x6c>
 8005726:	4b2a      	ldr	r3, [pc, #168]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 8005728:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800572a:	4a29      	ldr	r2, [pc, #164]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 800572c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005730:	6453      	str	r3, [r2, #68]	; 0x44
 8005732:	4b27      	ldr	r3, [pc, #156]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 8005734:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005736:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800573a:	61bb      	str	r3, [r7, #24]
 800573c:	69bb      	ldr	r3, [r7, #24]
 800573e:	4b24      	ldr	r3, [pc, #144]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 8005740:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005742:	4a23      	ldr	r2, [pc, #140]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 8005744:	f043 0301 	orr.w	r3, r3, #1
 8005748:	6313      	str	r3, [r2, #48]	; 0x30
 800574a:	4b21      	ldr	r3, [pc, #132]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 800574c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800574e:	f003 0301 	and.w	r3, r3, #1
 8005752:	617b      	str	r3, [r7, #20]
 8005754:	697b      	ldr	r3, [r7, #20]
 8005756:	2301      	movs	r3, #1
 8005758:	61fb      	str	r3, [r7, #28]
 800575a:	2303      	movs	r3, #3
 800575c:	623b      	str	r3, [r7, #32]
 800575e:	2300      	movs	r3, #0
 8005760:	627b      	str	r3, [r7, #36]	; 0x24
 8005762:	f107 031c 	add.w	r3, r7, #28
 8005766:	4619      	mov	r1, r3
 8005768:	481a      	ldr	r0, [pc, #104]	; (80057d4 <HAL_ADC_MspInit+0xd0>)
 800576a:	f002 f839 	bl	80077e0 <HAL_GPIO_Init>
 800576e:	e029      	b.n	80057c4 <HAL_ADC_MspInit+0xc0>
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	681b      	ldr	r3, [r3, #0]
 8005774:	4a18      	ldr	r2, [pc, #96]	; (80057d8 <HAL_ADC_MspInit+0xd4>)
 8005776:	4293      	cmp	r3, r2
 8005778:	d124      	bne.n	80057c4 <HAL_ADC_MspInit+0xc0>
 800577a:	4b15      	ldr	r3, [pc, #84]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 800577c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800577e:	4a14      	ldr	r2, [pc, #80]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 8005780:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005784:	6453      	str	r3, [r2, #68]	; 0x44
 8005786:	4b12      	ldr	r3, [pc, #72]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 8005788:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800578a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800578e:	613b      	str	r3, [r7, #16]
 8005790:	693b      	ldr	r3, [r7, #16]
 8005792:	4b0f      	ldr	r3, [pc, #60]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 8005794:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005796:	4a0e      	ldr	r2, [pc, #56]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 8005798:	f043 0320 	orr.w	r3, r3, #32
 800579c:	6313      	str	r3, [r2, #48]	; 0x30
 800579e:	4b0c      	ldr	r3, [pc, #48]	; (80057d0 <HAL_ADC_MspInit+0xcc>)
 80057a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80057a2:	f003 0320 	and.w	r3, r3, #32
 80057a6:	60fb      	str	r3, [r7, #12]
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	f44f 63e0 	mov.w	r3, #1792	; 0x700
 80057ae:	61fb      	str	r3, [r7, #28]
 80057b0:	2303      	movs	r3, #3
 80057b2:	623b      	str	r3, [r7, #32]
 80057b4:	2300      	movs	r3, #0
 80057b6:	627b      	str	r3, [r7, #36]	; 0x24
 80057b8:	f107 031c 	add.w	r3, r7, #28
 80057bc:	4619      	mov	r1, r3
 80057be:	4807      	ldr	r0, [pc, #28]	; (80057dc <HAL_ADC_MspInit+0xd8>)
 80057c0:	f002 f80e 	bl	80077e0 <HAL_GPIO_Init>
 80057c4:	bf00      	nop
 80057c6:	3730      	adds	r7, #48	; 0x30
 80057c8:	46bd      	mov	sp, r7
 80057ca:	bd80      	pop	{r7, pc}
 80057cc:	40012000 	.word	0x40012000
 80057d0:	40023800 	.word	0x40023800
 80057d4:	40020000 	.word	0x40020000
 80057d8:	40012200 	.word	0x40012200
 80057dc:	40021400 	.word	0x40021400

080057e0 <HAL_DAC_MspInit>:
 80057e0:	b580      	push	{r7, lr}
 80057e2:	b08a      	sub	sp, #40	; 0x28
 80057e4:	af00      	add	r7, sp, #0
 80057e6:	6078      	str	r0, [r7, #4]
 80057e8:	f107 0314 	add.w	r3, r7, #20
 80057ec:	2200      	movs	r2, #0
 80057ee:	601a      	str	r2, [r3, #0]
 80057f0:	605a      	str	r2, [r3, #4]
 80057f2:	609a      	str	r2, [r3, #8]
 80057f4:	60da      	str	r2, [r3, #12]
 80057f6:	611a      	str	r2, [r3, #16]
 80057f8:	687b      	ldr	r3, [r7, #4]
 80057fa:	681b      	ldr	r3, [r3, #0]
 80057fc:	4a19      	ldr	r2, [pc, #100]	; (8005864 <HAL_DAC_MspInit+0x84>)
 80057fe:	4293      	cmp	r3, r2
 8005800:	d12b      	bne.n	800585a <HAL_DAC_MspInit+0x7a>
 8005802:	4b19      	ldr	r3, [pc, #100]	; (8005868 <HAL_DAC_MspInit+0x88>)
 8005804:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005806:	4a18      	ldr	r2, [pc, #96]	; (8005868 <HAL_DAC_MspInit+0x88>)
 8005808:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800580c:	6413      	str	r3, [r2, #64]	; 0x40
 800580e:	4b16      	ldr	r3, [pc, #88]	; (8005868 <HAL_DAC_MspInit+0x88>)
 8005810:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005812:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005816:	613b      	str	r3, [r7, #16]
 8005818:	693b      	ldr	r3, [r7, #16]
 800581a:	4b13      	ldr	r3, [pc, #76]	; (8005868 <HAL_DAC_MspInit+0x88>)
 800581c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800581e:	4a12      	ldr	r2, [pc, #72]	; (8005868 <HAL_DAC_MspInit+0x88>)
 8005820:	f043 0301 	orr.w	r3, r3, #1
 8005824:	6313      	str	r3, [r2, #48]	; 0x30
 8005826:	4b10      	ldr	r3, [pc, #64]	; (8005868 <HAL_DAC_MspInit+0x88>)
 8005828:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800582a:	f003 0301 	and.w	r3, r3, #1
 800582e:	60fb      	str	r3, [r7, #12]
 8005830:	68fb      	ldr	r3, [r7, #12]
 8005832:	2310      	movs	r3, #16
 8005834:	617b      	str	r3, [r7, #20]
 8005836:	2303      	movs	r3, #3
 8005838:	61bb      	str	r3, [r7, #24]
 800583a:	2300      	movs	r3, #0
 800583c:	61fb      	str	r3, [r7, #28]
 800583e:	f107 0314 	add.w	r3, r7, #20
 8005842:	4619      	mov	r1, r3
 8005844:	4809      	ldr	r0, [pc, #36]	; (800586c <HAL_DAC_MspInit+0x8c>)
 8005846:	f001 ffcb 	bl	80077e0 <HAL_GPIO_Init>
 800584a:	2200      	movs	r2, #0
 800584c:	2100      	movs	r1, #0
 800584e:	2036      	movs	r0, #54	; 0x36
 8005850:	f001 fa64 	bl	8006d1c <HAL_NVIC_SetPriority>
 8005854:	2036      	movs	r0, #54	; 0x36
 8005856:	f001 fa7d 	bl	8006d54 <HAL_NVIC_EnableIRQ>
 800585a:	bf00      	nop
 800585c:	3728      	adds	r7, #40	; 0x28
 800585e:	46bd      	mov	sp, r7
 8005860:	bd80      	pop	{r7, pc}
 8005862:	bf00      	nop
 8005864:	40007400 	.word	0x40007400
 8005868:	40023800 	.word	0x40023800
 800586c:	40020000 	.word	0x40020000

08005870 <HAL_DMA2D_MspInit>:
 8005870:	b480      	push	{r7}
 8005872:	b085      	sub	sp, #20
 8005874:	af00      	add	r7, sp, #0
 8005876:	6078      	str	r0, [r7, #4]
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	4a0a      	ldr	r2, [pc, #40]	; (80058a8 <HAL_DMA2D_MspInit+0x38>)
 800587e:	4293      	cmp	r3, r2
 8005880:	d10b      	bne.n	800589a <HAL_DMA2D_MspInit+0x2a>
 8005882:	4b0a      	ldr	r3, [pc, #40]	; (80058ac <HAL_DMA2D_MspInit+0x3c>)
 8005884:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005886:	4a09      	ldr	r2, [pc, #36]	; (80058ac <HAL_DMA2D_MspInit+0x3c>)
 8005888:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800588c:	6313      	str	r3, [r2, #48]	; 0x30
 800588e:	4b07      	ldr	r3, [pc, #28]	; (80058ac <HAL_DMA2D_MspInit+0x3c>)
 8005890:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005892:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8005896:	60fb      	str	r3, [r7, #12]
 8005898:	68fb      	ldr	r3, [r7, #12]
 800589a:	bf00      	nop
 800589c:	3714      	adds	r7, #20
 800589e:	46bd      	mov	sp, r7
 80058a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058a4:	4770      	bx	lr
 80058a6:	bf00      	nop
 80058a8:	4002b000 	.word	0x4002b000
 80058ac:	40023800 	.word	0x40023800

080058b0 <HAL_I2C_MspInit>:
 80058b0:	b580      	push	{r7, lr}
 80058b2:	b08c      	sub	sp, #48	; 0x30
 80058b4:	af00      	add	r7, sp, #0
 80058b6:	6078      	str	r0, [r7, #4]
 80058b8:	f107 031c 	add.w	r3, r7, #28
 80058bc:	2200      	movs	r2, #0
 80058be:	601a      	str	r2, [r3, #0]
 80058c0:	605a      	str	r2, [r3, #4]
 80058c2:	609a      	str	r2, [r3, #8]
 80058c4:	60da      	str	r2, [r3, #12]
 80058c6:	611a      	str	r2, [r3, #16]
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	681b      	ldr	r3, [r3, #0]
 80058cc:	4a2f      	ldr	r2, [pc, #188]	; (800598c <HAL_I2C_MspInit+0xdc>)
 80058ce:	4293      	cmp	r3, r2
 80058d0:	d129      	bne.n	8005926 <HAL_I2C_MspInit+0x76>
 80058d2:	4b2f      	ldr	r3, [pc, #188]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 80058d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058d6:	4a2e      	ldr	r2, [pc, #184]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 80058d8:	f043 0302 	orr.w	r3, r3, #2
 80058dc:	6313      	str	r3, [r2, #48]	; 0x30
 80058de:	4b2c      	ldr	r3, [pc, #176]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 80058e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80058e2:	f003 0302 	and.w	r3, r3, #2
 80058e6:	61bb      	str	r3, [r7, #24]
 80058e8:	69bb      	ldr	r3, [r7, #24]
 80058ea:	f44f 7340 	mov.w	r3, #768	; 0x300
 80058ee:	61fb      	str	r3, [r7, #28]
 80058f0:	2312      	movs	r3, #18
 80058f2:	623b      	str	r3, [r7, #32]
 80058f4:	2301      	movs	r3, #1
 80058f6:	627b      	str	r3, [r7, #36]	; 0x24
 80058f8:	2300      	movs	r3, #0
 80058fa:	62bb      	str	r3, [r7, #40]	; 0x28
 80058fc:	2304      	movs	r3, #4
 80058fe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005900:	f107 031c 	add.w	r3, r7, #28
 8005904:	4619      	mov	r1, r3
 8005906:	4823      	ldr	r0, [pc, #140]	; (8005994 <HAL_I2C_MspInit+0xe4>)
 8005908:	f001 ff6a 	bl	80077e0 <HAL_GPIO_Init>
 800590c:	4b20      	ldr	r3, [pc, #128]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 800590e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005910:	4a1f      	ldr	r2, [pc, #124]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 8005912:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8005916:	6413      	str	r3, [r2, #64]	; 0x40
 8005918:	4b1d      	ldr	r3, [pc, #116]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 800591a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800591c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005920:	617b      	str	r3, [r7, #20]
 8005922:	697b      	ldr	r3, [r7, #20]
 8005924:	e02d      	b.n	8005982 <HAL_I2C_MspInit+0xd2>
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	681b      	ldr	r3, [r3, #0]
 800592a:	4a1b      	ldr	r2, [pc, #108]	; (8005998 <HAL_I2C_MspInit+0xe8>)
 800592c:	4293      	cmp	r3, r2
 800592e:	d128      	bne.n	8005982 <HAL_I2C_MspInit+0xd2>
 8005930:	4b17      	ldr	r3, [pc, #92]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 8005932:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005934:	4a16      	ldr	r2, [pc, #88]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 8005936:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800593a:	6313      	str	r3, [r2, #48]	; 0x30
 800593c:	4b14      	ldr	r3, [pc, #80]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 800593e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005940:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005944:	613b      	str	r3, [r7, #16]
 8005946:	693b      	ldr	r3, [r7, #16]
 8005948:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800594c:	61fb      	str	r3, [r7, #28]
 800594e:	2312      	movs	r3, #18
 8005950:	623b      	str	r3, [r7, #32]
 8005952:	2301      	movs	r3, #1
 8005954:	627b      	str	r3, [r7, #36]	; 0x24
 8005956:	2303      	movs	r3, #3
 8005958:	62bb      	str	r3, [r7, #40]	; 0x28
 800595a:	2304      	movs	r3, #4
 800595c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800595e:	f107 031c 	add.w	r3, r7, #28
 8005962:	4619      	mov	r1, r3
 8005964:	480d      	ldr	r0, [pc, #52]	; (800599c <HAL_I2C_MspInit+0xec>)
 8005966:	f001 ff3b 	bl	80077e0 <HAL_GPIO_Init>
 800596a:	4b09      	ldr	r3, [pc, #36]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 800596c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800596e:	4a08      	ldr	r2, [pc, #32]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 8005970:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8005974:	6413      	str	r3, [r2, #64]	; 0x40
 8005976:	4b06      	ldr	r3, [pc, #24]	; (8005990 <HAL_I2C_MspInit+0xe0>)
 8005978:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800597a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800597e:	60fb      	str	r3, [r7, #12]
 8005980:	68fb      	ldr	r3, [r7, #12]
 8005982:	bf00      	nop
 8005984:	3730      	adds	r7, #48	; 0x30
 8005986:	46bd      	mov	sp, r7
 8005988:	bd80      	pop	{r7, pc}
 800598a:	bf00      	nop
 800598c:	40005400 	.word	0x40005400
 8005990:	40023800 	.word	0x40023800
 8005994:	40020400 	.word	0x40020400
 8005998:	40005c00 	.word	0x40005c00
 800599c:	40021c00 	.word	0x40021c00

080059a0 <HAL_I2C_MspDeInit>:
 80059a0:	b580      	push	{r7, lr}
 80059a2:	b082      	sub	sp, #8
 80059a4:	af00      	add	r7, sp, #0
 80059a6:	6078      	str	r0, [r7, #4]
 80059a8:	687b      	ldr	r3, [r7, #4]
 80059aa:	681b      	ldr	r3, [r3, #0]
 80059ac:	4a15      	ldr	r2, [pc, #84]	; (8005a04 <HAL_I2C_MspDeInit+0x64>)
 80059ae:	4293      	cmp	r3, r2
 80059b0:	d110      	bne.n	80059d4 <HAL_I2C_MspDeInit+0x34>
 80059b2:	4b15      	ldr	r3, [pc, #84]	; (8005a08 <HAL_I2C_MspDeInit+0x68>)
 80059b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059b6:	4a14      	ldr	r2, [pc, #80]	; (8005a08 <HAL_I2C_MspDeInit+0x68>)
 80059b8:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80059bc:	6413      	str	r3, [r2, #64]	; 0x40
 80059be:	f44f 7180 	mov.w	r1, #256	; 0x100
 80059c2:	4812      	ldr	r0, [pc, #72]	; (8005a0c <HAL_I2C_MspDeInit+0x6c>)
 80059c4:	f002 f8b6 	bl	8007b34 <HAL_GPIO_DeInit>
 80059c8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80059cc:	480f      	ldr	r0, [pc, #60]	; (8005a0c <HAL_I2C_MspDeInit+0x6c>)
 80059ce:	f002 f8b1 	bl	8007b34 <HAL_GPIO_DeInit>
 80059d2:	e013      	b.n	80059fc <HAL_I2C_MspDeInit+0x5c>
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	681b      	ldr	r3, [r3, #0]
 80059d8:	4a0d      	ldr	r2, [pc, #52]	; (8005a10 <HAL_I2C_MspDeInit+0x70>)
 80059da:	4293      	cmp	r3, r2
 80059dc:	d10e      	bne.n	80059fc <HAL_I2C_MspDeInit+0x5c>
 80059de:	4b0a      	ldr	r3, [pc, #40]	; (8005a08 <HAL_I2C_MspDeInit+0x68>)
 80059e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059e2:	4a09      	ldr	r2, [pc, #36]	; (8005a08 <HAL_I2C_MspDeInit+0x68>)
 80059e4:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80059e8:	6413      	str	r3, [r2, #64]	; 0x40
 80059ea:	2180      	movs	r1, #128	; 0x80
 80059ec:	4809      	ldr	r0, [pc, #36]	; (8005a14 <HAL_I2C_MspDeInit+0x74>)
 80059ee:	f002 f8a1 	bl	8007b34 <HAL_GPIO_DeInit>
 80059f2:	f44f 7180 	mov.w	r1, #256	; 0x100
 80059f6:	4807      	ldr	r0, [pc, #28]	; (8005a14 <HAL_I2C_MspDeInit+0x74>)
 80059f8:	f002 f89c 	bl	8007b34 <HAL_GPIO_DeInit>
 80059fc:	bf00      	nop
 80059fe:	3708      	adds	r7, #8
 8005a00:	46bd      	mov	sp, r7
 8005a02:	bd80      	pop	{r7, pc}
 8005a04:	40005400 	.word	0x40005400
 8005a08:	40023800 	.word	0x40023800
 8005a0c:	40020400 	.word	0x40020400
 8005a10:	40005c00 	.word	0x40005c00
 8005a14:	40021c00 	.word	0x40021c00

08005a18 <HAL_LTDC_MspInit>:
 8005a18:	b580      	push	{r7, lr}
 8005a1a:	b08e      	sub	sp, #56	; 0x38
 8005a1c:	af00      	add	r7, sp, #0
 8005a1e:	6078      	str	r0, [r7, #4]
 8005a20:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005a24:	2200      	movs	r2, #0
 8005a26:	601a      	str	r2, [r3, #0]
 8005a28:	605a      	str	r2, [r3, #4]
 8005a2a:	609a      	str	r2, [r3, #8]
 8005a2c:	60da      	str	r2, [r3, #12]
 8005a2e:	611a      	str	r2, [r3, #16]
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	4a55      	ldr	r2, [pc, #340]	; (8005b8c <HAL_LTDC_MspInit+0x174>)
 8005a36:	4293      	cmp	r3, r2
 8005a38:	f040 80a3 	bne.w	8005b82 <HAL_LTDC_MspInit+0x16a>
 8005a3c:	4b54      	ldr	r3, [pc, #336]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a3e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a40:	4a53      	ldr	r2, [pc, #332]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a42:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8005a46:	6453      	str	r3, [r2, #68]	; 0x44
 8005a48:	4b51      	ldr	r3, [pc, #324]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a4a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005a4c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8005a50:	623b      	str	r3, [r7, #32]
 8005a52:	6a3b      	ldr	r3, [r7, #32]
 8005a54:	4b4e      	ldr	r3, [pc, #312]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a58:	4a4d      	ldr	r2, [pc, #308]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a5a:	f043 0310 	orr.w	r3, r3, #16
 8005a5e:	6313      	str	r3, [r2, #48]	; 0x30
 8005a60:	4b4b      	ldr	r3, [pc, #300]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a64:	f003 0310 	and.w	r3, r3, #16
 8005a68:	61fb      	str	r3, [r7, #28]
 8005a6a:	69fb      	ldr	r3, [r7, #28]
 8005a6c:	4b48      	ldr	r3, [pc, #288]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a6e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a70:	4a47      	ldr	r2, [pc, #284]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a72:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8005a76:	6313      	str	r3, [r2, #48]	; 0x30
 8005a78:	4b45      	ldr	r3, [pc, #276]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a7c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005a80:	61bb      	str	r3, [r7, #24]
 8005a82:	69bb      	ldr	r3, [r7, #24]
 8005a84:	4b42      	ldr	r3, [pc, #264]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a88:	4a41      	ldr	r2, [pc, #260]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a8a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8005a8e:	6313      	str	r3, [r2, #48]	; 0x30
 8005a90:	4b3f      	ldr	r3, [pc, #252]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a94:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005a98:	617b      	str	r3, [r7, #20]
 8005a9a:	697b      	ldr	r3, [r7, #20]
 8005a9c:	4b3c      	ldr	r3, [pc, #240]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005a9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005aa0:	4a3b      	ldr	r2, [pc, #236]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005aa2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005aa6:	6313      	str	r3, [r2, #48]	; 0x30
 8005aa8:	4b39      	ldr	r3, [pc, #228]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005aaa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005aac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005ab0:	613b      	str	r3, [r7, #16]
 8005ab2:	693b      	ldr	r3, [r7, #16]
 8005ab4:	4b36      	ldr	r3, [pc, #216]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005ab6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ab8:	4a35      	ldr	r2, [pc, #212]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005aba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005abe:	6313      	str	r3, [r2, #48]	; 0x30
 8005ac0:	4b33      	ldr	r3, [pc, #204]	; (8005b90 <HAL_LTDC_MspInit+0x178>)
 8005ac2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ac4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005ac8:	60fb      	str	r3, [r7, #12]
 8005aca:	68fb      	ldr	r3, [r7, #12]
 8005acc:	2310      	movs	r3, #16
 8005ace:	627b      	str	r3, [r7, #36]	; 0x24
 8005ad0:	2302      	movs	r3, #2
 8005ad2:	62bb      	str	r3, [r7, #40]	; 0x28
 8005ad4:	2300      	movs	r3, #0
 8005ad6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005ad8:	2300      	movs	r3, #0
 8005ada:	633b      	str	r3, [r7, #48]	; 0x30
 8005adc:	230e      	movs	r3, #14
 8005ade:	637b      	str	r3, [r7, #52]	; 0x34
 8005ae0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005ae4:	4619      	mov	r1, r3
 8005ae6:	482b      	ldr	r0, [pc, #172]	; (8005b94 <HAL_LTDC_MspInit+0x17c>)
 8005ae8:	f001 fe7a 	bl	80077e0 <HAL_GPIO_Init>
 8005aec:	f64e 73ff 	movw	r3, #61439	; 0xefff
 8005af0:	627b      	str	r3, [r7, #36]	; 0x24
 8005af2:	2302      	movs	r3, #2
 8005af4:	62bb      	str	r3, [r7, #40]	; 0x28
 8005af6:	2300      	movs	r3, #0
 8005af8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005afa:	2300      	movs	r3, #0
 8005afc:	633b      	str	r3, [r7, #48]	; 0x30
 8005afe:	230e      	movs	r3, #14
 8005b00:	637b      	str	r3, [r7, #52]	; 0x34
 8005b02:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005b06:	4619      	mov	r1, r3
 8005b08:	4823      	ldr	r0, [pc, #140]	; (8005b98 <HAL_LTDC_MspInit+0x180>)
 8005b0a:	f001 fe69 	bl	80077e0 <HAL_GPIO_Init>
 8005b0e:	23f7      	movs	r3, #247	; 0xf7
 8005b10:	627b      	str	r3, [r7, #36]	; 0x24
 8005b12:	2302      	movs	r3, #2
 8005b14:	62bb      	str	r3, [r7, #40]	; 0x28
 8005b16:	2300      	movs	r3, #0
 8005b18:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b1a:	2300      	movs	r3, #0
 8005b1c:	633b      	str	r3, [r7, #48]	; 0x30
 8005b1e:	230e      	movs	r3, #14
 8005b20:	637b      	str	r3, [r7, #52]	; 0x34
 8005b22:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005b26:	4619      	mov	r1, r3
 8005b28:	481c      	ldr	r0, [pc, #112]	; (8005b9c <HAL_LTDC_MspInit+0x184>)
 8005b2a:	f001 fe59 	bl	80077e0 <HAL_GPIO_Init>
 8005b2e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005b32:	627b      	str	r3, [r7, #36]	; 0x24
 8005b34:	2302      	movs	r3, #2
 8005b36:	62bb      	str	r3, [r7, #40]	; 0x28
 8005b38:	2300      	movs	r3, #0
 8005b3a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b3c:	2300      	movs	r3, #0
 8005b3e:	633b      	str	r3, [r7, #48]	; 0x30
 8005b40:	2309      	movs	r3, #9
 8005b42:	637b      	str	r3, [r7, #52]	; 0x34
 8005b44:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005b48:	4619      	mov	r1, r3
 8005b4a:	4815      	ldr	r0, [pc, #84]	; (8005ba0 <HAL_LTDC_MspInit+0x188>)
 8005b4c:	f001 fe48 	bl	80077e0 <HAL_GPIO_Init>
 8005b50:	f44f 4346 	mov.w	r3, #50688	; 0xc600
 8005b54:	627b      	str	r3, [r7, #36]	; 0x24
 8005b56:	2302      	movs	r3, #2
 8005b58:	62bb      	str	r3, [r7, #40]	; 0x28
 8005b5a:	2300      	movs	r3, #0
 8005b5c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005b5e:	2300      	movs	r3, #0
 8005b60:	633b      	str	r3, [r7, #48]	; 0x30
 8005b62:	230e      	movs	r3, #14
 8005b64:	637b      	str	r3, [r7, #52]	; 0x34
 8005b66:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005b6a:	4619      	mov	r1, r3
 8005b6c:	480d      	ldr	r0, [pc, #52]	; (8005ba4 <HAL_LTDC_MspInit+0x18c>)
 8005b6e:	f001 fe37 	bl	80077e0 <HAL_GPIO_Init>
 8005b72:	2200      	movs	r2, #0
 8005b74:	2105      	movs	r1, #5
 8005b76:	2058      	movs	r0, #88	; 0x58
 8005b78:	f001 f8d0 	bl	8006d1c <HAL_NVIC_SetPriority>
 8005b7c:	2058      	movs	r0, #88	; 0x58
 8005b7e:	f001 f8e9 	bl	8006d54 <HAL_NVIC_EnableIRQ>
 8005b82:	bf00      	nop
 8005b84:	3738      	adds	r7, #56	; 0x38
 8005b86:	46bd      	mov	sp, r7
 8005b88:	bd80      	pop	{r7, pc}
 8005b8a:	bf00      	nop
 8005b8c:	40016800 	.word	0x40016800
 8005b90:	40023800 	.word	0x40023800
 8005b94:	40021000 	.word	0x40021000
 8005b98:	40022400 	.word	0x40022400
 8005b9c:	40022800 	.word	0x40022800
 8005ba0:	40021800 	.word	0x40021800
 8005ba4:	40022000 	.word	0x40022000

08005ba8 <HAL_RTC_MspInit>:
 8005ba8:	b480      	push	{r7}
 8005baa:	b083      	sub	sp, #12
 8005bac:	af00      	add	r7, sp, #0
 8005bae:	6078      	str	r0, [r7, #4]
 8005bb0:	687b      	ldr	r3, [r7, #4]
 8005bb2:	681b      	ldr	r3, [r3, #0]
 8005bb4:	4a07      	ldr	r2, [pc, #28]	; (8005bd4 <HAL_RTC_MspInit+0x2c>)
 8005bb6:	4293      	cmp	r3, r2
 8005bb8:	d105      	bne.n	8005bc6 <HAL_RTC_MspInit+0x1e>
 8005bba:	4b07      	ldr	r3, [pc, #28]	; (8005bd8 <HAL_RTC_MspInit+0x30>)
 8005bbc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005bbe:	4a06      	ldr	r2, [pc, #24]	; (8005bd8 <HAL_RTC_MspInit+0x30>)
 8005bc0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005bc4:	6713      	str	r3, [r2, #112]	; 0x70
 8005bc6:	bf00      	nop
 8005bc8:	370c      	adds	r7, #12
 8005bca:	46bd      	mov	sp, r7
 8005bcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bd0:	4770      	bx	lr
 8005bd2:	bf00      	nop
 8005bd4:	40002800 	.word	0x40002800
 8005bd8:	40023800 	.word	0x40023800

08005bdc <HAL_SPI_MspInit>:
 8005bdc:	b580      	push	{r7, lr}
 8005bde:	b08a      	sub	sp, #40	; 0x28
 8005be0:	af00      	add	r7, sp, #0
 8005be2:	6078      	str	r0, [r7, #4]
 8005be4:	f107 0314 	add.w	r3, r7, #20
 8005be8:	2200      	movs	r2, #0
 8005bea:	601a      	str	r2, [r3, #0]
 8005bec:	605a      	str	r2, [r3, #4]
 8005bee:	609a      	str	r2, [r3, #8]
 8005bf0:	60da      	str	r2, [r3, #12]
 8005bf2:	611a      	str	r2, [r3, #16]
 8005bf4:	687b      	ldr	r3, [r7, #4]
 8005bf6:	681b      	ldr	r3, [r3, #0]
 8005bf8:	4a2d      	ldr	r2, [pc, #180]	; (8005cb0 <HAL_SPI_MspInit+0xd4>)
 8005bfa:	4293      	cmp	r3, r2
 8005bfc:	d154      	bne.n	8005ca8 <HAL_SPI_MspInit+0xcc>
 8005bfe:	4b2d      	ldr	r3, [pc, #180]	; (8005cb4 <HAL_SPI_MspInit+0xd8>)
 8005c00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c02:	4a2c      	ldr	r2, [pc, #176]	; (8005cb4 <HAL_SPI_MspInit+0xd8>)
 8005c04:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005c08:	6413      	str	r3, [r2, #64]	; 0x40
 8005c0a:	4b2a      	ldr	r3, [pc, #168]	; (8005cb4 <HAL_SPI_MspInit+0xd8>)
 8005c0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c0e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005c12:	613b      	str	r3, [r7, #16]
 8005c14:	693b      	ldr	r3, [r7, #16]
 8005c16:	4b27      	ldr	r3, [pc, #156]	; (8005cb4 <HAL_SPI_MspInit+0xd8>)
 8005c18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c1a:	4a26      	ldr	r2, [pc, #152]	; (8005cb4 <HAL_SPI_MspInit+0xd8>)
 8005c1c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005c20:	6313      	str	r3, [r2, #48]	; 0x30
 8005c22:	4b24      	ldr	r3, [pc, #144]	; (8005cb4 <HAL_SPI_MspInit+0xd8>)
 8005c24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c26:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005c2a:	60fb      	str	r3, [r7, #12]
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	4b21      	ldr	r3, [pc, #132]	; (8005cb4 <HAL_SPI_MspInit+0xd8>)
 8005c30:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c32:	4a20      	ldr	r2, [pc, #128]	; (8005cb4 <HAL_SPI_MspInit+0xd8>)
 8005c34:	f043 0302 	orr.w	r3, r3, #2
 8005c38:	6313      	str	r3, [r2, #48]	; 0x30
 8005c3a:	4b1e      	ldr	r3, [pc, #120]	; (8005cb4 <HAL_SPI_MspInit+0xd8>)
 8005c3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c3e:	f003 0302 	and.w	r3, r3, #2
 8005c42:	60bb      	str	r3, [r7, #8]
 8005c44:	68bb      	ldr	r3, [r7, #8]
 8005c46:	2302      	movs	r3, #2
 8005c48:	617b      	str	r3, [r7, #20]
 8005c4a:	2302      	movs	r3, #2
 8005c4c:	61bb      	str	r3, [r7, #24]
 8005c4e:	2300      	movs	r3, #0
 8005c50:	61fb      	str	r3, [r7, #28]
 8005c52:	2300      	movs	r3, #0
 8005c54:	623b      	str	r3, [r7, #32]
 8005c56:	2305      	movs	r3, #5
 8005c58:	627b      	str	r3, [r7, #36]	; 0x24
 8005c5a:	f107 0314 	add.w	r3, r7, #20
 8005c5e:	4619      	mov	r1, r3
 8005c60:	4815      	ldr	r0, [pc, #84]	; (8005cb8 <HAL_SPI_MspInit+0xdc>)
 8005c62:	f001 fdbd 	bl	80077e0 <HAL_GPIO_Init>
 8005c66:	2301      	movs	r3, #1
 8005c68:	617b      	str	r3, [r7, #20]
 8005c6a:	2302      	movs	r3, #2
 8005c6c:	61bb      	str	r3, [r7, #24]
 8005c6e:	2300      	movs	r3, #0
 8005c70:	61fb      	str	r3, [r7, #28]
 8005c72:	2303      	movs	r3, #3
 8005c74:	623b      	str	r3, [r7, #32]
 8005c76:	2305      	movs	r3, #5
 8005c78:	627b      	str	r3, [r7, #36]	; 0x24
 8005c7a:	f107 0314 	add.w	r3, r7, #20
 8005c7e:	4619      	mov	r1, r3
 8005c80:	480d      	ldr	r0, [pc, #52]	; (8005cb8 <HAL_SPI_MspInit+0xdc>)
 8005c82:	f001 fdad 	bl	80077e0 <HAL_GPIO_Init>
 8005c86:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8005c8a:	617b      	str	r3, [r7, #20]
 8005c8c:	2302      	movs	r3, #2
 8005c8e:	61bb      	str	r3, [r7, #24]
 8005c90:	2300      	movs	r3, #0
 8005c92:	61fb      	str	r3, [r7, #28]
 8005c94:	2303      	movs	r3, #3
 8005c96:	623b      	str	r3, [r7, #32]
 8005c98:	2305      	movs	r3, #5
 8005c9a:	627b      	str	r3, [r7, #36]	; 0x24
 8005c9c:	f107 0314 	add.w	r3, r7, #20
 8005ca0:	4619      	mov	r1, r3
 8005ca2:	4806      	ldr	r0, [pc, #24]	; (8005cbc <HAL_SPI_MspInit+0xe0>)
 8005ca4:	f001 fd9c 	bl	80077e0 <HAL_GPIO_Init>
 8005ca8:	bf00      	nop
 8005caa:	3728      	adds	r7, #40	; 0x28
 8005cac:	46bd      	mov	sp, r7
 8005cae:	bd80      	pop	{r7, pc}
 8005cb0:	40003800 	.word	0x40003800
 8005cb4:	40023800 	.word	0x40023800
 8005cb8:	40022000 	.word	0x40022000
 8005cbc:	40020400 	.word	0x40020400

08005cc0 <HAL_TIM_Base_MspInit>:
 8005cc0:	b480      	push	{r7}
 8005cc2:	b089      	sub	sp, #36	; 0x24
 8005cc4:	af00      	add	r7, sp, #0
 8005cc6:	6078      	str	r0, [r7, #4]
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	681b      	ldr	r3, [r3, #0]
 8005ccc:	4a2e      	ldr	r2, [pc, #184]	; (8005d88 <HAL_TIM_Base_MspInit+0xc8>)
 8005cce:	4293      	cmp	r3, r2
 8005cd0:	d10c      	bne.n	8005cec <HAL_TIM_Base_MspInit+0x2c>
 8005cd2:	4b2e      	ldr	r3, [pc, #184]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005cd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005cd6:	4a2d      	ldr	r2, [pc, #180]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005cd8:	f043 0301 	orr.w	r3, r3, #1
 8005cdc:	6453      	str	r3, [r2, #68]	; 0x44
 8005cde:	4b2b      	ldr	r3, [pc, #172]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005ce0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005ce2:	f003 0301 	and.w	r3, r3, #1
 8005ce6:	61fb      	str	r3, [r7, #28]
 8005ce8:	69fb      	ldr	r3, [r7, #28]
 8005cea:	e046      	b.n	8005d7a <HAL_TIM_Base_MspInit+0xba>
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005cf4:	d10c      	bne.n	8005d10 <HAL_TIM_Base_MspInit+0x50>
 8005cf6:	4b25      	ldr	r3, [pc, #148]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005cf8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005cfa:	4a24      	ldr	r2, [pc, #144]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005cfc:	f043 0301 	orr.w	r3, r3, #1
 8005d00:	6413      	str	r3, [r2, #64]	; 0x40
 8005d02:	4b22      	ldr	r3, [pc, #136]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d06:	f003 0301 	and.w	r3, r3, #1
 8005d0a:	61bb      	str	r3, [r7, #24]
 8005d0c:	69bb      	ldr	r3, [r7, #24]
 8005d0e:	e034      	b.n	8005d7a <HAL_TIM_Base_MspInit+0xba>
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	4a1e      	ldr	r2, [pc, #120]	; (8005d90 <HAL_TIM_Base_MspInit+0xd0>)
 8005d16:	4293      	cmp	r3, r2
 8005d18:	d10c      	bne.n	8005d34 <HAL_TIM_Base_MspInit+0x74>
 8005d1a:	4b1c      	ldr	r3, [pc, #112]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d1e:	4a1b      	ldr	r2, [pc, #108]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d20:	f043 0302 	orr.w	r3, r3, #2
 8005d24:	6413      	str	r3, [r2, #64]	; 0x40
 8005d26:	4b19      	ldr	r3, [pc, #100]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d2a:	f003 0302 	and.w	r3, r3, #2
 8005d2e:	617b      	str	r3, [r7, #20]
 8005d30:	697b      	ldr	r3, [r7, #20]
 8005d32:	e022      	b.n	8005d7a <HAL_TIM_Base_MspInit+0xba>
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	4a16      	ldr	r2, [pc, #88]	; (8005d94 <HAL_TIM_Base_MspInit+0xd4>)
 8005d3a:	4293      	cmp	r3, r2
 8005d3c:	d10c      	bne.n	8005d58 <HAL_TIM_Base_MspInit+0x98>
 8005d3e:	4b13      	ldr	r3, [pc, #76]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d42:	4a12      	ldr	r2, [pc, #72]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d44:	f043 0308 	orr.w	r3, r3, #8
 8005d48:	6413      	str	r3, [r2, #64]	; 0x40
 8005d4a:	4b10      	ldr	r3, [pc, #64]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d4e:	f003 0308 	and.w	r3, r3, #8
 8005d52:	613b      	str	r3, [r7, #16]
 8005d54:	693b      	ldr	r3, [r7, #16]
 8005d56:	e010      	b.n	8005d7a <HAL_TIM_Base_MspInit+0xba>
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	681b      	ldr	r3, [r3, #0]
 8005d5c:	4a0e      	ldr	r2, [pc, #56]	; (8005d98 <HAL_TIM_Base_MspInit+0xd8>)
 8005d5e:	4293      	cmp	r3, r2
 8005d60:	d10b      	bne.n	8005d7a <HAL_TIM_Base_MspInit+0xba>
 8005d62:	4b0a      	ldr	r3, [pc, #40]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005d66:	4a09      	ldr	r2, [pc, #36]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d68:	f043 0302 	orr.w	r3, r3, #2
 8005d6c:	6453      	str	r3, [r2, #68]	; 0x44
 8005d6e:	4b07      	ldr	r3, [pc, #28]	; (8005d8c <HAL_TIM_Base_MspInit+0xcc>)
 8005d70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005d72:	f003 0302 	and.w	r3, r3, #2
 8005d76:	60fb      	str	r3, [r7, #12]
 8005d78:	68fb      	ldr	r3, [r7, #12]
 8005d7a:	bf00      	nop
 8005d7c:	3724      	adds	r7, #36	; 0x24
 8005d7e:	46bd      	mov	sp, r7
 8005d80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d84:	4770      	bx	lr
 8005d86:	bf00      	nop
 8005d88:	40010000 	.word	0x40010000
 8005d8c:	40023800 	.word	0x40023800
 8005d90:	40000400 	.word	0x40000400
 8005d94:	40000c00 	.word	0x40000c00
 8005d98:	40010400 	.word	0x40010400

08005d9c <HAL_TIM_MspPostInit>:
 8005d9c:	b580      	push	{r7, lr}
 8005d9e:	b08a      	sub	sp, #40	; 0x28
 8005da0:	af00      	add	r7, sp, #0
 8005da2:	6078      	str	r0, [r7, #4]
 8005da4:	f107 0314 	add.w	r3, r7, #20
 8005da8:	2200      	movs	r2, #0
 8005daa:	601a      	str	r2, [r3, #0]
 8005dac:	605a      	str	r2, [r3, #4]
 8005dae:	609a      	str	r2, [r3, #8]
 8005db0:	60da      	str	r2, [r3, #12]
 8005db2:	611a      	str	r2, [r3, #16]
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	4a22      	ldr	r2, [pc, #136]	; (8005e44 <HAL_TIM_MspPostInit+0xa8>)
 8005dba:	4293      	cmp	r3, r2
 8005dbc:	d11c      	bne.n	8005df8 <HAL_TIM_MspPostInit+0x5c>
 8005dbe:	4b22      	ldr	r3, [pc, #136]	; (8005e48 <HAL_TIM_MspPostInit+0xac>)
 8005dc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005dc2:	4a21      	ldr	r2, [pc, #132]	; (8005e48 <HAL_TIM_MspPostInit+0xac>)
 8005dc4:	f043 0302 	orr.w	r3, r3, #2
 8005dc8:	6313      	str	r3, [r2, #48]	; 0x30
 8005dca:	4b1f      	ldr	r3, [pc, #124]	; (8005e48 <HAL_TIM_MspPostInit+0xac>)
 8005dcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005dce:	f003 0302 	and.w	r3, r3, #2
 8005dd2:	613b      	str	r3, [r7, #16]
 8005dd4:	693b      	ldr	r3, [r7, #16]
 8005dd6:	2310      	movs	r3, #16
 8005dd8:	617b      	str	r3, [r7, #20]
 8005dda:	2302      	movs	r3, #2
 8005ddc:	61bb      	str	r3, [r7, #24]
 8005dde:	2300      	movs	r3, #0
 8005de0:	61fb      	str	r3, [r7, #28]
 8005de2:	2300      	movs	r3, #0
 8005de4:	623b      	str	r3, [r7, #32]
 8005de6:	2302      	movs	r3, #2
 8005de8:	627b      	str	r3, [r7, #36]	; 0x24
 8005dea:	f107 0314 	add.w	r3, r7, #20
 8005dee:	4619      	mov	r1, r3
 8005df0:	4816      	ldr	r0, [pc, #88]	; (8005e4c <HAL_TIM_MspPostInit+0xb0>)
 8005df2:	f001 fcf5 	bl	80077e0 <HAL_GPIO_Init>
 8005df6:	e020      	b.n	8005e3a <HAL_TIM_MspPostInit+0x9e>
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	681b      	ldr	r3, [r3, #0]
 8005dfc:	4a14      	ldr	r2, [pc, #80]	; (8005e50 <HAL_TIM_MspPostInit+0xb4>)
 8005dfe:	4293      	cmp	r3, r2
 8005e00:	d11b      	bne.n	8005e3a <HAL_TIM_MspPostInit+0x9e>
 8005e02:	4b11      	ldr	r3, [pc, #68]	; (8005e48 <HAL_TIM_MspPostInit+0xac>)
 8005e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e06:	4a10      	ldr	r2, [pc, #64]	; (8005e48 <HAL_TIM_MspPostInit+0xac>)
 8005e08:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005e0c:	6313      	str	r3, [r2, #48]	; 0x30
 8005e0e:	4b0e      	ldr	r3, [pc, #56]	; (8005e48 <HAL_TIM_MspPostInit+0xac>)
 8005e10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e12:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005e16:	60fb      	str	r3, [r7, #12]
 8005e18:	68fb      	ldr	r3, [r7, #12]
 8005e1a:	2304      	movs	r3, #4
 8005e1c:	617b      	str	r3, [r7, #20]
 8005e1e:	2302      	movs	r3, #2
 8005e20:	61bb      	str	r3, [r7, #24]
 8005e22:	2300      	movs	r3, #0
 8005e24:	61fb      	str	r3, [r7, #28]
 8005e26:	2300      	movs	r3, #0
 8005e28:	623b      	str	r3, [r7, #32]
 8005e2a:	2303      	movs	r3, #3
 8005e2c:	627b      	str	r3, [r7, #36]	; 0x24
 8005e2e:	f107 0314 	add.w	r3, r7, #20
 8005e32:	4619      	mov	r1, r3
 8005e34:	4807      	ldr	r0, [pc, #28]	; (8005e54 <HAL_TIM_MspPostInit+0xb8>)
 8005e36:	f001 fcd3 	bl	80077e0 <HAL_GPIO_Init>
 8005e3a:	bf00      	nop
 8005e3c:	3728      	adds	r7, #40	; 0x28
 8005e3e:	46bd      	mov	sp, r7
 8005e40:	bd80      	pop	{r7, pc}
 8005e42:	bf00      	nop
 8005e44:	40000400 	.word	0x40000400
 8005e48:	40023800 	.word	0x40023800
 8005e4c:	40020400 	.word	0x40020400
 8005e50:	40010400 	.word	0x40010400
 8005e54:	40022000 	.word	0x40022000

08005e58 <HAL_UART_MspInit>:
 8005e58:	b580      	push	{r7, lr}
 8005e5a:	b08e      	sub	sp, #56	; 0x38
 8005e5c:	af00      	add	r7, sp, #0
 8005e5e:	6078      	str	r0, [r7, #4]
 8005e60:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005e64:	2200      	movs	r2, #0
 8005e66:	601a      	str	r2, [r3, #0]
 8005e68:	605a      	str	r2, [r3, #4]
 8005e6a:	609a      	str	r2, [r3, #8]
 8005e6c:	60da      	str	r2, [r3, #12]
 8005e6e:	611a      	str	r2, [r3, #16]
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	681b      	ldr	r3, [r3, #0]
 8005e74:	4a57      	ldr	r2, [pc, #348]	; (8005fd4 <HAL_UART_MspInit+0x17c>)
 8005e76:	4293      	cmp	r3, r2
 8005e78:	d128      	bne.n	8005ecc <HAL_UART_MspInit+0x74>
 8005e7a:	4b57      	ldr	r3, [pc, #348]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005e7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e7e:	4a56      	ldr	r2, [pc, #344]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005e80:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8005e84:	6413      	str	r3, [r2, #64]	; 0x40
 8005e86:	4b54      	ldr	r3, [pc, #336]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005e88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005e8a:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8005e8e:	623b      	str	r3, [r7, #32]
 8005e90:	6a3b      	ldr	r3, [r7, #32]
 8005e92:	4b51      	ldr	r3, [pc, #324]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005e94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005e96:	4a50      	ldr	r2, [pc, #320]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005e98:	f043 0320 	orr.w	r3, r3, #32
 8005e9c:	6313      	str	r3, [r2, #48]	; 0x30
 8005e9e:	4b4e      	ldr	r3, [pc, #312]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005ea0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ea2:	f003 0320 	and.w	r3, r3, #32
 8005ea6:	61fb      	str	r3, [r7, #28]
 8005ea8:	69fb      	ldr	r3, [r7, #28]
 8005eaa:	23c0      	movs	r3, #192	; 0xc0
 8005eac:	627b      	str	r3, [r7, #36]	; 0x24
 8005eae:	2302      	movs	r3, #2
 8005eb0:	62bb      	str	r3, [r7, #40]	; 0x28
 8005eb2:	2300      	movs	r3, #0
 8005eb4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005eb6:	2303      	movs	r3, #3
 8005eb8:	633b      	str	r3, [r7, #48]	; 0x30
 8005eba:	2308      	movs	r3, #8
 8005ebc:	637b      	str	r3, [r7, #52]	; 0x34
 8005ebe:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005ec2:	4619      	mov	r1, r3
 8005ec4:	4845      	ldr	r0, [pc, #276]	; (8005fdc <HAL_UART_MspInit+0x184>)
 8005ec6:	f001 fc8b 	bl	80077e0 <HAL_GPIO_Init>
 8005eca:	e07f      	b.n	8005fcc <HAL_UART_MspInit+0x174>
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	4a43      	ldr	r2, [pc, #268]	; (8005fe0 <HAL_UART_MspInit+0x188>)
 8005ed2:	4293      	cmp	r3, r2
 8005ed4:	d14d      	bne.n	8005f72 <HAL_UART_MspInit+0x11a>
 8005ed6:	4b40      	ldr	r3, [pc, #256]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005ed8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005eda:	4a3f      	ldr	r2, [pc, #252]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005edc:	f043 0310 	orr.w	r3, r3, #16
 8005ee0:	6453      	str	r3, [r2, #68]	; 0x44
 8005ee2:	4b3d      	ldr	r3, [pc, #244]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005ee4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005ee6:	f003 0310 	and.w	r3, r3, #16
 8005eea:	61bb      	str	r3, [r7, #24]
 8005eec:	69bb      	ldr	r3, [r7, #24]
 8005eee:	4b3a      	ldr	r3, [pc, #232]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005ef0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ef2:	4a39      	ldr	r2, [pc, #228]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005ef4:	f043 0302 	orr.w	r3, r3, #2
 8005ef8:	6313      	str	r3, [r2, #48]	; 0x30
 8005efa:	4b37      	ldr	r3, [pc, #220]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005efc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005efe:	f003 0302 	and.w	r3, r3, #2
 8005f02:	617b      	str	r3, [r7, #20]
 8005f04:	697b      	ldr	r3, [r7, #20]
 8005f06:	4b34      	ldr	r3, [pc, #208]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005f08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f0a:	4a33      	ldr	r2, [pc, #204]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005f0c:	f043 0301 	orr.w	r3, r3, #1
 8005f10:	6313      	str	r3, [r2, #48]	; 0x30
 8005f12:	4b31      	ldr	r3, [pc, #196]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005f14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f16:	f003 0301 	and.w	r3, r3, #1
 8005f1a:	613b      	str	r3, [r7, #16]
 8005f1c:	693b      	ldr	r3, [r7, #16]
 8005f1e:	2380      	movs	r3, #128	; 0x80
 8005f20:	627b      	str	r3, [r7, #36]	; 0x24
 8005f22:	2302      	movs	r3, #2
 8005f24:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f26:	2300      	movs	r3, #0
 8005f28:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005f2a:	2300      	movs	r3, #0
 8005f2c:	633b      	str	r3, [r7, #48]	; 0x30
 8005f2e:	2307      	movs	r3, #7
 8005f30:	637b      	str	r3, [r7, #52]	; 0x34
 8005f32:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005f36:	4619      	mov	r1, r3
 8005f38:	482a      	ldr	r0, [pc, #168]	; (8005fe4 <HAL_UART_MspInit+0x18c>)
 8005f3a:	f001 fc51 	bl	80077e0 <HAL_GPIO_Init>
 8005f3e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005f42:	627b      	str	r3, [r7, #36]	; 0x24
 8005f44:	2302      	movs	r3, #2
 8005f46:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f48:	2300      	movs	r3, #0
 8005f4a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005f4c:	2300      	movs	r3, #0
 8005f4e:	633b      	str	r3, [r7, #48]	; 0x30
 8005f50:	2307      	movs	r3, #7
 8005f52:	637b      	str	r3, [r7, #52]	; 0x34
 8005f54:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005f58:	4619      	mov	r1, r3
 8005f5a:	4823      	ldr	r0, [pc, #140]	; (8005fe8 <HAL_UART_MspInit+0x190>)
 8005f5c:	f001 fc40 	bl	80077e0 <HAL_GPIO_Init>
 8005f60:	2200      	movs	r2, #0
 8005f62:	2105      	movs	r1, #5
 8005f64:	2025      	movs	r0, #37	; 0x25
 8005f66:	f000 fed9 	bl	8006d1c <HAL_NVIC_SetPriority>
 8005f6a:	2025      	movs	r0, #37	; 0x25
 8005f6c:	f000 fef2 	bl	8006d54 <HAL_NVIC_EnableIRQ>
 8005f70:	e02c      	b.n	8005fcc <HAL_UART_MspInit+0x174>
 8005f72:	687b      	ldr	r3, [r7, #4]
 8005f74:	681b      	ldr	r3, [r3, #0]
 8005f76:	4a1d      	ldr	r2, [pc, #116]	; (8005fec <HAL_UART_MspInit+0x194>)
 8005f78:	4293      	cmp	r3, r2
 8005f7a:	d127      	bne.n	8005fcc <HAL_UART_MspInit+0x174>
 8005f7c:	4b16      	ldr	r3, [pc, #88]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005f7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005f80:	4a15      	ldr	r2, [pc, #84]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005f82:	f043 0320 	orr.w	r3, r3, #32
 8005f86:	6453      	str	r3, [r2, #68]	; 0x44
 8005f88:	4b13      	ldr	r3, [pc, #76]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005f8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005f8c:	f003 0320 	and.w	r3, r3, #32
 8005f90:	60fb      	str	r3, [r7, #12]
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	4b10      	ldr	r3, [pc, #64]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005f96:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005f98:	4a0f      	ldr	r2, [pc, #60]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005f9a:	f043 0304 	orr.w	r3, r3, #4
 8005f9e:	6313      	str	r3, [r2, #48]	; 0x30
 8005fa0:	4b0d      	ldr	r3, [pc, #52]	; (8005fd8 <HAL_UART_MspInit+0x180>)
 8005fa2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005fa4:	f003 0304 	and.w	r3, r3, #4
 8005fa8:	60bb      	str	r3, [r7, #8]
 8005faa:	68bb      	ldr	r3, [r7, #8]
 8005fac:	23c0      	movs	r3, #192	; 0xc0
 8005fae:	627b      	str	r3, [r7, #36]	; 0x24
 8005fb0:	2302      	movs	r3, #2
 8005fb2:	62bb      	str	r3, [r7, #40]	; 0x28
 8005fb4:	2300      	movs	r3, #0
 8005fb6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005fb8:	2303      	movs	r3, #3
 8005fba:	633b      	str	r3, [r7, #48]	; 0x30
 8005fbc:	2308      	movs	r3, #8
 8005fbe:	637b      	str	r3, [r7, #52]	; 0x34
 8005fc0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005fc4:	4619      	mov	r1, r3
 8005fc6:	480a      	ldr	r0, [pc, #40]	; (8005ff0 <HAL_UART_MspInit+0x198>)
 8005fc8:	f001 fc0a 	bl	80077e0 <HAL_GPIO_Init>
 8005fcc:	bf00      	nop
 8005fce:	3738      	adds	r7, #56	; 0x38
 8005fd0:	46bd      	mov	sp, r7
 8005fd2:	bd80      	pop	{r7, pc}
 8005fd4:	40007800 	.word	0x40007800
 8005fd8:	40023800 	.word	0x40023800
 8005fdc:	40021400 	.word	0x40021400
 8005fe0:	40011000 	.word	0x40011000
 8005fe4:	40020400 	.word	0x40020400
 8005fe8:	40020000 	.word	0x40020000
 8005fec:	40011400 	.word	0x40011400
 8005ff0:	40020800 	.word	0x40020800

08005ff4 <HAL_FMC_MspInit>:
 8005ff4:	b580      	push	{r7, lr}
 8005ff6:	b086      	sub	sp, #24
 8005ff8:	af00      	add	r7, sp, #0
 8005ffa:	1d3b      	adds	r3, r7, #4
 8005ffc:	2200      	movs	r2, #0
 8005ffe:	601a      	str	r2, [r3, #0]
 8006000:	605a      	str	r2, [r3, #4]
 8006002:	609a      	str	r2, [r3, #8]
 8006004:	60da      	str	r2, [r3, #12]
 8006006:	611a      	str	r2, [r3, #16]
 8006008:	4b3a      	ldr	r3, [pc, #232]	; (80060f4 <HAL_FMC_MspInit+0x100>)
 800600a:	681b      	ldr	r3, [r3, #0]
 800600c:	2b00      	cmp	r3, #0
 800600e:	d16d      	bne.n	80060ec <HAL_FMC_MspInit+0xf8>
 8006010:	4b38      	ldr	r3, [pc, #224]	; (80060f4 <HAL_FMC_MspInit+0x100>)
 8006012:	2201      	movs	r2, #1
 8006014:	601a      	str	r2, [r3, #0]
 8006016:	4b38      	ldr	r3, [pc, #224]	; (80060f8 <HAL_FMC_MspInit+0x104>)
 8006018:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800601a:	4a37      	ldr	r2, [pc, #220]	; (80060f8 <HAL_FMC_MspInit+0x104>)
 800601c:	f043 0301 	orr.w	r3, r3, #1
 8006020:	6393      	str	r3, [r2, #56]	; 0x38
 8006022:	4b35      	ldr	r3, [pc, #212]	; (80060f8 <HAL_FMC_MspInit+0x104>)
 8006024:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006026:	f003 0301 	and.w	r3, r3, #1
 800602a:	603b      	str	r3, [r7, #0]
 800602c:	683b      	ldr	r3, [r7, #0]
 800602e:	f64f 7383 	movw	r3, #65411	; 0xff83
 8006032:	607b      	str	r3, [r7, #4]
 8006034:	2302      	movs	r3, #2
 8006036:	60bb      	str	r3, [r7, #8]
 8006038:	2300      	movs	r3, #0
 800603a:	60fb      	str	r3, [r7, #12]
 800603c:	2303      	movs	r3, #3
 800603e:	613b      	str	r3, [r7, #16]
 8006040:	230c      	movs	r3, #12
 8006042:	617b      	str	r3, [r7, #20]
 8006044:	1d3b      	adds	r3, r7, #4
 8006046:	4619      	mov	r1, r3
 8006048:	482c      	ldr	r0, [pc, #176]	; (80060fc <HAL_FMC_MspInit+0x108>)
 800604a:	f001 fbc9 	bl	80077e0 <HAL_GPIO_Init>
 800604e:	f248 1333 	movw	r3, #33075	; 0x8133
 8006052:	607b      	str	r3, [r7, #4]
 8006054:	2302      	movs	r3, #2
 8006056:	60bb      	str	r3, [r7, #8]
 8006058:	2300      	movs	r3, #0
 800605a:	60fb      	str	r3, [r7, #12]
 800605c:	2303      	movs	r3, #3
 800605e:	613b      	str	r3, [r7, #16]
 8006060:	230c      	movs	r3, #12
 8006062:	617b      	str	r3, [r7, #20]
 8006064:	1d3b      	adds	r3, r7, #4
 8006066:	4619      	mov	r1, r3
 8006068:	4825      	ldr	r0, [pc, #148]	; (8006100 <HAL_FMC_MspInit+0x10c>)
 800606a:	f001 fbb9 	bl	80077e0 <HAL_GPIO_Init>
 800606e:	f24c 7303 	movw	r3, #50947	; 0xc703
 8006072:	607b      	str	r3, [r7, #4]
 8006074:	2302      	movs	r3, #2
 8006076:	60bb      	str	r3, [r7, #8]
 8006078:	2300      	movs	r3, #0
 800607a:	60fb      	str	r3, [r7, #12]
 800607c:	2303      	movs	r3, #3
 800607e:	613b      	str	r3, [r7, #16]
 8006080:	230c      	movs	r3, #12
 8006082:	617b      	str	r3, [r7, #20]
 8006084:	1d3b      	adds	r3, r7, #4
 8006086:	4619      	mov	r1, r3
 8006088:	481e      	ldr	r0, [pc, #120]	; (8006104 <HAL_FMC_MspInit+0x110>)
 800608a:	f001 fba9 	bl	80077e0 <HAL_GPIO_Init>
 800608e:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8006092:	607b      	str	r3, [r7, #4]
 8006094:	2302      	movs	r3, #2
 8006096:	60bb      	str	r3, [r7, #8]
 8006098:	2300      	movs	r3, #0
 800609a:	60fb      	str	r3, [r7, #12]
 800609c:	2303      	movs	r3, #3
 800609e:	613b      	str	r3, [r7, #16]
 80060a0:	230c      	movs	r3, #12
 80060a2:	617b      	str	r3, [r7, #20]
 80060a4:	1d3b      	adds	r3, r7, #4
 80060a6:	4619      	mov	r1, r3
 80060a8:	4817      	ldr	r0, [pc, #92]	; (8006108 <HAL_FMC_MspInit+0x114>)
 80060aa:	f001 fb99 	bl	80077e0 <HAL_GPIO_Init>
 80060ae:	2328      	movs	r3, #40	; 0x28
 80060b0:	607b      	str	r3, [r7, #4]
 80060b2:	2302      	movs	r3, #2
 80060b4:	60bb      	str	r3, [r7, #8]
 80060b6:	2300      	movs	r3, #0
 80060b8:	60fb      	str	r3, [r7, #12]
 80060ba:	2303      	movs	r3, #3
 80060bc:	613b      	str	r3, [r7, #16]
 80060be:	230c      	movs	r3, #12
 80060c0:	617b      	str	r3, [r7, #20]
 80060c2:	1d3b      	adds	r3, r7, #4
 80060c4:	4619      	mov	r1, r3
 80060c6:	4811      	ldr	r0, [pc, #68]	; (800610c <HAL_FMC_MspInit+0x118>)
 80060c8:	f001 fb8a 	bl	80077e0 <HAL_GPIO_Init>
 80060cc:	2308      	movs	r3, #8
 80060ce:	607b      	str	r3, [r7, #4]
 80060d0:	2302      	movs	r3, #2
 80060d2:	60bb      	str	r3, [r7, #8]
 80060d4:	2300      	movs	r3, #0
 80060d6:	60fb      	str	r3, [r7, #12]
 80060d8:	2303      	movs	r3, #3
 80060da:	613b      	str	r3, [r7, #16]
 80060dc:	230c      	movs	r3, #12
 80060de:	617b      	str	r3, [r7, #20]
 80060e0:	1d3b      	adds	r3, r7, #4
 80060e2:	4619      	mov	r1, r3
 80060e4:	480a      	ldr	r0, [pc, #40]	; (8006110 <HAL_FMC_MspInit+0x11c>)
 80060e6:	f001 fb7b 	bl	80077e0 <HAL_GPIO_Init>
 80060ea:	e000      	b.n	80060ee <HAL_FMC_MspInit+0xfa>
 80060ec:	bf00      	nop
 80060ee:	3718      	adds	r7, #24
 80060f0:	46bd      	mov	sp, r7
 80060f2:	bd80      	pop	{r7, pc}
 80060f4:	20001914 	.word	0x20001914
 80060f8:	40023800 	.word	0x40023800
 80060fc:	40021000 	.word	0x40021000
 8006100:	40021800 	.word	0x40021800
 8006104:	40020c00 	.word	0x40020c00
 8006108:	40021400 	.word	0x40021400
 800610c:	40021c00 	.word	0x40021c00
 8006110:	40020800 	.word	0x40020800

08006114 <HAL_SDRAM_MspInit>:
 8006114:	b580      	push	{r7, lr}
 8006116:	b082      	sub	sp, #8
 8006118:	af00      	add	r7, sp, #0
 800611a:	6078      	str	r0, [r7, #4]
 800611c:	f7ff ff6a 	bl	8005ff4 <HAL_FMC_MspInit>
 8006120:	bf00      	nop
 8006122:	3708      	adds	r7, #8
 8006124:	46bd      	mov	sp, r7
 8006126:	bd80      	pop	{r7, pc}

08006128 <HAL_InitTick>:
 8006128:	b580      	push	{r7, lr}
 800612a:	b08c      	sub	sp, #48	; 0x30
 800612c:	af00      	add	r7, sp, #0
 800612e:	6078      	str	r0, [r7, #4]
 8006130:	2300      	movs	r3, #0
 8006132:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006134:	2300      	movs	r3, #0
 8006136:	62bb      	str	r3, [r7, #40]	; 0x28
 8006138:	2200      	movs	r2, #0
 800613a:	6879      	ldr	r1, [r7, #4]
 800613c:	2036      	movs	r0, #54	; 0x36
 800613e:	f000 fded 	bl	8006d1c <HAL_NVIC_SetPriority>
 8006142:	2036      	movs	r0, #54	; 0x36
 8006144:	f000 fe06 	bl	8006d54 <HAL_NVIC_EnableIRQ>
 8006148:	4b1f      	ldr	r3, [pc, #124]	; (80061c8 <HAL_InitTick+0xa0>)
 800614a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800614c:	4a1e      	ldr	r2, [pc, #120]	; (80061c8 <HAL_InitTick+0xa0>)
 800614e:	f043 0310 	orr.w	r3, r3, #16
 8006152:	6413      	str	r3, [r2, #64]	; 0x40
 8006154:	4b1c      	ldr	r3, [pc, #112]	; (80061c8 <HAL_InitTick+0xa0>)
 8006156:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006158:	f003 0310 	and.w	r3, r3, #16
 800615c:	60fb      	str	r3, [r7, #12]
 800615e:	68fb      	ldr	r3, [r7, #12]
 8006160:	f107 0210 	add.w	r2, r7, #16
 8006164:	f107 0314 	add.w	r3, r7, #20
 8006168:	4611      	mov	r1, r2
 800616a:	4618      	mov	r0, r3
 800616c:	f003 fc34 	bl	80099d8 <HAL_RCC_GetClockConfig>
 8006170:	f003 fc0a 	bl	8009988 <HAL_RCC_GetPCLK1Freq>
 8006174:	4603      	mov	r3, r0
 8006176:	005b      	lsls	r3, r3, #1
 8006178:	62fb      	str	r3, [r7, #44]	; 0x2c
 800617a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800617c:	4a13      	ldr	r2, [pc, #76]	; (80061cc <HAL_InitTick+0xa4>)
 800617e:	fba2 2303 	umull	r2, r3, r2, r3
 8006182:	0c9b      	lsrs	r3, r3, #18
 8006184:	3b01      	subs	r3, #1
 8006186:	62bb      	str	r3, [r7, #40]	; 0x28
 8006188:	4b11      	ldr	r3, [pc, #68]	; (80061d0 <HAL_InitTick+0xa8>)
 800618a:	4a12      	ldr	r2, [pc, #72]	; (80061d4 <HAL_InitTick+0xac>)
 800618c:	601a      	str	r2, [r3, #0]
 800618e:	4b10      	ldr	r3, [pc, #64]	; (80061d0 <HAL_InitTick+0xa8>)
 8006190:	f240 32e7 	movw	r2, #999	; 0x3e7
 8006194:	60da      	str	r2, [r3, #12]
 8006196:	4a0e      	ldr	r2, [pc, #56]	; (80061d0 <HAL_InitTick+0xa8>)
 8006198:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800619a:	6053      	str	r3, [r2, #4]
 800619c:	4b0c      	ldr	r3, [pc, #48]	; (80061d0 <HAL_InitTick+0xa8>)
 800619e:	2200      	movs	r2, #0
 80061a0:	611a      	str	r2, [r3, #16]
 80061a2:	4b0b      	ldr	r3, [pc, #44]	; (80061d0 <HAL_InitTick+0xa8>)
 80061a4:	2200      	movs	r2, #0
 80061a6:	609a      	str	r2, [r3, #8]
 80061a8:	4809      	ldr	r0, [pc, #36]	; (80061d0 <HAL_InitTick+0xa8>)
 80061aa:	f004 fd08 	bl	800abbe <HAL_TIM_Base_Init>
 80061ae:	4603      	mov	r3, r0
 80061b0:	2b00      	cmp	r3, #0
 80061b2:	d104      	bne.n	80061be <HAL_InitTick+0x96>
 80061b4:	4806      	ldr	r0, [pc, #24]	; (80061d0 <HAL_InitTick+0xa8>)
 80061b6:	f004 fd2d 	bl	800ac14 <HAL_TIM_Base_Start_IT>
 80061ba:	4603      	mov	r3, r0
 80061bc:	e000      	b.n	80061c0 <HAL_InitTick+0x98>
 80061be:	2301      	movs	r3, #1
 80061c0:	4618      	mov	r0, r3
 80061c2:	3730      	adds	r7, #48	; 0x30
 80061c4:	46bd      	mov	sp, r7
 80061c6:	bd80      	pop	{r7, pc}
 80061c8:	40023800 	.word	0x40023800
 80061cc:	431bde83 	.word	0x431bde83
 80061d0:	2000a10c 	.word	0x2000a10c
 80061d4:	40001000 	.word	0x40001000

080061d8 <NMI_Handler>:
 80061d8:	b480      	push	{r7}
 80061da:	af00      	add	r7, sp, #0
 80061dc:	e7fe      	b.n	80061dc <NMI_Handler+0x4>

080061de <HardFault_Handler>:
 80061de:	b480      	push	{r7}
 80061e0:	af00      	add	r7, sp, #0
 80061e2:	e7fe      	b.n	80061e2 <HardFault_Handler+0x4>

080061e4 <MemManage_Handler>:
 80061e4:	b480      	push	{r7}
 80061e6:	af00      	add	r7, sp, #0
 80061e8:	e7fe      	b.n	80061e8 <MemManage_Handler+0x4>

080061ea <BusFault_Handler>:
 80061ea:	b480      	push	{r7}
 80061ec:	af00      	add	r7, sp, #0
 80061ee:	e7fe      	b.n	80061ee <BusFault_Handler+0x4>

080061f0 <UsageFault_Handler>:
 80061f0:	b480      	push	{r7}
 80061f2:	af00      	add	r7, sp, #0
 80061f4:	e7fe      	b.n	80061f4 <UsageFault_Handler+0x4>

080061f6 <DebugMon_Handler>:
 80061f6:	b480      	push	{r7}
 80061f8:	af00      	add	r7, sp, #0
 80061fa:	bf00      	nop
 80061fc:	46bd      	mov	sp, r7
 80061fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006202:	4770      	bx	lr

08006204 <EXTI9_5_IRQHandler>:
 8006204:	b580      	push	{r7, lr}
 8006206:	af00      	add	r7, sp, #0
 8006208:	2080      	movs	r0, #128	; 0x80
 800620a:	f001 fdcf 	bl	8007dac <HAL_GPIO_EXTI_IRQHandler>
 800620e:	f44f 7080 	mov.w	r0, #256	; 0x100
 8006212:	f001 fdcb 	bl	8007dac <HAL_GPIO_EXTI_IRQHandler>
 8006216:	bf00      	nop
 8006218:	bd80      	pop	{r7, pc}
	...

0800621c <USART1_IRQHandler>:
 800621c:	b580      	push	{r7, lr}
 800621e:	af00      	add	r7, sp, #0
 8006220:	4802      	ldr	r0, [pc, #8]	; (800622c <USART1_IRQHandler+0x10>)
 8006222:	f005 ffa7 	bl	800c174 <HAL_UART_IRQHandler>
 8006226:	bf00      	nop
 8006228:	bd80      	pop	{r7, pc}
 800622a:	bf00      	nop
 800622c:	20009df0 	.word	0x20009df0

08006230 <EXTI15_10_IRQHandler>:
 8006230:	b580      	push	{r7, lr}
 8006232:	af00      	add	r7, sp, #0
 8006234:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8006238:	f001 fdb8 	bl	8007dac <HAL_GPIO_EXTI_IRQHandler>
 800623c:	bf00      	nop
 800623e:	bd80      	pop	{r7, pc}

08006240 <TIM6_DAC_IRQHandler>:
 8006240:	b580      	push	{r7, lr}
 8006242:	af00      	add	r7, sp, #0
 8006244:	4803      	ldr	r0, [pc, #12]	; (8006254 <TIM6_DAC_IRQHandler+0x14>)
 8006246:	f000 fdb5 	bl	8006db4 <HAL_DAC_IRQHandler>
 800624a:	4803      	ldr	r0, [pc, #12]	; (8006258 <TIM6_DAC_IRQHandler+0x18>)
 800624c:	f004 fd41 	bl	800acd2 <HAL_TIM_IRQHandler>
 8006250:	bf00      	nop
 8006252:	bd80      	pop	{r7, pc}
 8006254:	20009e70 	.word	0x20009e70
 8006258:	2000a10c 	.word	0x2000a10c

0800625c <LTDC_IRQHandler>:
 800625c:	b580      	push	{r7, lr}
 800625e:	af00      	add	r7, sp, #0
 8006260:	4802      	ldr	r0, [pc, #8]	; (800626c <LTDC_IRQHandler+0x10>)
 8006262:	f002 fc3b 	bl	8008adc <HAL_LTDC_IRQHandler>
 8006266:	bf00      	nop
 8006268:	bd80      	pop	{r7, pc}
 800626a:	bf00      	nop
 800626c:	20009cb8 	.word	0x20009cb8

08006270 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8006270:	b580      	push	{r7, lr}
 8006272:	b086      	sub	sp, #24
 8006274:	af00      	add	r7, sp, #0
 8006276:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8006278:	4a14      	ldr	r2, [pc, #80]	; (80062cc <_sbrk+0x5c>)
 800627a:	4b15      	ldr	r3, [pc, #84]	; (80062d0 <_sbrk+0x60>)
 800627c:	1ad3      	subs	r3, r2, r3
 800627e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8006280:	697b      	ldr	r3, [r7, #20]
 8006282:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8006284:	4b13      	ldr	r3, [pc, #76]	; (80062d4 <_sbrk+0x64>)
 8006286:	681b      	ldr	r3, [r3, #0]
 8006288:	2b00      	cmp	r3, #0
 800628a:	d102      	bne.n	8006292 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800628c:	4b11      	ldr	r3, [pc, #68]	; (80062d4 <_sbrk+0x64>)
 800628e:	4a12      	ldr	r2, [pc, #72]	; (80062d8 <_sbrk+0x68>)
 8006290:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8006292:	4b10      	ldr	r3, [pc, #64]	; (80062d4 <_sbrk+0x64>)
 8006294:	681a      	ldr	r2, [r3, #0]
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	4413      	add	r3, r2
 800629a:	693a      	ldr	r2, [r7, #16]
 800629c:	429a      	cmp	r2, r3
 800629e:	d207      	bcs.n	80062b0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80062a0:	f009 f8ae 	bl	800f400 <__errno>
 80062a4:	4602      	mov	r2, r0
 80062a6:	230c      	movs	r3, #12
 80062a8:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 80062aa:	f04f 33ff 	mov.w	r3, #4294967295
 80062ae:	e009      	b.n	80062c4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80062b0:	4b08      	ldr	r3, [pc, #32]	; (80062d4 <_sbrk+0x64>)
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80062b6:	4b07      	ldr	r3, [pc, #28]	; (80062d4 <_sbrk+0x64>)
 80062b8:	681a      	ldr	r2, [r3, #0]
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	4413      	add	r3, r2
 80062be:	4a05      	ldr	r2, [pc, #20]	; (80062d4 <_sbrk+0x64>)
 80062c0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80062c2:	68fb      	ldr	r3, [r7, #12]
}
 80062c4:	4618      	mov	r0, r3
 80062c6:	3718      	adds	r7, #24
 80062c8:	46bd      	mov	sp, r7
 80062ca:	bd80      	pop	{r7, pc}
 80062cc:	20050000 	.word	0x20050000
 80062d0:	00000400 	.word	0x00000400
 80062d4:	20001918 	.word	0x20001918
 80062d8:	2000a158 	.word	0x2000a158

080062dc <SystemInit>:
 80062dc:	b480      	push	{r7}
 80062de:	af00      	add	r7, sp, #0
 80062e0:	4b08      	ldr	r3, [pc, #32]	; (8006304 <SystemInit+0x28>)
 80062e2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80062e6:	4a07      	ldr	r2, [pc, #28]	; (8006304 <SystemInit+0x28>)
 80062e8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80062ec:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80062f0:	4b04      	ldr	r3, [pc, #16]	; (8006304 <SystemInit+0x28>)
 80062f2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80062f6:	609a      	str	r2, [r3, #8]
 80062f8:	bf00      	nop
 80062fa:	46bd      	mov	sp, r7
 80062fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006300:	4770      	bx	lr
 8006302:	bf00      	nop
 8006304:	e000ed00 	.word	0xe000ed00

08006308 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8006308:	f8df d034 	ldr.w	sp, [pc, #52]	; 8006340 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800630c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800630e:	e003      	b.n	8006318 <LoopCopyDataInit>

08006310 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8006310:	4b0c      	ldr	r3, [pc, #48]	; (8006344 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8006312:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8006314:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8006316:	3104      	adds	r1, #4

08006318 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8006318:	480b      	ldr	r0, [pc, #44]	; (8006348 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800631a:	4b0c      	ldr	r3, [pc, #48]	; (800634c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800631c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800631e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8006320:	d3f6      	bcc.n	8006310 <CopyDataInit>
  ldr  r2, =_sbss
 8006322:	4a0b      	ldr	r2, [pc, #44]	; (8006350 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8006324:	e002      	b.n	800632c <LoopFillZerobss>

08006326 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8006326:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8006328:	f842 3b04 	str.w	r3, [r2], #4

0800632c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800632c:	4b09      	ldr	r3, [pc, #36]	; (8006354 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800632e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8006330:	d3f9      	bcc.n	8006326 <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8006332:	f7ff ffd3 	bl	80062dc <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8006336:	f009 f869 	bl	800f40c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800633a:	f7fa fc0f 	bl	8000b5c <main>
  bx  lr    
 800633e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8006340:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8006344:	08011df4 	.word	0x08011df4
  ldr  r0, =_sdata
 8006348:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800634c:	20001428 	.word	0x20001428
  ldr  r2, =_sbss
 8006350:	20001428 	.word	0x20001428
  ldr  r3, = _ebss
 8006354:	2000a154 	.word	0x2000a154

08006358 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8006358:	e7fe      	b.n	8006358 <ADC_IRQHandler>

0800635a <HAL_Init>:
 800635a:	b580      	push	{r7, lr}
 800635c:	af00      	add	r7, sp, #0
 800635e:	2003      	movs	r0, #3
 8006360:	f000 fcd1 	bl	8006d06 <HAL_NVIC_SetPriorityGrouping>
 8006364:	2000      	movs	r0, #0
 8006366:	f7ff fedf 	bl	8006128 <HAL_InitTick>
 800636a:	f7ff f9a3 	bl	80056b4 <HAL_MspInit>
 800636e:	2300      	movs	r3, #0
 8006370:	4618      	mov	r0, r3
 8006372:	bd80      	pop	{r7, pc}

08006374 <HAL_IncTick>:
 8006374:	b480      	push	{r7}
 8006376:	af00      	add	r7, sp, #0
 8006378:	4b06      	ldr	r3, [pc, #24]	; (8006394 <HAL_IncTick+0x20>)
 800637a:	781b      	ldrb	r3, [r3, #0]
 800637c:	461a      	mov	r2, r3
 800637e:	4b06      	ldr	r3, [pc, #24]	; (8006398 <HAL_IncTick+0x24>)
 8006380:	681b      	ldr	r3, [r3, #0]
 8006382:	4413      	add	r3, r2
 8006384:	4a04      	ldr	r2, [pc, #16]	; (8006398 <HAL_IncTick+0x24>)
 8006386:	6013      	str	r3, [r2, #0]
 8006388:	bf00      	nop
 800638a:	46bd      	mov	sp, r7
 800638c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006390:	4770      	bx	lr
 8006392:	bf00      	nop
 8006394:	200013bc 	.word	0x200013bc
 8006398:	2000a14c 	.word	0x2000a14c

0800639c <HAL_GetTick>:
 800639c:	b480      	push	{r7}
 800639e:	af00      	add	r7, sp, #0
 80063a0:	4b03      	ldr	r3, [pc, #12]	; (80063b0 <HAL_GetTick+0x14>)
 80063a2:	681b      	ldr	r3, [r3, #0]
 80063a4:	4618      	mov	r0, r3
 80063a6:	46bd      	mov	sp, r7
 80063a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063ac:	4770      	bx	lr
 80063ae:	bf00      	nop
 80063b0:	2000a14c 	.word	0x2000a14c

080063b4 <HAL_Delay>:
 80063b4:	b580      	push	{r7, lr}
 80063b6:	b084      	sub	sp, #16
 80063b8:	af00      	add	r7, sp, #0
 80063ba:	6078      	str	r0, [r7, #4]
 80063bc:	f7ff ffee 	bl	800639c <HAL_GetTick>
 80063c0:	60b8      	str	r0, [r7, #8]
 80063c2:	687b      	ldr	r3, [r7, #4]
 80063c4:	60fb      	str	r3, [r7, #12]
 80063c6:	68fb      	ldr	r3, [r7, #12]
 80063c8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80063cc:	d005      	beq.n	80063da <HAL_Delay+0x26>
 80063ce:	4b09      	ldr	r3, [pc, #36]	; (80063f4 <HAL_Delay+0x40>)
 80063d0:	781b      	ldrb	r3, [r3, #0]
 80063d2:	461a      	mov	r2, r3
 80063d4:	68fb      	ldr	r3, [r7, #12]
 80063d6:	4413      	add	r3, r2
 80063d8:	60fb      	str	r3, [r7, #12]
 80063da:	bf00      	nop
 80063dc:	f7ff ffde 	bl	800639c <HAL_GetTick>
 80063e0:	4602      	mov	r2, r0
 80063e2:	68bb      	ldr	r3, [r7, #8]
 80063e4:	1ad3      	subs	r3, r2, r3
 80063e6:	68fa      	ldr	r2, [r7, #12]
 80063e8:	429a      	cmp	r2, r3
 80063ea:	d8f7      	bhi.n	80063dc <HAL_Delay+0x28>
 80063ec:	bf00      	nop
 80063ee:	3710      	adds	r7, #16
 80063f0:	46bd      	mov	sp, r7
 80063f2:	bd80      	pop	{r7, pc}
 80063f4:	200013bc 	.word	0x200013bc

080063f8 <HAL_ADC_Init>:
 80063f8:	b580      	push	{r7, lr}
 80063fa:	b084      	sub	sp, #16
 80063fc:	af00      	add	r7, sp, #0
 80063fe:	6078      	str	r0, [r7, #4]
 8006400:	2300      	movs	r3, #0
 8006402:	73fb      	strb	r3, [r7, #15]
 8006404:	687b      	ldr	r3, [r7, #4]
 8006406:	2b00      	cmp	r3, #0
 8006408:	d101      	bne.n	800640e <HAL_ADC_Init+0x16>
 800640a:	2301      	movs	r3, #1
 800640c:	e031      	b.n	8006472 <HAL_ADC_Init+0x7a>
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006412:	2b00      	cmp	r3, #0
 8006414:	d109      	bne.n	800642a <HAL_ADC_Init+0x32>
 8006416:	6878      	ldr	r0, [r7, #4]
 8006418:	f7ff f974 	bl	8005704 <HAL_ADC_MspInit>
 800641c:	687b      	ldr	r3, [r7, #4]
 800641e:	2200      	movs	r2, #0
 8006420:	645a      	str	r2, [r3, #68]	; 0x44
 8006422:	687b      	ldr	r3, [r7, #4]
 8006424:	2200      	movs	r2, #0
 8006426:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800642a:	687b      	ldr	r3, [r7, #4]
 800642c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800642e:	f003 0310 	and.w	r3, r3, #16
 8006432:	2b00      	cmp	r3, #0
 8006434:	d116      	bne.n	8006464 <HAL_ADC_Init+0x6c>
 8006436:	687b      	ldr	r3, [r7, #4]
 8006438:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800643a:	4b10      	ldr	r3, [pc, #64]	; (800647c <HAL_ADC_Init+0x84>)
 800643c:	4013      	ands	r3, r2
 800643e:	f043 0202 	orr.w	r2, r3, #2
 8006442:	687b      	ldr	r3, [r7, #4]
 8006444:	641a      	str	r2, [r3, #64]	; 0x40
 8006446:	6878      	ldr	r0, [r7, #4]
 8006448:	f000 fab6 	bl	80069b8 <ADC_Init>
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	2200      	movs	r2, #0
 8006450:	645a      	str	r2, [r3, #68]	; 0x44
 8006452:	687b      	ldr	r3, [r7, #4]
 8006454:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006456:	f023 0303 	bic.w	r3, r3, #3
 800645a:	f043 0201 	orr.w	r2, r3, #1
 800645e:	687b      	ldr	r3, [r7, #4]
 8006460:	641a      	str	r2, [r3, #64]	; 0x40
 8006462:	e001      	b.n	8006468 <HAL_ADC_Init+0x70>
 8006464:	2301      	movs	r3, #1
 8006466:	73fb      	strb	r3, [r7, #15]
 8006468:	687b      	ldr	r3, [r7, #4]
 800646a:	2200      	movs	r2, #0
 800646c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006470:	7bfb      	ldrb	r3, [r7, #15]
 8006472:	4618      	mov	r0, r3
 8006474:	3710      	adds	r7, #16
 8006476:	46bd      	mov	sp, r7
 8006478:	bd80      	pop	{r7, pc}
 800647a:	bf00      	nop
 800647c:	ffffeefd 	.word	0xffffeefd

08006480 <HAL_ADC_Start>:
 8006480:	b480      	push	{r7}
 8006482:	b085      	sub	sp, #20
 8006484:	af00      	add	r7, sp, #0
 8006486:	6078      	str	r0, [r7, #4]
 8006488:	2300      	movs	r3, #0
 800648a:	60fb      	str	r3, [r7, #12]
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006492:	2b01      	cmp	r3, #1
 8006494:	d101      	bne.n	800649a <HAL_ADC_Start+0x1a>
 8006496:	2302      	movs	r3, #2
 8006498:	e0a0      	b.n	80065dc <HAL_ADC_Start+0x15c>
 800649a:	687b      	ldr	r3, [r7, #4]
 800649c:	2201      	movs	r2, #1
 800649e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	681b      	ldr	r3, [r3, #0]
 80064a6:	689b      	ldr	r3, [r3, #8]
 80064a8:	f003 0301 	and.w	r3, r3, #1
 80064ac:	2b01      	cmp	r3, #1
 80064ae:	d018      	beq.n	80064e2 <HAL_ADC_Start+0x62>
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	681b      	ldr	r3, [r3, #0]
 80064b4:	689a      	ldr	r2, [r3, #8]
 80064b6:	687b      	ldr	r3, [r7, #4]
 80064b8:	681b      	ldr	r3, [r3, #0]
 80064ba:	f042 0201 	orr.w	r2, r2, #1
 80064be:	609a      	str	r2, [r3, #8]
 80064c0:	4b49      	ldr	r3, [pc, #292]	; (80065e8 <HAL_ADC_Start+0x168>)
 80064c2:	681b      	ldr	r3, [r3, #0]
 80064c4:	4a49      	ldr	r2, [pc, #292]	; (80065ec <HAL_ADC_Start+0x16c>)
 80064c6:	fba2 2303 	umull	r2, r3, r2, r3
 80064ca:	0c9a      	lsrs	r2, r3, #18
 80064cc:	4613      	mov	r3, r2
 80064ce:	005b      	lsls	r3, r3, #1
 80064d0:	4413      	add	r3, r2
 80064d2:	60fb      	str	r3, [r7, #12]
 80064d4:	e002      	b.n	80064dc <HAL_ADC_Start+0x5c>
 80064d6:	68fb      	ldr	r3, [r7, #12]
 80064d8:	3b01      	subs	r3, #1
 80064da:	60fb      	str	r3, [r7, #12]
 80064dc:	68fb      	ldr	r3, [r7, #12]
 80064de:	2b00      	cmp	r3, #0
 80064e0:	d1f9      	bne.n	80064d6 <HAL_ADC_Start+0x56>
 80064e2:	687b      	ldr	r3, [r7, #4]
 80064e4:	681b      	ldr	r3, [r3, #0]
 80064e6:	689b      	ldr	r3, [r3, #8]
 80064e8:	f003 0301 	and.w	r3, r3, #1
 80064ec:	2b01      	cmp	r3, #1
 80064ee:	d174      	bne.n	80065da <HAL_ADC_Start+0x15a>
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80064f4:	4b3e      	ldr	r3, [pc, #248]	; (80065f0 <HAL_ADC_Start+0x170>)
 80064f6:	4013      	ands	r3, r2
 80064f8:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80064fc:	687b      	ldr	r3, [r7, #4]
 80064fe:	641a      	str	r2, [r3, #64]	; 0x40
 8006500:	687b      	ldr	r3, [r7, #4]
 8006502:	681b      	ldr	r3, [r3, #0]
 8006504:	685b      	ldr	r3, [r3, #4]
 8006506:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800650a:	2b00      	cmp	r3, #0
 800650c:	d007      	beq.n	800651e <HAL_ADC_Start+0x9e>
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006512:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8006516:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	641a      	str	r2, [r3, #64]	; 0x40
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006522:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006526:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800652a:	d106      	bne.n	800653a <HAL_ADC_Start+0xba>
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006530:	f023 0206 	bic.w	r2, r3, #6
 8006534:	687b      	ldr	r3, [r7, #4]
 8006536:	645a      	str	r2, [r3, #68]	; 0x44
 8006538:	e002      	b.n	8006540 <HAL_ADC_Start+0xc0>
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	2200      	movs	r2, #0
 800653e:	645a      	str	r2, [r3, #68]	; 0x44
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	2200      	movs	r2, #0
 8006544:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006548:	687b      	ldr	r3, [r7, #4]
 800654a:	681b      	ldr	r3, [r3, #0]
 800654c:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8006550:	601a      	str	r2, [r3, #0]
 8006552:	4b28      	ldr	r3, [pc, #160]	; (80065f4 <HAL_ADC_Start+0x174>)
 8006554:	685b      	ldr	r3, [r3, #4]
 8006556:	f003 031f 	and.w	r3, r3, #31
 800655a:	2b00      	cmp	r3, #0
 800655c:	d10f      	bne.n	800657e <HAL_ADC_Start+0xfe>
 800655e:	687b      	ldr	r3, [r7, #4]
 8006560:	681b      	ldr	r3, [r3, #0]
 8006562:	689b      	ldr	r3, [r3, #8]
 8006564:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8006568:	2b00      	cmp	r3, #0
 800656a:	d136      	bne.n	80065da <HAL_ADC_Start+0x15a>
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	681b      	ldr	r3, [r3, #0]
 8006570:	689a      	ldr	r2, [r3, #8]
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	681b      	ldr	r3, [r3, #0]
 8006576:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800657a:	609a      	str	r2, [r3, #8]
 800657c:	e02d      	b.n	80065da <HAL_ADC_Start+0x15a>
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	4a1d      	ldr	r2, [pc, #116]	; (80065f8 <HAL_ADC_Start+0x178>)
 8006584:	4293      	cmp	r3, r2
 8006586:	d10e      	bne.n	80065a6 <HAL_ADC_Start+0x126>
 8006588:	687b      	ldr	r3, [r7, #4]
 800658a:	681b      	ldr	r3, [r3, #0]
 800658c:	689b      	ldr	r3, [r3, #8]
 800658e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8006592:	2b00      	cmp	r3, #0
 8006594:	d107      	bne.n	80065a6 <HAL_ADC_Start+0x126>
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	689a      	ldr	r2, [r3, #8]
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80065a4:	609a      	str	r2, [r3, #8]
 80065a6:	4b13      	ldr	r3, [pc, #76]	; (80065f4 <HAL_ADC_Start+0x174>)
 80065a8:	685b      	ldr	r3, [r3, #4]
 80065aa:	f003 0310 	and.w	r3, r3, #16
 80065ae:	2b00      	cmp	r3, #0
 80065b0:	d113      	bne.n	80065da <HAL_ADC_Start+0x15a>
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	681b      	ldr	r3, [r3, #0]
 80065b6:	4a11      	ldr	r2, [pc, #68]	; (80065fc <HAL_ADC_Start+0x17c>)
 80065b8:	4293      	cmp	r3, r2
 80065ba:	d10e      	bne.n	80065da <HAL_ADC_Start+0x15a>
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	681b      	ldr	r3, [r3, #0]
 80065c0:	689b      	ldr	r3, [r3, #8]
 80065c2:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80065c6:	2b00      	cmp	r3, #0
 80065c8:	d107      	bne.n	80065da <HAL_ADC_Start+0x15a>
 80065ca:	687b      	ldr	r3, [r7, #4]
 80065cc:	681b      	ldr	r3, [r3, #0]
 80065ce:	689a      	ldr	r2, [r3, #8]
 80065d0:	687b      	ldr	r3, [r7, #4]
 80065d2:	681b      	ldr	r3, [r3, #0]
 80065d4:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80065d8:	609a      	str	r2, [r3, #8]
 80065da:	2300      	movs	r3, #0
 80065dc:	4618      	mov	r0, r3
 80065de:	3714      	adds	r7, #20
 80065e0:	46bd      	mov	sp, r7
 80065e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065e6:	4770      	bx	lr
 80065e8:	200013b4 	.word	0x200013b4
 80065ec:	431bde83 	.word	0x431bde83
 80065f0:	fffff8fe 	.word	0xfffff8fe
 80065f4:	40012300 	.word	0x40012300
 80065f8:	40012000 	.word	0x40012000
 80065fc:	40012200 	.word	0x40012200

08006600 <HAL_ADC_PollForConversion>:
 8006600:	b580      	push	{r7, lr}
 8006602:	b084      	sub	sp, #16
 8006604:	af00      	add	r7, sp, #0
 8006606:	6078      	str	r0, [r7, #4]
 8006608:	6039      	str	r1, [r7, #0]
 800660a:	2300      	movs	r3, #0
 800660c:	60fb      	str	r3, [r7, #12]
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	681b      	ldr	r3, [r3, #0]
 8006612:	689b      	ldr	r3, [r3, #8]
 8006614:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006618:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800661c:	d113      	bne.n	8006646 <HAL_ADC_PollForConversion+0x46>
 800661e:	687b      	ldr	r3, [r7, #4]
 8006620:	681b      	ldr	r3, [r3, #0]
 8006622:	689b      	ldr	r3, [r3, #8]
 8006624:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006628:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800662c:	d10b      	bne.n	8006646 <HAL_ADC_PollForConversion+0x46>
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006632:	f043 0220 	orr.w	r2, r3, #32
 8006636:	687b      	ldr	r3, [r7, #4]
 8006638:	641a      	str	r2, [r3, #64]	; 0x40
 800663a:	687b      	ldr	r3, [r7, #4]
 800663c:	2200      	movs	r2, #0
 800663e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006642:	2301      	movs	r3, #1
 8006644:	e05c      	b.n	8006700 <HAL_ADC_PollForConversion+0x100>
 8006646:	f7ff fea9 	bl	800639c <HAL_GetTick>
 800664a:	60f8      	str	r0, [r7, #12]
 800664c:	e01a      	b.n	8006684 <HAL_ADC_PollForConversion+0x84>
 800664e:	683b      	ldr	r3, [r7, #0]
 8006650:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006654:	d016      	beq.n	8006684 <HAL_ADC_PollForConversion+0x84>
 8006656:	683b      	ldr	r3, [r7, #0]
 8006658:	2b00      	cmp	r3, #0
 800665a:	d007      	beq.n	800666c <HAL_ADC_PollForConversion+0x6c>
 800665c:	f7ff fe9e 	bl	800639c <HAL_GetTick>
 8006660:	4602      	mov	r2, r0
 8006662:	68fb      	ldr	r3, [r7, #12]
 8006664:	1ad3      	subs	r3, r2, r3
 8006666:	683a      	ldr	r2, [r7, #0]
 8006668:	429a      	cmp	r2, r3
 800666a:	d20b      	bcs.n	8006684 <HAL_ADC_PollForConversion+0x84>
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006670:	f043 0204 	orr.w	r2, r3, #4
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	641a      	str	r2, [r3, #64]	; 0x40
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	2200      	movs	r2, #0
 800667c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006680:	2303      	movs	r3, #3
 8006682:	e03d      	b.n	8006700 <HAL_ADC_PollForConversion+0x100>
 8006684:	687b      	ldr	r3, [r7, #4]
 8006686:	681b      	ldr	r3, [r3, #0]
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	f003 0302 	and.w	r3, r3, #2
 800668e:	2b02      	cmp	r3, #2
 8006690:	d1dd      	bne.n	800664e <HAL_ADC_PollForConversion+0x4e>
 8006692:	687b      	ldr	r3, [r7, #4]
 8006694:	681b      	ldr	r3, [r3, #0]
 8006696:	f06f 0212 	mvn.w	r2, #18
 800669a:	601a      	str	r2, [r3, #0]
 800669c:	687b      	ldr	r3, [r7, #4]
 800669e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066a0:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80066a4:	687b      	ldr	r3, [r7, #4]
 80066a6:	641a      	str	r2, [r3, #64]	; 0x40
 80066a8:	687b      	ldr	r3, [r7, #4]
 80066aa:	681b      	ldr	r3, [r3, #0]
 80066ac:	689b      	ldr	r3, [r3, #8]
 80066ae:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80066b2:	2b00      	cmp	r3, #0
 80066b4:	d123      	bne.n	80066fe <HAL_ADC_PollForConversion+0xfe>
 80066b6:	687b      	ldr	r3, [r7, #4]
 80066b8:	699b      	ldr	r3, [r3, #24]
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	d11f      	bne.n	80066fe <HAL_ADC_PollForConversion+0xfe>
 80066be:	687b      	ldr	r3, [r7, #4]
 80066c0:	681b      	ldr	r3, [r3, #0]
 80066c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80066c4:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 80066c8:	2b00      	cmp	r3, #0
 80066ca:	d006      	beq.n	80066da <HAL_ADC_PollForConversion+0xda>
 80066cc:	687b      	ldr	r3, [r7, #4]
 80066ce:	681b      	ldr	r3, [r3, #0]
 80066d0:	689b      	ldr	r3, [r3, #8]
 80066d2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80066d6:	2b00      	cmp	r3, #0
 80066d8:	d111      	bne.n	80066fe <HAL_ADC_PollForConversion+0xfe>
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066de:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80066e2:	687b      	ldr	r3, [r7, #4]
 80066e4:	641a      	str	r2, [r3, #64]	; 0x40
 80066e6:	687b      	ldr	r3, [r7, #4]
 80066e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066ea:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80066ee:	2b00      	cmp	r3, #0
 80066f0:	d105      	bne.n	80066fe <HAL_ADC_PollForConversion+0xfe>
 80066f2:	687b      	ldr	r3, [r7, #4]
 80066f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80066f6:	f043 0201 	orr.w	r2, r3, #1
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	641a      	str	r2, [r3, #64]	; 0x40
 80066fe:	2300      	movs	r3, #0
 8006700:	4618      	mov	r0, r3
 8006702:	3710      	adds	r7, #16
 8006704:	46bd      	mov	sp, r7
 8006706:	bd80      	pop	{r7, pc}

08006708 <HAL_ADC_GetValue>:
 8006708:	b480      	push	{r7}
 800670a:	b083      	sub	sp, #12
 800670c:	af00      	add	r7, sp, #0
 800670e:	6078      	str	r0, [r7, #4]
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	681b      	ldr	r3, [r3, #0]
 8006714:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006716:	4618      	mov	r0, r3
 8006718:	370c      	adds	r7, #12
 800671a:	46bd      	mov	sp, r7
 800671c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006720:	4770      	bx	lr
	...

08006724 <HAL_ADC_ConfigChannel>:
 8006724:	b480      	push	{r7}
 8006726:	b085      	sub	sp, #20
 8006728:	af00      	add	r7, sp, #0
 800672a:	6078      	str	r0, [r7, #4]
 800672c:	6039      	str	r1, [r7, #0]
 800672e:	2300      	movs	r3, #0
 8006730:	60fb      	str	r3, [r7, #12]
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006738:	2b01      	cmp	r3, #1
 800673a:	d101      	bne.n	8006740 <HAL_ADC_ConfigChannel+0x1c>
 800673c:	2302      	movs	r3, #2
 800673e:	e12a      	b.n	8006996 <HAL_ADC_ConfigChannel+0x272>
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	2201      	movs	r2, #1
 8006744:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006748:	683b      	ldr	r3, [r7, #0]
 800674a:	681b      	ldr	r3, [r3, #0]
 800674c:	2b09      	cmp	r3, #9
 800674e:	d93a      	bls.n	80067c6 <HAL_ADC_ConfigChannel+0xa2>
 8006750:	683b      	ldr	r3, [r7, #0]
 8006752:	681b      	ldr	r3, [r3, #0]
 8006754:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8006758:	d035      	beq.n	80067c6 <HAL_ADC_ConfigChannel+0xa2>
 800675a:	687b      	ldr	r3, [r7, #4]
 800675c:	681b      	ldr	r3, [r3, #0]
 800675e:	68d9      	ldr	r1, [r3, #12]
 8006760:	683b      	ldr	r3, [r7, #0]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	b29b      	uxth	r3, r3
 8006766:	461a      	mov	r2, r3
 8006768:	4613      	mov	r3, r2
 800676a:	005b      	lsls	r3, r3, #1
 800676c:	4413      	add	r3, r2
 800676e:	3b1e      	subs	r3, #30
 8006770:	2207      	movs	r2, #7
 8006772:	fa02 f303 	lsl.w	r3, r2, r3
 8006776:	43da      	mvns	r2, r3
 8006778:	687b      	ldr	r3, [r7, #4]
 800677a:	681b      	ldr	r3, [r3, #0]
 800677c:	400a      	ands	r2, r1
 800677e:	60da      	str	r2, [r3, #12]
 8006780:	683b      	ldr	r3, [r7, #0]
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	4a87      	ldr	r2, [pc, #540]	; (80069a4 <HAL_ADC_ConfigChannel+0x280>)
 8006786:	4293      	cmp	r3, r2
 8006788:	d10a      	bne.n	80067a0 <HAL_ADC_ConfigChannel+0x7c>
 800678a:	687b      	ldr	r3, [r7, #4]
 800678c:	681b      	ldr	r3, [r3, #0]
 800678e:	68d9      	ldr	r1, [r3, #12]
 8006790:	683b      	ldr	r3, [r7, #0]
 8006792:	689b      	ldr	r3, [r3, #8]
 8006794:	061a      	lsls	r2, r3, #24
 8006796:	687b      	ldr	r3, [r7, #4]
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	430a      	orrs	r2, r1
 800679c:	60da      	str	r2, [r3, #12]
 800679e:	e035      	b.n	800680c <HAL_ADC_ConfigChannel+0xe8>
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	681b      	ldr	r3, [r3, #0]
 80067a4:	68d9      	ldr	r1, [r3, #12]
 80067a6:	683b      	ldr	r3, [r7, #0]
 80067a8:	689a      	ldr	r2, [r3, #8]
 80067aa:	683b      	ldr	r3, [r7, #0]
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	b29b      	uxth	r3, r3
 80067b0:	4618      	mov	r0, r3
 80067b2:	4603      	mov	r3, r0
 80067b4:	005b      	lsls	r3, r3, #1
 80067b6:	4403      	add	r3, r0
 80067b8:	3b1e      	subs	r3, #30
 80067ba:	409a      	lsls	r2, r3
 80067bc:	687b      	ldr	r3, [r7, #4]
 80067be:	681b      	ldr	r3, [r3, #0]
 80067c0:	430a      	orrs	r2, r1
 80067c2:	60da      	str	r2, [r3, #12]
 80067c4:	e022      	b.n	800680c <HAL_ADC_ConfigChannel+0xe8>
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	6919      	ldr	r1, [r3, #16]
 80067cc:	683b      	ldr	r3, [r7, #0]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	b29b      	uxth	r3, r3
 80067d2:	461a      	mov	r2, r3
 80067d4:	4613      	mov	r3, r2
 80067d6:	005b      	lsls	r3, r3, #1
 80067d8:	4413      	add	r3, r2
 80067da:	2207      	movs	r2, #7
 80067dc:	fa02 f303 	lsl.w	r3, r2, r3
 80067e0:	43da      	mvns	r2, r3
 80067e2:	687b      	ldr	r3, [r7, #4]
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	400a      	ands	r2, r1
 80067e8:	611a      	str	r2, [r3, #16]
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	681b      	ldr	r3, [r3, #0]
 80067ee:	6919      	ldr	r1, [r3, #16]
 80067f0:	683b      	ldr	r3, [r7, #0]
 80067f2:	689a      	ldr	r2, [r3, #8]
 80067f4:	683b      	ldr	r3, [r7, #0]
 80067f6:	681b      	ldr	r3, [r3, #0]
 80067f8:	b29b      	uxth	r3, r3
 80067fa:	4618      	mov	r0, r3
 80067fc:	4603      	mov	r3, r0
 80067fe:	005b      	lsls	r3, r3, #1
 8006800:	4403      	add	r3, r0
 8006802:	409a      	lsls	r2, r3
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	681b      	ldr	r3, [r3, #0]
 8006808:	430a      	orrs	r2, r1
 800680a:	611a      	str	r2, [r3, #16]
 800680c:	683b      	ldr	r3, [r7, #0]
 800680e:	685b      	ldr	r3, [r3, #4]
 8006810:	2b06      	cmp	r3, #6
 8006812:	d824      	bhi.n	800685e <HAL_ADC_ConfigChannel+0x13a>
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	681b      	ldr	r3, [r3, #0]
 8006818:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800681a:	683b      	ldr	r3, [r7, #0]
 800681c:	685a      	ldr	r2, [r3, #4]
 800681e:	4613      	mov	r3, r2
 8006820:	009b      	lsls	r3, r3, #2
 8006822:	4413      	add	r3, r2
 8006824:	3b05      	subs	r3, #5
 8006826:	221f      	movs	r2, #31
 8006828:	fa02 f303 	lsl.w	r3, r2, r3
 800682c:	43da      	mvns	r2, r3
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	400a      	ands	r2, r1
 8006834:	635a      	str	r2, [r3, #52]	; 0x34
 8006836:	687b      	ldr	r3, [r7, #4]
 8006838:	681b      	ldr	r3, [r3, #0]
 800683a:	6b59      	ldr	r1, [r3, #52]	; 0x34
 800683c:	683b      	ldr	r3, [r7, #0]
 800683e:	681b      	ldr	r3, [r3, #0]
 8006840:	b29b      	uxth	r3, r3
 8006842:	4618      	mov	r0, r3
 8006844:	683b      	ldr	r3, [r7, #0]
 8006846:	685a      	ldr	r2, [r3, #4]
 8006848:	4613      	mov	r3, r2
 800684a:	009b      	lsls	r3, r3, #2
 800684c:	4413      	add	r3, r2
 800684e:	3b05      	subs	r3, #5
 8006850:	fa00 f203 	lsl.w	r2, r0, r3
 8006854:	687b      	ldr	r3, [r7, #4]
 8006856:	681b      	ldr	r3, [r3, #0]
 8006858:	430a      	orrs	r2, r1
 800685a:	635a      	str	r2, [r3, #52]	; 0x34
 800685c:	e04c      	b.n	80068f8 <HAL_ADC_ConfigChannel+0x1d4>
 800685e:	683b      	ldr	r3, [r7, #0]
 8006860:	685b      	ldr	r3, [r3, #4]
 8006862:	2b0c      	cmp	r3, #12
 8006864:	d824      	bhi.n	80068b0 <HAL_ADC_ConfigChannel+0x18c>
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800686c:	683b      	ldr	r3, [r7, #0]
 800686e:	685a      	ldr	r2, [r3, #4]
 8006870:	4613      	mov	r3, r2
 8006872:	009b      	lsls	r3, r3, #2
 8006874:	4413      	add	r3, r2
 8006876:	3b23      	subs	r3, #35	; 0x23
 8006878:	221f      	movs	r2, #31
 800687a:	fa02 f303 	lsl.w	r3, r2, r3
 800687e:	43da      	mvns	r2, r3
 8006880:	687b      	ldr	r3, [r7, #4]
 8006882:	681b      	ldr	r3, [r3, #0]
 8006884:	400a      	ands	r2, r1
 8006886:	631a      	str	r2, [r3, #48]	; 0x30
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	681b      	ldr	r3, [r3, #0]
 800688c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800688e:	683b      	ldr	r3, [r7, #0]
 8006890:	681b      	ldr	r3, [r3, #0]
 8006892:	b29b      	uxth	r3, r3
 8006894:	4618      	mov	r0, r3
 8006896:	683b      	ldr	r3, [r7, #0]
 8006898:	685a      	ldr	r2, [r3, #4]
 800689a:	4613      	mov	r3, r2
 800689c:	009b      	lsls	r3, r3, #2
 800689e:	4413      	add	r3, r2
 80068a0:	3b23      	subs	r3, #35	; 0x23
 80068a2:	fa00 f203 	lsl.w	r2, r0, r3
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	681b      	ldr	r3, [r3, #0]
 80068aa:	430a      	orrs	r2, r1
 80068ac:	631a      	str	r2, [r3, #48]	; 0x30
 80068ae:	e023      	b.n	80068f8 <HAL_ADC_ConfigChannel+0x1d4>
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	681b      	ldr	r3, [r3, #0]
 80068b4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80068b6:	683b      	ldr	r3, [r7, #0]
 80068b8:	685a      	ldr	r2, [r3, #4]
 80068ba:	4613      	mov	r3, r2
 80068bc:	009b      	lsls	r3, r3, #2
 80068be:	4413      	add	r3, r2
 80068c0:	3b41      	subs	r3, #65	; 0x41
 80068c2:	221f      	movs	r2, #31
 80068c4:	fa02 f303 	lsl.w	r3, r2, r3
 80068c8:	43da      	mvns	r2, r3
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	400a      	ands	r2, r1
 80068d0:	62da      	str	r2, [r3, #44]	; 0x2c
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	681b      	ldr	r3, [r3, #0]
 80068d6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80068d8:	683b      	ldr	r3, [r7, #0]
 80068da:	681b      	ldr	r3, [r3, #0]
 80068dc:	b29b      	uxth	r3, r3
 80068de:	4618      	mov	r0, r3
 80068e0:	683b      	ldr	r3, [r7, #0]
 80068e2:	685a      	ldr	r2, [r3, #4]
 80068e4:	4613      	mov	r3, r2
 80068e6:	009b      	lsls	r3, r3, #2
 80068e8:	4413      	add	r3, r2
 80068ea:	3b41      	subs	r3, #65	; 0x41
 80068ec:	fa00 f203 	lsl.w	r2, r0, r3
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	430a      	orrs	r2, r1
 80068f6:	62da      	str	r2, [r3, #44]	; 0x2c
 80068f8:	687b      	ldr	r3, [r7, #4]
 80068fa:	681b      	ldr	r3, [r3, #0]
 80068fc:	4a2a      	ldr	r2, [pc, #168]	; (80069a8 <HAL_ADC_ConfigChannel+0x284>)
 80068fe:	4293      	cmp	r3, r2
 8006900:	d10a      	bne.n	8006918 <HAL_ADC_ConfigChannel+0x1f4>
 8006902:	683b      	ldr	r3, [r7, #0]
 8006904:	681b      	ldr	r3, [r3, #0]
 8006906:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800690a:	d105      	bne.n	8006918 <HAL_ADC_ConfigChannel+0x1f4>
 800690c:	4b27      	ldr	r3, [pc, #156]	; (80069ac <HAL_ADC_ConfigChannel+0x288>)
 800690e:	685b      	ldr	r3, [r3, #4]
 8006910:	4a26      	ldr	r2, [pc, #152]	; (80069ac <HAL_ADC_ConfigChannel+0x288>)
 8006912:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8006916:	6053      	str	r3, [r2, #4]
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	681b      	ldr	r3, [r3, #0]
 800691c:	4a22      	ldr	r2, [pc, #136]	; (80069a8 <HAL_ADC_ConfigChannel+0x284>)
 800691e:	4293      	cmp	r3, r2
 8006920:	d109      	bne.n	8006936 <HAL_ADC_ConfigChannel+0x212>
 8006922:	683b      	ldr	r3, [r7, #0]
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	2b12      	cmp	r3, #18
 8006928:	d105      	bne.n	8006936 <HAL_ADC_ConfigChannel+0x212>
 800692a:	4b20      	ldr	r3, [pc, #128]	; (80069ac <HAL_ADC_ConfigChannel+0x288>)
 800692c:	685b      	ldr	r3, [r3, #4]
 800692e:	4a1f      	ldr	r2, [pc, #124]	; (80069ac <HAL_ADC_ConfigChannel+0x288>)
 8006930:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8006934:	6053      	str	r3, [r2, #4]
 8006936:	687b      	ldr	r3, [r7, #4]
 8006938:	681b      	ldr	r3, [r3, #0]
 800693a:	4a1b      	ldr	r2, [pc, #108]	; (80069a8 <HAL_ADC_ConfigChannel+0x284>)
 800693c:	4293      	cmp	r3, r2
 800693e:	d125      	bne.n	800698c <HAL_ADC_ConfigChannel+0x268>
 8006940:	683b      	ldr	r3, [r7, #0]
 8006942:	681b      	ldr	r3, [r3, #0]
 8006944:	4a17      	ldr	r2, [pc, #92]	; (80069a4 <HAL_ADC_ConfigChannel+0x280>)
 8006946:	4293      	cmp	r3, r2
 8006948:	d003      	beq.n	8006952 <HAL_ADC_ConfigChannel+0x22e>
 800694a:	683b      	ldr	r3, [r7, #0]
 800694c:	681b      	ldr	r3, [r3, #0]
 800694e:	2b11      	cmp	r3, #17
 8006950:	d11c      	bne.n	800698c <HAL_ADC_ConfigChannel+0x268>
 8006952:	4b16      	ldr	r3, [pc, #88]	; (80069ac <HAL_ADC_ConfigChannel+0x288>)
 8006954:	685b      	ldr	r3, [r3, #4]
 8006956:	4a15      	ldr	r2, [pc, #84]	; (80069ac <HAL_ADC_ConfigChannel+0x288>)
 8006958:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800695c:	6053      	str	r3, [r2, #4]
 800695e:	683b      	ldr	r3, [r7, #0]
 8006960:	681b      	ldr	r3, [r3, #0]
 8006962:	4a10      	ldr	r2, [pc, #64]	; (80069a4 <HAL_ADC_ConfigChannel+0x280>)
 8006964:	4293      	cmp	r3, r2
 8006966:	d111      	bne.n	800698c <HAL_ADC_ConfigChannel+0x268>
 8006968:	4b11      	ldr	r3, [pc, #68]	; (80069b0 <HAL_ADC_ConfigChannel+0x28c>)
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	4a11      	ldr	r2, [pc, #68]	; (80069b4 <HAL_ADC_ConfigChannel+0x290>)
 800696e:	fba2 2303 	umull	r2, r3, r2, r3
 8006972:	0c9a      	lsrs	r2, r3, #18
 8006974:	4613      	mov	r3, r2
 8006976:	009b      	lsls	r3, r3, #2
 8006978:	4413      	add	r3, r2
 800697a:	005b      	lsls	r3, r3, #1
 800697c:	60fb      	str	r3, [r7, #12]
 800697e:	e002      	b.n	8006986 <HAL_ADC_ConfigChannel+0x262>
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	3b01      	subs	r3, #1
 8006984:	60fb      	str	r3, [r7, #12]
 8006986:	68fb      	ldr	r3, [r7, #12]
 8006988:	2b00      	cmp	r3, #0
 800698a:	d1f9      	bne.n	8006980 <HAL_ADC_ConfigChannel+0x25c>
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	2200      	movs	r2, #0
 8006990:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006994:	2300      	movs	r3, #0
 8006996:	4618      	mov	r0, r3
 8006998:	3714      	adds	r7, #20
 800699a:	46bd      	mov	sp, r7
 800699c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069a0:	4770      	bx	lr
 80069a2:	bf00      	nop
 80069a4:	10000012 	.word	0x10000012
 80069a8:	40012000 	.word	0x40012000
 80069ac:	40012300 	.word	0x40012300
 80069b0:	200013b4 	.word	0x200013b4
 80069b4:	431bde83 	.word	0x431bde83

080069b8 <ADC_Init>:
 80069b8:	b480      	push	{r7}
 80069ba:	b083      	sub	sp, #12
 80069bc:	af00      	add	r7, sp, #0
 80069be:	6078      	str	r0, [r7, #4]
 80069c0:	4b78      	ldr	r3, [pc, #480]	; (8006ba4 <ADC_Init+0x1ec>)
 80069c2:	685b      	ldr	r3, [r3, #4]
 80069c4:	4a77      	ldr	r2, [pc, #476]	; (8006ba4 <ADC_Init+0x1ec>)
 80069c6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80069ca:	6053      	str	r3, [r2, #4]
 80069cc:	4b75      	ldr	r3, [pc, #468]	; (8006ba4 <ADC_Init+0x1ec>)
 80069ce:	685a      	ldr	r2, [r3, #4]
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	685b      	ldr	r3, [r3, #4]
 80069d4:	4973      	ldr	r1, [pc, #460]	; (8006ba4 <ADC_Init+0x1ec>)
 80069d6:	4313      	orrs	r3, r2
 80069d8:	604b      	str	r3, [r1, #4]
 80069da:	687b      	ldr	r3, [r7, #4]
 80069dc:	681b      	ldr	r3, [r3, #0]
 80069de:	685a      	ldr	r2, [r3, #4]
 80069e0:	687b      	ldr	r3, [r7, #4]
 80069e2:	681b      	ldr	r3, [r3, #0]
 80069e4:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80069e8:	605a      	str	r2, [r3, #4]
 80069ea:	687b      	ldr	r3, [r7, #4]
 80069ec:	681b      	ldr	r3, [r3, #0]
 80069ee:	6859      	ldr	r1, [r3, #4]
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	691b      	ldr	r3, [r3, #16]
 80069f4:	021a      	lsls	r2, r3, #8
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	681b      	ldr	r3, [r3, #0]
 80069fa:	430a      	orrs	r2, r1
 80069fc:	605a      	str	r2, [r3, #4]
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	681b      	ldr	r3, [r3, #0]
 8006a02:	685a      	ldr	r2, [r3, #4]
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	681b      	ldr	r3, [r3, #0]
 8006a08:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8006a0c:	605a      	str	r2, [r3, #4]
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	681b      	ldr	r3, [r3, #0]
 8006a12:	6859      	ldr	r1, [r3, #4]
 8006a14:	687b      	ldr	r3, [r7, #4]
 8006a16:	689a      	ldr	r2, [r3, #8]
 8006a18:	687b      	ldr	r3, [r7, #4]
 8006a1a:	681b      	ldr	r3, [r3, #0]
 8006a1c:	430a      	orrs	r2, r1
 8006a1e:	605a      	str	r2, [r3, #4]
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	681b      	ldr	r3, [r3, #0]
 8006a24:	689a      	ldr	r2, [r3, #8]
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	681b      	ldr	r3, [r3, #0]
 8006a2a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006a2e:	609a      	str	r2, [r3, #8]
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	681b      	ldr	r3, [r3, #0]
 8006a34:	6899      	ldr	r1, [r3, #8]
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	68da      	ldr	r2, [r3, #12]
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	681b      	ldr	r3, [r3, #0]
 8006a3e:	430a      	orrs	r2, r1
 8006a40:	609a      	str	r2, [r3, #8]
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006a46:	4a58      	ldr	r2, [pc, #352]	; (8006ba8 <ADC_Init+0x1f0>)
 8006a48:	4293      	cmp	r3, r2
 8006a4a:	d022      	beq.n	8006a92 <ADC_Init+0xda>
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	681b      	ldr	r3, [r3, #0]
 8006a50:	689a      	ldr	r2, [r3, #8]
 8006a52:	687b      	ldr	r3, [r7, #4]
 8006a54:	681b      	ldr	r3, [r3, #0]
 8006a56:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006a5a:	609a      	str	r2, [r3, #8]
 8006a5c:	687b      	ldr	r3, [r7, #4]
 8006a5e:	681b      	ldr	r3, [r3, #0]
 8006a60:	6899      	ldr	r1, [r3, #8]
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8006a66:	687b      	ldr	r3, [r7, #4]
 8006a68:	681b      	ldr	r3, [r3, #0]
 8006a6a:	430a      	orrs	r2, r1
 8006a6c:	609a      	str	r2, [r3, #8]
 8006a6e:	687b      	ldr	r3, [r7, #4]
 8006a70:	681b      	ldr	r3, [r3, #0]
 8006a72:	689a      	ldr	r2, [r3, #8]
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	681b      	ldr	r3, [r3, #0]
 8006a78:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006a7c:	609a      	str	r2, [r3, #8]
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	681b      	ldr	r3, [r3, #0]
 8006a82:	6899      	ldr	r1, [r3, #8]
 8006a84:	687b      	ldr	r3, [r7, #4]
 8006a86:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	681b      	ldr	r3, [r3, #0]
 8006a8c:	430a      	orrs	r2, r1
 8006a8e:	609a      	str	r2, [r3, #8]
 8006a90:	e00f      	b.n	8006ab2 <ADC_Init+0xfa>
 8006a92:	687b      	ldr	r3, [r7, #4]
 8006a94:	681b      	ldr	r3, [r3, #0]
 8006a96:	689a      	ldr	r2, [r3, #8]
 8006a98:	687b      	ldr	r3, [r7, #4]
 8006a9a:	681b      	ldr	r3, [r3, #0]
 8006a9c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8006aa0:	609a      	str	r2, [r3, #8]
 8006aa2:	687b      	ldr	r3, [r7, #4]
 8006aa4:	681b      	ldr	r3, [r3, #0]
 8006aa6:	689a      	ldr	r2, [r3, #8]
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	681b      	ldr	r3, [r3, #0]
 8006aac:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006ab0:	609a      	str	r2, [r3, #8]
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	681b      	ldr	r3, [r3, #0]
 8006ab6:	689a      	ldr	r2, [r3, #8]
 8006ab8:	687b      	ldr	r3, [r7, #4]
 8006aba:	681b      	ldr	r3, [r3, #0]
 8006abc:	f022 0202 	bic.w	r2, r2, #2
 8006ac0:	609a      	str	r2, [r3, #8]
 8006ac2:	687b      	ldr	r3, [r7, #4]
 8006ac4:	681b      	ldr	r3, [r3, #0]
 8006ac6:	6899      	ldr	r1, [r3, #8]
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	699b      	ldr	r3, [r3, #24]
 8006acc:	005a      	lsls	r2, r3, #1
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	681b      	ldr	r3, [r3, #0]
 8006ad2:	430a      	orrs	r2, r1
 8006ad4:	609a      	str	r2, [r3, #8]
 8006ad6:	687b      	ldr	r3, [r7, #4]
 8006ad8:	f893 3020 	ldrb.w	r3, [r3, #32]
 8006adc:	2b00      	cmp	r3, #0
 8006ade:	d01b      	beq.n	8006b18 <ADC_Init+0x160>
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	681b      	ldr	r3, [r3, #0]
 8006ae4:	685a      	ldr	r2, [r3, #4]
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	681b      	ldr	r3, [r3, #0]
 8006aea:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006aee:	605a      	str	r2, [r3, #4]
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	685a      	ldr	r2, [r3, #4]
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	681b      	ldr	r3, [r3, #0]
 8006afa:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8006afe:	605a      	str	r2, [r3, #4]
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	681b      	ldr	r3, [r3, #0]
 8006b04:	6859      	ldr	r1, [r3, #4]
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b0a:	3b01      	subs	r3, #1
 8006b0c:	035a      	lsls	r2, r3, #13
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	681b      	ldr	r3, [r3, #0]
 8006b12:	430a      	orrs	r2, r1
 8006b14:	605a      	str	r2, [r3, #4]
 8006b16:	e007      	b.n	8006b28 <ADC_Init+0x170>
 8006b18:	687b      	ldr	r3, [r7, #4]
 8006b1a:	681b      	ldr	r3, [r3, #0]
 8006b1c:	685a      	ldr	r2, [r3, #4]
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	681b      	ldr	r3, [r3, #0]
 8006b22:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006b26:	605a      	str	r2, [r3, #4]
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	681b      	ldr	r3, [r3, #0]
 8006b2c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006b2e:	687b      	ldr	r3, [r7, #4]
 8006b30:	681b      	ldr	r3, [r3, #0]
 8006b32:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8006b36:	62da      	str	r2, [r3, #44]	; 0x2c
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	69db      	ldr	r3, [r3, #28]
 8006b42:	3b01      	subs	r3, #1
 8006b44:	051a      	lsls	r2, r3, #20
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	430a      	orrs	r2, r1
 8006b4c:	62da      	str	r2, [r3, #44]	; 0x2c
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	681b      	ldr	r3, [r3, #0]
 8006b52:	689a      	ldr	r2, [r3, #8]
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	681b      	ldr	r3, [r3, #0]
 8006b58:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006b5c:	609a      	str	r2, [r3, #8]
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	681b      	ldr	r3, [r3, #0]
 8006b62:	6899      	ldr	r1, [r3, #8]
 8006b64:	687b      	ldr	r3, [r7, #4]
 8006b66:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8006b6a:	025a      	lsls	r2, r3, #9
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	681b      	ldr	r3, [r3, #0]
 8006b70:	430a      	orrs	r2, r1
 8006b72:	609a      	str	r2, [r3, #8]
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	689a      	ldr	r2, [r3, #8]
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	681b      	ldr	r3, [r3, #0]
 8006b7e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b82:	609a      	str	r2, [r3, #8]
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	681b      	ldr	r3, [r3, #0]
 8006b88:	6899      	ldr	r1, [r3, #8]
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	695b      	ldr	r3, [r3, #20]
 8006b8e:	029a      	lsls	r2, r3, #10
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	681b      	ldr	r3, [r3, #0]
 8006b94:	430a      	orrs	r2, r1
 8006b96:	609a      	str	r2, [r3, #8]
 8006b98:	bf00      	nop
 8006b9a:	370c      	adds	r7, #12
 8006b9c:	46bd      	mov	sp, r7
 8006b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ba2:	4770      	bx	lr
 8006ba4:	40012300 	.word	0x40012300
 8006ba8:	0f000001 	.word	0x0f000001

08006bac <__NVIC_SetPriorityGrouping>:
 8006bac:	b480      	push	{r7}
 8006bae:	b085      	sub	sp, #20
 8006bb0:	af00      	add	r7, sp, #0
 8006bb2:	6078      	str	r0, [r7, #4]
 8006bb4:	687b      	ldr	r3, [r7, #4]
 8006bb6:	f003 0307 	and.w	r3, r3, #7
 8006bba:	60fb      	str	r3, [r7, #12]
 8006bbc:	4b0b      	ldr	r3, [pc, #44]	; (8006bec <__NVIC_SetPriorityGrouping+0x40>)
 8006bbe:	68db      	ldr	r3, [r3, #12]
 8006bc0:	60bb      	str	r3, [r7, #8]
 8006bc2:	68ba      	ldr	r2, [r7, #8]
 8006bc4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8006bc8:	4013      	ands	r3, r2
 8006bca:	60bb      	str	r3, [r7, #8]
 8006bcc:	68fb      	ldr	r3, [r7, #12]
 8006bce:	021a      	lsls	r2, r3, #8
 8006bd0:	68bb      	ldr	r3, [r7, #8]
 8006bd2:	431a      	orrs	r2, r3
 8006bd4:	4b06      	ldr	r3, [pc, #24]	; (8006bf0 <__NVIC_SetPriorityGrouping+0x44>)
 8006bd6:	4313      	orrs	r3, r2
 8006bd8:	60bb      	str	r3, [r7, #8]
 8006bda:	4a04      	ldr	r2, [pc, #16]	; (8006bec <__NVIC_SetPriorityGrouping+0x40>)
 8006bdc:	68bb      	ldr	r3, [r7, #8]
 8006bde:	60d3      	str	r3, [r2, #12]
 8006be0:	bf00      	nop
 8006be2:	3714      	adds	r7, #20
 8006be4:	46bd      	mov	sp, r7
 8006be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006bea:	4770      	bx	lr
 8006bec:	e000ed00 	.word	0xe000ed00
 8006bf0:	05fa0000 	.word	0x05fa0000

08006bf4 <__NVIC_GetPriorityGrouping>:
 8006bf4:	b480      	push	{r7}
 8006bf6:	af00      	add	r7, sp, #0
 8006bf8:	4b04      	ldr	r3, [pc, #16]	; (8006c0c <__NVIC_GetPriorityGrouping+0x18>)
 8006bfa:	68db      	ldr	r3, [r3, #12]
 8006bfc:	0a1b      	lsrs	r3, r3, #8
 8006bfe:	f003 0307 	and.w	r3, r3, #7
 8006c02:	4618      	mov	r0, r3
 8006c04:	46bd      	mov	sp, r7
 8006c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c0a:	4770      	bx	lr
 8006c0c:	e000ed00 	.word	0xe000ed00

08006c10 <__NVIC_EnableIRQ>:
 8006c10:	b480      	push	{r7}
 8006c12:	b083      	sub	sp, #12
 8006c14:	af00      	add	r7, sp, #0
 8006c16:	4603      	mov	r3, r0
 8006c18:	71fb      	strb	r3, [r7, #7]
 8006c1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006c1e:	2b00      	cmp	r3, #0
 8006c20:	db0b      	blt.n	8006c3a <__NVIC_EnableIRQ+0x2a>
 8006c22:	79fb      	ldrb	r3, [r7, #7]
 8006c24:	f003 021f 	and.w	r2, r3, #31
 8006c28:	4907      	ldr	r1, [pc, #28]	; (8006c48 <__NVIC_EnableIRQ+0x38>)
 8006c2a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006c2e:	095b      	lsrs	r3, r3, #5
 8006c30:	2001      	movs	r0, #1
 8006c32:	fa00 f202 	lsl.w	r2, r0, r2
 8006c36:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006c3a:	bf00      	nop
 8006c3c:	370c      	adds	r7, #12
 8006c3e:	46bd      	mov	sp, r7
 8006c40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c44:	4770      	bx	lr
 8006c46:	bf00      	nop
 8006c48:	e000e100 	.word	0xe000e100

08006c4c <__NVIC_SetPriority>:
 8006c4c:	b480      	push	{r7}
 8006c4e:	b083      	sub	sp, #12
 8006c50:	af00      	add	r7, sp, #0
 8006c52:	4603      	mov	r3, r0
 8006c54:	6039      	str	r1, [r7, #0]
 8006c56:	71fb      	strb	r3, [r7, #7]
 8006c58:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006c5c:	2b00      	cmp	r3, #0
 8006c5e:	db0a      	blt.n	8006c76 <__NVIC_SetPriority+0x2a>
 8006c60:	683b      	ldr	r3, [r7, #0]
 8006c62:	b2da      	uxtb	r2, r3
 8006c64:	490c      	ldr	r1, [pc, #48]	; (8006c98 <__NVIC_SetPriority+0x4c>)
 8006c66:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006c6a:	0112      	lsls	r2, r2, #4
 8006c6c:	b2d2      	uxtb	r2, r2
 8006c6e:	440b      	add	r3, r1
 8006c70:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8006c74:	e00a      	b.n	8006c8c <__NVIC_SetPriority+0x40>
 8006c76:	683b      	ldr	r3, [r7, #0]
 8006c78:	b2da      	uxtb	r2, r3
 8006c7a:	4908      	ldr	r1, [pc, #32]	; (8006c9c <__NVIC_SetPriority+0x50>)
 8006c7c:	79fb      	ldrb	r3, [r7, #7]
 8006c7e:	f003 030f 	and.w	r3, r3, #15
 8006c82:	3b04      	subs	r3, #4
 8006c84:	0112      	lsls	r2, r2, #4
 8006c86:	b2d2      	uxtb	r2, r2
 8006c88:	440b      	add	r3, r1
 8006c8a:	761a      	strb	r2, [r3, #24]
 8006c8c:	bf00      	nop
 8006c8e:	370c      	adds	r7, #12
 8006c90:	46bd      	mov	sp, r7
 8006c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c96:	4770      	bx	lr
 8006c98:	e000e100 	.word	0xe000e100
 8006c9c:	e000ed00 	.word	0xe000ed00

08006ca0 <NVIC_EncodePriority>:
 8006ca0:	b480      	push	{r7}
 8006ca2:	b089      	sub	sp, #36	; 0x24
 8006ca4:	af00      	add	r7, sp, #0
 8006ca6:	60f8      	str	r0, [r7, #12]
 8006ca8:	60b9      	str	r1, [r7, #8]
 8006caa:	607a      	str	r2, [r7, #4]
 8006cac:	68fb      	ldr	r3, [r7, #12]
 8006cae:	f003 0307 	and.w	r3, r3, #7
 8006cb2:	61fb      	str	r3, [r7, #28]
 8006cb4:	69fb      	ldr	r3, [r7, #28]
 8006cb6:	f1c3 0307 	rsb	r3, r3, #7
 8006cba:	2b04      	cmp	r3, #4
 8006cbc:	bf28      	it	cs
 8006cbe:	2304      	movcs	r3, #4
 8006cc0:	61bb      	str	r3, [r7, #24]
 8006cc2:	69fb      	ldr	r3, [r7, #28]
 8006cc4:	3304      	adds	r3, #4
 8006cc6:	2b06      	cmp	r3, #6
 8006cc8:	d902      	bls.n	8006cd0 <NVIC_EncodePriority+0x30>
 8006cca:	69fb      	ldr	r3, [r7, #28]
 8006ccc:	3b03      	subs	r3, #3
 8006cce:	e000      	b.n	8006cd2 <NVIC_EncodePriority+0x32>
 8006cd0:	2300      	movs	r3, #0
 8006cd2:	617b      	str	r3, [r7, #20]
 8006cd4:	f04f 32ff 	mov.w	r2, #4294967295
 8006cd8:	69bb      	ldr	r3, [r7, #24]
 8006cda:	fa02 f303 	lsl.w	r3, r2, r3
 8006cde:	43da      	mvns	r2, r3
 8006ce0:	68bb      	ldr	r3, [r7, #8]
 8006ce2:	401a      	ands	r2, r3
 8006ce4:	697b      	ldr	r3, [r7, #20]
 8006ce6:	409a      	lsls	r2, r3
 8006ce8:	f04f 31ff 	mov.w	r1, #4294967295
 8006cec:	697b      	ldr	r3, [r7, #20]
 8006cee:	fa01 f303 	lsl.w	r3, r1, r3
 8006cf2:	43d9      	mvns	r1, r3
 8006cf4:	687b      	ldr	r3, [r7, #4]
 8006cf6:	400b      	ands	r3, r1
 8006cf8:	4313      	orrs	r3, r2
 8006cfa:	4618      	mov	r0, r3
 8006cfc:	3724      	adds	r7, #36	; 0x24
 8006cfe:	46bd      	mov	sp, r7
 8006d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d04:	4770      	bx	lr

08006d06 <HAL_NVIC_SetPriorityGrouping>:
 8006d06:	b580      	push	{r7, lr}
 8006d08:	b082      	sub	sp, #8
 8006d0a:	af00      	add	r7, sp, #0
 8006d0c:	6078      	str	r0, [r7, #4]
 8006d0e:	6878      	ldr	r0, [r7, #4]
 8006d10:	f7ff ff4c 	bl	8006bac <__NVIC_SetPriorityGrouping>
 8006d14:	bf00      	nop
 8006d16:	3708      	adds	r7, #8
 8006d18:	46bd      	mov	sp, r7
 8006d1a:	bd80      	pop	{r7, pc}

08006d1c <HAL_NVIC_SetPriority>:
 8006d1c:	b580      	push	{r7, lr}
 8006d1e:	b086      	sub	sp, #24
 8006d20:	af00      	add	r7, sp, #0
 8006d22:	4603      	mov	r3, r0
 8006d24:	60b9      	str	r1, [r7, #8]
 8006d26:	607a      	str	r2, [r7, #4]
 8006d28:	73fb      	strb	r3, [r7, #15]
 8006d2a:	2300      	movs	r3, #0
 8006d2c:	617b      	str	r3, [r7, #20]
 8006d2e:	f7ff ff61 	bl	8006bf4 <__NVIC_GetPriorityGrouping>
 8006d32:	6178      	str	r0, [r7, #20]
 8006d34:	687a      	ldr	r2, [r7, #4]
 8006d36:	68b9      	ldr	r1, [r7, #8]
 8006d38:	6978      	ldr	r0, [r7, #20]
 8006d3a:	f7ff ffb1 	bl	8006ca0 <NVIC_EncodePriority>
 8006d3e:	4602      	mov	r2, r0
 8006d40:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8006d44:	4611      	mov	r1, r2
 8006d46:	4618      	mov	r0, r3
 8006d48:	f7ff ff80 	bl	8006c4c <__NVIC_SetPriority>
 8006d4c:	bf00      	nop
 8006d4e:	3718      	adds	r7, #24
 8006d50:	46bd      	mov	sp, r7
 8006d52:	bd80      	pop	{r7, pc}

08006d54 <HAL_NVIC_EnableIRQ>:
 8006d54:	b580      	push	{r7, lr}
 8006d56:	b082      	sub	sp, #8
 8006d58:	af00      	add	r7, sp, #0
 8006d5a:	4603      	mov	r3, r0
 8006d5c:	71fb      	strb	r3, [r7, #7]
 8006d5e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006d62:	4618      	mov	r0, r3
 8006d64:	f7ff ff54 	bl	8006c10 <__NVIC_EnableIRQ>
 8006d68:	bf00      	nop
 8006d6a:	3708      	adds	r7, #8
 8006d6c:	46bd      	mov	sp, r7
 8006d6e:	bd80      	pop	{r7, pc}

08006d70 <HAL_DAC_Init>:
 8006d70:	b580      	push	{r7, lr}
 8006d72:	b082      	sub	sp, #8
 8006d74:	af00      	add	r7, sp, #0
 8006d76:	6078      	str	r0, [r7, #4]
 8006d78:	687b      	ldr	r3, [r7, #4]
 8006d7a:	2b00      	cmp	r3, #0
 8006d7c:	d101      	bne.n	8006d82 <HAL_DAC_Init+0x12>
 8006d7e:	2301      	movs	r3, #1
 8006d80:	e014      	b.n	8006dac <HAL_DAC_Init+0x3c>
 8006d82:	687b      	ldr	r3, [r7, #4]
 8006d84:	791b      	ldrb	r3, [r3, #4]
 8006d86:	b2db      	uxtb	r3, r3
 8006d88:	2b00      	cmp	r3, #0
 8006d8a:	d105      	bne.n	8006d98 <HAL_DAC_Init+0x28>
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	2200      	movs	r2, #0
 8006d90:	715a      	strb	r2, [r3, #5]
 8006d92:	6878      	ldr	r0, [r7, #4]
 8006d94:	f7fe fd24 	bl	80057e0 <HAL_DAC_MspInit>
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	2202      	movs	r2, #2
 8006d9c:	711a      	strb	r2, [r3, #4]
 8006d9e:	687b      	ldr	r3, [r7, #4]
 8006da0:	2200      	movs	r2, #0
 8006da2:	611a      	str	r2, [r3, #16]
 8006da4:	687b      	ldr	r3, [r7, #4]
 8006da6:	2201      	movs	r2, #1
 8006da8:	711a      	strb	r2, [r3, #4]
 8006daa:	2300      	movs	r3, #0
 8006dac:	4618      	mov	r0, r3
 8006dae:	3708      	adds	r7, #8
 8006db0:	46bd      	mov	sp, r7
 8006db2:	bd80      	pop	{r7, pc}

08006db4 <HAL_DAC_IRQHandler>:
 8006db4:	b580      	push	{r7, lr}
 8006db6:	b082      	sub	sp, #8
 8006db8:	af00      	add	r7, sp, #0
 8006dba:	6078      	str	r0, [r7, #4]
 8006dbc:	687b      	ldr	r3, [r7, #4]
 8006dbe:	681b      	ldr	r3, [r3, #0]
 8006dc0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006dc2:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8006dc6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006dca:	d118      	bne.n	8006dfe <HAL_DAC_IRQHandler+0x4a>
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	2204      	movs	r2, #4
 8006dd0:	711a      	strb	r2, [r3, #4]
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	691b      	ldr	r3, [r3, #16]
 8006dd6:	f043 0201 	orr.w	r2, r3, #1
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	611a      	str	r2, [r3, #16]
 8006dde:	687b      	ldr	r3, [r7, #4]
 8006de0:	681b      	ldr	r3, [r3, #0]
 8006de2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8006de6:	635a      	str	r2, [r3, #52]	; 0x34
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	681b      	ldr	r3, [r3, #0]
 8006dec:	681a      	ldr	r2, [r3, #0]
 8006dee:	687b      	ldr	r3, [r7, #4]
 8006df0:	681b      	ldr	r3, [r3, #0]
 8006df2:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8006df6:	601a      	str	r2, [r3, #0]
 8006df8:	6878      	ldr	r0, [r7, #4]
 8006dfa:	f000 f825 	bl	8006e48 <HAL_DAC_DMAUnderrunCallbackCh1>
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	681b      	ldr	r3, [r3, #0]
 8006e02:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e04:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006e08:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8006e0c:	d118      	bne.n	8006e40 <HAL_DAC_IRQHandler+0x8c>
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	2204      	movs	r2, #4
 8006e12:	711a      	strb	r2, [r3, #4]
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	691b      	ldr	r3, [r3, #16]
 8006e18:	f043 0202 	orr.w	r2, r3, #2
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	611a      	str	r2, [r3, #16]
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	681b      	ldr	r3, [r3, #0]
 8006e24:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8006e28:	635a      	str	r2, [r3, #52]	; 0x34
 8006e2a:	687b      	ldr	r3, [r7, #4]
 8006e2c:	681b      	ldr	r3, [r3, #0]
 8006e2e:	681a      	ldr	r2, [r3, #0]
 8006e30:	687b      	ldr	r3, [r7, #4]
 8006e32:	681b      	ldr	r3, [r3, #0]
 8006e34:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8006e38:	601a      	str	r2, [r3, #0]
 8006e3a:	6878      	ldr	r0, [r7, #4]
 8006e3c:	f000 f85b 	bl	8006ef6 <HAL_DACEx_DMAUnderrunCallbackCh2>
 8006e40:	bf00      	nop
 8006e42:	3708      	adds	r7, #8
 8006e44:	46bd      	mov	sp, r7
 8006e46:	bd80      	pop	{r7, pc}

08006e48 <HAL_DAC_DMAUnderrunCallbackCh1>:
 8006e48:	b480      	push	{r7}
 8006e4a:	b083      	sub	sp, #12
 8006e4c:	af00      	add	r7, sp, #0
 8006e4e:	6078      	str	r0, [r7, #4]
 8006e50:	bf00      	nop
 8006e52:	370c      	adds	r7, #12
 8006e54:	46bd      	mov	sp, r7
 8006e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e5a:	4770      	bx	lr

08006e5c <HAL_DAC_ConfigChannel>:
 8006e5c:	b480      	push	{r7}
 8006e5e:	b087      	sub	sp, #28
 8006e60:	af00      	add	r7, sp, #0
 8006e62:	60f8      	str	r0, [r7, #12]
 8006e64:	60b9      	str	r1, [r7, #8]
 8006e66:	607a      	str	r2, [r7, #4]
 8006e68:	2300      	movs	r3, #0
 8006e6a:	617b      	str	r3, [r7, #20]
 8006e6c:	2300      	movs	r3, #0
 8006e6e:	613b      	str	r3, [r7, #16]
 8006e70:	68fb      	ldr	r3, [r7, #12]
 8006e72:	795b      	ldrb	r3, [r3, #5]
 8006e74:	2b01      	cmp	r3, #1
 8006e76:	d101      	bne.n	8006e7c <HAL_DAC_ConfigChannel+0x20>
 8006e78:	2302      	movs	r3, #2
 8006e7a:	e036      	b.n	8006eea <HAL_DAC_ConfigChannel+0x8e>
 8006e7c:	68fb      	ldr	r3, [r7, #12]
 8006e7e:	2201      	movs	r2, #1
 8006e80:	715a      	strb	r2, [r3, #5]
 8006e82:	68fb      	ldr	r3, [r7, #12]
 8006e84:	2202      	movs	r2, #2
 8006e86:	711a      	strb	r2, [r3, #4]
 8006e88:	68fb      	ldr	r3, [r7, #12]
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	617b      	str	r3, [r7, #20]
 8006e90:	f640 72fe 	movw	r2, #4094	; 0xffe
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	fa02 f303 	lsl.w	r3, r2, r3
 8006e9a:	43db      	mvns	r3, r3
 8006e9c:	697a      	ldr	r2, [r7, #20]
 8006e9e:	4013      	ands	r3, r2
 8006ea0:	617b      	str	r3, [r7, #20]
 8006ea2:	68bb      	ldr	r3, [r7, #8]
 8006ea4:	681a      	ldr	r2, [r3, #0]
 8006ea6:	68bb      	ldr	r3, [r7, #8]
 8006ea8:	685b      	ldr	r3, [r3, #4]
 8006eaa:	4313      	orrs	r3, r2
 8006eac:	613b      	str	r3, [r7, #16]
 8006eae:	693a      	ldr	r2, [r7, #16]
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	fa02 f303 	lsl.w	r3, r2, r3
 8006eb6:	697a      	ldr	r2, [r7, #20]
 8006eb8:	4313      	orrs	r3, r2
 8006eba:	617b      	str	r3, [r7, #20]
 8006ebc:	68fb      	ldr	r3, [r7, #12]
 8006ebe:	681b      	ldr	r3, [r3, #0]
 8006ec0:	697a      	ldr	r2, [r7, #20]
 8006ec2:	601a      	str	r2, [r3, #0]
 8006ec4:	68fb      	ldr	r3, [r7, #12]
 8006ec6:	681b      	ldr	r3, [r3, #0]
 8006ec8:	6819      	ldr	r1, [r3, #0]
 8006eca:	22c0      	movs	r2, #192	; 0xc0
 8006ecc:	687b      	ldr	r3, [r7, #4]
 8006ece:	fa02 f303 	lsl.w	r3, r2, r3
 8006ed2:	43da      	mvns	r2, r3
 8006ed4:	68fb      	ldr	r3, [r7, #12]
 8006ed6:	681b      	ldr	r3, [r3, #0]
 8006ed8:	400a      	ands	r2, r1
 8006eda:	601a      	str	r2, [r3, #0]
 8006edc:	68fb      	ldr	r3, [r7, #12]
 8006ede:	2201      	movs	r2, #1
 8006ee0:	711a      	strb	r2, [r3, #4]
 8006ee2:	68fb      	ldr	r3, [r7, #12]
 8006ee4:	2200      	movs	r2, #0
 8006ee6:	715a      	strb	r2, [r3, #5]
 8006ee8:	2300      	movs	r3, #0
 8006eea:	4618      	mov	r0, r3
 8006eec:	371c      	adds	r7, #28
 8006eee:	46bd      	mov	sp, r7
 8006ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ef4:	4770      	bx	lr

08006ef6 <HAL_DACEx_DMAUnderrunCallbackCh2>:
 8006ef6:	b480      	push	{r7}
 8006ef8:	b083      	sub	sp, #12
 8006efa:	af00      	add	r7, sp, #0
 8006efc:	6078      	str	r0, [r7, #4]
 8006efe:	bf00      	nop
 8006f00:	370c      	adds	r7, #12
 8006f02:	46bd      	mov	sp, r7
 8006f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f08:	4770      	bx	lr
	...

08006f0c <HAL_DMA_Init>:
 8006f0c:	b580      	push	{r7, lr}
 8006f0e:	b086      	sub	sp, #24
 8006f10:	af00      	add	r7, sp, #0
 8006f12:	6078      	str	r0, [r7, #4]
 8006f14:	2300      	movs	r3, #0
 8006f16:	617b      	str	r3, [r7, #20]
 8006f18:	f7ff fa40 	bl	800639c <HAL_GetTick>
 8006f1c:	6138      	str	r0, [r7, #16]
 8006f1e:	687b      	ldr	r3, [r7, #4]
 8006f20:	2b00      	cmp	r3, #0
 8006f22:	d101      	bne.n	8006f28 <HAL_DMA_Init+0x1c>
 8006f24:	2301      	movs	r3, #1
 8006f26:	e099      	b.n	800705c <HAL_DMA_Init+0x150>
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	2200      	movs	r2, #0
 8006f2c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	2202      	movs	r2, #2
 8006f34:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	681b      	ldr	r3, [r3, #0]
 8006f3c:	681a      	ldr	r2, [r3, #0]
 8006f3e:	687b      	ldr	r3, [r7, #4]
 8006f40:	681b      	ldr	r3, [r3, #0]
 8006f42:	f022 0201 	bic.w	r2, r2, #1
 8006f46:	601a      	str	r2, [r3, #0]
 8006f48:	e00f      	b.n	8006f6a <HAL_DMA_Init+0x5e>
 8006f4a:	f7ff fa27 	bl	800639c <HAL_GetTick>
 8006f4e:	4602      	mov	r2, r0
 8006f50:	693b      	ldr	r3, [r7, #16]
 8006f52:	1ad3      	subs	r3, r2, r3
 8006f54:	2b05      	cmp	r3, #5
 8006f56:	d908      	bls.n	8006f6a <HAL_DMA_Init+0x5e>
 8006f58:	687b      	ldr	r3, [r7, #4]
 8006f5a:	2220      	movs	r2, #32
 8006f5c:	655a      	str	r2, [r3, #84]	; 0x54
 8006f5e:	687b      	ldr	r3, [r7, #4]
 8006f60:	2203      	movs	r2, #3
 8006f62:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006f66:	2303      	movs	r3, #3
 8006f68:	e078      	b.n	800705c <HAL_DMA_Init+0x150>
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	681b      	ldr	r3, [r3, #0]
 8006f6e:	681b      	ldr	r3, [r3, #0]
 8006f70:	f003 0301 	and.w	r3, r3, #1
 8006f74:	2b00      	cmp	r3, #0
 8006f76:	d1e8      	bne.n	8006f4a <HAL_DMA_Init+0x3e>
 8006f78:	687b      	ldr	r3, [r7, #4]
 8006f7a:	681b      	ldr	r3, [r3, #0]
 8006f7c:	681b      	ldr	r3, [r3, #0]
 8006f7e:	617b      	str	r3, [r7, #20]
 8006f80:	697a      	ldr	r2, [r7, #20]
 8006f82:	4b38      	ldr	r3, [pc, #224]	; (8007064 <HAL_DMA_Init+0x158>)
 8006f84:	4013      	ands	r3, r2
 8006f86:	617b      	str	r3, [r7, #20]
 8006f88:	687b      	ldr	r3, [r7, #4]
 8006f8a:	685a      	ldr	r2, [r3, #4]
 8006f8c:	687b      	ldr	r3, [r7, #4]
 8006f8e:	689b      	ldr	r3, [r3, #8]
 8006f90:	431a      	orrs	r2, r3
 8006f92:	687b      	ldr	r3, [r7, #4]
 8006f94:	68db      	ldr	r3, [r3, #12]
 8006f96:	431a      	orrs	r2, r3
 8006f98:	687b      	ldr	r3, [r7, #4]
 8006f9a:	691b      	ldr	r3, [r3, #16]
 8006f9c:	431a      	orrs	r2, r3
 8006f9e:	687b      	ldr	r3, [r7, #4]
 8006fa0:	695b      	ldr	r3, [r3, #20]
 8006fa2:	431a      	orrs	r2, r3
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	699b      	ldr	r3, [r3, #24]
 8006fa8:	431a      	orrs	r2, r3
 8006faa:	687b      	ldr	r3, [r7, #4]
 8006fac:	69db      	ldr	r3, [r3, #28]
 8006fae:	431a      	orrs	r2, r3
 8006fb0:	687b      	ldr	r3, [r7, #4]
 8006fb2:	6a1b      	ldr	r3, [r3, #32]
 8006fb4:	4313      	orrs	r3, r2
 8006fb6:	697a      	ldr	r2, [r7, #20]
 8006fb8:	4313      	orrs	r3, r2
 8006fba:	617b      	str	r3, [r7, #20]
 8006fbc:	687b      	ldr	r3, [r7, #4]
 8006fbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006fc0:	2b04      	cmp	r3, #4
 8006fc2:	d107      	bne.n	8006fd4 <HAL_DMA_Init+0xc8>
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006fc8:	687b      	ldr	r3, [r7, #4]
 8006fca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006fcc:	4313      	orrs	r3, r2
 8006fce:	697a      	ldr	r2, [r7, #20]
 8006fd0:	4313      	orrs	r3, r2
 8006fd2:	617b      	str	r3, [r7, #20]
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	681b      	ldr	r3, [r3, #0]
 8006fd8:	697a      	ldr	r2, [r7, #20]
 8006fda:	601a      	str	r2, [r3, #0]
 8006fdc:	687b      	ldr	r3, [r7, #4]
 8006fde:	681b      	ldr	r3, [r3, #0]
 8006fe0:	695b      	ldr	r3, [r3, #20]
 8006fe2:	617b      	str	r3, [r7, #20]
 8006fe4:	697b      	ldr	r3, [r7, #20]
 8006fe6:	f023 0307 	bic.w	r3, r3, #7
 8006fea:	617b      	str	r3, [r7, #20]
 8006fec:	687b      	ldr	r3, [r7, #4]
 8006fee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ff0:	697a      	ldr	r2, [r7, #20]
 8006ff2:	4313      	orrs	r3, r2
 8006ff4:	617b      	str	r3, [r7, #20]
 8006ff6:	687b      	ldr	r3, [r7, #4]
 8006ff8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ffa:	2b04      	cmp	r3, #4
 8006ffc:	d117      	bne.n	800702e <HAL_DMA_Init+0x122>
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007002:	697a      	ldr	r2, [r7, #20]
 8007004:	4313      	orrs	r3, r2
 8007006:	617b      	str	r3, [r7, #20]
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800700c:	2b00      	cmp	r3, #0
 800700e:	d00e      	beq.n	800702e <HAL_DMA_Init+0x122>
 8007010:	6878      	ldr	r0, [r7, #4]
 8007012:	f000 f8df 	bl	80071d4 <DMA_CheckFifoParam>
 8007016:	4603      	mov	r3, r0
 8007018:	2b00      	cmp	r3, #0
 800701a:	d008      	beq.n	800702e <HAL_DMA_Init+0x122>
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	2240      	movs	r2, #64	; 0x40
 8007020:	655a      	str	r2, [r3, #84]	; 0x54
 8007022:	687b      	ldr	r3, [r7, #4]
 8007024:	2201      	movs	r2, #1
 8007026:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800702a:	2301      	movs	r3, #1
 800702c:	e016      	b.n	800705c <HAL_DMA_Init+0x150>
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	681b      	ldr	r3, [r3, #0]
 8007032:	697a      	ldr	r2, [r7, #20]
 8007034:	615a      	str	r2, [r3, #20]
 8007036:	6878      	ldr	r0, [r7, #4]
 8007038:	f000 f896 	bl	8007168 <DMA_CalcBaseAndBitshift>
 800703c:	4603      	mov	r3, r0
 800703e:	60fb      	str	r3, [r7, #12]
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8007044:	223f      	movs	r2, #63	; 0x3f
 8007046:	409a      	lsls	r2, r3
 8007048:	68fb      	ldr	r3, [r7, #12]
 800704a:	609a      	str	r2, [r3, #8]
 800704c:	687b      	ldr	r3, [r7, #4]
 800704e:	2200      	movs	r2, #0
 8007050:	655a      	str	r2, [r3, #84]	; 0x54
 8007052:	687b      	ldr	r3, [r7, #4]
 8007054:	2201      	movs	r2, #1
 8007056:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800705a:	2300      	movs	r3, #0
 800705c:	4618      	mov	r0, r3
 800705e:	3718      	adds	r7, #24
 8007060:	46bd      	mov	sp, r7
 8007062:	bd80      	pop	{r7, pc}
 8007064:	f010803f 	.word	0xf010803f

08007068 <HAL_DMA_DeInit>:
 8007068:	b580      	push	{r7, lr}
 800706a:	b084      	sub	sp, #16
 800706c:	af00      	add	r7, sp, #0
 800706e:	6078      	str	r0, [r7, #4]
 8007070:	687b      	ldr	r3, [r7, #4]
 8007072:	2b00      	cmp	r3, #0
 8007074:	d101      	bne.n	800707a <HAL_DMA_DeInit+0x12>
 8007076:	2301      	movs	r3, #1
 8007078:	e050      	b.n	800711c <HAL_DMA_DeInit+0xb4>
 800707a:	687b      	ldr	r3, [r7, #4]
 800707c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007080:	b2db      	uxtb	r3, r3
 8007082:	2b02      	cmp	r3, #2
 8007084:	d101      	bne.n	800708a <HAL_DMA_DeInit+0x22>
 8007086:	2302      	movs	r3, #2
 8007088:	e048      	b.n	800711c <HAL_DMA_DeInit+0xb4>
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	681a      	ldr	r2, [r3, #0]
 8007090:	687b      	ldr	r3, [r7, #4]
 8007092:	681b      	ldr	r3, [r3, #0]
 8007094:	f022 0201 	bic.w	r2, r2, #1
 8007098:	601a      	str	r2, [r3, #0]
 800709a:	687b      	ldr	r3, [r7, #4]
 800709c:	681b      	ldr	r3, [r3, #0]
 800709e:	2200      	movs	r2, #0
 80070a0:	601a      	str	r2, [r3, #0]
 80070a2:	687b      	ldr	r3, [r7, #4]
 80070a4:	681b      	ldr	r3, [r3, #0]
 80070a6:	2200      	movs	r2, #0
 80070a8:	605a      	str	r2, [r3, #4]
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	2200      	movs	r2, #0
 80070b0:	609a      	str	r2, [r3, #8]
 80070b2:	687b      	ldr	r3, [r7, #4]
 80070b4:	681b      	ldr	r3, [r3, #0]
 80070b6:	2200      	movs	r2, #0
 80070b8:	60da      	str	r2, [r3, #12]
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	2200      	movs	r2, #0
 80070c0:	611a      	str	r2, [r3, #16]
 80070c2:	687b      	ldr	r3, [r7, #4]
 80070c4:	681b      	ldr	r3, [r3, #0]
 80070c6:	2221      	movs	r2, #33	; 0x21
 80070c8:	615a      	str	r2, [r3, #20]
 80070ca:	6878      	ldr	r0, [r7, #4]
 80070cc:	f000 f84c 	bl	8007168 <DMA_CalcBaseAndBitshift>
 80070d0:	4603      	mov	r3, r0
 80070d2:	60fb      	str	r3, [r7, #12]
 80070d4:	687b      	ldr	r3, [r7, #4]
 80070d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80070d8:	223f      	movs	r2, #63	; 0x3f
 80070da:	409a      	lsls	r2, r3
 80070dc:	68fb      	ldr	r3, [r7, #12]
 80070de:	609a      	str	r2, [r3, #8]
 80070e0:	687b      	ldr	r3, [r7, #4]
 80070e2:	2200      	movs	r2, #0
 80070e4:	63da      	str	r2, [r3, #60]	; 0x3c
 80070e6:	687b      	ldr	r3, [r7, #4]
 80070e8:	2200      	movs	r2, #0
 80070ea:	641a      	str	r2, [r3, #64]	; 0x40
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	2200      	movs	r2, #0
 80070f0:	645a      	str	r2, [r3, #68]	; 0x44
 80070f2:	687b      	ldr	r3, [r7, #4]
 80070f4:	2200      	movs	r2, #0
 80070f6:	649a      	str	r2, [r3, #72]	; 0x48
 80070f8:	687b      	ldr	r3, [r7, #4]
 80070fa:	2200      	movs	r2, #0
 80070fc:	64da      	str	r2, [r3, #76]	; 0x4c
 80070fe:	687b      	ldr	r3, [r7, #4]
 8007100:	2200      	movs	r2, #0
 8007102:	651a      	str	r2, [r3, #80]	; 0x50
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	2200      	movs	r2, #0
 8007108:	655a      	str	r2, [r3, #84]	; 0x54
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	2200      	movs	r2, #0
 800710e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	2200      	movs	r2, #0
 8007116:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800711a:	2300      	movs	r3, #0
 800711c:	4618      	mov	r0, r3
 800711e:	3710      	adds	r7, #16
 8007120:	46bd      	mov	sp, r7
 8007122:	bd80      	pop	{r7, pc}

08007124 <HAL_DMA_Abort_IT>:
 8007124:	b480      	push	{r7}
 8007126:	b083      	sub	sp, #12
 8007128:	af00      	add	r7, sp, #0
 800712a:	6078      	str	r0, [r7, #4]
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007132:	b2db      	uxtb	r3, r3
 8007134:	2b02      	cmp	r3, #2
 8007136:	d004      	beq.n	8007142 <HAL_DMA_Abort_IT+0x1e>
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	2280      	movs	r2, #128	; 0x80
 800713c:	655a      	str	r2, [r3, #84]	; 0x54
 800713e:	2301      	movs	r3, #1
 8007140:	e00c      	b.n	800715c <HAL_DMA_Abort_IT+0x38>
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	2205      	movs	r2, #5
 8007146:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800714a:	687b      	ldr	r3, [r7, #4]
 800714c:	681b      	ldr	r3, [r3, #0]
 800714e:	681a      	ldr	r2, [r3, #0]
 8007150:	687b      	ldr	r3, [r7, #4]
 8007152:	681b      	ldr	r3, [r3, #0]
 8007154:	f022 0201 	bic.w	r2, r2, #1
 8007158:	601a      	str	r2, [r3, #0]
 800715a:	2300      	movs	r3, #0
 800715c:	4618      	mov	r0, r3
 800715e:	370c      	adds	r7, #12
 8007160:	46bd      	mov	sp, r7
 8007162:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007166:	4770      	bx	lr

08007168 <DMA_CalcBaseAndBitshift>:
 8007168:	b480      	push	{r7}
 800716a:	b085      	sub	sp, #20
 800716c:	af00      	add	r7, sp, #0
 800716e:	6078      	str	r0, [r7, #4]
 8007170:	687b      	ldr	r3, [r7, #4]
 8007172:	681b      	ldr	r3, [r3, #0]
 8007174:	b2db      	uxtb	r3, r3
 8007176:	3b10      	subs	r3, #16
 8007178:	4a13      	ldr	r2, [pc, #76]	; (80071c8 <DMA_CalcBaseAndBitshift+0x60>)
 800717a:	fba2 2303 	umull	r2, r3, r2, r3
 800717e:	091b      	lsrs	r3, r3, #4
 8007180:	60fb      	str	r3, [r7, #12]
 8007182:	4a12      	ldr	r2, [pc, #72]	; (80071cc <DMA_CalcBaseAndBitshift+0x64>)
 8007184:	68fb      	ldr	r3, [r7, #12]
 8007186:	4413      	add	r3, r2
 8007188:	781b      	ldrb	r3, [r3, #0]
 800718a:	461a      	mov	r2, r3
 800718c:	687b      	ldr	r3, [r7, #4]
 800718e:	65da      	str	r2, [r3, #92]	; 0x5c
 8007190:	68fb      	ldr	r3, [r7, #12]
 8007192:	2b03      	cmp	r3, #3
 8007194:	d908      	bls.n	80071a8 <DMA_CalcBaseAndBitshift+0x40>
 8007196:	687b      	ldr	r3, [r7, #4]
 8007198:	681b      	ldr	r3, [r3, #0]
 800719a:	461a      	mov	r2, r3
 800719c:	4b0c      	ldr	r3, [pc, #48]	; (80071d0 <DMA_CalcBaseAndBitshift+0x68>)
 800719e:	4013      	ands	r3, r2
 80071a0:	1d1a      	adds	r2, r3, #4
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	659a      	str	r2, [r3, #88]	; 0x58
 80071a6:	e006      	b.n	80071b6 <DMA_CalcBaseAndBitshift+0x4e>
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	681b      	ldr	r3, [r3, #0]
 80071ac:	461a      	mov	r2, r3
 80071ae:	4b08      	ldr	r3, [pc, #32]	; (80071d0 <DMA_CalcBaseAndBitshift+0x68>)
 80071b0:	4013      	ands	r3, r2
 80071b2:	687a      	ldr	r2, [r7, #4]
 80071b4:	6593      	str	r3, [r2, #88]	; 0x58
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80071ba:	4618      	mov	r0, r3
 80071bc:	3714      	adds	r7, #20
 80071be:	46bd      	mov	sp, r7
 80071c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071c4:	4770      	bx	lr
 80071c6:	bf00      	nop
 80071c8:	aaaaaaab 	.word	0xaaaaaaab
 80071cc:	08011da8 	.word	0x08011da8
 80071d0:	fffffc00 	.word	0xfffffc00

080071d4 <DMA_CheckFifoParam>:
 80071d4:	b480      	push	{r7}
 80071d6:	b085      	sub	sp, #20
 80071d8:	af00      	add	r7, sp, #0
 80071da:	6078      	str	r0, [r7, #4]
 80071dc:	2300      	movs	r3, #0
 80071de:	73fb      	strb	r3, [r7, #15]
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80071e4:	60bb      	str	r3, [r7, #8]
 80071e6:	687b      	ldr	r3, [r7, #4]
 80071e8:	699b      	ldr	r3, [r3, #24]
 80071ea:	2b00      	cmp	r3, #0
 80071ec:	d11f      	bne.n	800722e <DMA_CheckFifoParam+0x5a>
 80071ee:	68bb      	ldr	r3, [r7, #8]
 80071f0:	2b03      	cmp	r3, #3
 80071f2:	d855      	bhi.n	80072a0 <DMA_CheckFifoParam+0xcc>
 80071f4:	a201      	add	r2, pc, #4	; (adr r2, 80071fc <DMA_CheckFifoParam+0x28>)
 80071f6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80071fa:	bf00      	nop
 80071fc:	0800720d 	.word	0x0800720d
 8007200:	0800721f 	.word	0x0800721f
 8007204:	0800720d 	.word	0x0800720d
 8007208:	080072a1 	.word	0x080072a1
 800720c:	687b      	ldr	r3, [r7, #4]
 800720e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007210:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007214:	2b00      	cmp	r3, #0
 8007216:	d045      	beq.n	80072a4 <DMA_CheckFifoParam+0xd0>
 8007218:	2301      	movs	r3, #1
 800721a:	73fb      	strb	r3, [r7, #15]
 800721c:	e042      	b.n	80072a4 <DMA_CheckFifoParam+0xd0>
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007222:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8007226:	d13f      	bne.n	80072a8 <DMA_CheckFifoParam+0xd4>
 8007228:	2301      	movs	r3, #1
 800722a:	73fb      	strb	r3, [r7, #15]
 800722c:	e03c      	b.n	80072a8 <DMA_CheckFifoParam+0xd4>
 800722e:	687b      	ldr	r3, [r7, #4]
 8007230:	699b      	ldr	r3, [r3, #24]
 8007232:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007236:	d121      	bne.n	800727c <DMA_CheckFifoParam+0xa8>
 8007238:	68bb      	ldr	r3, [r7, #8]
 800723a:	2b03      	cmp	r3, #3
 800723c:	d836      	bhi.n	80072ac <DMA_CheckFifoParam+0xd8>
 800723e:	a201      	add	r2, pc, #4	; (adr r2, 8007244 <DMA_CheckFifoParam+0x70>)
 8007240:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007244:	08007255 	.word	0x08007255
 8007248:	0800725b 	.word	0x0800725b
 800724c:	08007255 	.word	0x08007255
 8007250:	0800726d 	.word	0x0800726d
 8007254:	2301      	movs	r3, #1
 8007256:	73fb      	strb	r3, [r7, #15]
 8007258:	e02f      	b.n	80072ba <DMA_CheckFifoParam+0xe6>
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800725e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007262:	2b00      	cmp	r3, #0
 8007264:	d024      	beq.n	80072b0 <DMA_CheckFifoParam+0xdc>
 8007266:	2301      	movs	r3, #1
 8007268:	73fb      	strb	r3, [r7, #15]
 800726a:	e021      	b.n	80072b0 <DMA_CheckFifoParam+0xdc>
 800726c:	687b      	ldr	r3, [r7, #4]
 800726e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007270:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8007274:	d11e      	bne.n	80072b4 <DMA_CheckFifoParam+0xe0>
 8007276:	2301      	movs	r3, #1
 8007278:	73fb      	strb	r3, [r7, #15]
 800727a:	e01b      	b.n	80072b4 <DMA_CheckFifoParam+0xe0>
 800727c:	68bb      	ldr	r3, [r7, #8]
 800727e:	2b02      	cmp	r3, #2
 8007280:	d902      	bls.n	8007288 <DMA_CheckFifoParam+0xb4>
 8007282:	2b03      	cmp	r3, #3
 8007284:	d003      	beq.n	800728e <DMA_CheckFifoParam+0xba>
 8007286:	e018      	b.n	80072ba <DMA_CheckFifoParam+0xe6>
 8007288:	2301      	movs	r3, #1
 800728a:	73fb      	strb	r3, [r7, #15]
 800728c:	e015      	b.n	80072ba <DMA_CheckFifoParam+0xe6>
 800728e:	687b      	ldr	r3, [r7, #4]
 8007290:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007292:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007296:	2b00      	cmp	r3, #0
 8007298:	d00e      	beq.n	80072b8 <DMA_CheckFifoParam+0xe4>
 800729a:	2301      	movs	r3, #1
 800729c:	73fb      	strb	r3, [r7, #15]
 800729e:	e00b      	b.n	80072b8 <DMA_CheckFifoParam+0xe4>
 80072a0:	bf00      	nop
 80072a2:	e00a      	b.n	80072ba <DMA_CheckFifoParam+0xe6>
 80072a4:	bf00      	nop
 80072a6:	e008      	b.n	80072ba <DMA_CheckFifoParam+0xe6>
 80072a8:	bf00      	nop
 80072aa:	e006      	b.n	80072ba <DMA_CheckFifoParam+0xe6>
 80072ac:	bf00      	nop
 80072ae:	e004      	b.n	80072ba <DMA_CheckFifoParam+0xe6>
 80072b0:	bf00      	nop
 80072b2:	e002      	b.n	80072ba <DMA_CheckFifoParam+0xe6>
 80072b4:	bf00      	nop
 80072b6:	e000      	b.n	80072ba <DMA_CheckFifoParam+0xe6>
 80072b8:	bf00      	nop
 80072ba:	7bfb      	ldrb	r3, [r7, #15]
 80072bc:	4618      	mov	r0, r3
 80072be:	3714      	adds	r7, #20
 80072c0:	46bd      	mov	sp, r7
 80072c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072c6:	4770      	bx	lr

080072c8 <HAL_DMA2D_Init>:
 80072c8:	b580      	push	{r7, lr}
 80072ca:	b082      	sub	sp, #8
 80072cc:	af00      	add	r7, sp, #0
 80072ce:	6078      	str	r0, [r7, #4]
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	2b00      	cmp	r3, #0
 80072d4:	d101      	bne.n	80072da <HAL_DMA2D_Init+0x12>
 80072d6:	2301      	movs	r3, #1
 80072d8:	e039      	b.n	800734e <HAL_DMA2D_Init+0x86>
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80072e0:	b2db      	uxtb	r3, r3
 80072e2:	2b00      	cmp	r3, #0
 80072e4:	d106      	bne.n	80072f4 <HAL_DMA2D_Init+0x2c>
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	2200      	movs	r2, #0
 80072ea:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80072ee:	6878      	ldr	r0, [r7, #4]
 80072f0:	f7fe fabe 	bl	8005870 <HAL_DMA2D_MspInit>
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	2202      	movs	r2, #2
 80072f8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80072fc:	687b      	ldr	r3, [r7, #4]
 80072fe:	681b      	ldr	r3, [r3, #0]
 8007300:	681b      	ldr	r3, [r3, #0]
 8007302:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	685a      	ldr	r2, [r3, #4]
 800730a:	687b      	ldr	r3, [r7, #4]
 800730c:	681b      	ldr	r3, [r3, #0]
 800730e:	430a      	orrs	r2, r1
 8007310:	601a      	str	r2, [r3, #0]
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	681b      	ldr	r3, [r3, #0]
 8007316:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007318:	f023 0107 	bic.w	r1, r3, #7
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	689a      	ldr	r2, [r3, #8]
 8007320:	687b      	ldr	r3, [r7, #4]
 8007322:	681b      	ldr	r3, [r3, #0]
 8007324:	430a      	orrs	r2, r1
 8007326:	635a      	str	r2, [r3, #52]	; 0x34
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	681b      	ldr	r3, [r3, #0]
 800732c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800732e:	4b0a      	ldr	r3, [pc, #40]	; (8007358 <HAL_DMA2D_Init+0x90>)
 8007330:	4013      	ands	r3, r2
 8007332:	687a      	ldr	r2, [r7, #4]
 8007334:	68d1      	ldr	r1, [r2, #12]
 8007336:	687a      	ldr	r2, [r7, #4]
 8007338:	6812      	ldr	r2, [r2, #0]
 800733a:	430b      	orrs	r3, r1
 800733c:	6413      	str	r3, [r2, #64]	; 0x40
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	2200      	movs	r2, #0
 8007342:	63da      	str	r2, [r3, #60]	; 0x3c
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	2201      	movs	r2, #1
 8007348:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800734c:	2300      	movs	r3, #0
 800734e:	4618      	mov	r0, r3
 8007350:	3708      	adds	r7, #8
 8007352:	46bd      	mov	sp, r7
 8007354:	bd80      	pop	{r7, pc}
 8007356:	bf00      	nop
 8007358:	ffffc000 	.word	0xffffc000

0800735c <HAL_DMA2D_Start>:
 800735c:	b580      	push	{r7, lr}
 800735e:	b086      	sub	sp, #24
 8007360:	af02      	add	r7, sp, #8
 8007362:	60f8      	str	r0, [r7, #12]
 8007364:	60b9      	str	r1, [r7, #8]
 8007366:	607a      	str	r2, [r7, #4]
 8007368:	603b      	str	r3, [r7, #0]
 800736a:	68fb      	ldr	r3, [r7, #12]
 800736c:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8007370:	2b01      	cmp	r3, #1
 8007372:	d101      	bne.n	8007378 <HAL_DMA2D_Start+0x1c>
 8007374:	2302      	movs	r3, #2
 8007376:	e018      	b.n	80073aa <HAL_DMA2D_Start+0x4e>
 8007378:	68fb      	ldr	r3, [r7, #12]
 800737a:	2201      	movs	r2, #1
 800737c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8007380:	68fb      	ldr	r3, [r7, #12]
 8007382:	2202      	movs	r2, #2
 8007384:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007388:	69bb      	ldr	r3, [r7, #24]
 800738a:	9300      	str	r3, [sp, #0]
 800738c:	683b      	ldr	r3, [r7, #0]
 800738e:	687a      	ldr	r2, [r7, #4]
 8007390:	68b9      	ldr	r1, [r7, #8]
 8007392:	68f8      	ldr	r0, [r7, #12]
 8007394:	f000 f988 	bl	80076a8 <DMA2D_SetConfig>
 8007398:	68fb      	ldr	r3, [r7, #12]
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	681a      	ldr	r2, [r3, #0]
 800739e:	68fb      	ldr	r3, [r7, #12]
 80073a0:	681b      	ldr	r3, [r3, #0]
 80073a2:	f042 0201 	orr.w	r2, r2, #1
 80073a6:	601a      	str	r2, [r3, #0]
 80073a8:	2300      	movs	r3, #0
 80073aa:	4618      	mov	r0, r3
 80073ac:	3710      	adds	r7, #16
 80073ae:	46bd      	mov	sp, r7
 80073b0:	bd80      	pop	{r7, pc}

080073b2 <HAL_DMA2D_PollForTransfer>:
 80073b2:	b580      	push	{r7, lr}
 80073b4:	b086      	sub	sp, #24
 80073b6:	af00      	add	r7, sp, #0
 80073b8:	6078      	str	r0, [r7, #4]
 80073ba:	6039      	str	r1, [r7, #0]
 80073bc:	2300      	movs	r3, #0
 80073be:	60fb      	str	r3, [r7, #12]
 80073c0:	687b      	ldr	r3, [r7, #4]
 80073c2:	681b      	ldr	r3, [r3, #0]
 80073c4:	681b      	ldr	r3, [r3, #0]
 80073c6:	f003 0301 	and.w	r3, r3, #1
 80073ca:	2b00      	cmp	r3, #0
 80073cc:	d056      	beq.n	800747c <HAL_DMA2D_PollForTransfer+0xca>
 80073ce:	f7fe ffe5 	bl	800639c <HAL_GetTick>
 80073d2:	6178      	str	r0, [r7, #20]
 80073d4:	e04b      	b.n	800746e <HAL_DMA2D_PollForTransfer+0xbc>
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	681b      	ldr	r3, [r3, #0]
 80073da:	685b      	ldr	r3, [r3, #4]
 80073dc:	60fb      	str	r3, [r7, #12]
 80073de:	68fb      	ldr	r3, [r7, #12]
 80073e0:	f003 0321 	and.w	r3, r3, #33	; 0x21
 80073e4:	2b00      	cmp	r3, #0
 80073e6:	d023      	beq.n	8007430 <HAL_DMA2D_PollForTransfer+0x7e>
 80073e8:	68fb      	ldr	r3, [r7, #12]
 80073ea:	f003 0320 	and.w	r3, r3, #32
 80073ee:	2b00      	cmp	r3, #0
 80073f0:	d005      	beq.n	80073fe <HAL_DMA2D_PollForTransfer+0x4c>
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80073f6:	f043 0202 	orr.w	r2, r3, #2
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	63da      	str	r2, [r3, #60]	; 0x3c
 80073fe:	68fb      	ldr	r3, [r7, #12]
 8007400:	f003 0301 	and.w	r3, r3, #1
 8007404:	2b00      	cmp	r3, #0
 8007406:	d005      	beq.n	8007414 <HAL_DMA2D_PollForTransfer+0x62>
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800740c:	f043 0201 	orr.w	r2, r3, #1
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	63da      	str	r2, [r3, #60]	; 0x3c
 8007414:	687b      	ldr	r3, [r7, #4]
 8007416:	681b      	ldr	r3, [r3, #0]
 8007418:	2221      	movs	r2, #33	; 0x21
 800741a:	609a      	str	r2, [r3, #8]
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	2204      	movs	r2, #4
 8007420:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	2200      	movs	r2, #0
 8007428:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800742c:	2301      	movs	r3, #1
 800742e:	e0a5      	b.n	800757c <HAL_DMA2D_PollForTransfer+0x1ca>
 8007430:	683b      	ldr	r3, [r7, #0]
 8007432:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007436:	d01a      	beq.n	800746e <HAL_DMA2D_PollForTransfer+0xbc>
 8007438:	f7fe ffb0 	bl	800639c <HAL_GetTick>
 800743c:	4602      	mov	r2, r0
 800743e:	697b      	ldr	r3, [r7, #20]
 8007440:	1ad3      	subs	r3, r2, r3
 8007442:	683a      	ldr	r2, [r7, #0]
 8007444:	429a      	cmp	r2, r3
 8007446:	d302      	bcc.n	800744e <HAL_DMA2D_PollForTransfer+0x9c>
 8007448:	683b      	ldr	r3, [r7, #0]
 800744a:	2b00      	cmp	r3, #0
 800744c:	d10f      	bne.n	800746e <HAL_DMA2D_PollForTransfer+0xbc>
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007452:	f043 0220 	orr.w	r2, r3, #32
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	63da      	str	r2, [r3, #60]	; 0x3c
 800745a:	687b      	ldr	r3, [r7, #4]
 800745c:	2203      	movs	r2, #3
 800745e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007462:	687b      	ldr	r3, [r7, #4]
 8007464:	2200      	movs	r2, #0
 8007466:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800746a:	2303      	movs	r3, #3
 800746c:	e086      	b.n	800757c <HAL_DMA2D_PollForTransfer+0x1ca>
 800746e:	687b      	ldr	r3, [r7, #4]
 8007470:	681b      	ldr	r3, [r3, #0]
 8007472:	685b      	ldr	r3, [r3, #4]
 8007474:	f003 0302 	and.w	r3, r3, #2
 8007478:	2b00      	cmp	r3, #0
 800747a:	d0ac      	beq.n	80073d6 <HAL_DMA2D_PollForTransfer+0x24>
 800747c:	687b      	ldr	r3, [r7, #4]
 800747e:	681b      	ldr	r3, [r3, #0]
 8007480:	69db      	ldr	r3, [r3, #28]
 8007482:	f003 0320 	and.w	r3, r3, #32
 8007486:	613b      	str	r3, [r7, #16]
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	681b      	ldr	r3, [r3, #0]
 800748c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800748e:	f003 0320 	and.w	r3, r3, #32
 8007492:	693a      	ldr	r2, [r7, #16]
 8007494:	4313      	orrs	r3, r2
 8007496:	613b      	str	r3, [r7, #16]
 8007498:	693b      	ldr	r3, [r7, #16]
 800749a:	2b00      	cmp	r3, #0
 800749c:	d061      	beq.n	8007562 <HAL_DMA2D_PollForTransfer+0x1b0>
 800749e:	f7fe ff7d 	bl	800639c <HAL_GetTick>
 80074a2:	6178      	str	r0, [r7, #20]
 80074a4:	e056      	b.n	8007554 <HAL_DMA2D_PollForTransfer+0x1a2>
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	681b      	ldr	r3, [r3, #0]
 80074aa:	685b      	ldr	r3, [r3, #4]
 80074ac:	60fb      	str	r3, [r7, #12]
 80074ae:	68fb      	ldr	r3, [r7, #12]
 80074b0:	f003 0329 	and.w	r3, r3, #41	; 0x29
 80074b4:	2b00      	cmp	r3, #0
 80074b6:	d02e      	beq.n	8007516 <HAL_DMA2D_PollForTransfer+0x164>
 80074b8:	68fb      	ldr	r3, [r7, #12]
 80074ba:	f003 0308 	and.w	r3, r3, #8
 80074be:	2b00      	cmp	r3, #0
 80074c0:	d005      	beq.n	80074ce <HAL_DMA2D_PollForTransfer+0x11c>
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80074c6:	f043 0204 	orr.w	r2, r3, #4
 80074ca:	687b      	ldr	r3, [r7, #4]
 80074cc:	63da      	str	r2, [r3, #60]	; 0x3c
 80074ce:	68fb      	ldr	r3, [r7, #12]
 80074d0:	f003 0320 	and.w	r3, r3, #32
 80074d4:	2b00      	cmp	r3, #0
 80074d6:	d005      	beq.n	80074e4 <HAL_DMA2D_PollForTransfer+0x132>
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80074dc:	f043 0202 	orr.w	r2, r3, #2
 80074e0:	687b      	ldr	r3, [r7, #4]
 80074e2:	63da      	str	r2, [r3, #60]	; 0x3c
 80074e4:	68fb      	ldr	r3, [r7, #12]
 80074e6:	f003 0301 	and.w	r3, r3, #1
 80074ea:	2b00      	cmp	r3, #0
 80074ec:	d005      	beq.n	80074fa <HAL_DMA2D_PollForTransfer+0x148>
 80074ee:	687b      	ldr	r3, [r7, #4]
 80074f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80074f2:	f043 0201 	orr.w	r2, r3, #1
 80074f6:	687b      	ldr	r3, [r7, #4]
 80074f8:	63da      	str	r2, [r3, #60]	; 0x3c
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	681b      	ldr	r3, [r3, #0]
 80074fe:	2229      	movs	r2, #41	; 0x29
 8007500:	609a      	str	r2, [r3, #8]
 8007502:	687b      	ldr	r3, [r7, #4]
 8007504:	2204      	movs	r2, #4
 8007506:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	2200      	movs	r2, #0
 800750e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8007512:	2301      	movs	r3, #1
 8007514:	e032      	b.n	800757c <HAL_DMA2D_PollForTransfer+0x1ca>
 8007516:	683b      	ldr	r3, [r7, #0]
 8007518:	f1b3 3fff 	cmp.w	r3, #4294967295
 800751c:	d01a      	beq.n	8007554 <HAL_DMA2D_PollForTransfer+0x1a2>
 800751e:	f7fe ff3d 	bl	800639c <HAL_GetTick>
 8007522:	4602      	mov	r2, r0
 8007524:	697b      	ldr	r3, [r7, #20]
 8007526:	1ad3      	subs	r3, r2, r3
 8007528:	683a      	ldr	r2, [r7, #0]
 800752a:	429a      	cmp	r2, r3
 800752c:	d302      	bcc.n	8007534 <HAL_DMA2D_PollForTransfer+0x182>
 800752e:	683b      	ldr	r3, [r7, #0]
 8007530:	2b00      	cmp	r3, #0
 8007532:	d10f      	bne.n	8007554 <HAL_DMA2D_PollForTransfer+0x1a2>
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007538:	f043 0220 	orr.w	r2, r3, #32
 800753c:	687b      	ldr	r3, [r7, #4]
 800753e:	63da      	str	r2, [r3, #60]	; 0x3c
 8007540:	687b      	ldr	r3, [r7, #4]
 8007542:	2203      	movs	r2, #3
 8007544:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	2200      	movs	r2, #0
 800754c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8007550:	2303      	movs	r3, #3
 8007552:	e013      	b.n	800757c <HAL_DMA2D_PollForTransfer+0x1ca>
 8007554:	687b      	ldr	r3, [r7, #4]
 8007556:	681b      	ldr	r3, [r3, #0]
 8007558:	685b      	ldr	r3, [r3, #4]
 800755a:	f003 0310 	and.w	r3, r3, #16
 800755e:	2b00      	cmp	r3, #0
 8007560:	d0a1      	beq.n	80074a6 <HAL_DMA2D_PollForTransfer+0xf4>
 8007562:	687b      	ldr	r3, [r7, #4]
 8007564:	681b      	ldr	r3, [r3, #0]
 8007566:	2212      	movs	r2, #18
 8007568:	609a      	str	r2, [r3, #8]
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	2201      	movs	r2, #1
 800756e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007572:	687b      	ldr	r3, [r7, #4]
 8007574:	2200      	movs	r2, #0
 8007576:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800757a:	2300      	movs	r3, #0
 800757c:	4618      	mov	r0, r3
 800757e:	3718      	adds	r7, #24
 8007580:	46bd      	mov	sp, r7
 8007582:	bd80      	pop	{r7, pc}

08007584 <HAL_DMA2D_ConfigLayer>:
 8007584:	b480      	push	{r7}
 8007586:	b087      	sub	sp, #28
 8007588:	af00      	add	r7, sp, #0
 800758a:	6078      	str	r0, [r7, #4]
 800758c:	6039      	str	r1, [r7, #0]
 800758e:	687b      	ldr	r3, [r7, #4]
 8007590:	685b      	ldr	r3, [r3, #4]
 8007592:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8007596:	687b      	ldr	r3, [r7, #4]
 8007598:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800759c:	2b01      	cmp	r3, #1
 800759e:	d101      	bne.n	80075a4 <HAL_DMA2D_ConfigLayer+0x20>
 80075a0:	2302      	movs	r3, #2
 80075a2:	e079      	b.n	8007698 <HAL_DMA2D_ConfigLayer+0x114>
 80075a4:	687b      	ldr	r3, [r7, #4]
 80075a6:	2201      	movs	r2, #1
 80075a8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	2202      	movs	r2, #2
 80075b0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80075b4:	683b      	ldr	r3, [r7, #0]
 80075b6:	011b      	lsls	r3, r3, #4
 80075b8:	3318      	adds	r3, #24
 80075ba:	687a      	ldr	r2, [r7, #4]
 80075bc:	4413      	add	r3, r2
 80075be:	613b      	str	r3, [r7, #16]
 80075c0:	693b      	ldr	r3, [r7, #16]
 80075c2:	685a      	ldr	r2, [r3, #4]
 80075c4:	693b      	ldr	r3, [r7, #16]
 80075c6:	689b      	ldr	r3, [r3, #8]
 80075c8:	041b      	lsls	r3, r3, #16
 80075ca:	4313      	orrs	r3, r2
 80075cc:	617b      	str	r3, [r7, #20]
 80075ce:	4b35      	ldr	r3, [pc, #212]	; (80076a4 <HAL_DMA2D_ConfigLayer+0x120>)
 80075d0:	60fb      	str	r3, [r7, #12]
 80075d2:	693b      	ldr	r3, [r7, #16]
 80075d4:	685b      	ldr	r3, [r3, #4]
 80075d6:	2b0a      	cmp	r3, #10
 80075d8:	d003      	beq.n	80075e2 <HAL_DMA2D_ConfigLayer+0x5e>
 80075da:	693b      	ldr	r3, [r7, #16]
 80075dc:	685b      	ldr	r3, [r3, #4]
 80075de:	2b09      	cmp	r3, #9
 80075e0:	d107      	bne.n	80075f2 <HAL_DMA2D_ConfigLayer+0x6e>
 80075e2:	693b      	ldr	r3, [r7, #16]
 80075e4:	68db      	ldr	r3, [r3, #12]
 80075e6:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80075ea:	697a      	ldr	r2, [r7, #20]
 80075ec:	4313      	orrs	r3, r2
 80075ee:	617b      	str	r3, [r7, #20]
 80075f0:	e005      	b.n	80075fe <HAL_DMA2D_ConfigLayer+0x7a>
 80075f2:	693b      	ldr	r3, [r7, #16]
 80075f4:	68db      	ldr	r3, [r3, #12]
 80075f6:	061b      	lsls	r3, r3, #24
 80075f8:	697a      	ldr	r2, [r7, #20]
 80075fa:	4313      	orrs	r3, r2
 80075fc:	617b      	str	r3, [r7, #20]
 80075fe:	683b      	ldr	r3, [r7, #0]
 8007600:	2b00      	cmp	r3, #0
 8007602:	d120      	bne.n	8007646 <HAL_DMA2D_ConfigLayer+0xc2>
 8007604:	687b      	ldr	r3, [r7, #4]
 8007606:	681b      	ldr	r3, [r3, #0]
 8007608:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800760a:	68fb      	ldr	r3, [r7, #12]
 800760c:	43db      	mvns	r3, r3
 800760e:	ea02 0103 	and.w	r1, r2, r3
 8007612:	687b      	ldr	r3, [r7, #4]
 8007614:	681b      	ldr	r3, [r3, #0]
 8007616:	697a      	ldr	r2, [r7, #20]
 8007618:	430a      	orrs	r2, r1
 800761a:	625a      	str	r2, [r3, #36]	; 0x24
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	681b      	ldr	r3, [r3, #0]
 8007620:	693a      	ldr	r2, [r7, #16]
 8007622:	6812      	ldr	r2, [r2, #0]
 8007624:	619a      	str	r2, [r3, #24]
 8007626:	693b      	ldr	r3, [r7, #16]
 8007628:	685b      	ldr	r3, [r3, #4]
 800762a:	2b0a      	cmp	r3, #10
 800762c:	d003      	beq.n	8007636 <HAL_DMA2D_ConfigLayer+0xb2>
 800762e:	693b      	ldr	r3, [r7, #16]
 8007630:	685b      	ldr	r3, [r3, #4]
 8007632:	2b09      	cmp	r3, #9
 8007634:	d127      	bne.n	8007686 <HAL_DMA2D_ConfigLayer+0x102>
 8007636:	693b      	ldr	r3, [r7, #16]
 8007638:	68da      	ldr	r2, [r3, #12]
 800763a:	687b      	ldr	r3, [r7, #4]
 800763c:	681b      	ldr	r3, [r3, #0]
 800763e:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8007642:	629a      	str	r2, [r3, #40]	; 0x28
 8007644:	e01f      	b.n	8007686 <HAL_DMA2D_ConfigLayer+0x102>
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	69da      	ldr	r2, [r3, #28]
 800764c:	68fb      	ldr	r3, [r7, #12]
 800764e:	43db      	mvns	r3, r3
 8007650:	ea02 0103 	and.w	r1, r2, r3
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	681b      	ldr	r3, [r3, #0]
 8007658:	697a      	ldr	r2, [r7, #20]
 800765a:	430a      	orrs	r2, r1
 800765c:	61da      	str	r2, [r3, #28]
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	693a      	ldr	r2, [r7, #16]
 8007664:	6812      	ldr	r2, [r2, #0]
 8007666:	611a      	str	r2, [r3, #16]
 8007668:	693b      	ldr	r3, [r7, #16]
 800766a:	685b      	ldr	r3, [r3, #4]
 800766c:	2b0a      	cmp	r3, #10
 800766e:	d003      	beq.n	8007678 <HAL_DMA2D_ConfigLayer+0xf4>
 8007670:	693b      	ldr	r3, [r7, #16]
 8007672:	685b      	ldr	r3, [r3, #4]
 8007674:	2b09      	cmp	r3, #9
 8007676:	d106      	bne.n	8007686 <HAL_DMA2D_ConfigLayer+0x102>
 8007678:	693b      	ldr	r3, [r7, #16]
 800767a:	68da      	ldr	r2, [r3, #12]
 800767c:	687b      	ldr	r3, [r7, #4]
 800767e:	681b      	ldr	r3, [r3, #0]
 8007680:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8007684:	621a      	str	r2, [r3, #32]
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	2201      	movs	r2, #1
 800768a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 800768e:	687b      	ldr	r3, [r7, #4]
 8007690:	2200      	movs	r2, #0
 8007692:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8007696:	2300      	movs	r3, #0
 8007698:	4618      	mov	r0, r3
 800769a:	371c      	adds	r7, #28
 800769c:	46bd      	mov	sp, r7
 800769e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076a2:	4770      	bx	lr
 80076a4:	ff03000f 	.word	0xff03000f

080076a8 <DMA2D_SetConfig>:
 80076a8:	b480      	push	{r7}
 80076aa:	b08b      	sub	sp, #44	; 0x2c
 80076ac:	af00      	add	r7, sp, #0
 80076ae:	60f8      	str	r0, [r7, #12]
 80076b0:	60b9      	str	r1, [r7, #8]
 80076b2:	607a      	str	r2, [r7, #4]
 80076b4:	603b      	str	r3, [r7, #0]
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	681b      	ldr	r3, [r3, #0]
 80076ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80076bc:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 80076c0:	683b      	ldr	r3, [r7, #0]
 80076c2:	041a      	lsls	r2, r3, #16
 80076c4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80076c6:	431a      	orrs	r2, r3
 80076c8:	68fb      	ldr	r3, [r7, #12]
 80076ca:	681b      	ldr	r3, [r3, #0]
 80076cc:	430a      	orrs	r2, r1
 80076ce:	645a      	str	r2, [r3, #68]	; 0x44
 80076d0:	68fb      	ldr	r3, [r7, #12]
 80076d2:	681b      	ldr	r3, [r3, #0]
 80076d4:	687a      	ldr	r2, [r7, #4]
 80076d6:	63da      	str	r2, [r3, #60]	; 0x3c
 80076d8:	68fb      	ldr	r3, [r7, #12]
 80076da:	685b      	ldr	r3, [r3, #4]
 80076dc:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80076e0:	d174      	bne.n	80077cc <DMA2D_SetConfig+0x124>
 80076e2:	68bb      	ldr	r3, [r7, #8]
 80076e4:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80076e8:	623b      	str	r3, [r7, #32]
 80076ea:	68bb      	ldr	r3, [r7, #8]
 80076ec:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80076f0:	61fb      	str	r3, [r7, #28]
 80076f2:	68bb      	ldr	r3, [r7, #8]
 80076f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80076f8:	61bb      	str	r3, [r7, #24]
 80076fa:	68bb      	ldr	r3, [r7, #8]
 80076fc:	b2db      	uxtb	r3, r3
 80076fe:	617b      	str	r3, [r7, #20]
 8007700:	68fb      	ldr	r3, [r7, #12]
 8007702:	689b      	ldr	r3, [r3, #8]
 8007704:	2b00      	cmp	r3, #0
 8007706:	d108      	bne.n	800771a <DMA2D_SetConfig+0x72>
 8007708:	69ba      	ldr	r2, [r7, #24]
 800770a:	69fb      	ldr	r3, [r7, #28]
 800770c:	431a      	orrs	r2, r3
 800770e:	6a3b      	ldr	r3, [r7, #32]
 8007710:	4313      	orrs	r3, r2
 8007712:	697a      	ldr	r2, [r7, #20]
 8007714:	4313      	orrs	r3, r2
 8007716:	627b      	str	r3, [r7, #36]	; 0x24
 8007718:	e053      	b.n	80077c2 <DMA2D_SetConfig+0x11a>
 800771a:	68fb      	ldr	r3, [r7, #12]
 800771c:	689b      	ldr	r3, [r3, #8]
 800771e:	2b01      	cmp	r3, #1
 8007720:	d106      	bne.n	8007730 <DMA2D_SetConfig+0x88>
 8007722:	69ba      	ldr	r2, [r7, #24]
 8007724:	69fb      	ldr	r3, [r7, #28]
 8007726:	4313      	orrs	r3, r2
 8007728:	697a      	ldr	r2, [r7, #20]
 800772a:	4313      	orrs	r3, r2
 800772c:	627b      	str	r3, [r7, #36]	; 0x24
 800772e:	e048      	b.n	80077c2 <DMA2D_SetConfig+0x11a>
 8007730:	68fb      	ldr	r3, [r7, #12]
 8007732:	689b      	ldr	r3, [r3, #8]
 8007734:	2b02      	cmp	r3, #2
 8007736:	d111      	bne.n	800775c <DMA2D_SetConfig+0xb4>
 8007738:	69fb      	ldr	r3, [r7, #28]
 800773a:	0cdb      	lsrs	r3, r3, #19
 800773c:	61fb      	str	r3, [r7, #28]
 800773e:	69bb      	ldr	r3, [r7, #24]
 8007740:	0a9b      	lsrs	r3, r3, #10
 8007742:	61bb      	str	r3, [r7, #24]
 8007744:	697b      	ldr	r3, [r7, #20]
 8007746:	08db      	lsrs	r3, r3, #3
 8007748:	617b      	str	r3, [r7, #20]
 800774a:	69bb      	ldr	r3, [r7, #24]
 800774c:	015a      	lsls	r2, r3, #5
 800774e:	69fb      	ldr	r3, [r7, #28]
 8007750:	02db      	lsls	r3, r3, #11
 8007752:	4313      	orrs	r3, r2
 8007754:	697a      	ldr	r2, [r7, #20]
 8007756:	4313      	orrs	r3, r2
 8007758:	627b      	str	r3, [r7, #36]	; 0x24
 800775a:	e032      	b.n	80077c2 <DMA2D_SetConfig+0x11a>
 800775c:	68fb      	ldr	r3, [r7, #12]
 800775e:	689b      	ldr	r3, [r3, #8]
 8007760:	2b03      	cmp	r3, #3
 8007762:	d117      	bne.n	8007794 <DMA2D_SetConfig+0xec>
 8007764:	6a3b      	ldr	r3, [r7, #32]
 8007766:	0fdb      	lsrs	r3, r3, #31
 8007768:	623b      	str	r3, [r7, #32]
 800776a:	69fb      	ldr	r3, [r7, #28]
 800776c:	0cdb      	lsrs	r3, r3, #19
 800776e:	61fb      	str	r3, [r7, #28]
 8007770:	69bb      	ldr	r3, [r7, #24]
 8007772:	0adb      	lsrs	r3, r3, #11
 8007774:	61bb      	str	r3, [r7, #24]
 8007776:	697b      	ldr	r3, [r7, #20]
 8007778:	08db      	lsrs	r3, r3, #3
 800777a:	617b      	str	r3, [r7, #20]
 800777c:	69bb      	ldr	r3, [r7, #24]
 800777e:	015a      	lsls	r2, r3, #5
 8007780:	69fb      	ldr	r3, [r7, #28]
 8007782:	029b      	lsls	r3, r3, #10
 8007784:	431a      	orrs	r2, r3
 8007786:	6a3b      	ldr	r3, [r7, #32]
 8007788:	03db      	lsls	r3, r3, #15
 800778a:	4313      	orrs	r3, r2
 800778c:	697a      	ldr	r2, [r7, #20]
 800778e:	4313      	orrs	r3, r2
 8007790:	627b      	str	r3, [r7, #36]	; 0x24
 8007792:	e016      	b.n	80077c2 <DMA2D_SetConfig+0x11a>
 8007794:	6a3b      	ldr	r3, [r7, #32]
 8007796:	0f1b      	lsrs	r3, r3, #28
 8007798:	623b      	str	r3, [r7, #32]
 800779a:	69fb      	ldr	r3, [r7, #28]
 800779c:	0d1b      	lsrs	r3, r3, #20
 800779e:	61fb      	str	r3, [r7, #28]
 80077a0:	69bb      	ldr	r3, [r7, #24]
 80077a2:	0b1b      	lsrs	r3, r3, #12
 80077a4:	61bb      	str	r3, [r7, #24]
 80077a6:	697b      	ldr	r3, [r7, #20]
 80077a8:	091b      	lsrs	r3, r3, #4
 80077aa:	617b      	str	r3, [r7, #20]
 80077ac:	69bb      	ldr	r3, [r7, #24]
 80077ae:	011a      	lsls	r2, r3, #4
 80077b0:	69fb      	ldr	r3, [r7, #28]
 80077b2:	021b      	lsls	r3, r3, #8
 80077b4:	431a      	orrs	r2, r3
 80077b6:	6a3b      	ldr	r3, [r7, #32]
 80077b8:	031b      	lsls	r3, r3, #12
 80077ba:	4313      	orrs	r3, r2
 80077bc:	697a      	ldr	r2, [r7, #20]
 80077be:	4313      	orrs	r3, r2
 80077c0:	627b      	str	r3, [r7, #36]	; 0x24
 80077c2:	68fb      	ldr	r3, [r7, #12]
 80077c4:	681b      	ldr	r3, [r3, #0]
 80077c6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80077c8:	639a      	str	r2, [r3, #56]	; 0x38
 80077ca:	e003      	b.n	80077d4 <DMA2D_SetConfig+0x12c>
 80077cc:	68fb      	ldr	r3, [r7, #12]
 80077ce:	681b      	ldr	r3, [r3, #0]
 80077d0:	68ba      	ldr	r2, [r7, #8]
 80077d2:	60da      	str	r2, [r3, #12]
 80077d4:	bf00      	nop
 80077d6:	372c      	adds	r7, #44	; 0x2c
 80077d8:	46bd      	mov	sp, r7
 80077da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077de:	4770      	bx	lr

080077e0 <HAL_GPIO_Init>:
 80077e0:	b480      	push	{r7}
 80077e2:	b089      	sub	sp, #36	; 0x24
 80077e4:	af00      	add	r7, sp, #0
 80077e6:	6078      	str	r0, [r7, #4]
 80077e8:	6039      	str	r1, [r7, #0]
 80077ea:	2300      	movs	r3, #0
 80077ec:	61fb      	str	r3, [r7, #28]
 80077ee:	2300      	movs	r3, #0
 80077f0:	617b      	str	r3, [r7, #20]
 80077f2:	2300      	movs	r3, #0
 80077f4:	613b      	str	r3, [r7, #16]
 80077f6:	2300      	movs	r3, #0
 80077f8:	61bb      	str	r3, [r7, #24]
 80077fa:	2300      	movs	r3, #0
 80077fc:	61fb      	str	r3, [r7, #28]
 80077fe:	e175      	b.n	8007aec <HAL_GPIO_Init+0x30c>
 8007800:	2201      	movs	r2, #1
 8007802:	69fb      	ldr	r3, [r7, #28]
 8007804:	fa02 f303 	lsl.w	r3, r2, r3
 8007808:	617b      	str	r3, [r7, #20]
 800780a:	683b      	ldr	r3, [r7, #0]
 800780c:	681b      	ldr	r3, [r3, #0]
 800780e:	697a      	ldr	r2, [r7, #20]
 8007810:	4013      	ands	r3, r2
 8007812:	613b      	str	r3, [r7, #16]
 8007814:	693a      	ldr	r2, [r7, #16]
 8007816:	697b      	ldr	r3, [r7, #20]
 8007818:	429a      	cmp	r2, r3
 800781a:	f040 8164 	bne.w	8007ae6 <HAL_GPIO_Init+0x306>
 800781e:	683b      	ldr	r3, [r7, #0]
 8007820:	685b      	ldr	r3, [r3, #4]
 8007822:	2b01      	cmp	r3, #1
 8007824:	d00b      	beq.n	800783e <HAL_GPIO_Init+0x5e>
 8007826:	683b      	ldr	r3, [r7, #0]
 8007828:	685b      	ldr	r3, [r3, #4]
 800782a:	2b02      	cmp	r3, #2
 800782c:	d007      	beq.n	800783e <HAL_GPIO_Init+0x5e>
 800782e:	683b      	ldr	r3, [r7, #0]
 8007830:	685b      	ldr	r3, [r3, #4]
 8007832:	2b11      	cmp	r3, #17
 8007834:	d003      	beq.n	800783e <HAL_GPIO_Init+0x5e>
 8007836:	683b      	ldr	r3, [r7, #0]
 8007838:	685b      	ldr	r3, [r3, #4]
 800783a:	2b12      	cmp	r3, #18
 800783c:	d130      	bne.n	80078a0 <HAL_GPIO_Init+0xc0>
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	689b      	ldr	r3, [r3, #8]
 8007842:	61bb      	str	r3, [r7, #24]
 8007844:	69fb      	ldr	r3, [r7, #28]
 8007846:	005b      	lsls	r3, r3, #1
 8007848:	2203      	movs	r2, #3
 800784a:	fa02 f303 	lsl.w	r3, r2, r3
 800784e:	43db      	mvns	r3, r3
 8007850:	69ba      	ldr	r2, [r7, #24]
 8007852:	4013      	ands	r3, r2
 8007854:	61bb      	str	r3, [r7, #24]
 8007856:	683b      	ldr	r3, [r7, #0]
 8007858:	68da      	ldr	r2, [r3, #12]
 800785a:	69fb      	ldr	r3, [r7, #28]
 800785c:	005b      	lsls	r3, r3, #1
 800785e:	fa02 f303 	lsl.w	r3, r2, r3
 8007862:	69ba      	ldr	r2, [r7, #24]
 8007864:	4313      	orrs	r3, r2
 8007866:	61bb      	str	r3, [r7, #24]
 8007868:	687b      	ldr	r3, [r7, #4]
 800786a:	69ba      	ldr	r2, [r7, #24]
 800786c:	609a      	str	r2, [r3, #8]
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	685b      	ldr	r3, [r3, #4]
 8007872:	61bb      	str	r3, [r7, #24]
 8007874:	2201      	movs	r2, #1
 8007876:	69fb      	ldr	r3, [r7, #28]
 8007878:	fa02 f303 	lsl.w	r3, r2, r3
 800787c:	43db      	mvns	r3, r3
 800787e:	69ba      	ldr	r2, [r7, #24]
 8007880:	4013      	ands	r3, r2
 8007882:	61bb      	str	r3, [r7, #24]
 8007884:	683b      	ldr	r3, [r7, #0]
 8007886:	685b      	ldr	r3, [r3, #4]
 8007888:	091b      	lsrs	r3, r3, #4
 800788a:	f003 0201 	and.w	r2, r3, #1
 800788e:	69fb      	ldr	r3, [r7, #28]
 8007890:	fa02 f303 	lsl.w	r3, r2, r3
 8007894:	69ba      	ldr	r2, [r7, #24]
 8007896:	4313      	orrs	r3, r2
 8007898:	61bb      	str	r3, [r7, #24]
 800789a:	687b      	ldr	r3, [r7, #4]
 800789c:	69ba      	ldr	r2, [r7, #24]
 800789e:	605a      	str	r2, [r3, #4]
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	68db      	ldr	r3, [r3, #12]
 80078a4:	61bb      	str	r3, [r7, #24]
 80078a6:	69fb      	ldr	r3, [r7, #28]
 80078a8:	005b      	lsls	r3, r3, #1
 80078aa:	2203      	movs	r2, #3
 80078ac:	fa02 f303 	lsl.w	r3, r2, r3
 80078b0:	43db      	mvns	r3, r3
 80078b2:	69ba      	ldr	r2, [r7, #24]
 80078b4:	4013      	ands	r3, r2
 80078b6:	61bb      	str	r3, [r7, #24]
 80078b8:	683b      	ldr	r3, [r7, #0]
 80078ba:	689a      	ldr	r2, [r3, #8]
 80078bc:	69fb      	ldr	r3, [r7, #28]
 80078be:	005b      	lsls	r3, r3, #1
 80078c0:	fa02 f303 	lsl.w	r3, r2, r3
 80078c4:	69ba      	ldr	r2, [r7, #24]
 80078c6:	4313      	orrs	r3, r2
 80078c8:	61bb      	str	r3, [r7, #24]
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	69ba      	ldr	r2, [r7, #24]
 80078ce:	60da      	str	r2, [r3, #12]
 80078d0:	683b      	ldr	r3, [r7, #0]
 80078d2:	685b      	ldr	r3, [r3, #4]
 80078d4:	2b02      	cmp	r3, #2
 80078d6:	d003      	beq.n	80078e0 <HAL_GPIO_Init+0x100>
 80078d8:	683b      	ldr	r3, [r7, #0]
 80078da:	685b      	ldr	r3, [r3, #4]
 80078dc:	2b12      	cmp	r3, #18
 80078de:	d123      	bne.n	8007928 <HAL_GPIO_Init+0x148>
 80078e0:	69fb      	ldr	r3, [r7, #28]
 80078e2:	08da      	lsrs	r2, r3, #3
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	3208      	adds	r2, #8
 80078e8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80078ec:	61bb      	str	r3, [r7, #24]
 80078ee:	69fb      	ldr	r3, [r7, #28]
 80078f0:	f003 0307 	and.w	r3, r3, #7
 80078f4:	009b      	lsls	r3, r3, #2
 80078f6:	220f      	movs	r2, #15
 80078f8:	fa02 f303 	lsl.w	r3, r2, r3
 80078fc:	43db      	mvns	r3, r3
 80078fe:	69ba      	ldr	r2, [r7, #24]
 8007900:	4013      	ands	r3, r2
 8007902:	61bb      	str	r3, [r7, #24]
 8007904:	683b      	ldr	r3, [r7, #0]
 8007906:	691a      	ldr	r2, [r3, #16]
 8007908:	69fb      	ldr	r3, [r7, #28]
 800790a:	f003 0307 	and.w	r3, r3, #7
 800790e:	009b      	lsls	r3, r3, #2
 8007910:	fa02 f303 	lsl.w	r3, r2, r3
 8007914:	69ba      	ldr	r2, [r7, #24]
 8007916:	4313      	orrs	r3, r2
 8007918:	61bb      	str	r3, [r7, #24]
 800791a:	69fb      	ldr	r3, [r7, #28]
 800791c:	08da      	lsrs	r2, r3, #3
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	3208      	adds	r2, #8
 8007922:	69b9      	ldr	r1, [r7, #24]
 8007924:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007928:	687b      	ldr	r3, [r7, #4]
 800792a:	681b      	ldr	r3, [r3, #0]
 800792c:	61bb      	str	r3, [r7, #24]
 800792e:	69fb      	ldr	r3, [r7, #28]
 8007930:	005b      	lsls	r3, r3, #1
 8007932:	2203      	movs	r2, #3
 8007934:	fa02 f303 	lsl.w	r3, r2, r3
 8007938:	43db      	mvns	r3, r3
 800793a:	69ba      	ldr	r2, [r7, #24]
 800793c:	4013      	ands	r3, r2
 800793e:	61bb      	str	r3, [r7, #24]
 8007940:	683b      	ldr	r3, [r7, #0]
 8007942:	685b      	ldr	r3, [r3, #4]
 8007944:	f003 0203 	and.w	r2, r3, #3
 8007948:	69fb      	ldr	r3, [r7, #28]
 800794a:	005b      	lsls	r3, r3, #1
 800794c:	fa02 f303 	lsl.w	r3, r2, r3
 8007950:	69ba      	ldr	r2, [r7, #24]
 8007952:	4313      	orrs	r3, r2
 8007954:	61bb      	str	r3, [r7, #24]
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	69ba      	ldr	r2, [r7, #24]
 800795a:	601a      	str	r2, [r3, #0]
 800795c:	683b      	ldr	r3, [r7, #0]
 800795e:	685b      	ldr	r3, [r3, #4]
 8007960:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007964:	2b00      	cmp	r3, #0
 8007966:	f000 80be 	beq.w	8007ae6 <HAL_GPIO_Init+0x306>
 800796a:	4b65      	ldr	r3, [pc, #404]	; (8007b00 <HAL_GPIO_Init+0x320>)
 800796c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800796e:	4a64      	ldr	r2, [pc, #400]	; (8007b00 <HAL_GPIO_Init+0x320>)
 8007970:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007974:	6453      	str	r3, [r2, #68]	; 0x44
 8007976:	4b62      	ldr	r3, [pc, #392]	; (8007b00 <HAL_GPIO_Init+0x320>)
 8007978:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800797a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800797e:	60fb      	str	r3, [r7, #12]
 8007980:	68fb      	ldr	r3, [r7, #12]
 8007982:	4a60      	ldr	r2, [pc, #384]	; (8007b04 <HAL_GPIO_Init+0x324>)
 8007984:	69fb      	ldr	r3, [r7, #28]
 8007986:	089b      	lsrs	r3, r3, #2
 8007988:	3302      	adds	r3, #2
 800798a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800798e:	61bb      	str	r3, [r7, #24]
 8007990:	69fb      	ldr	r3, [r7, #28]
 8007992:	f003 0303 	and.w	r3, r3, #3
 8007996:	009b      	lsls	r3, r3, #2
 8007998:	220f      	movs	r2, #15
 800799a:	fa02 f303 	lsl.w	r3, r2, r3
 800799e:	43db      	mvns	r3, r3
 80079a0:	69ba      	ldr	r2, [r7, #24]
 80079a2:	4013      	ands	r3, r2
 80079a4:	61bb      	str	r3, [r7, #24]
 80079a6:	687b      	ldr	r3, [r7, #4]
 80079a8:	4a57      	ldr	r2, [pc, #348]	; (8007b08 <HAL_GPIO_Init+0x328>)
 80079aa:	4293      	cmp	r3, r2
 80079ac:	d037      	beq.n	8007a1e <HAL_GPIO_Init+0x23e>
 80079ae:	687b      	ldr	r3, [r7, #4]
 80079b0:	4a56      	ldr	r2, [pc, #344]	; (8007b0c <HAL_GPIO_Init+0x32c>)
 80079b2:	4293      	cmp	r3, r2
 80079b4:	d031      	beq.n	8007a1a <HAL_GPIO_Init+0x23a>
 80079b6:	687b      	ldr	r3, [r7, #4]
 80079b8:	4a55      	ldr	r2, [pc, #340]	; (8007b10 <HAL_GPIO_Init+0x330>)
 80079ba:	4293      	cmp	r3, r2
 80079bc:	d02b      	beq.n	8007a16 <HAL_GPIO_Init+0x236>
 80079be:	687b      	ldr	r3, [r7, #4]
 80079c0:	4a54      	ldr	r2, [pc, #336]	; (8007b14 <HAL_GPIO_Init+0x334>)
 80079c2:	4293      	cmp	r3, r2
 80079c4:	d025      	beq.n	8007a12 <HAL_GPIO_Init+0x232>
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	4a53      	ldr	r2, [pc, #332]	; (8007b18 <HAL_GPIO_Init+0x338>)
 80079ca:	4293      	cmp	r3, r2
 80079cc:	d01f      	beq.n	8007a0e <HAL_GPIO_Init+0x22e>
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	4a52      	ldr	r2, [pc, #328]	; (8007b1c <HAL_GPIO_Init+0x33c>)
 80079d2:	4293      	cmp	r3, r2
 80079d4:	d019      	beq.n	8007a0a <HAL_GPIO_Init+0x22a>
 80079d6:	687b      	ldr	r3, [r7, #4]
 80079d8:	4a51      	ldr	r2, [pc, #324]	; (8007b20 <HAL_GPIO_Init+0x340>)
 80079da:	4293      	cmp	r3, r2
 80079dc:	d013      	beq.n	8007a06 <HAL_GPIO_Init+0x226>
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	4a50      	ldr	r2, [pc, #320]	; (8007b24 <HAL_GPIO_Init+0x344>)
 80079e2:	4293      	cmp	r3, r2
 80079e4:	d00d      	beq.n	8007a02 <HAL_GPIO_Init+0x222>
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	4a4f      	ldr	r2, [pc, #316]	; (8007b28 <HAL_GPIO_Init+0x348>)
 80079ea:	4293      	cmp	r3, r2
 80079ec:	d007      	beq.n	80079fe <HAL_GPIO_Init+0x21e>
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	4a4e      	ldr	r2, [pc, #312]	; (8007b2c <HAL_GPIO_Init+0x34c>)
 80079f2:	4293      	cmp	r3, r2
 80079f4:	d101      	bne.n	80079fa <HAL_GPIO_Init+0x21a>
 80079f6:	2309      	movs	r3, #9
 80079f8:	e012      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 80079fa:	230a      	movs	r3, #10
 80079fc:	e010      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 80079fe:	2308      	movs	r3, #8
 8007a00:	e00e      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 8007a02:	2307      	movs	r3, #7
 8007a04:	e00c      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 8007a06:	2306      	movs	r3, #6
 8007a08:	e00a      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 8007a0a:	2305      	movs	r3, #5
 8007a0c:	e008      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 8007a0e:	2304      	movs	r3, #4
 8007a10:	e006      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 8007a12:	2303      	movs	r3, #3
 8007a14:	e004      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 8007a16:	2302      	movs	r3, #2
 8007a18:	e002      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 8007a1a:	2301      	movs	r3, #1
 8007a1c:	e000      	b.n	8007a20 <HAL_GPIO_Init+0x240>
 8007a1e:	2300      	movs	r3, #0
 8007a20:	69fa      	ldr	r2, [r7, #28]
 8007a22:	f002 0203 	and.w	r2, r2, #3
 8007a26:	0092      	lsls	r2, r2, #2
 8007a28:	4093      	lsls	r3, r2
 8007a2a:	69ba      	ldr	r2, [r7, #24]
 8007a2c:	4313      	orrs	r3, r2
 8007a2e:	61bb      	str	r3, [r7, #24]
 8007a30:	4934      	ldr	r1, [pc, #208]	; (8007b04 <HAL_GPIO_Init+0x324>)
 8007a32:	69fb      	ldr	r3, [r7, #28]
 8007a34:	089b      	lsrs	r3, r3, #2
 8007a36:	3302      	adds	r3, #2
 8007a38:	69ba      	ldr	r2, [r7, #24]
 8007a3a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007a3e:	4b3c      	ldr	r3, [pc, #240]	; (8007b30 <HAL_GPIO_Init+0x350>)
 8007a40:	681b      	ldr	r3, [r3, #0]
 8007a42:	61bb      	str	r3, [r7, #24]
 8007a44:	693b      	ldr	r3, [r7, #16]
 8007a46:	43db      	mvns	r3, r3
 8007a48:	69ba      	ldr	r2, [r7, #24]
 8007a4a:	4013      	ands	r3, r2
 8007a4c:	61bb      	str	r3, [r7, #24]
 8007a4e:	683b      	ldr	r3, [r7, #0]
 8007a50:	685b      	ldr	r3, [r3, #4]
 8007a52:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007a56:	2b00      	cmp	r3, #0
 8007a58:	d003      	beq.n	8007a62 <HAL_GPIO_Init+0x282>
 8007a5a:	69ba      	ldr	r2, [r7, #24]
 8007a5c:	693b      	ldr	r3, [r7, #16]
 8007a5e:	4313      	orrs	r3, r2
 8007a60:	61bb      	str	r3, [r7, #24]
 8007a62:	4a33      	ldr	r2, [pc, #204]	; (8007b30 <HAL_GPIO_Init+0x350>)
 8007a64:	69bb      	ldr	r3, [r7, #24]
 8007a66:	6013      	str	r3, [r2, #0]
 8007a68:	4b31      	ldr	r3, [pc, #196]	; (8007b30 <HAL_GPIO_Init+0x350>)
 8007a6a:	685b      	ldr	r3, [r3, #4]
 8007a6c:	61bb      	str	r3, [r7, #24]
 8007a6e:	693b      	ldr	r3, [r7, #16]
 8007a70:	43db      	mvns	r3, r3
 8007a72:	69ba      	ldr	r2, [r7, #24]
 8007a74:	4013      	ands	r3, r2
 8007a76:	61bb      	str	r3, [r7, #24]
 8007a78:	683b      	ldr	r3, [r7, #0]
 8007a7a:	685b      	ldr	r3, [r3, #4]
 8007a7c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007a80:	2b00      	cmp	r3, #0
 8007a82:	d003      	beq.n	8007a8c <HAL_GPIO_Init+0x2ac>
 8007a84:	69ba      	ldr	r2, [r7, #24]
 8007a86:	693b      	ldr	r3, [r7, #16]
 8007a88:	4313      	orrs	r3, r2
 8007a8a:	61bb      	str	r3, [r7, #24]
 8007a8c:	4a28      	ldr	r2, [pc, #160]	; (8007b30 <HAL_GPIO_Init+0x350>)
 8007a8e:	69bb      	ldr	r3, [r7, #24]
 8007a90:	6053      	str	r3, [r2, #4]
 8007a92:	4b27      	ldr	r3, [pc, #156]	; (8007b30 <HAL_GPIO_Init+0x350>)
 8007a94:	689b      	ldr	r3, [r3, #8]
 8007a96:	61bb      	str	r3, [r7, #24]
 8007a98:	693b      	ldr	r3, [r7, #16]
 8007a9a:	43db      	mvns	r3, r3
 8007a9c:	69ba      	ldr	r2, [r7, #24]
 8007a9e:	4013      	ands	r3, r2
 8007aa0:	61bb      	str	r3, [r7, #24]
 8007aa2:	683b      	ldr	r3, [r7, #0]
 8007aa4:	685b      	ldr	r3, [r3, #4]
 8007aa6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007aaa:	2b00      	cmp	r3, #0
 8007aac:	d003      	beq.n	8007ab6 <HAL_GPIO_Init+0x2d6>
 8007aae:	69ba      	ldr	r2, [r7, #24]
 8007ab0:	693b      	ldr	r3, [r7, #16]
 8007ab2:	4313      	orrs	r3, r2
 8007ab4:	61bb      	str	r3, [r7, #24]
 8007ab6:	4a1e      	ldr	r2, [pc, #120]	; (8007b30 <HAL_GPIO_Init+0x350>)
 8007ab8:	69bb      	ldr	r3, [r7, #24]
 8007aba:	6093      	str	r3, [r2, #8]
 8007abc:	4b1c      	ldr	r3, [pc, #112]	; (8007b30 <HAL_GPIO_Init+0x350>)
 8007abe:	68db      	ldr	r3, [r3, #12]
 8007ac0:	61bb      	str	r3, [r7, #24]
 8007ac2:	693b      	ldr	r3, [r7, #16]
 8007ac4:	43db      	mvns	r3, r3
 8007ac6:	69ba      	ldr	r2, [r7, #24]
 8007ac8:	4013      	ands	r3, r2
 8007aca:	61bb      	str	r3, [r7, #24]
 8007acc:	683b      	ldr	r3, [r7, #0]
 8007ace:	685b      	ldr	r3, [r3, #4]
 8007ad0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007ad4:	2b00      	cmp	r3, #0
 8007ad6:	d003      	beq.n	8007ae0 <HAL_GPIO_Init+0x300>
 8007ad8:	69ba      	ldr	r2, [r7, #24]
 8007ada:	693b      	ldr	r3, [r7, #16]
 8007adc:	4313      	orrs	r3, r2
 8007ade:	61bb      	str	r3, [r7, #24]
 8007ae0:	4a13      	ldr	r2, [pc, #76]	; (8007b30 <HAL_GPIO_Init+0x350>)
 8007ae2:	69bb      	ldr	r3, [r7, #24]
 8007ae4:	60d3      	str	r3, [r2, #12]
 8007ae6:	69fb      	ldr	r3, [r7, #28]
 8007ae8:	3301      	adds	r3, #1
 8007aea:	61fb      	str	r3, [r7, #28]
 8007aec:	69fb      	ldr	r3, [r7, #28]
 8007aee:	2b0f      	cmp	r3, #15
 8007af0:	f67f ae86 	bls.w	8007800 <HAL_GPIO_Init+0x20>
 8007af4:	bf00      	nop
 8007af6:	3724      	adds	r7, #36	; 0x24
 8007af8:	46bd      	mov	sp, r7
 8007afa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007afe:	4770      	bx	lr
 8007b00:	40023800 	.word	0x40023800
 8007b04:	40013800 	.word	0x40013800
 8007b08:	40020000 	.word	0x40020000
 8007b0c:	40020400 	.word	0x40020400
 8007b10:	40020800 	.word	0x40020800
 8007b14:	40020c00 	.word	0x40020c00
 8007b18:	40021000 	.word	0x40021000
 8007b1c:	40021400 	.word	0x40021400
 8007b20:	40021800 	.word	0x40021800
 8007b24:	40021c00 	.word	0x40021c00
 8007b28:	40022000 	.word	0x40022000
 8007b2c:	40022400 	.word	0x40022400
 8007b30:	40013c00 	.word	0x40013c00

08007b34 <HAL_GPIO_DeInit>:
 8007b34:	b480      	push	{r7}
 8007b36:	b087      	sub	sp, #28
 8007b38:	af00      	add	r7, sp, #0
 8007b3a:	6078      	str	r0, [r7, #4]
 8007b3c:	6039      	str	r1, [r7, #0]
 8007b3e:	2300      	movs	r3, #0
 8007b40:	613b      	str	r3, [r7, #16]
 8007b42:	2300      	movs	r3, #0
 8007b44:	60fb      	str	r3, [r7, #12]
 8007b46:	2300      	movs	r3, #0
 8007b48:	60bb      	str	r3, [r7, #8]
 8007b4a:	2300      	movs	r3, #0
 8007b4c:	617b      	str	r3, [r7, #20]
 8007b4e:	e0d9      	b.n	8007d04 <HAL_GPIO_DeInit+0x1d0>
 8007b50:	2201      	movs	r2, #1
 8007b52:	697b      	ldr	r3, [r7, #20]
 8007b54:	fa02 f303 	lsl.w	r3, r2, r3
 8007b58:	613b      	str	r3, [r7, #16]
 8007b5a:	683a      	ldr	r2, [r7, #0]
 8007b5c:	693b      	ldr	r3, [r7, #16]
 8007b5e:	4013      	ands	r3, r2
 8007b60:	60fb      	str	r3, [r7, #12]
 8007b62:	68fa      	ldr	r2, [r7, #12]
 8007b64:	693b      	ldr	r3, [r7, #16]
 8007b66:	429a      	cmp	r2, r3
 8007b68:	f040 80c9 	bne.w	8007cfe <HAL_GPIO_DeInit+0x1ca>
 8007b6c:	4a6a      	ldr	r2, [pc, #424]	; (8007d18 <HAL_GPIO_DeInit+0x1e4>)
 8007b6e:	697b      	ldr	r3, [r7, #20]
 8007b70:	089b      	lsrs	r3, r3, #2
 8007b72:	3302      	adds	r3, #2
 8007b74:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007b78:	60bb      	str	r3, [r7, #8]
 8007b7a:	697b      	ldr	r3, [r7, #20]
 8007b7c:	f003 0303 	and.w	r3, r3, #3
 8007b80:	009b      	lsls	r3, r3, #2
 8007b82:	220f      	movs	r2, #15
 8007b84:	fa02 f303 	lsl.w	r3, r2, r3
 8007b88:	68ba      	ldr	r2, [r7, #8]
 8007b8a:	4013      	ands	r3, r2
 8007b8c:	60bb      	str	r3, [r7, #8]
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	4a62      	ldr	r2, [pc, #392]	; (8007d1c <HAL_GPIO_DeInit+0x1e8>)
 8007b92:	4293      	cmp	r3, r2
 8007b94:	d037      	beq.n	8007c06 <HAL_GPIO_DeInit+0xd2>
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	4a61      	ldr	r2, [pc, #388]	; (8007d20 <HAL_GPIO_DeInit+0x1ec>)
 8007b9a:	4293      	cmp	r3, r2
 8007b9c:	d031      	beq.n	8007c02 <HAL_GPIO_DeInit+0xce>
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	4a60      	ldr	r2, [pc, #384]	; (8007d24 <HAL_GPIO_DeInit+0x1f0>)
 8007ba2:	4293      	cmp	r3, r2
 8007ba4:	d02b      	beq.n	8007bfe <HAL_GPIO_DeInit+0xca>
 8007ba6:	687b      	ldr	r3, [r7, #4]
 8007ba8:	4a5f      	ldr	r2, [pc, #380]	; (8007d28 <HAL_GPIO_DeInit+0x1f4>)
 8007baa:	4293      	cmp	r3, r2
 8007bac:	d025      	beq.n	8007bfa <HAL_GPIO_DeInit+0xc6>
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	4a5e      	ldr	r2, [pc, #376]	; (8007d2c <HAL_GPIO_DeInit+0x1f8>)
 8007bb2:	4293      	cmp	r3, r2
 8007bb4:	d01f      	beq.n	8007bf6 <HAL_GPIO_DeInit+0xc2>
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	4a5d      	ldr	r2, [pc, #372]	; (8007d30 <HAL_GPIO_DeInit+0x1fc>)
 8007bba:	4293      	cmp	r3, r2
 8007bbc:	d019      	beq.n	8007bf2 <HAL_GPIO_DeInit+0xbe>
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	4a5c      	ldr	r2, [pc, #368]	; (8007d34 <HAL_GPIO_DeInit+0x200>)
 8007bc2:	4293      	cmp	r3, r2
 8007bc4:	d013      	beq.n	8007bee <HAL_GPIO_DeInit+0xba>
 8007bc6:	687b      	ldr	r3, [r7, #4]
 8007bc8:	4a5b      	ldr	r2, [pc, #364]	; (8007d38 <HAL_GPIO_DeInit+0x204>)
 8007bca:	4293      	cmp	r3, r2
 8007bcc:	d00d      	beq.n	8007bea <HAL_GPIO_DeInit+0xb6>
 8007bce:	687b      	ldr	r3, [r7, #4]
 8007bd0:	4a5a      	ldr	r2, [pc, #360]	; (8007d3c <HAL_GPIO_DeInit+0x208>)
 8007bd2:	4293      	cmp	r3, r2
 8007bd4:	d007      	beq.n	8007be6 <HAL_GPIO_DeInit+0xb2>
 8007bd6:	687b      	ldr	r3, [r7, #4]
 8007bd8:	4a59      	ldr	r2, [pc, #356]	; (8007d40 <HAL_GPIO_DeInit+0x20c>)
 8007bda:	4293      	cmp	r3, r2
 8007bdc:	d101      	bne.n	8007be2 <HAL_GPIO_DeInit+0xae>
 8007bde:	2309      	movs	r3, #9
 8007be0:	e012      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007be2:	230a      	movs	r3, #10
 8007be4:	e010      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007be6:	2308      	movs	r3, #8
 8007be8:	e00e      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007bea:	2307      	movs	r3, #7
 8007bec:	e00c      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007bee:	2306      	movs	r3, #6
 8007bf0:	e00a      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007bf2:	2305      	movs	r3, #5
 8007bf4:	e008      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007bf6:	2304      	movs	r3, #4
 8007bf8:	e006      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007bfa:	2303      	movs	r3, #3
 8007bfc:	e004      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007bfe:	2302      	movs	r3, #2
 8007c00:	e002      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007c02:	2301      	movs	r3, #1
 8007c04:	e000      	b.n	8007c08 <HAL_GPIO_DeInit+0xd4>
 8007c06:	2300      	movs	r3, #0
 8007c08:	697a      	ldr	r2, [r7, #20]
 8007c0a:	f002 0203 	and.w	r2, r2, #3
 8007c0e:	0092      	lsls	r2, r2, #2
 8007c10:	4093      	lsls	r3, r2
 8007c12:	68ba      	ldr	r2, [r7, #8]
 8007c14:	429a      	cmp	r2, r3
 8007c16:	d132      	bne.n	8007c7e <HAL_GPIO_DeInit+0x14a>
 8007c18:	4b4a      	ldr	r3, [pc, #296]	; (8007d44 <HAL_GPIO_DeInit+0x210>)
 8007c1a:	681a      	ldr	r2, [r3, #0]
 8007c1c:	68fb      	ldr	r3, [r7, #12]
 8007c1e:	43db      	mvns	r3, r3
 8007c20:	4948      	ldr	r1, [pc, #288]	; (8007d44 <HAL_GPIO_DeInit+0x210>)
 8007c22:	4013      	ands	r3, r2
 8007c24:	600b      	str	r3, [r1, #0]
 8007c26:	4b47      	ldr	r3, [pc, #284]	; (8007d44 <HAL_GPIO_DeInit+0x210>)
 8007c28:	685a      	ldr	r2, [r3, #4]
 8007c2a:	68fb      	ldr	r3, [r7, #12]
 8007c2c:	43db      	mvns	r3, r3
 8007c2e:	4945      	ldr	r1, [pc, #276]	; (8007d44 <HAL_GPIO_DeInit+0x210>)
 8007c30:	4013      	ands	r3, r2
 8007c32:	604b      	str	r3, [r1, #4]
 8007c34:	4b43      	ldr	r3, [pc, #268]	; (8007d44 <HAL_GPIO_DeInit+0x210>)
 8007c36:	689a      	ldr	r2, [r3, #8]
 8007c38:	68fb      	ldr	r3, [r7, #12]
 8007c3a:	43db      	mvns	r3, r3
 8007c3c:	4941      	ldr	r1, [pc, #260]	; (8007d44 <HAL_GPIO_DeInit+0x210>)
 8007c3e:	4013      	ands	r3, r2
 8007c40:	608b      	str	r3, [r1, #8]
 8007c42:	4b40      	ldr	r3, [pc, #256]	; (8007d44 <HAL_GPIO_DeInit+0x210>)
 8007c44:	68da      	ldr	r2, [r3, #12]
 8007c46:	68fb      	ldr	r3, [r7, #12]
 8007c48:	43db      	mvns	r3, r3
 8007c4a:	493e      	ldr	r1, [pc, #248]	; (8007d44 <HAL_GPIO_DeInit+0x210>)
 8007c4c:	4013      	ands	r3, r2
 8007c4e:	60cb      	str	r3, [r1, #12]
 8007c50:	697b      	ldr	r3, [r7, #20]
 8007c52:	f003 0303 	and.w	r3, r3, #3
 8007c56:	009b      	lsls	r3, r3, #2
 8007c58:	220f      	movs	r2, #15
 8007c5a:	fa02 f303 	lsl.w	r3, r2, r3
 8007c5e:	60bb      	str	r3, [r7, #8]
 8007c60:	4a2d      	ldr	r2, [pc, #180]	; (8007d18 <HAL_GPIO_DeInit+0x1e4>)
 8007c62:	697b      	ldr	r3, [r7, #20]
 8007c64:	089b      	lsrs	r3, r3, #2
 8007c66:	3302      	adds	r3, #2
 8007c68:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8007c6c:	68bb      	ldr	r3, [r7, #8]
 8007c6e:	43da      	mvns	r2, r3
 8007c70:	4829      	ldr	r0, [pc, #164]	; (8007d18 <HAL_GPIO_DeInit+0x1e4>)
 8007c72:	697b      	ldr	r3, [r7, #20]
 8007c74:	089b      	lsrs	r3, r3, #2
 8007c76:	400a      	ands	r2, r1
 8007c78:	3302      	adds	r3, #2
 8007c7a:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8007c7e:	687b      	ldr	r3, [r7, #4]
 8007c80:	681a      	ldr	r2, [r3, #0]
 8007c82:	697b      	ldr	r3, [r7, #20]
 8007c84:	005b      	lsls	r3, r3, #1
 8007c86:	2103      	movs	r1, #3
 8007c88:	fa01 f303 	lsl.w	r3, r1, r3
 8007c8c:	43db      	mvns	r3, r3
 8007c8e:	401a      	ands	r2, r3
 8007c90:	687b      	ldr	r3, [r7, #4]
 8007c92:	601a      	str	r2, [r3, #0]
 8007c94:	697b      	ldr	r3, [r7, #20]
 8007c96:	08da      	lsrs	r2, r3, #3
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	3208      	adds	r2, #8
 8007c9c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8007ca0:	697b      	ldr	r3, [r7, #20]
 8007ca2:	f003 0307 	and.w	r3, r3, #7
 8007ca6:	009b      	lsls	r3, r3, #2
 8007ca8:	220f      	movs	r2, #15
 8007caa:	fa02 f303 	lsl.w	r3, r2, r3
 8007cae:	43db      	mvns	r3, r3
 8007cb0:	697a      	ldr	r2, [r7, #20]
 8007cb2:	08d2      	lsrs	r2, r2, #3
 8007cb4:	4019      	ands	r1, r3
 8007cb6:	687b      	ldr	r3, [r7, #4]
 8007cb8:	3208      	adds	r2, #8
 8007cba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	68da      	ldr	r2, [r3, #12]
 8007cc2:	697b      	ldr	r3, [r7, #20]
 8007cc4:	005b      	lsls	r3, r3, #1
 8007cc6:	2103      	movs	r1, #3
 8007cc8:	fa01 f303 	lsl.w	r3, r1, r3
 8007ccc:	43db      	mvns	r3, r3
 8007cce:	401a      	ands	r2, r3
 8007cd0:	687b      	ldr	r3, [r7, #4]
 8007cd2:	60da      	str	r2, [r3, #12]
 8007cd4:	687b      	ldr	r3, [r7, #4]
 8007cd6:	685a      	ldr	r2, [r3, #4]
 8007cd8:	2101      	movs	r1, #1
 8007cda:	697b      	ldr	r3, [r7, #20]
 8007cdc:	fa01 f303 	lsl.w	r3, r1, r3
 8007ce0:	43db      	mvns	r3, r3
 8007ce2:	401a      	ands	r2, r3
 8007ce4:	687b      	ldr	r3, [r7, #4]
 8007ce6:	605a      	str	r2, [r3, #4]
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	689a      	ldr	r2, [r3, #8]
 8007cec:	697b      	ldr	r3, [r7, #20]
 8007cee:	005b      	lsls	r3, r3, #1
 8007cf0:	2103      	movs	r1, #3
 8007cf2:	fa01 f303 	lsl.w	r3, r1, r3
 8007cf6:	43db      	mvns	r3, r3
 8007cf8:	401a      	ands	r2, r3
 8007cfa:	687b      	ldr	r3, [r7, #4]
 8007cfc:	609a      	str	r2, [r3, #8]
 8007cfe:	697b      	ldr	r3, [r7, #20]
 8007d00:	3301      	adds	r3, #1
 8007d02:	617b      	str	r3, [r7, #20]
 8007d04:	697b      	ldr	r3, [r7, #20]
 8007d06:	2b0f      	cmp	r3, #15
 8007d08:	f67f af22 	bls.w	8007b50 <HAL_GPIO_DeInit+0x1c>
 8007d0c:	bf00      	nop
 8007d0e:	371c      	adds	r7, #28
 8007d10:	46bd      	mov	sp, r7
 8007d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d16:	4770      	bx	lr
 8007d18:	40013800 	.word	0x40013800
 8007d1c:	40020000 	.word	0x40020000
 8007d20:	40020400 	.word	0x40020400
 8007d24:	40020800 	.word	0x40020800
 8007d28:	40020c00 	.word	0x40020c00
 8007d2c:	40021000 	.word	0x40021000
 8007d30:	40021400 	.word	0x40021400
 8007d34:	40021800 	.word	0x40021800
 8007d38:	40021c00 	.word	0x40021c00
 8007d3c:	40022000 	.word	0x40022000
 8007d40:	40022400 	.word	0x40022400
 8007d44:	40013c00 	.word	0x40013c00

08007d48 <HAL_GPIO_ReadPin>:
 8007d48:	b480      	push	{r7}
 8007d4a:	b085      	sub	sp, #20
 8007d4c:	af00      	add	r7, sp, #0
 8007d4e:	6078      	str	r0, [r7, #4]
 8007d50:	460b      	mov	r3, r1
 8007d52:	807b      	strh	r3, [r7, #2]
 8007d54:	687b      	ldr	r3, [r7, #4]
 8007d56:	691a      	ldr	r2, [r3, #16]
 8007d58:	887b      	ldrh	r3, [r7, #2]
 8007d5a:	4013      	ands	r3, r2
 8007d5c:	2b00      	cmp	r3, #0
 8007d5e:	d002      	beq.n	8007d66 <HAL_GPIO_ReadPin+0x1e>
 8007d60:	2301      	movs	r3, #1
 8007d62:	73fb      	strb	r3, [r7, #15]
 8007d64:	e001      	b.n	8007d6a <HAL_GPIO_ReadPin+0x22>
 8007d66:	2300      	movs	r3, #0
 8007d68:	73fb      	strb	r3, [r7, #15]
 8007d6a:	7bfb      	ldrb	r3, [r7, #15]
 8007d6c:	4618      	mov	r0, r3
 8007d6e:	3714      	adds	r7, #20
 8007d70:	46bd      	mov	sp, r7
 8007d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d76:	4770      	bx	lr

08007d78 <HAL_GPIO_WritePin>:
 8007d78:	b480      	push	{r7}
 8007d7a:	b083      	sub	sp, #12
 8007d7c:	af00      	add	r7, sp, #0
 8007d7e:	6078      	str	r0, [r7, #4]
 8007d80:	460b      	mov	r3, r1
 8007d82:	807b      	strh	r3, [r7, #2]
 8007d84:	4613      	mov	r3, r2
 8007d86:	707b      	strb	r3, [r7, #1]
 8007d88:	787b      	ldrb	r3, [r7, #1]
 8007d8a:	2b00      	cmp	r3, #0
 8007d8c:	d003      	beq.n	8007d96 <HAL_GPIO_WritePin+0x1e>
 8007d8e:	887a      	ldrh	r2, [r7, #2]
 8007d90:	687b      	ldr	r3, [r7, #4]
 8007d92:	619a      	str	r2, [r3, #24]
 8007d94:	e003      	b.n	8007d9e <HAL_GPIO_WritePin+0x26>
 8007d96:	887b      	ldrh	r3, [r7, #2]
 8007d98:	041a      	lsls	r2, r3, #16
 8007d9a:	687b      	ldr	r3, [r7, #4]
 8007d9c:	619a      	str	r2, [r3, #24]
 8007d9e:	bf00      	nop
 8007da0:	370c      	adds	r7, #12
 8007da2:	46bd      	mov	sp, r7
 8007da4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007da8:	4770      	bx	lr
	...

08007dac <HAL_GPIO_EXTI_IRQHandler>:
 8007dac:	b580      	push	{r7, lr}
 8007dae:	b082      	sub	sp, #8
 8007db0:	af00      	add	r7, sp, #0
 8007db2:	4603      	mov	r3, r0
 8007db4:	80fb      	strh	r3, [r7, #6]
 8007db6:	4b08      	ldr	r3, [pc, #32]	; (8007dd8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8007db8:	695a      	ldr	r2, [r3, #20]
 8007dba:	88fb      	ldrh	r3, [r7, #6]
 8007dbc:	4013      	ands	r3, r2
 8007dbe:	2b00      	cmp	r3, #0
 8007dc0:	d006      	beq.n	8007dd0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8007dc2:	4a05      	ldr	r2, [pc, #20]	; (8007dd8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8007dc4:	88fb      	ldrh	r3, [r7, #6]
 8007dc6:	6153      	str	r3, [r2, #20]
 8007dc8:	88fb      	ldrh	r3, [r7, #6]
 8007dca:	4618      	mov	r0, r3
 8007dcc:	f7fa f922 	bl	8002014 <HAL_GPIO_EXTI_Callback>
 8007dd0:	bf00      	nop
 8007dd2:	3708      	adds	r7, #8
 8007dd4:	46bd      	mov	sp, r7
 8007dd6:	bd80      	pop	{r7, pc}
 8007dd8:	40013c00 	.word	0x40013c00

08007ddc <HAL_I2C_Init>:
 8007ddc:	b580      	push	{r7, lr}
 8007dde:	b082      	sub	sp, #8
 8007de0:	af00      	add	r7, sp, #0
 8007de2:	6078      	str	r0, [r7, #4]
 8007de4:	687b      	ldr	r3, [r7, #4]
 8007de6:	2b00      	cmp	r3, #0
 8007de8:	d101      	bne.n	8007dee <HAL_I2C_Init+0x12>
 8007dea:	2301      	movs	r3, #1
 8007dec:	e07f      	b.n	8007eee <HAL_I2C_Init+0x112>
 8007dee:	687b      	ldr	r3, [r7, #4]
 8007df0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8007df4:	b2db      	uxtb	r3, r3
 8007df6:	2b00      	cmp	r3, #0
 8007df8:	d106      	bne.n	8007e08 <HAL_I2C_Init+0x2c>
 8007dfa:	687b      	ldr	r3, [r7, #4]
 8007dfc:	2200      	movs	r2, #0
 8007dfe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007e02:	6878      	ldr	r0, [r7, #4]
 8007e04:	f7fd fd54 	bl	80058b0 <HAL_I2C_MspInit>
 8007e08:	687b      	ldr	r3, [r7, #4]
 8007e0a:	2224      	movs	r2, #36	; 0x24
 8007e0c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007e10:	687b      	ldr	r3, [r7, #4]
 8007e12:	681b      	ldr	r3, [r3, #0]
 8007e14:	681a      	ldr	r2, [r3, #0]
 8007e16:	687b      	ldr	r3, [r7, #4]
 8007e18:	681b      	ldr	r3, [r3, #0]
 8007e1a:	f022 0201 	bic.w	r2, r2, #1
 8007e1e:	601a      	str	r2, [r3, #0]
 8007e20:	687b      	ldr	r3, [r7, #4]
 8007e22:	685a      	ldr	r2, [r3, #4]
 8007e24:	687b      	ldr	r3, [r7, #4]
 8007e26:	681b      	ldr	r3, [r3, #0]
 8007e28:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007e2c:	611a      	str	r2, [r3, #16]
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	681b      	ldr	r3, [r3, #0]
 8007e32:	689a      	ldr	r2, [r3, #8]
 8007e34:	687b      	ldr	r3, [r7, #4]
 8007e36:	681b      	ldr	r3, [r3, #0]
 8007e38:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8007e3c:	609a      	str	r2, [r3, #8]
 8007e3e:	687b      	ldr	r3, [r7, #4]
 8007e40:	68db      	ldr	r3, [r3, #12]
 8007e42:	2b01      	cmp	r3, #1
 8007e44:	d107      	bne.n	8007e56 <HAL_I2C_Init+0x7a>
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	689a      	ldr	r2, [r3, #8]
 8007e4a:	687b      	ldr	r3, [r7, #4]
 8007e4c:	681b      	ldr	r3, [r3, #0]
 8007e4e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007e52:	609a      	str	r2, [r3, #8]
 8007e54:	e006      	b.n	8007e64 <HAL_I2C_Init+0x88>
 8007e56:	687b      	ldr	r3, [r7, #4]
 8007e58:	689a      	ldr	r2, [r3, #8]
 8007e5a:	687b      	ldr	r3, [r7, #4]
 8007e5c:	681b      	ldr	r3, [r3, #0]
 8007e5e:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8007e62:	609a      	str	r2, [r3, #8]
 8007e64:	687b      	ldr	r3, [r7, #4]
 8007e66:	68db      	ldr	r3, [r3, #12]
 8007e68:	2b02      	cmp	r3, #2
 8007e6a:	d104      	bne.n	8007e76 <HAL_I2C_Init+0x9a>
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	681b      	ldr	r3, [r3, #0]
 8007e70:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8007e74:	605a      	str	r2, [r3, #4]
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	681b      	ldr	r3, [r3, #0]
 8007e7a:	6859      	ldr	r1, [r3, #4]
 8007e7c:	687b      	ldr	r3, [r7, #4]
 8007e7e:	681a      	ldr	r2, [r3, #0]
 8007e80:	4b1d      	ldr	r3, [pc, #116]	; (8007ef8 <HAL_I2C_Init+0x11c>)
 8007e82:	430b      	orrs	r3, r1
 8007e84:	6053      	str	r3, [r2, #4]
 8007e86:	687b      	ldr	r3, [r7, #4]
 8007e88:	681b      	ldr	r3, [r3, #0]
 8007e8a:	68da      	ldr	r2, [r3, #12]
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	681b      	ldr	r3, [r3, #0]
 8007e90:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8007e94:	60da      	str	r2, [r3, #12]
 8007e96:	687b      	ldr	r3, [r7, #4]
 8007e98:	691a      	ldr	r2, [r3, #16]
 8007e9a:	687b      	ldr	r3, [r7, #4]
 8007e9c:	695b      	ldr	r3, [r3, #20]
 8007e9e:	ea42 0103 	orr.w	r1, r2, r3
 8007ea2:	687b      	ldr	r3, [r7, #4]
 8007ea4:	699b      	ldr	r3, [r3, #24]
 8007ea6:	021a      	lsls	r2, r3, #8
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	681b      	ldr	r3, [r3, #0]
 8007eac:	430a      	orrs	r2, r1
 8007eae:	60da      	str	r2, [r3, #12]
 8007eb0:	687b      	ldr	r3, [r7, #4]
 8007eb2:	69d9      	ldr	r1, [r3, #28]
 8007eb4:	687b      	ldr	r3, [r7, #4]
 8007eb6:	6a1a      	ldr	r2, [r3, #32]
 8007eb8:	687b      	ldr	r3, [r7, #4]
 8007eba:	681b      	ldr	r3, [r3, #0]
 8007ebc:	430a      	orrs	r2, r1
 8007ebe:	601a      	str	r2, [r3, #0]
 8007ec0:	687b      	ldr	r3, [r7, #4]
 8007ec2:	681b      	ldr	r3, [r3, #0]
 8007ec4:	681a      	ldr	r2, [r3, #0]
 8007ec6:	687b      	ldr	r3, [r7, #4]
 8007ec8:	681b      	ldr	r3, [r3, #0]
 8007eca:	f042 0201 	orr.w	r2, r2, #1
 8007ece:	601a      	str	r2, [r3, #0]
 8007ed0:	687b      	ldr	r3, [r7, #4]
 8007ed2:	2200      	movs	r2, #0
 8007ed4:	645a      	str	r2, [r3, #68]	; 0x44
 8007ed6:	687b      	ldr	r3, [r7, #4]
 8007ed8:	2220      	movs	r2, #32
 8007eda:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007ede:	687b      	ldr	r3, [r7, #4]
 8007ee0:	2200      	movs	r2, #0
 8007ee2:	631a      	str	r2, [r3, #48]	; 0x30
 8007ee4:	687b      	ldr	r3, [r7, #4]
 8007ee6:	2200      	movs	r2, #0
 8007ee8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007eec:	2300      	movs	r3, #0
 8007eee:	4618      	mov	r0, r3
 8007ef0:	3708      	adds	r7, #8
 8007ef2:	46bd      	mov	sp, r7
 8007ef4:	bd80      	pop	{r7, pc}
 8007ef6:	bf00      	nop
 8007ef8:	02008000 	.word	0x02008000

08007efc <HAL_I2C_DeInit>:
 8007efc:	b580      	push	{r7, lr}
 8007efe:	b082      	sub	sp, #8
 8007f00:	af00      	add	r7, sp, #0
 8007f02:	6078      	str	r0, [r7, #4]
 8007f04:	687b      	ldr	r3, [r7, #4]
 8007f06:	2b00      	cmp	r3, #0
 8007f08:	d101      	bne.n	8007f0e <HAL_I2C_DeInit+0x12>
 8007f0a:	2301      	movs	r3, #1
 8007f0c:	e021      	b.n	8007f52 <HAL_I2C_DeInit+0x56>
 8007f0e:	687b      	ldr	r3, [r7, #4]
 8007f10:	2224      	movs	r2, #36	; 0x24
 8007f12:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007f16:	687b      	ldr	r3, [r7, #4]
 8007f18:	681b      	ldr	r3, [r3, #0]
 8007f1a:	681a      	ldr	r2, [r3, #0]
 8007f1c:	687b      	ldr	r3, [r7, #4]
 8007f1e:	681b      	ldr	r3, [r3, #0]
 8007f20:	f022 0201 	bic.w	r2, r2, #1
 8007f24:	601a      	str	r2, [r3, #0]
 8007f26:	6878      	ldr	r0, [r7, #4]
 8007f28:	f7fd fd3a 	bl	80059a0 <HAL_I2C_MspDeInit>
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	2200      	movs	r2, #0
 8007f30:	645a      	str	r2, [r3, #68]	; 0x44
 8007f32:	687b      	ldr	r3, [r7, #4]
 8007f34:	2200      	movs	r2, #0
 8007f36:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007f3a:	687b      	ldr	r3, [r7, #4]
 8007f3c:	2200      	movs	r2, #0
 8007f3e:	631a      	str	r2, [r3, #48]	; 0x30
 8007f40:	687b      	ldr	r3, [r7, #4]
 8007f42:	2200      	movs	r2, #0
 8007f44:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007f48:	687b      	ldr	r3, [r7, #4]
 8007f4a:	2200      	movs	r2, #0
 8007f4c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007f50:	2300      	movs	r3, #0
 8007f52:	4618      	mov	r0, r3
 8007f54:	3708      	adds	r7, #8
 8007f56:	46bd      	mov	sp, r7
 8007f58:	bd80      	pop	{r7, pc}
	...

08007f5c <HAL_I2C_Mem_Write>:
 8007f5c:	b580      	push	{r7, lr}
 8007f5e:	b088      	sub	sp, #32
 8007f60:	af02      	add	r7, sp, #8
 8007f62:	60f8      	str	r0, [r7, #12]
 8007f64:	4608      	mov	r0, r1
 8007f66:	4611      	mov	r1, r2
 8007f68:	461a      	mov	r2, r3
 8007f6a:	4603      	mov	r3, r0
 8007f6c:	817b      	strh	r3, [r7, #10]
 8007f6e:	460b      	mov	r3, r1
 8007f70:	813b      	strh	r3, [r7, #8]
 8007f72:	4613      	mov	r3, r2
 8007f74:	80fb      	strh	r3, [r7, #6]
 8007f76:	68fb      	ldr	r3, [r7, #12]
 8007f78:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8007f7c:	b2db      	uxtb	r3, r3
 8007f7e:	2b20      	cmp	r3, #32
 8007f80:	f040 80f9 	bne.w	8008176 <HAL_I2C_Mem_Write+0x21a>
 8007f84:	6a3b      	ldr	r3, [r7, #32]
 8007f86:	2b00      	cmp	r3, #0
 8007f88:	d002      	beq.n	8007f90 <HAL_I2C_Mem_Write+0x34>
 8007f8a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8007f8c:	2b00      	cmp	r3, #0
 8007f8e:	d105      	bne.n	8007f9c <HAL_I2C_Mem_Write+0x40>
 8007f90:	68fb      	ldr	r3, [r7, #12]
 8007f92:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007f96:	645a      	str	r2, [r3, #68]	; 0x44
 8007f98:	2301      	movs	r3, #1
 8007f9a:	e0ed      	b.n	8008178 <HAL_I2C_Mem_Write+0x21c>
 8007f9c:	68fb      	ldr	r3, [r7, #12]
 8007f9e:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8007fa2:	2b01      	cmp	r3, #1
 8007fa4:	d101      	bne.n	8007faa <HAL_I2C_Mem_Write+0x4e>
 8007fa6:	2302      	movs	r3, #2
 8007fa8:	e0e6      	b.n	8008178 <HAL_I2C_Mem_Write+0x21c>
 8007faa:	68fb      	ldr	r3, [r7, #12]
 8007fac:	2201      	movs	r2, #1
 8007fae:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007fb2:	f7fe f9f3 	bl	800639c <HAL_GetTick>
 8007fb6:	6178      	str	r0, [r7, #20]
 8007fb8:	697b      	ldr	r3, [r7, #20]
 8007fba:	9300      	str	r3, [sp, #0]
 8007fbc:	2319      	movs	r3, #25
 8007fbe:	2201      	movs	r2, #1
 8007fc0:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8007fc4:	68f8      	ldr	r0, [r7, #12]
 8007fc6:	f000 fad1 	bl	800856c <I2C_WaitOnFlagUntilTimeout>
 8007fca:	4603      	mov	r3, r0
 8007fcc:	2b00      	cmp	r3, #0
 8007fce:	d001      	beq.n	8007fd4 <HAL_I2C_Mem_Write+0x78>
 8007fd0:	2301      	movs	r3, #1
 8007fd2:	e0d1      	b.n	8008178 <HAL_I2C_Mem_Write+0x21c>
 8007fd4:	68fb      	ldr	r3, [r7, #12]
 8007fd6:	2221      	movs	r2, #33	; 0x21
 8007fd8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007fdc:	68fb      	ldr	r3, [r7, #12]
 8007fde:	2240      	movs	r2, #64	; 0x40
 8007fe0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007fe4:	68fb      	ldr	r3, [r7, #12]
 8007fe6:	2200      	movs	r2, #0
 8007fe8:	645a      	str	r2, [r3, #68]	; 0x44
 8007fea:	68fb      	ldr	r3, [r7, #12]
 8007fec:	6a3a      	ldr	r2, [r7, #32]
 8007fee:	625a      	str	r2, [r3, #36]	; 0x24
 8007ff0:	68fb      	ldr	r3, [r7, #12]
 8007ff2:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8007ff4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007ff6:	68fb      	ldr	r3, [r7, #12]
 8007ff8:	2200      	movs	r2, #0
 8007ffa:	635a      	str	r2, [r3, #52]	; 0x34
 8007ffc:	88f8      	ldrh	r0, [r7, #6]
 8007ffe:	893a      	ldrh	r2, [r7, #8]
 8008000:	8979      	ldrh	r1, [r7, #10]
 8008002:	697b      	ldr	r3, [r7, #20]
 8008004:	9301      	str	r3, [sp, #4]
 8008006:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008008:	9300      	str	r3, [sp, #0]
 800800a:	4603      	mov	r3, r0
 800800c:	68f8      	ldr	r0, [r7, #12]
 800800e:	f000 f9e1 	bl	80083d4 <I2C_RequestMemoryWrite>
 8008012:	4603      	mov	r3, r0
 8008014:	2b00      	cmp	r3, #0
 8008016:	d005      	beq.n	8008024 <HAL_I2C_Mem_Write+0xc8>
 8008018:	68fb      	ldr	r3, [r7, #12]
 800801a:	2200      	movs	r2, #0
 800801c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008020:	2301      	movs	r3, #1
 8008022:	e0a9      	b.n	8008178 <HAL_I2C_Mem_Write+0x21c>
 8008024:	68fb      	ldr	r3, [r7, #12]
 8008026:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008028:	b29b      	uxth	r3, r3
 800802a:	2bff      	cmp	r3, #255	; 0xff
 800802c:	d90e      	bls.n	800804c <HAL_I2C_Mem_Write+0xf0>
 800802e:	68fb      	ldr	r3, [r7, #12]
 8008030:	22ff      	movs	r2, #255	; 0xff
 8008032:	851a      	strh	r2, [r3, #40]	; 0x28
 8008034:	68fb      	ldr	r3, [r7, #12]
 8008036:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008038:	b2da      	uxtb	r2, r3
 800803a:	8979      	ldrh	r1, [r7, #10]
 800803c:	2300      	movs	r3, #0
 800803e:	9300      	str	r3, [sp, #0]
 8008040:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008044:	68f8      	ldr	r0, [r7, #12]
 8008046:	f000 fbb3 	bl	80087b0 <I2C_TransferConfig>
 800804a:	e00f      	b.n	800806c <HAL_I2C_Mem_Write+0x110>
 800804c:	68fb      	ldr	r3, [r7, #12]
 800804e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008050:	b29a      	uxth	r2, r3
 8008052:	68fb      	ldr	r3, [r7, #12]
 8008054:	851a      	strh	r2, [r3, #40]	; 0x28
 8008056:	68fb      	ldr	r3, [r7, #12]
 8008058:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800805a:	b2da      	uxtb	r2, r3
 800805c:	8979      	ldrh	r1, [r7, #10]
 800805e:	2300      	movs	r3, #0
 8008060:	9300      	str	r3, [sp, #0]
 8008062:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8008066:	68f8      	ldr	r0, [r7, #12]
 8008068:	f000 fba2 	bl	80087b0 <I2C_TransferConfig>
 800806c:	697a      	ldr	r2, [r7, #20]
 800806e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008070:	68f8      	ldr	r0, [r7, #12]
 8008072:	f000 fabb 	bl	80085ec <I2C_WaitOnTXISFlagUntilTimeout>
 8008076:	4603      	mov	r3, r0
 8008078:	2b00      	cmp	r3, #0
 800807a:	d001      	beq.n	8008080 <HAL_I2C_Mem_Write+0x124>
 800807c:	2301      	movs	r3, #1
 800807e:	e07b      	b.n	8008178 <HAL_I2C_Mem_Write+0x21c>
 8008080:	68fb      	ldr	r3, [r7, #12]
 8008082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008084:	781a      	ldrb	r2, [r3, #0]
 8008086:	68fb      	ldr	r3, [r7, #12]
 8008088:	681b      	ldr	r3, [r3, #0]
 800808a:	629a      	str	r2, [r3, #40]	; 0x28
 800808c:	68fb      	ldr	r3, [r7, #12]
 800808e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008090:	1c5a      	adds	r2, r3, #1
 8008092:	68fb      	ldr	r3, [r7, #12]
 8008094:	625a      	str	r2, [r3, #36]	; 0x24
 8008096:	68fb      	ldr	r3, [r7, #12]
 8008098:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800809a:	b29b      	uxth	r3, r3
 800809c:	3b01      	subs	r3, #1
 800809e:	b29a      	uxth	r2, r3
 80080a0:	68fb      	ldr	r3, [r7, #12]
 80080a2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80080a4:	68fb      	ldr	r3, [r7, #12]
 80080a6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80080a8:	3b01      	subs	r3, #1
 80080aa:	b29a      	uxth	r2, r3
 80080ac:	68fb      	ldr	r3, [r7, #12]
 80080ae:	851a      	strh	r2, [r3, #40]	; 0x28
 80080b0:	68fb      	ldr	r3, [r7, #12]
 80080b2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80080b4:	b29b      	uxth	r3, r3
 80080b6:	2b00      	cmp	r3, #0
 80080b8:	d034      	beq.n	8008124 <HAL_I2C_Mem_Write+0x1c8>
 80080ba:	68fb      	ldr	r3, [r7, #12]
 80080bc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80080be:	2b00      	cmp	r3, #0
 80080c0:	d130      	bne.n	8008124 <HAL_I2C_Mem_Write+0x1c8>
 80080c2:	697b      	ldr	r3, [r7, #20]
 80080c4:	9300      	str	r3, [sp, #0]
 80080c6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80080c8:	2200      	movs	r2, #0
 80080ca:	2180      	movs	r1, #128	; 0x80
 80080cc:	68f8      	ldr	r0, [r7, #12]
 80080ce:	f000 fa4d 	bl	800856c <I2C_WaitOnFlagUntilTimeout>
 80080d2:	4603      	mov	r3, r0
 80080d4:	2b00      	cmp	r3, #0
 80080d6:	d001      	beq.n	80080dc <HAL_I2C_Mem_Write+0x180>
 80080d8:	2301      	movs	r3, #1
 80080da:	e04d      	b.n	8008178 <HAL_I2C_Mem_Write+0x21c>
 80080dc:	68fb      	ldr	r3, [r7, #12]
 80080de:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80080e0:	b29b      	uxth	r3, r3
 80080e2:	2bff      	cmp	r3, #255	; 0xff
 80080e4:	d90e      	bls.n	8008104 <HAL_I2C_Mem_Write+0x1a8>
 80080e6:	68fb      	ldr	r3, [r7, #12]
 80080e8:	22ff      	movs	r2, #255	; 0xff
 80080ea:	851a      	strh	r2, [r3, #40]	; 0x28
 80080ec:	68fb      	ldr	r3, [r7, #12]
 80080ee:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80080f0:	b2da      	uxtb	r2, r3
 80080f2:	8979      	ldrh	r1, [r7, #10]
 80080f4:	2300      	movs	r3, #0
 80080f6:	9300      	str	r3, [sp, #0]
 80080f8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80080fc:	68f8      	ldr	r0, [r7, #12]
 80080fe:	f000 fb57 	bl	80087b0 <I2C_TransferConfig>
 8008102:	e00f      	b.n	8008124 <HAL_I2C_Mem_Write+0x1c8>
 8008104:	68fb      	ldr	r3, [r7, #12]
 8008106:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008108:	b29a      	uxth	r2, r3
 800810a:	68fb      	ldr	r3, [r7, #12]
 800810c:	851a      	strh	r2, [r3, #40]	; 0x28
 800810e:	68fb      	ldr	r3, [r7, #12]
 8008110:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008112:	b2da      	uxtb	r2, r3
 8008114:	8979      	ldrh	r1, [r7, #10]
 8008116:	2300      	movs	r3, #0
 8008118:	9300      	str	r3, [sp, #0]
 800811a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800811e:	68f8      	ldr	r0, [r7, #12]
 8008120:	f000 fb46 	bl	80087b0 <I2C_TransferConfig>
 8008124:	68fb      	ldr	r3, [r7, #12]
 8008126:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008128:	b29b      	uxth	r3, r3
 800812a:	2b00      	cmp	r3, #0
 800812c:	d19e      	bne.n	800806c <HAL_I2C_Mem_Write+0x110>
 800812e:	697a      	ldr	r2, [r7, #20]
 8008130:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008132:	68f8      	ldr	r0, [r7, #12]
 8008134:	f000 fa9a 	bl	800866c <I2C_WaitOnSTOPFlagUntilTimeout>
 8008138:	4603      	mov	r3, r0
 800813a:	2b00      	cmp	r3, #0
 800813c:	d001      	beq.n	8008142 <HAL_I2C_Mem_Write+0x1e6>
 800813e:	2301      	movs	r3, #1
 8008140:	e01a      	b.n	8008178 <HAL_I2C_Mem_Write+0x21c>
 8008142:	68fb      	ldr	r3, [r7, #12]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	2220      	movs	r2, #32
 8008148:	61da      	str	r2, [r3, #28]
 800814a:	68fb      	ldr	r3, [r7, #12]
 800814c:	681b      	ldr	r3, [r3, #0]
 800814e:	6859      	ldr	r1, [r3, #4]
 8008150:	68fb      	ldr	r3, [r7, #12]
 8008152:	681a      	ldr	r2, [r3, #0]
 8008154:	4b0a      	ldr	r3, [pc, #40]	; (8008180 <HAL_I2C_Mem_Write+0x224>)
 8008156:	400b      	ands	r3, r1
 8008158:	6053      	str	r3, [r2, #4]
 800815a:	68fb      	ldr	r3, [r7, #12]
 800815c:	2220      	movs	r2, #32
 800815e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008162:	68fb      	ldr	r3, [r7, #12]
 8008164:	2200      	movs	r2, #0
 8008166:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800816a:	68fb      	ldr	r3, [r7, #12]
 800816c:	2200      	movs	r2, #0
 800816e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008172:	2300      	movs	r3, #0
 8008174:	e000      	b.n	8008178 <HAL_I2C_Mem_Write+0x21c>
 8008176:	2302      	movs	r3, #2
 8008178:	4618      	mov	r0, r3
 800817a:	3718      	adds	r7, #24
 800817c:	46bd      	mov	sp, r7
 800817e:	bd80      	pop	{r7, pc}
 8008180:	fe00e800 	.word	0xfe00e800

08008184 <HAL_I2C_Mem_Read>:
 8008184:	b580      	push	{r7, lr}
 8008186:	b088      	sub	sp, #32
 8008188:	af02      	add	r7, sp, #8
 800818a:	60f8      	str	r0, [r7, #12]
 800818c:	4608      	mov	r0, r1
 800818e:	4611      	mov	r1, r2
 8008190:	461a      	mov	r2, r3
 8008192:	4603      	mov	r3, r0
 8008194:	817b      	strh	r3, [r7, #10]
 8008196:	460b      	mov	r3, r1
 8008198:	813b      	strh	r3, [r7, #8]
 800819a:	4613      	mov	r3, r2
 800819c:	80fb      	strh	r3, [r7, #6]
 800819e:	68fb      	ldr	r3, [r7, #12]
 80081a0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80081a4:	b2db      	uxtb	r3, r3
 80081a6:	2b20      	cmp	r3, #32
 80081a8:	f040 80fd 	bne.w	80083a6 <HAL_I2C_Mem_Read+0x222>
 80081ac:	6a3b      	ldr	r3, [r7, #32]
 80081ae:	2b00      	cmp	r3, #0
 80081b0:	d002      	beq.n	80081b8 <HAL_I2C_Mem_Read+0x34>
 80081b2:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80081b4:	2b00      	cmp	r3, #0
 80081b6:	d105      	bne.n	80081c4 <HAL_I2C_Mem_Read+0x40>
 80081b8:	68fb      	ldr	r3, [r7, #12]
 80081ba:	f44f 7200 	mov.w	r2, #512	; 0x200
 80081be:	645a      	str	r2, [r3, #68]	; 0x44
 80081c0:	2301      	movs	r3, #1
 80081c2:	e0f1      	b.n	80083a8 <HAL_I2C_Mem_Read+0x224>
 80081c4:	68fb      	ldr	r3, [r7, #12]
 80081c6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80081ca:	2b01      	cmp	r3, #1
 80081cc:	d101      	bne.n	80081d2 <HAL_I2C_Mem_Read+0x4e>
 80081ce:	2302      	movs	r3, #2
 80081d0:	e0ea      	b.n	80083a8 <HAL_I2C_Mem_Read+0x224>
 80081d2:	68fb      	ldr	r3, [r7, #12]
 80081d4:	2201      	movs	r2, #1
 80081d6:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80081da:	f7fe f8df 	bl	800639c <HAL_GetTick>
 80081de:	6178      	str	r0, [r7, #20]
 80081e0:	697b      	ldr	r3, [r7, #20]
 80081e2:	9300      	str	r3, [sp, #0]
 80081e4:	2319      	movs	r3, #25
 80081e6:	2201      	movs	r2, #1
 80081e8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80081ec:	68f8      	ldr	r0, [r7, #12]
 80081ee:	f000 f9bd 	bl	800856c <I2C_WaitOnFlagUntilTimeout>
 80081f2:	4603      	mov	r3, r0
 80081f4:	2b00      	cmp	r3, #0
 80081f6:	d001      	beq.n	80081fc <HAL_I2C_Mem_Read+0x78>
 80081f8:	2301      	movs	r3, #1
 80081fa:	e0d5      	b.n	80083a8 <HAL_I2C_Mem_Read+0x224>
 80081fc:	68fb      	ldr	r3, [r7, #12]
 80081fe:	2222      	movs	r2, #34	; 0x22
 8008200:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008204:	68fb      	ldr	r3, [r7, #12]
 8008206:	2240      	movs	r2, #64	; 0x40
 8008208:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800820c:	68fb      	ldr	r3, [r7, #12]
 800820e:	2200      	movs	r2, #0
 8008210:	645a      	str	r2, [r3, #68]	; 0x44
 8008212:	68fb      	ldr	r3, [r7, #12]
 8008214:	6a3a      	ldr	r2, [r7, #32]
 8008216:	625a      	str	r2, [r3, #36]	; 0x24
 8008218:	68fb      	ldr	r3, [r7, #12]
 800821a:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 800821c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800821e:	68fb      	ldr	r3, [r7, #12]
 8008220:	2200      	movs	r2, #0
 8008222:	635a      	str	r2, [r3, #52]	; 0x34
 8008224:	88f8      	ldrh	r0, [r7, #6]
 8008226:	893a      	ldrh	r2, [r7, #8]
 8008228:	8979      	ldrh	r1, [r7, #10]
 800822a:	697b      	ldr	r3, [r7, #20]
 800822c:	9301      	str	r3, [sp, #4]
 800822e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008230:	9300      	str	r3, [sp, #0]
 8008232:	4603      	mov	r3, r0
 8008234:	68f8      	ldr	r0, [r7, #12]
 8008236:	f000 f921 	bl	800847c <I2C_RequestMemoryRead>
 800823a:	4603      	mov	r3, r0
 800823c:	2b00      	cmp	r3, #0
 800823e:	d005      	beq.n	800824c <HAL_I2C_Mem_Read+0xc8>
 8008240:	68fb      	ldr	r3, [r7, #12]
 8008242:	2200      	movs	r2, #0
 8008244:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008248:	2301      	movs	r3, #1
 800824a:	e0ad      	b.n	80083a8 <HAL_I2C_Mem_Read+0x224>
 800824c:	68fb      	ldr	r3, [r7, #12]
 800824e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008250:	b29b      	uxth	r3, r3
 8008252:	2bff      	cmp	r3, #255	; 0xff
 8008254:	d90e      	bls.n	8008274 <HAL_I2C_Mem_Read+0xf0>
 8008256:	68fb      	ldr	r3, [r7, #12]
 8008258:	22ff      	movs	r2, #255	; 0xff
 800825a:	851a      	strh	r2, [r3, #40]	; 0x28
 800825c:	68fb      	ldr	r3, [r7, #12]
 800825e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008260:	b2da      	uxtb	r2, r3
 8008262:	8979      	ldrh	r1, [r7, #10]
 8008264:	4b52      	ldr	r3, [pc, #328]	; (80083b0 <HAL_I2C_Mem_Read+0x22c>)
 8008266:	9300      	str	r3, [sp, #0]
 8008268:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800826c:	68f8      	ldr	r0, [r7, #12]
 800826e:	f000 fa9f 	bl	80087b0 <I2C_TransferConfig>
 8008272:	e00f      	b.n	8008294 <HAL_I2C_Mem_Read+0x110>
 8008274:	68fb      	ldr	r3, [r7, #12]
 8008276:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008278:	b29a      	uxth	r2, r3
 800827a:	68fb      	ldr	r3, [r7, #12]
 800827c:	851a      	strh	r2, [r3, #40]	; 0x28
 800827e:	68fb      	ldr	r3, [r7, #12]
 8008280:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008282:	b2da      	uxtb	r2, r3
 8008284:	8979      	ldrh	r1, [r7, #10]
 8008286:	4b4a      	ldr	r3, [pc, #296]	; (80083b0 <HAL_I2C_Mem_Read+0x22c>)
 8008288:	9300      	str	r3, [sp, #0]
 800828a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800828e:	68f8      	ldr	r0, [r7, #12]
 8008290:	f000 fa8e 	bl	80087b0 <I2C_TransferConfig>
 8008294:	697b      	ldr	r3, [r7, #20]
 8008296:	9300      	str	r3, [sp, #0]
 8008298:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800829a:	2200      	movs	r2, #0
 800829c:	2104      	movs	r1, #4
 800829e:	68f8      	ldr	r0, [r7, #12]
 80082a0:	f000 f964 	bl	800856c <I2C_WaitOnFlagUntilTimeout>
 80082a4:	4603      	mov	r3, r0
 80082a6:	2b00      	cmp	r3, #0
 80082a8:	d001      	beq.n	80082ae <HAL_I2C_Mem_Read+0x12a>
 80082aa:	2301      	movs	r3, #1
 80082ac:	e07c      	b.n	80083a8 <HAL_I2C_Mem_Read+0x224>
 80082ae:	68fb      	ldr	r3, [r7, #12]
 80082b0:	681b      	ldr	r3, [r3, #0]
 80082b2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80082b4:	68fb      	ldr	r3, [r7, #12]
 80082b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80082b8:	b2d2      	uxtb	r2, r2
 80082ba:	701a      	strb	r2, [r3, #0]
 80082bc:	68fb      	ldr	r3, [r7, #12]
 80082be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80082c0:	1c5a      	adds	r2, r3, #1
 80082c2:	68fb      	ldr	r3, [r7, #12]
 80082c4:	625a      	str	r2, [r3, #36]	; 0x24
 80082c6:	68fb      	ldr	r3, [r7, #12]
 80082c8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80082ca:	3b01      	subs	r3, #1
 80082cc:	b29a      	uxth	r2, r3
 80082ce:	68fb      	ldr	r3, [r7, #12]
 80082d0:	851a      	strh	r2, [r3, #40]	; 0x28
 80082d2:	68fb      	ldr	r3, [r7, #12]
 80082d4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80082d6:	b29b      	uxth	r3, r3
 80082d8:	3b01      	subs	r3, #1
 80082da:	b29a      	uxth	r2, r3
 80082dc:	68fb      	ldr	r3, [r7, #12]
 80082de:	855a      	strh	r2, [r3, #42]	; 0x2a
 80082e0:	68fb      	ldr	r3, [r7, #12]
 80082e2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80082e4:	b29b      	uxth	r3, r3
 80082e6:	2b00      	cmp	r3, #0
 80082e8:	d034      	beq.n	8008354 <HAL_I2C_Mem_Read+0x1d0>
 80082ea:	68fb      	ldr	r3, [r7, #12]
 80082ec:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80082ee:	2b00      	cmp	r3, #0
 80082f0:	d130      	bne.n	8008354 <HAL_I2C_Mem_Read+0x1d0>
 80082f2:	697b      	ldr	r3, [r7, #20]
 80082f4:	9300      	str	r3, [sp, #0]
 80082f6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80082f8:	2200      	movs	r2, #0
 80082fa:	2180      	movs	r1, #128	; 0x80
 80082fc:	68f8      	ldr	r0, [r7, #12]
 80082fe:	f000 f935 	bl	800856c <I2C_WaitOnFlagUntilTimeout>
 8008302:	4603      	mov	r3, r0
 8008304:	2b00      	cmp	r3, #0
 8008306:	d001      	beq.n	800830c <HAL_I2C_Mem_Read+0x188>
 8008308:	2301      	movs	r3, #1
 800830a:	e04d      	b.n	80083a8 <HAL_I2C_Mem_Read+0x224>
 800830c:	68fb      	ldr	r3, [r7, #12]
 800830e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008310:	b29b      	uxth	r3, r3
 8008312:	2bff      	cmp	r3, #255	; 0xff
 8008314:	d90e      	bls.n	8008334 <HAL_I2C_Mem_Read+0x1b0>
 8008316:	68fb      	ldr	r3, [r7, #12]
 8008318:	22ff      	movs	r2, #255	; 0xff
 800831a:	851a      	strh	r2, [r3, #40]	; 0x28
 800831c:	68fb      	ldr	r3, [r7, #12]
 800831e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008320:	b2da      	uxtb	r2, r3
 8008322:	8979      	ldrh	r1, [r7, #10]
 8008324:	2300      	movs	r3, #0
 8008326:	9300      	str	r3, [sp, #0]
 8008328:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800832c:	68f8      	ldr	r0, [r7, #12]
 800832e:	f000 fa3f 	bl	80087b0 <I2C_TransferConfig>
 8008332:	e00f      	b.n	8008354 <HAL_I2C_Mem_Read+0x1d0>
 8008334:	68fb      	ldr	r3, [r7, #12]
 8008336:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008338:	b29a      	uxth	r2, r3
 800833a:	68fb      	ldr	r3, [r7, #12]
 800833c:	851a      	strh	r2, [r3, #40]	; 0x28
 800833e:	68fb      	ldr	r3, [r7, #12]
 8008340:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8008342:	b2da      	uxtb	r2, r3
 8008344:	8979      	ldrh	r1, [r7, #10]
 8008346:	2300      	movs	r3, #0
 8008348:	9300      	str	r3, [sp, #0]
 800834a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 800834e:	68f8      	ldr	r0, [r7, #12]
 8008350:	f000 fa2e 	bl	80087b0 <I2C_TransferConfig>
 8008354:	68fb      	ldr	r3, [r7, #12]
 8008356:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8008358:	b29b      	uxth	r3, r3
 800835a:	2b00      	cmp	r3, #0
 800835c:	d19a      	bne.n	8008294 <HAL_I2C_Mem_Read+0x110>
 800835e:	697a      	ldr	r2, [r7, #20]
 8008360:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008362:	68f8      	ldr	r0, [r7, #12]
 8008364:	f000 f982 	bl	800866c <I2C_WaitOnSTOPFlagUntilTimeout>
 8008368:	4603      	mov	r3, r0
 800836a:	2b00      	cmp	r3, #0
 800836c:	d001      	beq.n	8008372 <HAL_I2C_Mem_Read+0x1ee>
 800836e:	2301      	movs	r3, #1
 8008370:	e01a      	b.n	80083a8 <HAL_I2C_Mem_Read+0x224>
 8008372:	68fb      	ldr	r3, [r7, #12]
 8008374:	681b      	ldr	r3, [r3, #0]
 8008376:	2220      	movs	r2, #32
 8008378:	61da      	str	r2, [r3, #28]
 800837a:	68fb      	ldr	r3, [r7, #12]
 800837c:	681b      	ldr	r3, [r3, #0]
 800837e:	6859      	ldr	r1, [r3, #4]
 8008380:	68fb      	ldr	r3, [r7, #12]
 8008382:	681a      	ldr	r2, [r3, #0]
 8008384:	4b0b      	ldr	r3, [pc, #44]	; (80083b4 <HAL_I2C_Mem_Read+0x230>)
 8008386:	400b      	ands	r3, r1
 8008388:	6053      	str	r3, [r2, #4]
 800838a:	68fb      	ldr	r3, [r7, #12]
 800838c:	2220      	movs	r2, #32
 800838e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008392:	68fb      	ldr	r3, [r7, #12]
 8008394:	2200      	movs	r2, #0
 8008396:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800839a:	68fb      	ldr	r3, [r7, #12]
 800839c:	2200      	movs	r2, #0
 800839e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80083a2:	2300      	movs	r3, #0
 80083a4:	e000      	b.n	80083a8 <HAL_I2C_Mem_Read+0x224>
 80083a6:	2302      	movs	r3, #2
 80083a8:	4618      	mov	r0, r3
 80083aa:	3718      	adds	r7, #24
 80083ac:	46bd      	mov	sp, r7
 80083ae:	bd80      	pop	{r7, pc}
 80083b0:	80002400 	.word	0x80002400
 80083b4:	fe00e800 	.word	0xfe00e800

080083b8 <HAL_I2C_GetState>:
 80083b8:	b480      	push	{r7}
 80083ba:	b083      	sub	sp, #12
 80083bc:	af00      	add	r7, sp, #0
 80083be:	6078      	str	r0, [r7, #4]
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80083c6:	b2db      	uxtb	r3, r3
 80083c8:	4618      	mov	r0, r3
 80083ca:	370c      	adds	r7, #12
 80083cc:	46bd      	mov	sp, r7
 80083ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083d2:	4770      	bx	lr

080083d4 <I2C_RequestMemoryWrite>:
 80083d4:	b580      	push	{r7, lr}
 80083d6:	b086      	sub	sp, #24
 80083d8:	af02      	add	r7, sp, #8
 80083da:	60f8      	str	r0, [r7, #12]
 80083dc:	4608      	mov	r0, r1
 80083de:	4611      	mov	r1, r2
 80083e0:	461a      	mov	r2, r3
 80083e2:	4603      	mov	r3, r0
 80083e4:	817b      	strh	r3, [r7, #10]
 80083e6:	460b      	mov	r3, r1
 80083e8:	813b      	strh	r3, [r7, #8]
 80083ea:	4613      	mov	r3, r2
 80083ec:	80fb      	strh	r3, [r7, #6]
 80083ee:	88fb      	ldrh	r3, [r7, #6]
 80083f0:	b2da      	uxtb	r2, r3
 80083f2:	8979      	ldrh	r1, [r7, #10]
 80083f4:	4b20      	ldr	r3, [pc, #128]	; (8008478 <I2C_RequestMemoryWrite+0xa4>)
 80083f6:	9300      	str	r3, [sp, #0]
 80083f8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80083fc:	68f8      	ldr	r0, [r7, #12]
 80083fe:	f000 f9d7 	bl	80087b0 <I2C_TransferConfig>
 8008402:	69fa      	ldr	r2, [r7, #28]
 8008404:	69b9      	ldr	r1, [r7, #24]
 8008406:	68f8      	ldr	r0, [r7, #12]
 8008408:	f000 f8f0 	bl	80085ec <I2C_WaitOnTXISFlagUntilTimeout>
 800840c:	4603      	mov	r3, r0
 800840e:	2b00      	cmp	r3, #0
 8008410:	d001      	beq.n	8008416 <I2C_RequestMemoryWrite+0x42>
 8008412:	2301      	movs	r3, #1
 8008414:	e02c      	b.n	8008470 <I2C_RequestMemoryWrite+0x9c>
 8008416:	88fb      	ldrh	r3, [r7, #6]
 8008418:	2b01      	cmp	r3, #1
 800841a:	d105      	bne.n	8008428 <I2C_RequestMemoryWrite+0x54>
 800841c:	893b      	ldrh	r3, [r7, #8]
 800841e:	b2da      	uxtb	r2, r3
 8008420:	68fb      	ldr	r3, [r7, #12]
 8008422:	681b      	ldr	r3, [r3, #0]
 8008424:	629a      	str	r2, [r3, #40]	; 0x28
 8008426:	e015      	b.n	8008454 <I2C_RequestMemoryWrite+0x80>
 8008428:	893b      	ldrh	r3, [r7, #8]
 800842a:	0a1b      	lsrs	r3, r3, #8
 800842c:	b29b      	uxth	r3, r3
 800842e:	b2da      	uxtb	r2, r3
 8008430:	68fb      	ldr	r3, [r7, #12]
 8008432:	681b      	ldr	r3, [r3, #0]
 8008434:	629a      	str	r2, [r3, #40]	; 0x28
 8008436:	69fa      	ldr	r2, [r7, #28]
 8008438:	69b9      	ldr	r1, [r7, #24]
 800843a:	68f8      	ldr	r0, [r7, #12]
 800843c:	f000 f8d6 	bl	80085ec <I2C_WaitOnTXISFlagUntilTimeout>
 8008440:	4603      	mov	r3, r0
 8008442:	2b00      	cmp	r3, #0
 8008444:	d001      	beq.n	800844a <I2C_RequestMemoryWrite+0x76>
 8008446:	2301      	movs	r3, #1
 8008448:	e012      	b.n	8008470 <I2C_RequestMemoryWrite+0x9c>
 800844a:	893b      	ldrh	r3, [r7, #8]
 800844c:	b2da      	uxtb	r2, r3
 800844e:	68fb      	ldr	r3, [r7, #12]
 8008450:	681b      	ldr	r3, [r3, #0]
 8008452:	629a      	str	r2, [r3, #40]	; 0x28
 8008454:	69fb      	ldr	r3, [r7, #28]
 8008456:	9300      	str	r3, [sp, #0]
 8008458:	69bb      	ldr	r3, [r7, #24]
 800845a:	2200      	movs	r2, #0
 800845c:	2180      	movs	r1, #128	; 0x80
 800845e:	68f8      	ldr	r0, [r7, #12]
 8008460:	f000 f884 	bl	800856c <I2C_WaitOnFlagUntilTimeout>
 8008464:	4603      	mov	r3, r0
 8008466:	2b00      	cmp	r3, #0
 8008468:	d001      	beq.n	800846e <I2C_RequestMemoryWrite+0x9a>
 800846a:	2301      	movs	r3, #1
 800846c:	e000      	b.n	8008470 <I2C_RequestMemoryWrite+0x9c>
 800846e:	2300      	movs	r3, #0
 8008470:	4618      	mov	r0, r3
 8008472:	3710      	adds	r7, #16
 8008474:	46bd      	mov	sp, r7
 8008476:	bd80      	pop	{r7, pc}
 8008478:	80002000 	.word	0x80002000

0800847c <I2C_RequestMemoryRead>:
 800847c:	b580      	push	{r7, lr}
 800847e:	b086      	sub	sp, #24
 8008480:	af02      	add	r7, sp, #8
 8008482:	60f8      	str	r0, [r7, #12]
 8008484:	4608      	mov	r0, r1
 8008486:	4611      	mov	r1, r2
 8008488:	461a      	mov	r2, r3
 800848a:	4603      	mov	r3, r0
 800848c:	817b      	strh	r3, [r7, #10]
 800848e:	460b      	mov	r3, r1
 8008490:	813b      	strh	r3, [r7, #8]
 8008492:	4613      	mov	r3, r2
 8008494:	80fb      	strh	r3, [r7, #6]
 8008496:	88fb      	ldrh	r3, [r7, #6]
 8008498:	b2da      	uxtb	r2, r3
 800849a:	8979      	ldrh	r1, [r7, #10]
 800849c:	4b20      	ldr	r3, [pc, #128]	; (8008520 <I2C_RequestMemoryRead+0xa4>)
 800849e:	9300      	str	r3, [sp, #0]
 80084a0:	2300      	movs	r3, #0
 80084a2:	68f8      	ldr	r0, [r7, #12]
 80084a4:	f000 f984 	bl	80087b0 <I2C_TransferConfig>
 80084a8:	69fa      	ldr	r2, [r7, #28]
 80084aa:	69b9      	ldr	r1, [r7, #24]
 80084ac:	68f8      	ldr	r0, [r7, #12]
 80084ae:	f000 f89d 	bl	80085ec <I2C_WaitOnTXISFlagUntilTimeout>
 80084b2:	4603      	mov	r3, r0
 80084b4:	2b00      	cmp	r3, #0
 80084b6:	d001      	beq.n	80084bc <I2C_RequestMemoryRead+0x40>
 80084b8:	2301      	movs	r3, #1
 80084ba:	e02c      	b.n	8008516 <I2C_RequestMemoryRead+0x9a>
 80084bc:	88fb      	ldrh	r3, [r7, #6]
 80084be:	2b01      	cmp	r3, #1
 80084c0:	d105      	bne.n	80084ce <I2C_RequestMemoryRead+0x52>
 80084c2:	893b      	ldrh	r3, [r7, #8]
 80084c4:	b2da      	uxtb	r2, r3
 80084c6:	68fb      	ldr	r3, [r7, #12]
 80084c8:	681b      	ldr	r3, [r3, #0]
 80084ca:	629a      	str	r2, [r3, #40]	; 0x28
 80084cc:	e015      	b.n	80084fa <I2C_RequestMemoryRead+0x7e>
 80084ce:	893b      	ldrh	r3, [r7, #8]
 80084d0:	0a1b      	lsrs	r3, r3, #8
 80084d2:	b29b      	uxth	r3, r3
 80084d4:	b2da      	uxtb	r2, r3
 80084d6:	68fb      	ldr	r3, [r7, #12]
 80084d8:	681b      	ldr	r3, [r3, #0]
 80084da:	629a      	str	r2, [r3, #40]	; 0x28
 80084dc:	69fa      	ldr	r2, [r7, #28]
 80084de:	69b9      	ldr	r1, [r7, #24]
 80084e0:	68f8      	ldr	r0, [r7, #12]
 80084e2:	f000 f883 	bl	80085ec <I2C_WaitOnTXISFlagUntilTimeout>
 80084e6:	4603      	mov	r3, r0
 80084e8:	2b00      	cmp	r3, #0
 80084ea:	d001      	beq.n	80084f0 <I2C_RequestMemoryRead+0x74>
 80084ec:	2301      	movs	r3, #1
 80084ee:	e012      	b.n	8008516 <I2C_RequestMemoryRead+0x9a>
 80084f0:	893b      	ldrh	r3, [r7, #8]
 80084f2:	b2da      	uxtb	r2, r3
 80084f4:	68fb      	ldr	r3, [r7, #12]
 80084f6:	681b      	ldr	r3, [r3, #0]
 80084f8:	629a      	str	r2, [r3, #40]	; 0x28
 80084fa:	69fb      	ldr	r3, [r7, #28]
 80084fc:	9300      	str	r3, [sp, #0]
 80084fe:	69bb      	ldr	r3, [r7, #24]
 8008500:	2200      	movs	r2, #0
 8008502:	2140      	movs	r1, #64	; 0x40
 8008504:	68f8      	ldr	r0, [r7, #12]
 8008506:	f000 f831 	bl	800856c <I2C_WaitOnFlagUntilTimeout>
 800850a:	4603      	mov	r3, r0
 800850c:	2b00      	cmp	r3, #0
 800850e:	d001      	beq.n	8008514 <I2C_RequestMemoryRead+0x98>
 8008510:	2301      	movs	r3, #1
 8008512:	e000      	b.n	8008516 <I2C_RequestMemoryRead+0x9a>
 8008514:	2300      	movs	r3, #0
 8008516:	4618      	mov	r0, r3
 8008518:	3710      	adds	r7, #16
 800851a:	46bd      	mov	sp, r7
 800851c:	bd80      	pop	{r7, pc}
 800851e:	bf00      	nop
 8008520:	80002000 	.word	0x80002000

08008524 <I2C_Flush_TXDR>:
 8008524:	b480      	push	{r7}
 8008526:	b083      	sub	sp, #12
 8008528:	af00      	add	r7, sp, #0
 800852a:	6078      	str	r0, [r7, #4]
 800852c:	687b      	ldr	r3, [r7, #4]
 800852e:	681b      	ldr	r3, [r3, #0]
 8008530:	699b      	ldr	r3, [r3, #24]
 8008532:	f003 0302 	and.w	r3, r3, #2
 8008536:	2b02      	cmp	r3, #2
 8008538:	d103      	bne.n	8008542 <I2C_Flush_TXDR+0x1e>
 800853a:	687b      	ldr	r3, [r7, #4]
 800853c:	681b      	ldr	r3, [r3, #0]
 800853e:	2200      	movs	r2, #0
 8008540:	629a      	str	r2, [r3, #40]	; 0x28
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	681b      	ldr	r3, [r3, #0]
 8008546:	699b      	ldr	r3, [r3, #24]
 8008548:	f003 0301 	and.w	r3, r3, #1
 800854c:	2b01      	cmp	r3, #1
 800854e:	d007      	beq.n	8008560 <I2C_Flush_TXDR+0x3c>
 8008550:	687b      	ldr	r3, [r7, #4]
 8008552:	681b      	ldr	r3, [r3, #0]
 8008554:	699a      	ldr	r2, [r3, #24]
 8008556:	687b      	ldr	r3, [r7, #4]
 8008558:	681b      	ldr	r3, [r3, #0]
 800855a:	f042 0201 	orr.w	r2, r2, #1
 800855e:	619a      	str	r2, [r3, #24]
 8008560:	bf00      	nop
 8008562:	370c      	adds	r7, #12
 8008564:	46bd      	mov	sp, r7
 8008566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800856a:	4770      	bx	lr

0800856c <I2C_WaitOnFlagUntilTimeout>:
 800856c:	b580      	push	{r7, lr}
 800856e:	b084      	sub	sp, #16
 8008570:	af00      	add	r7, sp, #0
 8008572:	60f8      	str	r0, [r7, #12]
 8008574:	60b9      	str	r1, [r7, #8]
 8008576:	603b      	str	r3, [r7, #0]
 8008578:	4613      	mov	r3, r2
 800857a:	71fb      	strb	r3, [r7, #7]
 800857c:	e022      	b.n	80085c4 <I2C_WaitOnFlagUntilTimeout+0x58>
 800857e:	683b      	ldr	r3, [r7, #0]
 8008580:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008584:	d01e      	beq.n	80085c4 <I2C_WaitOnFlagUntilTimeout+0x58>
 8008586:	f7fd ff09 	bl	800639c <HAL_GetTick>
 800858a:	4602      	mov	r2, r0
 800858c:	69bb      	ldr	r3, [r7, #24]
 800858e:	1ad3      	subs	r3, r2, r3
 8008590:	683a      	ldr	r2, [r7, #0]
 8008592:	429a      	cmp	r2, r3
 8008594:	d302      	bcc.n	800859c <I2C_WaitOnFlagUntilTimeout+0x30>
 8008596:	683b      	ldr	r3, [r7, #0]
 8008598:	2b00      	cmp	r3, #0
 800859a:	d113      	bne.n	80085c4 <I2C_WaitOnFlagUntilTimeout+0x58>
 800859c:	68fb      	ldr	r3, [r7, #12]
 800859e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80085a0:	f043 0220 	orr.w	r2, r3, #32
 80085a4:	68fb      	ldr	r3, [r7, #12]
 80085a6:	645a      	str	r2, [r3, #68]	; 0x44
 80085a8:	68fb      	ldr	r3, [r7, #12]
 80085aa:	2220      	movs	r2, #32
 80085ac:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80085b0:	68fb      	ldr	r3, [r7, #12]
 80085b2:	2200      	movs	r2, #0
 80085b4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80085b8:	68fb      	ldr	r3, [r7, #12]
 80085ba:	2200      	movs	r2, #0
 80085bc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80085c0:	2301      	movs	r3, #1
 80085c2:	e00f      	b.n	80085e4 <I2C_WaitOnFlagUntilTimeout+0x78>
 80085c4:	68fb      	ldr	r3, [r7, #12]
 80085c6:	681b      	ldr	r3, [r3, #0]
 80085c8:	699a      	ldr	r2, [r3, #24]
 80085ca:	68bb      	ldr	r3, [r7, #8]
 80085cc:	4013      	ands	r3, r2
 80085ce:	68ba      	ldr	r2, [r7, #8]
 80085d0:	429a      	cmp	r2, r3
 80085d2:	bf0c      	ite	eq
 80085d4:	2301      	moveq	r3, #1
 80085d6:	2300      	movne	r3, #0
 80085d8:	b2db      	uxtb	r3, r3
 80085da:	461a      	mov	r2, r3
 80085dc:	79fb      	ldrb	r3, [r7, #7]
 80085de:	429a      	cmp	r2, r3
 80085e0:	d0cd      	beq.n	800857e <I2C_WaitOnFlagUntilTimeout+0x12>
 80085e2:	2300      	movs	r3, #0
 80085e4:	4618      	mov	r0, r3
 80085e6:	3710      	adds	r7, #16
 80085e8:	46bd      	mov	sp, r7
 80085ea:	bd80      	pop	{r7, pc}

080085ec <I2C_WaitOnTXISFlagUntilTimeout>:
 80085ec:	b580      	push	{r7, lr}
 80085ee:	b084      	sub	sp, #16
 80085f0:	af00      	add	r7, sp, #0
 80085f2:	60f8      	str	r0, [r7, #12]
 80085f4:	60b9      	str	r1, [r7, #8]
 80085f6:	607a      	str	r2, [r7, #4]
 80085f8:	e02c      	b.n	8008654 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 80085fa:	687a      	ldr	r2, [r7, #4]
 80085fc:	68b9      	ldr	r1, [r7, #8]
 80085fe:	68f8      	ldr	r0, [r7, #12]
 8008600:	f000 f870 	bl	80086e4 <I2C_IsAcknowledgeFailed>
 8008604:	4603      	mov	r3, r0
 8008606:	2b00      	cmp	r3, #0
 8008608:	d001      	beq.n	800860e <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 800860a:	2301      	movs	r3, #1
 800860c:	e02a      	b.n	8008664 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 800860e:	68bb      	ldr	r3, [r7, #8]
 8008610:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008614:	d01e      	beq.n	8008654 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 8008616:	f7fd fec1 	bl	800639c <HAL_GetTick>
 800861a:	4602      	mov	r2, r0
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	1ad3      	subs	r3, r2, r3
 8008620:	68ba      	ldr	r2, [r7, #8]
 8008622:	429a      	cmp	r2, r3
 8008624:	d302      	bcc.n	800862c <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8008626:	68bb      	ldr	r3, [r7, #8]
 8008628:	2b00      	cmp	r3, #0
 800862a:	d113      	bne.n	8008654 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
 800862c:	68fb      	ldr	r3, [r7, #12]
 800862e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008630:	f043 0220 	orr.w	r2, r3, #32
 8008634:	68fb      	ldr	r3, [r7, #12]
 8008636:	645a      	str	r2, [r3, #68]	; 0x44
 8008638:	68fb      	ldr	r3, [r7, #12]
 800863a:	2220      	movs	r2, #32
 800863c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008640:	68fb      	ldr	r3, [r7, #12]
 8008642:	2200      	movs	r2, #0
 8008644:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008648:	68fb      	ldr	r3, [r7, #12]
 800864a:	2200      	movs	r2, #0
 800864c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008650:	2301      	movs	r3, #1
 8008652:	e007      	b.n	8008664 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
 8008654:	68fb      	ldr	r3, [r7, #12]
 8008656:	681b      	ldr	r3, [r3, #0]
 8008658:	699b      	ldr	r3, [r3, #24]
 800865a:	f003 0302 	and.w	r3, r3, #2
 800865e:	2b02      	cmp	r3, #2
 8008660:	d1cb      	bne.n	80085fa <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 8008662:	2300      	movs	r3, #0
 8008664:	4618      	mov	r0, r3
 8008666:	3710      	adds	r7, #16
 8008668:	46bd      	mov	sp, r7
 800866a:	bd80      	pop	{r7, pc}

0800866c <I2C_WaitOnSTOPFlagUntilTimeout>:
 800866c:	b580      	push	{r7, lr}
 800866e:	b084      	sub	sp, #16
 8008670:	af00      	add	r7, sp, #0
 8008672:	60f8      	str	r0, [r7, #12]
 8008674:	60b9      	str	r1, [r7, #8]
 8008676:	607a      	str	r2, [r7, #4]
 8008678:	e028      	b.n	80086cc <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 800867a:	687a      	ldr	r2, [r7, #4]
 800867c:	68b9      	ldr	r1, [r7, #8]
 800867e:	68f8      	ldr	r0, [r7, #12]
 8008680:	f000 f830 	bl	80086e4 <I2C_IsAcknowledgeFailed>
 8008684:	4603      	mov	r3, r0
 8008686:	2b00      	cmp	r3, #0
 8008688:	d001      	beq.n	800868e <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 800868a:	2301      	movs	r3, #1
 800868c:	e026      	b.n	80086dc <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 800868e:	f7fd fe85 	bl	800639c <HAL_GetTick>
 8008692:	4602      	mov	r2, r0
 8008694:	687b      	ldr	r3, [r7, #4]
 8008696:	1ad3      	subs	r3, r2, r3
 8008698:	68ba      	ldr	r2, [r7, #8]
 800869a:	429a      	cmp	r2, r3
 800869c:	d302      	bcc.n	80086a4 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 800869e:	68bb      	ldr	r3, [r7, #8]
 80086a0:	2b00      	cmp	r3, #0
 80086a2:	d113      	bne.n	80086cc <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
 80086a4:	68fb      	ldr	r3, [r7, #12]
 80086a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80086a8:	f043 0220 	orr.w	r2, r3, #32
 80086ac:	68fb      	ldr	r3, [r7, #12]
 80086ae:	645a      	str	r2, [r3, #68]	; 0x44
 80086b0:	68fb      	ldr	r3, [r7, #12]
 80086b2:	2220      	movs	r2, #32
 80086b4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80086b8:	68fb      	ldr	r3, [r7, #12]
 80086ba:	2200      	movs	r2, #0
 80086bc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80086c0:	68fb      	ldr	r3, [r7, #12]
 80086c2:	2200      	movs	r2, #0
 80086c4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80086c8:	2301      	movs	r3, #1
 80086ca:	e007      	b.n	80086dc <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
 80086cc:	68fb      	ldr	r3, [r7, #12]
 80086ce:	681b      	ldr	r3, [r3, #0]
 80086d0:	699b      	ldr	r3, [r3, #24]
 80086d2:	f003 0320 	and.w	r3, r3, #32
 80086d6:	2b20      	cmp	r3, #32
 80086d8:	d1cf      	bne.n	800867a <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 80086da:	2300      	movs	r3, #0
 80086dc:	4618      	mov	r0, r3
 80086de:	3710      	adds	r7, #16
 80086e0:	46bd      	mov	sp, r7
 80086e2:	bd80      	pop	{r7, pc}

080086e4 <I2C_IsAcknowledgeFailed>:
 80086e4:	b580      	push	{r7, lr}
 80086e6:	b084      	sub	sp, #16
 80086e8:	af00      	add	r7, sp, #0
 80086ea:	60f8      	str	r0, [r7, #12]
 80086ec:	60b9      	str	r1, [r7, #8]
 80086ee:	607a      	str	r2, [r7, #4]
 80086f0:	68fb      	ldr	r3, [r7, #12]
 80086f2:	681b      	ldr	r3, [r3, #0]
 80086f4:	699b      	ldr	r3, [r3, #24]
 80086f6:	f003 0310 	and.w	r3, r3, #16
 80086fa:	2b10      	cmp	r3, #16
 80086fc:	d151      	bne.n	80087a2 <I2C_IsAcknowledgeFailed+0xbe>
 80086fe:	e022      	b.n	8008746 <I2C_IsAcknowledgeFailed+0x62>
 8008700:	68bb      	ldr	r3, [r7, #8]
 8008702:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008706:	d01e      	beq.n	8008746 <I2C_IsAcknowledgeFailed+0x62>
 8008708:	f7fd fe48 	bl	800639c <HAL_GetTick>
 800870c:	4602      	mov	r2, r0
 800870e:	687b      	ldr	r3, [r7, #4]
 8008710:	1ad3      	subs	r3, r2, r3
 8008712:	68ba      	ldr	r2, [r7, #8]
 8008714:	429a      	cmp	r2, r3
 8008716:	d302      	bcc.n	800871e <I2C_IsAcknowledgeFailed+0x3a>
 8008718:	68bb      	ldr	r3, [r7, #8]
 800871a:	2b00      	cmp	r3, #0
 800871c:	d113      	bne.n	8008746 <I2C_IsAcknowledgeFailed+0x62>
 800871e:	68fb      	ldr	r3, [r7, #12]
 8008720:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008722:	f043 0220 	orr.w	r2, r3, #32
 8008726:	68fb      	ldr	r3, [r7, #12]
 8008728:	645a      	str	r2, [r3, #68]	; 0x44
 800872a:	68fb      	ldr	r3, [r7, #12]
 800872c:	2220      	movs	r2, #32
 800872e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008732:	68fb      	ldr	r3, [r7, #12]
 8008734:	2200      	movs	r2, #0
 8008736:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800873a:	68fb      	ldr	r3, [r7, #12]
 800873c:	2200      	movs	r2, #0
 800873e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008742:	2301      	movs	r3, #1
 8008744:	e02e      	b.n	80087a4 <I2C_IsAcknowledgeFailed+0xc0>
 8008746:	68fb      	ldr	r3, [r7, #12]
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	699b      	ldr	r3, [r3, #24]
 800874c:	f003 0320 	and.w	r3, r3, #32
 8008750:	2b20      	cmp	r3, #32
 8008752:	d1d5      	bne.n	8008700 <I2C_IsAcknowledgeFailed+0x1c>
 8008754:	68fb      	ldr	r3, [r7, #12]
 8008756:	681b      	ldr	r3, [r3, #0]
 8008758:	2210      	movs	r2, #16
 800875a:	61da      	str	r2, [r3, #28]
 800875c:	68fb      	ldr	r3, [r7, #12]
 800875e:	681b      	ldr	r3, [r3, #0]
 8008760:	2220      	movs	r2, #32
 8008762:	61da      	str	r2, [r3, #28]
 8008764:	68f8      	ldr	r0, [r7, #12]
 8008766:	f7ff fedd 	bl	8008524 <I2C_Flush_TXDR>
 800876a:	68fb      	ldr	r3, [r7, #12]
 800876c:	681b      	ldr	r3, [r3, #0]
 800876e:	6859      	ldr	r1, [r3, #4]
 8008770:	68fb      	ldr	r3, [r7, #12]
 8008772:	681a      	ldr	r2, [r3, #0]
 8008774:	4b0d      	ldr	r3, [pc, #52]	; (80087ac <I2C_IsAcknowledgeFailed+0xc8>)
 8008776:	400b      	ands	r3, r1
 8008778:	6053      	str	r3, [r2, #4]
 800877a:	68fb      	ldr	r3, [r7, #12]
 800877c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800877e:	f043 0204 	orr.w	r2, r3, #4
 8008782:	68fb      	ldr	r3, [r7, #12]
 8008784:	645a      	str	r2, [r3, #68]	; 0x44
 8008786:	68fb      	ldr	r3, [r7, #12]
 8008788:	2220      	movs	r2, #32
 800878a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800878e:	68fb      	ldr	r3, [r7, #12]
 8008790:	2200      	movs	r2, #0
 8008792:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008796:	68fb      	ldr	r3, [r7, #12]
 8008798:	2200      	movs	r2, #0
 800879a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800879e:	2301      	movs	r3, #1
 80087a0:	e000      	b.n	80087a4 <I2C_IsAcknowledgeFailed+0xc0>
 80087a2:	2300      	movs	r3, #0
 80087a4:	4618      	mov	r0, r3
 80087a6:	3710      	adds	r7, #16
 80087a8:	46bd      	mov	sp, r7
 80087aa:	bd80      	pop	{r7, pc}
 80087ac:	fe00e800 	.word	0xfe00e800

080087b0 <I2C_TransferConfig>:
 80087b0:	b480      	push	{r7}
 80087b2:	b085      	sub	sp, #20
 80087b4:	af00      	add	r7, sp, #0
 80087b6:	60f8      	str	r0, [r7, #12]
 80087b8:	607b      	str	r3, [r7, #4]
 80087ba:	460b      	mov	r3, r1
 80087bc:	817b      	strh	r3, [r7, #10]
 80087be:	4613      	mov	r3, r2
 80087c0:	727b      	strb	r3, [r7, #9]
 80087c2:	68fb      	ldr	r3, [r7, #12]
 80087c4:	681b      	ldr	r3, [r3, #0]
 80087c6:	685a      	ldr	r2, [r3, #4]
 80087c8:	69bb      	ldr	r3, [r7, #24]
 80087ca:	0d5b      	lsrs	r3, r3, #21
 80087cc:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 80087d0:	4b0d      	ldr	r3, [pc, #52]	; (8008808 <I2C_TransferConfig+0x58>)
 80087d2:	430b      	orrs	r3, r1
 80087d4:	43db      	mvns	r3, r3
 80087d6:	ea02 0103 	and.w	r1, r2, r3
 80087da:	897b      	ldrh	r3, [r7, #10]
 80087dc:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80087e0:	7a7b      	ldrb	r3, [r7, #9]
 80087e2:	041b      	lsls	r3, r3, #16
 80087e4:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 80087e8:	431a      	orrs	r2, r3
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	431a      	orrs	r2, r3
 80087ee:	69bb      	ldr	r3, [r7, #24]
 80087f0:	431a      	orrs	r2, r3
 80087f2:	68fb      	ldr	r3, [r7, #12]
 80087f4:	681b      	ldr	r3, [r3, #0]
 80087f6:	430a      	orrs	r2, r1
 80087f8:	605a      	str	r2, [r3, #4]
 80087fa:	bf00      	nop
 80087fc:	3714      	adds	r7, #20
 80087fe:	46bd      	mov	sp, r7
 8008800:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008804:	4770      	bx	lr
 8008806:	bf00      	nop
 8008808:	03ff63ff 	.word	0x03ff63ff

0800880c <HAL_I2CEx_ConfigAnalogFilter>:
 800880c:	b480      	push	{r7}
 800880e:	b083      	sub	sp, #12
 8008810:	af00      	add	r7, sp, #0
 8008812:	6078      	str	r0, [r7, #4]
 8008814:	6039      	str	r1, [r7, #0]
 8008816:	687b      	ldr	r3, [r7, #4]
 8008818:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800881c:	b2db      	uxtb	r3, r3
 800881e:	2b20      	cmp	r3, #32
 8008820:	d138      	bne.n	8008894 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8008822:	687b      	ldr	r3, [r7, #4]
 8008824:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008828:	2b01      	cmp	r3, #1
 800882a:	d101      	bne.n	8008830 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 800882c:	2302      	movs	r3, #2
 800882e:	e032      	b.n	8008896 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8008830:	687b      	ldr	r3, [r7, #4]
 8008832:	2201      	movs	r2, #1
 8008834:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008838:	687b      	ldr	r3, [r7, #4]
 800883a:	2224      	movs	r2, #36	; 0x24
 800883c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008840:	687b      	ldr	r3, [r7, #4]
 8008842:	681b      	ldr	r3, [r3, #0]
 8008844:	681a      	ldr	r2, [r3, #0]
 8008846:	687b      	ldr	r3, [r7, #4]
 8008848:	681b      	ldr	r3, [r3, #0]
 800884a:	f022 0201 	bic.w	r2, r2, #1
 800884e:	601a      	str	r2, [r3, #0]
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	681b      	ldr	r3, [r3, #0]
 8008854:	681a      	ldr	r2, [r3, #0]
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	681b      	ldr	r3, [r3, #0]
 800885a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800885e:	601a      	str	r2, [r3, #0]
 8008860:	687b      	ldr	r3, [r7, #4]
 8008862:	681b      	ldr	r3, [r3, #0]
 8008864:	6819      	ldr	r1, [r3, #0]
 8008866:	687b      	ldr	r3, [r7, #4]
 8008868:	681b      	ldr	r3, [r3, #0]
 800886a:	683a      	ldr	r2, [r7, #0]
 800886c:	430a      	orrs	r2, r1
 800886e:	601a      	str	r2, [r3, #0]
 8008870:	687b      	ldr	r3, [r7, #4]
 8008872:	681b      	ldr	r3, [r3, #0]
 8008874:	681a      	ldr	r2, [r3, #0]
 8008876:	687b      	ldr	r3, [r7, #4]
 8008878:	681b      	ldr	r3, [r3, #0]
 800887a:	f042 0201 	orr.w	r2, r2, #1
 800887e:	601a      	str	r2, [r3, #0]
 8008880:	687b      	ldr	r3, [r7, #4]
 8008882:	2220      	movs	r2, #32
 8008884:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008888:	687b      	ldr	r3, [r7, #4]
 800888a:	2200      	movs	r2, #0
 800888c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008890:	2300      	movs	r3, #0
 8008892:	e000      	b.n	8008896 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8008894:	2302      	movs	r3, #2
 8008896:	4618      	mov	r0, r3
 8008898:	370c      	adds	r7, #12
 800889a:	46bd      	mov	sp, r7
 800889c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088a0:	4770      	bx	lr

080088a2 <HAL_I2CEx_ConfigDigitalFilter>:
 80088a2:	b480      	push	{r7}
 80088a4:	b085      	sub	sp, #20
 80088a6:	af00      	add	r7, sp, #0
 80088a8:	6078      	str	r0, [r7, #4]
 80088aa:	6039      	str	r1, [r7, #0]
 80088ac:	687b      	ldr	r3, [r7, #4]
 80088ae:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80088b2:	b2db      	uxtb	r3, r3
 80088b4:	2b20      	cmp	r3, #32
 80088b6:	d139      	bne.n	800892c <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 80088b8:	687b      	ldr	r3, [r7, #4]
 80088ba:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80088be:	2b01      	cmp	r3, #1
 80088c0:	d101      	bne.n	80088c6 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 80088c2:	2302      	movs	r3, #2
 80088c4:	e033      	b.n	800892e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80088c6:	687b      	ldr	r3, [r7, #4]
 80088c8:	2201      	movs	r2, #1
 80088ca:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80088ce:	687b      	ldr	r3, [r7, #4]
 80088d0:	2224      	movs	r2, #36	; 0x24
 80088d2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80088d6:	687b      	ldr	r3, [r7, #4]
 80088d8:	681b      	ldr	r3, [r3, #0]
 80088da:	681a      	ldr	r2, [r3, #0]
 80088dc:	687b      	ldr	r3, [r7, #4]
 80088de:	681b      	ldr	r3, [r3, #0]
 80088e0:	f022 0201 	bic.w	r2, r2, #1
 80088e4:	601a      	str	r2, [r3, #0]
 80088e6:	687b      	ldr	r3, [r7, #4]
 80088e8:	681b      	ldr	r3, [r3, #0]
 80088ea:	681b      	ldr	r3, [r3, #0]
 80088ec:	60fb      	str	r3, [r7, #12]
 80088ee:	68fb      	ldr	r3, [r7, #12]
 80088f0:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80088f4:	60fb      	str	r3, [r7, #12]
 80088f6:	683b      	ldr	r3, [r7, #0]
 80088f8:	021b      	lsls	r3, r3, #8
 80088fa:	68fa      	ldr	r2, [r7, #12]
 80088fc:	4313      	orrs	r3, r2
 80088fe:	60fb      	str	r3, [r7, #12]
 8008900:	687b      	ldr	r3, [r7, #4]
 8008902:	681b      	ldr	r3, [r3, #0]
 8008904:	68fa      	ldr	r2, [r7, #12]
 8008906:	601a      	str	r2, [r3, #0]
 8008908:	687b      	ldr	r3, [r7, #4]
 800890a:	681b      	ldr	r3, [r3, #0]
 800890c:	681a      	ldr	r2, [r3, #0]
 800890e:	687b      	ldr	r3, [r7, #4]
 8008910:	681b      	ldr	r3, [r3, #0]
 8008912:	f042 0201 	orr.w	r2, r2, #1
 8008916:	601a      	str	r2, [r3, #0]
 8008918:	687b      	ldr	r3, [r7, #4]
 800891a:	2220      	movs	r2, #32
 800891c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	2200      	movs	r2, #0
 8008924:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008928:	2300      	movs	r3, #0
 800892a:	e000      	b.n	800892e <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800892c:	2302      	movs	r3, #2
 800892e:	4618      	mov	r0, r3
 8008930:	3714      	adds	r7, #20
 8008932:	46bd      	mov	sp, r7
 8008934:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008938:	4770      	bx	lr
	...

0800893c <HAL_LTDC_Init>:
 800893c:	b580      	push	{r7, lr}
 800893e:	b084      	sub	sp, #16
 8008940:	af00      	add	r7, sp, #0
 8008942:	6078      	str	r0, [r7, #4]
 8008944:	687b      	ldr	r3, [r7, #4]
 8008946:	2b00      	cmp	r3, #0
 8008948:	d101      	bne.n	800894e <HAL_LTDC_Init+0x12>
 800894a:	2301      	movs	r3, #1
 800894c:	e0bf      	b.n	8008ace <HAL_LTDC_Init+0x192>
 800894e:	687b      	ldr	r3, [r7, #4]
 8008950:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8008954:	b2db      	uxtb	r3, r3
 8008956:	2b00      	cmp	r3, #0
 8008958:	d106      	bne.n	8008968 <HAL_LTDC_Init+0x2c>
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	2200      	movs	r2, #0
 800895e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008962:	6878      	ldr	r0, [r7, #4]
 8008964:	f7fd f858 	bl	8005a18 <HAL_LTDC_MspInit>
 8008968:	687b      	ldr	r3, [r7, #4]
 800896a:	2202      	movs	r2, #2
 800896c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008970:	687b      	ldr	r3, [r7, #4]
 8008972:	681b      	ldr	r3, [r3, #0]
 8008974:	699a      	ldr	r2, [r3, #24]
 8008976:	687b      	ldr	r3, [r7, #4]
 8008978:	681b      	ldr	r3, [r3, #0]
 800897a:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800897e:	619a      	str	r2, [r3, #24]
 8008980:	687b      	ldr	r3, [r7, #4]
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	6999      	ldr	r1, [r3, #24]
 8008986:	687b      	ldr	r3, [r7, #4]
 8008988:	685a      	ldr	r2, [r3, #4]
 800898a:	687b      	ldr	r3, [r7, #4]
 800898c:	689b      	ldr	r3, [r3, #8]
 800898e:	431a      	orrs	r2, r3
 8008990:	687b      	ldr	r3, [r7, #4]
 8008992:	68db      	ldr	r3, [r3, #12]
 8008994:	431a      	orrs	r2, r3
 8008996:	687b      	ldr	r3, [r7, #4]
 8008998:	691b      	ldr	r3, [r3, #16]
 800899a:	431a      	orrs	r2, r3
 800899c:	687b      	ldr	r3, [r7, #4]
 800899e:	681b      	ldr	r3, [r3, #0]
 80089a0:	430a      	orrs	r2, r1
 80089a2:	619a      	str	r2, [r3, #24]
 80089a4:	687b      	ldr	r3, [r7, #4]
 80089a6:	681b      	ldr	r3, [r3, #0]
 80089a8:	6899      	ldr	r1, [r3, #8]
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	681a      	ldr	r2, [r3, #0]
 80089ae:	4b4a      	ldr	r3, [pc, #296]	; (8008ad8 <HAL_LTDC_Init+0x19c>)
 80089b0:	400b      	ands	r3, r1
 80089b2:	6093      	str	r3, [r2, #8]
 80089b4:	687b      	ldr	r3, [r7, #4]
 80089b6:	695b      	ldr	r3, [r3, #20]
 80089b8:	041b      	lsls	r3, r3, #16
 80089ba:	60fb      	str	r3, [r7, #12]
 80089bc:	687b      	ldr	r3, [r7, #4]
 80089be:	681b      	ldr	r3, [r3, #0]
 80089c0:	6899      	ldr	r1, [r3, #8]
 80089c2:	687b      	ldr	r3, [r7, #4]
 80089c4:	699a      	ldr	r2, [r3, #24]
 80089c6:	68fb      	ldr	r3, [r7, #12]
 80089c8:	431a      	orrs	r2, r3
 80089ca:	687b      	ldr	r3, [r7, #4]
 80089cc:	681b      	ldr	r3, [r3, #0]
 80089ce:	430a      	orrs	r2, r1
 80089d0:	609a      	str	r2, [r3, #8]
 80089d2:	687b      	ldr	r3, [r7, #4]
 80089d4:	681b      	ldr	r3, [r3, #0]
 80089d6:	68d9      	ldr	r1, [r3, #12]
 80089d8:	687b      	ldr	r3, [r7, #4]
 80089da:	681a      	ldr	r2, [r3, #0]
 80089dc:	4b3e      	ldr	r3, [pc, #248]	; (8008ad8 <HAL_LTDC_Init+0x19c>)
 80089de:	400b      	ands	r3, r1
 80089e0:	60d3      	str	r3, [r2, #12]
 80089e2:	687b      	ldr	r3, [r7, #4]
 80089e4:	69db      	ldr	r3, [r3, #28]
 80089e6:	041b      	lsls	r3, r3, #16
 80089e8:	60fb      	str	r3, [r7, #12]
 80089ea:	687b      	ldr	r3, [r7, #4]
 80089ec:	681b      	ldr	r3, [r3, #0]
 80089ee:	68d9      	ldr	r1, [r3, #12]
 80089f0:	687b      	ldr	r3, [r7, #4]
 80089f2:	6a1a      	ldr	r2, [r3, #32]
 80089f4:	68fb      	ldr	r3, [r7, #12]
 80089f6:	431a      	orrs	r2, r3
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	681b      	ldr	r3, [r3, #0]
 80089fc:	430a      	orrs	r2, r1
 80089fe:	60da      	str	r2, [r3, #12]
 8008a00:	687b      	ldr	r3, [r7, #4]
 8008a02:	681b      	ldr	r3, [r3, #0]
 8008a04:	6919      	ldr	r1, [r3, #16]
 8008a06:	687b      	ldr	r3, [r7, #4]
 8008a08:	681a      	ldr	r2, [r3, #0]
 8008a0a:	4b33      	ldr	r3, [pc, #204]	; (8008ad8 <HAL_LTDC_Init+0x19c>)
 8008a0c:	400b      	ands	r3, r1
 8008a0e:	6113      	str	r3, [r2, #16]
 8008a10:	687b      	ldr	r3, [r7, #4]
 8008a12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008a14:	041b      	lsls	r3, r3, #16
 8008a16:	60fb      	str	r3, [r7, #12]
 8008a18:	687b      	ldr	r3, [r7, #4]
 8008a1a:	681b      	ldr	r3, [r3, #0]
 8008a1c:	6919      	ldr	r1, [r3, #16]
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008a22:	68fb      	ldr	r3, [r7, #12]
 8008a24:	431a      	orrs	r2, r3
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	681b      	ldr	r3, [r3, #0]
 8008a2a:	430a      	orrs	r2, r1
 8008a2c:	611a      	str	r2, [r3, #16]
 8008a2e:	687b      	ldr	r3, [r7, #4]
 8008a30:	681b      	ldr	r3, [r3, #0]
 8008a32:	6959      	ldr	r1, [r3, #20]
 8008a34:	687b      	ldr	r3, [r7, #4]
 8008a36:	681a      	ldr	r2, [r3, #0]
 8008a38:	4b27      	ldr	r3, [pc, #156]	; (8008ad8 <HAL_LTDC_Init+0x19c>)
 8008a3a:	400b      	ands	r3, r1
 8008a3c:	6153      	str	r3, [r2, #20]
 8008a3e:	687b      	ldr	r3, [r7, #4]
 8008a40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a42:	041b      	lsls	r3, r3, #16
 8008a44:	60fb      	str	r3, [r7, #12]
 8008a46:	687b      	ldr	r3, [r7, #4]
 8008a48:	681b      	ldr	r3, [r3, #0]
 8008a4a:	6959      	ldr	r1, [r3, #20]
 8008a4c:	687b      	ldr	r3, [r7, #4]
 8008a4e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008a50:	68fb      	ldr	r3, [r7, #12]
 8008a52:	431a      	orrs	r2, r3
 8008a54:	687b      	ldr	r3, [r7, #4]
 8008a56:	681b      	ldr	r3, [r3, #0]
 8008a58:	430a      	orrs	r2, r1
 8008a5a:	615a      	str	r2, [r3, #20]
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008a62:	021b      	lsls	r3, r3, #8
 8008a64:	60fb      	str	r3, [r7, #12]
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8008a6c:	041b      	lsls	r3, r3, #16
 8008a6e:	60bb      	str	r3, [r7, #8]
 8008a70:	687b      	ldr	r3, [r7, #4]
 8008a72:	681b      	ldr	r3, [r3, #0]
 8008a74:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008a76:	687b      	ldr	r3, [r7, #4]
 8008a78:	681b      	ldr	r3, [r3, #0]
 8008a7a:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8008a7e:	62da      	str	r2, [r3, #44]	; 0x2c
 8008a80:	687b      	ldr	r3, [r7, #4]
 8008a82:	681b      	ldr	r3, [r3, #0]
 8008a84:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8008a86:	68ba      	ldr	r2, [r7, #8]
 8008a88:	68fb      	ldr	r3, [r7, #12]
 8008a8a:	4313      	orrs	r3, r2
 8008a8c:	687a      	ldr	r2, [r7, #4]
 8008a8e:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 8008a92:	431a      	orrs	r2, r3
 8008a94:	687b      	ldr	r3, [r7, #4]
 8008a96:	681b      	ldr	r3, [r3, #0]
 8008a98:	430a      	orrs	r2, r1
 8008a9a:	62da      	str	r2, [r3, #44]	; 0x2c
 8008a9c:	687b      	ldr	r3, [r7, #4]
 8008a9e:	681b      	ldr	r3, [r3, #0]
 8008aa0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008aa2:	687b      	ldr	r3, [r7, #4]
 8008aa4:	681b      	ldr	r3, [r3, #0]
 8008aa6:	f042 0206 	orr.w	r2, r2, #6
 8008aaa:	635a      	str	r2, [r3, #52]	; 0x34
 8008aac:	687b      	ldr	r3, [r7, #4]
 8008aae:	681b      	ldr	r3, [r3, #0]
 8008ab0:	699a      	ldr	r2, [r3, #24]
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	681b      	ldr	r3, [r3, #0]
 8008ab6:	f042 0201 	orr.w	r2, r2, #1
 8008aba:	619a      	str	r2, [r3, #24]
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	2200      	movs	r2, #0
 8008ac0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8008ac4:	687b      	ldr	r3, [r7, #4]
 8008ac6:	2201      	movs	r2, #1
 8008ac8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008acc:	2300      	movs	r3, #0
 8008ace:	4618      	mov	r0, r3
 8008ad0:	3710      	adds	r7, #16
 8008ad2:	46bd      	mov	sp, r7
 8008ad4:	bd80      	pop	{r7, pc}
 8008ad6:	bf00      	nop
 8008ad8:	f000f800 	.word	0xf000f800

08008adc <HAL_LTDC_IRQHandler>:
 8008adc:	b580      	push	{r7, lr}
 8008ade:	b084      	sub	sp, #16
 8008ae0:	af00      	add	r7, sp, #0
 8008ae2:	6078      	str	r0, [r7, #4]
 8008ae4:	687b      	ldr	r3, [r7, #4]
 8008ae6:	681b      	ldr	r3, [r3, #0]
 8008ae8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008aea:	60fb      	str	r3, [r7, #12]
 8008aec:	687b      	ldr	r3, [r7, #4]
 8008aee:	681b      	ldr	r3, [r3, #0]
 8008af0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008af2:	60bb      	str	r3, [r7, #8]
 8008af4:	68fb      	ldr	r3, [r7, #12]
 8008af6:	f003 0304 	and.w	r3, r3, #4
 8008afa:	2b00      	cmp	r3, #0
 8008afc:	d023      	beq.n	8008b46 <HAL_LTDC_IRQHandler+0x6a>
 8008afe:	68bb      	ldr	r3, [r7, #8]
 8008b00:	f003 0304 	and.w	r3, r3, #4
 8008b04:	2b00      	cmp	r3, #0
 8008b06:	d01e      	beq.n	8008b46 <HAL_LTDC_IRQHandler+0x6a>
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	681b      	ldr	r3, [r3, #0]
 8008b0c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008b0e:	687b      	ldr	r3, [r7, #4]
 8008b10:	681b      	ldr	r3, [r3, #0]
 8008b12:	f022 0204 	bic.w	r2, r2, #4
 8008b16:	635a      	str	r2, [r3, #52]	; 0x34
 8008b18:	687b      	ldr	r3, [r7, #4]
 8008b1a:	681b      	ldr	r3, [r3, #0]
 8008b1c:	2204      	movs	r2, #4
 8008b1e:	63da      	str	r2, [r3, #60]	; 0x3c
 8008b20:	687b      	ldr	r3, [r7, #4]
 8008b22:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008b26:	f043 0201 	orr.w	r2, r3, #1
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8008b30:	687b      	ldr	r3, [r7, #4]
 8008b32:	2204      	movs	r2, #4
 8008b34:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	2200      	movs	r2, #0
 8008b3c:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008b40:	6878      	ldr	r0, [r7, #4]
 8008b42:	f000 f86f 	bl	8008c24 <HAL_LTDC_ErrorCallback>
 8008b46:	68fb      	ldr	r3, [r7, #12]
 8008b48:	f003 0302 	and.w	r3, r3, #2
 8008b4c:	2b00      	cmp	r3, #0
 8008b4e:	d023      	beq.n	8008b98 <HAL_LTDC_IRQHandler+0xbc>
 8008b50:	68bb      	ldr	r3, [r7, #8]
 8008b52:	f003 0302 	and.w	r3, r3, #2
 8008b56:	2b00      	cmp	r3, #0
 8008b58:	d01e      	beq.n	8008b98 <HAL_LTDC_IRQHandler+0xbc>
 8008b5a:	687b      	ldr	r3, [r7, #4]
 8008b5c:	681b      	ldr	r3, [r3, #0]
 8008b5e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008b60:	687b      	ldr	r3, [r7, #4]
 8008b62:	681b      	ldr	r3, [r3, #0]
 8008b64:	f022 0202 	bic.w	r2, r2, #2
 8008b68:	635a      	str	r2, [r3, #52]	; 0x34
 8008b6a:	687b      	ldr	r3, [r7, #4]
 8008b6c:	681b      	ldr	r3, [r3, #0]
 8008b6e:	2202      	movs	r2, #2
 8008b70:	63da      	str	r2, [r3, #60]	; 0x3c
 8008b72:	687b      	ldr	r3, [r7, #4]
 8008b74:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008b78:	f043 0202 	orr.w	r2, r3, #2
 8008b7c:	687b      	ldr	r3, [r7, #4]
 8008b7e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
 8008b82:	687b      	ldr	r3, [r7, #4]
 8008b84:	2204      	movs	r2, #4
 8008b86:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008b8a:	687b      	ldr	r3, [r7, #4]
 8008b8c:	2200      	movs	r2, #0
 8008b8e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008b92:	6878      	ldr	r0, [r7, #4]
 8008b94:	f000 f846 	bl	8008c24 <HAL_LTDC_ErrorCallback>
 8008b98:	68fb      	ldr	r3, [r7, #12]
 8008b9a:	f003 0301 	and.w	r3, r3, #1
 8008b9e:	2b00      	cmp	r3, #0
 8008ba0:	d01b      	beq.n	8008bda <HAL_LTDC_IRQHandler+0xfe>
 8008ba2:	68bb      	ldr	r3, [r7, #8]
 8008ba4:	f003 0301 	and.w	r3, r3, #1
 8008ba8:	2b00      	cmp	r3, #0
 8008baa:	d016      	beq.n	8008bda <HAL_LTDC_IRQHandler+0xfe>
 8008bac:	687b      	ldr	r3, [r7, #4]
 8008bae:	681b      	ldr	r3, [r3, #0]
 8008bb0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	681b      	ldr	r3, [r3, #0]
 8008bb6:	f022 0201 	bic.w	r2, r2, #1
 8008bba:	635a      	str	r2, [r3, #52]	; 0x34
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	681b      	ldr	r3, [r3, #0]
 8008bc0:	2201      	movs	r2, #1
 8008bc2:	63da      	str	r2, [r3, #60]	; 0x3c
 8008bc4:	687b      	ldr	r3, [r7, #4]
 8008bc6:	2201      	movs	r2, #1
 8008bc8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008bcc:	687b      	ldr	r3, [r7, #4]
 8008bce:	2200      	movs	r2, #0
 8008bd0:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008bd4:	6878      	ldr	r0, [r7, #4]
 8008bd6:	f000 f82f 	bl	8008c38 <HAL_LTDC_LineEventCallback>
 8008bda:	68fb      	ldr	r3, [r7, #12]
 8008bdc:	f003 0308 	and.w	r3, r3, #8
 8008be0:	2b00      	cmp	r3, #0
 8008be2:	d01b      	beq.n	8008c1c <HAL_LTDC_IRQHandler+0x140>
 8008be4:	68bb      	ldr	r3, [r7, #8]
 8008be6:	f003 0308 	and.w	r3, r3, #8
 8008bea:	2b00      	cmp	r3, #0
 8008bec:	d016      	beq.n	8008c1c <HAL_LTDC_IRQHandler+0x140>
 8008bee:	687b      	ldr	r3, [r7, #4]
 8008bf0:	681b      	ldr	r3, [r3, #0]
 8008bf2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008bf4:	687b      	ldr	r3, [r7, #4]
 8008bf6:	681b      	ldr	r3, [r3, #0]
 8008bf8:	f022 0208 	bic.w	r2, r2, #8
 8008bfc:	635a      	str	r2, [r3, #52]	; 0x34
 8008bfe:	687b      	ldr	r3, [r7, #4]
 8008c00:	681b      	ldr	r3, [r3, #0]
 8008c02:	2208      	movs	r2, #8
 8008c04:	63da      	str	r2, [r3, #60]	; 0x3c
 8008c06:	687b      	ldr	r3, [r7, #4]
 8008c08:	2201      	movs	r2, #1
 8008c0a:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008c0e:	687b      	ldr	r3, [r7, #4]
 8008c10:	2200      	movs	r2, #0
 8008c12:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008c16:	6878      	ldr	r0, [r7, #4]
 8008c18:	f000 f818 	bl	8008c4c <HAL_LTDC_ReloadEventCallback>
 8008c1c:	bf00      	nop
 8008c1e:	3710      	adds	r7, #16
 8008c20:	46bd      	mov	sp, r7
 8008c22:	bd80      	pop	{r7, pc}

08008c24 <HAL_LTDC_ErrorCallback>:
 8008c24:	b480      	push	{r7}
 8008c26:	b083      	sub	sp, #12
 8008c28:	af00      	add	r7, sp, #0
 8008c2a:	6078      	str	r0, [r7, #4]
 8008c2c:	bf00      	nop
 8008c2e:	370c      	adds	r7, #12
 8008c30:	46bd      	mov	sp, r7
 8008c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c36:	4770      	bx	lr

08008c38 <HAL_LTDC_LineEventCallback>:
 8008c38:	b480      	push	{r7}
 8008c3a:	b083      	sub	sp, #12
 8008c3c:	af00      	add	r7, sp, #0
 8008c3e:	6078      	str	r0, [r7, #4]
 8008c40:	bf00      	nop
 8008c42:	370c      	adds	r7, #12
 8008c44:	46bd      	mov	sp, r7
 8008c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c4a:	4770      	bx	lr

08008c4c <HAL_LTDC_ReloadEventCallback>:
 8008c4c:	b480      	push	{r7}
 8008c4e:	b083      	sub	sp, #12
 8008c50:	af00      	add	r7, sp, #0
 8008c52:	6078      	str	r0, [r7, #4]
 8008c54:	bf00      	nop
 8008c56:	370c      	adds	r7, #12
 8008c58:	46bd      	mov	sp, r7
 8008c5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c5e:	4770      	bx	lr

08008c60 <HAL_LTDC_ConfigLayer>:
 8008c60:	b5b0      	push	{r4, r5, r7, lr}
 8008c62:	b084      	sub	sp, #16
 8008c64:	af00      	add	r7, sp, #0
 8008c66:	60f8      	str	r0, [r7, #12]
 8008c68:	60b9      	str	r1, [r7, #8]
 8008c6a:	607a      	str	r2, [r7, #4]
 8008c6c:	68fb      	ldr	r3, [r7, #12]
 8008c6e:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8008c72:	2b01      	cmp	r3, #1
 8008c74:	d101      	bne.n	8008c7a <HAL_LTDC_ConfigLayer+0x1a>
 8008c76:	2302      	movs	r3, #2
 8008c78:	e02c      	b.n	8008cd4 <HAL_LTDC_ConfigLayer+0x74>
 8008c7a:	68fb      	ldr	r3, [r7, #12]
 8008c7c:	2201      	movs	r2, #1
 8008c7e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008c82:	68fb      	ldr	r3, [r7, #12]
 8008c84:	2202      	movs	r2, #2
 8008c86:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008c8a:	68fa      	ldr	r2, [r7, #12]
 8008c8c:	687b      	ldr	r3, [r7, #4]
 8008c8e:	2134      	movs	r1, #52	; 0x34
 8008c90:	fb01 f303 	mul.w	r3, r1, r3
 8008c94:	4413      	add	r3, r2
 8008c96:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8008c9a:	68bb      	ldr	r3, [r7, #8]
 8008c9c:	4614      	mov	r4, r2
 8008c9e:	461d      	mov	r5, r3
 8008ca0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008ca2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008ca4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008ca6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008ca8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008caa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8008cac:	682b      	ldr	r3, [r5, #0]
 8008cae:	6023      	str	r3, [r4, #0]
 8008cb0:	687a      	ldr	r2, [r7, #4]
 8008cb2:	68b9      	ldr	r1, [r7, #8]
 8008cb4:	68f8      	ldr	r0, [r7, #12]
 8008cb6:	f000 f81f 	bl	8008cf8 <LTDC_SetConfig>
 8008cba:	68fb      	ldr	r3, [r7, #12]
 8008cbc:	681b      	ldr	r3, [r3, #0]
 8008cbe:	2201      	movs	r2, #1
 8008cc0:	625a      	str	r2, [r3, #36]	; 0x24
 8008cc2:	68fb      	ldr	r3, [r7, #12]
 8008cc4:	2201      	movs	r2, #1
 8008cc6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1
 8008cca:	68fb      	ldr	r3, [r7, #12]
 8008ccc:	2200      	movs	r2, #0
 8008cce:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
 8008cd2:	2300      	movs	r3, #0
 8008cd4:	4618      	mov	r0, r3
 8008cd6:	3710      	adds	r7, #16
 8008cd8:	46bd      	mov	sp, r7
 8008cda:	bdb0      	pop	{r4, r5, r7, pc}

08008cdc <HAL_LTDC_GetState>:
 8008cdc:	b480      	push	{r7}
 8008cde:	b083      	sub	sp, #12
 8008ce0:	af00      	add	r7, sp, #0
 8008ce2:	6078      	str	r0, [r7, #4]
 8008ce4:	687b      	ldr	r3, [r7, #4]
 8008ce6:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8008cea:	b2db      	uxtb	r3, r3
 8008cec:	4618      	mov	r0, r3
 8008cee:	370c      	adds	r7, #12
 8008cf0:	46bd      	mov	sp, r7
 8008cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cf6:	4770      	bx	lr

08008cf8 <LTDC_SetConfig>:
 8008cf8:	b480      	push	{r7}
 8008cfa:	b089      	sub	sp, #36	; 0x24
 8008cfc:	af00      	add	r7, sp, #0
 8008cfe:	60f8      	str	r0, [r7, #12]
 8008d00:	60b9      	str	r1, [r7, #8]
 8008d02:	607a      	str	r2, [r7, #4]
 8008d04:	68bb      	ldr	r3, [r7, #8]
 8008d06:	685a      	ldr	r2, [r3, #4]
 8008d08:	68fb      	ldr	r3, [r7, #12]
 8008d0a:	681b      	ldr	r3, [r3, #0]
 8008d0c:	68db      	ldr	r3, [r3, #12]
 8008d0e:	0c1b      	lsrs	r3, r3, #16
 8008d10:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008d14:	4413      	add	r3, r2
 8008d16:	041b      	lsls	r3, r3, #16
 8008d18:	61fb      	str	r3, [r7, #28]
 8008d1a:	68fb      	ldr	r3, [r7, #12]
 8008d1c:	681b      	ldr	r3, [r3, #0]
 8008d1e:	461a      	mov	r2, r3
 8008d20:	687b      	ldr	r3, [r7, #4]
 8008d22:	01db      	lsls	r3, r3, #7
 8008d24:	4413      	add	r3, r2
 8008d26:	3384      	adds	r3, #132	; 0x84
 8008d28:	685b      	ldr	r3, [r3, #4]
 8008d2a:	68fa      	ldr	r2, [r7, #12]
 8008d2c:	6812      	ldr	r2, [r2, #0]
 8008d2e:	4611      	mov	r1, r2
 8008d30:	687a      	ldr	r2, [r7, #4]
 8008d32:	01d2      	lsls	r2, r2, #7
 8008d34:	440a      	add	r2, r1
 8008d36:	3284      	adds	r2, #132	; 0x84
 8008d38:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8008d3c:	6053      	str	r3, [r2, #4]
 8008d3e:	68bb      	ldr	r3, [r7, #8]
 8008d40:	681a      	ldr	r2, [r3, #0]
 8008d42:	68fb      	ldr	r3, [r7, #12]
 8008d44:	681b      	ldr	r3, [r3, #0]
 8008d46:	68db      	ldr	r3, [r3, #12]
 8008d48:	0c1b      	lsrs	r3, r3, #16
 8008d4a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008d4e:	4413      	add	r3, r2
 8008d50:	1c5a      	adds	r2, r3, #1
 8008d52:	68fb      	ldr	r3, [r7, #12]
 8008d54:	681b      	ldr	r3, [r3, #0]
 8008d56:	4619      	mov	r1, r3
 8008d58:	687b      	ldr	r3, [r7, #4]
 8008d5a:	01db      	lsls	r3, r3, #7
 8008d5c:	440b      	add	r3, r1
 8008d5e:	3384      	adds	r3, #132	; 0x84
 8008d60:	4619      	mov	r1, r3
 8008d62:	69fb      	ldr	r3, [r7, #28]
 8008d64:	4313      	orrs	r3, r2
 8008d66:	604b      	str	r3, [r1, #4]
 8008d68:	68bb      	ldr	r3, [r7, #8]
 8008d6a:	68da      	ldr	r2, [r3, #12]
 8008d6c:	68fb      	ldr	r3, [r7, #12]
 8008d6e:	681b      	ldr	r3, [r3, #0]
 8008d70:	68db      	ldr	r3, [r3, #12]
 8008d72:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8008d76:	4413      	add	r3, r2
 8008d78:	041b      	lsls	r3, r3, #16
 8008d7a:	61fb      	str	r3, [r7, #28]
 8008d7c:	68fb      	ldr	r3, [r7, #12]
 8008d7e:	681b      	ldr	r3, [r3, #0]
 8008d80:	461a      	mov	r2, r3
 8008d82:	687b      	ldr	r3, [r7, #4]
 8008d84:	01db      	lsls	r3, r3, #7
 8008d86:	4413      	add	r3, r2
 8008d88:	3384      	adds	r3, #132	; 0x84
 8008d8a:	689b      	ldr	r3, [r3, #8]
 8008d8c:	68fa      	ldr	r2, [r7, #12]
 8008d8e:	6812      	ldr	r2, [r2, #0]
 8008d90:	4611      	mov	r1, r2
 8008d92:	687a      	ldr	r2, [r7, #4]
 8008d94:	01d2      	lsls	r2, r2, #7
 8008d96:	440a      	add	r2, r1
 8008d98:	3284      	adds	r2, #132	; 0x84
 8008d9a:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8008d9e:	6093      	str	r3, [r2, #8]
 8008da0:	68bb      	ldr	r3, [r7, #8]
 8008da2:	689a      	ldr	r2, [r3, #8]
 8008da4:	68fb      	ldr	r3, [r7, #12]
 8008da6:	681b      	ldr	r3, [r3, #0]
 8008da8:	68db      	ldr	r3, [r3, #12]
 8008daa:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8008dae:	4413      	add	r3, r2
 8008db0:	1c5a      	adds	r2, r3, #1
 8008db2:	68fb      	ldr	r3, [r7, #12]
 8008db4:	681b      	ldr	r3, [r3, #0]
 8008db6:	4619      	mov	r1, r3
 8008db8:	687b      	ldr	r3, [r7, #4]
 8008dba:	01db      	lsls	r3, r3, #7
 8008dbc:	440b      	add	r3, r1
 8008dbe:	3384      	adds	r3, #132	; 0x84
 8008dc0:	4619      	mov	r1, r3
 8008dc2:	69fb      	ldr	r3, [r7, #28]
 8008dc4:	4313      	orrs	r3, r2
 8008dc6:	608b      	str	r3, [r1, #8]
 8008dc8:	68fb      	ldr	r3, [r7, #12]
 8008dca:	681b      	ldr	r3, [r3, #0]
 8008dcc:	461a      	mov	r2, r3
 8008dce:	687b      	ldr	r3, [r7, #4]
 8008dd0:	01db      	lsls	r3, r3, #7
 8008dd2:	4413      	add	r3, r2
 8008dd4:	3384      	adds	r3, #132	; 0x84
 8008dd6:	691b      	ldr	r3, [r3, #16]
 8008dd8:	68fa      	ldr	r2, [r7, #12]
 8008dda:	6812      	ldr	r2, [r2, #0]
 8008ddc:	4611      	mov	r1, r2
 8008dde:	687a      	ldr	r2, [r7, #4]
 8008de0:	01d2      	lsls	r2, r2, #7
 8008de2:	440a      	add	r2, r1
 8008de4:	3284      	adds	r2, #132	; 0x84
 8008de6:	f023 0307 	bic.w	r3, r3, #7
 8008dea:	6113      	str	r3, [r2, #16]
 8008dec:	68fb      	ldr	r3, [r7, #12]
 8008dee:	681b      	ldr	r3, [r3, #0]
 8008df0:	461a      	mov	r2, r3
 8008df2:	687b      	ldr	r3, [r7, #4]
 8008df4:	01db      	lsls	r3, r3, #7
 8008df6:	4413      	add	r3, r2
 8008df8:	3384      	adds	r3, #132	; 0x84
 8008dfa:	461a      	mov	r2, r3
 8008dfc:	68bb      	ldr	r3, [r7, #8]
 8008dfe:	691b      	ldr	r3, [r3, #16]
 8008e00:	6113      	str	r3, [r2, #16]
 8008e02:	68bb      	ldr	r3, [r7, #8]
 8008e04:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8008e08:	021b      	lsls	r3, r3, #8
 8008e0a:	61fb      	str	r3, [r7, #28]
 8008e0c:	68bb      	ldr	r3, [r7, #8]
 8008e0e:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8008e12:	041b      	lsls	r3, r3, #16
 8008e14:	61bb      	str	r3, [r7, #24]
 8008e16:	68bb      	ldr	r3, [r7, #8]
 8008e18:	699b      	ldr	r3, [r3, #24]
 8008e1a:	061b      	lsls	r3, r3, #24
 8008e1c:	617b      	str	r3, [r7, #20]
 8008e1e:	68fb      	ldr	r3, [r7, #12]
 8008e20:	681b      	ldr	r3, [r3, #0]
 8008e22:	461a      	mov	r2, r3
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	01db      	lsls	r3, r3, #7
 8008e28:	4413      	add	r3, r2
 8008e2a:	3384      	adds	r3, #132	; 0x84
 8008e2c:	699b      	ldr	r3, [r3, #24]
 8008e2e:	68fb      	ldr	r3, [r7, #12]
 8008e30:	681b      	ldr	r3, [r3, #0]
 8008e32:	461a      	mov	r2, r3
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	01db      	lsls	r3, r3, #7
 8008e38:	4413      	add	r3, r2
 8008e3a:	3384      	adds	r3, #132	; 0x84
 8008e3c:	461a      	mov	r2, r3
 8008e3e:	2300      	movs	r3, #0
 8008e40:	6193      	str	r3, [r2, #24]
 8008e42:	68bb      	ldr	r3, [r7, #8]
 8008e44:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8008e48:	461a      	mov	r2, r3
 8008e4a:	69fb      	ldr	r3, [r7, #28]
 8008e4c:	431a      	orrs	r2, r3
 8008e4e:	69bb      	ldr	r3, [r7, #24]
 8008e50:	431a      	orrs	r2, r3
 8008e52:	68fb      	ldr	r3, [r7, #12]
 8008e54:	681b      	ldr	r3, [r3, #0]
 8008e56:	4619      	mov	r1, r3
 8008e58:	687b      	ldr	r3, [r7, #4]
 8008e5a:	01db      	lsls	r3, r3, #7
 8008e5c:	440b      	add	r3, r1
 8008e5e:	3384      	adds	r3, #132	; 0x84
 8008e60:	4619      	mov	r1, r3
 8008e62:	697b      	ldr	r3, [r7, #20]
 8008e64:	4313      	orrs	r3, r2
 8008e66:	618b      	str	r3, [r1, #24]
 8008e68:	68fb      	ldr	r3, [r7, #12]
 8008e6a:	681b      	ldr	r3, [r3, #0]
 8008e6c:	461a      	mov	r2, r3
 8008e6e:	687b      	ldr	r3, [r7, #4]
 8008e70:	01db      	lsls	r3, r3, #7
 8008e72:	4413      	add	r3, r2
 8008e74:	3384      	adds	r3, #132	; 0x84
 8008e76:	695b      	ldr	r3, [r3, #20]
 8008e78:	68fa      	ldr	r2, [r7, #12]
 8008e7a:	6812      	ldr	r2, [r2, #0]
 8008e7c:	4611      	mov	r1, r2
 8008e7e:	687a      	ldr	r2, [r7, #4]
 8008e80:	01d2      	lsls	r2, r2, #7
 8008e82:	440a      	add	r2, r1
 8008e84:	3284      	adds	r2, #132	; 0x84
 8008e86:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8008e8a:	6153      	str	r3, [r2, #20]
 8008e8c:	68fb      	ldr	r3, [r7, #12]
 8008e8e:	681b      	ldr	r3, [r3, #0]
 8008e90:	461a      	mov	r2, r3
 8008e92:	687b      	ldr	r3, [r7, #4]
 8008e94:	01db      	lsls	r3, r3, #7
 8008e96:	4413      	add	r3, r2
 8008e98:	3384      	adds	r3, #132	; 0x84
 8008e9a:	461a      	mov	r2, r3
 8008e9c:	68bb      	ldr	r3, [r7, #8]
 8008e9e:	695b      	ldr	r3, [r3, #20]
 8008ea0:	6153      	str	r3, [r2, #20]
 8008ea2:	68fb      	ldr	r3, [r7, #12]
 8008ea4:	681b      	ldr	r3, [r3, #0]
 8008ea6:	461a      	mov	r2, r3
 8008ea8:	687b      	ldr	r3, [r7, #4]
 8008eaa:	01db      	lsls	r3, r3, #7
 8008eac:	4413      	add	r3, r2
 8008eae:	3384      	adds	r3, #132	; 0x84
 8008eb0:	69da      	ldr	r2, [r3, #28]
 8008eb2:	68fb      	ldr	r3, [r7, #12]
 8008eb4:	681b      	ldr	r3, [r3, #0]
 8008eb6:	4619      	mov	r1, r3
 8008eb8:	687b      	ldr	r3, [r7, #4]
 8008eba:	01db      	lsls	r3, r3, #7
 8008ebc:	440b      	add	r3, r1
 8008ebe:	3384      	adds	r3, #132	; 0x84
 8008ec0:	4619      	mov	r1, r3
 8008ec2:	4b58      	ldr	r3, [pc, #352]	; (8009024 <LTDC_SetConfig+0x32c>)
 8008ec4:	4013      	ands	r3, r2
 8008ec6:	61cb      	str	r3, [r1, #28]
 8008ec8:	68bb      	ldr	r3, [r7, #8]
 8008eca:	69da      	ldr	r2, [r3, #28]
 8008ecc:	68bb      	ldr	r3, [r7, #8]
 8008ece:	6a1b      	ldr	r3, [r3, #32]
 8008ed0:	68f9      	ldr	r1, [r7, #12]
 8008ed2:	6809      	ldr	r1, [r1, #0]
 8008ed4:	4608      	mov	r0, r1
 8008ed6:	6879      	ldr	r1, [r7, #4]
 8008ed8:	01c9      	lsls	r1, r1, #7
 8008eda:	4401      	add	r1, r0
 8008edc:	3184      	adds	r1, #132	; 0x84
 8008ede:	4313      	orrs	r3, r2
 8008ee0:	61cb      	str	r3, [r1, #28]
 8008ee2:	68fb      	ldr	r3, [r7, #12]
 8008ee4:	681b      	ldr	r3, [r3, #0]
 8008ee6:	461a      	mov	r2, r3
 8008ee8:	687b      	ldr	r3, [r7, #4]
 8008eea:	01db      	lsls	r3, r3, #7
 8008eec:	4413      	add	r3, r2
 8008eee:	3384      	adds	r3, #132	; 0x84
 8008ef0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008ef2:	68fb      	ldr	r3, [r7, #12]
 8008ef4:	681b      	ldr	r3, [r3, #0]
 8008ef6:	461a      	mov	r2, r3
 8008ef8:	687b      	ldr	r3, [r7, #4]
 8008efa:	01db      	lsls	r3, r3, #7
 8008efc:	4413      	add	r3, r2
 8008efe:	3384      	adds	r3, #132	; 0x84
 8008f00:	461a      	mov	r2, r3
 8008f02:	2300      	movs	r3, #0
 8008f04:	6293      	str	r3, [r2, #40]	; 0x28
 8008f06:	68fb      	ldr	r3, [r7, #12]
 8008f08:	681b      	ldr	r3, [r3, #0]
 8008f0a:	461a      	mov	r2, r3
 8008f0c:	687b      	ldr	r3, [r7, #4]
 8008f0e:	01db      	lsls	r3, r3, #7
 8008f10:	4413      	add	r3, r2
 8008f12:	3384      	adds	r3, #132	; 0x84
 8008f14:	461a      	mov	r2, r3
 8008f16:	68bb      	ldr	r3, [r7, #8]
 8008f18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008f1a:	6293      	str	r3, [r2, #40]	; 0x28
 8008f1c:	68bb      	ldr	r3, [r7, #8]
 8008f1e:	691b      	ldr	r3, [r3, #16]
 8008f20:	2b00      	cmp	r3, #0
 8008f22:	d102      	bne.n	8008f2a <LTDC_SetConfig+0x232>
 8008f24:	2304      	movs	r3, #4
 8008f26:	61fb      	str	r3, [r7, #28]
 8008f28:	e01b      	b.n	8008f62 <LTDC_SetConfig+0x26a>
 8008f2a:	68bb      	ldr	r3, [r7, #8]
 8008f2c:	691b      	ldr	r3, [r3, #16]
 8008f2e:	2b01      	cmp	r3, #1
 8008f30:	d102      	bne.n	8008f38 <LTDC_SetConfig+0x240>
 8008f32:	2303      	movs	r3, #3
 8008f34:	61fb      	str	r3, [r7, #28]
 8008f36:	e014      	b.n	8008f62 <LTDC_SetConfig+0x26a>
 8008f38:	68bb      	ldr	r3, [r7, #8]
 8008f3a:	691b      	ldr	r3, [r3, #16]
 8008f3c:	2b04      	cmp	r3, #4
 8008f3e:	d00b      	beq.n	8008f58 <LTDC_SetConfig+0x260>
 8008f40:	68bb      	ldr	r3, [r7, #8]
 8008f42:	691b      	ldr	r3, [r3, #16]
 8008f44:	2b02      	cmp	r3, #2
 8008f46:	d007      	beq.n	8008f58 <LTDC_SetConfig+0x260>
 8008f48:	68bb      	ldr	r3, [r7, #8]
 8008f4a:	691b      	ldr	r3, [r3, #16]
 8008f4c:	2b03      	cmp	r3, #3
 8008f4e:	d003      	beq.n	8008f58 <LTDC_SetConfig+0x260>
 8008f50:	68bb      	ldr	r3, [r7, #8]
 8008f52:	691b      	ldr	r3, [r3, #16]
 8008f54:	2b07      	cmp	r3, #7
 8008f56:	d102      	bne.n	8008f5e <LTDC_SetConfig+0x266>
 8008f58:	2302      	movs	r3, #2
 8008f5a:	61fb      	str	r3, [r7, #28]
 8008f5c:	e001      	b.n	8008f62 <LTDC_SetConfig+0x26a>
 8008f5e:	2301      	movs	r3, #1
 8008f60:	61fb      	str	r3, [r7, #28]
 8008f62:	68fb      	ldr	r3, [r7, #12]
 8008f64:	681b      	ldr	r3, [r3, #0]
 8008f66:	461a      	mov	r2, r3
 8008f68:	687b      	ldr	r3, [r7, #4]
 8008f6a:	01db      	lsls	r3, r3, #7
 8008f6c:	4413      	add	r3, r2
 8008f6e:	3384      	adds	r3, #132	; 0x84
 8008f70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f72:	68fa      	ldr	r2, [r7, #12]
 8008f74:	6812      	ldr	r2, [r2, #0]
 8008f76:	4611      	mov	r1, r2
 8008f78:	687a      	ldr	r2, [r7, #4]
 8008f7a:	01d2      	lsls	r2, r2, #7
 8008f7c:	440a      	add	r2, r1
 8008f7e:	3284      	adds	r2, #132	; 0x84
 8008f80:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8008f84:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008f86:	68bb      	ldr	r3, [r7, #8]
 8008f88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008f8a:	69fa      	ldr	r2, [r7, #28]
 8008f8c:	fb02 f303 	mul.w	r3, r2, r3
 8008f90:	041a      	lsls	r2, r3, #16
 8008f92:	68bb      	ldr	r3, [r7, #8]
 8008f94:	6859      	ldr	r1, [r3, #4]
 8008f96:	68bb      	ldr	r3, [r7, #8]
 8008f98:	681b      	ldr	r3, [r3, #0]
 8008f9a:	1acb      	subs	r3, r1, r3
 8008f9c:	69f9      	ldr	r1, [r7, #28]
 8008f9e:	fb01 f303 	mul.w	r3, r1, r3
 8008fa2:	3303      	adds	r3, #3
 8008fa4:	68f9      	ldr	r1, [r7, #12]
 8008fa6:	6809      	ldr	r1, [r1, #0]
 8008fa8:	4608      	mov	r0, r1
 8008faa:	6879      	ldr	r1, [r7, #4]
 8008fac:	01c9      	lsls	r1, r1, #7
 8008fae:	4401      	add	r1, r0
 8008fb0:	3184      	adds	r1, #132	; 0x84
 8008fb2:	4313      	orrs	r3, r2
 8008fb4:	62cb      	str	r3, [r1, #44]	; 0x2c
 8008fb6:	68fb      	ldr	r3, [r7, #12]
 8008fb8:	681b      	ldr	r3, [r3, #0]
 8008fba:	461a      	mov	r2, r3
 8008fbc:	687b      	ldr	r3, [r7, #4]
 8008fbe:	01db      	lsls	r3, r3, #7
 8008fc0:	4413      	add	r3, r2
 8008fc2:	3384      	adds	r3, #132	; 0x84
 8008fc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8008fc6:	68fb      	ldr	r3, [r7, #12]
 8008fc8:	681b      	ldr	r3, [r3, #0]
 8008fca:	4619      	mov	r1, r3
 8008fcc:	687b      	ldr	r3, [r7, #4]
 8008fce:	01db      	lsls	r3, r3, #7
 8008fd0:	440b      	add	r3, r1
 8008fd2:	3384      	adds	r3, #132	; 0x84
 8008fd4:	4619      	mov	r1, r3
 8008fd6:	4b14      	ldr	r3, [pc, #80]	; (8009028 <LTDC_SetConfig+0x330>)
 8008fd8:	4013      	ands	r3, r2
 8008fda:	630b      	str	r3, [r1, #48]	; 0x30
 8008fdc:	68fb      	ldr	r3, [r7, #12]
 8008fde:	681b      	ldr	r3, [r3, #0]
 8008fe0:	461a      	mov	r2, r3
 8008fe2:	687b      	ldr	r3, [r7, #4]
 8008fe4:	01db      	lsls	r3, r3, #7
 8008fe6:	4413      	add	r3, r2
 8008fe8:	3384      	adds	r3, #132	; 0x84
 8008fea:	461a      	mov	r2, r3
 8008fec:	68bb      	ldr	r3, [r7, #8]
 8008fee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ff0:	6313      	str	r3, [r2, #48]	; 0x30
 8008ff2:	68fb      	ldr	r3, [r7, #12]
 8008ff4:	681b      	ldr	r3, [r3, #0]
 8008ff6:	461a      	mov	r2, r3
 8008ff8:	687b      	ldr	r3, [r7, #4]
 8008ffa:	01db      	lsls	r3, r3, #7
 8008ffc:	4413      	add	r3, r2
 8008ffe:	3384      	adds	r3, #132	; 0x84
 8009000:	681b      	ldr	r3, [r3, #0]
 8009002:	68fa      	ldr	r2, [r7, #12]
 8009004:	6812      	ldr	r2, [r2, #0]
 8009006:	4611      	mov	r1, r2
 8009008:	687a      	ldr	r2, [r7, #4]
 800900a:	01d2      	lsls	r2, r2, #7
 800900c:	440a      	add	r2, r1
 800900e:	3284      	adds	r2, #132	; 0x84
 8009010:	f043 0301 	orr.w	r3, r3, #1
 8009014:	6013      	str	r3, [r2, #0]
 8009016:	bf00      	nop
 8009018:	3724      	adds	r7, #36	; 0x24
 800901a:	46bd      	mov	sp, r7
 800901c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009020:	4770      	bx	lr
 8009022:	bf00      	nop
 8009024:	fffff8f8 	.word	0xfffff8f8
 8009028:	fffff800 	.word	0xfffff800

0800902c <HAL_PWR_EnableBkUpAccess>:
 800902c:	b480      	push	{r7}
 800902e:	af00      	add	r7, sp, #0
 8009030:	4b05      	ldr	r3, [pc, #20]	; (8009048 <HAL_PWR_EnableBkUpAccess+0x1c>)
 8009032:	681b      	ldr	r3, [r3, #0]
 8009034:	4a04      	ldr	r2, [pc, #16]	; (8009048 <HAL_PWR_EnableBkUpAccess+0x1c>)
 8009036:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800903a:	6013      	str	r3, [r2, #0]
 800903c:	bf00      	nop
 800903e:	46bd      	mov	sp, r7
 8009040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009044:	4770      	bx	lr
 8009046:	bf00      	nop
 8009048:	40007000 	.word	0x40007000

0800904c <HAL_PWREx_EnableOverDrive>:
 800904c:	b580      	push	{r7, lr}
 800904e:	b082      	sub	sp, #8
 8009050:	af00      	add	r7, sp, #0
 8009052:	2300      	movs	r3, #0
 8009054:	607b      	str	r3, [r7, #4]
 8009056:	4b23      	ldr	r3, [pc, #140]	; (80090e4 <HAL_PWREx_EnableOverDrive+0x98>)
 8009058:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800905a:	4a22      	ldr	r2, [pc, #136]	; (80090e4 <HAL_PWREx_EnableOverDrive+0x98>)
 800905c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009060:	6413      	str	r3, [r2, #64]	; 0x40
 8009062:	4b20      	ldr	r3, [pc, #128]	; (80090e4 <HAL_PWREx_EnableOverDrive+0x98>)
 8009064:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009066:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800906a:	603b      	str	r3, [r7, #0]
 800906c:	683b      	ldr	r3, [r7, #0]
 800906e:	4b1e      	ldr	r3, [pc, #120]	; (80090e8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8009070:	681b      	ldr	r3, [r3, #0]
 8009072:	4a1d      	ldr	r2, [pc, #116]	; (80090e8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8009074:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009078:	6013      	str	r3, [r2, #0]
 800907a:	f7fd f98f 	bl	800639c <HAL_GetTick>
 800907e:	6078      	str	r0, [r7, #4]
 8009080:	e009      	b.n	8009096 <HAL_PWREx_EnableOverDrive+0x4a>
 8009082:	f7fd f98b 	bl	800639c <HAL_GetTick>
 8009086:	4602      	mov	r2, r0
 8009088:	687b      	ldr	r3, [r7, #4]
 800908a:	1ad3      	subs	r3, r2, r3
 800908c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8009090:	d901      	bls.n	8009096 <HAL_PWREx_EnableOverDrive+0x4a>
 8009092:	2303      	movs	r3, #3
 8009094:	e022      	b.n	80090dc <HAL_PWREx_EnableOverDrive+0x90>
 8009096:	4b14      	ldr	r3, [pc, #80]	; (80090e8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8009098:	685b      	ldr	r3, [r3, #4]
 800909a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800909e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80090a2:	d1ee      	bne.n	8009082 <HAL_PWREx_EnableOverDrive+0x36>
 80090a4:	4b10      	ldr	r3, [pc, #64]	; (80090e8 <HAL_PWREx_EnableOverDrive+0x9c>)
 80090a6:	681b      	ldr	r3, [r3, #0]
 80090a8:	4a0f      	ldr	r2, [pc, #60]	; (80090e8 <HAL_PWREx_EnableOverDrive+0x9c>)
 80090aa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80090ae:	6013      	str	r3, [r2, #0]
 80090b0:	f7fd f974 	bl	800639c <HAL_GetTick>
 80090b4:	6078      	str	r0, [r7, #4]
 80090b6:	e009      	b.n	80090cc <HAL_PWREx_EnableOverDrive+0x80>
 80090b8:	f7fd f970 	bl	800639c <HAL_GetTick>
 80090bc:	4602      	mov	r2, r0
 80090be:	687b      	ldr	r3, [r7, #4]
 80090c0:	1ad3      	subs	r3, r2, r3
 80090c2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80090c6:	d901      	bls.n	80090cc <HAL_PWREx_EnableOverDrive+0x80>
 80090c8:	2303      	movs	r3, #3
 80090ca:	e007      	b.n	80090dc <HAL_PWREx_EnableOverDrive+0x90>
 80090cc:	4b06      	ldr	r3, [pc, #24]	; (80090e8 <HAL_PWREx_EnableOverDrive+0x9c>)
 80090ce:	685b      	ldr	r3, [r3, #4]
 80090d0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80090d4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80090d8:	d1ee      	bne.n	80090b8 <HAL_PWREx_EnableOverDrive+0x6c>
 80090da:	2300      	movs	r3, #0
 80090dc:	4618      	mov	r0, r3
 80090de:	3708      	adds	r7, #8
 80090e0:	46bd      	mov	sp, r7
 80090e2:	bd80      	pop	{r7, pc}
 80090e4:	40023800 	.word	0x40023800
 80090e8:	40007000 	.word	0x40007000

080090ec <HAL_RCC_OscConfig>:
 80090ec:	b580      	push	{r7, lr}
 80090ee:	b086      	sub	sp, #24
 80090f0:	af00      	add	r7, sp, #0
 80090f2:	6078      	str	r0, [r7, #4]
 80090f4:	2300      	movs	r3, #0
 80090f6:	75fb      	strb	r3, [r7, #23]
 80090f8:	687b      	ldr	r3, [r7, #4]
 80090fa:	2b00      	cmp	r3, #0
 80090fc:	d101      	bne.n	8009102 <HAL_RCC_OscConfig+0x16>
 80090fe:	2301      	movs	r3, #1
 8009100:	e291      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 8009102:	687b      	ldr	r3, [r7, #4]
 8009104:	681b      	ldr	r3, [r3, #0]
 8009106:	f003 0301 	and.w	r3, r3, #1
 800910a:	2b00      	cmp	r3, #0
 800910c:	f000 8087 	beq.w	800921e <HAL_RCC_OscConfig+0x132>
 8009110:	4b96      	ldr	r3, [pc, #600]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009112:	689b      	ldr	r3, [r3, #8]
 8009114:	f003 030c 	and.w	r3, r3, #12
 8009118:	2b04      	cmp	r3, #4
 800911a:	d00c      	beq.n	8009136 <HAL_RCC_OscConfig+0x4a>
 800911c:	4b93      	ldr	r3, [pc, #588]	; (800936c <HAL_RCC_OscConfig+0x280>)
 800911e:	689b      	ldr	r3, [r3, #8]
 8009120:	f003 030c 	and.w	r3, r3, #12
 8009124:	2b08      	cmp	r3, #8
 8009126:	d112      	bne.n	800914e <HAL_RCC_OscConfig+0x62>
 8009128:	4b90      	ldr	r3, [pc, #576]	; (800936c <HAL_RCC_OscConfig+0x280>)
 800912a:	685b      	ldr	r3, [r3, #4]
 800912c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009130:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009134:	d10b      	bne.n	800914e <HAL_RCC_OscConfig+0x62>
 8009136:	4b8d      	ldr	r3, [pc, #564]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009138:	681b      	ldr	r3, [r3, #0]
 800913a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800913e:	2b00      	cmp	r3, #0
 8009140:	d06c      	beq.n	800921c <HAL_RCC_OscConfig+0x130>
 8009142:	687b      	ldr	r3, [r7, #4]
 8009144:	685b      	ldr	r3, [r3, #4]
 8009146:	2b00      	cmp	r3, #0
 8009148:	d168      	bne.n	800921c <HAL_RCC_OscConfig+0x130>
 800914a:	2301      	movs	r3, #1
 800914c:	e26b      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 800914e:	687b      	ldr	r3, [r7, #4]
 8009150:	685b      	ldr	r3, [r3, #4]
 8009152:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009156:	d106      	bne.n	8009166 <HAL_RCC_OscConfig+0x7a>
 8009158:	4b84      	ldr	r3, [pc, #528]	; (800936c <HAL_RCC_OscConfig+0x280>)
 800915a:	681b      	ldr	r3, [r3, #0]
 800915c:	4a83      	ldr	r2, [pc, #524]	; (800936c <HAL_RCC_OscConfig+0x280>)
 800915e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009162:	6013      	str	r3, [r2, #0]
 8009164:	e02e      	b.n	80091c4 <HAL_RCC_OscConfig+0xd8>
 8009166:	687b      	ldr	r3, [r7, #4]
 8009168:	685b      	ldr	r3, [r3, #4]
 800916a:	2b00      	cmp	r3, #0
 800916c:	d10c      	bne.n	8009188 <HAL_RCC_OscConfig+0x9c>
 800916e:	4b7f      	ldr	r3, [pc, #508]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009170:	681b      	ldr	r3, [r3, #0]
 8009172:	4a7e      	ldr	r2, [pc, #504]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009174:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009178:	6013      	str	r3, [r2, #0]
 800917a:	4b7c      	ldr	r3, [pc, #496]	; (800936c <HAL_RCC_OscConfig+0x280>)
 800917c:	681b      	ldr	r3, [r3, #0]
 800917e:	4a7b      	ldr	r2, [pc, #492]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009180:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8009184:	6013      	str	r3, [r2, #0]
 8009186:	e01d      	b.n	80091c4 <HAL_RCC_OscConfig+0xd8>
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	685b      	ldr	r3, [r3, #4]
 800918c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8009190:	d10c      	bne.n	80091ac <HAL_RCC_OscConfig+0xc0>
 8009192:	4b76      	ldr	r3, [pc, #472]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009194:	681b      	ldr	r3, [r3, #0]
 8009196:	4a75      	ldr	r2, [pc, #468]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009198:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800919c:	6013      	str	r3, [r2, #0]
 800919e:	4b73      	ldr	r3, [pc, #460]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80091a0:	681b      	ldr	r3, [r3, #0]
 80091a2:	4a72      	ldr	r2, [pc, #456]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80091a4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80091a8:	6013      	str	r3, [r2, #0]
 80091aa:	e00b      	b.n	80091c4 <HAL_RCC_OscConfig+0xd8>
 80091ac:	4b6f      	ldr	r3, [pc, #444]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80091ae:	681b      	ldr	r3, [r3, #0]
 80091b0:	4a6e      	ldr	r2, [pc, #440]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80091b2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80091b6:	6013      	str	r3, [r2, #0]
 80091b8:	4b6c      	ldr	r3, [pc, #432]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80091ba:	681b      	ldr	r3, [r3, #0]
 80091bc:	4a6b      	ldr	r2, [pc, #428]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80091be:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80091c2:	6013      	str	r3, [r2, #0]
 80091c4:	687b      	ldr	r3, [r7, #4]
 80091c6:	685b      	ldr	r3, [r3, #4]
 80091c8:	2b00      	cmp	r3, #0
 80091ca:	d013      	beq.n	80091f4 <HAL_RCC_OscConfig+0x108>
 80091cc:	f7fd f8e6 	bl	800639c <HAL_GetTick>
 80091d0:	6138      	str	r0, [r7, #16]
 80091d2:	e008      	b.n	80091e6 <HAL_RCC_OscConfig+0xfa>
 80091d4:	f7fd f8e2 	bl	800639c <HAL_GetTick>
 80091d8:	4602      	mov	r2, r0
 80091da:	693b      	ldr	r3, [r7, #16]
 80091dc:	1ad3      	subs	r3, r2, r3
 80091de:	2b64      	cmp	r3, #100	; 0x64
 80091e0:	d901      	bls.n	80091e6 <HAL_RCC_OscConfig+0xfa>
 80091e2:	2303      	movs	r3, #3
 80091e4:	e21f      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 80091e6:	4b61      	ldr	r3, [pc, #388]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80091e8:	681b      	ldr	r3, [r3, #0]
 80091ea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80091ee:	2b00      	cmp	r3, #0
 80091f0:	d0f0      	beq.n	80091d4 <HAL_RCC_OscConfig+0xe8>
 80091f2:	e014      	b.n	800921e <HAL_RCC_OscConfig+0x132>
 80091f4:	f7fd f8d2 	bl	800639c <HAL_GetTick>
 80091f8:	6138      	str	r0, [r7, #16]
 80091fa:	e008      	b.n	800920e <HAL_RCC_OscConfig+0x122>
 80091fc:	f7fd f8ce 	bl	800639c <HAL_GetTick>
 8009200:	4602      	mov	r2, r0
 8009202:	693b      	ldr	r3, [r7, #16]
 8009204:	1ad3      	subs	r3, r2, r3
 8009206:	2b64      	cmp	r3, #100	; 0x64
 8009208:	d901      	bls.n	800920e <HAL_RCC_OscConfig+0x122>
 800920a:	2303      	movs	r3, #3
 800920c:	e20b      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 800920e:	4b57      	ldr	r3, [pc, #348]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009210:	681b      	ldr	r3, [r3, #0]
 8009212:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009216:	2b00      	cmp	r3, #0
 8009218:	d1f0      	bne.n	80091fc <HAL_RCC_OscConfig+0x110>
 800921a:	e000      	b.n	800921e <HAL_RCC_OscConfig+0x132>
 800921c:	bf00      	nop
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	681b      	ldr	r3, [r3, #0]
 8009222:	f003 0302 	and.w	r3, r3, #2
 8009226:	2b00      	cmp	r3, #0
 8009228:	d069      	beq.n	80092fe <HAL_RCC_OscConfig+0x212>
 800922a:	4b50      	ldr	r3, [pc, #320]	; (800936c <HAL_RCC_OscConfig+0x280>)
 800922c:	689b      	ldr	r3, [r3, #8]
 800922e:	f003 030c 	and.w	r3, r3, #12
 8009232:	2b00      	cmp	r3, #0
 8009234:	d00b      	beq.n	800924e <HAL_RCC_OscConfig+0x162>
 8009236:	4b4d      	ldr	r3, [pc, #308]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009238:	689b      	ldr	r3, [r3, #8]
 800923a:	f003 030c 	and.w	r3, r3, #12
 800923e:	2b08      	cmp	r3, #8
 8009240:	d11c      	bne.n	800927c <HAL_RCC_OscConfig+0x190>
 8009242:	4b4a      	ldr	r3, [pc, #296]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009244:	685b      	ldr	r3, [r3, #4]
 8009246:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800924a:	2b00      	cmp	r3, #0
 800924c:	d116      	bne.n	800927c <HAL_RCC_OscConfig+0x190>
 800924e:	4b47      	ldr	r3, [pc, #284]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009250:	681b      	ldr	r3, [r3, #0]
 8009252:	f003 0302 	and.w	r3, r3, #2
 8009256:	2b00      	cmp	r3, #0
 8009258:	d005      	beq.n	8009266 <HAL_RCC_OscConfig+0x17a>
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	68db      	ldr	r3, [r3, #12]
 800925e:	2b01      	cmp	r3, #1
 8009260:	d001      	beq.n	8009266 <HAL_RCC_OscConfig+0x17a>
 8009262:	2301      	movs	r3, #1
 8009264:	e1df      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 8009266:	4b41      	ldr	r3, [pc, #260]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009268:	681b      	ldr	r3, [r3, #0]
 800926a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800926e:	687b      	ldr	r3, [r7, #4]
 8009270:	691b      	ldr	r3, [r3, #16]
 8009272:	00db      	lsls	r3, r3, #3
 8009274:	493d      	ldr	r1, [pc, #244]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009276:	4313      	orrs	r3, r2
 8009278:	600b      	str	r3, [r1, #0]
 800927a:	e040      	b.n	80092fe <HAL_RCC_OscConfig+0x212>
 800927c:	687b      	ldr	r3, [r7, #4]
 800927e:	68db      	ldr	r3, [r3, #12]
 8009280:	2b00      	cmp	r3, #0
 8009282:	d023      	beq.n	80092cc <HAL_RCC_OscConfig+0x1e0>
 8009284:	4b39      	ldr	r3, [pc, #228]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009286:	681b      	ldr	r3, [r3, #0]
 8009288:	4a38      	ldr	r2, [pc, #224]	; (800936c <HAL_RCC_OscConfig+0x280>)
 800928a:	f043 0301 	orr.w	r3, r3, #1
 800928e:	6013      	str	r3, [r2, #0]
 8009290:	f7fd f884 	bl	800639c <HAL_GetTick>
 8009294:	6138      	str	r0, [r7, #16]
 8009296:	e008      	b.n	80092aa <HAL_RCC_OscConfig+0x1be>
 8009298:	f7fd f880 	bl	800639c <HAL_GetTick>
 800929c:	4602      	mov	r2, r0
 800929e:	693b      	ldr	r3, [r7, #16]
 80092a0:	1ad3      	subs	r3, r2, r3
 80092a2:	2b02      	cmp	r3, #2
 80092a4:	d901      	bls.n	80092aa <HAL_RCC_OscConfig+0x1be>
 80092a6:	2303      	movs	r3, #3
 80092a8:	e1bd      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 80092aa:	4b30      	ldr	r3, [pc, #192]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80092ac:	681b      	ldr	r3, [r3, #0]
 80092ae:	f003 0302 	and.w	r3, r3, #2
 80092b2:	2b00      	cmp	r3, #0
 80092b4:	d0f0      	beq.n	8009298 <HAL_RCC_OscConfig+0x1ac>
 80092b6:	4b2d      	ldr	r3, [pc, #180]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80092b8:	681b      	ldr	r3, [r3, #0]
 80092ba:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	691b      	ldr	r3, [r3, #16]
 80092c2:	00db      	lsls	r3, r3, #3
 80092c4:	4929      	ldr	r1, [pc, #164]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80092c6:	4313      	orrs	r3, r2
 80092c8:	600b      	str	r3, [r1, #0]
 80092ca:	e018      	b.n	80092fe <HAL_RCC_OscConfig+0x212>
 80092cc:	4b27      	ldr	r3, [pc, #156]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80092ce:	681b      	ldr	r3, [r3, #0]
 80092d0:	4a26      	ldr	r2, [pc, #152]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80092d2:	f023 0301 	bic.w	r3, r3, #1
 80092d6:	6013      	str	r3, [r2, #0]
 80092d8:	f7fd f860 	bl	800639c <HAL_GetTick>
 80092dc:	6138      	str	r0, [r7, #16]
 80092de:	e008      	b.n	80092f2 <HAL_RCC_OscConfig+0x206>
 80092e0:	f7fd f85c 	bl	800639c <HAL_GetTick>
 80092e4:	4602      	mov	r2, r0
 80092e6:	693b      	ldr	r3, [r7, #16]
 80092e8:	1ad3      	subs	r3, r2, r3
 80092ea:	2b02      	cmp	r3, #2
 80092ec:	d901      	bls.n	80092f2 <HAL_RCC_OscConfig+0x206>
 80092ee:	2303      	movs	r3, #3
 80092f0:	e199      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 80092f2:	4b1e      	ldr	r3, [pc, #120]	; (800936c <HAL_RCC_OscConfig+0x280>)
 80092f4:	681b      	ldr	r3, [r3, #0]
 80092f6:	f003 0302 	and.w	r3, r3, #2
 80092fa:	2b00      	cmp	r3, #0
 80092fc:	d1f0      	bne.n	80092e0 <HAL_RCC_OscConfig+0x1f4>
 80092fe:	687b      	ldr	r3, [r7, #4]
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	f003 0308 	and.w	r3, r3, #8
 8009306:	2b00      	cmp	r3, #0
 8009308:	d038      	beq.n	800937c <HAL_RCC_OscConfig+0x290>
 800930a:	687b      	ldr	r3, [r7, #4]
 800930c:	695b      	ldr	r3, [r3, #20]
 800930e:	2b00      	cmp	r3, #0
 8009310:	d019      	beq.n	8009346 <HAL_RCC_OscConfig+0x25a>
 8009312:	4b16      	ldr	r3, [pc, #88]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009314:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009316:	4a15      	ldr	r2, [pc, #84]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009318:	f043 0301 	orr.w	r3, r3, #1
 800931c:	6753      	str	r3, [r2, #116]	; 0x74
 800931e:	f7fd f83d 	bl	800639c <HAL_GetTick>
 8009322:	6138      	str	r0, [r7, #16]
 8009324:	e008      	b.n	8009338 <HAL_RCC_OscConfig+0x24c>
 8009326:	f7fd f839 	bl	800639c <HAL_GetTick>
 800932a:	4602      	mov	r2, r0
 800932c:	693b      	ldr	r3, [r7, #16]
 800932e:	1ad3      	subs	r3, r2, r3
 8009330:	2b02      	cmp	r3, #2
 8009332:	d901      	bls.n	8009338 <HAL_RCC_OscConfig+0x24c>
 8009334:	2303      	movs	r3, #3
 8009336:	e176      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 8009338:	4b0c      	ldr	r3, [pc, #48]	; (800936c <HAL_RCC_OscConfig+0x280>)
 800933a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800933c:	f003 0302 	and.w	r3, r3, #2
 8009340:	2b00      	cmp	r3, #0
 8009342:	d0f0      	beq.n	8009326 <HAL_RCC_OscConfig+0x23a>
 8009344:	e01a      	b.n	800937c <HAL_RCC_OscConfig+0x290>
 8009346:	4b09      	ldr	r3, [pc, #36]	; (800936c <HAL_RCC_OscConfig+0x280>)
 8009348:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800934a:	4a08      	ldr	r2, [pc, #32]	; (800936c <HAL_RCC_OscConfig+0x280>)
 800934c:	f023 0301 	bic.w	r3, r3, #1
 8009350:	6753      	str	r3, [r2, #116]	; 0x74
 8009352:	f7fd f823 	bl	800639c <HAL_GetTick>
 8009356:	6138      	str	r0, [r7, #16]
 8009358:	e00a      	b.n	8009370 <HAL_RCC_OscConfig+0x284>
 800935a:	f7fd f81f 	bl	800639c <HAL_GetTick>
 800935e:	4602      	mov	r2, r0
 8009360:	693b      	ldr	r3, [r7, #16]
 8009362:	1ad3      	subs	r3, r2, r3
 8009364:	2b02      	cmp	r3, #2
 8009366:	d903      	bls.n	8009370 <HAL_RCC_OscConfig+0x284>
 8009368:	2303      	movs	r3, #3
 800936a:	e15c      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 800936c:	40023800 	.word	0x40023800
 8009370:	4b91      	ldr	r3, [pc, #580]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009372:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009374:	f003 0302 	and.w	r3, r3, #2
 8009378:	2b00      	cmp	r3, #0
 800937a:	d1ee      	bne.n	800935a <HAL_RCC_OscConfig+0x26e>
 800937c:	687b      	ldr	r3, [r7, #4]
 800937e:	681b      	ldr	r3, [r3, #0]
 8009380:	f003 0304 	and.w	r3, r3, #4
 8009384:	2b00      	cmp	r3, #0
 8009386:	f000 80a4 	beq.w	80094d2 <HAL_RCC_OscConfig+0x3e6>
 800938a:	4b8b      	ldr	r3, [pc, #556]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 800938c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800938e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009392:	2b00      	cmp	r3, #0
 8009394:	d10d      	bne.n	80093b2 <HAL_RCC_OscConfig+0x2c6>
 8009396:	4b88      	ldr	r3, [pc, #544]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009398:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800939a:	4a87      	ldr	r2, [pc, #540]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 800939c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80093a0:	6413      	str	r3, [r2, #64]	; 0x40
 80093a2:	4b85      	ldr	r3, [pc, #532]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80093a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80093a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80093aa:	60bb      	str	r3, [r7, #8]
 80093ac:	68bb      	ldr	r3, [r7, #8]
 80093ae:	2301      	movs	r3, #1
 80093b0:	75fb      	strb	r3, [r7, #23]
 80093b2:	4b82      	ldr	r3, [pc, #520]	; (80095bc <HAL_RCC_OscConfig+0x4d0>)
 80093b4:	681b      	ldr	r3, [r3, #0]
 80093b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80093ba:	2b00      	cmp	r3, #0
 80093bc:	d118      	bne.n	80093f0 <HAL_RCC_OscConfig+0x304>
 80093be:	4b7f      	ldr	r3, [pc, #508]	; (80095bc <HAL_RCC_OscConfig+0x4d0>)
 80093c0:	681b      	ldr	r3, [r3, #0]
 80093c2:	4a7e      	ldr	r2, [pc, #504]	; (80095bc <HAL_RCC_OscConfig+0x4d0>)
 80093c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80093c8:	6013      	str	r3, [r2, #0]
 80093ca:	f7fc ffe7 	bl	800639c <HAL_GetTick>
 80093ce:	6138      	str	r0, [r7, #16]
 80093d0:	e008      	b.n	80093e4 <HAL_RCC_OscConfig+0x2f8>
 80093d2:	f7fc ffe3 	bl	800639c <HAL_GetTick>
 80093d6:	4602      	mov	r2, r0
 80093d8:	693b      	ldr	r3, [r7, #16]
 80093da:	1ad3      	subs	r3, r2, r3
 80093dc:	2b64      	cmp	r3, #100	; 0x64
 80093de:	d901      	bls.n	80093e4 <HAL_RCC_OscConfig+0x2f8>
 80093e0:	2303      	movs	r3, #3
 80093e2:	e120      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 80093e4:	4b75      	ldr	r3, [pc, #468]	; (80095bc <HAL_RCC_OscConfig+0x4d0>)
 80093e6:	681b      	ldr	r3, [r3, #0]
 80093e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80093ec:	2b00      	cmp	r3, #0
 80093ee:	d0f0      	beq.n	80093d2 <HAL_RCC_OscConfig+0x2e6>
 80093f0:	687b      	ldr	r3, [r7, #4]
 80093f2:	689b      	ldr	r3, [r3, #8]
 80093f4:	2b01      	cmp	r3, #1
 80093f6:	d106      	bne.n	8009406 <HAL_RCC_OscConfig+0x31a>
 80093f8:	4b6f      	ldr	r3, [pc, #444]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80093fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80093fc:	4a6e      	ldr	r2, [pc, #440]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80093fe:	f043 0301 	orr.w	r3, r3, #1
 8009402:	6713      	str	r3, [r2, #112]	; 0x70
 8009404:	e02d      	b.n	8009462 <HAL_RCC_OscConfig+0x376>
 8009406:	687b      	ldr	r3, [r7, #4]
 8009408:	689b      	ldr	r3, [r3, #8]
 800940a:	2b00      	cmp	r3, #0
 800940c:	d10c      	bne.n	8009428 <HAL_RCC_OscConfig+0x33c>
 800940e:	4b6a      	ldr	r3, [pc, #424]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009410:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009412:	4a69      	ldr	r2, [pc, #420]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009414:	f023 0301 	bic.w	r3, r3, #1
 8009418:	6713      	str	r3, [r2, #112]	; 0x70
 800941a:	4b67      	ldr	r3, [pc, #412]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 800941c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800941e:	4a66      	ldr	r2, [pc, #408]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009420:	f023 0304 	bic.w	r3, r3, #4
 8009424:	6713      	str	r3, [r2, #112]	; 0x70
 8009426:	e01c      	b.n	8009462 <HAL_RCC_OscConfig+0x376>
 8009428:	687b      	ldr	r3, [r7, #4]
 800942a:	689b      	ldr	r3, [r3, #8]
 800942c:	2b05      	cmp	r3, #5
 800942e:	d10c      	bne.n	800944a <HAL_RCC_OscConfig+0x35e>
 8009430:	4b61      	ldr	r3, [pc, #388]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009432:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009434:	4a60      	ldr	r2, [pc, #384]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009436:	f043 0304 	orr.w	r3, r3, #4
 800943a:	6713      	str	r3, [r2, #112]	; 0x70
 800943c:	4b5e      	ldr	r3, [pc, #376]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 800943e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009440:	4a5d      	ldr	r2, [pc, #372]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009442:	f043 0301 	orr.w	r3, r3, #1
 8009446:	6713      	str	r3, [r2, #112]	; 0x70
 8009448:	e00b      	b.n	8009462 <HAL_RCC_OscConfig+0x376>
 800944a:	4b5b      	ldr	r3, [pc, #364]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 800944c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800944e:	4a5a      	ldr	r2, [pc, #360]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009450:	f023 0301 	bic.w	r3, r3, #1
 8009454:	6713      	str	r3, [r2, #112]	; 0x70
 8009456:	4b58      	ldr	r3, [pc, #352]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009458:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800945a:	4a57      	ldr	r2, [pc, #348]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 800945c:	f023 0304 	bic.w	r3, r3, #4
 8009460:	6713      	str	r3, [r2, #112]	; 0x70
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	689b      	ldr	r3, [r3, #8]
 8009466:	2b00      	cmp	r3, #0
 8009468:	d015      	beq.n	8009496 <HAL_RCC_OscConfig+0x3aa>
 800946a:	f7fc ff97 	bl	800639c <HAL_GetTick>
 800946e:	6138      	str	r0, [r7, #16]
 8009470:	e00a      	b.n	8009488 <HAL_RCC_OscConfig+0x39c>
 8009472:	f7fc ff93 	bl	800639c <HAL_GetTick>
 8009476:	4602      	mov	r2, r0
 8009478:	693b      	ldr	r3, [r7, #16]
 800947a:	1ad3      	subs	r3, r2, r3
 800947c:	f241 3288 	movw	r2, #5000	; 0x1388
 8009480:	4293      	cmp	r3, r2
 8009482:	d901      	bls.n	8009488 <HAL_RCC_OscConfig+0x39c>
 8009484:	2303      	movs	r3, #3
 8009486:	e0ce      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 8009488:	4b4b      	ldr	r3, [pc, #300]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 800948a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800948c:	f003 0302 	and.w	r3, r3, #2
 8009490:	2b00      	cmp	r3, #0
 8009492:	d0ee      	beq.n	8009472 <HAL_RCC_OscConfig+0x386>
 8009494:	e014      	b.n	80094c0 <HAL_RCC_OscConfig+0x3d4>
 8009496:	f7fc ff81 	bl	800639c <HAL_GetTick>
 800949a:	6138      	str	r0, [r7, #16]
 800949c:	e00a      	b.n	80094b4 <HAL_RCC_OscConfig+0x3c8>
 800949e:	f7fc ff7d 	bl	800639c <HAL_GetTick>
 80094a2:	4602      	mov	r2, r0
 80094a4:	693b      	ldr	r3, [r7, #16]
 80094a6:	1ad3      	subs	r3, r2, r3
 80094a8:	f241 3288 	movw	r2, #5000	; 0x1388
 80094ac:	4293      	cmp	r3, r2
 80094ae:	d901      	bls.n	80094b4 <HAL_RCC_OscConfig+0x3c8>
 80094b0:	2303      	movs	r3, #3
 80094b2:	e0b8      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 80094b4:	4b40      	ldr	r3, [pc, #256]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80094b6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80094b8:	f003 0302 	and.w	r3, r3, #2
 80094bc:	2b00      	cmp	r3, #0
 80094be:	d1ee      	bne.n	800949e <HAL_RCC_OscConfig+0x3b2>
 80094c0:	7dfb      	ldrb	r3, [r7, #23]
 80094c2:	2b01      	cmp	r3, #1
 80094c4:	d105      	bne.n	80094d2 <HAL_RCC_OscConfig+0x3e6>
 80094c6:	4b3c      	ldr	r3, [pc, #240]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80094c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80094ca:	4a3b      	ldr	r2, [pc, #236]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80094cc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80094d0:	6413      	str	r3, [r2, #64]	; 0x40
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	699b      	ldr	r3, [r3, #24]
 80094d6:	2b00      	cmp	r3, #0
 80094d8:	f000 80a4 	beq.w	8009624 <HAL_RCC_OscConfig+0x538>
 80094dc:	4b36      	ldr	r3, [pc, #216]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80094de:	689b      	ldr	r3, [r3, #8]
 80094e0:	f003 030c 	and.w	r3, r3, #12
 80094e4:	2b08      	cmp	r3, #8
 80094e6:	d06b      	beq.n	80095c0 <HAL_RCC_OscConfig+0x4d4>
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	699b      	ldr	r3, [r3, #24]
 80094ec:	2b02      	cmp	r3, #2
 80094ee:	d149      	bne.n	8009584 <HAL_RCC_OscConfig+0x498>
 80094f0:	4b31      	ldr	r3, [pc, #196]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80094f2:	681b      	ldr	r3, [r3, #0]
 80094f4:	4a30      	ldr	r2, [pc, #192]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80094f6:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80094fa:	6013      	str	r3, [r2, #0]
 80094fc:	f7fc ff4e 	bl	800639c <HAL_GetTick>
 8009500:	6138      	str	r0, [r7, #16]
 8009502:	e008      	b.n	8009516 <HAL_RCC_OscConfig+0x42a>
 8009504:	f7fc ff4a 	bl	800639c <HAL_GetTick>
 8009508:	4602      	mov	r2, r0
 800950a:	693b      	ldr	r3, [r7, #16]
 800950c:	1ad3      	subs	r3, r2, r3
 800950e:	2b02      	cmp	r3, #2
 8009510:	d901      	bls.n	8009516 <HAL_RCC_OscConfig+0x42a>
 8009512:	2303      	movs	r3, #3
 8009514:	e087      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 8009516:	4b28      	ldr	r3, [pc, #160]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009518:	681b      	ldr	r3, [r3, #0]
 800951a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800951e:	2b00      	cmp	r3, #0
 8009520:	d1f0      	bne.n	8009504 <HAL_RCC_OscConfig+0x418>
 8009522:	687b      	ldr	r3, [r7, #4]
 8009524:	69da      	ldr	r2, [r3, #28]
 8009526:	687b      	ldr	r3, [r7, #4]
 8009528:	6a1b      	ldr	r3, [r3, #32]
 800952a:	431a      	orrs	r2, r3
 800952c:	687b      	ldr	r3, [r7, #4]
 800952e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009530:	019b      	lsls	r3, r3, #6
 8009532:	431a      	orrs	r2, r3
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009538:	085b      	lsrs	r3, r3, #1
 800953a:	3b01      	subs	r3, #1
 800953c:	041b      	lsls	r3, r3, #16
 800953e:	431a      	orrs	r2, r3
 8009540:	687b      	ldr	r3, [r7, #4]
 8009542:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009544:	061b      	lsls	r3, r3, #24
 8009546:	4313      	orrs	r3, r2
 8009548:	4a1b      	ldr	r2, [pc, #108]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 800954a:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800954e:	6053      	str	r3, [r2, #4]
 8009550:	4b19      	ldr	r3, [pc, #100]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009552:	681b      	ldr	r3, [r3, #0]
 8009554:	4a18      	ldr	r2, [pc, #96]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009556:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800955a:	6013      	str	r3, [r2, #0]
 800955c:	f7fc ff1e 	bl	800639c <HAL_GetTick>
 8009560:	6138      	str	r0, [r7, #16]
 8009562:	e008      	b.n	8009576 <HAL_RCC_OscConfig+0x48a>
 8009564:	f7fc ff1a 	bl	800639c <HAL_GetTick>
 8009568:	4602      	mov	r2, r0
 800956a:	693b      	ldr	r3, [r7, #16]
 800956c:	1ad3      	subs	r3, r2, r3
 800956e:	2b02      	cmp	r3, #2
 8009570:	d901      	bls.n	8009576 <HAL_RCC_OscConfig+0x48a>
 8009572:	2303      	movs	r3, #3
 8009574:	e057      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 8009576:	4b10      	ldr	r3, [pc, #64]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009578:	681b      	ldr	r3, [r3, #0]
 800957a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800957e:	2b00      	cmp	r3, #0
 8009580:	d0f0      	beq.n	8009564 <HAL_RCC_OscConfig+0x478>
 8009582:	e04f      	b.n	8009624 <HAL_RCC_OscConfig+0x538>
 8009584:	4b0c      	ldr	r3, [pc, #48]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 8009586:	681b      	ldr	r3, [r3, #0]
 8009588:	4a0b      	ldr	r2, [pc, #44]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 800958a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800958e:	6013      	str	r3, [r2, #0]
 8009590:	f7fc ff04 	bl	800639c <HAL_GetTick>
 8009594:	6138      	str	r0, [r7, #16]
 8009596:	e008      	b.n	80095aa <HAL_RCC_OscConfig+0x4be>
 8009598:	f7fc ff00 	bl	800639c <HAL_GetTick>
 800959c:	4602      	mov	r2, r0
 800959e:	693b      	ldr	r3, [r7, #16]
 80095a0:	1ad3      	subs	r3, r2, r3
 80095a2:	2b02      	cmp	r3, #2
 80095a4:	d901      	bls.n	80095aa <HAL_RCC_OscConfig+0x4be>
 80095a6:	2303      	movs	r3, #3
 80095a8:	e03d      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 80095aa:	4b03      	ldr	r3, [pc, #12]	; (80095b8 <HAL_RCC_OscConfig+0x4cc>)
 80095ac:	681b      	ldr	r3, [r3, #0]
 80095ae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80095b2:	2b00      	cmp	r3, #0
 80095b4:	d1f0      	bne.n	8009598 <HAL_RCC_OscConfig+0x4ac>
 80095b6:	e035      	b.n	8009624 <HAL_RCC_OscConfig+0x538>
 80095b8:	40023800 	.word	0x40023800
 80095bc:	40007000 	.word	0x40007000
 80095c0:	4b1b      	ldr	r3, [pc, #108]	; (8009630 <HAL_RCC_OscConfig+0x544>)
 80095c2:	685b      	ldr	r3, [r3, #4]
 80095c4:	60fb      	str	r3, [r7, #12]
 80095c6:	687b      	ldr	r3, [r7, #4]
 80095c8:	699b      	ldr	r3, [r3, #24]
 80095ca:	2b01      	cmp	r3, #1
 80095cc:	d028      	beq.n	8009620 <HAL_RCC_OscConfig+0x534>
 80095ce:	68fb      	ldr	r3, [r7, #12]
 80095d0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80095d4:	687b      	ldr	r3, [r7, #4]
 80095d6:	69db      	ldr	r3, [r3, #28]
 80095d8:	429a      	cmp	r2, r3
 80095da:	d121      	bne.n	8009620 <HAL_RCC_OscConfig+0x534>
 80095dc:	68fb      	ldr	r3, [r7, #12]
 80095de:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80095e2:	687b      	ldr	r3, [r7, #4]
 80095e4:	6a1b      	ldr	r3, [r3, #32]
 80095e6:	429a      	cmp	r2, r3
 80095e8:	d11a      	bne.n	8009620 <HAL_RCC_OscConfig+0x534>
 80095ea:	68fa      	ldr	r2, [r7, #12]
 80095ec:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80095f0:	4013      	ands	r3, r2
 80095f2:	687a      	ldr	r2, [r7, #4]
 80095f4:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80095f6:	0192      	lsls	r2, r2, #6
 80095f8:	4293      	cmp	r3, r2
 80095fa:	d111      	bne.n	8009620 <HAL_RCC_OscConfig+0x534>
 80095fc:	68fb      	ldr	r3, [r7, #12]
 80095fe:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8009602:	687b      	ldr	r3, [r7, #4]
 8009604:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009606:	085b      	lsrs	r3, r3, #1
 8009608:	3b01      	subs	r3, #1
 800960a:	041b      	lsls	r3, r3, #16
 800960c:	429a      	cmp	r2, r3
 800960e:	d107      	bne.n	8009620 <HAL_RCC_OscConfig+0x534>
 8009610:	68fb      	ldr	r3, [r7, #12]
 8009612:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8009616:	687b      	ldr	r3, [r7, #4]
 8009618:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800961a:	061b      	lsls	r3, r3, #24
 800961c:	429a      	cmp	r2, r3
 800961e:	d001      	beq.n	8009624 <HAL_RCC_OscConfig+0x538>
 8009620:	2301      	movs	r3, #1
 8009622:	e000      	b.n	8009626 <HAL_RCC_OscConfig+0x53a>
 8009624:	2300      	movs	r3, #0
 8009626:	4618      	mov	r0, r3
 8009628:	3718      	adds	r7, #24
 800962a:	46bd      	mov	sp, r7
 800962c:	bd80      	pop	{r7, pc}
 800962e:	bf00      	nop
 8009630:	40023800 	.word	0x40023800

08009634 <HAL_RCC_ClockConfig>:
 8009634:	b580      	push	{r7, lr}
 8009636:	b084      	sub	sp, #16
 8009638:	af00      	add	r7, sp, #0
 800963a:	6078      	str	r0, [r7, #4]
 800963c:	6039      	str	r1, [r7, #0]
 800963e:	2300      	movs	r3, #0
 8009640:	60fb      	str	r3, [r7, #12]
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	2b00      	cmp	r3, #0
 8009646:	d101      	bne.n	800964c <HAL_RCC_ClockConfig+0x18>
 8009648:	2301      	movs	r3, #1
 800964a:	e0d0      	b.n	80097ee <HAL_RCC_ClockConfig+0x1ba>
 800964c:	4b6a      	ldr	r3, [pc, #424]	; (80097f8 <HAL_RCC_ClockConfig+0x1c4>)
 800964e:	681b      	ldr	r3, [r3, #0]
 8009650:	f003 030f 	and.w	r3, r3, #15
 8009654:	683a      	ldr	r2, [r7, #0]
 8009656:	429a      	cmp	r2, r3
 8009658:	d910      	bls.n	800967c <HAL_RCC_ClockConfig+0x48>
 800965a:	4b67      	ldr	r3, [pc, #412]	; (80097f8 <HAL_RCC_ClockConfig+0x1c4>)
 800965c:	681b      	ldr	r3, [r3, #0]
 800965e:	f023 020f 	bic.w	r2, r3, #15
 8009662:	4965      	ldr	r1, [pc, #404]	; (80097f8 <HAL_RCC_ClockConfig+0x1c4>)
 8009664:	683b      	ldr	r3, [r7, #0]
 8009666:	4313      	orrs	r3, r2
 8009668:	600b      	str	r3, [r1, #0]
 800966a:	4b63      	ldr	r3, [pc, #396]	; (80097f8 <HAL_RCC_ClockConfig+0x1c4>)
 800966c:	681b      	ldr	r3, [r3, #0]
 800966e:	f003 030f 	and.w	r3, r3, #15
 8009672:	683a      	ldr	r2, [r7, #0]
 8009674:	429a      	cmp	r2, r3
 8009676:	d001      	beq.n	800967c <HAL_RCC_ClockConfig+0x48>
 8009678:	2301      	movs	r3, #1
 800967a:	e0b8      	b.n	80097ee <HAL_RCC_ClockConfig+0x1ba>
 800967c:	687b      	ldr	r3, [r7, #4]
 800967e:	681b      	ldr	r3, [r3, #0]
 8009680:	f003 0302 	and.w	r3, r3, #2
 8009684:	2b00      	cmp	r3, #0
 8009686:	d020      	beq.n	80096ca <HAL_RCC_ClockConfig+0x96>
 8009688:	687b      	ldr	r3, [r7, #4]
 800968a:	681b      	ldr	r3, [r3, #0]
 800968c:	f003 0304 	and.w	r3, r3, #4
 8009690:	2b00      	cmp	r3, #0
 8009692:	d005      	beq.n	80096a0 <HAL_RCC_ClockConfig+0x6c>
 8009694:	4b59      	ldr	r3, [pc, #356]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 8009696:	689b      	ldr	r3, [r3, #8]
 8009698:	4a58      	ldr	r2, [pc, #352]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 800969a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800969e:	6093      	str	r3, [r2, #8]
 80096a0:	687b      	ldr	r3, [r7, #4]
 80096a2:	681b      	ldr	r3, [r3, #0]
 80096a4:	f003 0308 	and.w	r3, r3, #8
 80096a8:	2b00      	cmp	r3, #0
 80096aa:	d005      	beq.n	80096b8 <HAL_RCC_ClockConfig+0x84>
 80096ac:	4b53      	ldr	r3, [pc, #332]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80096ae:	689b      	ldr	r3, [r3, #8]
 80096b0:	4a52      	ldr	r2, [pc, #328]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80096b2:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80096b6:	6093      	str	r3, [r2, #8]
 80096b8:	4b50      	ldr	r3, [pc, #320]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80096ba:	689b      	ldr	r3, [r3, #8]
 80096bc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	689b      	ldr	r3, [r3, #8]
 80096c4:	494d      	ldr	r1, [pc, #308]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80096c6:	4313      	orrs	r3, r2
 80096c8:	608b      	str	r3, [r1, #8]
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	681b      	ldr	r3, [r3, #0]
 80096ce:	f003 0301 	and.w	r3, r3, #1
 80096d2:	2b00      	cmp	r3, #0
 80096d4:	d040      	beq.n	8009758 <HAL_RCC_ClockConfig+0x124>
 80096d6:	687b      	ldr	r3, [r7, #4]
 80096d8:	685b      	ldr	r3, [r3, #4]
 80096da:	2b01      	cmp	r3, #1
 80096dc:	d107      	bne.n	80096ee <HAL_RCC_ClockConfig+0xba>
 80096de:	4b47      	ldr	r3, [pc, #284]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80096e0:	681b      	ldr	r3, [r3, #0]
 80096e2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80096e6:	2b00      	cmp	r3, #0
 80096e8:	d115      	bne.n	8009716 <HAL_RCC_ClockConfig+0xe2>
 80096ea:	2301      	movs	r3, #1
 80096ec:	e07f      	b.n	80097ee <HAL_RCC_ClockConfig+0x1ba>
 80096ee:	687b      	ldr	r3, [r7, #4]
 80096f0:	685b      	ldr	r3, [r3, #4]
 80096f2:	2b02      	cmp	r3, #2
 80096f4:	d107      	bne.n	8009706 <HAL_RCC_ClockConfig+0xd2>
 80096f6:	4b41      	ldr	r3, [pc, #260]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80096f8:	681b      	ldr	r3, [r3, #0]
 80096fa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80096fe:	2b00      	cmp	r3, #0
 8009700:	d109      	bne.n	8009716 <HAL_RCC_ClockConfig+0xe2>
 8009702:	2301      	movs	r3, #1
 8009704:	e073      	b.n	80097ee <HAL_RCC_ClockConfig+0x1ba>
 8009706:	4b3d      	ldr	r3, [pc, #244]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 8009708:	681b      	ldr	r3, [r3, #0]
 800970a:	f003 0302 	and.w	r3, r3, #2
 800970e:	2b00      	cmp	r3, #0
 8009710:	d101      	bne.n	8009716 <HAL_RCC_ClockConfig+0xe2>
 8009712:	2301      	movs	r3, #1
 8009714:	e06b      	b.n	80097ee <HAL_RCC_ClockConfig+0x1ba>
 8009716:	4b39      	ldr	r3, [pc, #228]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 8009718:	689b      	ldr	r3, [r3, #8]
 800971a:	f023 0203 	bic.w	r2, r3, #3
 800971e:	687b      	ldr	r3, [r7, #4]
 8009720:	685b      	ldr	r3, [r3, #4]
 8009722:	4936      	ldr	r1, [pc, #216]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 8009724:	4313      	orrs	r3, r2
 8009726:	608b      	str	r3, [r1, #8]
 8009728:	f7fc fe38 	bl	800639c <HAL_GetTick>
 800972c:	60f8      	str	r0, [r7, #12]
 800972e:	e00a      	b.n	8009746 <HAL_RCC_ClockConfig+0x112>
 8009730:	f7fc fe34 	bl	800639c <HAL_GetTick>
 8009734:	4602      	mov	r2, r0
 8009736:	68fb      	ldr	r3, [r7, #12]
 8009738:	1ad3      	subs	r3, r2, r3
 800973a:	f241 3288 	movw	r2, #5000	; 0x1388
 800973e:	4293      	cmp	r3, r2
 8009740:	d901      	bls.n	8009746 <HAL_RCC_ClockConfig+0x112>
 8009742:	2303      	movs	r3, #3
 8009744:	e053      	b.n	80097ee <HAL_RCC_ClockConfig+0x1ba>
 8009746:	4b2d      	ldr	r3, [pc, #180]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 8009748:	689b      	ldr	r3, [r3, #8]
 800974a:	f003 020c 	and.w	r2, r3, #12
 800974e:	687b      	ldr	r3, [r7, #4]
 8009750:	685b      	ldr	r3, [r3, #4]
 8009752:	009b      	lsls	r3, r3, #2
 8009754:	429a      	cmp	r2, r3
 8009756:	d1eb      	bne.n	8009730 <HAL_RCC_ClockConfig+0xfc>
 8009758:	4b27      	ldr	r3, [pc, #156]	; (80097f8 <HAL_RCC_ClockConfig+0x1c4>)
 800975a:	681b      	ldr	r3, [r3, #0]
 800975c:	f003 030f 	and.w	r3, r3, #15
 8009760:	683a      	ldr	r2, [r7, #0]
 8009762:	429a      	cmp	r2, r3
 8009764:	d210      	bcs.n	8009788 <HAL_RCC_ClockConfig+0x154>
 8009766:	4b24      	ldr	r3, [pc, #144]	; (80097f8 <HAL_RCC_ClockConfig+0x1c4>)
 8009768:	681b      	ldr	r3, [r3, #0]
 800976a:	f023 020f 	bic.w	r2, r3, #15
 800976e:	4922      	ldr	r1, [pc, #136]	; (80097f8 <HAL_RCC_ClockConfig+0x1c4>)
 8009770:	683b      	ldr	r3, [r7, #0]
 8009772:	4313      	orrs	r3, r2
 8009774:	600b      	str	r3, [r1, #0]
 8009776:	4b20      	ldr	r3, [pc, #128]	; (80097f8 <HAL_RCC_ClockConfig+0x1c4>)
 8009778:	681b      	ldr	r3, [r3, #0]
 800977a:	f003 030f 	and.w	r3, r3, #15
 800977e:	683a      	ldr	r2, [r7, #0]
 8009780:	429a      	cmp	r2, r3
 8009782:	d001      	beq.n	8009788 <HAL_RCC_ClockConfig+0x154>
 8009784:	2301      	movs	r3, #1
 8009786:	e032      	b.n	80097ee <HAL_RCC_ClockConfig+0x1ba>
 8009788:	687b      	ldr	r3, [r7, #4]
 800978a:	681b      	ldr	r3, [r3, #0]
 800978c:	f003 0304 	and.w	r3, r3, #4
 8009790:	2b00      	cmp	r3, #0
 8009792:	d008      	beq.n	80097a6 <HAL_RCC_ClockConfig+0x172>
 8009794:	4b19      	ldr	r3, [pc, #100]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 8009796:	689b      	ldr	r3, [r3, #8]
 8009798:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	68db      	ldr	r3, [r3, #12]
 80097a0:	4916      	ldr	r1, [pc, #88]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80097a2:	4313      	orrs	r3, r2
 80097a4:	608b      	str	r3, [r1, #8]
 80097a6:	687b      	ldr	r3, [r7, #4]
 80097a8:	681b      	ldr	r3, [r3, #0]
 80097aa:	f003 0308 	and.w	r3, r3, #8
 80097ae:	2b00      	cmp	r3, #0
 80097b0:	d009      	beq.n	80097c6 <HAL_RCC_ClockConfig+0x192>
 80097b2:	4b12      	ldr	r3, [pc, #72]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80097b4:	689b      	ldr	r3, [r3, #8]
 80097b6:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80097ba:	687b      	ldr	r3, [r7, #4]
 80097bc:	691b      	ldr	r3, [r3, #16]
 80097be:	00db      	lsls	r3, r3, #3
 80097c0:	490e      	ldr	r1, [pc, #56]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80097c2:	4313      	orrs	r3, r2
 80097c4:	608b      	str	r3, [r1, #8]
 80097c6:	f000 f821 	bl	800980c <HAL_RCC_GetSysClockFreq>
 80097ca:	4601      	mov	r1, r0
 80097cc:	4b0b      	ldr	r3, [pc, #44]	; (80097fc <HAL_RCC_ClockConfig+0x1c8>)
 80097ce:	689b      	ldr	r3, [r3, #8]
 80097d0:	091b      	lsrs	r3, r3, #4
 80097d2:	f003 030f 	and.w	r3, r3, #15
 80097d6:	4a0a      	ldr	r2, [pc, #40]	; (8009800 <HAL_RCC_ClockConfig+0x1cc>)
 80097d8:	5cd3      	ldrb	r3, [r2, r3]
 80097da:	fa21 f303 	lsr.w	r3, r1, r3
 80097de:	4a09      	ldr	r2, [pc, #36]	; (8009804 <HAL_RCC_ClockConfig+0x1d0>)
 80097e0:	6013      	str	r3, [r2, #0]
 80097e2:	4b09      	ldr	r3, [pc, #36]	; (8009808 <HAL_RCC_ClockConfig+0x1d4>)
 80097e4:	681b      	ldr	r3, [r3, #0]
 80097e6:	4618      	mov	r0, r3
 80097e8:	f7fc fc9e 	bl	8006128 <HAL_InitTick>
 80097ec:	2300      	movs	r3, #0
 80097ee:	4618      	mov	r0, r3
 80097f0:	3710      	adds	r7, #16
 80097f2:	46bd      	mov	sp, r7
 80097f4:	bd80      	pop	{r7, pc}
 80097f6:	bf00      	nop
 80097f8:	40023c00 	.word	0x40023c00
 80097fc:	40023800 	.word	0x40023800
 8009800:	08011d90 	.word	0x08011d90
 8009804:	200013b4 	.word	0x200013b4
 8009808:	200013b8 	.word	0x200013b8

0800980c <HAL_RCC_GetSysClockFreq>:
 800980c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800980e:	b085      	sub	sp, #20
 8009810:	af00      	add	r7, sp, #0
 8009812:	2300      	movs	r3, #0
 8009814:	607b      	str	r3, [r7, #4]
 8009816:	2300      	movs	r3, #0
 8009818:	60fb      	str	r3, [r7, #12]
 800981a:	2300      	movs	r3, #0
 800981c:	603b      	str	r3, [r7, #0]
 800981e:	2300      	movs	r3, #0
 8009820:	60bb      	str	r3, [r7, #8]
 8009822:	4b50      	ldr	r3, [pc, #320]	; (8009964 <HAL_RCC_GetSysClockFreq+0x158>)
 8009824:	689b      	ldr	r3, [r3, #8]
 8009826:	f003 030c 	and.w	r3, r3, #12
 800982a:	2b04      	cmp	r3, #4
 800982c:	d007      	beq.n	800983e <HAL_RCC_GetSysClockFreq+0x32>
 800982e:	2b08      	cmp	r3, #8
 8009830:	d008      	beq.n	8009844 <HAL_RCC_GetSysClockFreq+0x38>
 8009832:	2b00      	cmp	r3, #0
 8009834:	f040 808d 	bne.w	8009952 <HAL_RCC_GetSysClockFreq+0x146>
 8009838:	4b4b      	ldr	r3, [pc, #300]	; (8009968 <HAL_RCC_GetSysClockFreq+0x15c>)
 800983a:	60bb      	str	r3, [r7, #8]
 800983c:	e08c      	b.n	8009958 <HAL_RCC_GetSysClockFreq+0x14c>
 800983e:	4b4b      	ldr	r3, [pc, #300]	; (800996c <HAL_RCC_GetSysClockFreq+0x160>)
 8009840:	60bb      	str	r3, [r7, #8]
 8009842:	e089      	b.n	8009958 <HAL_RCC_GetSysClockFreq+0x14c>
 8009844:	4b47      	ldr	r3, [pc, #284]	; (8009964 <HAL_RCC_GetSysClockFreq+0x158>)
 8009846:	685b      	ldr	r3, [r3, #4]
 8009848:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800984c:	607b      	str	r3, [r7, #4]
 800984e:	4b45      	ldr	r3, [pc, #276]	; (8009964 <HAL_RCC_GetSysClockFreq+0x158>)
 8009850:	685b      	ldr	r3, [r3, #4]
 8009852:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009856:	2b00      	cmp	r3, #0
 8009858:	d023      	beq.n	80098a2 <HAL_RCC_GetSysClockFreq+0x96>
 800985a:	4b42      	ldr	r3, [pc, #264]	; (8009964 <HAL_RCC_GetSysClockFreq+0x158>)
 800985c:	685b      	ldr	r3, [r3, #4]
 800985e:	099b      	lsrs	r3, r3, #6
 8009860:	f04f 0400 	mov.w	r4, #0
 8009864:	f240 11ff 	movw	r1, #511	; 0x1ff
 8009868:	f04f 0200 	mov.w	r2, #0
 800986c:	ea03 0501 	and.w	r5, r3, r1
 8009870:	ea04 0602 	and.w	r6, r4, r2
 8009874:	4a3d      	ldr	r2, [pc, #244]	; (800996c <HAL_RCC_GetSysClockFreq+0x160>)
 8009876:	fb02 f106 	mul.w	r1, r2, r6
 800987a:	2200      	movs	r2, #0
 800987c:	fb02 f205 	mul.w	r2, r2, r5
 8009880:	440a      	add	r2, r1
 8009882:	493a      	ldr	r1, [pc, #232]	; (800996c <HAL_RCC_GetSysClockFreq+0x160>)
 8009884:	fba5 0101 	umull	r0, r1, r5, r1
 8009888:	1853      	adds	r3, r2, r1
 800988a:	4619      	mov	r1, r3
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	f04f 0400 	mov.w	r4, #0
 8009892:	461a      	mov	r2, r3
 8009894:	4623      	mov	r3, r4
 8009896:	f7f6 fd0b 	bl	80002b0 <__aeabi_uldivmod>
 800989a:	4603      	mov	r3, r0
 800989c:	460c      	mov	r4, r1
 800989e:	60fb      	str	r3, [r7, #12]
 80098a0:	e049      	b.n	8009936 <HAL_RCC_GetSysClockFreq+0x12a>
 80098a2:	4b30      	ldr	r3, [pc, #192]	; (8009964 <HAL_RCC_GetSysClockFreq+0x158>)
 80098a4:	685b      	ldr	r3, [r3, #4]
 80098a6:	099b      	lsrs	r3, r3, #6
 80098a8:	f04f 0400 	mov.w	r4, #0
 80098ac:	f240 11ff 	movw	r1, #511	; 0x1ff
 80098b0:	f04f 0200 	mov.w	r2, #0
 80098b4:	ea03 0501 	and.w	r5, r3, r1
 80098b8:	ea04 0602 	and.w	r6, r4, r2
 80098bc:	4629      	mov	r1, r5
 80098be:	4632      	mov	r2, r6
 80098c0:	f04f 0300 	mov.w	r3, #0
 80098c4:	f04f 0400 	mov.w	r4, #0
 80098c8:	0154      	lsls	r4, r2, #5
 80098ca:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80098ce:	014b      	lsls	r3, r1, #5
 80098d0:	4619      	mov	r1, r3
 80098d2:	4622      	mov	r2, r4
 80098d4:	1b49      	subs	r1, r1, r5
 80098d6:	eb62 0206 	sbc.w	r2, r2, r6
 80098da:	f04f 0300 	mov.w	r3, #0
 80098de:	f04f 0400 	mov.w	r4, #0
 80098e2:	0194      	lsls	r4, r2, #6
 80098e4:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 80098e8:	018b      	lsls	r3, r1, #6
 80098ea:	1a5b      	subs	r3, r3, r1
 80098ec:	eb64 0402 	sbc.w	r4, r4, r2
 80098f0:	f04f 0100 	mov.w	r1, #0
 80098f4:	f04f 0200 	mov.w	r2, #0
 80098f8:	00e2      	lsls	r2, r4, #3
 80098fa:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 80098fe:	00d9      	lsls	r1, r3, #3
 8009900:	460b      	mov	r3, r1
 8009902:	4614      	mov	r4, r2
 8009904:	195b      	adds	r3, r3, r5
 8009906:	eb44 0406 	adc.w	r4, r4, r6
 800990a:	f04f 0100 	mov.w	r1, #0
 800990e:	f04f 0200 	mov.w	r2, #0
 8009912:	02a2      	lsls	r2, r4, #10
 8009914:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8009918:	0299      	lsls	r1, r3, #10
 800991a:	460b      	mov	r3, r1
 800991c:	4614      	mov	r4, r2
 800991e:	4618      	mov	r0, r3
 8009920:	4621      	mov	r1, r4
 8009922:	687b      	ldr	r3, [r7, #4]
 8009924:	f04f 0400 	mov.w	r4, #0
 8009928:	461a      	mov	r2, r3
 800992a:	4623      	mov	r3, r4
 800992c:	f7f6 fcc0 	bl	80002b0 <__aeabi_uldivmod>
 8009930:	4603      	mov	r3, r0
 8009932:	460c      	mov	r4, r1
 8009934:	60fb      	str	r3, [r7, #12]
 8009936:	4b0b      	ldr	r3, [pc, #44]	; (8009964 <HAL_RCC_GetSysClockFreq+0x158>)
 8009938:	685b      	ldr	r3, [r3, #4]
 800993a:	0c1b      	lsrs	r3, r3, #16
 800993c:	f003 0303 	and.w	r3, r3, #3
 8009940:	3301      	adds	r3, #1
 8009942:	005b      	lsls	r3, r3, #1
 8009944:	603b      	str	r3, [r7, #0]
 8009946:	68fa      	ldr	r2, [r7, #12]
 8009948:	683b      	ldr	r3, [r7, #0]
 800994a:	fbb2 f3f3 	udiv	r3, r2, r3
 800994e:	60bb      	str	r3, [r7, #8]
 8009950:	e002      	b.n	8009958 <HAL_RCC_GetSysClockFreq+0x14c>
 8009952:	4b05      	ldr	r3, [pc, #20]	; (8009968 <HAL_RCC_GetSysClockFreq+0x15c>)
 8009954:	60bb      	str	r3, [r7, #8]
 8009956:	bf00      	nop
 8009958:	68bb      	ldr	r3, [r7, #8]
 800995a:	4618      	mov	r0, r3
 800995c:	3714      	adds	r7, #20
 800995e:	46bd      	mov	sp, r7
 8009960:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009962:	bf00      	nop
 8009964:	40023800 	.word	0x40023800
 8009968:	00f42400 	.word	0x00f42400
 800996c:	017d7840 	.word	0x017d7840

08009970 <HAL_RCC_GetHCLKFreq>:
 8009970:	b480      	push	{r7}
 8009972:	af00      	add	r7, sp, #0
 8009974:	4b03      	ldr	r3, [pc, #12]	; (8009984 <HAL_RCC_GetHCLKFreq+0x14>)
 8009976:	681b      	ldr	r3, [r3, #0]
 8009978:	4618      	mov	r0, r3
 800997a:	46bd      	mov	sp, r7
 800997c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009980:	4770      	bx	lr
 8009982:	bf00      	nop
 8009984:	200013b4 	.word	0x200013b4

08009988 <HAL_RCC_GetPCLK1Freq>:
 8009988:	b580      	push	{r7, lr}
 800998a:	af00      	add	r7, sp, #0
 800998c:	f7ff fff0 	bl	8009970 <HAL_RCC_GetHCLKFreq>
 8009990:	4601      	mov	r1, r0
 8009992:	4b05      	ldr	r3, [pc, #20]	; (80099a8 <HAL_RCC_GetPCLK1Freq+0x20>)
 8009994:	689b      	ldr	r3, [r3, #8]
 8009996:	0a9b      	lsrs	r3, r3, #10
 8009998:	f003 0307 	and.w	r3, r3, #7
 800999c:	4a03      	ldr	r2, [pc, #12]	; (80099ac <HAL_RCC_GetPCLK1Freq+0x24>)
 800999e:	5cd3      	ldrb	r3, [r2, r3]
 80099a0:	fa21 f303 	lsr.w	r3, r1, r3
 80099a4:	4618      	mov	r0, r3
 80099a6:	bd80      	pop	{r7, pc}
 80099a8:	40023800 	.word	0x40023800
 80099ac:	08011da0 	.word	0x08011da0

080099b0 <HAL_RCC_GetPCLK2Freq>:
 80099b0:	b580      	push	{r7, lr}
 80099b2:	af00      	add	r7, sp, #0
 80099b4:	f7ff ffdc 	bl	8009970 <HAL_RCC_GetHCLKFreq>
 80099b8:	4601      	mov	r1, r0
 80099ba:	4b05      	ldr	r3, [pc, #20]	; (80099d0 <HAL_RCC_GetPCLK2Freq+0x20>)
 80099bc:	689b      	ldr	r3, [r3, #8]
 80099be:	0b5b      	lsrs	r3, r3, #13
 80099c0:	f003 0307 	and.w	r3, r3, #7
 80099c4:	4a03      	ldr	r2, [pc, #12]	; (80099d4 <HAL_RCC_GetPCLK2Freq+0x24>)
 80099c6:	5cd3      	ldrb	r3, [r2, r3]
 80099c8:	fa21 f303 	lsr.w	r3, r1, r3
 80099cc:	4618      	mov	r0, r3
 80099ce:	bd80      	pop	{r7, pc}
 80099d0:	40023800 	.word	0x40023800
 80099d4:	08011da0 	.word	0x08011da0

080099d8 <HAL_RCC_GetClockConfig>:
 80099d8:	b480      	push	{r7}
 80099da:	b083      	sub	sp, #12
 80099dc:	af00      	add	r7, sp, #0
 80099de:	6078      	str	r0, [r7, #4]
 80099e0:	6039      	str	r1, [r7, #0]
 80099e2:	687b      	ldr	r3, [r7, #4]
 80099e4:	220f      	movs	r2, #15
 80099e6:	601a      	str	r2, [r3, #0]
 80099e8:	4b12      	ldr	r3, [pc, #72]	; (8009a34 <HAL_RCC_GetClockConfig+0x5c>)
 80099ea:	689b      	ldr	r3, [r3, #8]
 80099ec:	f003 0203 	and.w	r2, r3, #3
 80099f0:	687b      	ldr	r3, [r7, #4]
 80099f2:	605a      	str	r2, [r3, #4]
 80099f4:	4b0f      	ldr	r3, [pc, #60]	; (8009a34 <HAL_RCC_GetClockConfig+0x5c>)
 80099f6:	689b      	ldr	r3, [r3, #8]
 80099f8:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80099fc:	687b      	ldr	r3, [r7, #4]
 80099fe:	609a      	str	r2, [r3, #8]
 8009a00:	4b0c      	ldr	r3, [pc, #48]	; (8009a34 <HAL_RCC_GetClockConfig+0x5c>)
 8009a02:	689b      	ldr	r3, [r3, #8]
 8009a04:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8009a08:	687b      	ldr	r3, [r7, #4]
 8009a0a:	60da      	str	r2, [r3, #12]
 8009a0c:	4b09      	ldr	r3, [pc, #36]	; (8009a34 <HAL_RCC_GetClockConfig+0x5c>)
 8009a0e:	689b      	ldr	r3, [r3, #8]
 8009a10:	08db      	lsrs	r3, r3, #3
 8009a12:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8009a16:	687b      	ldr	r3, [r7, #4]
 8009a18:	611a      	str	r2, [r3, #16]
 8009a1a:	4b07      	ldr	r3, [pc, #28]	; (8009a38 <HAL_RCC_GetClockConfig+0x60>)
 8009a1c:	681b      	ldr	r3, [r3, #0]
 8009a1e:	f003 020f 	and.w	r2, r3, #15
 8009a22:	683b      	ldr	r3, [r7, #0]
 8009a24:	601a      	str	r2, [r3, #0]
 8009a26:	bf00      	nop
 8009a28:	370c      	adds	r7, #12
 8009a2a:	46bd      	mov	sp, r7
 8009a2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a30:	4770      	bx	lr
 8009a32:	bf00      	nop
 8009a34:	40023800 	.word	0x40023800
 8009a38:	40023c00 	.word	0x40023c00

08009a3c <HAL_RCCEx_PeriphCLKConfig>:
 8009a3c:	b580      	push	{r7, lr}
 8009a3e:	b088      	sub	sp, #32
 8009a40:	af00      	add	r7, sp, #0
 8009a42:	6078      	str	r0, [r7, #4]
 8009a44:	2300      	movs	r3, #0
 8009a46:	617b      	str	r3, [r7, #20]
 8009a48:	2300      	movs	r3, #0
 8009a4a:	613b      	str	r3, [r7, #16]
 8009a4c:	2300      	movs	r3, #0
 8009a4e:	60fb      	str	r3, [r7, #12]
 8009a50:	2300      	movs	r3, #0
 8009a52:	61fb      	str	r3, [r7, #28]
 8009a54:	2300      	movs	r3, #0
 8009a56:	61bb      	str	r3, [r7, #24]
 8009a58:	687b      	ldr	r3, [r7, #4]
 8009a5a:	681b      	ldr	r3, [r3, #0]
 8009a5c:	f003 0301 	and.w	r3, r3, #1
 8009a60:	2b00      	cmp	r3, #0
 8009a62:	d012      	beq.n	8009a8a <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8009a64:	4b69      	ldr	r3, [pc, #420]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009a66:	689b      	ldr	r3, [r3, #8]
 8009a68:	4a68      	ldr	r2, [pc, #416]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009a6a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8009a6e:	6093      	str	r3, [r2, #8]
 8009a70:	4b66      	ldr	r3, [pc, #408]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009a72:	689a      	ldr	r2, [r3, #8]
 8009a74:	687b      	ldr	r3, [r7, #4]
 8009a76:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009a78:	4964      	ldr	r1, [pc, #400]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009a7a:	4313      	orrs	r3, r2
 8009a7c:	608b      	str	r3, [r1, #8]
 8009a7e:	687b      	ldr	r3, [r7, #4]
 8009a80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009a82:	2b00      	cmp	r3, #0
 8009a84:	d101      	bne.n	8009a8a <HAL_RCCEx_PeriphCLKConfig+0x4e>
 8009a86:	2301      	movs	r3, #1
 8009a88:	61fb      	str	r3, [r7, #28]
 8009a8a:	687b      	ldr	r3, [r7, #4]
 8009a8c:	681b      	ldr	r3, [r3, #0]
 8009a8e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8009a92:	2b00      	cmp	r3, #0
 8009a94:	d017      	beq.n	8009ac6 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8009a96:	4b5d      	ldr	r3, [pc, #372]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009a98:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009a9c:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8009aa0:	687b      	ldr	r3, [r7, #4]
 8009aa2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009aa4:	4959      	ldr	r1, [pc, #356]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009aa6:	4313      	orrs	r3, r2
 8009aa8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009aac:	687b      	ldr	r3, [r7, #4]
 8009aae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009ab0:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009ab4:	d101      	bne.n	8009aba <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8009ab6:	2301      	movs	r3, #1
 8009ab8:	61fb      	str	r3, [r7, #28]
 8009aba:	687b      	ldr	r3, [r7, #4]
 8009abc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009abe:	2b00      	cmp	r3, #0
 8009ac0:	d101      	bne.n	8009ac6 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 8009ac2:	2301      	movs	r3, #1
 8009ac4:	61bb      	str	r3, [r7, #24]
 8009ac6:	687b      	ldr	r3, [r7, #4]
 8009ac8:	681b      	ldr	r3, [r3, #0]
 8009aca:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009ace:	2b00      	cmp	r3, #0
 8009ad0:	d017      	beq.n	8009b02 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8009ad2:	4b4e      	ldr	r3, [pc, #312]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009ad4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009ad8:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8009adc:	687b      	ldr	r3, [r7, #4]
 8009ade:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009ae0:	494a      	ldr	r1, [pc, #296]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009ae2:	4313      	orrs	r3, r2
 8009ae4:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009ae8:	687b      	ldr	r3, [r7, #4]
 8009aea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009aec:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009af0:	d101      	bne.n	8009af6 <HAL_RCCEx_PeriphCLKConfig+0xba>
 8009af2:	2301      	movs	r3, #1
 8009af4:	61fb      	str	r3, [r7, #28]
 8009af6:	687b      	ldr	r3, [r7, #4]
 8009af8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009afa:	2b00      	cmp	r3, #0
 8009afc:	d101      	bne.n	8009b02 <HAL_RCCEx_PeriphCLKConfig+0xc6>
 8009afe:	2301      	movs	r3, #1
 8009b00:	61bb      	str	r3, [r7, #24]
 8009b02:	687b      	ldr	r3, [r7, #4]
 8009b04:	681b      	ldr	r3, [r3, #0]
 8009b06:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8009b0a:	2b00      	cmp	r3, #0
 8009b0c:	d001      	beq.n	8009b12 <HAL_RCCEx_PeriphCLKConfig+0xd6>
 8009b0e:	2301      	movs	r3, #1
 8009b10:	61fb      	str	r3, [r7, #28]
 8009b12:	687b      	ldr	r3, [r7, #4]
 8009b14:	681b      	ldr	r3, [r3, #0]
 8009b16:	f003 0320 	and.w	r3, r3, #32
 8009b1a:	2b00      	cmp	r3, #0
 8009b1c:	f000 808b 	beq.w	8009c36 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8009b20:	4b3a      	ldr	r3, [pc, #232]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b24:	4a39      	ldr	r2, [pc, #228]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b26:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009b2a:	6413      	str	r3, [r2, #64]	; 0x40
 8009b2c:	4b37      	ldr	r3, [pc, #220]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b30:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009b34:	60bb      	str	r3, [r7, #8]
 8009b36:	68bb      	ldr	r3, [r7, #8]
 8009b38:	4b35      	ldr	r3, [pc, #212]	; (8009c10 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8009b3a:	681b      	ldr	r3, [r3, #0]
 8009b3c:	4a34      	ldr	r2, [pc, #208]	; (8009c10 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8009b3e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009b42:	6013      	str	r3, [r2, #0]
 8009b44:	f7fc fc2a 	bl	800639c <HAL_GetTick>
 8009b48:	6178      	str	r0, [r7, #20]
 8009b4a:	e008      	b.n	8009b5e <HAL_RCCEx_PeriphCLKConfig+0x122>
 8009b4c:	f7fc fc26 	bl	800639c <HAL_GetTick>
 8009b50:	4602      	mov	r2, r0
 8009b52:	697b      	ldr	r3, [r7, #20]
 8009b54:	1ad3      	subs	r3, r2, r3
 8009b56:	2b64      	cmp	r3, #100	; 0x64
 8009b58:	d901      	bls.n	8009b5e <HAL_RCCEx_PeriphCLKConfig+0x122>
 8009b5a:	2303      	movs	r3, #3
 8009b5c:	e355      	b.n	800a20a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 8009b5e:	4b2c      	ldr	r3, [pc, #176]	; (8009c10 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8009b60:	681b      	ldr	r3, [r3, #0]
 8009b62:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009b66:	2b00      	cmp	r3, #0
 8009b68:	d0f0      	beq.n	8009b4c <HAL_RCCEx_PeriphCLKConfig+0x110>
 8009b6a:	4b28      	ldr	r3, [pc, #160]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b6c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009b6e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009b72:	613b      	str	r3, [r7, #16]
 8009b74:	693b      	ldr	r3, [r7, #16]
 8009b76:	2b00      	cmp	r3, #0
 8009b78:	d035      	beq.n	8009be6 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8009b7a:	687b      	ldr	r3, [r7, #4]
 8009b7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b7e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009b82:	693a      	ldr	r2, [r7, #16]
 8009b84:	429a      	cmp	r2, r3
 8009b86:	d02e      	beq.n	8009be6 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8009b88:	4b20      	ldr	r3, [pc, #128]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b8a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009b8c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009b90:	613b      	str	r3, [r7, #16]
 8009b92:	4b1e      	ldr	r3, [pc, #120]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b94:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009b96:	4a1d      	ldr	r2, [pc, #116]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009b98:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009b9c:	6713      	str	r3, [r2, #112]	; 0x70
 8009b9e:	4b1b      	ldr	r3, [pc, #108]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009ba0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009ba2:	4a1a      	ldr	r2, [pc, #104]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009ba4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009ba8:	6713      	str	r3, [r2, #112]	; 0x70
 8009baa:	4a18      	ldr	r2, [pc, #96]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bac:	693b      	ldr	r3, [r7, #16]
 8009bae:	6713      	str	r3, [r2, #112]	; 0x70
 8009bb0:	4b16      	ldr	r3, [pc, #88]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bb2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009bb4:	f003 0301 	and.w	r3, r3, #1
 8009bb8:	2b01      	cmp	r3, #1
 8009bba:	d114      	bne.n	8009be6 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8009bbc:	f7fc fbee 	bl	800639c <HAL_GetTick>
 8009bc0:	6178      	str	r0, [r7, #20]
 8009bc2:	e00a      	b.n	8009bda <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8009bc4:	f7fc fbea 	bl	800639c <HAL_GetTick>
 8009bc8:	4602      	mov	r2, r0
 8009bca:	697b      	ldr	r3, [r7, #20]
 8009bcc:	1ad3      	subs	r3, r2, r3
 8009bce:	f241 3288 	movw	r2, #5000	; 0x1388
 8009bd2:	4293      	cmp	r3, r2
 8009bd4:	d901      	bls.n	8009bda <HAL_RCCEx_PeriphCLKConfig+0x19e>
 8009bd6:	2303      	movs	r3, #3
 8009bd8:	e317      	b.n	800a20a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 8009bda:	4b0c      	ldr	r3, [pc, #48]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bdc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009bde:	f003 0302 	and.w	r3, r3, #2
 8009be2:	2b00      	cmp	r3, #0
 8009be4:	d0ee      	beq.n	8009bc4 <HAL_RCCEx_PeriphCLKConfig+0x188>
 8009be6:	687b      	ldr	r3, [r7, #4]
 8009be8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009bea:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009bee:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009bf2:	d111      	bne.n	8009c18 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8009bf4:	4b05      	ldr	r3, [pc, #20]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009bf6:	689b      	ldr	r3, [r3, #8]
 8009bf8:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8009bfc:	687b      	ldr	r3, [r7, #4]
 8009bfe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8009c00:	4b04      	ldr	r3, [pc, #16]	; (8009c14 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8009c02:	400b      	ands	r3, r1
 8009c04:	4901      	ldr	r1, [pc, #4]	; (8009c0c <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8009c06:	4313      	orrs	r3, r2
 8009c08:	608b      	str	r3, [r1, #8]
 8009c0a:	e00b      	b.n	8009c24 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8009c0c:	40023800 	.word	0x40023800
 8009c10:	40007000 	.word	0x40007000
 8009c14:	0ffffcff 	.word	0x0ffffcff
 8009c18:	4bb0      	ldr	r3, [pc, #704]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c1a:	689b      	ldr	r3, [r3, #8]
 8009c1c:	4aaf      	ldr	r2, [pc, #700]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c1e:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8009c22:	6093      	str	r3, [r2, #8]
 8009c24:	4bad      	ldr	r3, [pc, #692]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c26:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8009c28:	687b      	ldr	r3, [r7, #4]
 8009c2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009c2c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009c30:	49aa      	ldr	r1, [pc, #680]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c32:	4313      	orrs	r3, r2
 8009c34:	670b      	str	r3, [r1, #112]	; 0x70
 8009c36:	687b      	ldr	r3, [r7, #4]
 8009c38:	681b      	ldr	r3, [r3, #0]
 8009c3a:	f003 0310 	and.w	r3, r3, #16
 8009c3e:	2b00      	cmp	r3, #0
 8009c40:	d010      	beq.n	8009c64 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8009c42:	4ba6      	ldr	r3, [pc, #664]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c44:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009c48:	4aa4      	ldr	r2, [pc, #656]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c4a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8009c4e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8009c52:	4ba2      	ldr	r3, [pc, #648]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c54:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8009c58:	687b      	ldr	r3, [r7, #4]
 8009c5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009c5c:	499f      	ldr	r1, [pc, #636]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c5e:	4313      	orrs	r3, r2
 8009c60:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009c64:	687b      	ldr	r3, [r7, #4]
 8009c66:	681b      	ldr	r3, [r3, #0]
 8009c68:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009c6c:	2b00      	cmp	r3, #0
 8009c6e:	d00a      	beq.n	8009c86 <HAL_RCCEx_PeriphCLKConfig+0x24a>
 8009c70:	4b9a      	ldr	r3, [pc, #616]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c72:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009c76:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8009c7a:	687b      	ldr	r3, [r7, #4]
 8009c7c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009c7e:	4997      	ldr	r1, [pc, #604]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c80:	4313      	orrs	r3, r2
 8009c82:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009c86:	687b      	ldr	r3, [r7, #4]
 8009c88:	681b      	ldr	r3, [r3, #0]
 8009c8a:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8009c8e:	2b00      	cmp	r3, #0
 8009c90:	d00a      	beq.n	8009ca8 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8009c92:	4b92      	ldr	r3, [pc, #584]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009c94:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009c98:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8009c9c:	687b      	ldr	r3, [r7, #4]
 8009c9e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8009ca0:	498e      	ldr	r1, [pc, #568]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009ca2:	4313      	orrs	r3, r2
 8009ca4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009ca8:	687b      	ldr	r3, [r7, #4]
 8009caa:	681b      	ldr	r3, [r3, #0]
 8009cac:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8009cb0:	2b00      	cmp	r3, #0
 8009cb2:	d00a      	beq.n	8009cca <HAL_RCCEx_PeriphCLKConfig+0x28e>
 8009cb4:	4b89      	ldr	r3, [pc, #548]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009cb6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009cba:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8009cbe:	687b      	ldr	r3, [r7, #4]
 8009cc0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009cc2:	4986      	ldr	r1, [pc, #536]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009cc4:	4313      	orrs	r3, r2
 8009cc6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009cca:	687b      	ldr	r3, [r7, #4]
 8009ccc:	681b      	ldr	r3, [r3, #0]
 8009cce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009cd2:	2b00      	cmp	r3, #0
 8009cd4:	d00a      	beq.n	8009cec <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8009cd6:	4b81      	ldr	r3, [pc, #516]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009cd8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009cdc:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8009ce0:	687b      	ldr	r3, [r7, #4]
 8009ce2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009ce4:	497d      	ldr	r1, [pc, #500]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009ce6:	4313      	orrs	r3, r2
 8009ce8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009cec:	687b      	ldr	r3, [r7, #4]
 8009cee:	681b      	ldr	r3, [r3, #0]
 8009cf0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009cf4:	2b00      	cmp	r3, #0
 8009cf6:	d00a      	beq.n	8009d0e <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8009cf8:	4b78      	ldr	r3, [pc, #480]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009cfa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009cfe:	f023 0203 	bic.w	r2, r3, #3
 8009d02:	687b      	ldr	r3, [r7, #4]
 8009d04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009d06:	4975      	ldr	r1, [pc, #468]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d08:	4313      	orrs	r3, r2
 8009d0a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d0e:	687b      	ldr	r3, [r7, #4]
 8009d10:	681b      	ldr	r3, [r3, #0]
 8009d12:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009d16:	2b00      	cmp	r3, #0
 8009d18:	d00a      	beq.n	8009d30 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
 8009d1a:	4b70      	ldr	r3, [pc, #448]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d1c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d20:	f023 020c 	bic.w	r2, r3, #12
 8009d24:	687b      	ldr	r3, [r7, #4]
 8009d26:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009d28:	496c      	ldr	r1, [pc, #432]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d2a:	4313      	orrs	r3, r2
 8009d2c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d30:	687b      	ldr	r3, [r7, #4]
 8009d32:	681b      	ldr	r3, [r3, #0]
 8009d34:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009d38:	2b00      	cmp	r3, #0
 8009d3a:	d00a      	beq.n	8009d52 <HAL_RCCEx_PeriphCLKConfig+0x316>
 8009d3c:	4b67      	ldr	r3, [pc, #412]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d3e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d42:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8009d46:	687b      	ldr	r3, [r7, #4]
 8009d48:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009d4a:	4964      	ldr	r1, [pc, #400]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d4c:	4313      	orrs	r3, r2
 8009d4e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d52:	687b      	ldr	r3, [r7, #4]
 8009d54:	681b      	ldr	r3, [r3, #0]
 8009d56:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8009d5a:	2b00      	cmp	r3, #0
 8009d5c:	d00a      	beq.n	8009d74 <HAL_RCCEx_PeriphCLKConfig+0x338>
 8009d5e:	4b5f      	ldr	r3, [pc, #380]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d60:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d64:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8009d68:	687b      	ldr	r3, [r7, #4]
 8009d6a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009d6c:	495b      	ldr	r1, [pc, #364]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d6e:	4313      	orrs	r3, r2
 8009d70:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	681b      	ldr	r3, [r3, #0]
 8009d78:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8009d7c:	2b00      	cmp	r3, #0
 8009d7e:	d00a      	beq.n	8009d96 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8009d80:	4b56      	ldr	r3, [pc, #344]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d82:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009d86:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8009d8a:	687b      	ldr	r3, [r7, #4]
 8009d8c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009d8e:	4953      	ldr	r1, [pc, #332]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009d90:	4313      	orrs	r3, r2
 8009d92:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009d96:	687b      	ldr	r3, [r7, #4]
 8009d98:	681b      	ldr	r3, [r3, #0]
 8009d9a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009d9e:	2b00      	cmp	r3, #0
 8009da0:	d00a      	beq.n	8009db8 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8009da2:	4b4e      	ldr	r3, [pc, #312]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009da4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009da8:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8009dac:	687b      	ldr	r3, [r7, #4]
 8009dae:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009db0:	494a      	ldr	r1, [pc, #296]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009db2:	4313      	orrs	r3, r2
 8009db4:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009db8:	687b      	ldr	r3, [r7, #4]
 8009dba:	681b      	ldr	r3, [r3, #0]
 8009dbc:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8009dc0:	2b00      	cmp	r3, #0
 8009dc2:	d00a      	beq.n	8009dda <HAL_RCCEx_PeriphCLKConfig+0x39e>
 8009dc4:	4b45      	ldr	r3, [pc, #276]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009dc6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009dca:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8009dce:	687b      	ldr	r3, [r7, #4]
 8009dd0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8009dd2:	4942      	ldr	r1, [pc, #264]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009dd4:	4313      	orrs	r3, r2
 8009dd6:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009dda:	687b      	ldr	r3, [r7, #4]
 8009ddc:	681b      	ldr	r3, [r3, #0]
 8009dde:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8009de2:	2b00      	cmp	r3, #0
 8009de4:	d00a      	beq.n	8009dfc <HAL_RCCEx_PeriphCLKConfig+0x3c0>
 8009de6:	4b3d      	ldr	r3, [pc, #244]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009de8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009dec:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009df4:	4939      	ldr	r1, [pc, #228]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009df6:	4313      	orrs	r3, r2
 8009df8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009dfc:	687b      	ldr	r3, [r7, #4]
 8009dfe:	681b      	ldr	r3, [r3, #0]
 8009e00:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009e04:	2b00      	cmp	r3, #0
 8009e06:	d00a      	beq.n	8009e1e <HAL_RCCEx_PeriphCLKConfig+0x3e2>
 8009e08:	4b34      	ldr	r3, [pc, #208]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e0a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e0e:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8009e12:	687b      	ldr	r3, [r7, #4]
 8009e14:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009e16:	4931      	ldr	r1, [pc, #196]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e18:	4313      	orrs	r3, r2
 8009e1a:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009e1e:	687b      	ldr	r3, [r7, #4]
 8009e20:	681b      	ldr	r3, [r3, #0]
 8009e22:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009e26:	2b00      	cmp	r3, #0
 8009e28:	d011      	beq.n	8009e4e <HAL_RCCEx_PeriphCLKConfig+0x412>
 8009e2a:	4b2c      	ldr	r3, [pc, #176]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e2c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e30:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8009e34:	687b      	ldr	r3, [r7, #4]
 8009e36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009e38:	4928      	ldr	r1, [pc, #160]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e3a:	4313      	orrs	r3, r2
 8009e3c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009e44:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8009e48:	d101      	bne.n	8009e4e <HAL_RCCEx_PeriphCLKConfig+0x412>
 8009e4a:	2301      	movs	r3, #1
 8009e4c:	61bb      	str	r3, [r7, #24]
 8009e4e:	687b      	ldr	r3, [r7, #4]
 8009e50:	681b      	ldr	r3, [r3, #0]
 8009e52:	f003 0308 	and.w	r3, r3, #8
 8009e56:	2b00      	cmp	r3, #0
 8009e58:	d001      	beq.n	8009e5e <HAL_RCCEx_PeriphCLKConfig+0x422>
 8009e5a:	2301      	movs	r3, #1
 8009e5c:	61bb      	str	r3, [r7, #24]
 8009e5e:	687b      	ldr	r3, [r7, #4]
 8009e60:	681b      	ldr	r3, [r3, #0]
 8009e62:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8009e66:	2b00      	cmp	r3, #0
 8009e68:	d00a      	beq.n	8009e80 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8009e6a:	4b1c      	ldr	r3, [pc, #112]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e6c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e70:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8009e74:	687b      	ldr	r3, [r7, #4]
 8009e76:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009e78:	4918      	ldr	r1, [pc, #96]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e7a:	4313      	orrs	r3, r2
 8009e7c:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009e80:	687b      	ldr	r3, [r7, #4]
 8009e82:	681b      	ldr	r3, [r3, #0]
 8009e84:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8009e88:	2b00      	cmp	r3, #0
 8009e8a:	d00b      	beq.n	8009ea4 <HAL_RCCEx_PeriphCLKConfig+0x468>
 8009e8c:	4b13      	ldr	r3, [pc, #76]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e8e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009e92:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8009e96:	687b      	ldr	r3, [r7, #4]
 8009e98:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009e9c:	490f      	ldr	r1, [pc, #60]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009e9e:	4313      	orrs	r3, r2
 8009ea0:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 8009ea4:	69fb      	ldr	r3, [r7, #28]
 8009ea6:	2b01      	cmp	r3, #1
 8009ea8:	d005      	beq.n	8009eb6 <HAL_RCCEx_PeriphCLKConfig+0x47a>
 8009eaa:	687b      	ldr	r3, [r7, #4]
 8009eac:	681b      	ldr	r3, [r3, #0]
 8009eae:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8009eb2:	f040 80d8 	bne.w	800a066 <HAL_RCCEx_PeriphCLKConfig+0x62a>
 8009eb6:	4b09      	ldr	r3, [pc, #36]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009eb8:	681b      	ldr	r3, [r3, #0]
 8009eba:	4a08      	ldr	r2, [pc, #32]	; (8009edc <HAL_RCCEx_PeriphCLKConfig+0x4a0>)
 8009ebc:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8009ec0:	6013      	str	r3, [r2, #0]
 8009ec2:	f7fc fa6b 	bl	800639c <HAL_GetTick>
 8009ec6:	6178      	str	r0, [r7, #20]
 8009ec8:	e00a      	b.n	8009ee0 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 8009eca:	f7fc fa67 	bl	800639c <HAL_GetTick>
 8009ece:	4602      	mov	r2, r0
 8009ed0:	697b      	ldr	r3, [r7, #20]
 8009ed2:	1ad3      	subs	r3, r2, r3
 8009ed4:	2b64      	cmp	r3, #100	; 0x64
 8009ed6:	d903      	bls.n	8009ee0 <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 8009ed8:	2303      	movs	r3, #3
 8009eda:	e196      	b.n	800a20a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 8009edc:	40023800 	.word	0x40023800
 8009ee0:	4b6c      	ldr	r3, [pc, #432]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009ee2:	681b      	ldr	r3, [r3, #0]
 8009ee4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009ee8:	2b00      	cmp	r3, #0
 8009eea:	d1ee      	bne.n	8009eca <HAL_RCCEx_PeriphCLKConfig+0x48e>
 8009eec:	687b      	ldr	r3, [r7, #4]
 8009eee:	681b      	ldr	r3, [r3, #0]
 8009ef0:	f003 0301 	and.w	r3, r3, #1
 8009ef4:	2b00      	cmp	r3, #0
 8009ef6:	d021      	beq.n	8009f3c <HAL_RCCEx_PeriphCLKConfig+0x500>
 8009ef8:	687b      	ldr	r3, [r7, #4]
 8009efa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009efc:	2b00      	cmp	r3, #0
 8009efe:	d11d      	bne.n	8009f3c <HAL_RCCEx_PeriphCLKConfig+0x500>
 8009f00:	4b64      	ldr	r3, [pc, #400]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f02:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f06:	0c1b      	lsrs	r3, r3, #16
 8009f08:	f003 0303 	and.w	r3, r3, #3
 8009f0c:	613b      	str	r3, [r7, #16]
 8009f0e:	4b61      	ldr	r3, [pc, #388]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f10:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f14:	0e1b      	lsrs	r3, r3, #24
 8009f16:	f003 030f 	and.w	r3, r3, #15
 8009f1a:	60fb      	str	r3, [r7, #12]
 8009f1c:	687b      	ldr	r3, [r7, #4]
 8009f1e:	685b      	ldr	r3, [r3, #4]
 8009f20:	019a      	lsls	r2, r3, #6
 8009f22:	693b      	ldr	r3, [r7, #16]
 8009f24:	041b      	lsls	r3, r3, #16
 8009f26:	431a      	orrs	r2, r3
 8009f28:	68fb      	ldr	r3, [r7, #12]
 8009f2a:	061b      	lsls	r3, r3, #24
 8009f2c:	431a      	orrs	r2, r3
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	689b      	ldr	r3, [r3, #8]
 8009f32:	071b      	lsls	r3, r3, #28
 8009f34:	4957      	ldr	r1, [pc, #348]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f36:	4313      	orrs	r3, r2
 8009f38:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8009f3c:	687b      	ldr	r3, [r7, #4]
 8009f3e:	681b      	ldr	r3, [r3, #0]
 8009f40:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8009f44:	2b00      	cmp	r3, #0
 8009f46:	d004      	beq.n	8009f52 <HAL_RCCEx_PeriphCLKConfig+0x516>
 8009f48:	687b      	ldr	r3, [r7, #4]
 8009f4a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009f4c:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009f50:	d00a      	beq.n	8009f68 <HAL_RCCEx_PeriphCLKConfig+0x52c>
 8009f52:	687b      	ldr	r3, [r7, #4]
 8009f54:	681b      	ldr	r3, [r3, #0]
 8009f56:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009f5a:	2b00      	cmp	r3, #0
 8009f5c:	d02e      	beq.n	8009fbc <HAL_RCCEx_PeriphCLKConfig+0x580>
 8009f5e:	687b      	ldr	r3, [r7, #4]
 8009f60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009f62:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8009f66:	d129      	bne.n	8009fbc <HAL_RCCEx_PeriphCLKConfig+0x580>
 8009f68:	4b4a      	ldr	r3, [pc, #296]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f6a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f6e:	0c1b      	lsrs	r3, r3, #16
 8009f70:	f003 0303 	and.w	r3, r3, #3
 8009f74:	613b      	str	r3, [r7, #16]
 8009f76:	4b47      	ldr	r3, [pc, #284]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f78:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009f7c:	0f1b      	lsrs	r3, r3, #28
 8009f7e:	f003 0307 	and.w	r3, r3, #7
 8009f82:	60fb      	str	r3, [r7, #12]
 8009f84:	687b      	ldr	r3, [r7, #4]
 8009f86:	685b      	ldr	r3, [r3, #4]
 8009f88:	019a      	lsls	r2, r3, #6
 8009f8a:	693b      	ldr	r3, [r7, #16]
 8009f8c:	041b      	lsls	r3, r3, #16
 8009f8e:	431a      	orrs	r2, r3
 8009f90:	687b      	ldr	r3, [r7, #4]
 8009f92:	68db      	ldr	r3, [r3, #12]
 8009f94:	061b      	lsls	r3, r3, #24
 8009f96:	431a      	orrs	r2, r3
 8009f98:	68fb      	ldr	r3, [r7, #12]
 8009f9a:	071b      	lsls	r3, r3, #28
 8009f9c:	493d      	ldr	r1, [pc, #244]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009f9e:	4313      	orrs	r3, r2
 8009fa0:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8009fa4:	4b3b      	ldr	r3, [pc, #236]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009fa6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009faa:	f023 021f 	bic.w	r2, r3, #31
 8009fae:	687b      	ldr	r3, [r7, #4]
 8009fb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009fb2:	3b01      	subs	r3, #1
 8009fb4:	4937      	ldr	r1, [pc, #220]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009fb6:	4313      	orrs	r3, r2
 8009fb8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 8009fbc:	687b      	ldr	r3, [r7, #4]
 8009fbe:	681b      	ldr	r3, [r3, #0]
 8009fc0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8009fc4:	2b00      	cmp	r3, #0
 8009fc6:	d01d      	beq.n	800a004 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8009fc8:	4b32      	ldr	r3, [pc, #200]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009fca:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009fce:	0e1b      	lsrs	r3, r3, #24
 8009fd0:	f003 030f 	and.w	r3, r3, #15
 8009fd4:	613b      	str	r3, [r7, #16]
 8009fd6:	4b2f      	ldr	r3, [pc, #188]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009fd8:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009fdc:	0f1b      	lsrs	r3, r3, #28
 8009fde:	f003 0307 	and.w	r3, r3, #7
 8009fe2:	60fb      	str	r3, [r7, #12]
 8009fe4:	687b      	ldr	r3, [r7, #4]
 8009fe6:	685b      	ldr	r3, [r3, #4]
 8009fe8:	019a      	lsls	r2, r3, #6
 8009fea:	687b      	ldr	r3, [r7, #4]
 8009fec:	691b      	ldr	r3, [r3, #16]
 8009fee:	041b      	lsls	r3, r3, #16
 8009ff0:	431a      	orrs	r2, r3
 8009ff2:	693b      	ldr	r3, [r7, #16]
 8009ff4:	061b      	lsls	r3, r3, #24
 8009ff6:	431a      	orrs	r2, r3
 8009ff8:	68fb      	ldr	r3, [r7, #12]
 8009ffa:	071b      	lsls	r3, r3, #28
 8009ffc:	4925      	ldr	r1, [pc, #148]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 8009ffe:	4313      	orrs	r3, r2
 800a000:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 800a004:	687b      	ldr	r3, [r7, #4]
 800a006:	681b      	ldr	r3, [r3, #0]
 800a008:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800a00c:	2b00      	cmp	r3, #0
 800a00e:	d011      	beq.n	800a034 <HAL_RCCEx_PeriphCLKConfig+0x5f8>
 800a010:	687b      	ldr	r3, [r7, #4]
 800a012:	685b      	ldr	r3, [r3, #4]
 800a014:	019a      	lsls	r2, r3, #6
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	691b      	ldr	r3, [r3, #16]
 800a01a:	041b      	lsls	r3, r3, #16
 800a01c:	431a      	orrs	r2, r3
 800a01e:	687b      	ldr	r3, [r7, #4]
 800a020:	68db      	ldr	r3, [r3, #12]
 800a022:	061b      	lsls	r3, r3, #24
 800a024:	431a      	orrs	r2, r3
 800a026:	687b      	ldr	r3, [r7, #4]
 800a028:	689b      	ldr	r3, [r3, #8]
 800a02a:	071b      	lsls	r3, r3, #28
 800a02c:	4919      	ldr	r1, [pc, #100]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a02e:	4313      	orrs	r3, r2
 800a030:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 800a034:	4b17      	ldr	r3, [pc, #92]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a036:	681b      	ldr	r3, [r3, #0]
 800a038:	4a16      	ldr	r2, [pc, #88]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a03a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800a03e:	6013      	str	r3, [r2, #0]
 800a040:	f7fc f9ac 	bl	800639c <HAL_GetTick>
 800a044:	6178      	str	r0, [r7, #20]
 800a046:	e008      	b.n	800a05a <HAL_RCCEx_PeriphCLKConfig+0x61e>
 800a048:	f7fc f9a8 	bl	800639c <HAL_GetTick>
 800a04c:	4602      	mov	r2, r0
 800a04e:	697b      	ldr	r3, [r7, #20]
 800a050:	1ad3      	subs	r3, r2, r3
 800a052:	2b64      	cmp	r3, #100	; 0x64
 800a054:	d901      	bls.n	800a05a <HAL_RCCEx_PeriphCLKConfig+0x61e>
 800a056:	2303      	movs	r3, #3
 800a058:	e0d7      	b.n	800a20a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800a05a:	4b0e      	ldr	r3, [pc, #56]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a05c:	681b      	ldr	r3, [r3, #0]
 800a05e:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a062:	2b00      	cmp	r3, #0
 800a064:	d0f0      	beq.n	800a048 <HAL_RCCEx_PeriphCLKConfig+0x60c>
 800a066:	69bb      	ldr	r3, [r7, #24]
 800a068:	2b01      	cmp	r3, #1
 800a06a:	f040 80cd 	bne.w	800a208 <HAL_RCCEx_PeriphCLKConfig+0x7cc>
 800a06e:	4b09      	ldr	r3, [pc, #36]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a070:	681b      	ldr	r3, [r3, #0]
 800a072:	4a08      	ldr	r2, [pc, #32]	; (800a094 <HAL_RCCEx_PeriphCLKConfig+0x658>)
 800a074:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a078:	6013      	str	r3, [r2, #0]
 800a07a:	f7fc f98f 	bl	800639c <HAL_GetTick>
 800a07e:	6178      	str	r0, [r7, #20]
 800a080:	e00a      	b.n	800a098 <HAL_RCCEx_PeriphCLKConfig+0x65c>
 800a082:	f7fc f98b 	bl	800639c <HAL_GetTick>
 800a086:	4602      	mov	r2, r0
 800a088:	697b      	ldr	r3, [r7, #20]
 800a08a:	1ad3      	subs	r3, r2, r3
 800a08c:	2b64      	cmp	r3, #100	; 0x64
 800a08e:	d903      	bls.n	800a098 <HAL_RCCEx_PeriphCLKConfig+0x65c>
 800a090:	2303      	movs	r3, #3
 800a092:	e0ba      	b.n	800a20a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800a094:	40023800 	.word	0x40023800
 800a098:	4b5e      	ldr	r3, [pc, #376]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a09a:	681b      	ldr	r3, [r3, #0]
 800a09c:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a0a0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800a0a4:	d0ed      	beq.n	800a082 <HAL_RCCEx_PeriphCLKConfig+0x646>
 800a0a6:	687b      	ldr	r3, [r7, #4]
 800a0a8:	681b      	ldr	r3, [r3, #0]
 800a0aa:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800a0ae:	2b00      	cmp	r3, #0
 800a0b0:	d003      	beq.n	800a0ba <HAL_RCCEx_PeriphCLKConfig+0x67e>
 800a0b2:	687b      	ldr	r3, [r7, #4]
 800a0b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a0b6:	2b00      	cmp	r3, #0
 800a0b8:	d009      	beq.n	800a0ce <HAL_RCCEx_PeriphCLKConfig+0x692>
 800a0ba:	687b      	ldr	r3, [r7, #4]
 800a0bc:	681b      	ldr	r3, [r3, #0]
 800a0be:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800a0c2:	2b00      	cmp	r3, #0
 800a0c4:	d02e      	beq.n	800a124 <HAL_RCCEx_PeriphCLKConfig+0x6e8>
 800a0c6:	687b      	ldr	r3, [r7, #4]
 800a0c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a0ca:	2b00      	cmp	r3, #0
 800a0cc:	d12a      	bne.n	800a124 <HAL_RCCEx_PeriphCLKConfig+0x6e8>
 800a0ce:	4b51      	ldr	r3, [pc, #324]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a0d0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a0d4:	0c1b      	lsrs	r3, r3, #16
 800a0d6:	f003 0303 	and.w	r3, r3, #3
 800a0da:	613b      	str	r3, [r7, #16]
 800a0dc:	4b4d      	ldr	r3, [pc, #308]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a0de:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a0e2:	0f1b      	lsrs	r3, r3, #28
 800a0e4:	f003 0307 	and.w	r3, r3, #7
 800a0e8:	60fb      	str	r3, [r7, #12]
 800a0ea:	687b      	ldr	r3, [r7, #4]
 800a0ec:	695b      	ldr	r3, [r3, #20]
 800a0ee:	019a      	lsls	r2, r3, #6
 800a0f0:	693b      	ldr	r3, [r7, #16]
 800a0f2:	041b      	lsls	r3, r3, #16
 800a0f4:	431a      	orrs	r2, r3
 800a0f6:	687b      	ldr	r3, [r7, #4]
 800a0f8:	699b      	ldr	r3, [r3, #24]
 800a0fa:	061b      	lsls	r3, r3, #24
 800a0fc:	431a      	orrs	r2, r3
 800a0fe:	68fb      	ldr	r3, [r7, #12]
 800a100:	071b      	lsls	r3, r3, #28
 800a102:	4944      	ldr	r1, [pc, #272]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a104:	4313      	orrs	r3, r2
 800a106:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a10a:	4b42      	ldr	r3, [pc, #264]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a10c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a110:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 800a114:	687b      	ldr	r3, [r7, #4]
 800a116:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a118:	3b01      	subs	r3, #1
 800a11a:	021b      	lsls	r3, r3, #8
 800a11c:	493d      	ldr	r1, [pc, #244]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a11e:	4313      	orrs	r3, r2
 800a120:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800a124:	687b      	ldr	r3, [r7, #4]
 800a126:	681b      	ldr	r3, [r3, #0]
 800a128:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800a12c:	2b00      	cmp	r3, #0
 800a12e:	d022      	beq.n	800a176 <HAL_RCCEx_PeriphCLKConfig+0x73a>
 800a130:	687b      	ldr	r3, [r7, #4]
 800a132:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a134:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800a138:	d11d      	bne.n	800a176 <HAL_RCCEx_PeriphCLKConfig+0x73a>
 800a13a:	4b36      	ldr	r3, [pc, #216]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a13c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a140:	0e1b      	lsrs	r3, r3, #24
 800a142:	f003 030f 	and.w	r3, r3, #15
 800a146:	613b      	str	r3, [r7, #16]
 800a148:	4b32      	ldr	r3, [pc, #200]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a14a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a14e:	0f1b      	lsrs	r3, r3, #28
 800a150:	f003 0307 	and.w	r3, r3, #7
 800a154:	60fb      	str	r3, [r7, #12]
 800a156:	687b      	ldr	r3, [r7, #4]
 800a158:	695b      	ldr	r3, [r3, #20]
 800a15a:	019a      	lsls	r2, r3, #6
 800a15c:	687b      	ldr	r3, [r7, #4]
 800a15e:	6a1b      	ldr	r3, [r3, #32]
 800a160:	041b      	lsls	r3, r3, #16
 800a162:	431a      	orrs	r2, r3
 800a164:	693b      	ldr	r3, [r7, #16]
 800a166:	061b      	lsls	r3, r3, #24
 800a168:	431a      	orrs	r2, r3
 800a16a:	68fb      	ldr	r3, [r7, #12]
 800a16c:	071b      	lsls	r3, r3, #28
 800a16e:	4929      	ldr	r1, [pc, #164]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a170:	4313      	orrs	r3, r2
 800a172:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	681b      	ldr	r3, [r3, #0]
 800a17a:	f003 0308 	and.w	r3, r3, #8
 800a17e:	2b00      	cmp	r3, #0
 800a180:	d028      	beq.n	800a1d4 <HAL_RCCEx_PeriphCLKConfig+0x798>
 800a182:	4b24      	ldr	r3, [pc, #144]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a184:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a188:	0e1b      	lsrs	r3, r3, #24
 800a18a:	f003 030f 	and.w	r3, r3, #15
 800a18e:	613b      	str	r3, [r7, #16]
 800a190:	4b20      	ldr	r3, [pc, #128]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a192:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a196:	0c1b      	lsrs	r3, r3, #16
 800a198:	f003 0303 	and.w	r3, r3, #3
 800a19c:	60fb      	str	r3, [r7, #12]
 800a19e:	687b      	ldr	r3, [r7, #4]
 800a1a0:	695b      	ldr	r3, [r3, #20]
 800a1a2:	019a      	lsls	r2, r3, #6
 800a1a4:	68fb      	ldr	r3, [r7, #12]
 800a1a6:	041b      	lsls	r3, r3, #16
 800a1a8:	431a      	orrs	r2, r3
 800a1aa:	693b      	ldr	r3, [r7, #16]
 800a1ac:	061b      	lsls	r3, r3, #24
 800a1ae:	431a      	orrs	r2, r3
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	69db      	ldr	r3, [r3, #28]
 800a1b4:	071b      	lsls	r3, r3, #28
 800a1b6:	4917      	ldr	r1, [pc, #92]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1b8:	4313      	orrs	r3, r2
 800a1ba:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a1be:	4b15      	ldr	r3, [pc, #84]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1c0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a1c4:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800a1c8:	687b      	ldr	r3, [r7, #4]
 800a1ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1cc:	4911      	ldr	r1, [pc, #68]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1ce:	4313      	orrs	r3, r2
 800a1d0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800a1d4:	4b0f      	ldr	r3, [pc, #60]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1d6:	681b      	ldr	r3, [r3, #0]
 800a1d8:	4a0e      	ldr	r2, [pc, #56]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1da:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a1de:	6013      	str	r3, [r2, #0]
 800a1e0:	f7fc f8dc 	bl	800639c <HAL_GetTick>
 800a1e4:	6178      	str	r0, [r7, #20]
 800a1e6:	e008      	b.n	800a1fa <HAL_RCCEx_PeriphCLKConfig+0x7be>
 800a1e8:	f7fc f8d8 	bl	800639c <HAL_GetTick>
 800a1ec:	4602      	mov	r2, r0
 800a1ee:	697b      	ldr	r3, [r7, #20]
 800a1f0:	1ad3      	subs	r3, r2, r3
 800a1f2:	2b64      	cmp	r3, #100	; 0x64
 800a1f4:	d901      	bls.n	800a1fa <HAL_RCCEx_PeriphCLKConfig+0x7be>
 800a1f6:	2303      	movs	r3, #3
 800a1f8:	e007      	b.n	800a20a <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 800a1fa:	4b06      	ldr	r3, [pc, #24]	; (800a214 <HAL_RCCEx_PeriphCLKConfig+0x7d8>)
 800a1fc:	681b      	ldr	r3, [r3, #0]
 800a1fe:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a202:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 800a206:	d1ef      	bne.n	800a1e8 <HAL_RCCEx_PeriphCLKConfig+0x7ac>
 800a208:	2300      	movs	r3, #0
 800a20a:	4618      	mov	r0, r3
 800a20c:	3720      	adds	r7, #32
 800a20e:	46bd      	mov	sp, r7
 800a210:	bd80      	pop	{r7, pc}
 800a212:	bf00      	nop
 800a214:	40023800 	.word	0x40023800

0800a218 <HAL_RTC_Init>:
 800a218:	b580      	push	{r7, lr}
 800a21a:	b082      	sub	sp, #8
 800a21c:	af00      	add	r7, sp, #0
 800a21e:	6078      	str	r0, [r7, #4]
 800a220:	687b      	ldr	r3, [r7, #4]
 800a222:	2b00      	cmp	r3, #0
 800a224:	d101      	bne.n	800a22a <HAL_RTC_Init+0x12>
 800a226:	2301      	movs	r3, #1
 800a228:	e06b      	b.n	800a302 <HAL_RTC_Init+0xea>
 800a22a:	687b      	ldr	r3, [r7, #4]
 800a22c:	7f5b      	ldrb	r3, [r3, #29]
 800a22e:	b2db      	uxtb	r3, r3
 800a230:	2b00      	cmp	r3, #0
 800a232:	d105      	bne.n	800a240 <HAL_RTC_Init+0x28>
 800a234:	687b      	ldr	r3, [r7, #4]
 800a236:	2200      	movs	r2, #0
 800a238:	771a      	strb	r2, [r3, #28]
 800a23a:	6878      	ldr	r0, [r7, #4]
 800a23c:	f7fb fcb4 	bl	8005ba8 <HAL_RTC_MspInit>
 800a240:	687b      	ldr	r3, [r7, #4]
 800a242:	2202      	movs	r2, #2
 800a244:	775a      	strb	r2, [r3, #29]
 800a246:	687b      	ldr	r3, [r7, #4]
 800a248:	681b      	ldr	r3, [r3, #0]
 800a24a:	22ca      	movs	r2, #202	; 0xca
 800a24c:	625a      	str	r2, [r3, #36]	; 0x24
 800a24e:	687b      	ldr	r3, [r7, #4]
 800a250:	681b      	ldr	r3, [r3, #0]
 800a252:	2253      	movs	r2, #83	; 0x53
 800a254:	625a      	str	r2, [r3, #36]	; 0x24
 800a256:	6878      	ldr	r0, [r7, #4]
 800a258:	f000 fb00 	bl	800a85c <RTC_EnterInitMode>
 800a25c:	4603      	mov	r3, r0
 800a25e:	2b00      	cmp	r3, #0
 800a260:	d008      	beq.n	800a274 <HAL_RTC_Init+0x5c>
 800a262:	687b      	ldr	r3, [r7, #4]
 800a264:	681b      	ldr	r3, [r3, #0]
 800a266:	22ff      	movs	r2, #255	; 0xff
 800a268:	625a      	str	r2, [r3, #36]	; 0x24
 800a26a:	687b      	ldr	r3, [r7, #4]
 800a26c:	2204      	movs	r2, #4
 800a26e:	775a      	strb	r2, [r3, #29]
 800a270:	2301      	movs	r3, #1
 800a272:	e046      	b.n	800a302 <HAL_RTC_Init+0xea>
 800a274:	687b      	ldr	r3, [r7, #4]
 800a276:	681b      	ldr	r3, [r3, #0]
 800a278:	6899      	ldr	r1, [r3, #8]
 800a27a:	687b      	ldr	r3, [r7, #4]
 800a27c:	681a      	ldr	r2, [r3, #0]
 800a27e:	4b23      	ldr	r3, [pc, #140]	; (800a30c <HAL_RTC_Init+0xf4>)
 800a280:	400b      	ands	r3, r1
 800a282:	6093      	str	r3, [r2, #8]
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	681b      	ldr	r3, [r3, #0]
 800a288:	6899      	ldr	r1, [r3, #8]
 800a28a:	687b      	ldr	r3, [r7, #4]
 800a28c:	685a      	ldr	r2, [r3, #4]
 800a28e:	687b      	ldr	r3, [r7, #4]
 800a290:	691b      	ldr	r3, [r3, #16]
 800a292:	431a      	orrs	r2, r3
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	695b      	ldr	r3, [r3, #20]
 800a298:	431a      	orrs	r2, r3
 800a29a:	687b      	ldr	r3, [r7, #4]
 800a29c:	681b      	ldr	r3, [r3, #0]
 800a29e:	430a      	orrs	r2, r1
 800a2a0:	609a      	str	r2, [r3, #8]
 800a2a2:	687b      	ldr	r3, [r7, #4]
 800a2a4:	681b      	ldr	r3, [r3, #0]
 800a2a6:	687a      	ldr	r2, [r7, #4]
 800a2a8:	68d2      	ldr	r2, [r2, #12]
 800a2aa:	611a      	str	r2, [r3, #16]
 800a2ac:	687b      	ldr	r3, [r7, #4]
 800a2ae:	681b      	ldr	r3, [r3, #0]
 800a2b0:	6919      	ldr	r1, [r3, #16]
 800a2b2:	687b      	ldr	r3, [r7, #4]
 800a2b4:	689b      	ldr	r3, [r3, #8]
 800a2b6:	041a      	lsls	r2, r3, #16
 800a2b8:	687b      	ldr	r3, [r7, #4]
 800a2ba:	681b      	ldr	r3, [r3, #0]
 800a2bc:	430a      	orrs	r2, r1
 800a2be:	611a      	str	r2, [r3, #16]
 800a2c0:	687b      	ldr	r3, [r7, #4]
 800a2c2:	681b      	ldr	r3, [r3, #0]
 800a2c4:	68da      	ldr	r2, [r3, #12]
 800a2c6:	687b      	ldr	r3, [r7, #4]
 800a2c8:	681b      	ldr	r3, [r3, #0]
 800a2ca:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a2ce:	60da      	str	r2, [r3, #12]
 800a2d0:	687b      	ldr	r3, [r7, #4]
 800a2d2:	681b      	ldr	r3, [r3, #0]
 800a2d4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800a2d6:	687b      	ldr	r3, [r7, #4]
 800a2d8:	681b      	ldr	r3, [r3, #0]
 800a2da:	f022 0208 	bic.w	r2, r2, #8
 800a2de:	64da      	str	r2, [r3, #76]	; 0x4c
 800a2e0:	687b      	ldr	r3, [r7, #4]
 800a2e2:	681b      	ldr	r3, [r3, #0]
 800a2e4:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 800a2e6:	687b      	ldr	r3, [r7, #4]
 800a2e8:	699a      	ldr	r2, [r3, #24]
 800a2ea:	687b      	ldr	r3, [r7, #4]
 800a2ec:	681b      	ldr	r3, [r3, #0]
 800a2ee:	430a      	orrs	r2, r1
 800a2f0:	64da      	str	r2, [r3, #76]	; 0x4c
 800a2f2:	687b      	ldr	r3, [r7, #4]
 800a2f4:	681b      	ldr	r3, [r3, #0]
 800a2f6:	22ff      	movs	r2, #255	; 0xff
 800a2f8:	625a      	str	r2, [r3, #36]	; 0x24
 800a2fa:	687b      	ldr	r3, [r7, #4]
 800a2fc:	2201      	movs	r2, #1
 800a2fe:	775a      	strb	r2, [r3, #29]
 800a300:	2300      	movs	r3, #0
 800a302:	4618      	mov	r0, r3
 800a304:	3708      	adds	r7, #8
 800a306:	46bd      	mov	sp, r7
 800a308:	bd80      	pop	{r7, pc}
 800a30a:	bf00      	nop
 800a30c:	ff8fffbf 	.word	0xff8fffbf

0800a310 <HAL_RTC_SetTime>:
 800a310:	b590      	push	{r4, r7, lr}
 800a312:	b087      	sub	sp, #28
 800a314:	af00      	add	r7, sp, #0
 800a316:	60f8      	str	r0, [r7, #12]
 800a318:	60b9      	str	r1, [r7, #8]
 800a31a:	607a      	str	r2, [r7, #4]
 800a31c:	2300      	movs	r3, #0
 800a31e:	617b      	str	r3, [r7, #20]
 800a320:	68fb      	ldr	r3, [r7, #12]
 800a322:	7f1b      	ldrb	r3, [r3, #28]
 800a324:	2b01      	cmp	r3, #1
 800a326:	d101      	bne.n	800a32c <HAL_RTC_SetTime+0x1c>
 800a328:	2302      	movs	r3, #2
 800a32a:	e0a8      	b.n	800a47e <HAL_RTC_SetTime+0x16e>
 800a32c:	68fb      	ldr	r3, [r7, #12]
 800a32e:	2201      	movs	r2, #1
 800a330:	771a      	strb	r2, [r3, #28]
 800a332:	68fb      	ldr	r3, [r7, #12]
 800a334:	2202      	movs	r2, #2
 800a336:	775a      	strb	r2, [r3, #29]
 800a338:	687b      	ldr	r3, [r7, #4]
 800a33a:	2b00      	cmp	r3, #0
 800a33c:	d126      	bne.n	800a38c <HAL_RTC_SetTime+0x7c>
 800a33e:	68fb      	ldr	r3, [r7, #12]
 800a340:	681b      	ldr	r3, [r3, #0]
 800a342:	689b      	ldr	r3, [r3, #8]
 800a344:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a348:	2b00      	cmp	r3, #0
 800a34a:	d102      	bne.n	800a352 <HAL_RTC_SetTime+0x42>
 800a34c:	68bb      	ldr	r3, [r7, #8]
 800a34e:	2200      	movs	r2, #0
 800a350:	731a      	strb	r2, [r3, #12]
 800a352:	68bb      	ldr	r3, [r7, #8]
 800a354:	781b      	ldrb	r3, [r3, #0]
 800a356:	4618      	mov	r0, r3
 800a358:	f000 faac 	bl	800a8b4 <RTC_ByteToBcd2>
 800a35c:	4603      	mov	r3, r0
 800a35e:	041c      	lsls	r4, r3, #16
 800a360:	68bb      	ldr	r3, [r7, #8]
 800a362:	785b      	ldrb	r3, [r3, #1]
 800a364:	4618      	mov	r0, r3
 800a366:	f000 faa5 	bl	800a8b4 <RTC_ByteToBcd2>
 800a36a:	4603      	mov	r3, r0
 800a36c:	021b      	lsls	r3, r3, #8
 800a36e:	431c      	orrs	r4, r3
 800a370:	68bb      	ldr	r3, [r7, #8]
 800a372:	789b      	ldrb	r3, [r3, #2]
 800a374:	4618      	mov	r0, r3
 800a376:	f000 fa9d 	bl	800a8b4 <RTC_ByteToBcd2>
 800a37a:	4603      	mov	r3, r0
 800a37c:	ea44 0203 	orr.w	r2, r4, r3
 800a380:	68bb      	ldr	r3, [r7, #8]
 800a382:	7b1b      	ldrb	r3, [r3, #12]
 800a384:	041b      	lsls	r3, r3, #16
 800a386:	4313      	orrs	r3, r2
 800a388:	617b      	str	r3, [r7, #20]
 800a38a:	e018      	b.n	800a3be <HAL_RTC_SetTime+0xae>
 800a38c:	68fb      	ldr	r3, [r7, #12]
 800a38e:	681b      	ldr	r3, [r3, #0]
 800a390:	689b      	ldr	r3, [r3, #8]
 800a392:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a396:	2b00      	cmp	r3, #0
 800a398:	d102      	bne.n	800a3a0 <HAL_RTC_SetTime+0x90>
 800a39a:	68bb      	ldr	r3, [r7, #8]
 800a39c:	2200      	movs	r2, #0
 800a39e:	731a      	strb	r2, [r3, #12]
 800a3a0:	68bb      	ldr	r3, [r7, #8]
 800a3a2:	781b      	ldrb	r3, [r3, #0]
 800a3a4:	041a      	lsls	r2, r3, #16
 800a3a6:	68bb      	ldr	r3, [r7, #8]
 800a3a8:	785b      	ldrb	r3, [r3, #1]
 800a3aa:	021b      	lsls	r3, r3, #8
 800a3ac:	4313      	orrs	r3, r2
 800a3ae:	68ba      	ldr	r2, [r7, #8]
 800a3b0:	7892      	ldrb	r2, [r2, #2]
 800a3b2:	431a      	orrs	r2, r3
 800a3b4:	68bb      	ldr	r3, [r7, #8]
 800a3b6:	7b1b      	ldrb	r3, [r3, #12]
 800a3b8:	041b      	lsls	r3, r3, #16
 800a3ba:	4313      	orrs	r3, r2
 800a3bc:	617b      	str	r3, [r7, #20]
 800a3be:	68fb      	ldr	r3, [r7, #12]
 800a3c0:	681b      	ldr	r3, [r3, #0]
 800a3c2:	22ca      	movs	r2, #202	; 0xca
 800a3c4:	625a      	str	r2, [r3, #36]	; 0x24
 800a3c6:	68fb      	ldr	r3, [r7, #12]
 800a3c8:	681b      	ldr	r3, [r3, #0]
 800a3ca:	2253      	movs	r2, #83	; 0x53
 800a3cc:	625a      	str	r2, [r3, #36]	; 0x24
 800a3ce:	68f8      	ldr	r0, [r7, #12]
 800a3d0:	f000 fa44 	bl	800a85c <RTC_EnterInitMode>
 800a3d4:	4603      	mov	r3, r0
 800a3d6:	2b00      	cmp	r3, #0
 800a3d8:	d00b      	beq.n	800a3f2 <HAL_RTC_SetTime+0xe2>
 800a3da:	68fb      	ldr	r3, [r7, #12]
 800a3dc:	681b      	ldr	r3, [r3, #0]
 800a3de:	22ff      	movs	r2, #255	; 0xff
 800a3e0:	625a      	str	r2, [r3, #36]	; 0x24
 800a3e2:	68fb      	ldr	r3, [r7, #12]
 800a3e4:	2204      	movs	r2, #4
 800a3e6:	775a      	strb	r2, [r3, #29]
 800a3e8:	68fb      	ldr	r3, [r7, #12]
 800a3ea:	2200      	movs	r2, #0
 800a3ec:	771a      	strb	r2, [r3, #28]
 800a3ee:	2301      	movs	r3, #1
 800a3f0:	e045      	b.n	800a47e <HAL_RTC_SetTime+0x16e>
 800a3f2:	68fb      	ldr	r3, [r7, #12]
 800a3f4:	681a      	ldr	r2, [r3, #0]
 800a3f6:	6979      	ldr	r1, [r7, #20]
 800a3f8:	4b23      	ldr	r3, [pc, #140]	; (800a488 <HAL_RTC_SetTime+0x178>)
 800a3fa:	400b      	ands	r3, r1
 800a3fc:	6013      	str	r3, [r2, #0]
 800a3fe:	68fb      	ldr	r3, [r7, #12]
 800a400:	681b      	ldr	r3, [r3, #0]
 800a402:	689a      	ldr	r2, [r3, #8]
 800a404:	68fb      	ldr	r3, [r7, #12]
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800a40c:	609a      	str	r2, [r3, #8]
 800a40e:	68fb      	ldr	r3, [r7, #12]
 800a410:	681b      	ldr	r3, [r3, #0]
 800a412:	6899      	ldr	r1, [r3, #8]
 800a414:	68bb      	ldr	r3, [r7, #8]
 800a416:	691a      	ldr	r2, [r3, #16]
 800a418:	68bb      	ldr	r3, [r7, #8]
 800a41a:	695b      	ldr	r3, [r3, #20]
 800a41c:	431a      	orrs	r2, r3
 800a41e:	68fb      	ldr	r3, [r7, #12]
 800a420:	681b      	ldr	r3, [r3, #0]
 800a422:	430a      	orrs	r2, r1
 800a424:	609a      	str	r2, [r3, #8]
 800a426:	68fb      	ldr	r3, [r7, #12]
 800a428:	681b      	ldr	r3, [r3, #0]
 800a42a:	68da      	ldr	r2, [r3, #12]
 800a42c:	68fb      	ldr	r3, [r7, #12]
 800a42e:	681b      	ldr	r3, [r3, #0]
 800a430:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a434:	60da      	str	r2, [r3, #12]
 800a436:	68fb      	ldr	r3, [r7, #12]
 800a438:	681b      	ldr	r3, [r3, #0]
 800a43a:	689b      	ldr	r3, [r3, #8]
 800a43c:	f003 0320 	and.w	r3, r3, #32
 800a440:	2b00      	cmp	r3, #0
 800a442:	d111      	bne.n	800a468 <HAL_RTC_SetTime+0x158>
 800a444:	68f8      	ldr	r0, [r7, #12]
 800a446:	f000 f9e1 	bl	800a80c <HAL_RTC_WaitForSynchro>
 800a44a:	4603      	mov	r3, r0
 800a44c:	2b00      	cmp	r3, #0
 800a44e:	d00b      	beq.n	800a468 <HAL_RTC_SetTime+0x158>
 800a450:	68fb      	ldr	r3, [r7, #12]
 800a452:	681b      	ldr	r3, [r3, #0]
 800a454:	22ff      	movs	r2, #255	; 0xff
 800a456:	625a      	str	r2, [r3, #36]	; 0x24
 800a458:	68fb      	ldr	r3, [r7, #12]
 800a45a:	2204      	movs	r2, #4
 800a45c:	775a      	strb	r2, [r3, #29]
 800a45e:	68fb      	ldr	r3, [r7, #12]
 800a460:	2200      	movs	r2, #0
 800a462:	771a      	strb	r2, [r3, #28]
 800a464:	2301      	movs	r3, #1
 800a466:	e00a      	b.n	800a47e <HAL_RTC_SetTime+0x16e>
 800a468:	68fb      	ldr	r3, [r7, #12]
 800a46a:	681b      	ldr	r3, [r3, #0]
 800a46c:	22ff      	movs	r2, #255	; 0xff
 800a46e:	625a      	str	r2, [r3, #36]	; 0x24
 800a470:	68fb      	ldr	r3, [r7, #12]
 800a472:	2201      	movs	r2, #1
 800a474:	775a      	strb	r2, [r3, #29]
 800a476:	68fb      	ldr	r3, [r7, #12]
 800a478:	2200      	movs	r2, #0
 800a47a:	771a      	strb	r2, [r3, #28]
 800a47c:	2300      	movs	r3, #0
 800a47e:	4618      	mov	r0, r3
 800a480:	371c      	adds	r7, #28
 800a482:	46bd      	mov	sp, r7
 800a484:	bd90      	pop	{r4, r7, pc}
 800a486:	bf00      	nop
 800a488:	007f7f7f 	.word	0x007f7f7f

0800a48c <HAL_RTC_SetDate>:
 800a48c:	b590      	push	{r4, r7, lr}
 800a48e:	b087      	sub	sp, #28
 800a490:	af00      	add	r7, sp, #0
 800a492:	60f8      	str	r0, [r7, #12]
 800a494:	60b9      	str	r1, [r7, #8]
 800a496:	607a      	str	r2, [r7, #4]
 800a498:	2300      	movs	r3, #0
 800a49a:	617b      	str	r3, [r7, #20]
 800a49c:	68fb      	ldr	r3, [r7, #12]
 800a49e:	7f1b      	ldrb	r3, [r3, #28]
 800a4a0:	2b01      	cmp	r3, #1
 800a4a2:	d101      	bne.n	800a4a8 <HAL_RTC_SetDate+0x1c>
 800a4a4:	2302      	movs	r3, #2
 800a4a6:	e092      	b.n	800a5ce <HAL_RTC_SetDate+0x142>
 800a4a8:	68fb      	ldr	r3, [r7, #12]
 800a4aa:	2201      	movs	r2, #1
 800a4ac:	771a      	strb	r2, [r3, #28]
 800a4ae:	68fb      	ldr	r3, [r7, #12]
 800a4b0:	2202      	movs	r2, #2
 800a4b2:	775a      	strb	r2, [r3, #29]
 800a4b4:	687b      	ldr	r3, [r7, #4]
 800a4b6:	2b00      	cmp	r3, #0
 800a4b8:	d10e      	bne.n	800a4d8 <HAL_RTC_SetDate+0x4c>
 800a4ba:	68bb      	ldr	r3, [r7, #8]
 800a4bc:	785b      	ldrb	r3, [r3, #1]
 800a4be:	f003 0310 	and.w	r3, r3, #16
 800a4c2:	2b00      	cmp	r3, #0
 800a4c4:	d008      	beq.n	800a4d8 <HAL_RTC_SetDate+0x4c>
 800a4c6:	68bb      	ldr	r3, [r7, #8]
 800a4c8:	785b      	ldrb	r3, [r3, #1]
 800a4ca:	f023 0310 	bic.w	r3, r3, #16
 800a4ce:	b2db      	uxtb	r3, r3
 800a4d0:	330a      	adds	r3, #10
 800a4d2:	b2da      	uxtb	r2, r3
 800a4d4:	68bb      	ldr	r3, [r7, #8]
 800a4d6:	705a      	strb	r2, [r3, #1]
 800a4d8:	687b      	ldr	r3, [r7, #4]
 800a4da:	2b00      	cmp	r3, #0
 800a4dc:	d11c      	bne.n	800a518 <HAL_RTC_SetDate+0x8c>
 800a4de:	68bb      	ldr	r3, [r7, #8]
 800a4e0:	78db      	ldrb	r3, [r3, #3]
 800a4e2:	4618      	mov	r0, r3
 800a4e4:	f000 f9e6 	bl	800a8b4 <RTC_ByteToBcd2>
 800a4e8:	4603      	mov	r3, r0
 800a4ea:	041c      	lsls	r4, r3, #16
 800a4ec:	68bb      	ldr	r3, [r7, #8]
 800a4ee:	785b      	ldrb	r3, [r3, #1]
 800a4f0:	4618      	mov	r0, r3
 800a4f2:	f000 f9df 	bl	800a8b4 <RTC_ByteToBcd2>
 800a4f6:	4603      	mov	r3, r0
 800a4f8:	021b      	lsls	r3, r3, #8
 800a4fa:	431c      	orrs	r4, r3
 800a4fc:	68bb      	ldr	r3, [r7, #8]
 800a4fe:	789b      	ldrb	r3, [r3, #2]
 800a500:	4618      	mov	r0, r3
 800a502:	f000 f9d7 	bl	800a8b4 <RTC_ByteToBcd2>
 800a506:	4603      	mov	r3, r0
 800a508:	ea44 0203 	orr.w	r2, r4, r3
 800a50c:	68bb      	ldr	r3, [r7, #8]
 800a50e:	781b      	ldrb	r3, [r3, #0]
 800a510:	035b      	lsls	r3, r3, #13
 800a512:	4313      	orrs	r3, r2
 800a514:	617b      	str	r3, [r7, #20]
 800a516:	e00e      	b.n	800a536 <HAL_RTC_SetDate+0xaa>
 800a518:	68bb      	ldr	r3, [r7, #8]
 800a51a:	78db      	ldrb	r3, [r3, #3]
 800a51c:	041a      	lsls	r2, r3, #16
 800a51e:	68bb      	ldr	r3, [r7, #8]
 800a520:	785b      	ldrb	r3, [r3, #1]
 800a522:	021b      	lsls	r3, r3, #8
 800a524:	4313      	orrs	r3, r2
 800a526:	68ba      	ldr	r2, [r7, #8]
 800a528:	7892      	ldrb	r2, [r2, #2]
 800a52a:	431a      	orrs	r2, r3
 800a52c:	68bb      	ldr	r3, [r7, #8]
 800a52e:	781b      	ldrb	r3, [r3, #0]
 800a530:	035b      	lsls	r3, r3, #13
 800a532:	4313      	orrs	r3, r2
 800a534:	617b      	str	r3, [r7, #20]
 800a536:	68fb      	ldr	r3, [r7, #12]
 800a538:	681b      	ldr	r3, [r3, #0]
 800a53a:	22ca      	movs	r2, #202	; 0xca
 800a53c:	625a      	str	r2, [r3, #36]	; 0x24
 800a53e:	68fb      	ldr	r3, [r7, #12]
 800a540:	681b      	ldr	r3, [r3, #0]
 800a542:	2253      	movs	r2, #83	; 0x53
 800a544:	625a      	str	r2, [r3, #36]	; 0x24
 800a546:	68f8      	ldr	r0, [r7, #12]
 800a548:	f000 f988 	bl	800a85c <RTC_EnterInitMode>
 800a54c:	4603      	mov	r3, r0
 800a54e:	2b00      	cmp	r3, #0
 800a550:	d00b      	beq.n	800a56a <HAL_RTC_SetDate+0xde>
 800a552:	68fb      	ldr	r3, [r7, #12]
 800a554:	681b      	ldr	r3, [r3, #0]
 800a556:	22ff      	movs	r2, #255	; 0xff
 800a558:	625a      	str	r2, [r3, #36]	; 0x24
 800a55a:	68fb      	ldr	r3, [r7, #12]
 800a55c:	2204      	movs	r2, #4
 800a55e:	775a      	strb	r2, [r3, #29]
 800a560:	68fb      	ldr	r3, [r7, #12]
 800a562:	2200      	movs	r2, #0
 800a564:	771a      	strb	r2, [r3, #28]
 800a566:	2301      	movs	r3, #1
 800a568:	e031      	b.n	800a5ce <HAL_RTC_SetDate+0x142>
 800a56a:	68fb      	ldr	r3, [r7, #12]
 800a56c:	681a      	ldr	r2, [r3, #0]
 800a56e:	6979      	ldr	r1, [r7, #20]
 800a570:	4b19      	ldr	r3, [pc, #100]	; (800a5d8 <HAL_RTC_SetDate+0x14c>)
 800a572:	400b      	ands	r3, r1
 800a574:	6053      	str	r3, [r2, #4]
 800a576:	68fb      	ldr	r3, [r7, #12]
 800a578:	681b      	ldr	r3, [r3, #0]
 800a57a:	68da      	ldr	r2, [r3, #12]
 800a57c:	68fb      	ldr	r3, [r7, #12]
 800a57e:	681b      	ldr	r3, [r3, #0]
 800a580:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a584:	60da      	str	r2, [r3, #12]
 800a586:	68fb      	ldr	r3, [r7, #12]
 800a588:	681b      	ldr	r3, [r3, #0]
 800a58a:	689b      	ldr	r3, [r3, #8]
 800a58c:	f003 0320 	and.w	r3, r3, #32
 800a590:	2b00      	cmp	r3, #0
 800a592:	d111      	bne.n	800a5b8 <HAL_RTC_SetDate+0x12c>
 800a594:	68f8      	ldr	r0, [r7, #12]
 800a596:	f000 f939 	bl	800a80c <HAL_RTC_WaitForSynchro>
 800a59a:	4603      	mov	r3, r0
 800a59c:	2b00      	cmp	r3, #0
 800a59e:	d00b      	beq.n	800a5b8 <HAL_RTC_SetDate+0x12c>
 800a5a0:	68fb      	ldr	r3, [r7, #12]
 800a5a2:	681b      	ldr	r3, [r3, #0]
 800a5a4:	22ff      	movs	r2, #255	; 0xff
 800a5a6:	625a      	str	r2, [r3, #36]	; 0x24
 800a5a8:	68fb      	ldr	r3, [r7, #12]
 800a5aa:	2204      	movs	r2, #4
 800a5ac:	775a      	strb	r2, [r3, #29]
 800a5ae:	68fb      	ldr	r3, [r7, #12]
 800a5b0:	2200      	movs	r2, #0
 800a5b2:	771a      	strb	r2, [r3, #28]
 800a5b4:	2301      	movs	r3, #1
 800a5b6:	e00a      	b.n	800a5ce <HAL_RTC_SetDate+0x142>
 800a5b8:	68fb      	ldr	r3, [r7, #12]
 800a5ba:	681b      	ldr	r3, [r3, #0]
 800a5bc:	22ff      	movs	r2, #255	; 0xff
 800a5be:	625a      	str	r2, [r3, #36]	; 0x24
 800a5c0:	68fb      	ldr	r3, [r7, #12]
 800a5c2:	2201      	movs	r2, #1
 800a5c4:	775a      	strb	r2, [r3, #29]
 800a5c6:	68fb      	ldr	r3, [r7, #12]
 800a5c8:	2200      	movs	r2, #0
 800a5ca:	771a      	strb	r2, [r3, #28]
 800a5cc:	2300      	movs	r3, #0
 800a5ce:	4618      	mov	r0, r3
 800a5d0:	371c      	adds	r7, #28
 800a5d2:	46bd      	mov	sp, r7
 800a5d4:	bd90      	pop	{r4, r7, pc}
 800a5d6:	bf00      	nop
 800a5d8:	00ffff3f 	.word	0x00ffff3f

0800a5dc <HAL_RTC_SetAlarm>:
 800a5dc:	b590      	push	{r4, r7, lr}
 800a5de:	b089      	sub	sp, #36	; 0x24
 800a5e0:	af00      	add	r7, sp, #0
 800a5e2:	60f8      	str	r0, [r7, #12]
 800a5e4:	60b9      	str	r1, [r7, #8]
 800a5e6:	607a      	str	r2, [r7, #4]
 800a5e8:	2300      	movs	r3, #0
 800a5ea:	61bb      	str	r3, [r7, #24]
 800a5ec:	2300      	movs	r3, #0
 800a5ee:	61fb      	str	r3, [r7, #28]
 800a5f0:	2300      	movs	r3, #0
 800a5f2:	617b      	str	r3, [r7, #20]
 800a5f4:	68fb      	ldr	r3, [r7, #12]
 800a5f6:	7f1b      	ldrb	r3, [r3, #28]
 800a5f8:	2b01      	cmp	r3, #1
 800a5fa:	d101      	bne.n	800a600 <HAL_RTC_SetAlarm+0x24>
 800a5fc:	2302      	movs	r3, #2
 800a5fe:	e101      	b.n	800a804 <HAL_RTC_SetAlarm+0x228>
 800a600:	68fb      	ldr	r3, [r7, #12]
 800a602:	2201      	movs	r2, #1
 800a604:	771a      	strb	r2, [r3, #28]
 800a606:	68fb      	ldr	r3, [r7, #12]
 800a608:	2202      	movs	r2, #2
 800a60a:	775a      	strb	r2, [r3, #29]
 800a60c:	687b      	ldr	r3, [r7, #4]
 800a60e:	2b00      	cmp	r3, #0
 800a610:	d137      	bne.n	800a682 <HAL_RTC_SetAlarm+0xa6>
 800a612:	68fb      	ldr	r3, [r7, #12]
 800a614:	681b      	ldr	r3, [r3, #0]
 800a616:	689b      	ldr	r3, [r3, #8]
 800a618:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a61c:	2b00      	cmp	r3, #0
 800a61e:	d102      	bne.n	800a626 <HAL_RTC_SetAlarm+0x4a>
 800a620:	68bb      	ldr	r3, [r7, #8]
 800a622:	2200      	movs	r2, #0
 800a624:	731a      	strb	r2, [r3, #12]
 800a626:	68bb      	ldr	r3, [r7, #8]
 800a628:	781b      	ldrb	r3, [r3, #0]
 800a62a:	4618      	mov	r0, r3
 800a62c:	f000 f942 	bl	800a8b4 <RTC_ByteToBcd2>
 800a630:	4603      	mov	r3, r0
 800a632:	041c      	lsls	r4, r3, #16
 800a634:	68bb      	ldr	r3, [r7, #8]
 800a636:	785b      	ldrb	r3, [r3, #1]
 800a638:	4618      	mov	r0, r3
 800a63a:	f000 f93b 	bl	800a8b4 <RTC_ByteToBcd2>
 800a63e:	4603      	mov	r3, r0
 800a640:	021b      	lsls	r3, r3, #8
 800a642:	431c      	orrs	r4, r3
 800a644:	68bb      	ldr	r3, [r7, #8]
 800a646:	789b      	ldrb	r3, [r3, #2]
 800a648:	4618      	mov	r0, r3
 800a64a:	f000 f933 	bl	800a8b4 <RTC_ByteToBcd2>
 800a64e:	4603      	mov	r3, r0
 800a650:	ea44 0203 	orr.w	r2, r4, r3
 800a654:	68bb      	ldr	r3, [r7, #8]
 800a656:	7b1b      	ldrb	r3, [r3, #12]
 800a658:	041b      	lsls	r3, r3, #16
 800a65a:	ea42 0403 	orr.w	r4, r2, r3
 800a65e:	68bb      	ldr	r3, [r7, #8]
 800a660:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800a664:	4618      	mov	r0, r3
 800a666:	f000 f925 	bl	800a8b4 <RTC_ByteToBcd2>
 800a66a:	4603      	mov	r3, r0
 800a66c:	061b      	lsls	r3, r3, #24
 800a66e:	ea44 0203 	orr.w	r2, r4, r3
 800a672:	68bb      	ldr	r3, [r7, #8]
 800a674:	6a1b      	ldr	r3, [r3, #32]
 800a676:	431a      	orrs	r2, r3
 800a678:	68bb      	ldr	r3, [r7, #8]
 800a67a:	699b      	ldr	r3, [r3, #24]
 800a67c:	4313      	orrs	r3, r2
 800a67e:	61fb      	str	r3, [r7, #28]
 800a680:	e023      	b.n	800a6ca <HAL_RTC_SetAlarm+0xee>
 800a682:	68fb      	ldr	r3, [r7, #12]
 800a684:	681b      	ldr	r3, [r3, #0]
 800a686:	689b      	ldr	r3, [r3, #8]
 800a688:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a68c:	2b00      	cmp	r3, #0
 800a68e:	d102      	bne.n	800a696 <HAL_RTC_SetAlarm+0xba>
 800a690:	68bb      	ldr	r3, [r7, #8]
 800a692:	2200      	movs	r2, #0
 800a694:	731a      	strb	r2, [r3, #12]
 800a696:	68bb      	ldr	r3, [r7, #8]
 800a698:	781b      	ldrb	r3, [r3, #0]
 800a69a:	041a      	lsls	r2, r3, #16
 800a69c:	68bb      	ldr	r3, [r7, #8]
 800a69e:	785b      	ldrb	r3, [r3, #1]
 800a6a0:	021b      	lsls	r3, r3, #8
 800a6a2:	4313      	orrs	r3, r2
 800a6a4:	68ba      	ldr	r2, [r7, #8]
 800a6a6:	7892      	ldrb	r2, [r2, #2]
 800a6a8:	431a      	orrs	r2, r3
 800a6aa:	68bb      	ldr	r3, [r7, #8]
 800a6ac:	7b1b      	ldrb	r3, [r3, #12]
 800a6ae:	041b      	lsls	r3, r3, #16
 800a6b0:	431a      	orrs	r2, r3
 800a6b2:	68bb      	ldr	r3, [r7, #8]
 800a6b4:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800a6b8:	061b      	lsls	r3, r3, #24
 800a6ba:	431a      	orrs	r2, r3
 800a6bc:	68bb      	ldr	r3, [r7, #8]
 800a6be:	6a1b      	ldr	r3, [r3, #32]
 800a6c0:	431a      	orrs	r2, r3
 800a6c2:	68bb      	ldr	r3, [r7, #8]
 800a6c4:	699b      	ldr	r3, [r3, #24]
 800a6c6:	4313      	orrs	r3, r2
 800a6c8:	61fb      	str	r3, [r7, #28]
 800a6ca:	68bb      	ldr	r3, [r7, #8]
 800a6cc:	685a      	ldr	r2, [r3, #4]
 800a6ce:	68bb      	ldr	r3, [r7, #8]
 800a6d0:	69db      	ldr	r3, [r3, #28]
 800a6d2:	4313      	orrs	r3, r2
 800a6d4:	617b      	str	r3, [r7, #20]
 800a6d6:	68fb      	ldr	r3, [r7, #12]
 800a6d8:	681b      	ldr	r3, [r3, #0]
 800a6da:	22ca      	movs	r2, #202	; 0xca
 800a6dc:	625a      	str	r2, [r3, #36]	; 0x24
 800a6de:	68fb      	ldr	r3, [r7, #12]
 800a6e0:	681b      	ldr	r3, [r3, #0]
 800a6e2:	2253      	movs	r2, #83	; 0x53
 800a6e4:	625a      	str	r2, [r3, #36]	; 0x24
 800a6e6:	68bb      	ldr	r3, [r7, #8]
 800a6e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a6ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a6ee:	d13f      	bne.n	800a770 <HAL_RTC_SetAlarm+0x194>
 800a6f0:	68fb      	ldr	r3, [r7, #12]
 800a6f2:	681b      	ldr	r3, [r3, #0]
 800a6f4:	689a      	ldr	r2, [r3, #8]
 800a6f6:	68fb      	ldr	r3, [r7, #12]
 800a6f8:	681b      	ldr	r3, [r3, #0]
 800a6fa:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a6fe:	609a      	str	r2, [r3, #8]
 800a700:	68fb      	ldr	r3, [r7, #12]
 800a702:	681b      	ldr	r3, [r3, #0]
 800a704:	689a      	ldr	r2, [r3, #8]
 800a706:	68fb      	ldr	r3, [r7, #12]
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800a70e:	609a      	str	r2, [r3, #8]
 800a710:	f7fb fe44 	bl	800639c <HAL_GetTick>
 800a714:	61b8      	str	r0, [r7, #24]
 800a716:	e013      	b.n	800a740 <HAL_RTC_SetAlarm+0x164>
 800a718:	f7fb fe40 	bl	800639c <HAL_GetTick>
 800a71c:	4602      	mov	r2, r0
 800a71e:	69bb      	ldr	r3, [r7, #24]
 800a720:	1ad3      	subs	r3, r2, r3
 800a722:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a726:	d90b      	bls.n	800a740 <HAL_RTC_SetAlarm+0x164>
 800a728:	68fb      	ldr	r3, [r7, #12]
 800a72a:	681b      	ldr	r3, [r3, #0]
 800a72c:	22ff      	movs	r2, #255	; 0xff
 800a72e:	625a      	str	r2, [r3, #36]	; 0x24
 800a730:	68fb      	ldr	r3, [r7, #12]
 800a732:	2203      	movs	r2, #3
 800a734:	775a      	strb	r2, [r3, #29]
 800a736:	68fb      	ldr	r3, [r7, #12]
 800a738:	2200      	movs	r2, #0
 800a73a:	771a      	strb	r2, [r3, #28]
 800a73c:	2303      	movs	r3, #3
 800a73e:	e061      	b.n	800a804 <HAL_RTC_SetAlarm+0x228>
 800a740:	68fb      	ldr	r3, [r7, #12]
 800a742:	681b      	ldr	r3, [r3, #0]
 800a744:	68db      	ldr	r3, [r3, #12]
 800a746:	f003 0301 	and.w	r3, r3, #1
 800a74a:	2b00      	cmp	r3, #0
 800a74c:	d0e4      	beq.n	800a718 <HAL_RTC_SetAlarm+0x13c>
 800a74e:	68fb      	ldr	r3, [r7, #12]
 800a750:	681b      	ldr	r3, [r3, #0]
 800a752:	69fa      	ldr	r2, [r7, #28]
 800a754:	61da      	str	r2, [r3, #28]
 800a756:	68fb      	ldr	r3, [r7, #12]
 800a758:	681b      	ldr	r3, [r3, #0]
 800a75a:	697a      	ldr	r2, [r7, #20]
 800a75c:	645a      	str	r2, [r3, #68]	; 0x44
 800a75e:	68fb      	ldr	r3, [r7, #12]
 800a760:	681b      	ldr	r3, [r3, #0]
 800a762:	689a      	ldr	r2, [r3, #8]
 800a764:	68fb      	ldr	r3, [r7, #12]
 800a766:	681b      	ldr	r3, [r3, #0]
 800a768:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a76c:	609a      	str	r2, [r3, #8]
 800a76e:	e03e      	b.n	800a7ee <HAL_RTC_SetAlarm+0x212>
 800a770:	68fb      	ldr	r3, [r7, #12]
 800a772:	681b      	ldr	r3, [r3, #0]
 800a774:	689a      	ldr	r2, [r3, #8]
 800a776:	68fb      	ldr	r3, [r7, #12]
 800a778:	681b      	ldr	r3, [r3, #0]
 800a77a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800a77e:	609a      	str	r2, [r3, #8]
 800a780:	68fb      	ldr	r3, [r7, #12]
 800a782:	681b      	ldr	r3, [r3, #0]
 800a784:	689a      	ldr	r2, [r3, #8]
 800a786:	68fb      	ldr	r3, [r7, #12]
 800a788:	681b      	ldr	r3, [r3, #0]
 800a78a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a78e:	609a      	str	r2, [r3, #8]
 800a790:	f7fb fe04 	bl	800639c <HAL_GetTick>
 800a794:	61b8      	str	r0, [r7, #24]
 800a796:	e013      	b.n	800a7c0 <HAL_RTC_SetAlarm+0x1e4>
 800a798:	f7fb fe00 	bl	800639c <HAL_GetTick>
 800a79c:	4602      	mov	r2, r0
 800a79e:	69bb      	ldr	r3, [r7, #24]
 800a7a0:	1ad3      	subs	r3, r2, r3
 800a7a2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a7a6:	d90b      	bls.n	800a7c0 <HAL_RTC_SetAlarm+0x1e4>
 800a7a8:	68fb      	ldr	r3, [r7, #12]
 800a7aa:	681b      	ldr	r3, [r3, #0]
 800a7ac:	22ff      	movs	r2, #255	; 0xff
 800a7ae:	625a      	str	r2, [r3, #36]	; 0x24
 800a7b0:	68fb      	ldr	r3, [r7, #12]
 800a7b2:	2203      	movs	r2, #3
 800a7b4:	775a      	strb	r2, [r3, #29]
 800a7b6:	68fb      	ldr	r3, [r7, #12]
 800a7b8:	2200      	movs	r2, #0
 800a7ba:	771a      	strb	r2, [r3, #28]
 800a7bc:	2303      	movs	r3, #3
 800a7be:	e021      	b.n	800a804 <HAL_RTC_SetAlarm+0x228>
 800a7c0:	68fb      	ldr	r3, [r7, #12]
 800a7c2:	681b      	ldr	r3, [r3, #0]
 800a7c4:	68db      	ldr	r3, [r3, #12]
 800a7c6:	f003 0302 	and.w	r3, r3, #2
 800a7ca:	2b00      	cmp	r3, #0
 800a7cc:	d0e4      	beq.n	800a798 <HAL_RTC_SetAlarm+0x1bc>
 800a7ce:	68fb      	ldr	r3, [r7, #12]
 800a7d0:	681b      	ldr	r3, [r3, #0]
 800a7d2:	69fa      	ldr	r2, [r7, #28]
 800a7d4:	621a      	str	r2, [r3, #32]
 800a7d6:	68fb      	ldr	r3, [r7, #12]
 800a7d8:	681b      	ldr	r3, [r3, #0]
 800a7da:	697a      	ldr	r2, [r7, #20]
 800a7dc:	649a      	str	r2, [r3, #72]	; 0x48
 800a7de:	68fb      	ldr	r3, [r7, #12]
 800a7e0:	681b      	ldr	r3, [r3, #0]
 800a7e2:	689a      	ldr	r2, [r3, #8]
 800a7e4:	68fb      	ldr	r3, [r7, #12]
 800a7e6:	681b      	ldr	r3, [r3, #0]
 800a7e8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a7ec:	609a      	str	r2, [r3, #8]
 800a7ee:	68fb      	ldr	r3, [r7, #12]
 800a7f0:	681b      	ldr	r3, [r3, #0]
 800a7f2:	22ff      	movs	r2, #255	; 0xff
 800a7f4:	625a      	str	r2, [r3, #36]	; 0x24
 800a7f6:	68fb      	ldr	r3, [r7, #12]
 800a7f8:	2201      	movs	r2, #1
 800a7fa:	775a      	strb	r2, [r3, #29]
 800a7fc:	68fb      	ldr	r3, [r7, #12]
 800a7fe:	2200      	movs	r2, #0
 800a800:	771a      	strb	r2, [r3, #28]
 800a802:	2300      	movs	r3, #0
 800a804:	4618      	mov	r0, r3
 800a806:	3724      	adds	r7, #36	; 0x24
 800a808:	46bd      	mov	sp, r7
 800a80a:	bd90      	pop	{r4, r7, pc}

0800a80c <HAL_RTC_WaitForSynchro>:
 800a80c:	b580      	push	{r7, lr}
 800a80e:	b084      	sub	sp, #16
 800a810:	af00      	add	r7, sp, #0
 800a812:	6078      	str	r0, [r7, #4]
 800a814:	2300      	movs	r3, #0
 800a816:	60fb      	str	r3, [r7, #12]
 800a818:	687b      	ldr	r3, [r7, #4]
 800a81a:	681b      	ldr	r3, [r3, #0]
 800a81c:	68da      	ldr	r2, [r3, #12]
 800a81e:	687b      	ldr	r3, [r7, #4]
 800a820:	681b      	ldr	r3, [r3, #0]
 800a822:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
 800a826:	60da      	str	r2, [r3, #12]
 800a828:	f7fb fdb8 	bl	800639c <HAL_GetTick>
 800a82c:	60f8      	str	r0, [r7, #12]
 800a82e:	e009      	b.n	800a844 <HAL_RTC_WaitForSynchro+0x38>
 800a830:	f7fb fdb4 	bl	800639c <HAL_GetTick>
 800a834:	4602      	mov	r2, r0
 800a836:	68fb      	ldr	r3, [r7, #12]
 800a838:	1ad3      	subs	r3, r2, r3
 800a83a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a83e:	d901      	bls.n	800a844 <HAL_RTC_WaitForSynchro+0x38>
 800a840:	2303      	movs	r3, #3
 800a842:	e007      	b.n	800a854 <HAL_RTC_WaitForSynchro+0x48>
 800a844:	687b      	ldr	r3, [r7, #4]
 800a846:	681b      	ldr	r3, [r3, #0]
 800a848:	68db      	ldr	r3, [r3, #12]
 800a84a:	f003 0320 	and.w	r3, r3, #32
 800a84e:	2b00      	cmp	r3, #0
 800a850:	d0ee      	beq.n	800a830 <HAL_RTC_WaitForSynchro+0x24>
 800a852:	2300      	movs	r3, #0
 800a854:	4618      	mov	r0, r3
 800a856:	3710      	adds	r7, #16
 800a858:	46bd      	mov	sp, r7
 800a85a:	bd80      	pop	{r7, pc}

0800a85c <RTC_EnterInitMode>:
 800a85c:	b580      	push	{r7, lr}
 800a85e:	b084      	sub	sp, #16
 800a860:	af00      	add	r7, sp, #0
 800a862:	6078      	str	r0, [r7, #4]
 800a864:	2300      	movs	r3, #0
 800a866:	60fb      	str	r3, [r7, #12]
 800a868:	687b      	ldr	r3, [r7, #4]
 800a86a:	681b      	ldr	r3, [r3, #0]
 800a86c:	68db      	ldr	r3, [r3, #12]
 800a86e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a872:	2b00      	cmp	r3, #0
 800a874:	d119      	bne.n	800a8aa <RTC_EnterInitMode+0x4e>
 800a876:	687b      	ldr	r3, [r7, #4]
 800a878:	681b      	ldr	r3, [r3, #0]
 800a87a:	f04f 32ff 	mov.w	r2, #4294967295
 800a87e:	60da      	str	r2, [r3, #12]
 800a880:	f7fb fd8c 	bl	800639c <HAL_GetTick>
 800a884:	60f8      	str	r0, [r7, #12]
 800a886:	e009      	b.n	800a89c <RTC_EnterInitMode+0x40>
 800a888:	f7fb fd88 	bl	800639c <HAL_GetTick>
 800a88c:	4602      	mov	r2, r0
 800a88e:	68fb      	ldr	r3, [r7, #12]
 800a890:	1ad3      	subs	r3, r2, r3
 800a892:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a896:	d901      	bls.n	800a89c <RTC_EnterInitMode+0x40>
 800a898:	2303      	movs	r3, #3
 800a89a:	e007      	b.n	800a8ac <RTC_EnterInitMode+0x50>
 800a89c:	687b      	ldr	r3, [r7, #4]
 800a89e:	681b      	ldr	r3, [r3, #0]
 800a8a0:	68db      	ldr	r3, [r3, #12]
 800a8a2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a8a6:	2b00      	cmp	r3, #0
 800a8a8:	d0ee      	beq.n	800a888 <RTC_EnterInitMode+0x2c>
 800a8aa:	2300      	movs	r3, #0
 800a8ac:	4618      	mov	r0, r3
 800a8ae:	3710      	adds	r7, #16
 800a8b0:	46bd      	mov	sp, r7
 800a8b2:	bd80      	pop	{r7, pc}

0800a8b4 <RTC_ByteToBcd2>:
 800a8b4:	b480      	push	{r7}
 800a8b6:	b085      	sub	sp, #20
 800a8b8:	af00      	add	r7, sp, #0
 800a8ba:	4603      	mov	r3, r0
 800a8bc:	71fb      	strb	r3, [r7, #7]
 800a8be:	2300      	movs	r3, #0
 800a8c0:	60fb      	str	r3, [r7, #12]
 800a8c2:	e005      	b.n	800a8d0 <RTC_ByteToBcd2+0x1c>
 800a8c4:	68fb      	ldr	r3, [r7, #12]
 800a8c6:	3301      	adds	r3, #1
 800a8c8:	60fb      	str	r3, [r7, #12]
 800a8ca:	79fb      	ldrb	r3, [r7, #7]
 800a8cc:	3b0a      	subs	r3, #10
 800a8ce:	71fb      	strb	r3, [r7, #7]
 800a8d0:	79fb      	ldrb	r3, [r7, #7]
 800a8d2:	2b09      	cmp	r3, #9
 800a8d4:	d8f6      	bhi.n	800a8c4 <RTC_ByteToBcd2+0x10>
 800a8d6:	68fb      	ldr	r3, [r7, #12]
 800a8d8:	b2db      	uxtb	r3, r3
 800a8da:	011b      	lsls	r3, r3, #4
 800a8dc:	b2da      	uxtb	r2, r3
 800a8de:	79fb      	ldrb	r3, [r7, #7]
 800a8e0:	4313      	orrs	r3, r2
 800a8e2:	b2db      	uxtb	r3, r3
 800a8e4:	4618      	mov	r0, r3
 800a8e6:	3714      	adds	r7, #20
 800a8e8:	46bd      	mov	sp, r7
 800a8ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8ee:	4770      	bx	lr

0800a8f0 <HAL_RTCEx_SetTimeStamp>:
 800a8f0:	b480      	push	{r7}
 800a8f2:	b087      	sub	sp, #28
 800a8f4:	af00      	add	r7, sp, #0
 800a8f6:	60f8      	str	r0, [r7, #12]
 800a8f8:	60b9      	str	r1, [r7, #8]
 800a8fa:	607a      	str	r2, [r7, #4]
 800a8fc:	2300      	movs	r3, #0
 800a8fe:	617b      	str	r3, [r7, #20]
 800a900:	68fb      	ldr	r3, [r7, #12]
 800a902:	7f1b      	ldrb	r3, [r3, #28]
 800a904:	2b01      	cmp	r3, #1
 800a906:	d101      	bne.n	800a90c <HAL_RTCEx_SetTimeStamp+0x1c>
 800a908:	2302      	movs	r3, #2
 800a90a:	e03e      	b.n	800a98a <HAL_RTCEx_SetTimeStamp+0x9a>
 800a90c:	68fb      	ldr	r3, [r7, #12]
 800a90e:	2201      	movs	r2, #1
 800a910:	771a      	strb	r2, [r3, #28]
 800a912:	68fb      	ldr	r3, [r7, #12]
 800a914:	2202      	movs	r2, #2
 800a916:	775a      	strb	r2, [r3, #29]
 800a918:	68fb      	ldr	r3, [r7, #12]
 800a91a:	681b      	ldr	r3, [r3, #0]
 800a91c:	689a      	ldr	r2, [r3, #8]
 800a91e:	4b1e      	ldr	r3, [pc, #120]	; (800a998 <HAL_RTCEx_SetTimeStamp+0xa8>)
 800a920:	4013      	ands	r3, r2
 800a922:	617b      	str	r3, [r7, #20]
 800a924:	697a      	ldr	r2, [r7, #20]
 800a926:	68bb      	ldr	r3, [r7, #8]
 800a928:	4313      	orrs	r3, r2
 800a92a:	617b      	str	r3, [r7, #20]
 800a92c:	68fb      	ldr	r3, [r7, #12]
 800a92e:	681b      	ldr	r3, [r3, #0]
 800a930:	22ca      	movs	r2, #202	; 0xca
 800a932:	625a      	str	r2, [r3, #36]	; 0x24
 800a934:	68fb      	ldr	r3, [r7, #12]
 800a936:	681b      	ldr	r3, [r3, #0]
 800a938:	2253      	movs	r2, #83	; 0x53
 800a93a:	625a      	str	r2, [r3, #36]	; 0x24
 800a93c:	68fb      	ldr	r3, [r7, #12]
 800a93e:	681b      	ldr	r3, [r3, #0]
 800a940:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800a942:	68fb      	ldr	r3, [r7, #12]
 800a944:	681b      	ldr	r3, [r3, #0]
 800a946:	f022 0206 	bic.w	r2, r2, #6
 800a94a:	64da      	str	r2, [r3, #76]	; 0x4c
 800a94c:	68fb      	ldr	r3, [r7, #12]
 800a94e:	681b      	ldr	r3, [r3, #0]
 800a950:	6cd9      	ldr	r1, [r3, #76]	; 0x4c
 800a952:	68fb      	ldr	r3, [r7, #12]
 800a954:	681b      	ldr	r3, [r3, #0]
 800a956:	687a      	ldr	r2, [r7, #4]
 800a958:	430a      	orrs	r2, r1
 800a95a:	64da      	str	r2, [r3, #76]	; 0x4c
 800a95c:	68fb      	ldr	r3, [r7, #12]
 800a95e:	681b      	ldr	r3, [r3, #0]
 800a960:	697a      	ldr	r2, [r7, #20]
 800a962:	609a      	str	r2, [r3, #8]
 800a964:	68fb      	ldr	r3, [r7, #12]
 800a966:	681b      	ldr	r3, [r3, #0]
 800a968:	689a      	ldr	r2, [r3, #8]
 800a96a:	68fb      	ldr	r3, [r7, #12]
 800a96c:	681b      	ldr	r3, [r3, #0]
 800a96e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a972:	609a      	str	r2, [r3, #8]
 800a974:	68fb      	ldr	r3, [r7, #12]
 800a976:	681b      	ldr	r3, [r3, #0]
 800a978:	22ff      	movs	r2, #255	; 0xff
 800a97a:	625a      	str	r2, [r3, #36]	; 0x24
 800a97c:	68fb      	ldr	r3, [r7, #12]
 800a97e:	2201      	movs	r2, #1
 800a980:	775a      	strb	r2, [r3, #29]
 800a982:	68fb      	ldr	r3, [r7, #12]
 800a984:	2200      	movs	r2, #0
 800a986:	771a      	strb	r2, [r3, #28]
 800a988:	2300      	movs	r3, #0
 800a98a:	4618      	mov	r0, r3
 800a98c:	371c      	adds	r7, #28
 800a98e:	46bd      	mov	sp, r7
 800a990:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a994:	4770      	bx	lr
 800a996:	bf00      	nop
 800a998:	fffff7f7 	.word	0xfffff7f7

0800a99c <HAL_SDRAM_Init>:
 800a99c:	b580      	push	{r7, lr}
 800a99e:	b082      	sub	sp, #8
 800a9a0:	af00      	add	r7, sp, #0
 800a9a2:	6078      	str	r0, [r7, #4]
 800a9a4:	6039      	str	r1, [r7, #0]
 800a9a6:	687b      	ldr	r3, [r7, #4]
 800a9a8:	2b00      	cmp	r3, #0
 800a9aa:	d101      	bne.n	800a9b0 <HAL_SDRAM_Init+0x14>
 800a9ac:	2301      	movs	r3, #1
 800a9ae:	e025      	b.n	800a9fc <HAL_SDRAM_Init+0x60>
 800a9b0:	687b      	ldr	r3, [r7, #4]
 800a9b2:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800a9b6:	b2db      	uxtb	r3, r3
 800a9b8:	2b00      	cmp	r3, #0
 800a9ba:	d106      	bne.n	800a9ca <HAL_SDRAM_Init+0x2e>
 800a9bc:	687b      	ldr	r3, [r7, #4]
 800a9be:	2200      	movs	r2, #0
 800a9c0:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d
 800a9c4:	6878      	ldr	r0, [r7, #4]
 800a9c6:	f7fb fba5 	bl	8006114 <HAL_SDRAM_MspInit>
 800a9ca:	687b      	ldr	r3, [r7, #4]
 800a9cc:	2202      	movs	r2, #2
 800a9ce:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800a9d2:	687b      	ldr	r3, [r7, #4]
 800a9d4:	681a      	ldr	r2, [r3, #0]
 800a9d6:	687b      	ldr	r3, [r7, #4]
 800a9d8:	3304      	adds	r3, #4
 800a9da:	4619      	mov	r1, r3
 800a9dc:	4610      	mov	r0, r2
 800a9de:	f002 f955 	bl	800cc8c <FMC_SDRAM_Init>
 800a9e2:	687b      	ldr	r3, [r7, #4]
 800a9e4:	6818      	ldr	r0, [r3, #0]
 800a9e6:	687b      	ldr	r3, [r7, #4]
 800a9e8:	685b      	ldr	r3, [r3, #4]
 800a9ea:	461a      	mov	r2, r3
 800a9ec:	6839      	ldr	r1, [r7, #0]
 800a9ee:	f002 f9bf 	bl	800cd70 <FMC_SDRAM_Timing_Init>
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	2201      	movs	r2, #1
 800a9f6:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800a9fa:	2300      	movs	r3, #0
 800a9fc:	4618      	mov	r0, r3
 800a9fe:	3708      	adds	r7, #8
 800aa00:	46bd      	mov	sp, r7
 800aa02:	bd80      	pop	{r7, pc}

0800aa04 <HAL_SDRAM_SendCommand>:
 800aa04:	b580      	push	{r7, lr}
 800aa06:	b084      	sub	sp, #16
 800aa08:	af00      	add	r7, sp, #0
 800aa0a:	60f8      	str	r0, [r7, #12]
 800aa0c:	60b9      	str	r1, [r7, #8]
 800aa0e:	607a      	str	r2, [r7, #4]
 800aa10:	68fb      	ldr	r3, [r7, #12]
 800aa12:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800aa16:	b2db      	uxtb	r3, r3
 800aa18:	2b02      	cmp	r3, #2
 800aa1a:	d101      	bne.n	800aa20 <HAL_SDRAM_SendCommand+0x1c>
 800aa1c:	2302      	movs	r3, #2
 800aa1e:	e018      	b.n	800aa52 <HAL_SDRAM_SendCommand+0x4e>
 800aa20:	68fb      	ldr	r3, [r7, #12]
 800aa22:	2202      	movs	r2, #2
 800aa24:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa28:	68fb      	ldr	r3, [r7, #12]
 800aa2a:	681b      	ldr	r3, [r3, #0]
 800aa2c:	687a      	ldr	r2, [r7, #4]
 800aa2e:	68b9      	ldr	r1, [r7, #8]
 800aa30:	4618      	mov	r0, r3
 800aa32:	f002 fa1d 	bl	800ce70 <FMC_SDRAM_SendCommand>
 800aa36:	68bb      	ldr	r3, [r7, #8]
 800aa38:	681b      	ldr	r3, [r3, #0]
 800aa3a:	2b02      	cmp	r3, #2
 800aa3c:	d104      	bne.n	800aa48 <HAL_SDRAM_SendCommand+0x44>
 800aa3e:	68fb      	ldr	r3, [r7, #12]
 800aa40:	2205      	movs	r2, #5
 800aa42:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa46:	e003      	b.n	800aa50 <HAL_SDRAM_SendCommand+0x4c>
 800aa48:	68fb      	ldr	r3, [r7, #12]
 800aa4a:	2201      	movs	r2, #1
 800aa4c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa50:	2300      	movs	r3, #0
 800aa52:	4618      	mov	r0, r3
 800aa54:	3710      	adds	r7, #16
 800aa56:	46bd      	mov	sp, r7
 800aa58:	bd80      	pop	{r7, pc}

0800aa5a <HAL_SDRAM_ProgramRefreshRate>:
 800aa5a:	b580      	push	{r7, lr}
 800aa5c:	b082      	sub	sp, #8
 800aa5e:	af00      	add	r7, sp, #0
 800aa60:	6078      	str	r0, [r7, #4]
 800aa62:	6039      	str	r1, [r7, #0]
 800aa64:	687b      	ldr	r3, [r7, #4]
 800aa66:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800aa6a:	b2db      	uxtb	r3, r3
 800aa6c:	2b02      	cmp	r3, #2
 800aa6e:	d101      	bne.n	800aa74 <HAL_SDRAM_ProgramRefreshRate+0x1a>
 800aa70:	2302      	movs	r3, #2
 800aa72:	e00e      	b.n	800aa92 <HAL_SDRAM_ProgramRefreshRate+0x38>
 800aa74:	687b      	ldr	r3, [r7, #4]
 800aa76:	2202      	movs	r2, #2
 800aa78:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa7c:	687b      	ldr	r3, [r7, #4]
 800aa7e:	681b      	ldr	r3, [r3, #0]
 800aa80:	6839      	ldr	r1, [r7, #0]
 800aa82:	4618      	mov	r0, r3
 800aa84:	f002 fa15 	bl	800ceb2 <FMC_SDRAM_ProgramRefreshRate>
 800aa88:	687b      	ldr	r3, [r7, #4]
 800aa8a:	2201      	movs	r2, #1
 800aa8c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800aa90:	2300      	movs	r3, #0
 800aa92:	4618      	mov	r0, r3
 800aa94:	3708      	adds	r7, #8
 800aa96:	46bd      	mov	sp, r7
 800aa98:	bd80      	pop	{r7, pc}

0800aa9a <HAL_SPI_Init>:
 800aa9a:	b580      	push	{r7, lr}
 800aa9c:	b084      	sub	sp, #16
 800aa9e:	af00      	add	r7, sp, #0
 800aaa0:	6078      	str	r0, [r7, #4]
 800aaa2:	687b      	ldr	r3, [r7, #4]
 800aaa4:	2b00      	cmp	r3, #0
 800aaa6:	d101      	bne.n	800aaac <HAL_SPI_Init+0x12>
 800aaa8:	2301      	movs	r3, #1
 800aaaa:	e084      	b.n	800abb6 <HAL_SPI_Init+0x11c>
 800aaac:	687b      	ldr	r3, [r7, #4]
 800aaae:	2200      	movs	r2, #0
 800aab0:	629a      	str	r2, [r3, #40]	; 0x28
 800aab2:	687b      	ldr	r3, [r7, #4]
 800aab4:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 800aab8:	b2db      	uxtb	r3, r3
 800aaba:	2b00      	cmp	r3, #0
 800aabc:	d106      	bne.n	800aacc <HAL_SPI_Init+0x32>
 800aabe:	687b      	ldr	r3, [r7, #4]
 800aac0:	2200      	movs	r2, #0
 800aac2:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
 800aac6:	6878      	ldr	r0, [r7, #4]
 800aac8:	f7fb f888 	bl	8005bdc <HAL_SPI_MspInit>
 800aacc:	687b      	ldr	r3, [r7, #4]
 800aace:	2202      	movs	r2, #2
 800aad0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800aad4:	687b      	ldr	r3, [r7, #4]
 800aad6:	681b      	ldr	r3, [r3, #0]
 800aad8:	681a      	ldr	r2, [r3, #0]
 800aada:	687b      	ldr	r3, [r7, #4]
 800aadc:	681b      	ldr	r3, [r3, #0]
 800aade:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800aae2:	601a      	str	r2, [r3, #0]
 800aae4:	687b      	ldr	r3, [r7, #4]
 800aae6:	68db      	ldr	r3, [r3, #12]
 800aae8:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800aaec:	d902      	bls.n	800aaf4 <HAL_SPI_Init+0x5a>
 800aaee:	2300      	movs	r3, #0
 800aaf0:	60fb      	str	r3, [r7, #12]
 800aaf2:	e002      	b.n	800aafa <HAL_SPI_Init+0x60>
 800aaf4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800aaf8:	60fb      	str	r3, [r7, #12]
 800aafa:	687b      	ldr	r3, [r7, #4]
 800aafc:	68db      	ldr	r3, [r3, #12]
 800aafe:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 800ab02:	d007      	beq.n	800ab14 <HAL_SPI_Init+0x7a>
 800ab04:	687b      	ldr	r3, [r7, #4]
 800ab06:	68db      	ldr	r3, [r3, #12]
 800ab08:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800ab0c:	d002      	beq.n	800ab14 <HAL_SPI_Init+0x7a>
 800ab0e:	687b      	ldr	r3, [r7, #4]
 800ab10:	2200      	movs	r2, #0
 800ab12:	629a      	str	r2, [r3, #40]	; 0x28
 800ab14:	687b      	ldr	r3, [r7, #4]
 800ab16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ab18:	2b00      	cmp	r3, #0
 800ab1a:	d10b      	bne.n	800ab34 <HAL_SPI_Init+0x9a>
 800ab1c:	687b      	ldr	r3, [r7, #4]
 800ab1e:	68db      	ldr	r3, [r3, #12]
 800ab20:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 800ab24:	d903      	bls.n	800ab2e <HAL_SPI_Init+0x94>
 800ab26:	687b      	ldr	r3, [r7, #4]
 800ab28:	2202      	movs	r2, #2
 800ab2a:	631a      	str	r2, [r3, #48]	; 0x30
 800ab2c:	e002      	b.n	800ab34 <HAL_SPI_Init+0x9a>
 800ab2e:	687b      	ldr	r3, [r7, #4]
 800ab30:	2201      	movs	r2, #1
 800ab32:	631a      	str	r2, [r3, #48]	; 0x30
 800ab34:	687b      	ldr	r3, [r7, #4]
 800ab36:	685a      	ldr	r2, [r3, #4]
 800ab38:	687b      	ldr	r3, [r7, #4]
 800ab3a:	689b      	ldr	r3, [r3, #8]
 800ab3c:	431a      	orrs	r2, r3
 800ab3e:	687b      	ldr	r3, [r7, #4]
 800ab40:	691b      	ldr	r3, [r3, #16]
 800ab42:	431a      	orrs	r2, r3
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	695b      	ldr	r3, [r3, #20]
 800ab48:	431a      	orrs	r2, r3
 800ab4a:	687b      	ldr	r3, [r7, #4]
 800ab4c:	699b      	ldr	r3, [r3, #24]
 800ab4e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800ab52:	431a      	orrs	r2, r3
 800ab54:	687b      	ldr	r3, [r7, #4]
 800ab56:	69db      	ldr	r3, [r3, #28]
 800ab58:	431a      	orrs	r2, r3
 800ab5a:	687b      	ldr	r3, [r7, #4]
 800ab5c:	6a1b      	ldr	r3, [r3, #32]
 800ab5e:	ea42 0103 	orr.w	r1, r2, r3
 800ab62:	687b      	ldr	r3, [r7, #4]
 800ab64:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800ab66:	687b      	ldr	r3, [r7, #4]
 800ab68:	681b      	ldr	r3, [r3, #0]
 800ab6a:	430a      	orrs	r2, r1
 800ab6c:	601a      	str	r2, [r3, #0]
 800ab6e:	687b      	ldr	r3, [r7, #4]
 800ab70:	699b      	ldr	r3, [r3, #24]
 800ab72:	0c1b      	lsrs	r3, r3, #16
 800ab74:	f003 0204 	and.w	r2, r3, #4
 800ab78:	687b      	ldr	r3, [r7, #4]
 800ab7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab7c:	431a      	orrs	r2, r3
 800ab7e:	687b      	ldr	r3, [r7, #4]
 800ab80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ab82:	431a      	orrs	r2, r3
 800ab84:	687b      	ldr	r3, [r7, #4]
 800ab86:	68db      	ldr	r3, [r3, #12]
 800ab88:	ea42 0103 	orr.w	r1, r2, r3
 800ab8c:	687b      	ldr	r3, [r7, #4]
 800ab8e:	681b      	ldr	r3, [r3, #0]
 800ab90:	68fa      	ldr	r2, [r7, #12]
 800ab92:	430a      	orrs	r2, r1
 800ab94:	605a      	str	r2, [r3, #4]
 800ab96:	687b      	ldr	r3, [r7, #4]
 800ab98:	681b      	ldr	r3, [r3, #0]
 800ab9a:	69da      	ldr	r2, [r3, #28]
 800ab9c:	687b      	ldr	r3, [r7, #4]
 800ab9e:	681b      	ldr	r3, [r3, #0]
 800aba0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800aba4:	61da      	str	r2, [r3, #28]
 800aba6:	687b      	ldr	r3, [r7, #4]
 800aba8:	2200      	movs	r2, #0
 800abaa:	661a      	str	r2, [r3, #96]	; 0x60
 800abac:	687b      	ldr	r3, [r7, #4]
 800abae:	2201      	movs	r2, #1
 800abb0:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
 800abb4:	2300      	movs	r3, #0
 800abb6:	4618      	mov	r0, r3
 800abb8:	3710      	adds	r7, #16
 800abba:	46bd      	mov	sp, r7
 800abbc:	bd80      	pop	{r7, pc}

0800abbe <HAL_TIM_Base_Init>:
 800abbe:	b580      	push	{r7, lr}
 800abc0:	b082      	sub	sp, #8
 800abc2:	af00      	add	r7, sp, #0
 800abc4:	6078      	str	r0, [r7, #4]
 800abc6:	687b      	ldr	r3, [r7, #4]
 800abc8:	2b00      	cmp	r3, #0
 800abca:	d101      	bne.n	800abd0 <HAL_TIM_Base_Init+0x12>
 800abcc:	2301      	movs	r3, #1
 800abce:	e01d      	b.n	800ac0c <HAL_TIM_Base_Init+0x4e>
 800abd0:	687b      	ldr	r3, [r7, #4]
 800abd2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800abd6:	b2db      	uxtb	r3, r3
 800abd8:	2b00      	cmp	r3, #0
 800abda:	d106      	bne.n	800abea <HAL_TIM_Base_Init+0x2c>
 800abdc:	687b      	ldr	r3, [r7, #4]
 800abde:	2200      	movs	r2, #0
 800abe0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800abe4:	6878      	ldr	r0, [r7, #4]
 800abe6:	f7fb f86b 	bl	8005cc0 <HAL_TIM_Base_MspInit>
 800abea:	687b      	ldr	r3, [r7, #4]
 800abec:	2202      	movs	r2, #2
 800abee:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800abf2:	687b      	ldr	r3, [r7, #4]
 800abf4:	681a      	ldr	r2, [r3, #0]
 800abf6:	687b      	ldr	r3, [r7, #4]
 800abf8:	3304      	adds	r3, #4
 800abfa:	4619      	mov	r1, r3
 800abfc:	4610      	mov	r0, r2
 800abfe:	f000 fbc3 	bl	800b388 <TIM_Base_SetConfig>
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	2201      	movs	r2, #1
 800ac06:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ac0a:	2300      	movs	r3, #0
 800ac0c:	4618      	mov	r0, r3
 800ac0e:	3708      	adds	r7, #8
 800ac10:	46bd      	mov	sp, r7
 800ac12:	bd80      	pop	{r7, pc}

0800ac14 <HAL_TIM_Base_Start_IT>:
 800ac14:	b480      	push	{r7}
 800ac16:	b085      	sub	sp, #20
 800ac18:	af00      	add	r7, sp, #0
 800ac1a:	6078      	str	r0, [r7, #4]
 800ac1c:	687b      	ldr	r3, [r7, #4]
 800ac1e:	681b      	ldr	r3, [r3, #0]
 800ac20:	68da      	ldr	r2, [r3, #12]
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	681b      	ldr	r3, [r3, #0]
 800ac26:	f042 0201 	orr.w	r2, r2, #1
 800ac2a:	60da      	str	r2, [r3, #12]
 800ac2c:	687b      	ldr	r3, [r7, #4]
 800ac2e:	681b      	ldr	r3, [r3, #0]
 800ac30:	689a      	ldr	r2, [r3, #8]
 800ac32:	4b0c      	ldr	r3, [pc, #48]	; (800ac64 <HAL_TIM_Base_Start_IT+0x50>)
 800ac34:	4013      	ands	r3, r2
 800ac36:	60fb      	str	r3, [r7, #12]
 800ac38:	68fb      	ldr	r3, [r7, #12]
 800ac3a:	2b06      	cmp	r3, #6
 800ac3c:	d00b      	beq.n	800ac56 <HAL_TIM_Base_Start_IT+0x42>
 800ac3e:	68fb      	ldr	r3, [r7, #12]
 800ac40:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ac44:	d007      	beq.n	800ac56 <HAL_TIM_Base_Start_IT+0x42>
 800ac46:	687b      	ldr	r3, [r7, #4]
 800ac48:	681b      	ldr	r3, [r3, #0]
 800ac4a:	681a      	ldr	r2, [r3, #0]
 800ac4c:	687b      	ldr	r3, [r7, #4]
 800ac4e:	681b      	ldr	r3, [r3, #0]
 800ac50:	f042 0201 	orr.w	r2, r2, #1
 800ac54:	601a      	str	r2, [r3, #0]
 800ac56:	2300      	movs	r3, #0
 800ac58:	4618      	mov	r0, r3
 800ac5a:	3714      	adds	r7, #20
 800ac5c:	46bd      	mov	sp, r7
 800ac5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac62:	4770      	bx	lr
 800ac64:	00010007 	.word	0x00010007

0800ac68 <HAL_TIM_PWM_Init>:
 800ac68:	b580      	push	{r7, lr}
 800ac6a:	b082      	sub	sp, #8
 800ac6c:	af00      	add	r7, sp, #0
 800ac6e:	6078      	str	r0, [r7, #4]
 800ac70:	687b      	ldr	r3, [r7, #4]
 800ac72:	2b00      	cmp	r3, #0
 800ac74:	d101      	bne.n	800ac7a <HAL_TIM_PWM_Init+0x12>
 800ac76:	2301      	movs	r3, #1
 800ac78:	e01d      	b.n	800acb6 <HAL_TIM_PWM_Init+0x4e>
 800ac7a:	687b      	ldr	r3, [r7, #4]
 800ac7c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800ac80:	b2db      	uxtb	r3, r3
 800ac82:	2b00      	cmp	r3, #0
 800ac84:	d106      	bne.n	800ac94 <HAL_TIM_PWM_Init+0x2c>
 800ac86:	687b      	ldr	r3, [r7, #4]
 800ac88:	2200      	movs	r2, #0
 800ac8a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ac8e:	6878      	ldr	r0, [r7, #4]
 800ac90:	f000 f815 	bl	800acbe <HAL_TIM_PWM_MspInit>
 800ac94:	687b      	ldr	r3, [r7, #4]
 800ac96:	2202      	movs	r2, #2
 800ac98:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ac9c:	687b      	ldr	r3, [r7, #4]
 800ac9e:	681a      	ldr	r2, [r3, #0]
 800aca0:	687b      	ldr	r3, [r7, #4]
 800aca2:	3304      	adds	r3, #4
 800aca4:	4619      	mov	r1, r3
 800aca6:	4610      	mov	r0, r2
 800aca8:	f000 fb6e 	bl	800b388 <TIM_Base_SetConfig>
 800acac:	687b      	ldr	r3, [r7, #4]
 800acae:	2201      	movs	r2, #1
 800acb0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800acb4:	2300      	movs	r3, #0
 800acb6:	4618      	mov	r0, r3
 800acb8:	3708      	adds	r7, #8
 800acba:	46bd      	mov	sp, r7
 800acbc:	bd80      	pop	{r7, pc}

0800acbe <HAL_TIM_PWM_MspInit>:
 800acbe:	b480      	push	{r7}
 800acc0:	b083      	sub	sp, #12
 800acc2:	af00      	add	r7, sp, #0
 800acc4:	6078      	str	r0, [r7, #4]
 800acc6:	bf00      	nop
 800acc8:	370c      	adds	r7, #12
 800acca:	46bd      	mov	sp, r7
 800accc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acd0:	4770      	bx	lr

0800acd2 <HAL_TIM_IRQHandler>:
 800acd2:	b580      	push	{r7, lr}
 800acd4:	b082      	sub	sp, #8
 800acd6:	af00      	add	r7, sp, #0
 800acd8:	6078      	str	r0, [r7, #4]
 800acda:	687b      	ldr	r3, [r7, #4]
 800acdc:	681b      	ldr	r3, [r3, #0]
 800acde:	691b      	ldr	r3, [r3, #16]
 800ace0:	f003 0302 	and.w	r3, r3, #2
 800ace4:	2b02      	cmp	r3, #2
 800ace6:	d122      	bne.n	800ad2e <HAL_TIM_IRQHandler+0x5c>
 800ace8:	687b      	ldr	r3, [r7, #4]
 800acea:	681b      	ldr	r3, [r3, #0]
 800acec:	68db      	ldr	r3, [r3, #12]
 800acee:	f003 0302 	and.w	r3, r3, #2
 800acf2:	2b02      	cmp	r3, #2
 800acf4:	d11b      	bne.n	800ad2e <HAL_TIM_IRQHandler+0x5c>
 800acf6:	687b      	ldr	r3, [r7, #4]
 800acf8:	681b      	ldr	r3, [r3, #0]
 800acfa:	f06f 0202 	mvn.w	r2, #2
 800acfe:	611a      	str	r2, [r3, #16]
 800ad00:	687b      	ldr	r3, [r7, #4]
 800ad02:	2201      	movs	r2, #1
 800ad04:	771a      	strb	r2, [r3, #28]
 800ad06:	687b      	ldr	r3, [r7, #4]
 800ad08:	681b      	ldr	r3, [r3, #0]
 800ad0a:	699b      	ldr	r3, [r3, #24]
 800ad0c:	f003 0303 	and.w	r3, r3, #3
 800ad10:	2b00      	cmp	r3, #0
 800ad12:	d003      	beq.n	800ad1c <HAL_TIM_IRQHandler+0x4a>
 800ad14:	6878      	ldr	r0, [r7, #4]
 800ad16:	f000 fb19 	bl	800b34c <HAL_TIM_IC_CaptureCallback>
 800ad1a:	e005      	b.n	800ad28 <HAL_TIM_IRQHandler+0x56>
 800ad1c:	6878      	ldr	r0, [r7, #4]
 800ad1e:	f000 fb0b 	bl	800b338 <HAL_TIM_OC_DelayElapsedCallback>
 800ad22:	6878      	ldr	r0, [r7, #4]
 800ad24:	f000 fb1c 	bl	800b360 <HAL_TIM_PWM_PulseFinishedCallback>
 800ad28:	687b      	ldr	r3, [r7, #4]
 800ad2a:	2200      	movs	r2, #0
 800ad2c:	771a      	strb	r2, [r3, #28]
 800ad2e:	687b      	ldr	r3, [r7, #4]
 800ad30:	681b      	ldr	r3, [r3, #0]
 800ad32:	691b      	ldr	r3, [r3, #16]
 800ad34:	f003 0304 	and.w	r3, r3, #4
 800ad38:	2b04      	cmp	r3, #4
 800ad3a:	d122      	bne.n	800ad82 <HAL_TIM_IRQHandler+0xb0>
 800ad3c:	687b      	ldr	r3, [r7, #4]
 800ad3e:	681b      	ldr	r3, [r3, #0]
 800ad40:	68db      	ldr	r3, [r3, #12]
 800ad42:	f003 0304 	and.w	r3, r3, #4
 800ad46:	2b04      	cmp	r3, #4
 800ad48:	d11b      	bne.n	800ad82 <HAL_TIM_IRQHandler+0xb0>
 800ad4a:	687b      	ldr	r3, [r7, #4]
 800ad4c:	681b      	ldr	r3, [r3, #0]
 800ad4e:	f06f 0204 	mvn.w	r2, #4
 800ad52:	611a      	str	r2, [r3, #16]
 800ad54:	687b      	ldr	r3, [r7, #4]
 800ad56:	2202      	movs	r2, #2
 800ad58:	771a      	strb	r2, [r3, #28]
 800ad5a:	687b      	ldr	r3, [r7, #4]
 800ad5c:	681b      	ldr	r3, [r3, #0]
 800ad5e:	699b      	ldr	r3, [r3, #24]
 800ad60:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ad64:	2b00      	cmp	r3, #0
 800ad66:	d003      	beq.n	800ad70 <HAL_TIM_IRQHandler+0x9e>
 800ad68:	6878      	ldr	r0, [r7, #4]
 800ad6a:	f000 faef 	bl	800b34c <HAL_TIM_IC_CaptureCallback>
 800ad6e:	e005      	b.n	800ad7c <HAL_TIM_IRQHandler+0xaa>
 800ad70:	6878      	ldr	r0, [r7, #4]
 800ad72:	f000 fae1 	bl	800b338 <HAL_TIM_OC_DelayElapsedCallback>
 800ad76:	6878      	ldr	r0, [r7, #4]
 800ad78:	f000 faf2 	bl	800b360 <HAL_TIM_PWM_PulseFinishedCallback>
 800ad7c:	687b      	ldr	r3, [r7, #4]
 800ad7e:	2200      	movs	r2, #0
 800ad80:	771a      	strb	r2, [r3, #28]
 800ad82:	687b      	ldr	r3, [r7, #4]
 800ad84:	681b      	ldr	r3, [r3, #0]
 800ad86:	691b      	ldr	r3, [r3, #16]
 800ad88:	f003 0308 	and.w	r3, r3, #8
 800ad8c:	2b08      	cmp	r3, #8
 800ad8e:	d122      	bne.n	800add6 <HAL_TIM_IRQHandler+0x104>
 800ad90:	687b      	ldr	r3, [r7, #4]
 800ad92:	681b      	ldr	r3, [r3, #0]
 800ad94:	68db      	ldr	r3, [r3, #12]
 800ad96:	f003 0308 	and.w	r3, r3, #8
 800ad9a:	2b08      	cmp	r3, #8
 800ad9c:	d11b      	bne.n	800add6 <HAL_TIM_IRQHandler+0x104>
 800ad9e:	687b      	ldr	r3, [r7, #4]
 800ada0:	681b      	ldr	r3, [r3, #0]
 800ada2:	f06f 0208 	mvn.w	r2, #8
 800ada6:	611a      	str	r2, [r3, #16]
 800ada8:	687b      	ldr	r3, [r7, #4]
 800adaa:	2204      	movs	r2, #4
 800adac:	771a      	strb	r2, [r3, #28]
 800adae:	687b      	ldr	r3, [r7, #4]
 800adb0:	681b      	ldr	r3, [r3, #0]
 800adb2:	69db      	ldr	r3, [r3, #28]
 800adb4:	f003 0303 	and.w	r3, r3, #3
 800adb8:	2b00      	cmp	r3, #0
 800adba:	d003      	beq.n	800adc4 <HAL_TIM_IRQHandler+0xf2>
 800adbc:	6878      	ldr	r0, [r7, #4]
 800adbe:	f000 fac5 	bl	800b34c <HAL_TIM_IC_CaptureCallback>
 800adc2:	e005      	b.n	800add0 <HAL_TIM_IRQHandler+0xfe>
 800adc4:	6878      	ldr	r0, [r7, #4]
 800adc6:	f000 fab7 	bl	800b338 <HAL_TIM_OC_DelayElapsedCallback>
 800adca:	6878      	ldr	r0, [r7, #4]
 800adcc:	f000 fac8 	bl	800b360 <HAL_TIM_PWM_PulseFinishedCallback>
 800add0:	687b      	ldr	r3, [r7, #4]
 800add2:	2200      	movs	r2, #0
 800add4:	771a      	strb	r2, [r3, #28]
 800add6:	687b      	ldr	r3, [r7, #4]
 800add8:	681b      	ldr	r3, [r3, #0]
 800adda:	691b      	ldr	r3, [r3, #16]
 800addc:	f003 0310 	and.w	r3, r3, #16
 800ade0:	2b10      	cmp	r3, #16
 800ade2:	d122      	bne.n	800ae2a <HAL_TIM_IRQHandler+0x158>
 800ade4:	687b      	ldr	r3, [r7, #4]
 800ade6:	681b      	ldr	r3, [r3, #0]
 800ade8:	68db      	ldr	r3, [r3, #12]
 800adea:	f003 0310 	and.w	r3, r3, #16
 800adee:	2b10      	cmp	r3, #16
 800adf0:	d11b      	bne.n	800ae2a <HAL_TIM_IRQHandler+0x158>
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	681b      	ldr	r3, [r3, #0]
 800adf6:	f06f 0210 	mvn.w	r2, #16
 800adfa:	611a      	str	r2, [r3, #16]
 800adfc:	687b      	ldr	r3, [r7, #4]
 800adfe:	2208      	movs	r2, #8
 800ae00:	771a      	strb	r2, [r3, #28]
 800ae02:	687b      	ldr	r3, [r7, #4]
 800ae04:	681b      	ldr	r3, [r3, #0]
 800ae06:	69db      	ldr	r3, [r3, #28]
 800ae08:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ae0c:	2b00      	cmp	r3, #0
 800ae0e:	d003      	beq.n	800ae18 <HAL_TIM_IRQHandler+0x146>
 800ae10:	6878      	ldr	r0, [r7, #4]
 800ae12:	f000 fa9b 	bl	800b34c <HAL_TIM_IC_CaptureCallback>
 800ae16:	e005      	b.n	800ae24 <HAL_TIM_IRQHandler+0x152>
 800ae18:	6878      	ldr	r0, [r7, #4]
 800ae1a:	f000 fa8d 	bl	800b338 <HAL_TIM_OC_DelayElapsedCallback>
 800ae1e:	6878      	ldr	r0, [r7, #4]
 800ae20:	f000 fa9e 	bl	800b360 <HAL_TIM_PWM_PulseFinishedCallback>
 800ae24:	687b      	ldr	r3, [r7, #4]
 800ae26:	2200      	movs	r2, #0
 800ae28:	771a      	strb	r2, [r3, #28]
 800ae2a:	687b      	ldr	r3, [r7, #4]
 800ae2c:	681b      	ldr	r3, [r3, #0]
 800ae2e:	691b      	ldr	r3, [r3, #16]
 800ae30:	f003 0301 	and.w	r3, r3, #1
 800ae34:	2b01      	cmp	r3, #1
 800ae36:	d10e      	bne.n	800ae56 <HAL_TIM_IRQHandler+0x184>
 800ae38:	687b      	ldr	r3, [r7, #4]
 800ae3a:	681b      	ldr	r3, [r3, #0]
 800ae3c:	68db      	ldr	r3, [r3, #12]
 800ae3e:	f003 0301 	and.w	r3, r3, #1
 800ae42:	2b01      	cmp	r3, #1
 800ae44:	d107      	bne.n	800ae56 <HAL_TIM_IRQHandler+0x184>
 800ae46:	687b      	ldr	r3, [r7, #4]
 800ae48:	681b      	ldr	r3, [r3, #0]
 800ae4a:	f06f 0201 	mvn.w	r2, #1
 800ae4e:	611a      	str	r2, [r3, #16]
 800ae50:	6878      	ldr	r0, [r7, #4]
 800ae52:	f7f8 fddd 	bl	8003a10 <HAL_TIM_PeriodElapsedCallback>
 800ae56:	687b      	ldr	r3, [r7, #4]
 800ae58:	681b      	ldr	r3, [r3, #0]
 800ae5a:	691b      	ldr	r3, [r3, #16]
 800ae5c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ae60:	2b80      	cmp	r3, #128	; 0x80
 800ae62:	d10e      	bne.n	800ae82 <HAL_TIM_IRQHandler+0x1b0>
 800ae64:	687b      	ldr	r3, [r7, #4]
 800ae66:	681b      	ldr	r3, [r3, #0]
 800ae68:	68db      	ldr	r3, [r3, #12]
 800ae6a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ae6e:	2b80      	cmp	r3, #128	; 0x80
 800ae70:	d107      	bne.n	800ae82 <HAL_TIM_IRQHandler+0x1b0>
 800ae72:	687b      	ldr	r3, [r7, #4]
 800ae74:	681b      	ldr	r3, [r3, #0]
 800ae76:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ae7a:	611a      	str	r2, [r3, #16]
 800ae7c:	6878      	ldr	r0, [r7, #4]
 800ae7e:	f000 ffb9 	bl	800bdf4 <HAL_TIMEx_BreakCallback>
 800ae82:	687b      	ldr	r3, [r7, #4]
 800ae84:	681b      	ldr	r3, [r3, #0]
 800ae86:	691b      	ldr	r3, [r3, #16]
 800ae88:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ae8c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ae90:	d10e      	bne.n	800aeb0 <HAL_TIM_IRQHandler+0x1de>
 800ae92:	687b      	ldr	r3, [r7, #4]
 800ae94:	681b      	ldr	r3, [r3, #0]
 800ae96:	68db      	ldr	r3, [r3, #12]
 800ae98:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ae9c:	2b80      	cmp	r3, #128	; 0x80
 800ae9e:	d107      	bne.n	800aeb0 <HAL_TIM_IRQHandler+0x1de>
 800aea0:	687b      	ldr	r3, [r7, #4]
 800aea2:	681b      	ldr	r3, [r3, #0]
 800aea4:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800aea8:	611a      	str	r2, [r3, #16]
 800aeaa:	6878      	ldr	r0, [r7, #4]
 800aeac:	f000 ffac 	bl	800be08 <HAL_TIMEx_Break2Callback>
 800aeb0:	687b      	ldr	r3, [r7, #4]
 800aeb2:	681b      	ldr	r3, [r3, #0]
 800aeb4:	691b      	ldr	r3, [r3, #16]
 800aeb6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aeba:	2b40      	cmp	r3, #64	; 0x40
 800aebc:	d10e      	bne.n	800aedc <HAL_TIM_IRQHandler+0x20a>
 800aebe:	687b      	ldr	r3, [r7, #4]
 800aec0:	681b      	ldr	r3, [r3, #0]
 800aec2:	68db      	ldr	r3, [r3, #12]
 800aec4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aec8:	2b40      	cmp	r3, #64	; 0x40
 800aeca:	d107      	bne.n	800aedc <HAL_TIM_IRQHandler+0x20a>
 800aecc:	687b      	ldr	r3, [r7, #4]
 800aece:	681b      	ldr	r3, [r3, #0]
 800aed0:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800aed4:	611a      	str	r2, [r3, #16]
 800aed6:	6878      	ldr	r0, [r7, #4]
 800aed8:	f000 fa4c 	bl	800b374 <HAL_TIM_TriggerCallback>
 800aedc:	687b      	ldr	r3, [r7, #4]
 800aede:	681b      	ldr	r3, [r3, #0]
 800aee0:	691b      	ldr	r3, [r3, #16]
 800aee2:	f003 0320 	and.w	r3, r3, #32
 800aee6:	2b20      	cmp	r3, #32
 800aee8:	d10e      	bne.n	800af08 <HAL_TIM_IRQHandler+0x236>
 800aeea:	687b      	ldr	r3, [r7, #4]
 800aeec:	681b      	ldr	r3, [r3, #0]
 800aeee:	68db      	ldr	r3, [r3, #12]
 800aef0:	f003 0320 	and.w	r3, r3, #32
 800aef4:	2b20      	cmp	r3, #32
 800aef6:	d107      	bne.n	800af08 <HAL_TIM_IRQHandler+0x236>
 800aef8:	687b      	ldr	r3, [r7, #4]
 800aefa:	681b      	ldr	r3, [r3, #0]
 800aefc:	f06f 0220 	mvn.w	r2, #32
 800af00:	611a      	str	r2, [r3, #16]
 800af02:	6878      	ldr	r0, [r7, #4]
 800af04:	f000 ff6c 	bl	800bde0 <HAL_TIMEx_CommutCallback>
 800af08:	bf00      	nop
 800af0a:	3708      	adds	r7, #8
 800af0c:	46bd      	mov	sp, r7
 800af0e:	bd80      	pop	{r7, pc}

0800af10 <HAL_TIM_PWM_ConfigChannel>:
 800af10:	b580      	push	{r7, lr}
 800af12:	b084      	sub	sp, #16
 800af14:	af00      	add	r7, sp, #0
 800af16:	60f8      	str	r0, [r7, #12]
 800af18:	60b9      	str	r1, [r7, #8]
 800af1a:	607a      	str	r2, [r7, #4]
 800af1c:	68fb      	ldr	r3, [r7, #12]
 800af1e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800af22:	2b01      	cmp	r3, #1
 800af24:	d101      	bne.n	800af2a <HAL_TIM_PWM_ConfigChannel+0x1a>
 800af26:	2302      	movs	r3, #2
 800af28:	e105      	b.n	800b136 <HAL_TIM_PWM_ConfigChannel+0x226>
 800af2a:	68fb      	ldr	r3, [r7, #12]
 800af2c:	2201      	movs	r2, #1
 800af2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800af32:	68fb      	ldr	r3, [r7, #12]
 800af34:	2202      	movs	r2, #2
 800af36:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800af3a:	687b      	ldr	r3, [r7, #4]
 800af3c:	2b14      	cmp	r3, #20
 800af3e:	f200 80f0 	bhi.w	800b122 <HAL_TIM_PWM_ConfigChannel+0x212>
 800af42:	a201      	add	r2, pc, #4	; (adr r2, 800af48 <HAL_TIM_PWM_ConfigChannel+0x38>)
 800af44:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800af48:	0800af9d 	.word	0x0800af9d
 800af4c:	0800b123 	.word	0x0800b123
 800af50:	0800b123 	.word	0x0800b123
 800af54:	0800b123 	.word	0x0800b123
 800af58:	0800afdd 	.word	0x0800afdd
 800af5c:	0800b123 	.word	0x0800b123
 800af60:	0800b123 	.word	0x0800b123
 800af64:	0800b123 	.word	0x0800b123
 800af68:	0800b01f 	.word	0x0800b01f
 800af6c:	0800b123 	.word	0x0800b123
 800af70:	0800b123 	.word	0x0800b123
 800af74:	0800b123 	.word	0x0800b123
 800af78:	0800b05f 	.word	0x0800b05f
 800af7c:	0800b123 	.word	0x0800b123
 800af80:	0800b123 	.word	0x0800b123
 800af84:	0800b123 	.word	0x0800b123
 800af88:	0800b0a1 	.word	0x0800b0a1
 800af8c:	0800b123 	.word	0x0800b123
 800af90:	0800b123 	.word	0x0800b123
 800af94:	0800b123 	.word	0x0800b123
 800af98:	0800b0e1 	.word	0x0800b0e1
 800af9c:	68fb      	ldr	r3, [r7, #12]
 800af9e:	681b      	ldr	r3, [r3, #0]
 800afa0:	68b9      	ldr	r1, [r7, #8]
 800afa2:	4618      	mov	r0, r3
 800afa4:	f000 fa90 	bl	800b4c8 <TIM_OC1_SetConfig>
 800afa8:	68fb      	ldr	r3, [r7, #12]
 800afaa:	681b      	ldr	r3, [r3, #0]
 800afac:	699a      	ldr	r2, [r3, #24]
 800afae:	68fb      	ldr	r3, [r7, #12]
 800afb0:	681b      	ldr	r3, [r3, #0]
 800afb2:	f042 0208 	orr.w	r2, r2, #8
 800afb6:	619a      	str	r2, [r3, #24]
 800afb8:	68fb      	ldr	r3, [r7, #12]
 800afba:	681b      	ldr	r3, [r3, #0]
 800afbc:	699a      	ldr	r2, [r3, #24]
 800afbe:	68fb      	ldr	r3, [r7, #12]
 800afc0:	681b      	ldr	r3, [r3, #0]
 800afc2:	f022 0204 	bic.w	r2, r2, #4
 800afc6:	619a      	str	r2, [r3, #24]
 800afc8:	68fb      	ldr	r3, [r7, #12]
 800afca:	681b      	ldr	r3, [r3, #0]
 800afcc:	6999      	ldr	r1, [r3, #24]
 800afce:	68bb      	ldr	r3, [r7, #8]
 800afd0:	691a      	ldr	r2, [r3, #16]
 800afd2:	68fb      	ldr	r3, [r7, #12]
 800afd4:	681b      	ldr	r3, [r3, #0]
 800afd6:	430a      	orrs	r2, r1
 800afd8:	619a      	str	r2, [r3, #24]
 800afda:	e0a3      	b.n	800b124 <HAL_TIM_PWM_ConfigChannel+0x214>
 800afdc:	68fb      	ldr	r3, [r7, #12]
 800afde:	681b      	ldr	r3, [r3, #0]
 800afe0:	68b9      	ldr	r1, [r7, #8]
 800afe2:	4618      	mov	r0, r3
 800afe4:	f000 fae2 	bl	800b5ac <TIM_OC2_SetConfig>
 800afe8:	68fb      	ldr	r3, [r7, #12]
 800afea:	681b      	ldr	r3, [r3, #0]
 800afec:	699a      	ldr	r2, [r3, #24]
 800afee:	68fb      	ldr	r3, [r7, #12]
 800aff0:	681b      	ldr	r3, [r3, #0]
 800aff2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aff6:	619a      	str	r2, [r3, #24]
 800aff8:	68fb      	ldr	r3, [r7, #12]
 800affa:	681b      	ldr	r3, [r3, #0]
 800affc:	699a      	ldr	r2, [r3, #24]
 800affe:	68fb      	ldr	r3, [r7, #12]
 800b000:	681b      	ldr	r3, [r3, #0]
 800b002:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b006:	619a      	str	r2, [r3, #24]
 800b008:	68fb      	ldr	r3, [r7, #12]
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	6999      	ldr	r1, [r3, #24]
 800b00e:	68bb      	ldr	r3, [r7, #8]
 800b010:	691b      	ldr	r3, [r3, #16]
 800b012:	021a      	lsls	r2, r3, #8
 800b014:	68fb      	ldr	r3, [r7, #12]
 800b016:	681b      	ldr	r3, [r3, #0]
 800b018:	430a      	orrs	r2, r1
 800b01a:	619a      	str	r2, [r3, #24]
 800b01c:	e082      	b.n	800b124 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b01e:	68fb      	ldr	r3, [r7, #12]
 800b020:	681b      	ldr	r3, [r3, #0]
 800b022:	68b9      	ldr	r1, [r7, #8]
 800b024:	4618      	mov	r0, r3
 800b026:	f000 fb39 	bl	800b69c <TIM_OC3_SetConfig>
 800b02a:	68fb      	ldr	r3, [r7, #12]
 800b02c:	681b      	ldr	r3, [r3, #0]
 800b02e:	69da      	ldr	r2, [r3, #28]
 800b030:	68fb      	ldr	r3, [r7, #12]
 800b032:	681b      	ldr	r3, [r3, #0]
 800b034:	f042 0208 	orr.w	r2, r2, #8
 800b038:	61da      	str	r2, [r3, #28]
 800b03a:	68fb      	ldr	r3, [r7, #12]
 800b03c:	681b      	ldr	r3, [r3, #0]
 800b03e:	69da      	ldr	r2, [r3, #28]
 800b040:	68fb      	ldr	r3, [r7, #12]
 800b042:	681b      	ldr	r3, [r3, #0]
 800b044:	f022 0204 	bic.w	r2, r2, #4
 800b048:	61da      	str	r2, [r3, #28]
 800b04a:	68fb      	ldr	r3, [r7, #12]
 800b04c:	681b      	ldr	r3, [r3, #0]
 800b04e:	69d9      	ldr	r1, [r3, #28]
 800b050:	68bb      	ldr	r3, [r7, #8]
 800b052:	691a      	ldr	r2, [r3, #16]
 800b054:	68fb      	ldr	r3, [r7, #12]
 800b056:	681b      	ldr	r3, [r3, #0]
 800b058:	430a      	orrs	r2, r1
 800b05a:	61da      	str	r2, [r3, #28]
 800b05c:	e062      	b.n	800b124 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b05e:	68fb      	ldr	r3, [r7, #12]
 800b060:	681b      	ldr	r3, [r3, #0]
 800b062:	68b9      	ldr	r1, [r7, #8]
 800b064:	4618      	mov	r0, r3
 800b066:	f000 fb8f 	bl	800b788 <TIM_OC4_SetConfig>
 800b06a:	68fb      	ldr	r3, [r7, #12]
 800b06c:	681b      	ldr	r3, [r3, #0]
 800b06e:	69da      	ldr	r2, [r3, #28]
 800b070:	68fb      	ldr	r3, [r7, #12]
 800b072:	681b      	ldr	r3, [r3, #0]
 800b074:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b078:	61da      	str	r2, [r3, #28]
 800b07a:	68fb      	ldr	r3, [r7, #12]
 800b07c:	681b      	ldr	r3, [r3, #0]
 800b07e:	69da      	ldr	r2, [r3, #28]
 800b080:	68fb      	ldr	r3, [r7, #12]
 800b082:	681b      	ldr	r3, [r3, #0]
 800b084:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b088:	61da      	str	r2, [r3, #28]
 800b08a:	68fb      	ldr	r3, [r7, #12]
 800b08c:	681b      	ldr	r3, [r3, #0]
 800b08e:	69d9      	ldr	r1, [r3, #28]
 800b090:	68bb      	ldr	r3, [r7, #8]
 800b092:	691b      	ldr	r3, [r3, #16]
 800b094:	021a      	lsls	r2, r3, #8
 800b096:	68fb      	ldr	r3, [r7, #12]
 800b098:	681b      	ldr	r3, [r3, #0]
 800b09a:	430a      	orrs	r2, r1
 800b09c:	61da      	str	r2, [r3, #28]
 800b09e:	e041      	b.n	800b124 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b0a0:	68fb      	ldr	r3, [r7, #12]
 800b0a2:	681b      	ldr	r3, [r3, #0]
 800b0a4:	68b9      	ldr	r1, [r7, #8]
 800b0a6:	4618      	mov	r0, r3
 800b0a8:	f000 fbc6 	bl	800b838 <TIM_OC5_SetConfig>
 800b0ac:	68fb      	ldr	r3, [r7, #12]
 800b0ae:	681b      	ldr	r3, [r3, #0]
 800b0b0:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b0b2:	68fb      	ldr	r3, [r7, #12]
 800b0b4:	681b      	ldr	r3, [r3, #0]
 800b0b6:	f042 0208 	orr.w	r2, r2, #8
 800b0ba:	655a      	str	r2, [r3, #84]	; 0x54
 800b0bc:	68fb      	ldr	r3, [r7, #12]
 800b0be:	681b      	ldr	r3, [r3, #0]
 800b0c0:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b0c2:	68fb      	ldr	r3, [r7, #12]
 800b0c4:	681b      	ldr	r3, [r3, #0]
 800b0c6:	f022 0204 	bic.w	r2, r2, #4
 800b0ca:	655a      	str	r2, [r3, #84]	; 0x54
 800b0cc:	68fb      	ldr	r3, [r7, #12]
 800b0ce:	681b      	ldr	r3, [r3, #0]
 800b0d0:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800b0d2:	68bb      	ldr	r3, [r7, #8]
 800b0d4:	691a      	ldr	r2, [r3, #16]
 800b0d6:	68fb      	ldr	r3, [r7, #12]
 800b0d8:	681b      	ldr	r3, [r3, #0]
 800b0da:	430a      	orrs	r2, r1
 800b0dc:	655a      	str	r2, [r3, #84]	; 0x54
 800b0de:	e021      	b.n	800b124 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b0e0:	68fb      	ldr	r3, [r7, #12]
 800b0e2:	681b      	ldr	r3, [r3, #0]
 800b0e4:	68b9      	ldr	r1, [r7, #8]
 800b0e6:	4618      	mov	r0, r3
 800b0e8:	f000 fbf8 	bl	800b8dc <TIM_OC6_SetConfig>
 800b0ec:	68fb      	ldr	r3, [r7, #12]
 800b0ee:	681b      	ldr	r3, [r3, #0]
 800b0f0:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b0f2:	68fb      	ldr	r3, [r7, #12]
 800b0f4:	681b      	ldr	r3, [r3, #0]
 800b0f6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b0fa:	655a      	str	r2, [r3, #84]	; 0x54
 800b0fc:	68fb      	ldr	r3, [r7, #12]
 800b0fe:	681b      	ldr	r3, [r3, #0]
 800b100:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b102:	68fb      	ldr	r3, [r7, #12]
 800b104:	681b      	ldr	r3, [r3, #0]
 800b106:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b10a:	655a      	str	r2, [r3, #84]	; 0x54
 800b10c:	68fb      	ldr	r3, [r7, #12]
 800b10e:	681b      	ldr	r3, [r3, #0]
 800b110:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800b112:	68bb      	ldr	r3, [r7, #8]
 800b114:	691b      	ldr	r3, [r3, #16]
 800b116:	021a      	lsls	r2, r3, #8
 800b118:	68fb      	ldr	r3, [r7, #12]
 800b11a:	681b      	ldr	r3, [r3, #0]
 800b11c:	430a      	orrs	r2, r1
 800b11e:	655a      	str	r2, [r3, #84]	; 0x54
 800b120:	e000      	b.n	800b124 <HAL_TIM_PWM_ConfigChannel+0x214>
 800b122:	bf00      	nop
 800b124:	68fb      	ldr	r3, [r7, #12]
 800b126:	2201      	movs	r2, #1
 800b128:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b12c:	68fb      	ldr	r3, [r7, #12]
 800b12e:	2200      	movs	r2, #0
 800b130:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b134:	2300      	movs	r3, #0
 800b136:	4618      	mov	r0, r3
 800b138:	3710      	adds	r7, #16
 800b13a:	46bd      	mov	sp, r7
 800b13c:	bd80      	pop	{r7, pc}
 800b13e:	bf00      	nop

0800b140 <HAL_TIM_ConfigClockSource>:
 800b140:	b580      	push	{r7, lr}
 800b142:	b084      	sub	sp, #16
 800b144:	af00      	add	r7, sp, #0
 800b146:	6078      	str	r0, [r7, #4]
 800b148:	6039      	str	r1, [r7, #0]
 800b14a:	687b      	ldr	r3, [r7, #4]
 800b14c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b150:	2b01      	cmp	r3, #1
 800b152:	d101      	bne.n	800b158 <HAL_TIM_ConfigClockSource+0x18>
 800b154:	2302      	movs	r3, #2
 800b156:	e0a6      	b.n	800b2a6 <HAL_TIM_ConfigClockSource+0x166>
 800b158:	687b      	ldr	r3, [r7, #4]
 800b15a:	2201      	movs	r2, #1
 800b15c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b160:	687b      	ldr	r3, [r7, #4]
 800b162:	2202      	movs	r2, #2
 800b164:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b168:	687b      	ldr	r3, [r7, #4]
 800b16a:	681b      	ldr	r3, [r3, #0]
 800b16c:	689b      	ldr	r3, [r3, #8]
 800b16e:	60fb      	str	r3, [r7, #12]
 800b170:	68fa      	ldr	r2, [r7, #12]
 800b172:	4b4f      	ldr	r3, [pc, #316]	; (800b2b0 <HAL_TIM_ConfigClockSource+0x170>)
 800b174:	4013      	ands	r3, r2
 800b176:	60fb      	str	r3, [r7, #12]
 800b178:	68fb      	ldr	r3, [r7, #12]
 800b17a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b17e:	60fb      	str	r3, [r7, #12]
 800b180:	687b      	ldr	r3, [r7, #4]
 800b182:	681b      	ldr	r3, [r3, #0]
 800b184:	68fa      	ldr	r2, [r7, #12]
 800b186:	609a      	str	r2, [r3, #8]
 800b188:	683b      	ldr	r3, [r7, #0]
 800b18a:	681b      	ldr	r3, [r3, #0]
 800b18c:	2b40      	cmp	r3, #64	; 0x40
 800b18e:	d067      	beq.n	800b260 <HAL_TIM_ConfigClockSource+0x120>
 800b190:	2b40      	cmp	r3, #64	; 0x40
 800b192:	d80b      	bhi.n	800b1ac <HAL_TIM_ConfigClockSource+0x6c>
 800b194:	2b10      	cmp	r3, #16
 800b196:	d073      	beq.n	800b280 <HAL_TIM_ConfigClockSource+0x140>
 800b198:	2b10      	cmp	r3, #16
 800b19a:	d802      	bhi.n	800b1a2 <HAL_TIM_ConfigClockSource+0x62>
 800b19c:	2b00      	cmp	r3, #0
 800b19e:	d06f      	beq.n	800b280 <HAL_TIM_ConfigClockSource+0x140>
 800b1a0:	e078      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b1a2:	2b20      	cmp	r3, #32
 800b1a4:	d06c      	beq.n	800b280 <HAL_TIM_ConfigClockSource+0x140>
 800b1a6:	2b30      	cmp	r3, #48	; 0x30
 800b1a8:	d06a      	beq.n	800b280 <HAL_TIM_ConfigClockSource+0x140>
 800b1aa:	e073      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b1ac:	2b70      	cmp	r3, #112	; 0x70
 800b1ae:	d00d      	beq.n	800b1cc <HAL_TIM_ConfigClockSource+0x8c>
 800b1b0:	2b70      	cmp	r3, #112	; 0x70
 800b1b2:	d804      	bhi.n	800b1be <HAL_TIM_ConfigClockSource+0x7e>
 800b1b4:	2b50      	cmp	r3, #80	; 0x50
 800b1b6:	d033      	beq.n	800b220 <HAL_TIM_ConfigClockSource+0xe0>
 800b1b8:	2b60      	cmp	r3, #96	; 0x60
 800b1ba:	d041      	beq.n	800b240 <HAL_TIM_ConfigClockSource+0x100>
 800b1bc:	e06a      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b1be:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b1c2:	d066      	beq.n	800b292 <HAL_TIM_ConfigClockSource+0x152>
 800b1c4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b1c8:	d017      	beq.n	800b1fa <HAL_TIM_ConfigClockSource+0xba>
 800b1ca:	e063      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b1cc:	687b      	ldr	r3, [r7, #4]
 800b1ce:	6818      	ldr	r0, [r3, #0]
 800b1d0:	683b      	ldr	r3, [r7, #0]
 800b1d2:	6899      	ldr	r1, [r3, #8]
 800b1d4:	683b      	ldr	r3, [r7, #0]
 800b1d6:	685a      	ldr	r2, [r3, #4]
 800b1d8:	683b      	ldr	r3, [r7, #0]
 800b1da:	68db      	ldr	r3, [r3, #12]
 800b1dc:	f000 fcd4 	bl	800bb88 <TIM_ETR_SetConfig>
 800b1e0:	687b      	ldr	r3, [r7, #4]
 800b1e2:	681b      	ldr	r3, [r3, #0]
 800b1e4:	689b      	ldr	r3, [r3, #8]
 800b1e6:	60fb      	str	r3, [r7, #12]
 800b1e8:	68fb      	ldr	r3, [r7, #12]
 800b1ea:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800b1ee:	60fb      	str	r3, [r7, #12]
 800b1f0:	687b      	ldr	r3, [r7, #4]
 800b1f2:	681b      	ldr	r3, [r3, #0]
 800b1f4:	68fa      	ldr	r2, [r7, #12]
 800b1f6:	609a      	str	r2, [r3, #8]
 800b1f8:	e04c      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b1fa:	687b      	ldr	r3, [r7, #4]
 800b1fc:	6818      	ldr	r0, [r3, #0]
 800b1fe:	683b      	ldr	r3, [r7, #0]
 800b200:	6899      	ldr	r1, [r3, #8]
 800b202:	683b      	ldr	r3, [r7, #0]
 800b204:	685a      	ldr	r2, [r3, #4]
 800b206:	683b      	ldr	r3, [r7, #0]
 800b208:	68db      	ldr	r3, [r3, #12]
 800b20a:	f000 fcbd 	bl	800bb88 <TIM_ETR_SetConfig>
 800b20e:	687b      	ldr	r3, [r7, #4]
 800b210:	681b      	ldr	r3, [r3, #0]
 800b212:	689a      	ldr	r2, [r3, #8]
 800b214:	687b      	ldr	r3, [r7, #4]
 800b216:	681b      	ldr	r3, [r3, #0]
 800b218:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b21c:	609a      	str	r2, [r3, #8]
 800b21e:	e039      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b220:	687b      	ldr	r3, [r7, #4]
 800b222:	6818      	ldr	r0, [r3, #0]
 800b224:	683b      	ldr	r3, [r7, #0]
 800b226:	6859      	ldr	r1, [r3, #4]
 800b228:	683b      	ldr	r3, [r7, #0]
 800b22a:	68db      	ldr	r3, [r3, #12]
 800b22c:	461a      	mov	r2, r3
 800b22e:	f000 fc31 	bl	800ba94 <TIM_TI1_ConfigInputStage>
 800b232:	687b      	ldr	r3, [r7, #4]
 800b234:	681b      	ldr	r3, [r3, #0]
 800b236:	2150      	movs	r1, #80	; 0x50
 800b238:	4618      	mov	r0, r3
 800b23a:	f000 fc8a 	bl	800bb52 <TIM_ITRx_SetConfig>
 800b23e:	e029      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b240:	687b      	ldr	r3, [r7, #4]
 800b242:	6818      	ldr	r0, [r3, #0]
 800b244:	683b      	ldr	r3, [r7, #0]
 800b246:	6859      	ldr	r1, [r3, #4]
 800b248:	683b      	ldr	r3, [r7, #0]
 800b24a:	68db      	ldr	r3, [r3, #12]
 800b24c:	461a      	mov	r2, r3
 800b24e:	f000 fc50 	bl	800baf2 <TIM_TI2_ConfigInputStage>
 800b252:	687b      	ldr	r3, [r7, #4]
 800b254:	681b      	ldr	r3, [r3, #0]
 800b256:	2160      	movs	r1, #96	; 0x60
 800b258:	4618      	mov	r0, r3
 800b25a:	f000 fc7a 	bl	800bb52 <TIM_ITRx_SetConfig>
 800b25e:	e019      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b260:	687b      	ldr	r3, [r7, #4]
 800b262:	6818      	ldr	r0, [r3, #0]
 800b264:	683b      	ldr	r3, [r7, #0]
 800b266:	6859      	ldr	r1, [r3, #4]
 800b268:	683b      	ldr	r3, [r7, #0]
 800b26a:	68db      	ldr	r3, [r3, #12]
 800b26c:	461a      	mov	r2, r3
 800b26e:	f000 fc11 	bl	800ba94 <TIM_TI1_ConfigInputStage>
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	681b      	ldr	r3, [r3, #0]
 800b276:	2140      	movs	r1, #64	; 0x40
 800b278:	4618      	mov	r0, r3
 800b27a:	f000 fc6a 	bl	800bb52 <TIM_ITRx_SetConfig>
 800b27e:	e009      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b280:	687b      	ldr	r3, [r7, #4]
 800b282:	681a      	ldr	r2, [r3, #0]
 800b284:	683b      	ldr	r3, [r7, #0]
 800b286:	681b      	ldr	r3, [r3, #0]
 800b288:	4619      	mov	r1, r3
 800b28a:	4610      	mov	r0, r2
 800b28c:	f000 fc61 	bl	800bb52 <TIM_ITRx_SetConfig>
 800b290:	e000      	b.n	800b294 <HAL_TIM_ConfigClockSource+0x154>
 800b292:	bf00      	nop
 800b294:	687b      	ldr	r3, [r7, #4]
 800b296:	2201      	movs	r2, #1
 800b298:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b29c:	687b      	ldr	r3, [r7, #4]
 800b29e:	2200      	movs	r2, #0
 800b2a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b2a4:	2300      	movs	r3, #0
 800b2a6:	4618      	mov	r0, r3
 800b2a8:	3710      	adds	r7, #16
 800b2aa:	46bd      	mov	sp, r7
 800b2ac:	bd80      	pop	{r7, pc}
 800b2ae:	bf00      	nop
 800b2b0:	fffeff88 	.word	0xfffeff88

0800b2b4 <HAL_TIM_SlaveConfigSynchro>:
 800b2b4:	b580      	push	{r7, lr}
 800b2b6:	b082      	sub	sp, #8
 800b2b8:	af00      	add	r7, sp, #0
 800b2ba:	6078      	str	r0, [r7, #4]
 800b2bc:	6039      	str	r1, [r7, #0]
 800b2be:	687b      	ldr	r3, [r7, #4]
 800b2c0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b2c4:	2b01      	cmp	r3, #1
 800b2c6:	d101      	bne.n	800b2cc <HAL_TIM_SlaveConfigSynchro+0x18>
 800b2c8:	2302      	movs	r3, #2
 800b2ca:	e031      	b.n	800b330 <HAL_TIM_SlaveConfigSynchro+0x7c>
 800b2cc:	687b      	ldr	r3, [r7, #4]
 800b2ce:	2201      	movs	r2, #1
 800b2d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b2d4:	687b      	ldr	r3, [r7, #4]
 800b2d6:	2202      	movs	r2, #2
 800b2d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b2dc:	6839      	ldr	r1, [r7, #0]
 800b2de:	6878      	ldr	r0, [r7, #4]
 800b2e0:	f000 fb50 	bl	800b984 <TIM_SlaveTimer_SetConfig>
 800b2e4:	4603      	mov	r3, r0
 800b2e6:	2b00      	cmp	r3, #0
 800b2e8:	d009      	beq.n	800b2fe <HAL_TIM_SlaveConfigSynchro+0x4a>
 800b2ea:	687b      	ldr	r3, [r7, #4]
 800b2ec:	2201      	movs	r2, #1
 800b2ee:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b2f2:	687b      	ldr	r3, [r7, #4]
 800b2f4:	2200      	movs	r2, #0
 800b2f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b2fa:	2301      	movs	r3, #1
 800b2fc:	e018      	b.n	800b330 <HAL_TIM_SlaveConfigSynchro+0x7c>
 800b2fe:	687b      	ldr	r3, [r7, #4]
 800b300:	681b      	ldr	r3, [r3, #0]
 800b302:	68da      	ldr	r2, [r3, #12]
 800b304:	687b      	ldr	r3, [r7, #4]
 800b306:	681b      	ldr	r3, [r3, #0]
 800b308:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b30c:	60da      	str	r2, [r3, #12]
 800b30e:	687b      	ldr	r3, [r7, #4]
 800b310:	681b      	ldr	r3, [r3, #0]
 800b312:	68da      	ldr	r2, [r3, #12]
 800b314:	687b      	ldr	r3, [r7, #4]
 800b316:	681b      	ldr	r3, [r3, #0]
 800b318:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800b31c:	60da      	str	r2, [r3, #12]
 800b31e:	687b      	ldr	r3, [r7, #4]
 800b320:	2201      	movs	r2, #1
 800b322:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b326:	687b      	ldr	r3, [r7, #4]
 800b328:	2200      	movs	r2, #0
 800b32a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b32e:	2300      	movs	r3, #0
 800b330:	4618      	mov	r0, r3
 800b332:	3708      	adds	r7, #8
 800b334:	46bd      	mov	sp, r7
 800b336:	bd80      	pop	{r7, pc}

0800b338 <HAL_TIM_OC_DelayElapsedCallback>:
 800b338:	b480      	push	{r7}
 800b33a:	b083      	sub	sp, #12
 800b33c:	af00      	add	r7, sp, #0
 800b33e:	6078      	str	r0, [r7, #4]
 800b340:	bf00      	nop
 800b342:	370c      	adds	r7, #12
 800b344:	46bd      	mov	sp, r7
 800b346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b34a:	4770      	bx	lr

0800b34c <HAL_TIM_IC_CaptureCallback>:
 800b34c:	b480      	push	{r7}
 800b34e:	b083      	sub	sp, #12
 800b350:	af00      	add	r7, sp, #0
 800b352:	6078      	str	r0, [r7, #4]
 800b354:	bf00      	nop
 800b356:	370c      	adds	r7, #12
 800b358:	46bd      	mov	sp, r7
 800b35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b35e:	4770      	bx	lr

0800b360 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b360:	b480      	push	{r7}
 800b362:	b083      	sub	sp, #12
 800b364:	af00      	add	r7, sp, #0
 800b366:	6078      	str	r0, [r7, #4]
 800b368:	bf00      	nop
 800b36a:	370c      	adds	r7, #12
 800b36c:	46bd      	mov	sp, r7
 800b36e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b372:	4770      	bx	lr

0800b374 <HAL_TIM_TriggerCallback>:
 800b374:	b480      	push	{r7}
 800b376:	b083      	sub	sp, #12
 800b378:	af00      	add	r7, sp, #0
 800b37a:	6078      	str	r0, [r7, #4]
 800b37c:	bf00      	nop
 800b37e:	370c      	adds	r7, #12
 800b380:	46bd      	mov	sp, r7
 800b382:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b386:	4770      	bx	lr

0800b388 <TIM_Base_SetConfig>:
 800b388:	b480      	push	{r7}
 800b38a:	b085      	sub	sp, #20
 800b38c:	af00      	add	r7, sp, #0
 800b38e:	6078      	str	r0, [r7, #4]
 800b390:	6039      	str	r1, [r7, #0]
 800b392:	687b      	ldr	r3, [r7, #4]
 800b394:	681b      	ldr	r3, [r3, #0]
 800b396:	60fb      	str	r3, [r7, #12]
 800b398:	687b      	ldr	r3, [r7, #4]
 800b39a:	4a40      	ldr	r2, [pc, #256]	; (800b49c <TIM_Base_SetConfig+0x114>)
 800b39c:	4293      	cmp	r3, r2
 800b39e:	d013      	beq.n	800b3c8 <TIM_Base_SetConfig+0x40>
 800b3a0:	687b      	ldr	r3, [r7, #4]
 800b3a2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b3a6:	d00f      	beq.n	800b3c8 <TIM_Base_SetConfig+0x40>
 800b3a8:	687b      	ldr	r3, [r7, #4]
 800b3aa:	4a3d      	ldr	r2, [pc, #244]	; (800b4a0 <TIM_Base_SetConfig+0x118>)
 800b3ac:	4293      	cmp	r3, r2
 800b3ae:	d00b      	beq.n	800b3c8 <TIM_Base_SetConfig+0x40>
 800b3b0:	687b      	ldr	r3, [r7, #4]
 800b3b2:	4a3c      	ldr	r2, [pc, #240]	; (800b4a4 <TIM_Base_SetConfig+0x11c>)
 800b3b4:	4293      	cmp	r3, r2
 800b3b6:	d007      	beq.n	800b3c8 <TIM_Base_SetConfig+0x40>
 800b3b8:	687b      	ldr	r3, [r7, #4]
 800b3ba:	4a3b      	ldr	r2, [pc, #236]	; (800b4a8 <TIM_Base_SetConfig+0x120>)
 800b3bc:	4293      	cmp	r3, r2
 800b3be:	d003      	beq.n	800b3c8 <TIM_Base_SetConfig+0x40>
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	4a3a      	ldr	r2, [pc, #232]	; (800b4ac <TIM_Base_SetConfig+0x124>)
 800b3c4:	4293      	cmp	r3, r2
 800b3c6:	d108      	bne.n	800b3da <TIM_Base_SetConfig+0x52>
 800b3c8:	68fb      	ldr	r3, [r7, #12]
 800b3ca:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b3ce:	60fb      	str	r3, [r7, #12]
 800b3d0:	683b      	ldr	r3, [r7, #0]
 800b3d2:	685b      	ldr	r3, [r3, #4]
 800b3d4:	68fa      	ldr	r2, [r7, #12]
 800b3d6:	4313      	orrs	r3, r2
 800b3d8:	60fb      	str	r3, [r7, #12]
 800b3da:	687b      	ldr	r3, [r7, #4]
 800b3dc:	4a2f      	ldr	r2, [pc, #188]	; (800b49c <TIM_Base_SetConfig+0x114>)
 800b3de:	4293      	cmp	r3, r2
 800b3e0:	d02b      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b3e2:	687b      	ldr	r3, [r7, #4]
 800b3e4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b3e8:	d027      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b3ea:	687b      	ldr	r3, [r7, #4]
 800b3ec:	4a2c      	ldr	r2, [pc, #176]	; (800b4a0 <TIM_Base_SetConfig+0x118>)
 800b3ee:	4293      	cmp	r3, r2
 800b3f0:	d023      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b3f2:	687b      	ldr	r3, [r7, #4]
 800b3f4:	4a2b      	ldr	r2, [pc, #172]	; (800b4a4 <TIM_Base_SetConfig+0x11c>)
 800b3f6:	4293      	cmp	r3, r2
 800b3f8:	d01f      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b3fa:	687b      	ldr	r3, [r7, #4]
 800b3fc:	4a2a      	ldr	r2, [pc, #168]	; (800b4a8 <TIM_Base_SetConfig+0x120>)
 800b3fe:	4293      	cmp	r3, r2
 800b400:	d01b      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b402:	687b      	ldr	r3, [r7, #4]
 800b404:	4a29      	ldr	r2, [pc, #164]	; (800b4ac <TIM_Base_SetConfig+0x124>)
 800b406:	4293      	cmp	r3, r2
 800b408:	d017      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b40a:	687b      	ldr	r3, [r7, #4]
 800b40c:	4a28      	ldr	r2, [pc, #160]	; (800b4b0 <TIM_Base_SetConfig+0x128>)
 800b40e:	4293      	cmp	r3, r2
 800b410:	d013      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	4a27      	ldr	r2, [pc, #156]	; (800b4b4 <TIM_Base_SetConfig+0x12c>)
 800b416:	4293      	cmp	r3, r2
 800b418:	d00f      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	4a26      	ldr	r2, [pc, #152]	; (800b4b8 <TIM_Base_SetConfig+0x130>)
 800b41e:	4293      	cmp	r3, r2
 800b420:	d00b      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	4a25      	ldr	r2, [pc, #148]	; (800b4bc <TIM_Base_SetConfig+0x134>)
 800b426:	4293      	cmp	r3, r2
 800b428:	d007      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b42a:	687b      	ldr	r3, [r7, #4]
 800b42c:	4a24      	ldr	r2, [pc, #144]	; (800b4c0 <TIM_Base_SetConfig+0x138>)
 800b42e:	4293      	cmp	r3, r2
 800b430:	d003      	beq.n	800b43a <TIM_Base_SetConfig+0xb2>
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	4a23      	ldr	r2, [pc, #140]	; (800b4c4 <TIM_Base_SetConfig+0x13c>)
 800b436:	4293      	cmp	r3, r2
 800b438:	d108      	bne.n	800b44c <TIM_Base_SetConfig+0xc4>
 800b43a:	68fb      	ldr	r3, [r7, #12]
 800b43c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b440:	60fb      	str	r3, [r7, #12]
 800b442:	683b      	ldr	r3, [r7, #0]
 800b444:	68db      	ldr	r3, [r3, #12]
 800b446:	68fa      	ldr	r2, [r7, #12]
 800b448:	4313      	orrs	r3, r2
 800b44a:	60fb      	str	r3, [r7, #12]
 800b44c:	68fb      	ldr	r3, [r7, #12]
 800b44e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800b452:	683b      	ldr	r3, [r7, #0]
 800b454:	695b      	ldr	r3, [r3, #20]
 800b456:	4313      	orrs	r3, r2
 800b458:	60fb      	str	r3, [r7, #12]
 800b45a:	687b      	ldr	r3, [r7, #4]
 800b45c:	68fa      	ldr	r2, [r7, #12]
 800b45e:	601a      	str	r2, [r3, #0]
 800b460:	683b      	ldr	r3, [r7, #0]
 800b462:	689a      	ldr	r2, [r3, #8]
 800b464:	687b      	ldr	r3, [r7, #4]
 800b466:	62da      	str	r2, [r3, #44]	; 0x2c
 800b468:	683b      	ldr	r3, [r7, #0]
 800b46a:	681a      	ldr	r2, [r3, #0]
 800b46c:	687b      	ldr	r3, [r7, #4]
 800b46e:	629a      	str	r2, [r3, #40]	; 0x28
 800b470:	687b      	ldr	r3, [r7, #4]
 800b472:	4a0a      	ldr	r2, [pc, #40]	; (800b49c <TIM_Base_SetConfig+0x114>)
 800b474:	4293      	cmp	r3, r2
 800b476:	d003      	beq.n	800b480 <TIM_Base_SetConfig+0xf8>
 800b478:	687b      	ldr	r3, [r7, #4]
 800b47a:	4a0c      	ldr	r2, [pc, #48]	; (800b4ac <TIM_Base_SetConfig+0x124>)
 800b47c:	4293      	cmp	r3, r2
 800b47e:	d103      	bne.n	800b488 <TIM_Base_SetConfig+0x100>
 800b480:	683b      	ldr	r3, [r7, #0]
 800b482:	691a      	ldr	r2, [r3, #16]
 800b484:	687b      	ldr	r3, [r7, #4]
 800b486:	631a      	str	r2, [r3, #48]	; 0x30
 800b488:	687b      	ldr	r3, [r7, #4]
 800b48a:	2201      	movs	r2, #1
 800b48c:	615a      	str	r2, [r3, #20]
 800b48e:	bf00      	nop
 800b490:	3714      	adds	r7, #20
 800b492:	46bd      	mov	sp, r7
 800b494:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b498:	4770      	bx	lr
 800b49a:	bf00      	nop
 800b49c:	40010000 	.word	0x40010000
 800b4a0:	40000400 	.word	0x40000400
 800b4a4:	40000800 	.word	0x40000800
 800b4a8:	40000c00 	.word	0x40000c00
 800b4ac:	40010400 	.word	0x40010400
 800b4b0:	40014000 	.word	0x40014000
 800b4b4:	40014400 	.word	0x40014400
 800b4b8:	40014800 	.word	0x40014800
 800b4bc:	40001800 	.word	0x40001800
 800b4c0:	40001c00 	.word	0x40001c00
 800b4c4:	40002000 	.word	0x40002000

0800b4c8 <TIM_OC1_SetConfig>:
 800b4c8:	b480      	push	{r7}
 800b4ca:	b087      	sub	sp, #28
 800b4cc:	af00      	add	r7, sp, #0
 800b4ce:	6078      	str	r0, [r7, #4]
 800b4d0:	6039      	str	r1, [r7, #0]
 800b4d2:	687b      	ldr	r3, [r7, #4]
 800b4d4:	6a1b      	ldr	r3, [r3, #32]
 800b4d6:	f023 0201 	bic.w	r2, r3, #1
 800b4da:	687b      	ldr	r3, [r7, #4]
 800b4dc:	621a      	str	r2, [r3, #32]
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	6a1b      	ldr	r3, [r3, #32]
 800b4e2:	617b      	str	r3, [r7, #20]
 800b4e4:	687b      	ldr	r3, [r7, #4]
 800b4e6:	685b      	ldr	r3, [r3, #4]
 800b4e8:	613b      	str	r3, [r7, #16]
 800b4ea:	687b      	ldr	r3, [r7, #4]
 800b4ec:	699b      	ldr	r3, [r3, #24]
 800b4ee:	60fb      	str	r3, [r7, #12]
 800b4f0:	68fa      	ldr	r2, [r7, #12]
 800b4f2:	4b2b      	ldr	r3, [pc, #172]	; (800b5a0 <TIM_OC1_SetConfig+0xd8>)
 800b4f4:	4013      	ands	r3, r2
 800b4f6:	60fb      	str	r3, [r7, #12]
 800b4f8:	68fb      	ldr	r3, [r7, #12]
 800b4fa:	f023 0303 	bic.w	r3, r3, #3
 800b4fe:	60fb      	str	r3, [r7, #12]
 800b500:	683b      	ldr	r3, [r7, #0]
 800b502:	681b      	ldr	r3, [r3, #0]
 800b504:	68fa      	ldr	r2, [r7, #12]
 800b506:	4313      	orrs	r3, r2
 800b508:	60fb      	str	r3, [r7, #12]
 800b50a:	697b      	ldr	r3, [r7, #20]
 800b50c:	f023 0302 	bic.w	r3, r3, #2
 800b510:	617b      	str	r3, [r7, #20]
 800b512:	683b      	ldr	r3, [r7, #0]
 800b514:	689b      	ldr	r3, [r3, #8]
 800b516:	697a      	ldr	r2, [r7, #20]
 800b518:	4313      	orrs	r3, r2
 800b51a:	617b      	str	r3, [r7, #20]
 800b51c:	687b      	ldr	r3, [r7, #4]
 800b51e:	4a21      	ldr	r2, [pc, #132]	; (800b5a4 <TIM_OC1_SetConfig+0xdc>)
 800b520:	4293      	cmp	r3, r2
 800b522:	d003      	beq.n	800b52c <TIM_OC1_SetConfig+0x64>
 800b524:	687b      	ldr	r3, [r7, #4]
 800b526:	4a20      	ldr	r2, [pc, #128]	; (800b5a8 <TIM_OC1_SetConfig+0xe0>)
 800b528:	4293      	cmp	r3, r2
 800b52a:	d10c      	bne.n	800b546 <TIM_OC1_SetConfig+0x7e>
 800b52c:	697b      	ldr	r3, [r7, #20]
 800b52e:	f023 0308 	bic.w	r3, r3, #8
 800b532:	617b      	str	r3, [r7, #20]
 800b534:	683b      	ldr	r3, [r7, #0]
 800b536:	68db      	ldr	r3, [r3, #12]
 800b538:	697a      	ldr	r2, [r7, #20]
 800b53a:	4313      	orrs	r3, r2
 800b53c:	617b      	str	r3, [r7, #20]
 800b53e:	697b      	ldr	r3, [r7, #20]
 800b540:	f023 0304 	bic.w	r3, r3, #4
 800b544:	617b      	str	r3, [r7, #20]
 800b546:	687b      	ldr	r3, [r7, #4]
 800b548:	4a16      	ldr	r2, [pc, #88]	; (800b5a4 <TIM_OC1_SetConfig+0xdc>)
 800b54a:	4293      	cmp	r3, r2
 800b54c:	d003      	beq.n	800b556 <TIM_OC1_SetConfig+0x8e>
 800b54e:	687b      	ldr	r3, [r7, #4]
 800b550:	4a15      	ldr	r2, [pc, #84]	; (800b5a8 <TIM_OC1_SetConfig+0xe0>)
 800b552:	4293      	cmp	r3, r2
 800b554:	d111      	bne.n	800b57a <TIM_OC1_SetConfig+0xb2>
 800b556:	693b      	ldr	r3, [r7, #16]
 800b558:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b55c:	613b      	str	r3, [r7, #16]
 800b55e:	693b      	ldr	r3, [r7, #16]
 800b560:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b564:	613b      	str	r3, [r7, #16]
 800b566:	683b      	ldr	r3, [r7, #0]
 800b568:	695b      	ldr	r3, [r3, #20]
 800b56a:	693a      	ldr	r2, [r7, #16]
 800b56c:	4313      	orrs	r3, r2
 800b56e:	613b      	str	r3, [r7, #16]
 800b570:	683b      	ldr	r3, [r7, #0]
 800b572:	699b      	ldr	r3, [r3, #24]
 800b574:	693a      	ldr	r2, [r7, #16]
 800b576:	4313      	orrs	r3, r2
 800b578:	613b      	str	r3, [r7, #16]
 800b57a:	687b      	ldr	r3, [r7, #4]
 800b57c:	693a      	ldr	r2, [r7, #16]
 800b57e:	605a      	str	r2, [r3, #4]
 800b580:	687b      	ldr	r3, [r7, #4]
 800b582:	68fa      	ldr	r2, [r7, #12]
 800b584:	619a      	str	r2, [r3, #24]
 800b586:	683b      	ldr	r3, [r7, #0]
 800b588:	685a      	ldr	r2, [r3, #4]
 800b58a:	687b      	ldr	r3, [r7, #4]
 800b58c:	635a      	str	r2, [r3, #52]	; 0x34
 800b58e:	687b      	ldr	r3, [r7, #4]
 800b590:	697a      	ldr	r2, [r7, #20]
 800b592:	621a      	str	r2, [r3, #32]
 800b594:	bf00      	nop
 800b596:	371c      	adds	r7, #28
 800b598:	46bd      	mov	sp, r7
 800b59a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b59e:	4770      	bx	lr
 800b5a0:	fffeff8f 	.word	0xfffeff8f
 800b5a4:	40010000 	.word	0x40010000
 800b5a8:	40010400 	.word	0x40010400

0800b5ac <TIM_OC2_SetConfig>:
 800b5ac:	b480      	push	{r7}
 800b5ae:	b087      	sub	sp, #28
 800b5b0:	af00      	add	r7, sp, #0
 800b5b2:	6078      	str	r0, [r7, #4]
 800b5b4:	6039      	str	r1, [r7, #0]
 800b5b6:	687b      	ldr	r3, [r7, #4]
 800b5b8:	6a1b      	ldr	r3, [r3, #32]
 800b5ba:	f023 0210 	bic.w	r2, r3, #16
 800b5be:	687b      	ldr	r3, [r7, #4]
 800b5c0:	621a      	str	r2, [r3, #32]
 800b5c2:	687b      	ldr	r3, [r7, #4]
 800b5c4:	6a1b      	ldr	r3, [r3, #32]
 800b5c6:	617b      	str	r3, [r7, #20]
 800b5c8:	687b      	ldr	r3, [r7, #4]
 800b5ca:	685b      	ldr	r3, [r3, #4]
 800b5cc:	613b      	str	r3, [r7, #16]
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	699b      	ldr	r3, [r3, #24]
 800b5d2:	60fb      	str	r3, [r7, #12]
 800b5d4:	68fa      	ldr	r2, [r7, #12]
 800b5d6:	4b2e      	ldr	r3, [pc, #184]	; (800b690 <TIM_OC2_SetConfig+0xe4>)
 800b5d8:	4013      	ands	r3, r2
 800b5da:	60fb      	str	r3, [r7, #12]
 800b5dc:	68fb      	ldr	r3, [r7, #12]
 800b5de:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b5e2:	60fb      	str	r3, [r7, #12]
 800b5e4:	683b      	ldr	r3, [r7, #0]
 800b5e6:	681b      	ldr	r3, [r3, #0]
 800b5e8:	021b      	lsls	r3, r3, #8
 800b5ea:	68fa      	ldr	r2, [r7, #12]
 800b5ec:	4313      	orrs	r3, r2
 800b5ee:	60fb      	str	r3, [r7, #12]
 800b5f0:	697b      	ldr	r3, [r7, #20]
 800b5f2:	f023 0320 	bic.w	r3, r3, #32
 800b5f6:	617b      	str	r3, [r7, #20]
 800b5f8:	683b      	ldr	r3, [r7, #0]
 800b5fa:	689b      	ldr	r3, [r3, #8]
 800b5fc:	011b      	lsls	r3, r3, #4
 800b5fe:	697a      	ldr	r2, [r7, #20]
 800b600:	4313      	orrs	r3, r2
 800b602:	617b      	str	r3, [r7, #20]
 800b604:	687b      	ldr	r3, [r7, #4]
 800b606:	4a23      	ldr	r2, [pc, #140]	; (800b694 <TIM_OC2_SetConfig+0xe8>)
 800b608:	4293      	cmp	r3, r2
 800b60a:	d003      	beq.n	800b614 <TIM_OC2_SetConfig+0x68>
 800b60c:	687b      	ldr	r3, [r7, #4]
 800b60e:	4a22      	ldr	r2, [pc, #136]	; (800b698 <TIM_OC2_SetConfig+0xec>)
 800b610:	4293      	cmp	r3, r2
 800b612:	d10d      	bne.n	800b630 <TIM_OC2_SetConfig+0x84>
 800b614:	697b      	ldr	r3, [r7, #20]
 800b616:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b61a:	617b      	str	r3, [r7, #20]
 800b61c:	683b      	ldr	r3, [r7, #0]
 800b61e:	68db      	ldr	r3, [r3, #12]
 800b620:	011b      	lsls	r3, r3, #4
 800b622:	697a      	ldr	r2, [r7, #20]
 800b624:	4313      	orrs	r3, r2
 800b626:	617b      	str	r3, [r7, #20]
 800b628:	697b      	ldr	r3, [r7, #20]
 800b62a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b62e:	617b      	str	r3, [r7, #20]
 800b630:	687b      	ldr	r3, [r7, #4]
 800b632:	4a18      	ldr	r2, [pc, #96]	; (800b694 <TIM_OC2_SetConfig+0xe8>)
 800b634:	4293      	cmp	r3, r2
 800b636:	d003      	beq.n	800b640 <TIM_OC2_SetConfig+0x94>
 800b638:	687b      	ldr	r3, [r7, #4]
 800b63a:	4a17      	ldr	r2, [pc, #92]	; (800b698 <TIM_OC2_SetConfig+0xec>)
 800b63c:	4293      	cmp	r3, r2
 800b63e:	d113      	bne.n	800b668 <TIM_OC2_SetConfig+0xbc>
 800b640:	693b      	ldr	r3, [r7, #16]
 800b642:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b646:	613b      	str	r3, [r7, #16]
 800b648:	693b      	ldr	r3, [r7, #16]
 800b64a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b64e:	613b      	str	r3, [r7, #16]
 800b650:	683b      	ldr	r3, [r7, #0]
 800b652:	695b      	ldr	r3, [r3, #20]
 800b654:	009b      	lsls	r3, r3, #2
 800b656:	693a      	ldr	r2, [r7, #16]
 800b658:	4313      	orrs	r3, r2
 800b65a:	613b      	str	r3, [r7, #16]
 800b65c:	683b      	ldr	r3, [r7, #0]
 800b65e:	699b      	ldr	r3, [r3, #24]
 800b660:	009b      	lsls	r3, r3, #2
 800b662:	693a      	ldr	r2, [r7, #16]
 800b664:	4313      	orrs	r3, r2
 800b666:	613b      	str	r3, [r7, #16]
 800b668:	687b      	ldr	r3, [r7, #4]
 800b66a:	693a      	ldr	r2, [r7, #16]
 800b66c:	605a      	str	r2, [r3, #4]
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	68fa      	ldr	r2, [r7, #12]
 800b672:	619a      	str	r2, [r3, #24]
 800b674:	683b      	ldr	r3, [r7, #0]
 800b676:	685a      	ldr	r2, [r3, #4]
 800b678:	687b      	ldr	r3, [r7, #4]
 800b67a:	639a      	str	r2, [r3, #56]	; 0x38
 800b67c:	687b      	ldr	r3, [r7, #4]
 800b67e:	697a      	ldr	r2, [r7, #20]
 800b680:	621a      	str	r2, [r3, #32]
 800b682:	bf00      	nop
 800b684:	371c      	adds	r7, #28
 800b686:	46bd      	mov	sp, r7
 800b688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b68c:	4770      	bx	lr
 800b68e:	bf00      	nop
 800b690:	feff8fff 	.word	0xfeff8fff
 800b694:	40010000 	.word	0x40010000
 800b698:	40010400 	.word	0x40010400

0800b69c <TIM_OC3_SetConfig>:
 800b69c:	b480      	push	{r7}
 800b69e:	b087      	sub	sp, #28
 800b6a0:	af00      	add	r7, sp, #0
 800b6a2:	6078      	str	r0, [r7, #4]
 800b6a4:	6039      	str	r1, [r7, #0]
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	6a1b      	ldr	r3, [r3, #32]
 800b6aa:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b6ae:	687b      	ldr	r3, [r7, #4]
 800b6b0:	621a      	str	r2, [r3, #32]
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	6a1b      	ldr	r3, [r3, #32]
 800b6b6:	617b      	str	r3, [r7, #20]
 800b6b8:	687b      	ldr	r3, [r7, #4]
 800b6ba:	685b      	ldr	r3, [r3, #4]
 800b6bc:	613b      	str	r3, [r7, #16]
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	69db      	ldr	r3, [r3, #28]
 800b6c2:	60fb      	str	r3, [r7, #12]
 800b6c4:	68fa      	ldr	r2, [r7, #12]
 800b6c6:	4b2d      	ldr	r3, [pc, #180]	; (800b77c <TIM_OC3_SetConfig+0xe0>)
 800b6c8:	4013      	ands	r3, r2
 800b6ca:	60fb      	str	r3, [r7, #12]
 800b6cc:	68fb      	ldr	r3, [r7, #12]
 800b6ce:	f023 0303 	bic.w	r3, r3, #3
 800b6d2:	60fb      	str	r3, [r7, #12]
 800b6d4:	683b      	ldr	r3, [r7, #0]
 800b6d6:	681b      	ldr	r3, [r3, #0]
 800b6d8:	68fa      	ldr	r2, [r7, #12]
 800b6da:	4313      	orrs	r3, r2
 800b6dc:	60fb      	str	r3, [r7, #12]
 800b6de:	697b      	ldr	r3, [r7, #20]
 800b6e0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b6e4:	617b      	str	r3, [r7, #20]
 800b6e6:	683b      	ldr	r3, [r7, #0]
 800b6e8:	689b      	ldr	r3, [r3, #8]
 800b6ea:	021b      	lsls	r3, r3, #8
 800b6ec:	697a      	ldr	r2, [r7, #20]
 800b6ee:	4313      	orrs	r3, r2
 800b6f0:	617b      	str	r3, [r7, #20]
 800b6f2:	687b      	ldr	r3, [r7, #4]
 800b6f4:	4a22      	ldr	r2, [pc, #136]	; (800b780 <TIM_OC3_SetConfig+0xe4>)
 800b6f6:	4293      	cmp	r3, r2
 800b6f8:	d003      	beq.n	800b702 <TIM_OC3_SetConfig+0x66>
 800b6fa:	687b      	ldr	r3, [r7, #4]
 800b6fc:	4a21      	ldr	r2, [pc, #132]	; (800b784 <TIM_OC3_SetConfig+0xe8>)
 800b6fe:	4293      	cmp	r3, r2
 800b700:	d10d      	bne.n	800b71e <TIM_OC3_SetConfig+0x82>
 800b702:	697b      	ldr	r3, [r7, #20]
 800b704:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b708:	617b      	str	r3, [r7, #20]
 800b70a:	683b      	ldr	r3, [r7, #0]
 800b70c:	68db      	ldr	r3, [r3, #12]
 800b70e:	021b      	lsls	r3, r3, #8
 800b710:	697a      	ldr	r2, [r7, #20]
 800b712:	4313      	orrs	r3, r2
 800b714:	617b      	str	r3, [r7, #20]
 800b716:	697b      	ldr	r3, [r7, #20]
 800b718:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b71c:	617b      	str	r3, [r7, #20]
 800b71e:	687b      	ldr	r3, [r7, #4]
 800b720:	4a17      	ldr	r2, [pc, #92]	; (800b780 <TIM_OC3_SetConfig+0xe4>)
 800b722:	4293      	cmp	r3, r2
 800b724:	d003      	beq.n	800b72e <TIM_OC3_SetConfig+0x92>
 800b726:	687b      	ldr	r3, [r7, #4]
 800b728:	4a16      	ldr	r2, [pc, #88]	; (800b784 <TIM_OC3_SetConfig+0xe8>)
 800b72a:	4293      	cmp	r3, r2
 800b72c:	d113      	bne.n	800b756 <TIM_OC3_SetConfig+0xba>
 800b72e:	693b      	ldr	r3, [r7, #16]
 800b730:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b734:	613b      	str	r3, [r7, #16]
 800b736:	693b      	ldr	r3, [r7, #16]
 800b738:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b73c:	613b      	str	r3, [r7, #16]
 800b73e:	683b      	ldr	r3, [r7, #0]
 800b740:	695b      	ldr	r3, [r3, #20]
 800b742:	011b      	lsls	r3, r3, #4
 800b744:	693a      	ldr	r2, [r7, #16]
 800b746:	4313      	orrs	r3, r2
 800b748:	613b      	str	r3, [r7, #16]
 800b74a:	683b      	ldr	r3, [r7, #0]
 800b74c:	699b      	ldr	r3, [r3, #24]
 800b74e:	011b      	lsls	r3, r3, #4
 800b750:	693a      	ldr	r2, [r7, #16]
 800b752:	4313      	orrs	r3, r2
 800b754:	613b      	str	r3, [r7, #16]
 800b756:	687b      	ldr	r3, [r7, #4]
 800b758:	693a      	ldr	r2, [r7, #16]
 800b75a:	605a      	str	r2, [r3, #4]
 800b75c:	687b      	ldr	r3, [r7, #4]
 800b75e:	68fa      	ldr	r2, [r7, #12]
 800b760:	61da      	str	r2, [r3, #28]
 800b762:	683b      	ldr	r3, [r7, #0]
 800b764:	685a      	ldr	r2, [r3, #4]
 800b766:	687b      	ldr	r3, [r7, #4]
 800b768:	63da      	str	r2, [r3, #60]	; 0x3c
 800b76a:	687b      	ldr	r3, [r7, #4]
 800b76c:	697a      	ldr	r2, [r7, #20]
 800b76e:	621a      	str	r2, [r3, #32]
 800b770:	bf00      	nop
 800b772:	371c      	adds	r7, #28
 800b774:	46bd      	mov	sp, r7
 800b776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b77a:	4770      	bx	lr
 800b77c:	fffeff8f 	.word	0xfffeff8f
 800b780:	40010000 	.word	0x40010000
 800b784:	40010400 	.word	0x40010400

0800b788 <TIM_OC4_SetConfig>:
 800b788:	b480      	push	{r7}
 800b78a:	b087      	sub	sp, #28
 800b78c:	af00      	add	r7, sp, #0
 800b78e:	6078      	str	r0, [r7, #4]
 800b790:	6039      	str	r1, [r7, #0]
 800b792:	687b      	ldr	r3, [r7, #4]
 800b794:	6a1b      	ldr	r3, [r3, #32]
 800b796:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b79a:	687b      	ldr	r3, [r7, #4]
 800b79c:	621a      	str	r2, [r3, #32]
 800b79e:	687b      	ldr	r3, [r7, #4]
 800b7a0:	6a1b      	ldr	r3, [r3, #32]
 800b7a2:	613b      	str	r3, [r7, #16]
 800b7a4:	687b      	ldr	r3, [r7, #4]
 800b7a6:	685b      	ldr	r3, [r3, #4]
 800b7a8:	617b      	str	r3, [r7, #20]
 800b7aa:	687b      	ldr	r3, [r7, #4]
 800b7ac:	69db      	ldr	r3, [r3, #28]
 800b7ae:	60fb      	str	r3, [r7, #12]
 800b7b0:	68fa      	ldr	r2, [r7, #12]
 800b7b2:	4b1e      	ldr	r3, [pc, #120]	; (800b82c <TIM_OC4_SetConfig+0xa4>)
 800b7b4:	4013      	ands	r3, r2
 800b7b6:	60fb      	str	r3, [r7, #12]
 800b7b8:	68fb      	ldr	r3, [r7, #12]
 800b7ba:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b7be:	60fb      	str	r3, [r7, #12]
 800b7c0:	683b      	ldr	r3, [r7, #0]
 800b7c2:	681b      	ldr	r3, [r3, #0]
 800b7c4:	021b      	lsls	r3, r3, #8
 800b7c6:	68fa      	ldr	r2, [r7, #12]
 800b7c8:	4313      	orrs	r3, r2
 800b7ca:	60fb      	str	r3, [r7, #12]
 800b7cc:	693b      	ldr	r3, [r7, #16]
 800b7ce:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b7d2:	613b      	str	r3, [r7, #16]
 800b7d4:	683b      	ldr	r3, [r7, #0]
 800b7d6:	689b      	ldr	r3, [r3, #8]
 800b7d8:	031b      	lsls	r3, r3, #12
 800b7da:	693a      	ldr	r2, [r7, #16]
 800b7dc:	4313      	orrs	r3, r2
 800b7de:	613b      	str	r3, [r7, #16]
 800b7e0:	687b      	ldr	r3, [r7, #4]
 800b7e2:	4a13      	ldr	r2, [pc, #76]	; (800b830 <TIM_OC4_SetConfig+0xa8>)
 800b7e4:	4293      	cmp	r3, r2
 800b7e6:	d003      	beq.n	800b7f0 <TIM_OC4_SetConfig+0x68>
 800b7e8:	687b      	ldr	r3, [r7, #4]
 800b7ea:	4a12      	ldr	r2, [pc, #72]	; (800b834 <TIM_OC4_SetConfig+0xac>)
 800b7ec:	4293      	cmp	r3, r2
 800b7ee:	d109      	bne.n	800b804 <TIM_OC4_SetConfig+0x7c>
 800b7f0:	697b      	ldr	r3, [r7, #20]
 800b7f2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b7f6:	617b      	str	r3, [r7, #20]
 800b7f8:	683b      	ldr	r3, [r7, #0]
 800b7fa:	695b      	ldr	r3, [r3, #20]
 800b7fc:	019b      	lsls	r3, r3, #6
 800b7fe:	697a      	ldr	r2, [r7, #20]
 800b800:	4313      	orrs	r3, r2
 800b802:	617b      	str	r3, [r7, #20]
 800b804:	687b      	ldr	r3, [r7, #4]
 800b806:	697a      	ldr	r2, [r7, #20]
 800b808:	605a      	str	r2, [r3, #4]
 800b80a:	687b      	ldr	r3, [r7, #4]
 800b80c:	68fa      	ldr	r2, [r7, #12]
 800b80e:	61da      	str	r2, [r3, #28]
 800b810:	683b      	ldr	r3, [r7, #0]
 800b812:	685a      	ldr	r2, [r3, #4]
 800b814:	687b      	ldr	r3, [r7, #4]
 800b816:	641a      	str	r2, [r3, #64]	; 0x40
 800b818:	687b      	ldr	r3, [r7, #4]
 800b81a:	693a      	ldr	r2, [r7, #16]
 800b81c:	621a      	str	r2, [r3, #32]
 800b81e:	bf00      	nop
 800b820:	371c      	adds	r7, #28
 800b822:	46bd      	mov	sp, r7
 800b824:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b828:	4770      	bx	lr
 800b82a:	bf00      	nop
 800b82c:	feff8fff 	.word	0xfeff8fff
 800b830:	40010000 	.word	0x40010000
 800b834:	40010400 	.word	0x40010400

0800b838 <TIM_OC5_SetConfig>:
 800b838:	b480      	push	{r7}
 800b83a:	b087      	sub	sp, #28
 800b83c:	af00      	add	r7, sp, #0
 800b83e:	6078      	str	r0, [r7, #4]
 800b840:	6039      	str	r1, [r7, #0]
 800b842:	687b      	ldr	r3, [r7, #4]
 800b844:	6a1b      	ldr	r3, [r3, #32]
 800b846:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800b84a:	687b      	ldr	r3, [r7, #4]
 800b84c:	621a      	str	r2, [r3, #32]
 800b84e:	687b      	ldr	r3, [r7, #4]
 800b850:	6a1b      	ldr	r3, [r3, #32]
 800b852:	613b      	str	r3, [r7, #16]
 800b854:	687b      	ldr	r3, [r7, #4]
 800b856:	685b      	ldr	r3, [r3, #4]
 800b858:	617b      	str	r3, [r7, #20]
 800b85a:	687b      	ldr	r3, [r7, #4]
 800b85c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b85e:	60fb      	str	r3, [r7, #12]
 800b860:	68fa      	ldr	r2, [r7, #12]
 800b862:	4b1b      	ldr	r3, [pc, #108]	; (800b8d0 <TIM_OC5_SetConfig+0x98>)
 800b864:	4013      	ands	r3, r2
 800b866:	60fb      	str	r3, [r7, #12]
 800b868:	683b      	ldr	r3, [r7, #0]
 800b86a:	681b      	ldr	r3, [r3, #0]
 800b86c:	68fa      	ldr	r2, [r7, #12]
 800b86e:	4313      	orrs	r3, r2
 800b870:	60fb      	str	r3, [r7, #12]
 800b872:	693b      	ldr	r3, [r7, #16]
 800b874:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800b878:	613b      	str	r3, [r7, #16]
 800b87a:	683b      	ldr	r3, [r7, #0]
 800b87c:	689b      	ldr	r3, [r3, #8]
 800b87e:	041b      	lsls	r3, r3, #16
 800b880:	693a      	ldr	r2, [r7, #16]
 800b882:	4313      	orrs	r3, r2
 800b884:	613b      	str	r3, [r7, #16]
 800b886:	687b      	ldr	r3, [r7, #4]
 800b888:	4a12      	ldr	r2, [pc, #72]	; (800b8d4 <TIM_OC5_SetConfig+0x9c>)
 800b88a:	4293      	cmp	r3, r2
 800b88c:	d003      	beq.n	800b896 <TIM_OC5_SetConfig+0x5e>
 800b88e:	687b      	ldr	r3, [r7, #4]
 800b890:	4a11      	ldr	r2, [pc, #68]	; (800b8d8 <TIM_OC5_SetConfig+0xa0>)
 800b892:	4293      	cmp	r3, r2
 800b894:	d109      	bne.n	800b8aa <TIM_OC5_SetConfig+0x72>
 800b896:	697b      	ldr	r3, [r7, #20]
 800b898:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b89c:	617b      	str	r3, [r7, #20]
 800b89e:	683b      	ldr	r3, [r7, #0]
 800b8a0:	695b      	ldr	r3, [r3, #20]
 800b8a2:	021b      	lsls	r3, r3, #8
 800b8a4:	697a      	ldr	r2, [r7, #20]
 800b8a6:	4313      	orrs	r3, r2
 800b8a8:	617b      	str	r3, [r7, #20]
 800b8aa:	687b      	ldr	r3, [r7, #4]
 800b8ac:	697a      	ldr	r2, [r7, #20]
 800b8ae:	605a      	str	r2, [r3, #4]
 800b8b0:	687b      	ldr	r3, [r7, #4]
 800b8b2:	68fa      	ldr	r2, [r7, #12]
 800b8b4:	655a      	str	r2, [r3, #84]	; 0x54
 800b8b6:	683b      	ldr	r3, [r7, #0]
 800b8b8:	685a      	ldr	r2, [r3, #4]
 800b8ba:	687b      	ldr	r3, [r7, #4]
 800b8bc:	659a      	str	r2, [r3, #88]	; 0x58
 800b8be:	687b      	ldr	r3, [r7, #4]
 800b8c0:	693a      	ldr	r2, [r7, #16]
 800b8c2:	621a      	str	r2, [r3, #32]
 800b8c4:	bf00      	nop
 800b8c6:	371c      	adds	r7, #28
 800b8c8:	46bd      	mov	sp, r7
 800b8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8ce:	4770      	bx	lr
 800b8d0:	fffeff8f 	.word	0xfffeff8f
 800b8d4:	40010000 	.word	0x40010000
 800b8d8:	40010400 	.word	0x40010400

0800b8dc <TIM_OC6_SetConfig>:
 800b8dc:	b480      	push	{r7}
 800b8de:	b087      	sub	sp, #28
 800b8e0:	af00      	add	r7, sp, #0
 800b8e2:	6078      	str	r0, [r7, #4]
 800b8e4:	6039      	str	r1, [r7, #0]
 800b8e6:	687b      	ldr	r3, [r7, #4]
 800b8e8:	6a1b      	ldr	r3, [r3, #32]
 800b8ea:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800b8ee:	687b      	ldr	r3, [r7, #4]
 800b8f0:	621a      	str	r2, [r3, #32]
 800b8f2:	687b      	ldr	r3, [r7, #4]
 800b8f4:	6a1b      	ldr	r3, [r3, #32]
 800b8f6:	613b      	str	r3, [r7, #16]
 800b8f8:	687b      	ldr	r3, [r7, #4]
 800b8fa:	685b      	ldr	r3, [r3, #4]
 800b8fc:	617b      	str	r3, [r7, #20]
 800b8fe:	687b      	ldr	r3, [r7, #4]
 800b900:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b902:	60fb      	str	r3, [r7, #12]
 800b904:	68fa      	ldr	r2, [r7, #12]
 800b906:	4b1c      	ldr	r3, [pc, #112]	; (800b978 <TIM_OC6_SetConfig+0x9c>)
 800b908:	4013      	ands	r3, r2
 800b90a:	60fb      	str	r3, [r7, #12]
 800b90c:	683b      	ldr	r3, [r7, #0]
 800b90e:	681b      	ldr	r3, [r3, #0]
 800b910:	021b      	lsls	r3, r3, #8
 800b912:	68fa      	ldr	r2, [r7, #12]
 800b914:	4313      	orrs	r3, r2
 800b916:	60fb      	str	r3, [r7, #12]
 800b918:	693b      	ldr	r3, [r7, #16]
 800b91a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800b91e:	613b      	str	r3, [r7, #16]
 800b920:	683b      	ldr	r3, [r7, #0]
 800b922:	689b      	ldr	r3, [r3, #8]
 800b924:	051b      	lsls	r3, r3, #20
 800b926:	693a      	ldr	r2, [r7, #16]
 800b928:	4313      	orrs	r3, r2
 800b92a:	613b      	str	r3, [r7, #16]
 800b92c:	687b      	ldr	r3, [r7, #4]
 800b92e:	4a13      	ldr	r2, [pc, #76]	; (800b97c <TIM_OC6_SetConfig+0xa0>)
 800b930:	4293      	cmp	r3, r2
 800b932:	d003      	beq.n	800b93c <TIM_OC6_SetConfig+0x60>
 800b934:	687b      	ldr	r3, [r7, #4]
 800b936:	4a12      	ldr	r2, [pc, #72]	; (800b980 <TIM_OC6_SetConfig+0xa4>)
 800b938:	4293      	cmp	r3, r2
 800b93a:	d109      	bne.n	800b950 <TIM_OC6_SetConfig+0x74>
 800b93c:	697b      	ldr	r3, [r7, #20]
 800b93e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800b942:	617b      	str	r3, [r7, #20]
 800b944:	683b      	ldr	r3, [r7, #0]
 800b946:	695b      	ldr	r3, [r3, #20]
 800b948:	029b      	lsls	r3, r3, #10
 800b94a:	697a      	ldr	r2, [r7, #20]
 800b94c:	4313      	orrs	r3, r2
 800b94e:	617b      	str	r3, [r7, #20]
 800b950:	687b      	ldr	r3, [r7, #4]
 800b952:	697a      	ldr	r2, [r7, #20]
 800b954:	605a      	str	r2, [r3, #4]
 800b956:	687b      	ldr	r3, [r7, #4]
 800b958:	68fa      	ldr	r2, [r7, #12]
 800b95a:	655a      	str	r2, [r3, #84]	; 0x54
 800b95c:	683b      	ldr	r3, [r7, #0]
 800b95e:	685a      	ldr	r2, [r3, #4]
 800b960:	687b      	ldr	r3, [r7, #4]
 800b962:	65da      	str	r2, [r3, #92]	; 0x5c
 800b964:	687b      	ldr	r3, [r7, #4]
 800b966:	693a      	ldr	r2, [r7, #16]
 800b968:	621a      	str	r2, [r3, #32]
 800b96a:	bf00      	nop
 800b96c:	371c      	adds	r7, #28
 800b96e:	46bd      	mov	sp, r7
 800b970:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b974:	4770      	bx	lr
 800b976:	bf00      	nop
 800b978:	feff8fff 	.word	0xfeff8fff
 800b97c:	40010000 	.word	0x40010000
 800b980:	40010400 	.word	0x40010400

0800b984 <TIM_SlaveTimer_SetConfig>:
 800b984:	b580      	push	{r7, lr}
 800b986:	b086      	sub	sp, #24
 800b988:	af00      	add	r7, sp, #0
 800b98a:	6078      	str	r0, [r7, #4]
 800b98c:	6039      	str	r1, [r7, #0]
 800b98e:	687b      	ldr	r3, [r7, #4]
 800b990:	681b      	ldr	r3, [r3, #0]
 800b992:	689b      	ldr	r3, [r3, #8]
 800b994:	617b      	str	r3, [r7, #20]
 800b996:	697b      	ldr	r3, [r7, #20]
 800b998:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b99c:	617b      	str	r3, [r7, #20]
 800b99e:	683b      	ldr	r3, [r7, #0]
 800b9a0:	685b      	ldr	r3, [r3, #4]
 800b9a2:	697a      	ldr	r2, [r7, #20]
 800b9a4:	4313      	orrs	r3, r2
 800b9a6:	617b      	str	r3, [r7, #20]
 800b9a8:	697a      	ldr	r2, [r7, #20]
 800b9aa:	4b39      	ldr	r3, [pc, #228]	; (800ba90 <TIM_SlaveTimer_SetConfig+0x10c>)
 800b9ac:	4013      	ands	r3, r2
 800b9ae:	617b      	str	r3, [r7, #20]
 800b9b0:	683b      	ldr	r3, [r7, #0]
 800b9b2:	681b      	ldr	r3, [r3, #0]
 800b9b4:	697a      	ldr	r2, [r7, #20]
 800b9b6:	4313      	orrs	r3, r2
 800b9b8:	617b      	str	r3, [r7, #20]
 800b9ba:	687b      	ldr	r3, [r7, #4]
 800b9bc:	681b      	ldr	r3, [r3, #0]
 800b9be:	697a      	ldr	r2, [r7, #20]
 800b9c0:	609a      	str	r2, [r3, #8]
 800b9c2:	683b      	ldr	r3, [r7, #0]
 800b9c4:	685b      	ldr	r3, [r3, #4]
 800b9c6:	2b30      	cmp	r3, #48	; 0x30
 800b9c8:	d05c      	beq.n	800ba84 <TIM_SlaveTimer_SetConfig+0x100>
 800b9ca:	2b30      	cmp	r3, #48	; 0x30
 800b9cc:	d806      	bhi.n	800b9dc <TIM_SlaveTimer_SetConfig+0x58>
 800b9ce:	2b10      	cmp	r3, #16
 800b9d0:	d058      	beq.n	800ba84 <TIM_SlaveTimer_SetConfig+0x100>
 800b9d2:	2b20      	cmp	r3, #32
 800b9d4:	d056      	beq.n	800ba84 <TIM_SlaveTimer_SetConfig+0x100>
 800b9d6:	2b00      	cmp	r3, #0
 800b9d8:	d054      	beq.n	800ba84 <TIM_SlaveTimer_SetConfig+0x100>
 800b9da:	e054      	b.n	800ba86 <TIM_SlaveTimer_SetConfig+0x102>
 800b9dc:	2b50      	cmp	r3, #80	; 0x50
 800b9de:	d03d      	beq.n	800ba5c <TIM_SlaveTimer_SetConfig+0xd8>
 800b9e0:	2b50      	cmp	r3, #80	; 0x50
 800b9e2:	d802      	bhi.n	800b9ea <TIM_SlaveTimer_SetConfig+0x66>
 800b9e4:	2b40      	cmp	r3, #64	; 0x40
 800b9e6:	d010      	beq.n	800ba0a <TIM_SlaveTimer_SetConfig+0x86>
 800b9e8:	e04d      	b.n	800ba86 <TIM_SlaveTimer_SetConfig+0x102>
 800b9ea:	2b60      	cmp	r3, #96	; 0x60
 800b9ec:	d040      	beq.n	800ba70 <TIM_SlaveTimer_SetConfig+0xec>
 800b9ee:	2b70      	cmp	r3, #112	; 0x70
 800b9f0:	d000      	beq.n	800b9f4 <TIM_SlaveTimer_SetConfig+0x70>
 800b9f2:	e048      	b.n	800ba86 <TIM_SlaveTimer_SetConfig+0x102>
 800b9f4:	687b      	ldr	r3, [r7, #4]
 800b9f6:	6818      	ldr	r0, [r3, #0]
 800b9f8:	683b      	ldr	r3, [r7, #0]
 800b9fa:	68d9      	ldr	r1, [r3, #12]
 800b9fc:	683b      	ldr	r3, [r7, #0]
 800b9fe:	689a      	ldr	r2, [r3, #8]
 800ba00:	683b      	ldr	r3, [r7, #0]
 800ba02:	691b      	ldr	r3, [r3, #16]
 800ba04:	f000 f8c0 	bl	800bb88 <TIM_ETR_SetConfig>
 800ba08:	e03d      	b.n	800ba86 <TIM_SlaveTimer_SetConfig+0x102>
 800ba0a:	683b      	ldr	r3, [r7, #0]
 800ba0c:	681b      	ldr	r3, [r3, #0]
 800ba0e:	2b05      	cmp	r3, #5
 800ba10:	d101      	bne.n	800ba16 <TIM_SlaveTimer_SetConfig+0x92>
 800ba12:	2301      	movs	r3, #1
 800ba14:	e038      	b.n	800ba88 <TIM_SlaveTimer_SetConfig+0x104>
 800ba16:	687b      	ldr	r3, [r7, #4]
 800ba18:	681b      	ldr	r3, [r3, #0]
 800ba1a:	6a1b      	ldr	r3, [r3, #32]
 800ba1c:	613b      	str	r3, [r7, #16]
 800ba1e:	687b      	ldr	r3, [r7, #4]
 800ba20:	681b      	ldr	r3, [r3, #0]
 800ba22:	6a1a      	ldr	r2, [r3, #32]
 800ba24:	687b      	ldr	r3, [r7, #4]
 800ba26:	681b      	ldr	r3, [r3, #0]
 800ba28:	f022 0201 	bic.w	r2, r2, #1
 800ba2c:	621a      	str	r2, [r3, #32]
 800ba2e:	687b      	ldr	r3, [r7, #4]
 800ba30:	681b      	ldr	r3, [r3, #0]
 800ba32:	699b      	ldr	r3, [r3, #24]
 800ba34:	60fb      	str	r3, [r7, #12]
 800ba36:	68fb      	ldr	r3, [r7, #12]
 800ba38:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800ba3c:	60fb      	str	r3, [r7, #12]
 800ba3e:	683b      	ldr	r3, [r7, #0]
 800ba40:	691b      	ldr	r3, [r3, #16]
 800ba42:	011b      	lsls	r3, r3, #4
 800ba44:	68fa      	ldr	r2, [r7, #12]
 800ba46:	4313      	orrs	r3, r2
 800ba48:	60fb      	str	r3, [r7, #12]
 800ba4a:	687b      	ldr	r3, [r7, #4]
 800ba4c:	681b      	ldr	r3, [r3, #0]
 800ba4e:	68fa      	ldr	r2, [r7, #12]
 800ba50:	619a      	str	r2, [r3, #24]
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	681b      	ldr	r3, [r3, #0]
 800ba56:	693a      	ldr	r2, [r7, #16]
 800ba58:	621a      	str	r2, [r3, #32]
 800ba5a:	e014      	b.n	800ba86 <TIM_SlaveTimer_SetConfig+0x102>
 800ba5c:	687b      	ldr	r3, [r7, #4]
 800ba5e:	6818      	ldr	r0, [r3, #0]
 800ba60:	683b      	ldr	r3, [r7, #0]
 800ba62:	6899      	ldr	r1, [r3, #8]
 800ba64:	683b      	ldr	r3, [r7, #0]
 800ba66:	691b      	ldr	r3, [r3, #16]
 800ba68:	461a      	mov	r2, r3
 800ba6a:	f000 f813 	bl	800ba94 <TIM_TI1_ConfigInputStage>
 800ba6e:	e00a      	b.n	800ba86 <TIM_SlaveTimer_SetConfig+0x102>
 800ba70:	687b      	ldr	r3, [r7, #4]
 800ba72:	6818      	ldr	r0, [r3, #0]
 800ba74:	683b      	ldr	r3, [r7, #0]
 800ba76:	6899      	ldr	r1, [r3, #8]
 800ba78:	683b      	ldr	r3, [r7, #0]
 800ba7a:	691b      	ldr	r3, [r3, #16]
 800ba7c:	461a      	mov	r2, r3
 800ba7e:	f000 f838 	bl	800baf2 <TIM_TI2_ConfigInputStage>
 800ba82:	e000      	b.n	800ba86 <TIM_SlaveTimer_SetConfig+0x102>
 800ba84:	bf00      	nop
 800ba86:	2300      	movs	r3, #0
 800ba88:	4618      	mov	r0, r3
 800ba8a:	3718      	adds	r7, #24
 800ba8c:	46bd      	mov	sp, r7
 800ba8e:	bd80      	pop	{r7, pc}
 800ba90:	fffefff8 	.word	0xfffefff8

0800ba94 <TIM_TI1_ConfigInputStage>:
 800ba94:	b480      	push	{r7}
 800ba96:	b087      	sub	sp, #28
 800ba98:	af00      	add	r7, sp, #0
 800ba9a:	60f8      	str	r0, [r7, #12]
 800ba9c:	60b9      	str	r1, [r7, #8]
 800ba9e:	607a      	str	r2, [r7, #4]
 800baa0:	68fb      	ldr	r3, [r7, #12]
 800baa2:	6a1b      	ldr	r3, [r3, #32]
 800baa4:	617b      	str	r3, [r7, #20]
 800baa6:	68fb      	ldr	r3, [r7, #12]
 800baa8:	6a1b      	ldr	r3, [r3, #32]
 800baaa:	f023 0201 	bic.w	r2, r3, #1
 800baae:	68fb      	ldr	r3, [r7, #12]
 800bab0:	621a      	str	r2, [r3, #32]
 800bab2:	68fb      	ldr	r3, [r7, #12]
 800bab4:	699b      	ldr	r3, [r3, #24]
 800bab6:	613b      	str	r3, [r7, #16]
 800bab8:	693b      	ldr	r3, [r7, #16]
 800baba:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800babe:	613b      	str	r3, [r7, #16]
 800bac0:	687b      	ldr	r3, [r7, #4]
 800bac2:	011b      	lsls	r3, r3, #4
 800bac4:	693a      	ldr	r2, [r7, #16]
 800bac6:	4313      	orrs	r3, r2
 800bac8:	613b      	str	r3, [r7, #16]
 800baca:	697b      	ldr	r3, [r7, #20]
 800bacc:	f023 030a 	bic.w	r3, r3, #10
 800bad0:	617b      	str	r3, [r7, #20]
 800bad2:	697a      	ldr	r2, [r7, #20]
 800bad4:	68bb      	ldr	r3, [r7, #8]
 800bad6:	4313      	orrs	r3, r2
 800bad8:	617b      	str	r3, [r7, #20]
 800bada:	68fb      	ldr	r3, [r7, #12]
 800badc:	693a      	ldr	r2, [r7, #16]
 800bade:	619a      	str	r2, [r3, #24]
 800bae0:	68fb      	ldr	r3, [r7, #12]
 800bae2:	697a      	ldr	r2, [r7, #20]
 800bae4:	621a      	str	r2, [r3, #32]
 800bae6:	bf00      	nop
 800bae8:	371c      	adds	r7, #28
 800baea:	46bd      	mov	sp, r7
 800baec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800baf0:	4770      	bx	lr

0800baf2 <TIM_TI2_ConfigInputStage>:
 800baf2:	b480      	push	{r7}
 800baf4:	b087      	sub	sp, #28
 800baf6:	af00      	add	r7, sp, #0
 800baf8:	60f8      	str	r0, [r7, #12]
 800bafa:	60b9      	str	r1, [r7, #8]
 800bafc:	607a      	str	r2, [r7, #4]
 800bafe:	68fb      	ldr	r3, [r7, #12]
 800bb00:	6a1b      	ldr	r3, [r3, #32]
 800bb02:	f023 0210 	bic.w	r2, r3, #16
 800bb06:	68fb      	ldr	r3, [r7, #12]
 800bb08:	621a      	str	r2, [r3, #32]
 800bb0a:	68fb      	ldr	r3, [r7, #12]
 800bb0c:	699b      	ldr	r3, [r3, #24]
 800bb0e:	617b      	str	r3, [r7, #20]
 800bb10:	68fb      	ldr	r3, [r7, #12]
 800bb12:	6a1b      	ldr	r3, [r3, #32]
 800bb14:	613b      	str	r3, [r7, #16]
 800bb16:	697b      	ldr	r3, [r7, #20]
 800bb18:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800bb1c:	617b      	str	r3, [r7, #20]
 800bb1e:	687b      	ldr	r3, [r7, #4]
 800bb20:	031b      	lsls	r3, r3, #12
 800bb22:	697a      	ldr	r2, [r7, #20]
 800bb24:	4313      	orrs	r3, r2
 800bb26:	617b      	str	r3, [r7, #20]
 800bb28:	693b      	ldr	r3, [r7, #16]
 800bb2a:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800bb2e:	613b      	str	r3, [r7, #16]
 800bb30:	68bb      	ldr	r3, [r7, #8]
 800bb32:	011b      	lsls	r3, r3, #4
 800bb34:	693a      	ldr	r2, [r7, #16]
 800bb36:	4313      	orrs	r3, r2
 800bb38:	613b      	str	r3, [r7, #16]
 800bb3a:	68fb      	ldr	r3, [r7, #12]
 800bb3c:	697a      	ldr	r2, [r7, #20]
 800bb3e:	619a      	str	r2, [r3, #24]
 800bb40:	68fb      	ldr	r3, [r7, #12]
 800bb42:	693a      	ldr	r2, [r7, #16]
 800bb44:	621a      	str	r2, [r3, #32]
 800bb46:	bf00      	nop
 800bb48:	371c      	adds	r7, #28
 800bb4a:	46bd      	mov	sp, r7
 800bb4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb50:	4770      	bx	lr

0800bb52 <TIM_ITRx_SetConfig>:
 800bb52:	b480      	push	{r7}
 800bb54:	b085      	sub	sp, #20
 800bb56:	af00      	add	r7, sp, #0
 800bb58:	6078      	str	r0, [r7, #4]
 800bb5a:	6039      	str	r1, [r7, #0]
 800bb5c:	687b      	ldr	r3, [r7, #4]
 800bb5e:	689b      	ldr	r3, [r3, #8]
 800bb60:	60fb      	str	r3, [r7, #12]
 800bb62:	68fb      	ldr	r3, [r7, #12]
 800bb64:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bb68:	60fb      	str	r3, [r7, #12]
 800bb6a:	683a      	ldr	r2, [r7, #0]
 800bb6c:	68fb      	ldr	r3, [r7, #12]
 800bb6e:	4313      	orrs	r3, r2
 800bb70:	f043 0307 	orr.w	r3, r3, #7
 800bb74:	60fb      	str	r3, [r7, #12]
 800bb76:	687b      	ldr	r3, [r7, #4]
 800bb78:	68fa      	ldr	r2, [r7, #12]
 800bb7a:	609a      	str	r2, [r3, #8]
 800bb7c:	bf00      	nop
 800bb7e:	3714      	adds	r7, #20
 800bb80:	46bd      	mov	sp, r7
 800bb82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb86:	4770      	bx	lr

0800bb88 <TIM_ETR_SetConfig>:
 800bb88:	b480      	push	{r7}
 800bb8a:	b087      	sub	sp, #28
 800bb8c:	af00      	add	r7, sp, #0
 800bb8e:	60f8      	str	r0, [r7, #12]
 800bb90:	60b9      	str	r1, [r7, #8]
 800bb92:	607a      	str	r2, [r7, #4]
 800bb94:	603b      	str	r3, [r7, #0]
 800bb96:	68fb      	ldr	r3, [r7, #12]
 800bb98:	689b      	ldr	r3, [r3, #8]
 800bb9a:	617b      	str	r3, [r7, #20]
 800bb9c:	697b      	ldr	r3, [r7, #20]
 800bb9e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800bba2:	617b      	str	r3, [r7, #20]
 800bba4:	683b      	ldr	r3, [r7, #0]
 800bba6:	021a      	lsls	r2, r3, #8
 800bba8:	687b      	ldr	r3, [r7, #4]
 800bbaa:	431a      	orrs	r2, r3
 800bbac:	68bb      	ldr	r3, [r7, #8]
 800bbae:	4313      	orrs	r3, r2
 800bbb0:	697a      	ldr	r2, [r7, #20]
 800bbb2:	4313      	orrs	r3, r2
 800bbb4:	617b      	str	r3, [r7, #20]
 800bbb6:	68fb      	ldr	r3, [r7, #12]
 800bbb8:	697a      	ldr	r2, [r7, #20]
 800bbba:	609a      	str	r2, [r3, #8]
 800bbbc:	bf00      	nop
 800bbbe:	371c      	adds	r7, #28
 800bbc0:	46bd      	mov	sp, r7
 800bbc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbc6:	4770      	bx	lr

0800bbc8 <HAL_TIMEx_MasterConfigSynchronization>:
 800bbc8:	b480      	push	{r7}
 800bbca:	b085      	sub	sp, #20
 800bbcc:	af00      	add	r7, sp, #0
 800bbce:	6078      	str	r0, [r7, #4]
 800bbd0:	6039      	str	r1, [r7, #0]
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bbd8:	2b01      	cmp	r3, #1
 800bbda:	d101      	bne.n	800bbe0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800bbdc:	2302      	movs	r3, #2
 800bbde:	e06d      	b.n	800bcbc <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 800bbe0:	687b      	ldr	r3, [r7, #4]
 800bbe2:	2201      	movs	r2, #1
 800bbe4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bbe8:	687b      	ldr	r3, [r7, #4]
 800bbea:	2202      	movs	r2, #2
 800bbec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bbf0:	687b      	ldr	r3, [r7, #4]
 800bbf2:	681b      	ldr	r3, [r3, #0]
 800bbf4:	685b      	ldr	r3, [r3, #4]
 800bbf6:	60fb      	str	r3, [r7, #12]
 800bbf8:	687b      	ldr	r3, [r7, #4]
 800bbfa:	681b      	ldr	r3, [r3, #0]
 800bbfc:	689b      	ldr	r3, [r3, #8]
 800bbfe:	60bb      	str	r3, [r7, #8]
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	681b      	ldr	r3, [r3, #0]
 800bc04:	4a30      	ldr	r2, [pc, #192]	; (800bcc8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800bc06:	4293      	cmp	r3, r2
 800bc08:	d004      	beq.n	800bc14 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800bc0a:	687b      	ldr	r3, [r7, #4]
 800bc0c:	681b      	ldr	r3, [r3, #0]
 800bc0e:	4a2f      	ldr	r2, [pc, #188]	; (800bccc <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800bc10:	4293      	cmp	r3, r2
 800bc12:	d108      	bne.n	800bc26 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800bc14:	68fb      	ldr	r3, [r7, #12]
 800bc16:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800bc1a:	60fb      	str	r3, [r7, #12]
 800bc1c:	683b      	ldr	r3, [r7, #0]
 800bc1e:	685b      	ldr	r3, [r3, #4]
 800bc20:	68fa      	ldr	r2, [r7, #12]
 800bc22:	4313      	orrs	r3, r2
 800bc24:	60fb      	str	r3, [r7, #12]
 800bc26:	68fb      	ldr	r3, [r7, #12]
 800bc28:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800bc2c:	60fb      	str	r3, [r7, #12]
 800bc2e:	683b      	ldr	r3, [r7, #0]
 800bc30:	681b      	ldr	r3, [r3, #0]
 800bc32:	68fa      	ldr	r2, [r7, #12]
 800bc34:	4313      	orrs	r3, r2
 800bc36:	60fb      	str	r3, [r7, #12]
 800bc38:	687b      	ldr	r3, [r7, #4]
 800bc3a:	681b      	ldr	r3, [r3, #0]
 800bc3c:	68fa      	ldr	r2, [r7, #12]
 800bc3e:	605a      	str	r2, [r3, #4]
 800bc40:	687b      	ldr	r3, [r7, #4]
 800bc42:	681b      	ldr	r3, [r3, #0]
 800bc44:	4a20      	ldr	r2, [pc, #128]	; (800bcc8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800bc46:	4293      	cmp	r3, r2
 800bc48:	d022      	beq.n	800bc90 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc4a:	687b      	ldr	r3, [r7, #4]
 800bc4c:	681b      	ldr	r3, [r3, #0]
 800bc4e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800bc52:	d01d      	beq.n	800bc90 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc54:	687b      	ldr	r3, [r7, #4]
 800bc56:	681b      	ldr	r3, [r3, #0]
 800bc58:	4a1d      	ldr	r2, [pc, #116]	; (800bcd0 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800bc5a:	4293      	cmp	r3, r2
 800bc5c:	d018      	beq.n	800bc90 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc5e:	687b      	ldr	r3, [r7, #4]
 800bc60:	681b      	ldr	r3, [r3, #0]
 800bc62:	4a1c      	ldr	r2, [pc, #112]	; (800bcd4 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800bc64:	4293      	cmp	r3, r2
 800bc66:	d013      	beq.n	800bc90 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc68:	687b      	ldr	r3, [r7, #4]
 800bc6a:	681b      	ldr	r3, [r3, #0]
 800bc6c:	4a1a      	ldr	r2, [pc, #104]	; (800bcd8 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800bc6e:	4293      	cmp	r3, r2
 800bc70:	d00e      	beq.n	800bc90 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc72:	687b      	ldr	r3, [r7, #4]
 800bc74:	681b      	ldr	r3, [r3, #0]
 800bc76:	4a15      	ldr	r2, [pc, #84]	; (800bccc <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800bc78:	4293      	cmp	r3, r2
 800bc7a:	d009      	beq.n	800bc90 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc7c:	687b      	ldr	r3, [r7, #4]
 800bc7e:	681b      	ldr	r3, [r3, #0]
 800bc80:	4a16      	ldr	r2, [pc, #88]	; (800bcdc <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800bc82:	4293      	cmp	r3, r2
 800bc84:	d004      	beq.n	800bc90 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800bc86:	687b      	ldr	r3, [r7, #4]
 800bc88:	681b      	ldr	r3, [r3, #0]
 800bc8a:	4a15      	ldr	r2, [pc, #84]	; (800bce0 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800bc8c:	4293      	cmp	r3, r2
 800bc8e:	d10c      	bne.n	800bcaa <HAL_TIMEx_MasterConfigSynchronization+0xe2>
 800bc90:	68bb      	ldr	r3, [r7, #8]
 800bc92:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bc96:	60bb      	str	r3, [r7, #8]
 800bc98:	683b      	ldr	r3, [r7, #0]
 800bc9a:	689b      	ldr	r3, [r3, #8]
 800bc9c:	68ba      	ldr	r2, [r7, #8]
 800bc9e:	4313      	orrs	r3, r2
 800bca0:	60bb      	str	r3, [r7, #8]
 800bca2:	687b      	ldr	r3, [r7, #4]
 800bca4:	681b      	ldr	r3, [r3, #0]
 800bca6:	68ba      	ldr	r2, [r7, #8]
 800bca8:	609a      	str	r2, [r3, #8]
 800bcaa:	687b      	ldr	r3, [r7, #4]
 800bcac:	2201      	movs	r2, #1
 800bcae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bcb2:	687b      	ldr	r3, [r7, #4]
 800bcb4:	2200      	movs	r2, #0
 800bcb6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bcba:	2300      	movs	r3, #0
 800bcbc:	4618      	mov	r0, r3
 800bcbe:	3714      	adds	r7, #20
 800bcc0:	46bd      	mov	sp, r7
 800bcc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcc6:	4770      	bx	lr
 800bcc8:	40010000 	.word	0x40010000
 800bccc:	40010400 	.word	0x40010400
 800bcd0:	40000400 	.word	0x40000400
 800bcd4:	40000800 	.word	0x40000800
 800bcd8:	40000c00 	.word	0x40000c00
 800bcdc:	40014000 	.word	0x40014000
 800bce0:	40001800 	.word	0x40001800

0800bce4 <HAL_TIMEx_ConfigBreakDeadTime>:
 800bce4:	b480      	push	{r7}
 800bce6:	b085      	sub	sp, #20
 800bce8:	af00      	add	r7, sp, #0
 800bcea:	6078      	str	r0, [r7, #4]
 800bcec:	6039      	str	r1, [r7, #0]
 800bcee:	2300      	movs	r3, #0
 800bcf0:	60fb      	str	r3, [r7, #12]
 800bcf2:	687b      	ldr	r3, [r7, #4]
 800bcf4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800bcf8:	2b01      	cmp	r3, #1
 800bcfa:	d101      	bne.n	800bd00 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800bcfc:	2302      	movs	r3, #2
 800bcfe:	e065      	b.n	800bdcc <HAL_TIMEx_ConfigBreakDeadTime+0xe8>
 800bd00:	687b      	ldr	r3, [r7, #4]
 800bd02:	2201      	movs	r2, #1
 800bd04:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bd08:	68fb      	ldr	r3, [r7, #12]
 800bd0a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800bd0e:	683b      	ldr	r3, [r7, #0]
 800bd10:	68db      	ldr	r3, [r3, #12]
 800bd12:	4313      	orrs	r3, r2
 800bd14:	60fb      	str	r3, [r7, #12]
 800bd16:	68fb      	ldr	r3, [r7, #12]
 800bd18:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800bd1c:	683b      	ldr	r3, [r7, #0]
 800bd1e:	689b      	ldr	r3, [r3, #8]
 800bd20:	4313      	orrs	r3, r2
 800bd22:	60fb      	str	r3, [r7, #12]
 800bd24:	68fb      	ldr	r3, [r7, #12]
 800bd26:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800bd2a:	683b      	ldr	r3, [r7, #0]
 800bd2c:	685b      	ldr	r3, [r3, #4]
 800bd2e:	4313      	orrs	r3, r2
 800bd30:	60fb      	str	r3, [r7, #12]
 800bd32:	68fb      	ldr	r3, [r7, #12]
 800bd34:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800bd38:	683b      	ldr	r3, [r7, #0]
 800bd3a:	681b      	ldr	r3, [r3, #0]
 800bd3c:	4313      	orrs	r3, r2
 800bd3e:	60fb      	str	r3, [r7, #12]
 800bd40:	68fb      	ldr	r3, [r7, #12]
 800bd42:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800bd46:	683b      	ldr	r3, [r7, #0]
 800bd48:	691b      	ldr	r3, [r3, #16]
 800bd4a:	4313      	orrs	r3, r2
 800bd4c:	60fb      	str	r3, [r7, #12]
 800bd4e:	68fb      	ldr	r3, [r7, #12]
 800bd50:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800bd54:	683b      	ldr	r3, [r7, #0]
 800bd56:	695b      	ldr	r3, [r3, #20]
 800bd58:	4313      	orrs	r3, r2
 800bd5a:	60fb      	str	r3, [r7, #12]
 800bd5c:	68fb      	ldr	r3, [r7, #12]
 800bd5e:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800bd62:	683b      	ldr	r3, [r7, #0]
 800bd64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bd66:	4313      	orrs	r3, r2
 800bd68:	60fb      	str	r3, [r7, #12]
 800bd6a:	68fb      	ldr	r3, [r7, #12]
 800bd6c:	f423 2270 	bic.w	r2, r3, #983040	; 0xf0000
 800bd70:	683b      	ldr	r3, [r7, #0]
 800bd72:	699b      	ldr	r3, [r3, #24]
 800bd74:	041b      	lsls	r3, r3, #16
 800bd76:	4313      	orrs	r3, r2
 800bd78:	60fb      	str	r3, [r7, #12]
 800bd7a:	687b      	ldr	r3, [r7, #4]
 800bd7c:	681b      	ldr	r3, [r3, #0]
 800bd7e:	4a16      	ldr	r2, [pc, #88]	; (800bdd8 <HAL_TIMEx_ConfigBreakDeadTime+0xf4>)
 800bd80:	4293      	cmp	r3, r2
 800bd82:	d004      	beq.n	800bd8e <HAL_TIMEx_ConfigBreakDeadTime+0xaa>
 800bd84:	687b      	ldr	r3, [r7, #4]
 800bd86:	681b      	ldr	r3, [r3, #0]
 800bd88:	4a14      	ldr	r2, [pc, #80]	; (800bddc <HAL_TIMEx_ConfigBreakDeadTime+0xf8>)
 800bd8a:	4293      	cmp	r3, r2
 800bd8c:	d115      	bne.n	800bdba <HAL_TIMEx_ConfigBreakDeadTime+0xd6>
 800bd8e:	68fb      	ldr	r3, [r7, #12]
 800bd90:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 800bd94:	683b      	ldr	r3, [r7, #0]
 800bd96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd98:	051b      	lsls	r3, r3, #20
 800bd9a:	4313      	orrs	r3, r2
 800bd9c:	60fb      	str	r3, [r7, #12]
 800bd9e:	68fb      	ldr	r3, [r7, #12]
 800bda0:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 800bda4:	683b      	ldr	r3, [r7, #0]
 800bda6:	69db      	ldr	r3, [r3, #28]
 800bda8:	4313      	orrs	r3, r2
 800bdaa:	60fb      	str	r3, [r7, #12]
 800bdac:	68fb      	ldr	r3, [r7, #12]
 800bdae:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 800bdb2:	683b      	ldr	r3, [r7, #0]
 800bdb4:	6a1b      	ldr	r3, [r3, #32]
 800bdb6:	4313      	orrs	r3, r2
 800bdb8:	60fb      	str	r3, [r7, #12]
 800bdba:	687b      	ldr	r3, [r7, #4]
 800bdbc:	681b      	ldr	r3, [r3, #0]
 800bdbe:	68fa      	ldr	r2, [r7, #12]
 800bdc0:	645a      	str	r2, [r3, #68]	; 0x44
 800bdc2:	687b      	ldr	r3, [r7, #4]
 800bdc4:	2200      	movs	r2, #0
 800bdc6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bdca:	2300      	movs	r3, #0
 800bdcc:	4618      	mov	r0, r3
 800bdce:	3714      	adds	r7, #20
 800bdd0:	46bd      	mov	sp, r7
 800bdd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdd6:	4770      	bx	lr
 800bdd8:	40010000 	.word	0x40010000
 800bddc:	40010400 	.word	0x40010400

0800bde0 <HAL_TIMEx_CommutCallback>:
 800bde0:	b480      	push	{r7}
 800bde2:	b083      	sub	sp, #12
 800bde4:	af00      	add	r7, sp, #0
 800bde6:	6078      	str	r0, [r7, #4]
 800bde8:	bf00      	nop
 800bdea:	370c      	adds	r7, #12
 800bdec:	46bd      	mov	sp, r7
 800bdee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdf2:	4770      	bx	lr

0800bdf4 <HAL_TIMEx_BreakCallback>:
 800bdf4:	b480      	push	{r7}
 800bdf6:	b083      	sub	sp, #12
 800bdf8:	af00      	add	r7, sp, #0
 800bdfa:	6078      	str	r0, [r7, #4]
 800bdfc:	bf00      	nop
 800bdfe:	370c      	adds	r7, #12
 800be00:	46bd      	mov	sp, r7
 800be02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be06:	4770      	bx	lr

0800be08 <HAL_TIMEx_Break2Callback>:
 800be08:	b480      	push	{r7}
 800be0a:	b083      	sub	sp, #12
 800be0c:	af00      	add	r7, sp, #0
 800be0e:	6078      	str	r0, [r7, #4]
 800be10:	bf00      	nop
 800be12:	370c      	adds	r7, #12
 800be14:	46bd      	mov	sp, r7
 800be16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be1a:	4770      	bx	lr

0800be1c <HAL_UART_Init>:
 800be1c:	b580      	push	{r7, lr}
 800be1e:	b082      	sub	sp, #8
 800be20:	af00      	add	r7, sp, #0
 800be22:	6078      	str	r0, [r7, #4]
 800be24:	687b      	ldr	r3, [r7, #4]
 800be26:	2b00      	cmp	r3, #0
 800be28:	d101      	bne.n	800be2e <HAL_UART_Init+0x12>
 800be2a:	2301      	movs	r3, #1
 800be2c:	e040      	b.n	800beb0 <HAL_UART_Init+0x94>
 800be2e:	687b      	ldr	r3, [r7, #4]
 800be30:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800be32:	2b00      	cmp	r3, #0
 800be34:	d106      	bne.n	800be44 <HAL_UART_Init+0x28>
 800be36:	687b      	ldr	r3, [r7, #4]
 800be38:	2200      	movs	r2, #0
 800be3a:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800be3e:	6878      	ldr	r0, [r7, #4]
 800be40:	f7fa f80a 	bl	8005e58 <HAL_UART_MspInit>
 800be44:	687b      	ldr	r3, [r7, #4]
 800be46:	2224      	movs	r2, #36	; 0x24
 800be48:	675a      	str	r2, [r3, #116]	; 0x74
 800be4a:	687b      	ldr	r3, [r7, #4]
 800be4c:	681b      	ldr	r3, [r3, #0]
 800be4e:	681a      	ldr	r2, [r3, #0]
 800be50:	687b      	ldr	r3, [r7, #4]
 800be52:	681b      	ldr	r3, [r3, #0]
 800be54:	f022 0201 	bic.w	r2, r2, #1
 800be58:	601a      	str	r2, [r3, #0]
 800be5a:	6878      	ldr	r0, [r7, #4]
 800be5c:	f000 fad0 	bl	800c400 <UART_SetConfig>
 800be60:	4603      	mov	r3, r0
 800be62:	2b01      	cmp	r3, #1
 800be64:	d101      	bne.n	800be6a <HAL_UART_Init+0x4e>
 800be66:	2301      	movs	r3, #1
 800be68:	e022      	b.n	800beb0 <HAL_UART_Init+0x94>
 800be6a:	687b      	ldr	r3, [r7, #4]
 800be6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be6e:	2b00      	cmp	r3, #0
 800be70:	d002      	beq.n	800be78 <HAL_UART_Init+0x5c>
 800be72:	6878      	ldr	r0, [r7, #4]
 800be74:	f000 fd6e 	bl	800c954 <UART_AdvFeatureConfig>
 800be78:	687b      	ldr	r3, [r7, #4]
 800be7a:	681b      	ldr	r3, [r3, #0]
 800be7c:	685a      	ldr	r2, [r3, #4]
 800be7e:	687b      	ldr	r3, [r7, #4]
 800be80:	681b      	ldr	r3, [r3, #0]
 800be82:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800be86:	605a      	str	r2, [r3, #4]
 800be88:	687b      	ldr	r3, [r7, #4]
 800be8a:	681b      	ldr	r3, [r3, #0]
 800be8c:	689a      	ldr	r2, [r3, #8]
 800be8e:	687b      	ldr	r3, [r7, #4]
 800be90:	681b      	ldr	r3, [r3, #0]
 800be92:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800be96:	609a      	str	r2, [r3, #8]
 800be98:	687b      	ldr	r3, [r7, #4]
 800be9a:	681b      	ldr	r3, [r3, #0]
 800be9c:	681a      	ldr	r2, [r3, #0]
 800be9e:	687b      	ldr	r3, [r7, #4]
 800bea0:	681b      	ldr	r3, [r3, #0]
 800bea2:	f042 0201 	orr.w	r2, r2, #1
 800bea6:	601a      	str	r2, [r3, #0]
 800bea8:	6878      	ldr	r0, [r7, #4]
 800beaa:	f000 fdf5 	bl	800ca98 <UART_CheckIdleState>
 800beae:	4603      	mov	r3, r0
 800beb0:	4618      	mov	r0, r3
 800beb2:	3708      	adds	r7, #8
 800beb4:	46bd      	mov	sp, r7
 800beb6:	bd80      	pop	{r7, pc}

0800beb8 <HAL_UART_Transmit>:
 800beb8:	b580      	push	{r7, lr}
 800beba:	b08a      	sub	sp, #40	; 0x28
 800bebc:	af02      	add	r7, sp, #8
 800bebe:	60f8      	str	r0, [r7, #12]
 800bec0:	60b9      	str	r1, [r7, #8]
 800bec2:	603b      	str	r3, [r7, #0]
 800bec4:	4613      	mov	r3, r2
 800bec6:	80fb      	strh	r3, [r7, #6]
 800bec8:	68fb      	ldr	r3, [r7, #12]
 800beca:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800becc:	2b20      	cmp	r3, #32
 800bece:	d17f      	bne.n	800bfd0 <HAL_UART_Transmit+0x118>
 800bed0:	68bb      	ldr	r3, [r7, #8]
 800bed2:	2b00      	cmp	r3, #0
 800bed4:	d002      	beq.n	800bedc <HAL_UART_Transmit+0x24>
 800bed6:	88fb      	ldrh	r3, [r7, #6]
 800bed8:	2b00      	cmp	r3, #0
 800beda:	d101      	bne.n	800bee0 <HAL_UART_Transmit+0x28>
 800bedc:	2301      	movs	r3, #1
 800bede:	e078      	b.n	800bfd2 <HAL_UART_Transmit+0x11a>
 800bee0:	68fb      	ldr	r3, [r7, #12]
 800bee2:	f893 3070 	ldrb.w	r3, [r3, #112]	; 0x70
 800bee6:	2b01      	cmp	r3, #1
 800bee8:	d101      	bne.n	800beee <HAL_UART_Transmit+0x36>
 800beea:	2302      	movs	r3, #2
 800beec:	e071      	b.n	800bfd2 <HAL_UART_Transmit+0x11a>
 800beee:	68fb      	ldr	r3, [r7, #12]
 800bef0:	2201      	movs	r2, #1
 800bef2:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800bef6:	68fb      	ldr	r3, [r7, #12]
 800bef8:	2200      	movs	r2, #0
 800befa:	67da      	str	r2, [r3, #124]	; 0x7c
 800befc:	68fb      	ldr	r3, [r7, #12]
 800befe:	2221      	movs	r2, #33	; 0x21
 800bf00:	675a      	str	r2, [r3, #116]	; 0x74
 800bf02:	f7fa fa4b 	bl	800639c <HAL_GetTick>
 800bf06:	6178      	str	r0, [r7, #20]
 800bf08:	68fb      	ldr	r3, [r7, #12]
 800bf0a:	88fa      	ldrh	r2, [r7, #6]
 800bf0c:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 800bf10:	68fb      	ldr	r3, [r7, #12]
 800bf12:	88fa      	ldrh	r2, [r7, #6]
 800bf14:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800bf18:	68fb      	ldr	r3, [r7, #12]
 800bf1a:	689b      	ldr	r3, [r3, #8]
 800bf1c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bf20:	d108      	bne.n	800bf34 <HAL_UART_Transmit+0x7c>
 800bf22:	68fb      	ldr	r3, [r7, #12]
 800bf24:	691b      	ldr	r3, [r3, #16]
 800bf26:	2b00      	cmp	r3, #0
 800bf28:	d104      	bne.n	800bf34 <HAL_UART_Transmit+0x7c>
 800bf2a:	2300      	movs	r3, #0
 800bf2c:	61fb      	str	r3, [r7, #28]
 800bf2e:	68bb      	ldr	r3, [r7, #8]
 800bf30:	61bb      	str	r3, [r7, #24]
 800bf32:	e003      	b.n	800bf3c <HAL_UART_Transmit+0x84>
 800bf34:	68bb      	ldr	r3, [r7, #8]
 800bf36:	61fb      	str	r3, [r7, #28]
 800bf38:	2300      	movs	r3, #0
 800bf3a:	61bb      	str	r3, [r7, #24]
 800bf3c:	68fb      	ldr	r3, [r7, #12]
 800bf3e:	2200      	movs	r2, #0
 800bf40:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800bf44:	e02c      	b.n	800bfa0 <HAL_UART_Transmit+0xe8>
 800bf46:	683b      	ldr	r3, [r7, #0]
 800bf48:	9300      	str	r3, [sp, #0]
 800bf4a:	697b      	ldr	r3, [r7, #20]
 800bf4c:	2200      	movs	r2, #0
 800bf4e:	2180      	movs	r1, #128	; 0x80
 800bf50:	68f8      	ldr	r0, [r7, #12]
 800bf52:	f000 fdd0 	bl	800caf6 <UART_WaitOnFlagUntilTimeout>
 800bf56:	4603      	mov	r3, r0
 800bf58:	2b00      	cmp	r3, #0
 800bf5a:	d001      	beq.n	800bf60 <HAL_UART_Transmit+0xa8>
 800bf5c:	2303      	movs	r3, #3
 800bf5e:	e038      	b.n	800bfd2 <HAL_UART_Transmit+0x11a>
 800bf60:	69fb      	ldr	r3, [r7, #28]
 800bf62:	2b00      	cmp	r3, #0
 800bf64:	d10b      	bne.n	800bf7e <HAL_UART_Transmit+0xc6>
 800bf66:	69bb      	ldr	r3, [r7, #24]
 800bf68:	881b      	ldrh	r3, [r3, #0]
 800bf6a:	461a      	mov	r2, r3
 800bf6c:	68fb      	ldr	r3, [r7, #12]
 800bf6e:	681b      	ldr	r3, [r3, #0]
 800bf70:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800bf74:	629a      	str	r2, [r3, #40]	; 0x28
 800bf76:	69bb      	ldr	r3, [r7, #24]
 800bf78:	3302      	adds	r3, #2
 800bf7a:	61bb      	str	r3, [r7, #24]
 800bf7c:	e007      	b.n	800bf8e <HAL_UART_Transmit+0xd6>
 800bf7e:	69fb      	ldr	r3, [r7, #28]
 800bf80:	781a      	ldrb	r2, [r3, #0]
 800bf82:	68fb      	ldr	r3, [r7, #12]
 800bf84:	681b      	ldr	r3, [r3, #0]
 800bf86:	629a      	str	r2, [r3, #40]	; 0x28
 800bf88:	69fb      	ldr	r3, [r7, #28]
 800bf8a:	3301      	adds	r3, #1
 800bf8c:	61fb      	str	r3, [r7, #28]
 800bf8e:	68fb      	ldr	r3, [r7, #12]
 800bf90:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 800bf94:	b29b      	uxth	r3, r3
 800bf96:	3b01      	subs	r3, #1
 800bf98:	b29a      	uxth	r2, r3
 800bf9a:	68fb      	ldr	r3, [r7, #12]
 800bf9c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800bfa0:	68fb      	ldr	r3, [r7, #12]
 800bfa2:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 800bfa6:	b29b      	uxth	r3, r3
 800bfa8:	2b00      	cmp	r3, #0
 800bfaa:	d1cc      	bne.n	800bf46 <HAL_UART_Transmit+0x8e>
 800bfac:	683b      	ldr	r3, [r7, #0]
 800bfae:	9300      	str	r3, [sp, #0]
 800bfb0:	697b      	ldr	r3, [r7, #20]
 800bfb2:	2200      	movs	r2, #0
 800bfb4:	2140      	movs	r1, #64	; 0x40
 800bfb6:	68f8      	ldr	r0, [r7, #12]
 800bfb8:	f000 fd9d 	bl	800caf6 <UART_WaitOnFlagUntilTimeout>
 800bfbc:	4603      	mov	r3, r0
 800bfbe:	2b00      	cmp	r3, #0
 800bfc0:	d001      	beq.n	800bfc6 <HAL_UART_Transmit+0x10e>
 800bfc2:	2303      	movs	r3, #3
 800bfc4:	e005      	b.n	800bfd2 <HAL_UART_Transmit+0x11a>
 800bfc6:	68fb      	ldr	r3, [r7, #12]
 800bfc8:	2220      	movs	r2, #32
 800bfca:	675a      	str	r2, [r3, #116]	; 0x74
 800bfcc:	2300      	movs	r3, #0
 800bfce:	e000      	b.n	800bfd2 <HAL_UART_Transmit+0x11a>
 800bfd0:	2302      	movs	r3, #2
 800bfd2:	4618      	mov	r0, r3
 800bfd4:	3720      	adds	r7, #32
 800bfd6:	46bd      	mov	sp, r7
 800bfd8:	bd80      	pop	{r7, pc}

0800bfda <HAL_UART_Receive>:
 800bfda:	b580      	push	{r7, lr}
 800bfdc:	b08a      	sub	sp, #40	; 0x28
 800bfde:	af02      	add	r7, sp, #8
 800bfe0:	60f8      	str	r0, [r7, #12]
 800bfe2:	60b9      	str	r1, [r7, #8]
 800bfe4:	603b      	str	r3, [r7, #0]
 800bfe6:	4613      	mov	r3, r2
 800bfe8:	80fb      	strh	r3, [r7, #6]
 800bfea:	68fb      	ldr	r3, [r7, #12]
 800bfec:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bfee:	2b20      	cmp	r3, #32
 800bff0:	f040 80ba 	bne.w	800c168 <HAL_UART_Receive+0x18e>
 800bff4:	68bb      	ldr	r3, [r7, #8]
 800bff6:	2b00      	cmp	r3, #0
 800bff8:	d002      	beq.n	800c000 <HAL_UART_Receive+0x26>
 800bffa:	88fb      	ldrh	r3, [r7, #6]
 800bffc:	2b00      	cmp	r3, #0
 800bffe:	d101      	bne.n	800c004 <HAL_UART_Receive+0x2a>
 800c000:	2301      	movs	r3, #1
 800c002:	e0b2      	b.n	800c16a <HAL_UART_Receive+0x190>
 800c004:	68fb      	ldr	r3, [r7, #12]
 800c006:	f893 3070 	ldrb.w	r3, [r3, #112]	; 0x70
 800c00a:	2b01      	cmp	r3, #1
 800c00c:	d101      	bne.n	800c012 <HAL_UART_Receive+0x38>
 800c00e:	2302      	movs	r3, #2
 800c010:	e0ab      	b.n	800c16a <HAL_UART_Receive+0x190>
 800c012:	68fb      	ldr	r3, [r7, #12]
 800c014:	2201      	movs	r2, #1
 800c016:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800c01a:	68fb      	ldr	r3, [r7, #12]
 800c01c:	2200      	movs	r2, #0
 800c01e:	67da      	str	r2, [r3, #124]	; 0x7c
 800c020:	68fb      	ldr	r3, [r7, #12]
 800c022:	2222      	movs	r2, #34	; 0x22
 800c024:	679a      	str	r2, [r3, #120]	; 0x78
 800c026:	f7fa f9b9 	bl	800639c <HAL_GetTick>
 800c02a:	6178      	str	r0, [r7, #20]
 800c02c:	68fb      	ldr	r3, [r7, #12]
 800c02e:	88fa      	ldrh	r2, [r7, #6]
 800c030:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
 800c034:	68fb      	ldr	r3, [r7, #12]
 800c036:	88fa      	ldrh	r2, [r7, #6]
 800c038:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800c03c:	68fb      	ldr	r3, [r7, #12]
 800c03e:	689b      	ldr	r3, [r3, #8]
 800c040:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c044:	d10e      	bne.n	800c064 <HAL_UART_Receive+0x8a>
 800c046:	68fb      	ldr	r3, [r7, #12]
 800c048:	691b      	ldr	r3, [r3, #16]
 800c04a:	2b00      	cmp	r3, #0
 800c04c:	d105      	bne.n	800c05a <HAL_UART_Receive+0x80>
 800c04e:	68fb      	ldr	r3, [r7, #12]
 800c050:	f240 12ff 	movw	r2, #511	; 0x1ff
 800c054:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c058:	e02d      	b.n	800c0b6 <HAL_UART_Receive+0xdc>
 800c05a:	68fb      	ldr	r3, [r7, #12]
 800c05c:	22ff      	movs	r2, #255	; 0xff
 800c05e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c062:	e028      	b.n	800c0b6 <HAL_UART_Receive+0xdc>
 800c064:	68fb      	ldr	r3, [r7, #12]
 800c066:	689b      	ldr	r3, [r3, #8]
 800c068:	2b00      	cmp	r3, #0
 800c06a:	d10d      	bne.n	800c088 <HAL_UART_Receive+0xae>
 800c06c:	68fb      	ldr	r3, [r7, #12]
 800c06e:	691b      	ldr	r3, [r3, #16]
 800c070:	2b00      	cmp	r3, #0
 800c072:	d104      	bne.n	800c07e <HAL_UART_Receive+0xa4>
 800c074:	68fb      	ldr	r3, [r7, #12]
 800c076:	22ff      	movs	r2, #255	; 0xff
 800c078:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c07c:	e01b      	b.n	800c0b6 <HAL_UART_Receive+0xdc>
 800c07e:	68fb      	ldr	r3, [r7, #12]
 800c080:	227f      	movs	r2, #127	; 0x7f
 800c082:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c086:	e016      	b.n	800c0b6 <HAL_UART_Receive+0xdc>
 800c088:	68fb      	ldr	r3, [r7, #12]
 800c08a:	689b      	ldr	r3, [r3, #8]
 800c08c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800c090:	d10d      	bne.n	800c0ae <HAL_UART_Receive+0xd4>
 800c092:	68fb      	ldr	r3, [r7, #12]
 800c094:	691b      	ldr	r3, [r3, #16]
 800c096:	2b00      	cmp	r3, #0
 800c098:	d104      	bne.n	800c0a4 <HAL_UART_Receive+0xca>
 800c09a:	68fb      	ldr	r3, [r7, #12]
 800c09c:	227f      	movs	r2, #127	; 0x7f
 800c09e:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c0a2:	e008      	b.n	800c0b6 <HAL_UART_Receive+0xdc>
 800c0a4:	68fb      	ldr	r3, [r7, #12]
 800c0a6:	223f      	movs	r2, #63	; 0x3f
 800c0a8:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c0ac:	e003      	b.n	800c0b6 <HAL_UART_Receive+0xdc>
 800c0ae:	68fb      	ldr	r3, [r7, #12]
 800c0b0:	2200      	movs	r2, #0
 800c0b2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800c0b6:	68fb      	ldr	r3, [r7, #12]
 800c0b8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800c0bc:	827b      	strh	r3, [r7, #18]
 800c0be:	68fb      	ldr	r3, [r7, #12]
 800c0c0:	689b      	ldr	r3, [r3, #8]
 800c0c2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c0c6:	d108      	bne.n	800c0da <HAL_UART_Receive+0x100>
 800c0c8:	68fb      	ldr	r3, [r7, #12]
 800c0ca:	691b      	ldr	r3, [r3, #16]
 800c0cc:	2b00      	cmp	r3, #0
 800c0ce:	d104      	bne.n	800c0da <HAL_UART_Receive+0x100>
 800c0d0:	2300      	movs	r3, #0
 800c0d2:	61fb      	str	r3, [r7, #28]
 800c0d4:	68bb      	ldr	r3, [r7, #8]
 800c0d6:	61bb      	str	r3, [r7, #24]
 800c0d8:	e003      	b.n	800c0e2 <HAL_UART_Receive+0x108>
 800c0da:	68bb      	ldr	r3, [r7, #8]
 800c0dc:	61fb      	str	r3, [r7, #28]
 800c0de:	2300      	movs	r3, #0
 800c0e0:	61bb      	str	r3, [r7, #24]
 800c0e2:	68fb      	ldr	r3, [r7, #12]
 800c0e4:	2200      	movs	r2, #0
 800c0e6:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800c0ea:	e032      	b.n	800c152 <HAL_UART_Receive+0x178>
 800c0ec:	683b      	ldr	r3, [r7, #0]
 800c0ee:	9300      	str	r3, [sp, #0]
 800c0f0:	697b      	ldr	r3, [r7, #20]
 800c0f2:	2200      	movs	r2, #0
 800c0f4:	2120      	movs	r1, #32
 800c0f6:	68f8      	ldr	r0, [r7, #12]
 800c0f8:	f000 fcfd 	bl	800caf6 <UART_WaitOnFlagUntilTimeout>
 800c0fc:	4603      	mov	r3, r0
 800c0fe:	2b00      	cmp	r3, #0
 800c100:	d001      	beq.n	800c106 <HAL_UART_Receive+0x12c>
 800c102:	2303      	movs	r3, #3
 800c104:	e031      	b.n	800c16a <HAL_UART_Receive+0x190>
 800c106:	69fb      	ldr	r3, [r7, #28]
 800c108:	2b00      	cmp	r3, #0
 800c10a:	d10c      	bne.n	800c126 <HAL_UART_Receive+0x14c>
 800c10c:	68fb      	ldr	r3, [r7, #12]
 800c10e:	681b      	ldr	r3, [r3, #0]
 800c110:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c112:	b29a      	uxth	r2, r3
 800c114:	8a7b      	ldrh	r3, [r7, #18]
 800c116:	4013      	ands	r3, r2
 800c118:	b29a      	uxth	r2, r3
 800c11a:	69bb      	ldr	r3, [r7, #24]
 800c11c:	801a      	strh	r2, [r3, #0]
 800c11e:	69bb      	ldr	r3, [r7, #24]
 800c120:	3302      	adds	r3, #2
 800c122:	61bb      	str	r3, [r7, #24]
 800c124:	e00c      	b.n	800c140 <HAL_UART_Receive+0x166>
 800c126:	68fb      	ldr	r3, [r7, #12]
 800c128:	681b      	ldr	r3, [r3, #0]
 800c12a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c12c:	b2da      	uxtb	r2, r3
 800c12e:	8a7b      	ldrh	r3, [r7, #18]
 800c130:	b2db      	uxtb	r3, r3
 800c132:	4013      	ands	r3, r2
 800c134:	b2da      	uxtb	r2, r3
 800c136:	69fb      	ldr	r3, [r7, #28]
 800c138:	701a      	strb	r2, [r3, #0]
 800c13a:	69fb      	ldr	r3, [r7, #28]
 800c13c:	3301      	adds	r3, #1
 800c13e:	61fb      	str	r3, [r7, #28]
 800c140:	68fb      	ldr	r3, [r7, #12]
 800c142:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800c146:	b29b      	uxth	r3, r3
 800c148:	3b01      	subs	r3, #1
 800c14a:	b29a      	uxth	r2, r3
 800c14c:	68fb      	ldr	r3, [r7, #12]
 800c14e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800c152:	68fb      	ldr	r3, [r7, #12]
 800c154:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800c158:	b29b      	uxth	r3, r3
 800c15a:	2b00      	cmp	r3, #0
 800c15c:	d1c6      	bne.n	800c0ec <HAL_UART_Receive+0x112>
 800c15e:	68fb      	ldr	r3, [r7, #12]
 800c160:	2220      	movs	r2, #32
 800c162:	679a      	str	r2, [r3, #120]	; 0x78
 800c164:	2300      	movs	r3, #0
 800c166:	e000      	b.n	800c16a <HAL_UART_Receive+0x190>
 800c168:	2302      	movs	r3, #2
 800c16a:	4618      	mov	r0, r3
 800c16c:	3720      	adds	r7, #32
 800c16e:	46bd      	mov	sp, r7
 800c170:	bd80      	pop	{r7, pc}
	...

0800c174 <HAL_UART_IRQHandler>:
 800c174:	b580      	push	{r7, lr}
 800c176:	b088      	sub	sp, #32
 800c178:	af00      	add	r7, sp, #0
 800c17a:	6078      	str	r0, [r7, #4]
 800c17c:	687b      	ldr	r3, [r7, #4]
 800c17e:	681b      	ldr	r3, [r3, #0]
 800c180:	69db      	ldr	r3, [r3, #28]
 800c182:	61fb      	str	r3, [r7, #28]
 800c184:	687b      	ldr	r3, [r7, #4]
 800c186:	681b      	ldr	r3, [r3, #0]
 800c188:	681b      	ldr	r3, [r3, #0]
 800c18a:	61bb      	str	r3, [r7, #24]
 800c18c:	687b      	ldr	r3, [r7, #4]
 800c18e:	681b      	ldr	r3, [r3, #0]
 800c190:	689b      	ldr	r3, [r3, #8]
 800c192:	617b      	str	r3, [r7, #20]
 800c194:	69fa      	ldr	r2, [r7, #28]
 800c196:	f640 030f 	movw	r3, #2063	; 0x80f
 800c19a:	4013      	ands	r3, r2
 800c19c:	613b      	str	r3, [r7, #16]
 800c19e:	693b      	ldr	r3, [r7, #16]
 800c1a0:	2b00      	cmp	r3, #0
 800c1a2:	d113      	bne.n	800c1cc <HAL_UART_IRQHandler+0x58>
 800c1a4:	69fb      	ldr	r3, [r7, #28]
 800c1a6:	f003 0320 	and.w	r3, r3, #32
 800c1aa:	2b00      	cmp	r3, #0
 800c1ac:	d00e      	beq.n	800c1cc <HAL_UART_IRQHandler+0x58>
 800c1ae:	69bb      	ldr	r3, [r7, #24]
 800c1b0:	f003 0320 	and.w	r3, r3, #32
 800c1b4:	2b00      	cmp	r3, #0
 800c1b6:	d009      	beq.n	800c1cc <HAL_UART_IRQHandler+0x58>
 800c1b8:	687b      	ldr	r3, [r7, #4]
 800c1ba:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c1bc:	2b00      	cmp	r3, #0
 800c1be:	f000 8100 	beq.w	800c3c2 <HAL_UART_IRQHandler+0x24e>
 800c1c2:	687b      	ldr	r3, [r7, #4]
 800c1c4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c1c6:	6878      	ldr	r0, [r7, #4]
 800c1c8:	4798      	blx	r3
 800c1ca:	e0fa      	b.n	800c3c2 <HAL_UART_IRQHandler+0x24e>
 800c1cc:	693b      	ldr	r3, [r7, #16]
 800c1ce:	2b00      	cmp	r3, #0
 800c1d0:	f000 80d5 	beq.w	800c37e <HAL_UART_IRQHandler+0x20a>
 800c1d4:	697b      	ldr	r3, [r7, #20]
 800c1d6:	f003 0301 	and.w	r3, r3, #1
 800c1da:	2b00      	cmp	r3, #0
 800c1dc:	d105      	bne.n	800c1ea <HAL_UART_IRQHandler+0x76>
 800c1de:	69bb      	ldr	r3, [r7, #24]
 800c1e0:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800c1e4:	2b00      	cmp	r3, #0
 800c1e6:	f000 80ca 	beq.w	800c37e <HAL_UART_IRQHandler+0x20a>
 800c1ea:	69fb      	ldr	r3, [r7, #28]
 800c1ec:	f003 0301 	and.w	r3, r3, #1
 800c1f0:	2b00      	cmp	r3, #0
 800c1f2:	d00e      	beq.n	800c212 <HAL_UART_IRQHandler+0x9e>
 800c1f4:	69bb      	ldr	r3, [r7, #24]
 800c1f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c1fa:	2b00      	cmp	r3, #0
 800c1fc:	d009      	beq.n	800c212 <HAL_UART_IRQHandler+0x9e>
 800c1fe:	687b      	ldr	r3, [r7, #4]
 800c200:	681b      	ldr	r3, [r3, #0]
 800c202:	2201      	movs	r2, #1
 800c204:	621a      	str	r2, [r3, #32]
 800c206:	687b      	ldr	r3, [r7, #4]
 800c208:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c20a:	f043 0201 	orr.w	r2, r3, #1
 800c20e:	687b      	ldr	r3, [r7, #4]
 800c210:	67da      	str	r2, [r3, #124]	; 0x7c
 800c212:	69fb      	ldr	r3, [r7, #28]
 800c214:	f003 0302 	and.w	r3, r3, #2
 800c218:	2b00      	cmp	r3, #0
 800c21a:	d00e      	beq.n	800c23a <HAL_UART_IRQHandler+0xc6>
 800c21c:	697b      	ldr	r3, [r7, #20]
 800c21e:	f003 0301 	and.w	r3, r3, #1
 800c222:	2b00      	cmp	r3, #0
 800c224:	d009      	beq.n	800c23a <HAL_UART_IRQHandler+0xc6>
 800c226:	687b      	ldr	r3, [r7, #4]
 800c228:	681b      	ldr	r3, [r3, #0]
 800c22a:	2202      	movs	r2, #2
 800c22c:	621a      	str	r2, [r3, #32]
 800c22e:	687b      	ldr	r3, [r7, #4]
 800c230:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c232:	f043 0204 	orr.w	r2, r3, #4
 800c236:	687b      	ldr	r3, [r7, #4]
 800c238:	67da      	str	r2, [r3, #124]	; 0x7c
 800c23a:	69fb      	ldr	r3, [r7, #28]
 800c23c:	f003 0304 	and.w	r3, r3, #4
 800c240:	2b00      	cmp	r3, #0
 800c242:	d00e      	beq.n	800c262 <HAL_UART_IRQHandler+0xee>
 800c244:	697b      	ldr	r3, [r7, #20]
 800c246:	f003 0301 	and.w	r3, r3, #1
 800c24a:	2b00      	cmp	r3, #0
 800c24c:	d009      	beq.n	800c262 <HAL_UART_IRQHandler+0xee>
 800c24e:	687b      	ldr	r3, [r7, #4]
 800c250:	681b      	ldr	r3, [r3, #0]
 800c252:	2204      	movs	r2, #4
 800c254:	621a      	str	r2, [r3, #32]
 800c256:	687b      	ldr	r3, [r7, #4]
 800c258:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c25a:	f043 0202 	orr.w	r2, r3, #2
 800c25e:	687b      	ldr	r3, [r7, #4]
 800c260:	67da      	str	r2, [r3, #124]	; 0x7c
 800c262:	69fb      	ldr	r3, [r7, #28]
 800c264:	f003 0308 	and.w	r3, r3, #8
 800c268:	2b00      	cmp	r3, #0
 800c26a:	d013      	beq.n	800c294 <HAL_UART_IRQHandler+0x120>
 800c26c:	69bb      	ldr	r3, [r7, #24]
 800c26e:	f003 0320 	and.w	r3, r3, #32
 800c272:	2b00      	cmp	r3, #0
 800c274:	d104      	bne.n	800c280 <HAL_UART_IRQHandler+0x10c>
 800c276:	697b      	ldr	r3, [r7, #20]
 800c278:	f003 0301 	and.w	r3, r3, #1
 800c27c:	2b00      	cmp	r3, #0
 800c27e:	d009      	beq.n	800c294 <HAL_UART_IRQHandler+0x120>
 800c280:	687b      	ldr	r3, [r7, #4]
 800c282:	681b      	ldr	r3, [r3, #0]
 800c284:	2208      	movs	r2, #8
 800c286:	621a      	str	r2, [r3, #32]
 800c288:	687b      	ldr	r3, [r7, #4]
 800c28a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c28c:	f043 0208 	orr.w	r2, r3, #8
 800c290:	687b      	ldr	r3, [r7, #4]
 800c292:	67da      	str	r2, [r3, #124]	; 0x7c
 800c294:	69fb      	ldr	r3, [r7, #28]
 800c296:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800c29a:	2b00      	cmp	r3, #0
 800c29c:	d00f      	beq.n	800c2be <HAL_UART_IRQHandler+0x14a>
 800c29e:	69bb      	ldr	r3, [r7, #24]
 800c2a0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800c2a4:	2b00      	cmp	r3, #0
 800c2a6:	d00a      	beq.n	800c2be <HAL_UART_IRQHandler+0x14a>
 800c2a8:	687b      	ldr	r3, [r7, #4]
 800c2aa:	681b      	ldr	r3, [r3, #0]
 800c2ac:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800c2b0:	621a      	str	r2, [r3, #32]
 800c2b2:	687b      	ldr	r3, [r7, #4]
 800c2b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c2b6:	f043 0220 	orr.w	r2, r3, #32
 800c2ba:	687b      	ldr	r3, [r7, #4]
 800c2bc:	67da      	str	r2, [r3, #124]	; 0x7c
 800c2be:	687b      	ldr	r3, [r7, #4]
 800c2c0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c2c2:	2b00      	cmp	r3, #0
 800c2c4:	d07f      	beq.n	800c3c6 <HAL_UART_IRQHandler+0x252>
 800c2c6:	69fb      	ldr	r3, [r7, #28]
 800c2c8:	f003 0320 	and.w	r3, r3, #32
 800c2cc:	2b00      	cmp	r3, #0
 800c2ce:	d00c      	beq.n	800c2ea <HAL_UART_IRQHandler+0x176>
 800c2d0:	69bb      	ldr	r3, [r7, #24]
 800c2d2:	f003 0320 	and.w	r3, r3, #32
 800c2d6:	2b00      	cmp	r3, #0
 800c2d8:	d007      	beq.n	800c2ea <HAL_UART_IRQHandler+0x176>
 800c2da:	687b      	ldr	r3, [r7, #4]
 800c2dc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c2de:	2b00      	cmp	r3, #0
 800c2e0:	d003      	beq.n	800c2ea <HAL_UART_IRQHandler+0x176>
 800c2e2:	687b      	ldr	r3, [r7, #4]
 800c2e4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800c2e6:	6878      	ldr	r0, [r7, #4]
 800c2e8:	4798      	blx	r3
 800c2ea:	687b      	ldr	r3, [r7, #4]
 800c2ec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c2ee:	60fb      	str	r3, [r7, #12]
 800c2f0:	687b      	ldr	r3, [r7, #4]
 800c2f2:	681b      	ldr	r3, [r3, #0]
 800c2f4:	689b      	ldr	r3, [r3, #8]
 800c2f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c2fa:	2b40      	cmp	r3, #64	; 0x40
 800c2fc:	d004      	beq.n	800c308 <HAL_UART_IRQHandler+0x194>
 800c2fe:	68fb      	ldr	r3, [r7, #12]
 800c300:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800c304:	2b00      	cmp	r3, #0
 800c306:	d031      	beq.n	800c36c <HAL_UART_IRQHandler+0x1f8>
 800c308:	6878      	ldr	r0, [r7, #4]
 800c30a:	f000 fc6f 	bl	800cbec <UART_EndRxTransfer>
 800c30e:	687b      	ldr	r3, [r7, #4]
 800c310:	681b      	ldr	r3, [r3, #0]
 800c312:	689b      	ldr	r3, [r3, #8]
 800c314:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c318:	2b40      	cmp	r3, #64	; 0x40
 800c31a:	d123      	bne.n	800c364 <HAL_UART_IRQHandler+0x1f0>
 800c31c:	687b      	ldr	r3, [r7, #4]
 800c31e:	681b      	ldr	r3, [r3, #0]
 800c320:	689a      	ldr	r2, [r3, #8]
 800c322:	687b      	ldr	r3, [r7, #4]
 800c324:	681b      	ldr	r3, [r3, #0]
 800c326:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c32a:	609a      	str	r2, [r3, #8]
 800c32c:	687b      	ldr	r3, [r7, #4]
 800c32e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c330:	2b00      	cmp	r3, #0
 800c332:	d013      	beq.n	800c35c <HAL_UART_IRQHandler+0x1e8>
 800c334:	687b      	ldr	r3, [r7, #4]
 800c336:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c338:	4a26      	ldr	r2, [pc, #152]	; (800c3d4 <HAL_UART_IRQHandler+0x260>)
 800c33a:	651a      	str	r2, [r3, #80]	; 0x50
 800c33c:	687b      	ldr	r3, [r7, #4]
 800c33e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c340:	4618      	mov	r0, r3
 800c342:	f7fa feef 	bl	8007124 <HAL_DMA_Abort_IT>
 800c346:	4603      	mov	r3, r0
 800c348:	2b00      	cmp	r3, #0
 800c34a:	d016      	beq.n	800c37a <HAL_UART_IRQHandler+0x206>
 800c34c:	687b      	ldr	r3, [r7, #4]
 800c34e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c350:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c352:	687a      	ldr	r2, [r7, #4]
 800c354:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 800c356:	4610      	mov	r0, r2
 800c358:	4798      	blx	r3
 800c35a:	e00e      	b.n	800c37a <HAL_UART_IRQHandler+0x206>
 800c35c:	6878      	ldr	r0, [r7, #4]
 800c35e:	f000 f845 	bl	800c3ec <HAL_UART_ErrorCallback>
 800c362:	e00a      	b.n	800c37a <HAL_UART_IRQHandler+0x206>
 800c364:	6878      	ldr	r0, [r7, #4]
 800c366:	f000 f841 	bl	800c3ec <HAL_UART_ErrorCallback>
 800c36a:	e006      	b.n	800c37a <HAL_UART_IRQHandler+0x206>
 800c36c:	6878      	ldr	r0, [r7, #4]
 800c36e:	f000 f83d 	bl	800c3ec <HAL_UART_ErrorCallback>
 800c372:	687b      	ldr	r3, [r7, #4]
 800c374:	2200      	movs	r2, #0
 800c376:	67da      	str	r2, [r3, #124]	; 0x7c
 800c378:	e025      	b.n	800c3c6 <HAL_UART_IRQHandler+0x252>
 800c37a:	bf00      	nop
 800c37c:	e023      	b.n	800c3c6 <HAL_UART_IRQHandler+0x252>
 800c37e:	69fb      	ldr	r3, [r7, #28]
 800c380:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c384:	2b00      	cmp	r3, #0
 800c386:	d00d      	beq.n	800c3a4 <HAL_UART_IRQHandler+0x230>
 800c388:	69bb      	ldr	r3, [r7, #24]
 800c38a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c38e:	2b00      	cmp	r3, #0
 800c390:	d008      	beq.n	800c3a4 <HAL_UART_IRQHandler+0x230>
 800c392:	687b      	ldr	r3, [r7, #4]
 800c394:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c396:	2b00      	cmp	r3, #0
 800c398:	d017      	beq.n	800c3ca <HAL_UART_IRQHandler+0x256>
 800c39a:	687b      	ldr	r3, [r7, #4]
 800c39c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c39e:	6878      	ldr	r0, [r7, #4]
 800c3a0:	4798      	blx	r3
 800c3a2:	e012      	b.n	800c3ca <HAL_UART_IRQHandler+0x256>
 800c3a4:	69fb      	ldr	r3, [r7, #28]
 800c3a6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c3aa:	2b00      	cmp	r3, #0
 800c3ac:	d00e      	beq.n	800c3cc <HAL_UART_IRQHandler+0x258>
 800c3ae:	69bb      	ldr	r3, [r7, #24]
 800c3b0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c3b4:	2b00      	cmp	r3, #0
 800c3b6:	d009      	beq.n	800c3cc <HAL_UART_IRQHandler+0x258>
 800c3b8:	6878      	ldr	r0, [r7, #4]
 800c3ba:	f000 fc4d 	bl	800cc58 <UART_EndTransmit_IT>
 800c3be:	bf00      	nop
 800c3c0:	e004      	b.n	800c3cc <HAL_UART_IRQHandler+0x258>
 800c3c2:	bf00      	nop
 800c3c4:	e002      	b.n	800c3cc <HAL_UART_IRQHandler+0x258>
 800c3c6:	bf00      	nop
 800c3c8:	e000      	b.n	800c3cc <HAL_UART_IRQHandler+0x258>
 800c3ca:	bf00      	nop
 800c3cc:	3720      	adds	r7, #32
 800c3ce:	46bd      	mov	sp, r7
 800c3d0:	bd80      	pop	{r7, pc}
 800c3d2:	bf00      	nop
 800c3d4:	0800cc2d 	.word	0x0800cc2d

0800c3d8 <HAL_UART_TxCpltCallback>:
 800c3d8:	b480      	push	{r7}
 800c3da:	b083      	sub	sp, #12
 800c3dc:	af00      	add	r7, sp, #0
 800c3de:	6078      	str	r0, [r7, #4]
 800c3e0:	bf00      	nop
 800c3e2:	370c      	adds	r7, #12
 800c3e4:	46bd      	mov	sp, r7
 800c3e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3ea:	4770      	bx	lr

0800c3ec <HAL_UART_ErrorCallback>:
 800c3ec:	b480      	push	{r7}
 800c3ee:	b083      	sub	sp, #12
 800c3f0:	af00      	add	r7, sp, #0
 800c3f2:	6078      	str	r0, [r7, #4]
 800c3f4:	bf00      	nop
 800c3f6:	370c      	adds	r7, #12
 800c3f8:	46bd      	mov	sp, r7
 800c3fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3fe:	4770      	bx	lr

0800c400 <UART_SetConfig>:
 800c400:	b580      	push	{r7, lr}
 800c402:	b088      	sub	sp, #32
 800c404:	af00      	add	r7, sp, #0
 800c406:	6078      	str	r0, [r7, #4]
 800c408:	2300      	movs	r3, #0
 800c40a:	61bb      	str	r3, [r7, #24]
 800c40c:	2300      	movs	r3, #0
 800c40e:	75fb      	strb	r3, [r7, #23]
 800c410:	687b      	ldr	r3, [r7, #4]
 800c412:	689a      	ldr	r2, [r3, #8]
 800c414:	687b      	ldr	r3, [r7, #4]
 800c416:	691b      	ldr	r3, [r3, #16]
 800c418:	431a      	orrs	r2, r3
 800c41a:	687b      	ldr	r3, [r7, #4]
 800c41c:	695b      	ldr	r3, [r3, #20]
 800c41e:	431a      	orrs	r2, r3
 800c420:	687b      	ldr	r3, [r7, #4]
 800c422:	69db      	ldr	r3, [r3, #28]
 800c424:	4313      	orrs	r3, r2
 800c426:	613b      	str	r3, [r7, #16]
 800c428:	687b      	ldr	r3, [r7, #4]
 800c42a:	681b      	ldr	r3, [r3, #0]
 800c42c:	681a      	ldr	r2, [r3, #0]
 800c42e:	4bb1      	ldr	r3, [pc, #708]	; (800c6f4 <UART_SetConfig+0x2f4>)
 800c430:	4013      	ands	r3, r2
 800c432:	687a      	ldr	r2, [r7, #4]
 800c434:	6812      	ldr	r2, [r2, #0]
 800c436:	6939      	ldr	r1, [r7, #16]
 800c438:	430b      	orrs	r3, r1
 800c43a:	6013      	str	r3, [r2, #0]
 800c43c:	687b      	ldr	r3, [r7, #4]
 800c43e:	681b      	ldr	r3, [r3, #0]
 800c440:	685b      	ldr	r3, [r3, #4]
 800c442:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800c446:	687b      	ldr	r3, [r7, #4]
 800c448:	68da      	ldr	r2, [r3, #12]
 800c44a:	687b      	ldr	r3, [r7, #4]
 800c44c:	681b      	ldr	r3, [r3, #0]
 800c44e:	430a      	orrs	r2, r1
 800c450:	605a      	str	r2, [r3, #4]
 800c452:	687b      	ldr	r3, [r7, #4]
 800c454:	699b      	ldr	r3, [r3, #24]
 800c456:	613b      	str	r3, [r7, #16]
 800c458:	687b      	ldr	r3, [r7, #4]
 800c45a:	6a1b      	ldr	r3, [r3, #32]
 800c45c:	693a      	ldr	r2, [r7, #16]
 800c45e:	4313      	orrs	r3, r2
 800c460:	613b      	str	r3, [r7, #16]
 800c462:	687b      	ldr	r3, [r7, #4]
 800c464:	681b      	ldr	r3, [r3, #0]
 800c466:	689b      	ldr	r3, [r3, #8]
 800c468:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 800c46c:	687b      	ldr	r3, [r7, #4]
 800c46e:	681b      	ldr	r3, [r3, #0]
 800c470:	693a      	ldr	r2, [r7, #16]
 800c472:	430a      	orrs	r2, r1
 800c474:	609a      	str	r2, [r3, #8]
 800c476:	687b      	ldr	r3, [r7, #4]
 800c478:	681b      	ldr	r3, [r3, #0]
 800c47a:	4a9f      	ldr	r2, [pc, #636]	; (800c6f8 <UART_SetConfig+0x2f8>)
 800c47c:	4293      	cmp	r3, r2
 800c47e:	d121      	bne.n	800c4c4 <UART_SetConfig+0xc4>
 800c480:	4b9e      	ldr	r3, [pc, #632]	; (800c6fc <UART_SetConfig+0x2fc>)
 800c482:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c486:	f003 0303 	and.w	r3, r3, #3
 800c48a:	2b03      	cmp	r3, #3
 800c48c:	d816      	bhi.n	800c4bc <UART_SetConfig+0xbc>
 800c48e:	a201      	add	r2, pc, #4	; (adr r2, 800c494 <UART_SetConfig+0x94>)
 800c490:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c494:	0800c4a5 	.word	0x0800c4a5
 800c498:	0800c4b1 	.word	0x0800c4b1
 800c49c:	0800c4ab 	.word	0x0800c4ab
 800c4a0:	0800c4b7 	.word	0x0800c4b7
 800c4a4:	2301      	movs	r3, #1
 800c4a6:	77fb      	strb	r3, [r7, #31]
 800c4a8:	e151      	b.n	800c74e <UART_SetConfig+0x34e>
 800c4aa:	2302      	movs	r3, #2
 800c4ac:	77fb      	strb	r3, [r7, #31]
 800c4ae:	e14e      	b.n	800c74e <UART_SetConfig+0x34e>
 800c4b0:	2304      	movs	r3, #4
 800c4b2:	77fb      	strb	r3, [r7, #31]
 800c4b4:	e14b      	b.n	800c74e <UART_SetConfig+0x34e>
 800c4b6:	2308      	movs	r3, #8
 800c4b8:	77fb      	strb	r3, [r7, #31]
 800c4ba:	e148      	b.n	800c74e <UART_SetConfig+0x34e>
 800c4bc:	2310      	movs	r3, #16
 800c4be:	77fb      	strb	r3, [r7, #31]
 800c4c0:	bf00      	nop
 800c4c2:	e144      	b.n	800c74e <UART_SetConfig+0x34e>
 800c4c4:	687b      	ldr	r3, [r7, #4]
 800c4c6:	681b      	ldr	r3, [r3, #0]
 800c4c8:	4a8d      	ldr	r2, [pc, #564]	; (800c700 <UART_SetConfig+0x300>)
 800c4ca:	4293      	cmp	r3, r2
 800c4cc:	d134      	bne.n	800c538 <UART_SetConfig+0x138>
 800c4ce:	4b8b      	ldr	r3, [pc, #556]	; (800c6fc <UART_SetConfig+0x2fc>)
 800c4d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c4d4:	f003 030c 	and.w	r3, r3, #12
 800c4d8:	2b0c      	cmp	r3, #12
 800c4da:	d829      	bhi.n	800c530 <UART_SetConfig+0x130>
 800c4dc:	a201      	add	r2, pc, #4	; (adr r2, 800c4e4 <UART_SetConfig+0xe4>)
 800c4de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c4e2:	bf00      	nop
 800c4e4:	0800c519 	.word	0x0800c519
 800c4e8:	0800c531 	.word	0x0800c531
 800c4ec:	0800c531 	.word	0x0800c531
 800c4f0:	0800c531 	.word	0x0800c531
 800c4f4:	0800c525 	.word	0x0800c525
 800c4f8:	0800c531 	.word	0x0800c531
 800c4fc:	0800c531 	.word	0x0800c531
 800c500:	0800c531 	.word	0x0800c531
 800c504:	0800c51f 	.word	0x0800c51f
 800c508:	0800c531 	.word	0x0800c531
 800c50c:	0800c531 	.word	0x0800c531
 800c510:	0800c531 	.word	0x0800c531
 800c514:	0800c52b 	.word	0x0800c52b
 800c518:	2300      	movs	r3, #0
 800c51a:	77fb      	strb	r3, [r7, #31]
 800c51c:	e117      	b.n	800c74e <UART_SetConfig+0x34e>
 800c51e:	2302      	movs	r3, #2
 800c520:	77fb      	strb	r3, [r7, #31]
 800c522:	e114      	b.n	800c74e <UART_SetConfig+0x34e>
 800c524:	2304      	movs	r3, #4
 800c526:	77fb      	strb	r3, [r7, #31]
 800c528:	e111      	b.n	800c74e <UART_SetConfig+0x34e>
 800c52a:	2308      	movs	r3, #8
 800c52c:	77fb      	strb	r3, [r7, #31]
 800c52e:	e10e      	b.n	800c74e <UART_SetConfig+0x34e>
 800c530:	2310      	movs	r3, #16
 800c532:	77fb      	strb	r3, [r7, #31]
 800c534:	bf00      	nop
 800c536:	e10a      	b.n	800c74e <UART_SetConfig+0x34e>
 800c538:	687b      	ldr	r3, [r7, #4]
 800c53a:	681b      	ldr	r3, [r3, #0]
 800c53c:	4a71      	ldr	r2, [pc, #452]	; (800c704 <UART_SetConfig+0x304>)
 800c53e:	4293      	cmp	r3, r2
 800c540:	d120      	bne.n	800c584 <UART_SetConfig+0x184>
 800c542:	4b6e      	ldr	r3, [pc, #440]	; (800c6fc <UART_SetConfig+0x2fc>)
 800c544:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c548:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800c54c:	2b10      	cmp	r3, #16
 800c54e:	d00f      	beq.n	800c570 <UART_SetConfig+0x170>
 800c550:	2b10      	cmp	r3, #16
 800c552:	d802      	bhi.n	800c55a <UART_SetConfig+0x15a>
 800c554:	2b00      	cmp	r3, #0
 800c556:	d005      	beq.n	800c564 <UART_SetConfig+0x164>
 800c558:	e010      	b.n	800c57c <UART_SetConfig+0x17c>
 800c55a:	2b20      	cmp	r3, #32
 800c55c:	d005      	beq.n	800c56a <UART_SetConfig+0x16a>
 800c55e:	2b30      	cmp	r3, #48	; 0x30
 800c560:	d009      	beq.n	800c576 <UART_SetConfig+0x176>
 800c562:	e00b      	b.n	800c57c <UART_SetConfig+0x17c>
 800c564:	2300      	movs	r3, #0
 800c566:	77fb      	strb	r3, [r7, #31]
 800c568:	e0f1      	b.n	800c74e <UART_SetConfig+0x34e>
 800c56a:	2302      	movs	r3, #2
 800c56c:	77fb      	strb	r3, [r7, #31]
 800c56e:	e0ee      	b.n	800c74e <UART_SetConfig+0x34e>
 800c570:	2304      	movs	r3, #4
 800c572:	77fb      	strb	r3, [r7, #31]
 800c574:	e0eb      	b.n	800c74e <UART_SetConfig+0x34e>
 800c576:	2308      	movs	r3, #8
 800c578:	77fb      	strb	r3, [r7, #31]
 800c57a:	e0e8      	b.n	800c74e <UART_SetConfig+0x34e>
 800c57c:	2310      	movs	r3, #16
 800c57e:	77fb      	strb	r3, [r7, #31]
 800c580:	bf00      	nop
 800c582:	e0e4      	b.n	800c74e <UART_SetConfig+0x34e>
 800c584:	687b      	ldr	r3, [r7, #4]
 800c586:	681b      	ldr	r3, [r3, #0]
 800c588:	4a5f      	ldr	r2, [pc, #380]	; (800c708 <UART_SetConfig+0x308>)
 800c58a:	4293      	cmp	r3, r2
 800c58c:	d120      	bne.n	800c5d0 <UART_SetConfig+0x1d0>
 800c58e:	4b5b      	ldr	r3, [pc, #364]	; (800c6fc <UART_SetConfig+0x2fc>)
 800c590:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c594:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800c598:	2b40      	cmp	r3, #64	; 0x40
 800c59a:	d00f      	beq.n	800c5bc <UART_SetConfig+0x1bc>
 800c59c:	2b40      	cmp	r3, #64	; 0x40
 800c59e:	d802      	bhi.n	800c5a6 <UART_SetConfig+0x1a6>
 800c5a0:	2b00      	cmp	r3, #0
 800c5a2:	d005      	beq.n	800c5b0 <UART_SetConfig+0x1b0>
 800c5a4:	e010      	b.n	800c5c8 <UART_SetConfig+0x1c8>
 800c5a6:	2b80      	cmp	r3, #128	; 0x80
 800c5a8:	d005      	beq.n	800c5b6 <UART_SetConfig+0x1b6>
 800c5aa:	2bc0      	cmp	r3, #192	; 0xc0
 800c5ac:	d009      	beq.n	800c5c2 <UART_SetConfig+0x1c2>
 800c5ae:	e00b      	b.n	800c5c8 <UART_SetConfig+0x1c8>
 800c5b0:	2300      	movs	r3, #0
 800c5b2:	77fb      	strb	r3, [r7, #31]
 800c5b4:	e0cb      	b.n	800c74e <UART_SetConfig+0x34e>
 800c5b6:	2302      	movs	r3, #2
 800c5b8:	77fb      	strb	r3, [r7, #31]
 800c5ba:	e0c8      	b.n	800c74e <UART_SetConfig+0x34e>
 800c5bc:	2304      	movs	r3, #4
 800c5be:	77fb      	strb	r3, [r7, #31]
 800c5c0:	e0c5      	b.n	800c74e <UART_SetConfig+0x34e>
 800c5c2:	2308      	movs	r3, #8
 800c5c4:	77fb      	strb	r3, [r7, #31]
 800c5c6:	e0c2      	b.n	800c74e <UART_SetConfig+0x34e>
 800c5c8:	2310      	movs	r3, #16
 800c5ca:	77fb      	strb	r3, [r7, #31]
 800c5cc:	bf00      	nop
 800c5ce:	e0be      	b.n	800c74e <UART_SetConfig+0x34e>
 800c5d0:	687b      	ldr	r3, [r7, #4]
 800c5d2:	681b      	ldr	r3, [r3, #0]
 800c5d4:	4a4d      	ldr	r2, [pc, #308]	; (800c70c <UART_SetConfig+0x30c>)
 800c5d6:	4293      	cmp	r3, r2
 800c5d8:	d124      	bne.n	800c624 <UART_SetConfig+0x224>
 800c5da:	4b48      	ldr	r3, [pc, #288]	; (800c6fc <UART_SetConfig+0x2fc>)
 800c5dc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c5e0:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800c5e4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c5e8:	d012      	beq.n	800c610 <UART_SetConfig+0x210>
 800c5ea:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800c5ee:	d802      	bhi.n	800c5f6 <UART_SetConfig+0x1f6>
 800c5f0:	2b00      	cmp	r3, #0
 800c5f2:	d007      	beq.n	800c604 <UART_SetConfig+0x204>
 800c5f4:	e012      	b.n	800c61c <UART_SetConfig+0x21c>
 800c5f6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c5fa:	d006      	beq.n	800c60a <UART_SetConfig+0x20a>
 800c5fc:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800c600:	d009      	beq.n	800c616 <UART_SetConfig+0x216>
 800c602:	e00b      	b.n	800c61c <UART_SetConfig+0x21c>
 800c604:	2300      	movs	r3, #0
 800c606:	77fb      	strb	r3, [r7, #31]
 800c608:	e0a1      	b.n	800c74e <UART_SetConfig+0x34e>
 800c60a:	2302      	movs	r3, #2
 800c60c:	77fb      	strb	r3, [r7, #31]
 800c60e:	e09e      	b.n	800c74e <UART_SetConfig+0x34e>
 800c610:	2304      	movs	r3, #4
 800c612:	77fb      	strb	r3, [r7, #31]
 800c614:	e09b      	b.n	800c74e <UART_SetConfig+0x34e>
 800c616:	2308      	movs	r3, #8
 800c618:	77fb      	strb	r3, [r7, #31]
 800c61a:	e098      	b.n	800c74e <UART_SetConfig+0x34e>
 800c61c:	2310      	movs	r3, #16
 800c61e:	77fb      	strb	r3, [r7, #31]
 800c620:	bf00      	nop
 800c622:	e094      	b.n	800c74e <UART_SetConfig+0x34e>
 800c624:	687b      	ldr	r3, [r7, #4]
 800c626:	681b      	ldr	r3, [r3, #0]
 800c628:	4a39      	ldr	r2, [pc, #228]	; (800c710 <UART_SetConfig+0x310>)
 800c62a:	4293      	cmp	r3, r2
 800c62c:	d124      	bne.n	800c678 <UART_SetConfig+0x278>
 800c62e:	4b33      	ldr	r3, [pc, #204]	; (800c6fc <UART_SetConfig+0x2fc>)
 800c630:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c634:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800c638:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800c63c:	d012      	beq.n	800c664 <UART_SetConfig+0x264>
 800c63e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800c642:	d802      	bhi.n	800c64a <UART_SetConfig+0x24a>
 800c644:	2b00      	cmp	r3, #0
 800c646:	d007      	beq.n	800c658 <UART_SetConfig+0x258>
 800c648:	e012      	b.n	800c670 <UART_SetConfig+0x270>
 800c64a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c64e:	d006      	beq.n	800c65e <UART_SetConfig+0x25e>
 800c650:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800c654:	d009      	beq.n	800c66a <UART_SetConfig+0x26a>
 800c656:	e00b      	b.n	800c670 <UART_SetConfig+0x270>
 800c658:	2301      	movs	r3, #1
 800c65a:	77fb      	strb	r3, [r7, #31]
 800c65c:	e077      	b.n	800c74e <UART_SetConfig+0x34e>
 800c65e:	2302      	movs	r3, #2
 800c660:	77fb      	strb	r3, [r7, #31]
 800c662:	e074      	b.n	800c74e <UART_SetConfig+0x34e>
 800c664:	2304      	movs	r3, #4
 800c666:	77fb      	strb	r3, [r7, #31]
 800c668:	e071      	b.n	800c74e <UART_SetConfig+0x34e>
 800c66a:	2308      	movs	r3, #8
 800c66c:	77fb      	strb	r3, [r7, #31]
 800c66e:	e06e      	b.n	800c74e <UART_SetConfig+0x34e>
 800c670:	2310      	movs	r3, #16
 800c672:	77fb      	strb	r3, [r7, #31]
 800c674:	bf00      	nop
 800c676:	e06a      	b.n	800c74e <UART_SetConfig+0x34e>
 800c678:	687b      	ldr	r3, [r7, #4]
 800c67a:	681b      	ldr	r3, [r3, #0]
 800c67c:	4a25      	ldr	r2, [pc, #148]	; (800c714 <UART_SetConfig+0x314>)
 800c67e:	4293      	cmp	r3, r2
 800c680:	d124      	bne.n	800c6cc <UART_SetConfig+0x2cc>
 800c682:	4b1e      	ldr	r3, [pc, #120]	; (800c6fc <UART_SetConfig+0x2fc>)
 800c684:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c688:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 800c68c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c690:	d012      	beq.n	800c6b8 <UART_SetConfig+0x2b8>
 800c692:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800c696:	d802      	bhi.n	800c69e <UART_SetConfig+0x29e>
 800c698:	2b00      	cmp	r3, #0
 800c69a:	d007      	beq.n	800c6ac <UART_SetConfig+0x2ac>
 800c69c:	e012      	b.n	800c6c4 <UART_SetConfig+0x2c4>
 800c69e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800c6a2:	d006      	beq.n	800c6b2 <UART_SetConfig+0x2b2>
 800c6a4:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 800c6a8:	d009      	beq.n	800c6be <UART_SetConfig+0x2be>
 800c6aa:	e00b      	b.n	800c6c4 <UART_SetConfig+0x2c4>
 800c6ac:	2300      	movs	r3, #0
 800c6ae:	77fb      	strb	r3, [r7, #31]
 800c6b0:	e04d      	b.n	800c74e <UART_SetConfig+0x34e>
 800c6b2:	2302      	movs	r3, #2
 800c6b4:	77fb      	strb	r3, [r7, #31]
 800c6b6:	e04a      	b.n	800c74e <UART_SetConfig+0x34e>
 800c6b8:	2304      	movs	r3, #4
 800c6ba:	77fb      	strb	r3, [r7, #31]
 800c6bc:	e047      	b.n	800c74e <UART_SetConfig+0x34e>
 800c6be:	2308      	movs	r3, #8
 800c6c0:	77fb      	strb	r3, [r7, #31]
 800c6c2:	e044      	b.n	800c74e <UART_SetConfig+0x34e>
 800c6c4:	2310      	movs	r3, #16
 800c6c6:	77fb      	strb	r3, [r7, #31]
 800c6c8:	bf00      	nop
 800c6ca:	e040      	b.n	800c74e <UART_SetConfig+0x34e>
 800c6cc:	687b      	ldr	r3, [r7, #4]
 800c6ce:	681b      	ldr	r3, [r3, #0]
 800c6d0:	4a11      	ldr	r2, [pc, #68]	; (800c718 <UART_SetConfig+0x318>)
 800c6d2:	4293      	cmp	r3, r2
 800c6d4:	d139      	bne.n	800c74a <UART_SetConfig+0x34a>
 800c6d6:	4b09      	ldr	r3, [pc, #36]	; (800c6fc <UART_SetConfig+0x2fc>)
 800c6d8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800c6dc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800c6e0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800c6e4:	d027      	beq.n	800c736 <UART_SetConfig+0x336>
 800c6e6:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800c6ea:	d817      	bhi.n	800c71c <UART_SetConfig+0x31c>
 800c6ec:	2b00      	cmp	r3, #0
 800c6ee:	d01c      	beq.n	800c72a <UART_SetConfig+0x32a>
 800c6f0:	e027      	b.n	800c742 <UART_SetConfig+0x342>
 800c6f2:	bf00      	nop
 800c6f4:	efff69f3 	.word	0xefff69f3
 800c6f8:	40011000 	.word	0x40011000
 800c6fc:	40023800 	.word	0x40023800
 800c700:	40004400 	.word	0x40004400
 800c704:	40004800 	.word	0x40004800
 800c708:	40004c00 	.word	0x40004c00
 800c70c:	40005000 	.word	0x40005000
 800c710:	40011400 	.word	0x40011400
 800c714:	40007800 	.word	0x40007800
 800c718:	40007c00 	.word	0x40007c00
 800c71c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800c720:	d006      	beq.n	800c730 <UART_SetConfig+0x330>
 800c722:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 800c726:	d009      	beq.n	800c73c <UART_SetConfig+0x33c>
 800c728:	e00b      	b.n	800c742 <UART_SetConfig+0x342>
 800c72a:	2300      	movs	r3, #0
 800c72c:	77fb      	strb	r3, [r7, #31]
 800c72e:	e00e      	b.n	800c74e <UART_SetConfig+0x34e>
 800c730:	2302      	movs	r3, #2
 800c732:	77fb      	strb	r3, [r7, #31]
 800c734:	e00b      	b.n	800c74e <UART_SetConfig+0x34e>
 800c736:	2304      	movs	r3, #4
 800c738:	77fb      	strb	r3, [r7, #31]
 800c73a:	e008      	b.n	800c74e <UART_SetConfig+0x34e>
 800c73c:	2308      	movs	r3, #8
 800c73e:	77fb      	strb	r3, [r7, #31]
 800c740:	e005      	b.n	800c74e <UART_SetConfig+0x34e>
 800c742:	2310      	movs	r3, #16
 800c744:	77fb      	strb	r3, [r7, #31]
 800c746:	bf00      	nop
 800c748:	e001      	b.n	800c74e <UART_SetConfig+0x34e>
 800c74a:	2310      	movs	r3, #16
 800c74c:	77fb      	strb	r3, [r7, #31]
 800c74e:	687b      	ldr	r3, [r7, #4]
 800c750:	69db      	ldr	r3, [r3, #28]
 800c752:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800c756:	d17f      	bne.n	800c858 <UART_SetConfig+0x458>
 800c758:	7ffb      	ldrb	r3, [r7, #31]
 800c75a:	2b08      	cmp	r3, #8
 800c75c:	d85c      	bhi.n	800c818 <UART_SetConfig+0x418>
 800c75e:	a201      	add	r2, pc, #4	; (adr r2, 800c764 <UART_SetConfig+0x364>)
 800c760:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c764:	0800c789 	.word	0x0800c789
 800c768:	0800c7a9 	.word	0x0800c7a9
 800c76c:	0800c7c9 	.word	0x0800c7c9
 800c770:	0800c819 	.word	0x0800c819
 800c774:	0800c7e1 	.word	0x0800c7e1
 800c778:	0800c819 	.word	0x0800c819
 800c77c:	0800c819 	.word	0x0800c819
 800c780:	0800c819 	.word	0x0800c819
 800c784:	0800c801 	.word	0x0800c801
 800c788:	f7fd f8fe 	bl	8009988 <HAL_RCC_GetPCLK1Freq>
 800c78c:	60f8      	str	r0, [r7, #12]
 800c78e:	68fb      	ldr	r3, [r7, #12]
 800c790:	005a      	lsls	r2, r3, #1
 800c792:	687b      	ldr	r3, [r7, #4]
 800c794:	685b      	ldr	r3, [r3, #4]
 800c796:	085b      	lsrs	r3, r3, #1
 800c798:	441a      	add	r2, r3
 800c79a:	687b      	ldr	r3, [r7, #4]
 800c79c:	685b      	ldr	r3, [r3, #4]
 800c79e:	fbb2 f3f3 	udiv	r3, r2, r3
 800c7a2:	b29b      	uxth	r3, r3
 800c7a4:	61bb      	str	r3, [r7, #24]
 800c7a6:	e03a      	b.n	800c81e <UART_SetConfig+0x41e>
 800c7a8:	f7fd f902 	bl	80099b0 <HAL_RCC_GetPCLK2Freq>
 800c7ac:	60f8      	str	r0, [r7, #12]
 800c7ae:	68fb      	ldr	r3, [r7, #12]
 800c7b0:	005a      	lsls	r2, r3, #1
 800c7b2:	687b      	ldr	r3, [r7, #4]
 800c7b4:	685b      	ldr	r3, [r3, #4]
 800c7b6:	085b      	lsrs	r3, r3, #1
 800c7b8:	441a      	add	r2, r3
 800c7ba:	687b      	ldr	r3, [r7, #4]
 800c7bc:	685b      	ldr	r3, [r3, #4]
 800c7be:	fbb2 f3f3 	udiv	r3, r2, r3
 800c7c2:	b29b      	uxth	r3, r3
 800c7c4:	61bb      	str	r3, [r7, #24]
 800c7c6:	e02a      	b.n	800c81e <UART_SetConfig+0x41e>
 800c7c8:	687b      	ldr	r3, [r7, #4]
 800c7ca:	685b      	ldr	r3, [r3, #4]
 800c7cc:	085a      	lsrs	r2, r3, #1
 800c7ce:	4b5f      	ldr	r3, [pc, #380]	; (800c94c <UART_SetConfig+0x54c>)
 800c7d0:	4413      	add	r3, r2
 800c7d2:	687a      	ldr	r2, [r7, #4]
 800c7d4:	6852      	ldr	r2, [r2, #4]
 800c7d6:	fbb3 f3f2 	udiv	r3, r3, r2
 800c7da:	b29b      	uxth	r3, r3
 800c7dc:	61bb      	str	r3, [r7, #24]
 800c7de:	e01e      	b.n	800c81e <UART_SetConfig+0x41e>
 800c7e0:	f7fd f814 	bl	800980c <HAL_RCC_GetSysClockFreq>
 800c7e4:	60f8      	str	r0, [r7, #12]
 800c7e6:	68fb      	ldr	r3, [r7, #12]
 800c7e8:	005a      	lsls	r2, r3, #1
 800c7ea:	687b      	ldr	r3, [r7, #4]
 800c7ec:	685b      	ldr	r3, [r3, #4]
 800c7ee:	085b      	lsrs	r3, r3, #1
 800c7f0:	441a      	add	r2, r3
 800c7f2:	687b      	ldr	r3, [r7, #4]
 800c7f4:	685b      	ldr	r3, [r3, #4]
 800c7f6:	fbb2 f3f3 	udiv	r3, r2, r3
 800c7fa:	b29b      	uxth	r3, r3
 800c7fc:	61bb      	str	r3, [r7, #24]
 800c7fe:	e00e      	b.n	800c81e <UART_SetConfig+0x41e>
 800c800:	687b      	ldr	r3, [r7, #4]
 800c802:	685b      	ldr	r3, [r3, #4]
 800c804:	085b      	lsrs	r3, r3, #1
 800c806:	f503 3280 	add.w	r2, r3, #65536	; 0x10000
 800c80a:	687b      	ldr	r3, [r7, #4]
 800c80c:	685b      	ldr	r3, [r3, #4]
 800c80e:	fbb2 f3f3 	udiv	r3, r2, r3
 800c812:	b29b      	uxth	r3, r3
 800c814:	61bb      	str	r3, [r7, #24]
 800c816:	e002      	b.n	800c81e <UART_SetConfig+0x41e>
 800c818:	2301      	movs	r3, #1
 800c81a:	75fb      	strb	r3, [r7, #23]
 800c81c:	bf00      	nop
 800c81e:	69bb      	ldr	r3, [r7, #24]
 800c820:	2b0f      	cmp	r3, #15
 800c822:	d916      	bls.n	800c852 <UART_SetConfig+0x452>
 800c824:	69bb      	ldr	r3, [r7, #24]
 800c826:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c82a:	d212      	bcs.n	800c852 <UART_SetConfig+0x452>
 800c82c:	69bb      	ldr	r3, [r7, #24]
 800c82e:	b29b      	uxth	r3, r3
 800c830:	f023 030f 	bic.w	r3, r3, #15
 800c834:	817b      	strh	r3, [r7, #10]
 800c836:	69bb      	ldr	r3, [r7, #24]
 800c838:	085b      	lsrs	r3, r3, #1
 800c83a:	b29b      	uxth	r3, r3
 800c83c:	f003 0307 	and.w	r3, r3, #7
 800c840:	b29a      	uxth	r2, r3
 800c842:	897b      	ldrh	r3, [r7, #10]
 800c844:	4313      	orrs	r3, r2
 800c846:	817b      	strh	r3, [r7, #10]
 800c848:	687b      	ldr	r3, [r7, #4]
 800c84a:	681b      	ldr	r3, [r3, #0]
 800c84c:	897a      	ldrh	r2, [r7, #10]
 800c84e:	60da      	str	r2, [r3, #12]
 800c850:	e070      	b.n	800c934 <UART_SetConfig+0x534>
 800c852:	2301      	movs	r3, #1
 800c854:	75fb      	strb	r3, [r7, #23]
 800c856:	e06d      	b.n	800c934 <UART_SetConfig+0x534>
 800c858:	7ffb      	ldrb	r3, [r7, #31]
 800c85a:	2b08      	cmp	r3, #8
 800c85c:	d859      	bhi.n	800c912 <UART_SetConfig+0x512>
 800c85e:	a201      	add	r2, pc, #4	; (adr r2, 800c864 <UART_SetConfig+0x464>)
 800c860:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c864:	0800c889 	.word	0x0800c889
 800c868:	0800c8a7 	.word	0x0800c8a7
 800c86c:	0800c8c5 	.word	0x0800c8c5
 800c870:	0800c913 	.word	0x0800c913
 800c874:	0800c8dd 	.word	0x0800c8dd
 800c878:	0800c913 	.word	0x0800c913
 800c87c:	0800c913 	.word	0x0800c913
 800c880:	0800c913 	.word	0x0800c913
 800c884:	0800c8fb 	.word	0x0800c8fb
 800c888:	f7fd f87e 	bl	8009988 <HAL_RCC_GetPCLK1Freq>
 800c88c:	60f8      	str	r0, [r7, #12]
 800c88e:	687b      	ldr	r3, [r7, #4]
 800c890:	685b      	ldr	r3, [r3, #4]
 800c892:	085a      	lsrs	r2, r3, #1
 800c894:	68fb      	ldr	r3, [r7, #12]
 800c896:	441a      	add	r2, r3
 800c898:	687b      	ldr	r3, [r7, #4]
 800c89a:	685b      	ldr	r3, [r3, #4]
 800c89c:	fbb2 f3f3 	udiv	r3, r2, r3
 800c8a0:	b29b      	uxth	r3, r3
 800c8a2:	61bb      	str	r3, [r7, #24]
 800c8a4:	e038      	b.n	800c918 <UART_SetConfig+0x518>
 800c8a6:	f7fd f883 	bl	80099b0 <HAL_RCC_GetPCLK2Freq>
 800c8aa:	60f8      	str	r0, [r7, #12]
 800c8ac:	687b      	ldr	r3, [r7, #4]
 800c8ae:	685b      	ldr	r3, [r3, #4]
 800c8b0:	085a      	lsrs	r2, r3, #1
 800c8b2:	68fb      	ldr	r3, [r7, #12]
 800c8b4:	441a      	add	r2, r3
 800c8b6:	687b      	ldr	r3, [r7, #4]
 800c8b8:	685b      	ldr	r3, [r3, #4]
 800c8ba:	fbb2 f3f3 	udiv	r3, r2, r3
 800c8be:	b29b      	uxth	r3, r3
 800c8c0:	61bb      	str	r3, [r7, #24]
 800c8c2:	e029      	b.n	800c918 <UART_SetConfig+0x518>
 800c8c4:	687b      	ldr	r3, [r7, #4]
 800c8c6:	685b      	ldr	r3, [r3, #4]
 800c8c8:	085a      	lsrs	r2, r3, #1
 800c8ca:	4b21      	ldr	r3, [pc, #132]	; (800c950 <UART_SetConfig+0x550>)
 800c8cc:	4413      	add	r3, r2
 800c8ce:	687a      	ldr	r2, [r7, #4]
 800c8d0:	6852      	ldr	r2, [r2, #4]
 800c8d2:	fbb3 f3f2 	udiv	r3, r3, r2
 800c8d6:	b29b      	uxth	r3, r3
 800c8d8:	61bb      	str	r3, [r7, #24]
 800c8da:	e01d      	b.n	800c918 <UART_SetConfig+0x518>
 800c8dc:	f7fc ff96 	bl	800980c <HAL_RCC_GetSysClockFreq>
 800c8e0:	60f8      	str	r0, [r7, #12]
 800c8e2:	687b      	ldr	r3, [r7, #4]
 800c8e4:	685b      	ldr	r3, [r3, #4]
 800c8e6:	085a      	lsrs	r2, r3, #1
 800c8e8:	68fb      	ldr	r3, [r7, #12]
 800c8ea:	441a      	add	r2, r3
 800c8ec:	687b      	ldr	r3, [r7, #4]
 800c8ee:	685b      	ldr	r3, [r3, #4]
 800c8f0:	fbb2 f3f3 	udiv	r3, r2, r3
 800c8f4:	b29b      	uxth	r3, r3
 800c8f6:	61bb      	str	r3, [r7, #24]
 800c8f8:	e00e      	b.n	800c918 <UART_SetConfig+0x518>
 800c8fa:	687b      	ldr	r3, [r7, #4]
 800c8fc:	685b      	ldr	r3, [r3, #4]
 800c8fe:	085b      	lsrs	r3, r3, #1
 800c900:	f503 4200 	add.w	r2, r3, #32768	; 0x8000
 800c904:	687b      	ldr	r3, [r7, #4]
 800c906:	685b      	ldr	r3, [r3, #4]
 800c908:	fbb2 f3f3 	udiv	r3, r2, r3
 800c90c:	b29b      	uxth	r3, r3
 800c90e:	61bb      	str	r3, [r7, #24]
 800c910:	e002      	b.n	800c918 <UART_SetConfig+0x518>
 800c912:	2301      	movs	r3, #1
 800c914:	75fb      	strb	r3, [r7, #23]
 800c916:	bf00      	nop
 800c918:	69bb      	ldr	r3, [r7, #24]
 800c91a:	2b0f      	cmp	r3, #15
 800c91c:	d908      	bls.n	800c930 <UART_SetConfig+0x530>
 800c91e:	69bb      	ldr	r3, [r7, #24]
 800c920:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800c924:	d204      	bcs.n	800c930 <UART_SetConfig+0x530>
 800c926:	687b      	ldr	r3, [r7, #4]
 800c928:	681b      	ldr	r3, [r3, #0]
 800c92a:	69ba      	ldr	r2, [r7, #24]
 800c92c:	60da      	str	r2, [r3, #12]
 800c92e:	e001      	b.n	800c934 <UART_SetConfig+0x534>
 800c930:	2301      	movs	r3, #1
 800c932:	75fb      	strb	r3, [r7, #23]
 800c934:	687b      	ldr	r3, [r7, #4]
 800c936:	2200      	movs	r2, #0
 800c938:	661a      	str	r2, [r3, #96]	; 0x60
 800c93a:	687b      	ldr	r3, [r7, #4]
 800c93c:	2200      	movs	r2, #0
 800c93e:	665a      	str	r2, [r3, #100]	; 0x64
 800c940:	7dfb      	ldrb	r3, [r7, #23]
 800c942:	4618      	mov	r0, r3
 800c944:	3720      	adds	r7, #32
 800c946:	46bd      	mov	sp, r7
 800c948:	bd80      	pop	{r7, pc}
 800c94a:	bf00      	nop
 800c94c:	01e84800 	.word	0x01e84800
 800c950:	00f42400 	.word	0x00f42400

0800c954 <UART_AdvFeatureConfig>:
 800c954:	b480      	push	{r7}
 800c956:	b083      	sub	sp, #12
 800c958:	af00      	add	r7, sp, #0
 800c95a:	6078      	str	r0, [r7, #4]
 800c95c:	687b      	ldr	r3, [r7, #4]
 800c95e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c960:	f003 0301 	and.w	r3, r3, #1
 800c964:	2b00      	cmp	r3, #0
 800c966:	d00a      	beq.n	800c97e <UART_AdvFeatureConfig+0x2a>
 800c968:	687b      	ldr	r3, [r7, #4]
 800c96a:	681b      	ldr	r3, [r3, #0]
 800c96c:	685b      	ldr	r3, [r3, #4]
 800c96e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800c972:	687b      	ldr	r3, [r7, #4]
 800c974:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800c976:	687b      	ldr	r3, [r7, #4]
 800c978:	681b      	ldr	r3, [r3, #0]
 800c97a:	430a      	orrs	r2, r1
 800c97c:	605a      	str	r2, [r3, #4]
 800c97e:	687b      	ldr	r3, [r7, #4]
 800c980:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c982:	f003 0302 	and.w	r3, r3, #2
 800c986:	2b00      	cmp	r3, #0
 800c988:	d00a      	beq.n	800c9a0 <UART_AdvFeatureConfig+0x4c>
 800c98a:	687b      	ldr	r3, [r7, #4]
 800c98c:	681b      	ldr	r3, [r3, #0]
 800c98e:	685b      	ldr	r3, [r3, #4]
 800c990:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800c994:	687b      	ldr	r3, [r7, #4]
 800c996:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c998:	687b      	ldr	r3, [r7, #4]
 800c99a:	681b      	ldr	r3, [r3, #0]
 800c99c:	430a      	orrs	r2, r1
 800c99e:	605a      	str	r2, [r3, #4]
 800c9a0:	687b      	ldr	r3, [r7, #4]
 800c9a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9a4:	f003 0304 	and.w	r3, r3, #4
 800c9a8:	2b00      	cmp	r3, #0
 800c9aa:	d00a      	beq.n	800c9c2 <UART_AdvFeatureConfig+0x6e>
 800c9ac:	687b      	ldr	r3, [r7, #4]
 800c9ae:	681b      	ldr	r3, [r3, #0]
 800c9b0:	685b      	ldr	r3, [r3, #4]
 800c9b2:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800c9b6:	687b      	ldr	r3, [r7, #4]
 800c9b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800c9ba:	687b      	ldr	r3, [r7, #4]
 800c9bc:	681b      	ldr	r3, [r3, #0]
 800c9be:	430a      	orrs	r2, r1
 800c9c0:	605a      	str	r2, [r3, #4]
 800c9c2:	687b      	ldr	r3, [r7, #4]
 800c9c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9c6:	f003 0308 	and.w	r3, r3, #8
 800c9ca:	2b00      	cmp	r3, #0
 800c9cc:	d00a      	beq.n	800c9e4 <UART_AdvFeatureConfig+0x90>
 800c9ce:	687b      	ldr	r3, [r7, #4]
 800c9d0:	681b      	ldr	r3, [r3, #0]
 800c9d2:	685b      	ldr	r3, [r3, #4]
 800c9d4:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800c9d8:	687b      	ldr	r3, [r7, #4]
 800c9da:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c9dc:	687b      	ldr	r3, [r7, #4]
 800c9de:	681b      	ldr	r3, [r3, #0]
 800c9e0:	430a      	orrs	r2, r1
 800c9e2:	605a      	str	r2, [r3, #4]
 800c9e4:	687b      	ldr	r3, [r7, #4]
 800c9e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9e8:	f003 0310 	and.w	r3, r3, #16
 800c9ec:	2b00      	cmp	r3, #0
 800c9ee:	d00a      	beq.n	800ca06 <UART_AdvFeatureConfig+0xb2>
 800c9f0:	687b      	ldr	r3, [r7, #4]
 800c9f2:	681b      	ldr	r3, [r3, #0]
 800c9f4:	689b      	ldr	r3, [r3, #8]
 800c9f6:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800c9fa:	687b      	ldr	r3, [r7, #4]
 800c9fc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800c9fe:	687b      	ldr	r3, [r7, #4]
 800ca00:	681b      	ldr	r3, [r3, #0]
 800ca02:	430a      	orrs	r2, r1
 800ca04:	609a      	str	r2, [r3, #8]
 800ca06:	687b      	ldr	r3, [r7, #4]
 800ca08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca0a:	f003 0320 	and.w	r3, r3, #32
 800ca0e:	2b00      	cmp	r3, #0
 800ca10:	d00a      	beq.n	800ca28 <UART_AdvFeatureConfig+0xd4>
 800ca12:	687b      	ldr	r3, [r7, #4]
 800ca14:	681b      	ldr	r3, [r3, #0]
 800ca16:	689b      	ldr	r3, [r3, #8]
 800ca18:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800ca1c:	687b      	ldr	r3, [r7, #4]
 800ca1e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800ca20:	687b      	ldr	r3, [r7, #4]
 800ca22:	681b      	ldr	r3, [r3, #0]
 800ca24:	430a      	orrs	r2, r1
 800ca26:	609a      	str	r2, [r3, #8]
 800ca28:	687b      	ldr	r3, [r7, #4]
 800ca2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca2c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ca30:	2b00      	cmp	r3, #0
 800ca32:	d01a      	beq.n	800ca6a <UART_AdvFeatureConfig+0x116>
 800ca34:	687b      	ldr	r3, [r7, #4]
 800ca36:	681b      	ldr	r3, [r3, #0]
 800ca38:	685b      	ldr	r3, [r3, #4]
 800ca3a:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800ca3e:	687b      	ldr	r3, [r7, #4]
 800ca40:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ca42:	687b      	ldr	r3, [r7, #4]
 800ca44:	681b      	ldr	r3, [r3, #0]
 800ca46:	430a      	orrs	r2, r1
 800ca48:	605a      	str	r2, [r3, #4]
 800ca4a:	687b      	ldr	r3, [r7, #4]
 800ca4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ca4e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800ca52:	d10a      	bne.n	800ca6a <UART_AdvFeatureConfig+0x116>
 800ca54:	687b      	ldr	r3, [r7, #4]
 800ca56:	681b      	ldr	r3, [r3, #0]
 800ca58:	685b      	ldr	r3, [r3, #4]
 800ca5a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800ca5e:	687b      	ldr	r3, [r7, #4]
 800ca60:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ca62:	687b      	ldr	r3, [r7, #4]
 800ca64:	681b      	ldr	r3, [r3, #0]
 800ca66:	430a      	orrs	r2, r1
 800ca68:	605a      	str	r2, [r3, #4]
 800ca6a:	687b      	ldr	r3, [r7, #4]
 800ca6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca6e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ca72:	2b00      	cmp	r3, #0
 800ca74:	d00a      	beq.n	800ca8c <UART_AdvFeatureConfig+0x138>
 800ca76:	687b      	ldr	r3, [r7, #4]
 800ca78:	681b      	ldr	r3, [r3, #0]
 800ca7a:	685b      	ldr	r3, [r3, #4]
 800ca7c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800ca80:	687b      	ldr	r3, [r7, #4]
 800ca82:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800ca84:	687b      	ldr	r3, [r7, #4]
 800ca86:	681b      	ldr	r3, [r3, #0]
 800ca88:	430a      	orrs	r2, r1
 800ca8a:	605a      	str	r2, [r3, #4]
 800ca8c:	bf00      	nop
 800ca8e:	370c      	adds	r7, #12
 800ca90:	46bd      	mov	sp, r7
 800ca92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca96:	4770      	bx	lr

0800ca98 <UART_CheckIdleState>:
 800ca98:	b580      	push	{r7, lr}
 800ca9a:	b086      	sub	sp, #24
 800ca9c:	af02      	add	r7, sp, #8
 800ca9e:	6078      	str	r0, [r7, #4]
 800caa0:	687b      	ldr	r3, [r7, #4]
 800caa2:	2200      	movs	r2, #0
 800caa4:	67da      	str	r2, [r3, #124]	; 0x7c
 800caa6:	f7f9 fc79 	bl	800639c <HAL_GetTick>
 800caaa:	60f8      	str	r0, [r7, #12]
 800caac:	687b      	ldr	r3, [r7, #4]
 800caae:	681b      	ldr	r3, [r3, #0]
 800cab0:	681b      	ldr	r3, [r3, #0]
 800cab2:	f003 0308 	and.w	r3, r3, #8
 800cab6:	2b08      	cmp	r3, #8
 800cab8:	d10e      	bne.n	800cad8 <UART_CheckIdleState+0x40>
 800caba:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800cabe:	9300      	str	r3, [sp, #0]
 800cac0:	68fb      	ldr	r3, [r7, #12]
 800cac2:	2200      	movs	r2, #0
 800cac4:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800cac8:	6878      	ldr	r0, [r7, #4]
 800caca:	f000 f814 	bl	800caf6 <UART_WaitOnFlagUntilTimeout>
 800cace:	4603      	mov	r3, r0
 800cad0:	2b00      	cmp	r3, #0
 800cad2:	d001      	beq.n	800cad8 <UART_CheckIdleState+0x40>
 800cad4:	2303      	movs	r3, #3
 800cad6:	e00a      	b.n	800caee <UART_CheckIdleState+0x56>
 800cad8:	687b      	ldr	r3, [r7, #4]
 800cada:	2220      	movs	r2, #32
 800cadc:	675a      	str	r2, [r3, #116]	; 0x74
 800cade:	687b      	ldr	r3, [r7, #4]
 800cae0:	2220      	movs	r2, #32
 800cae2:	679a      	str	r2, [r3, #120]	; 0x78
 800cae4:	687b      	ldr	r3, [r7, #4]
 800cae6:	2200      	movs	r2, #0
 800cae8:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800caec:	2300      	movs	r3, #0
 800caee:	4618      	mov	r0, r3
 800caf0:	3710      	adds	r7, #16
 800caf2:	46bd      	mov	sp, r7
 800caf4:	bd80      	pop	{r7, pc}

0800caf6 <UART_WaitOnFlagUntilTimeout>:
 800caf6:	b580      	push	{r7, lr}
 800caf8:	b084      	sub	sp, #16
 800cafa:	af00      	add	r7, sp, #0
 800cafc:	60f8      	str	r0, [r7, #12]
 800cafe:	60b9      	str	r1, [r7, #8]
 800cb00:	603b      	str	r3, [r7, #0]
 800cb02:	4613      	mov	r3, r2
 800cb04:	71fb      	strb	r3, [r7, #7]
 800cb06:	e05d      	b.n	800cbc4 <UART_WaitOnFlagUntilTimeout+0xce>
 800cb08:	69bb      	ldr	r3, [r7, #24]
 800cb0a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800cb0e:	d059      	beq.n	800cbc4 <UART_WaitOnFlagUntilTimeout+0xce>
 800cb10:	f7f9 fc44 	bl	800639c <HAL_GetTick>
 800cb14:	4602      	mov	r2, r0
 800cb16:	683b      	ldr	r3, [r7, #0]
 800cb18:	1ad3      	subs	r3, r2, r3
 800cb1a:	69ba      	ldr	r2, [r7, #24]
 800cb1c:	429a      	cmp	r2, r3
 800cb1e:	d302      	bcc.n	800cb26 <UART_WaitOnFlagUntilTimeout+0x30>
 800cb20:	69bb      	ldr	r3, [r7, #24]
 800cb22:	2b00      	cmp	r3, #0
 800cb24:	d11b      	bne.n	800cb5e <UART_WaitOnFlagUntilTimeout+0x68>
 800cb26:	68fb      	ldr	r3, [r7, #12]
 800cb28:	681b      	ldr	r3, [r3, #0]
 800cb2a:	681a      	ldr	r2, [r3, #0]
 800cb2c:	68fb      	ldr	r3, [r7, #12]
 800cb2e:	681b      	ldr	r3, [r3, #0]
 800cb30:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800cb34:	601a      	str	r2, [r3, #0]
 800cb36:	68fb      	ldr	r3, [r7, #12]
 800cb38:	681b      	ldr	r3, [r3, #0]
 800cb3a:	689a      	ldr	r2, [r3, #8]
 800cb3c:	68fb      	ldr	r3, [r7, #12]
 800cb3e:	681b      	ldr	r3, [r3, #0]
 800cb40:	f022 0201 	bic.w	r2, r2, #1
 800cb44:	609a      	str	r2, [r3, #8]
 800cb46:	68fb      	ldr	r3, [r7, #12]
 800cb48:	2220      	movs	r2, #32
 800cb4a:	675a      	str	r2, [r3, #116]	; 0x74
 800cb4c:	68fb      	ldr	r3, [r7, #12]
 800cb4e:	2220      	movs	r2, #32
 800cb50:	679a      	str	r2, [r3, #120]	; 0x78
 800cb52:	68fb      	ldr	r3, [r7, #12]
 800cb54:	2200      	movs	r2, #0
 800cb56:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800cb5a:	2303      	movs	r3, #3
 800cb5c:	e042      	b.n	800cbe4 <UART_WaitOnFlagUntilTimeout+0xee>
 800cb5e:	68fb      	ldr	r3, [r7, #12]
 800cb60:	681b      	ldr	r3, [r3, #0]
 800cb62:	681b      	ldr	r3, [r3, #0]
 800cb64:	f003 0304 	and.w	r3, r3, #4
 800cb68:	2b00      	cmp	r3, #0
 800cb6a:	d02b      	beq.n	800cbc4 <UART_WaitOnFlagUntilTimeout+0xce>
 800cb6c:	68fb      	ldr	r3, [r7, #12]
 800cb6e:	681b      	ldr	r3, [r3, #0]
 800cb70:	69db      	ldr	r3, [r3, #28]
 800cb72:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800cb76:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cb7a:	d123      	bne.n	800cbc4 <UART_WaitOnFlagUntilTimeout+0xce>
 800cb7c:	68fb      	ldr	r3, [r7, #12]
 800cb7e:	681b      	ldr	r3, [r3, #0]
 800cb80:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800cb84:	621a      	str	r2, [r3, #32]
 800cb86:	68fb      	ldr	r3, [r7, #12]
 800cb88:	681b      	ldr	r3, [r3, #0]
 800cb8a:	681a      	ldr	r2, [r3, #0]
 800cb8c:	68fb      	ldr	r3, [r7, #12]
 800cb8e:	681b      	ldr	r3, [r3, #0]
 800cb90:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800cb94:	601a      	str	r2, [r3, #0]
 800cb96:	68fb      	ldr	r3, [r7, #12]
 800cb98:	681b      	ldr	r3, [r3, #0]
 800cb9a:	689a      	ldr	r2, [r3, #8]
 800cb9c:	68fb      	ldr	r3, [r7, #12]
 800cb9e:	681b      	ldr	r3, [r3, #0]
 800cba0:	f022 0201 	bic.w	r2, r2, #1
 800cba4:	609a      	str	r2, [r3, #8]
 800cba6:	68fb      	ldr	r3, [r7, #12]
 800cba8:	2220      	movs	r2, #32
 800cbaa:	675a      	str	r2, [r3, #116]	; 0x74
 800cbac:	68fb      	ldr	r3, [r7, #12]
 800cbae:	2220      	movs	r2, #32
 800cbb0:	679a      	str	r2, [r3, #120]	; 0x78
 800cbb2:	68fb      	ldr	r3, [r7, #12]
 800cbb4:	2220      	movs	r2, #32
 800cbb6:	67da      	str	r2, [r3, #124]	; 0x7c
 800cbb8:	68fb      	ldr	r3, [r7, #12]
 800cbba:	2200      	movs	r2, #0
 800cbbc:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
 800cbc0:	2303      	movs	r3, #3
 800cbc2:	e00f      	b.n	800cbe4 <UART_WaitOnFlagUntilTimeout+0xee>
 800cbc4:	68fb      	ldr	r3, [r7, #12]
 800cbc6:	681b      	ldr	r3, [r3, #0]
 800cbc8:	69da      	ldr	r2, [r3, #28]
 800cbca:	68bb      	ldr	r3, [r7, #8]
 800cbcc:	4013      	ands	r3, r2
 800cbce:	68ba      	ldr	r2, [r7, #8]
 800cbd0:	429a      	cmp	r2, r3
 800cbd2:	bf0c      	ite	eq
 800cbd4:	2301      	moveq	r3, #1
 800cbd6:	2300      	movne	r3, #0
 800cbd8:	b2db      	uxtb	r3, r3
 800cbda:	461a      	mov	r2, r3
 800cbdc:	79fb      	ldrb	r3, [r7, #7]
 800cbde:	429a      	cmp	r2, r3
 800cbe0:	d092      	beq.n	800cb08 <UART_WaitOnFlagUntilTimeout+0x12>
 800cbe2:	2300      	movs	r3, #0
 800cbe4:	4618      	mov	r0, r3
 800cbe6:	3710      	adds	r7, #16
 800cbe8:	46bd      	mov	sp, r7
 800cbea:	bd80      	pop	{r7, pc}

0800cbec <UART_EndRxTransfer>:
 800cbec:	b480      	push	{r7}
 800cbee:	b083      	sub	sp, #12
 800cbf0:	af00      	add	r7, sp, #0
 800cbf2:	6078      	str	r0, [r7, #4]
 800cbf4:	687b      	ldr	r3, [r7, #4]
 800cbf6:	681b      	ldr	r3, [r3, #0]
 800cbf8:	681a      	ldr	r2, [r3, #0]
 800cbfa:	687b      	ldr	r3, [r7, #4]
 800cbfc:	681b      	ldr	r3, [r3, #0]
 800cbfe:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 800cc02:	601a      	str	r2, [r3, #0]
 800cc04:	687b      	ldr	r3, [r7, #4]
 800cc06:	681b      	ldr	r3, [r3, #0]
 800cc08:	689a      	ldr	r2, [r3, #8]
 800cc0a:	687b      	ldr	r3, [r7, #4]
 800cc0c:	681b      	ldr	r3, [r3, #0]
 800cc0e:	f022 0201 	bic.w	r2, r2, #1
 800cc12:	609a      	str	r2, [r3, #8]
 800cc14:	687b      	ldr	r3, [r7, #4]
 800cc16:	2220      	movs	r2, #32
 800cc18:	679a      	str	r2, [r3, #120]	; 0x78
 800cc1a:	687b      	ldr	r3, [r7, #4]
 800cc1c:	2200      	movs	r2, #0
 800cc1e:	661a      	str	r2, [r3, #96]	; 0x60
 800cc20:	bf00      	nop
 800cc22:	370c      	adds	r7, #12
 800cc24:	46bd      	mov	sp, r7
 800cc26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc2a:	4770      	bx	lr

0800cc2c <UART_DMAAbortOnError>:
 800cc2c:	b580      	push	{r7, lr}
 800cc2e:	b084      	sub	sp, #16
 800cc30:	af00      	add	r7, sp, #0
 800cc32:	6078      	str	r0, [r7, #4]
 800cc34:	687b      	ldr	r3, [r7, #4]
 800cc36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc38:	60fb      	str	r3, [r7, #12]
 800cc3a:	68fb      	ldr	r3, [r7, #12]
 800cc3c:	2200      	movs	r2, #0
 800cc3e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
 800cc42:	68fb      	ldr	r3, [r7, #12]
 800cc44:	2200      	movs	r2, #0
 800cc46:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
 800cc4a:	68f8      	ldr	r0, [r7, #12]
 800cc4c:	f7ff fbce 	bl	800c3ec <HAL_UART_ErrorCallback>
 800cc50:	bf00      	nop
 800cc52:	3710      	adds	r7, #16
 800cc54:	46bd      	mov	sp, r7
 800cc56:	bd80      	pop	{r7, pc}

0800cc58 <UART_EndTransmit_IT>:
 800cc58:	b580      	push	{r7, lr}
 800cc5a:	b082      	sub	sp, #8
 800cc5c:	af00      	add	r7, sp, #0
 800cc5e:	6078      	str	r0, [r7, #4]
 800cc60:	687b      	ldr	r3, [r7, #4]
 800cc62:	681b      	ldr	r3, [r3, #0]
 800cc64:	681a      	ldr	r2, [r3, #0]
 800cc66:	687b      	ldr	r3, [r7, #4]
 800cc68:	681b      	ldr	r3, [r3, #0]
 800cc6a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800cc6e:	601a      	str	r2, [r3, #0]
 800cc70:	687b      	ldr	r3, [r7, #4]
 800cc72:	2220      	movs	r2, #32
 800cc74:	675a      	str	r2, [r3, #116]	; 0x74
 800cc76:	687b      	ldr	r3, [r7, #4]
 800cc78:	2200      	movs	r2, #0
 800cc7a:	665a      	str	r2, [r3, #100]	; 0x64
 800cc7c:	6878      	ldr	r0, [r7, #4]
 800cc7e:	f7ff fbab 	bl	800c3d8 <HAL_UART_TxCpltCallback>
 800cc82:	bf00      	nop
 800cc84:	3708      	adds	r7, #8
 800cc86:	46bd      	mov	sp, r7
 800cc88:	bd80      	pop	{r7, pc}
	...

0800cc8c <FMC_SDRAM_Init>:
 800cc8c:	b480      	push	{r7}
 800cc8e:	b085      	sub	sp, #20
 800cc90:	af00      	add	r7, sp, #0
 800cc92:	6078      	str	r0, [r7, #4]
 800cc94:	6039      	str	r1, [r7, #0]
 800cc96:	2300      	movs	r3, #0
 800cc98:	60fb      	str	r3, [r7, #12]
 800cc9a:	2300      	movs	r3, #0
 800cc9c:	60bb      	str	r3, [r7, #8]
 800cc9e:	683b      	ldr	r3, [r7, #0]
 800cca0:	681b      	ldr	r3, [r3, #0]
 800cca2:	2b01      	cmp	r3, #1
 800cca4:	d027      	beq.n	800ccf6 <FMC_SDRAM_Init+0x6a>
 800cca6:	687b      	ldr	r3, [r7, #4]
 800cca8:	681b      	ldr	r3, [r3, #0]
 800ccaa:	60fb      	str	r3, [r7, #12]
 800ccac:	68fa      	ldr	r2, [r7, #12]
 800ccae:	4b2f      	ldr	r3, [pc, #188]	; (800cd6c <FMC_SDRAM_Init+0xe0>)
 800ccb0:	4013      	ands	r3, r2
 800ccb2:	60fb      	str	r3, [r7, #12]
 800ccb4:	683b      	ldr	r3, [r7, #0]
 800ccb6:	685a      	ldr	r2, [r3, #4]
 800ccb8:	683b      	ldr	r3, [r7, #0]
 800ccba:	689b      	ldr	r3, [r3, #8]
 800ccbc:	431a      	orrs	r2, r3
 800ccbe:	683b      	ldr	r3, [r7, #0]
 800ccc0:	68db      	ldr	r3, [r3, #12]
 800ccc2:	431a      	orrs	r2, r3
 800ccc4:	683b      	ldr	r3, [r7, #0]
 800ccc6:	691b      	ldr	r3, [r3, #16]
 800ccc8:	431a      	orrs	r2, r3
 800ccca:	683b      	ldr	r3, [r7, #0]
 800cccc:	695b      	ldr	r3, [r3, #20]
 800ccce:	431a      	orrs	r2, r3
 800ccd0:	683b      	ldr	r3, [r7, #0]
 800ccd2:	699b      	ldr	r3, [r3, #24]
 800ccd4:	431a      	orrs	r2, r3
 800ccd6:	683b      	ldr	r3, [r7, #0]
 800ccd8:	69db      	ldr	r3, [r3, #28]
 800ccda:	431a      	orrs	r2, r3
 800ccdc:	683b      	ldr	r3, [r7, #0]
 800ccde:	6a1b      	ldr	r3, [r3, #32]
 800cce0:	431a      	orrs	r2, r3
 800cce2:	683b      	ldr	r3, [r7, #0]
 800cce4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cce6:	4313      	orrs	r3, r2
 800cce8:	68fa      	ldr	r2, [r7, #12]
 800ccea:	4313      	orrs	r3, r2
 800ccec:	60fb      	str	r3, [r7, #12]
 800ccee:	687b      	ldr	r3, [r7, #4]
 800ccf0:	68fa      	ldr	r2, [r7, #12]
 800ccf2:	601a      	str	r2, [r3, #0]
 800ccf4:	e032      	b.n	800cd5c <FMC_SDRAM_Init+0xd0>
 800ccf6:	687b      	ldr	r3, [r7, #4]
 800ccf8:	681b      	ldr	r3, [r3, #0]
 800ccfa:	60fb      	str	r3, [r7, #12]
 800ccfc:	68fb      	ldr	r3, [r7, #12]
 800ccfe:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800cd02:	60fb      	str	r3, [r7, #12]
 800cd04:	683b      	ldr	r3, [r7, #0]
 800cd06:	69da      	ldr	r2, [r3, #28]
 800cd08:	683b      	ldr	r3, [r7, #0]
 800cd0a:	6a1b      	ldr	r3, [r3, #32]
 800cd0c:	431a      	orrs	r2, r3
 800cd0e:	683b      	ldr	r3, [r7, #0]
 800cd10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd12:	4313      	orrs	r3, r2
 800cd14:	68fa      	ldr	r2, [r7, #12]
 800cd16:	4313      	orrs	r3, r2
 800cd18:	60fb      	str	r3, [r7, #12]
 800cd1a:	687b      	ldr	r3, [r7, #4]
 800cd1c:	685b      	ldr	r3, [r3, #4]
 800cd1e:	60bb      	str	r3, [r7, #8]
 800cd20:	68ba      	ldr	r2, [r7, #8]
 800cd22:	4b12      	ldr	r3, [pc, #72]	; (800cd6c <FMC_SDRAM_Init+0xe0>)
 800cd24:	4013      	ands	r3, r2
 800cd26:	60bb      	str	r3, [r7, #8]
 800cd28:	683b      	ldr	r3, [r7, #0]
 800cd2a:	685a      	ldr	r2, [r3, #4]
 800cd2c:	683b      	ldr	r3, [r7, #0]
 800cd2e:	689b      	ldr	r3, [r3, #8]
 800cd30:	431a      	orrs	r2, r3
 800cd32:	683b      	ldr	r3, [r7, #0]
 800cd34:	68db      	ldr	r3, [r3, #12]
 800cd36:	431a      	orrs	r2, r3
 800cd38:	683b      	ldr	r3, [r7, #0]
 800cd3a:	691b      	ldr	r3, [r3, #16]
 800cd3c:	431a      	orrs	r2, r3
 800cd3e:	683b      	ldr	r3, [r7, #0]
 800cd40:	695b      	ldr	r3, [r3, #20]
 800cd42:	431a      	orrs	r2, r3
 800cd44:	683b      	ldr	r3, [r7, #0]
 800cd46:	699b      	ldr	r3, [r3, #24]
 800cd48:	4313      	orrs	r3, r2
 800cd4a:	68ba      	ldr	r2, [r7, #8]
 800cd4c:	4313      	orrs	r3, r2
 800cd4e:	60bb      	str	r3, [r7, #8]
 800cd50:	687b      	ldr	r3, [r7, #4]
 800cd52:	68fa      	ldr	r2, [r7, #12]
 800cd54:	601a      	str	r2, [r3, #0]
 800cd56:	687b      	ldr	r3, [r7, #4]
 800cd58:	68ba      	ldr	r2, [r7, #8]
 800cd5a:	605a      	str	r2, [r3, #4]
 800cd5c:	2300      	movs	r3, #0
 800cd5e:	4618      	mov	r0, r3
 800cd60:	3714      	adds	r7, #20
 800cd62:	46bd      	mov	sp, r7
 800cd64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd68:	4770      	bx	lr
 800cd6a:	bf00      	nop
 800cd6c:	ffff8000 	.word	0xffff8000

0800cd70 <FMC_SDRAM_Timing_Init>:
 800cd70:	b480      	push	{r7}
 800cd72:	b087      	sub	sp, #28
 800cd74:	af00      	add	r7, sp, #0
 800cd76:	60f8      	str	r0, [r7, #12]
 800cd78:	60b9      	str	r1, [r7, #8]
 800cd7a:	607a      	str	r2, [r7, #4]
 800cd7c:	2300      	movs	r3, #0
 800cd7e:	617b      	str	r3, [r7, #20]
 800cd80:	2300      	movs	r3, #0
 800cd82:	613b      	str	r3, [r7, #16]
 800cd84:	687b      	ldr	r3, [r7, #4]
 800cd86:	2b01      	cmp	r3, #1
 800cd88:	d02e      	beq.n	800cde8 <FMC_SDRAM_Timing_Init+0x78>
 800cd8a:	68fb      	ldr	r3, [r7, #12]
 800cd8c:	689b      	ldr	r3, [r3, #8]
 800cd8e:	617b      	str	r3, [r7, #20]
 800cd90:	697b      	ldr	r3, [r7, #20]
 800cd92:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800cd96:	617b      	str	r3, [r7, #20]
 800cd98:	68bb      	ldr	r3, [r7, #8]
 800cd9a:	681b      	ldr	r3, [r3, #0]
 800cd9c:	1e5a      	subs	r2, r3, #1
 800cd9e:	68bb      	ldr	r3, [r7, #8]
 800cda0:	685b      	ldr	r3, [r3, #4]
 800cda2:	3b01      	subs	r3, #1
 800cda4:	011b      	lsls	r3, r3, #4
 800cda6:	431a      	orrs	r2, r3
 800cda8:	68bb      	ldr	r3, [r7, #8]
 800cdaa:	689b      	ldr	r3, [r3, #8]
 800cdac:	3b01      	subs	r3, #1
 800cdae:	021b      	lsls	r3, r3, #8
 800cdb0:	431a      	orrs	r2, r3
 800cdb2:	68bb      	ldr	r3, [r7, #8]
 800cdb4:	68db      	ldr	r3, [r3, #12]
 800cdb6:	3b01      	subs	r3, #1
 800cdb8:	031b      	lsls	r3, r3, #12
 800cdba:	431a      	orrs	r2, r3
 800cdbc:	68bb      	ldr	r3, [r7, #8]
 800cdbe:	691b      	ldr	r3, [r3, #16]
 800cdc0:	3b01      	subs	r3, #1
 800cdc2:	041b      	lsls	r3, r3, #16
 800cdc4:	431a      	orrs	r2, r3
 800cdc6:	68bb      	ldr	r3, [r7, #8]
 800cdc8:	695b      	ldr	r3, [r3, #20]
 800cdca:	3b01      	subs	r3, #1
 800cdcc:	051b      	lsls	r3, r3, #20
 800cdce:	431a      	orrs	r2, r3
 800cdd0:	68bb      	ldr	r3, [r7, #8]
 800cdd2:	699b      	ldr	r3, [r3, #24]
 800cdd4:	3b01      	subs	r3, #1
 800cdd6:	061b      	lsls	r3, r3, #24
 800cdd8:	4313      	orrs	r3, r2
 800cdda:	697a      	ldr	r2, [r7, #20]
 800cddc:	4313      	orrs	r3, r2
 800cdde:	617b      	str	r3, [r7, #20]
 800cde0:	68fb      	ldr	r3, [r7, #12]
 800cde2:	697a      	ldr	r2, [r7, #20]
 800cde4:	609a      	str	r2, [r3, #8]
 800cde6:	e039      	b.n	800ce5c <FMC_SDRAM_Timing_Init+0xec>
 800cde8:	68fb      	ldr	r3, [r7, #12]
 800cdea:	689b      	ldr	r3, [r3, #8]
 800cdec:	617b      	str	r3, [r7, #20]
 800cdee:	697a      	ldr	r2, [r7, #20]
 800cdf0:	4b1e      	ldr	r3, [pc, #120]	; (800ce6c <FMC_SDRAM_Timing_Init+0xfc>)
 800cdf2:	4013      	ands	r3, r2
 800cdf4:	617b      	str	r3, [r7, #20]
 800cdf6:	68bb      	ldr	r3, [r7, #8]
 800cdf8:	68db      	ldr	r3, [r3, #12]
 800cdfa:	3b01      	subs	r3, #1
 800cdfc:	031a      	lsls	r2, r3, #12
 800cdfe:	68bb      	ldr	r3, [r7, #8]
 800ce00:	695b      	ldr	r3, [r3, #20]
 800ce02:	3b01      	subs	r3, #1
 800ce04:	051b      	lsls	r3, r3, #20
 800ce06:	4313      	orrs	r3, r2
 800ce08:	697a      	ldr	r2, [r7, #20]
 800ce0a:	4313      	orrs	r3, r2
 800ce0c:	617b      	str	r3, [r7, #20]
 800ce0e:	68fb      	ldr	r3, [r7, #12]
 800ce10:	68db      	ldr	r3, [r3, #12]
 800ce12:	613b      	str	r3, [r7, #16]
 800ce14:	693b      	ldr	r3, [r7, #16]
 800ce16:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800ce1a:	613b      	str	r3, [r7, #16]
 800ce1c:	68bb      	ldr	r3, [r7, #8]
 800ce1e:	681b      	ldr	r3, [r3, #0]
 800ce20:	1e5a      	subs	r2, r3, #1
 800ce22:	68bb      	ldr	r3, [r7, #8]
 800ce24:	685b      	ldr	r3, [r3, #4]
 800ce26:	3b01      	subs	r3, #1
 800ce28:	011b      	lsls	r3, r3, #4
 800ce2a:	431a      	orrs	r2, r3
 800ce2c:	68bb      	ldr	r3, [r7, #8]
 800ce2e:	689b      	ldr	r3, [r3, #8]
 800ce30:	3b01      	subs	r3, #1
 800ce32:	021b      	lsls	r3, r3, #8
 800ce34:	431a      	orrs	r2, r3
 800ce36:	68bb      	ldr	r3, [r7, #8]
 800ce38:	691b      	ldr	r3, [r3, #16]
 800ce3a:	3b01      	subs	r3, #1
 800ce3c:	041b      	lsls	r3, r3, #16
 800ce3e:	431a      	orrs	r2, r3
 800ce40:	68bb      	ldr	r3, [r7, #8]
 800ce42:	699b      	ldr	r3, [r3, #24]
 800ce44:	3b01      	subs	r3, #1
 800ce46:	061b      	lsls	r3, r3, #24
 800ce48:	4313      	orrs	r3, r2
 800ce4a:	693a      	ldr	r2, [r7, #16]
 800ce4c:	4313      	orrs	r3, r2
 800ce4e:	613b      	str	r3, [r7, #16]
 800ce50:	68fb      	ldr	r3, [r7, #12]
 800ce52:	697a      	ldr	r2, [r7, #20]
 800ce54:	609a      	str	r2, [r3, #8]
 800ce56:	68fb      	ldr	r3, [r7, #12]
 800ce58:	693a      	ldr	r2, [r7, #16]
 800ce5a:	60da      	str	r2, [r3, #12]
 800ce5c:	2300      	movs	r3, #0
 800ce5e:	4618      	mov	r0, r3
 800ce60:	371c      	adds	r7, #28
 800ce62:	46bd      	mov	sp, r7
 800ce64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce68:	4770      	bx	lr
 800ce6a:	bf00      	nop
 800ce6c:	ff0f0fff 	.word	0xff0f0fff

0800ce70 <FMC_SDRAM_SendCommand>:
 800ce70:	b480      	push	{r7}
 800ce72:	b087      	sub	sp, #28
 800ce74:	af00      	add	r7, sp, #0
 800ce76:	60f8      	str	r0, [r7, #12]
 800ce78:	60b9      	str	r1, [r7, #8]
 800ce7a:	607a      	str	r2, [r7, #4]
 800ce7c:	2300      	movs	r3, #0
 800ce7e:	617b      	str	r3, [r7, #20]
 800ce80:	68bb      	ldr	r3, [r7, #8]
 800ce82:	681a      	ldr	r2, [r3, #0]
 800ce84:	68bb      	ldr	r3, [r7, #8]
 800ce86:	685b      	ldr	r3, [r3, #4]
 800ce88:	431a      	orrs	r2, r3
 800ce8a:	68bb      	ldr	r3, [r7, #8]
 800ce8c:	689b      	ldr	r3, [r3, #8]
 800ce8e:	3b01      	subs	r3, #1
 800ce90:	015b      	lsls	r3, r3, #5
 800ce92:	431a      	orrs	r2, r3
 800ce94:	68bb      	ldr	r3, [r7, #8]
 800ce96:	68db      	ldr	r3, [r3, #12]
 800ce98:	025b      	lsls	r3, r3, #9
 800ce9a:	4313      	orrs	r3, r2
 800ce9c:	617b      	str	r3, [r7, #20]
 800ce9e:	697a      	ldr	r2, [r7, #20]
 800cea0:	68fb      	ldr	r3, [r7, #12]
 800cea2:	611a      	str	r2, [r3, #16]
 800cea4:	2300      	movs	r3, #0
 800cea6:	4618      	mov	r0, r3
 800cea8:	371c      	adds	r7, #28
 800ceaa:	46bd      	mov	sp, r7
 800ceac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ceb0:	4770      	bx	lr

0800ceb2 <FMC_SDRAM_ProgramRefreshRate>:
 800ceb2:	b480      	push	{r7}
 800ceb4:	b083      	sub	sp, #12
 800ceb6:	af00      	add	r7, sp, #0
 800ceb8:	6078      	str	r0, [r7, #4]
 800ceba:	6039      	str	r1, [r7, #0]
 800cebc:	687b      	ldr	r3, [r7, #4]
 800cebe:	695a      	ldr	r2, [r3, #20]
 800cec0:	683b      	ldr	r3, [r7, #0]
 800cec2:	005b      	lsls	r3, r3, #1
 800cec4:	431a      	orrs	r2, r3
 800cec6:	687b      	ldr	r3, [r7, #4]
 800cec8:	615a      	str	r2, [r3, #20]
 800ceca:	2300      	movs	r3, #0
 800cecc:	4618      	mov	r0, r3
 800cece:	370c      	adds	r7, #12
 800ced0:	46bd      	mov	sp, r7
 800ced2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ced6:	4770      	bx	lr

0800ced8 <makeFreeRtosPriority>:
 800ced8:	b480      	push	{r7}
 800ceda:	b085      	sub	sp, #20
 800cedc:	af00      	add	r7, sp, #0
 800cede:	4603      	mov	r3, r0
 800cee0:	80fb      	strh	r3, [r7, #6]
 800cee2:	2300      	movs	r3, #0
 800cee4:	60fb      	str	r3, [r7, #12]
 800cee6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800ceea:	2b84      	cmp	r3, #132	; 0x84
 800ceec:	d005      	beq.n	800cefa <makeFreeRtosPriority+0x22>
 800ceee:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800cef2:	68fb      	ldr	r3, [r7, #12]
 800cef4:	4413      	add	r3, r2
 800cef6:	3303      	adds	r3, #3
 800cef8:	60fb      	str	r3, [r7, #12]
 800cefa:	68fb      	ldr	r3, [r7, #12]
 800cefc:	4618      	mov	r0, r3
 800cefe:	3714      	adds	r7, #20
 800cf00:	46bd      	mov	sp, r7
 800cf02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf06:	4770      	bx	lr

0800cf08 <osKernelStart>:
 800cf08:	b580      	push	{r7, lr}
 800cf0a:	af00      	add	r7, sp, #0
 800cf0c:	f001 f830 	bl	800df70 <vTaskStartScheduler>
 800cf10:	2300      	movs	r3, #0
 800cf12:	4618      	mov	r0, r3
 800cf14:	bd80      	pop	{r7, pc}

0800cf16 <osThreadCreate>:
 800cf16:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf18:	b089      	sub	sp, #36	; 0x24
 800cf1a:	af04      	add	r7, sp, #16
 800cf1c:	6078      	str	r0, [r7, #4]
 800cf1e:	6039      	str	r1, [r7, #0]
 800cf20:	687b      	ldr	r3, [r7, #4]
 800cf22:	695b      	ldr	r3, [r3, #20]
 800cf24:	2b00      	cmp	r3, #0
 800cf26:	d020      	beq.n	800cf6a <osThreadCreate+0x54>
 800cf28:	687b      	ldr	r3, [r7, #4]
 800cf2a:	699b      	ldr	r3, [r3, #24]
 800cf2c:	2b00      	cmp	r3, #0
 800cf2e:	d01c      	beq.n	800cf6a <osThreadCreate+0x54>
 800cf30:	687b      	ldr	r3, [r7, #4]
 800cf32:	685c      	ldr	r4, [r3, #4]
 800cf34:	687b      	ldr	r3, [r7, #4]
 800cf36:	681d      	ldr	r5, [r3, #0]
 800cf38:	687b      	ldr	r3, [r7, #4]
 800cf3a:	691e      	ldr	r6, [r3, #16]
 800cf3c:	687b      	ldr	r3, [r7, #4]
 800cf3e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800cf42:	4618      	mov	r0, r3
 800cf44:	f7ff ffc8 	bl	800ced8 <makeFreeRtosPriority>
 800cf48:	4601      	mov	r1, r0
 800cf4a:	687b      	ldr	r3, [r7, #4]
 800cf4c:	695b      	ldr	r3, [r3, #20]
 800cf4e:	687a      	ldr	r2, [r7, #4]
 800cf50:	6992      	ldr	r2, [r2, #24]
 800cf52:	9202      	str	r2, [sp, #8]
 800cf54:	9301      	str	r3, [sp, #4]
 800cf56:	9100      	str	r1, [sp, #0]
 800cf58:	683b      	ldr	r3, [r7, #0]
 800cf5a:	4632      	mov	r2, r6
 800cf5c:	4629      	mov	r1, r5
 800cf5e:	4620      	mov	r0, r4
 800cf60:	f000 fdae 	bl	800dac0 <xTaskCreateStatic>
 800cf64:	4603      	mov	r3, r0
 800cf66:	60fb      	str	r3, [r7, #12]
 800cf68:	e01c      	b.n	800cfa4 <osThreadCreate+0x8e>
 800cf6a:	687b      	ldr	r3, [r7, #4]
 800cf6c:	685c      	ldr	r4, [r3, #4]
 800cf6e:	687b      	ldr	r3, [r7, #4]
 800cf70:	681d      	ldr	r5, [r3, #0]
 800cf72:	687b      	ldr	r3, [r7, #4]
 800cf74:	691b      	ldr	r3, [r3, #16]
 800cf76:	b29e      	uxth	r6, r3
 800cf78:	687b      	ldr	r3, [r7, #4]
 800cf7a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800cf7e:	4618      	mov	r0, r3
 800cf80:	f7ff ffaa 	bl	800ced8 <makeFreeRtosPriority>
 800cf84:	4602      	mov	r2, r0
 800cf86:	f107 030c 	add.w	r3, r7, #12
 800cf8a:	9301      	str	r3, [sp, #4]
 800cf8c:	9200      	str	r2, [sp, #0]
 800cf8e:	683b      	ldr	r3, [r7, #0]
 800cf90:	4632      	mov	r2, r6
 800cf92:	4629      	mov	r1, r5
 800cf94:	4620      	mov	r0, r4
 800cf96:	f000 fdf3 	bl	800db80 <xTaskCreate>
 800cf9a:	4603      	mov	r3, r0
 800cf9c:	2b01      	cmp	r3, #1
 800cf9e:	d001      	beq.n	800cfa4 <osThreadCreate+0x8e>
 800cfa0:	2300      	movs	r3, #0
 800cfa2:	e000      	b.n	800cfa6 <osThreadCreate+0x90>
 800cfa4:	68fb      	ldr	r3, [r7, #12]
 800cfa6:	4618      	mov	r0, r3
 800cfa8:	3714      	adds	r7, #20
 800cfaa:	46bd      	mov	sp, r7
 800cfac:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cfae <osDelay>:
 800cfae:	b580      	push	{r7, lr}
 800cfb0:	b084      	sub	sp, #16
 800cfb2:	af00      	add	r7, sp, #0
 800cfb4:	6078      	str	r0, [r7, #4]
 800cfb6:	687b      	ldr	r3, [r7, #4]
 800cfb8:	60fb      	str	r3, [r7, #12]
 800cfba:	68fb      	ldr	r3, [r7, #12]
 800cfbc:	2b00      	cmp	r3, #0
 800cfbe:	d001      	beq.n	800cfc4 <osDelay+0x16>
 800cfc0:	68fb      	ldr	r3, [r7, #12]
 800cfc2:	e000      	b.n	800cfc6 <osDelay+0x18>
 800cfc4:	2301      	movs	r3, #1
 800cfc6:	4618      	mov	r0, r3
 800cfc8:	f000 ff9c 	bl	800df04 <vTaskDelay>
 800cfcc:	2300      	movs	r3, #0
 800cfce:	4618      	mov	r0, r3
 800cfd0:	3710      	adds	r7, #16
 800cfd2:	46bd      	mov	sp, r7
 800cfd4:	bd80      	pop	{r7, pc}

0800cfd6 <osMutexCreate>:
 800cfd6:	b580      	push	{r7, lr}
 800cfd8:	b082      	sub	sp, #8
 800cfda:	af00      	add	r7, sp, #0
 800cfdc:	6078      	str	r0, [r7, #4]
 800cfde:	687b      	ldr	r3, [r7, #4]
 800cfe0:	685b      	ldr	r3, [r3, #4]
 800cfe2:	2b00      	cmp	r3, #0
 800cfe4:	d007      	beq.n	800cff6 <osMutexCreate+0x20>
 800cfe6:	687b      	ldr	r3, [r7, #4]
 800cfe8:	685b      	ldr	r3, [r3, #4]
 800cfea:	4619      	mov	r1, r3
 800cfec:	2001      	movs	r0, #1
 800cfee:	f000 fa38 	bl	800d462 <xQueueCreateMutexStatic>
 800cff2:	4603      	mov	r3, r0
 800cff4:	e003      	b.n	800cffe <osMutexCreate+0x28>
 800cff6:	2001      	movs	r0, #1
 800cff8:	f000 fa1b 	bl	800d432 <xQueueCreateMutex>
 800cffc:	4603      	mov	r3, r0
 800cffe:	4618      	mov	r0, r3
 800d000:	3708      	adds	r7, #8
 800d002:	46bd      	mov	sp, r7
 800d004:	bd80      	pop	{r7, pc}

0800d006 <vListInitialise>:
 800d006:	b480      	push	{r7}
 800d008:	b083      	sub	sp, #12
 800d00a:	af00      	add	r7, sp, #0
 800d00c:	6078      	str	r0, [r7, #4]
 800d00e:	687b      	ldr	r3, [r7, #4]
 800d010:	f103 0208 	add.w	r2, r3, #8
 800d014:	687b      	ldr	r3, [r7, #4]
 800d016:	605a      	str	r2, [r3, #4]
 800d018:	687b      	ldr	r3, [r7, #4]
 800d01a:	f04f 32ff 	mov.w	r2, #4294967295
 800d01e:	609a      	str	r2, [r3, #8]
 800d020:	687b      	ldr	r3, [r7, #4]
 800d022:	f103 0208 	add.w	r2, r3, #8
 800d026:	687b      	ldr	r3, [r7, #4]
 800d028:	60da      	str	r2, [r3, #12]
 800d02a:	687b      	ldr	r3, [r7, #4]
 800d02c:	f103 0208 	add.w	r2, r3, #8
 800d030:	687b      	ldr	r3, [r7, #4]
 800d032:	611a      	str	r2, [r3, #16]
 800d034:	687b      	ldr	r3, [r7, #4]
 800d036:	2200      	movs	r2, #0
 800d038:	601a      	str	r2, [r3, #0]
 800d03a:	bf00      	nop
 800d03c:	370c      	adds	r7, #12
 800d03e:	46bd      	mov	sp, r7
 800d040:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d044:	4770      	bx	lr

0800d046 <vListInitialiseItem>:
 800d046:	b480      	push	{r7}
 800d048:	b083      	sub	sp, #12
 800d04a:	af00      	add	r7, sp, #0
 800d04c:	6078      	str	r0, [r7, #4]
 800d04e:	687b      	ldr	r3, [r7, #4]
 800d050:	2200      	movs	r2, #0
 800d052:	611a      	str	r2, [r3, #16]
 800d054:	bf00      	nop
 800d056:	370c      	adds	r7, #12
 800d058:	46bd      	mov	sp, r7
 800d05a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d05e:	4770      	bx	lr

0800d060 <vListInsertEnd>:
 800d060:	b480      	push	{r7}
 800d062:	b085      	sub	sp, #20
 800d064:	af00      	add	r7, sp, #0
 800d066:	6078      	str	r0, [r7, #4]
 800d068:	6039      	str	r1, [r7, #0]
 800d06a:	687b      	ldr	r3, [r7, #4]
 800d06c:	685b      	ldr	r3, [r3, #4]
 800d06e:	60fb      	str	r3, [r7, #12]
 800d070:	683b      	ldr	r3, [r7, #0]
 800d072:	68fa      	ldr	r2, [r7, #12]
 800d074:	605a      	str	r2, [r3, #4]
 800d076:	68fb      	ldr	r3, [r7, #12]
 800d078:	689a      	ldr	r2, [r3, #8]
 800d07a:	683b      	ldr	r3, [r7, #0]
 800d07c:	609a      	str	r2, [r3, #8]
 800d07e:	68fb      	ldr	r3, [r7, #12]
 800d080:	689b      	ldr	r3, [r3, #8]
 800d082:	683a      	ldr	r2, [r7, #0]
 800d084:	605a      	str	r2, [r3, #4]
 800d086:	68fb      	ldr	r3, [r7, #12]
 800d088:	683a      	ldr	r2, [r7, #0]
 800d08a:	609a      	str	r2, [r3, #8]
 800d08c:	683b      	ldr	r3, [r7, #0]
 800d08e:	687a      	ldr	r2, [r7, #4]
 800d090:	611a      	str	r2, [r3, #16]
 800d092:	687b      	ldr	r3, [r7, #4]
 800d094:	681b      	ldr	r3, [r3, #0]
 800d096:	1c5a      	adds	r2, r3, #1
 800d098:	687b      	ldr	r3, [r7, #4]
 800d09a:	601a      	str	r2, [r3, #0]
 800d09c:	bf00      	nop
 800d09e:	3714      	adds	r7, #20
 800d0a0:	46bd      	mov	sp, r7
 800d0a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0a6:	4770      	bx	lr

0800d0a8 <vListInsert>:
 800d0a8:	b480      	push	{r7}
 800d0aa:	b085      	sub	sp, #20
 800d0ac:	af00      	add	r7, sp, #0
 800d0ae:	6078      	str	r0, [r7, #4]
 800d0b0:	6039      	str	r1, [r7, #0]
 800d0b2:	683b      	ldr	r3, [r7, #0]
 800d0b4:	681b      	ldr	r3, [r3, #0]
 800d0b6:	60bb      	str	r3, [r7, #8]
 800d0b8:	68bb      	ldr	r3, [r7, #8]
 800d0ba:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d0be:	d103      	bne.n	800d0c8 <vListInsert+0x20>
 800d0c0:	687b      	ldr	r3, [r7, #4]
 800d0c2:	691b      	ldr	r3, [r3, #16]
 800d0c4:	60fb      	str	r3, [r7, #12]
 800d0c6:	e00c      	b.n	800d0e2 <vListInsert+0x3a>
 800d0c8:	687b      	ldr	r3, [r7, #4]
 800d0ca:	3308      	adds	r3, #8
 800d0cc:	60fb      	str	r3, [r7, #12]
 800d0ce:	e002      	b.n	800d0d6 <vListInsert+0x2e>
 800d0d0:	68fb      	ldr	r3, [r7, #12]
 800d0d2:	685b      	ldr	r3, [r3, #4]
 800d0d4:	60fb      	str	r3, [r7, #12]
 800d0d6:	68fb      	ldr	r3, [r7, #12]
 800d0d8:	685b      	ldr	r3, [r3, #4]
 800d0da:	681b      	ldr	r3, [r3, #0]
 800d0dc:	68ba      	ldr	r2, [r7, #8]
 800d0de:	429a      	cmp	r2, r3
 800d0e0:	d2f6      	bcs.n	800d0d0 <vListInsert+0x28>
 800d0e2:	68fb      	ldr	r3, [r7, #12]
 800d0e4:	685a      	ldr	r2, [r3, #4]
 800d0e6:	683b      	ldr	r3, [r7, #0]
 800d0e8:	605a      	str	r2, [r3, #4]
 800d0ea:	683b      	ldr	r3, [r7, #0]
 800d0ec:	685b      	ldr	r3, [r3, #4]
 800d0ee:	683a      	ldr	r2, [r7, #0]
 800d0f0:	609a      	str	r2, [r3, #8]
 800d0f2:	683b      	ldr	r3, [r7, #0]
 800d0f4:	68fa      	ldr	r2, [r7, #12]
 800d0f6:	609a      	str	r2, [r3, #8]
 800d0f8:	68fb      	ldr	r3, [r7, #12]
 800d0fa:	683a      	ldr	r2, [r7, #0]
 800d0fc:	605a      	str	r2, [r3, #4]
 800d0fe:	683b      	ldr	r3, [r7, #0]
 800d100:	687a      	ldr	r2, [r7, #4]
 800d102:	611a      	str	r2, [r3, #16]
 800d104:	687b      	ldr	r3, [r7, #4]
 800d106:	681b      	ldr	r3, [r3, #0]
 800d108:	1c5a      	adds	r2, r3, #1
 800d10a:	687b      	ldr	r3, [r7, #4]
 800d10c:	601a      	str	r2, [r3, #0]
 800d10e:	bf00      	nop
 800d110:	3714      	adds	r7, #20
 800d112:	46bd      	mov	sp, r7
 800d114:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d118:	4770      	bx	lr

0800d11a <uxListRemove>:
 800d11a:	b480      	push	{r7}
 800d11c:	b085      	sub	sp, #20
 800d11e:	af00      	add	r7, sp, #0
 800d120:	6078      	str	r0, [r7, #4]
 800d122:	687b      	ldr	r3, [r7, #4]
 800d124:	691b      	ldr	r3, [r3, #16]
 800d126:	60fb      	str	r3, [r7, #12]
 800d128:	687b      	ldr	r3, [r7, #4]
 800d12a:	685b      	ldr	r3, [r3, #4]
 800d12c:	687a      	ldr	r2, [r7, #4]
 800d12e:	6892      	ldr	r2, [r2, #8]
 800d130:	609a      	str	r2, [r3, #8]
 800d132:	687b      	ldr	r3, [r7, #4]
 800d134:	689b      	ldr	r3, [r3, #8]
 800d136:	687a      	ldr	r2, [r7, #4]
 800d138:	6852      	ldr	r2, [r2, #4]
 800d13a:	605a      	str	r2, [r3, #4]
 800d13c:	68fb      	ldr	r3, [r7, #12]
 800d13e:	685b      	ldr	r3, [r3, #4]
 800d140:	687a      	ldr	r2, [r7, #4]
 800d142:	429a      	cmp	r2, r3
 800d144:	d103      	bne.n	800d14e <uxListRemove+0x34>
 800d146:	687b      	ldr	r3, [r7, #4]
 800d148:	689a      	ldr	r2, [r3, #8]
 800d14a:	68fb      	ldr	r3, [r7, #12]
 800d14c:	605a      	str	r2, [r3, #4]
 800d14e:	687b      	ldr	r3, [r7, #4]
 800d150:	2200      	movs	r2, #0
 800d152:	611a      	str	r2, [r3, #16]
 800d154:	68fb      	ldr	r3, [r7, #12]
 800d156:	681b      	ldr	r3, [r3, #0]
 800d158:	1e5a      	subs	r2, r3, #1
 800d15a:	68fb      	ldr	r3, [r7, #12]
 800d15c:	601a      	str	r2, [r3, #0]
 800d15e:	68fb      	ldr	r3, [r7, #12]
 800d160:	681b      	ldr	r3, [r3, #0]
 800d162:	4618      	mov	r0, r3
 800d164:	3714      	adds	r7, #20
 800d166:	46bd      	mov	sp, r7
 800d168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d16c:	4770      	bx	lr
	...

0800d170 <xQueueGenericReset>:
 800d170:	b580      	push	{r7, lr}
 800d172:	b084      	sub	sp, #16
 800d174:	af00      	add	r7, sp, #0
 800d176:	6078      	str	r0, [r7, #4]
 800d178:	6039      	str	r1, [r7, #0]
 800d17a:	687b      	ldr	r3, [r7, #4]
 800d17c:	60fb      	str	r3, [r7, #12]
 800d17e:	68fb      	ldr	r3, [r7, #12]
 800d180:	2b00      	cmp	r3, #0
 800d182:	d10b      	bne.n	800d19c <xQueueGenericReset+0x2c>
 800d184:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d188:	b672      	cpsid	i
 800d18a:	f383 8811 	msr	BASEPRI, r3
 800d18e:	f3bf 8f6f 	isb	sy
 800d192:	f3bf 8f4f 	dsb	sy
 800d196:	b662      	cpsie	i
 800d198:	60bb      	str	r3, [r7, #8]
 800d19a:	e7fe      	b.n	800d19a <xQueueGenericReset+0x2a>
 800d19c:	f001 fe6c 	bl	800ee78 <vPortEnterCritical>
 800d1a0:	68fb      	ldr	r3, [r7, #12]
 800d1a2:	681a      	ldr	r2, [r3, #0]
 800d1a4:	68fb      	ldr	r3, [r7, #12]
 800d1a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d1a8:	68f9      	ldr	r1, [r7, #12]
 800d1aa:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800d1ac:	fb01 f303 	mul.w	r3, r1, r3
 800d1b0:	441a      	add	r2, r3
 800d1b2:	68fb      	ldr	r3, [r7, #12]
 800d1b4:	609a      	str	r2, [r3, #8]
 800d1b6:	68fb      	ldr	r3, [r7, #12]
 800d1b8:	2200      	movs	r2, #0
 800d1ba:	639a      	str	r2, [r3, #56]	; 0x38
 800d1bc:	68fb      	ldr	r3, [r7, #12]
 800d1be:	681a      	ldr	r2, [r3, #0]
 800d1c0:	68fb      	ldr	r3, [r7, #12]
 800d1c2:	605a      	str	r2, [r3, #4]
 800d1c4:	68fb      	ldr	r3, [r7, #12]
 800d1c6:	681a      	ldr	r2, [r3, #0]
 800d1c8:	68fb      	ldr	r3, [r7, #12]
 800d1ca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d1cc:	3b01      	subs	r3, #1
 800d1ce:	68f9      	ldr	r1, [r7, #12]
 800d1d0:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800d1d2:	fb01 f303 	mul.w	r3, r1, r3
 800d1d6:	441a      	add	r2, r3
 800d1d8:	68fb      	ldr	r3, [r7, #12]
 800d1da:	60da      	str	r2, [r3, #12]
 800d1dc:	68fb      	ldr	r3, [r7, #12]
 800d1de:	22ff      	movs	r2, #255	; 0xff
 800d1e0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800d1e4:	68fb      	ldr	r3, [r7, #12]
 800d1e6:	22ff      	movs	r2, #255	; 0xff
 800d1e8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800d1ec:	683b      	ldr	r3, [r7, #0]
 800d1ee:	2b00      	cmp	r3, #0
 800d1f0:	d114      	bne.n	800d21c <xQueueGenericReset+0xac>
 800d1f2:	68fb      	ldr	r3, [r7, #12]
 800d1f4:	691b      	ldr	r3, [r3, #16]
 800d1f6:	2b00      	cmp	r3, #0
 800d1f8:	d01a      	beq.n	800d230 <xQueueGenericReset+0xc0>
 800d1fa:	68fb      	ldr	r3, [r7, #12]
 800d1fc:	3310      	adds	r3, #16
 800d1fe:	4618      	mov	r0, r3
 800d200:	f001 f936 	bl	800e470 <xTaskRemoveFromEventList>
 800d204:	4603      	mov	r3, r0
 800d206:	2b00      	cmp	r3, #0
 800d208:	d012      	beq.n	800d230 <xQueueGenericReset+0xc0>
 800d20a:	4b0d      	ldr	r3, [pc, #52]	; (800d240 <xQueueGenericReset+0xd0>)
 800d20c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d210:	601a      	str	r2, [r3, #0]
 800d212:	f3bf 8f4f 	dsb	sy
 800d216:	f3bf 8f6f 	isb	sy
 800d21a:	e009      	b.n	800d230 <xQueueGenericReset+0xc0>
 800d21c:	68fb      	ldr	r3, [r7, #12]
 800d21e:	3310      	adds	r3, #16
 800d220:	4618      	mov	r0, r3
 800d222:	f7ff fef0 	bl	800d006 <vListInitialise>
 800d226:	68fb      	ldr	r3, [r7, #12]
 800d228:	3324      	adds	r3, #36	; 0x24
 800d22a:	4618      	mov	r0, r3
 800d22c:	f7ff feeb 	bl	800d006 <vListInitialise>
 800d230:	f001 fe54 	bl	800eedc <vPortExitCritical>
 800d234:	2301      	movs	r3, #1
 800d236:	4618      	mov	r0, r3
 800d238:	3710      	adds	r7, #16
 800d23a:	46bd      	mov	sp, r7
 800d23c:	bd80      	pop	{r7, pc}
 800d23e:	bf00      	nop
 800d240:	e000ed04 	.word	0xe000ed04

0800d244 <xQueueGenericCreateStatic>:
 800d244:	b580      	push	{r7, lr}
 800d246:	b08e      	sub	sp, #56	; 0x38
 800d248:	af02      	add	r7, sp, #8
 800d24a:	60f8      	str	r0, [r7, #12]
 800d24c:	60b9      	str	r1, [r7, #8]
 800d24e:	607a      	str	r2, [r7, #4]
 800d250:	603b      	str	r3, [r7, #0]
 800d252:	68fb      	ldr	r3, [r7, #12]
 800d254:	2b00      	cmp	r3, #0
 800d256:	d10b      	bne.n	800d270 <xQueueGenericCreateStatic+0x2c>
 800d258:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d25c:	b672      	cpsid	i
 800d25e:	f383 8811 	msr	BASEPRI, r3
 800d262:	f3bf 8f6f 	isb	sy
 800d266:	f3bf 8f4f 	dsb	sy
 800d26a:	b662      	cpsie	i
 800d26c:	62bb      	str	r3, [r7, #40]	; 0x28
 800d26e:	e7fe      	b.n	800d26e <xQueueGenericCreateStatic+0x2a>
 800d270:	683b      	ldr	r3, [r7, #0]
 800d272:	2b00      	cmp	r3, #0
 800d274:	d10b      	bne.n	800d28e <xQueueGenericCreateStatic+0x4a>
 800d276:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d27a:	b672      	cpsid	i
 800d27c:	f383 8811 	msr	BASEPRI, r3
 800d280:	f3bf 8f6f 	isb	sy
 800d284:	f3bf 8f4f 	dsb	sy
 800d288:	b662      	cpsie	i
 800d28a:	627b      	str	r3, [r7, #36]	; 0x24
 800d28c:	e7fe      	b.n	800d28c <xQueueGenericCreateStatic+0x48>
 800d28e:	687b      	ldr	r3, [r7, #4]
 800d290:	2b00      	cmp	r3, #0
 800d292:	d002      	beq.n	800d29a <xQueueGenericCreateStatic+0x56>
 800d294:	68bb      	ldr	r3, [r7, #8]
 800d296:	2b00      	cmp	r3, #0
 800d298:	d001      	beq.n	800d29e <xQueueGenericCreateStatic+0x5a>
 800d29a:	2301      	movs	r3, #1
 800d29c:	e000      	b.n	800d2a0 <xQueueGenericCreateStatic+0x5c>
 800d29e:	2300      	movs	r3, #0
 800d2a0:	2b00      	cmp	r3, #0
 800d2a2:	d10b      	bne.n	800d2bc <xQueueGenericCreateStatic+0x78>
 800d2a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2a8:	b672      	cpsid	i
 800d2aa:	f383 8811 	msr	BASEPRI, r3
 800d2ae:	f3bf 8f6f 	isb	sy
 800d2b2:	f3bf 8f4f 	dsb	sy
 800d2b6:	b662      	cpsie	i
 800d2b8:	623b      	str	r3, [r7, #32]
 800d2ba:	e7fe      	b.n	800d2ba <xQueueGenericCreateStatic+0x76>
 800d2bc:	687b      	ldr	r3, [r7, #4]
 800d2be:	2b00      	cmp	r3, #0
 800d2c0:	d102      	bne.n	800d2c8 <xQueueGenericCreateStatic+0x84>
 800d2c2:	68bb      	ldr	r3, [r7, #8]
 800d2c4:	2b00      	cmp	r3, #0
 800d2c6:	d101      	bne.n	800d2cc <xQueueGenericCreateStatic+0x88>
 800d2c8:	2301      	movs	r3, #1
 800d2ca:	e000      	b.n	800d2ce <xQueueGenericCreateStatic+0x8a>
 800d2cc:	2300      	movs	r3, #0
 800d2ce:	2b00      	cmp	r3, #0
 800d2d0:	d10b      	bne.n	800d2ea <xQueueGenericCreateStatic+0xa6>
 800d2d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2d6:	b672      	cpsid	i
 800d2d8:	f383 8811 	msr	BASEPRI, r3
 800d2dc:	f3bf 8f6f 	isb	sy
 800d2e0:	f3bf 8f4f 	dsb	sy
 800d2e4:	b662      	cpsie	i
 800d2e6:	61fb      	str	r3, [r7, #28]
 800d2e8:	e7fe      	b.n	800d2e8 <xQueueGenericCreateStatic+0xa4>
 800d2ea:	2348      	movs	r3, #72	; 0x48
 800d2ec:	617b      	str	r3, [r7, #20]
 800d2ee:	697b      	ldr	r3, [r7, #20]
 800d2f0:	2b48      	cmp	r3, #72	; 0x48
 800d2f2:	d00b      	beq.n	800d30c <xQueueGenericCreateStatic+0xc8>
 800d2f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2f8:	b672      	cpsid	i
 800d2fa:	f383 8811 	msr	BASEPRI, r3
 800d2fe:	f3bf 8f6f 	isb	sy
 800d302:	f3bf 8f4f 	dsb	sy
 800d306:	b662      	cpsie	i
 800d308:	61bb      	str	r3, [r7, #24]
 800d30a:	e7fe      	b.n	800d30a <xQueueGenericCreateStatic+0xc6>
 800d30c:	697b      	ldr	r3, [r7, #20]
 800d30e:	683b      	ldr	r3, [r7, #0]
 800d310:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d312:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d314:	2b00      	cmp	r3, #0
 800d316:	d00d      	beq.n	800d334 <xQueueGenericCreateStatic+0xf0>
 800d318:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d31a:	2201      	movs	r2, #1
 800d31c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800d320:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 800d324:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d326:	9300      	str	r3, [sp, #0]
 800d328:	4613      	mov	r3, r2
 800d32a:	687a      	ldr	r2, [r7, #4]
 800d32c:	68b9      	ldr	r1, [r7, #8]
 800d32e:	68f8      	ldr	r0, [r7, #12]
 800d330:	f000 f846 	bl	800d3c0 <prvInitialiseNewQueue>
 800d334:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d336:	4618      	mov	r0, r3
 800d338:	3730      	adds	r7, #48	; 0x30
 800d33a:	46bd      	mov	sp, r7
 800d33c:	bd80      	pop	{r7, pc}

0800d33e <xQueueGenericCreate>:
 800d33e:	b580      	push	{r7, lr}
 800d340:	b08a      	sub	sp, #40	; 0x28
 800d342:	af02      	add	r7, sp, #8
 800d344:	60f8      	str	r0, [r7, #12]
 800d346:	60b9      	str	r1, [r7, #8]
 800d348:	4613      	mov	r3, r2
 800d34a:	71fb      	strb	r3, [r7, #7]
 800d34c:	68fb      	ldr	r3, [r7, #12]
 800d34e:	2b00      	cmp	r3, #0
 800d350:	d10b      	bne.n	800d36a <xQueueGenericCreate+0x2c>
 800d352:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d356:	b672      	cpsid	i
 800d358:	f383 8811 	msr	BASEPRI, r3
 800d35c:	f3bf 8f6f 	isb	sy
 800d360:	f3bf 8f4f 	dsb	sy
 800d364:	b662      	cpsie	i
 800d366:	613b      	str	r3, [r7, #16]
 800d368:	e7fe      	b.n	800d368 <xQueueGenericCreate+0x2a>
 800d36a:	68bb      	ldr	r3, [r7, #8]
 800d36c:	2b00      	cmp	r3, #0
 800d36e:	d102      	bne.n	800d376 <xQueueGenericCreate+0x38>
 800d370:	2300      	movs	r3, #0
 800d372:	61fb      	str	r3, [r7, #28]
 800d374:	e004      	b.n	800d380 <xQueueGenericCreate+0x42>
 800d376:	68fb      	ldr	r3, [r7, #12]
 800d378:	68ba      	ldr	r2, [r7, #8]
 800d37a:	fb02 f303 	mul.w	r3, r2, r3
 800d37e:	61fb      	str	r3, [r7, #28]
 800d380:	69fb      	ldr	r3, [r7, #28]
 800d382:	3348      	adds	r3, #72	; 0x48
 800d384:	4618      	mov	r0, r3
 800d386:	f001 fe57 	bl	800f038 <pvPortMalloc>
 800d38a:	61b8      	str	r0, [r7, #24]
 800d38c:	69bb      	ldr	r3, [r7, #24]
 800d38e:	2b00      	cmp	r3, #0
 800d390:	d011      	beq.n	800d3b6 <xQueueGenericCreate+0x78>
 800d392:	69bb      	ldr	r3, [r7, #24]
 800d394:	617b      	str	r3, [r7, #20]
 800d396:	697b      	ldr	r3, [r7, #20]
 800d398:	3348      	adds	r3, #72	; 0x48
 800d39a:	617b      	str	r3, [r7, #20]
 800d39c:	69bb      	ldr	r3, [r7, #24]
 800d39e:	2200      	movs	r2, #0
 800d3a0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800d3a4:	79fa      	ldrb	r2, [r7, #7]
 800d3a6:	69bb      	ldr	r3, [r7, #24]
 800d3a8:	9300      	str	r3, [sp, #0]
 800d3aa:	4613      	mov	r3, r2
 800d3ac:	697a      	ldr	r2, [r7, #20]
 800d3ae:	68b9      	ldr	r1, [r7, #8]
 800d3b0:	68f8      	ldr	r0, [r7, #12]
 800d3b2:	f000 f805 	bl	800d3c0 <prvInitialiseNewQueue>
 800d3b6:	69bb      	ldr	r3, [r7, #24]
 800d3b8:	4618      	mov	r0, r3
 800d3ba:	3720      	adds	r7, #32
 800d3bc:	46bd      	mov	sp, r7
 800d3be:	bd80      	pop	{r7, pc}

0800d3c0 <prvInitialiseNewQueue>:
 800d3c0:	b580      	push	{r7, lr}
 800d3c2:	b084      	sub	sp, #16
 800d3c4:	af00      	add	r7, sp, #0
 800d3c6:	60f8      	str	r0, [r7, #12]
 800d3c8:	60b9      	str	r1, [r7, #8]
 800d3ca:	607a      	str	r2, [r7, #4]
 800d3cc:	70fb      	strb	r3, [r7, #3]
 800d3ce:	68bb      	ldr	r3, [r7, #8]
 800d3d0:	2b00      	cmp	r3, #0
 800d3d2:	d103      	bne.n	800d3dc <prvInitialiseNewQueue+0x1c>
 800d3d4:	69bb      	ldr	r3, [r7, #24]
 800d3d6:	69ba      	ldr	r2, [r7, #24]
 800d3d8:	601a      	str	r2, [r3, #0]
 800d3da:	e002      	b.n	800d3e2 <prvInitialiseNewQueue+0x22>
 800d3dc:	69bb      	ldr	r3, [r7, #24]
 800d3de:	687a      	ldr	r2, [r7, #4]
 800d3e0:	601a      	str	r2, [r3, #0]
 800d3e2:	69bb      	ldr	r3, [r7, #24]
 800d3e4:	68fa      	ldr	r2, [r7, #12]
 800d3e6:	63da      	str	r2, [r3, #60]	; 0x3c
 800d3e8:	69bb      	ldr	r3, [r7, #24]
 800d3ea:	68ba      	ldr	r2, [r7, #8]
 800d3ec:	641a      	str	r2, [r3, #64]	; 0x40
 800d3ee:	2101      	movs	r1, #1
 800d3f0:	69b8      	ldr	r0, [r7, #24]
 800d3f2:	f7ff febd 	bl	800d170 <xQueueGenericReset>
 800d3f6:	bf00      	nop
 800d3f8:	3710      	adds	r7, #16
 800d3fa:	46bd      	mov	sp, r7
 800d3fc:	bd80      	pop	{r7, pc}

0800d3fe <prvInitialiseMutex>:
 800d3fe:	b580      	push	{r7, lr}
 800d400:	b082      	sub	sp, #8
 800d402:	af00      	add	r7, sp, #0
 800d404:	6078      	str	r0, [r7, #4]
 800d406:	687b      	ldr	r3, [r7, #4]
 800d408:	2b00      	cmp	r3, #0
 800d40a:	d00e      	beq.n	800d42a <prvInitialiseMutex+0x2c>
 800d40c:	687b      	ldr	r3, [r7, #4]
 800d40e:	2200      	movs	r2, #0
 800d410:	609a      	str	r2, [r3, #8]
 800d412:	687b      	ldr	r3, [r7, #4]
 800d414:	2200      	movs	r2, #0
 800d416:	601a      	str	r2, [r3, #0]
 800d418:	687b      	ldr	r3, [r7, #4]
 800d41a:	2200      	movs	r2, #0
 800d41c:	60da      	str	r2, [r3, #12]
 800d41e:	2300      	movs	r3, #0
 800d420:	2200      	movs	r2, #0
 800d422:	2100      	movs	r1, #0
 800d424:	6878      	ldr	r0, [r7, #4]
 800d426:	f000 f837 	bl	800d498 <xQueueGenericSend>
 800d42a:	bf00      	nop
 800d42c:	3708      	adds	r7, #8
 800d42e:	46bd      	mov	sp, r7
 800d430:	bd80      	pop	{r7, pc}

0800d432 <xQueueCreateMutex>:
 800d432:	b580      	push	{r7, lr}
 800d434:	b086      	sub	sp, #24
 800d436:	af00      	add	r7, sp, #0
 800d438:	4603      	mov	r3, r0
 800d43a:	71fb      	strb	r3, [r7, #7]
 800d43c:	2301      	movs	r3, #1
 800d43e:	617b      	str	r3, [r7, #20]
 800d440:	2300      	movs	r3, #0
 800d442:	613b      	str	r3, [r7, #16]
 800d444:	79fb      	ldrb	r3, [r7, #7]
 800d446:	461a      	mov	r2, r3
 800d448:	6939      	ldr	r1, [r7, #16]
 800d44a:	6978      	ldr	r0, [r7, #20]
 800d44c:	f7ff ff77 	bl	800d33e <xQueueGenericCreate>
 800d450:	60f8      	str	r0, [r7, #12]
 800d452:	68f8      	ldr	r0, [r7, #12]
 800d454:	f7ff ffd3 	bl	800d3fe <prvInitialiseMutex>
 800d458:	68fb      	ldr	r3, [r7, #12]
 800d45a:	4618      	mov	r0, r3
 800d45c:	3718      	adds	r7, #24
 800d45e:	46bd      	mov	sp, r7
 800d460:	bd80      	pop	{r7, pc}

0800d462 <xQueueCreateMutexStatic>:
 800d462:	b580      	push	{r7, lr}
 800d464:	b088      	sub	sp, #32
 800d466:	af02      	add	r7, sp, #8
 800d468:	4603      	mov	r3, r0
 800d46a:	6039      	str	r1, [r7, #0]
 800d46c:	71fb      	strb	r3, [r7, #7]
 800d46e:	2301      	movs	r3, #1
 800d470:	617b      	str	r3, [r7, #20]
 800d472:	2300      	movs	r3, #0
 800d474:	613b      	str	r3, [r7, #16]
 800d476:	79fb      	ldrb	r3, [r7, #7]
 800d478:	9300      	str	r3, [sp, #0]
 800d47a:	683b      	ldr	r3, [r7, #0]
 800d47c:	2200      	movs	r2, #0
 800d47e:	6939      	ldr	r1, [r7, #16]
 800d480:	6978      	ldr	r0, [r7, #20]
 800d482:	f7ff fedf 	bl	800d244 <xQueueGenericCreateStatic>
 800d486:	60f8      	str	r0, [r7, #12]
 800d488:	68f8      	ldr	r0, [r7, #12]
 800d48a:	f7ff ffb8 	bl	800d3fe <prvInitialiseMutex>
 800d48e:	68fb      	ldr	r3, [r7, #12]
 800d490:	4618      	mov	r0, r3
 800d492:	3718      	adds	r7, #24
 800d494:	46bd      	mov	sp, r7
 800d496:	bd80      	pop	{r7, pc}

0800d498 <xQueueGenericSend>:
 800d498:	b580      	push	{r7, lr}
 800d49a:	b08e      	sub	sp, #56	; 0x38
 800d49c:	af00      	add	r7, sp, #0
 800d49e:	60f8      	str	r0, [r7, #12]
 800d4a0:	60b9      	str	r1, [r7, #8]
 800d4a2:	607a      	str	r2, [r7, #4]
 800d4a4:	603b      	str	r3, [r7, #0]
 800d4a6:	2300      	movs	r3, #0
 800d4a8:	637b      	str	r3, [r7, #52]	; 0x34
 800d4aa:	68fb      	ldr	r3, [r7, #12]
 800d4ac:	633b      	str	r3, [r7, #48]	; 0x30
 800d4ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d4b0:	2b00      	cmp	r3, #0
 800d4b2:	d10b      	bne.n	800d4cc <xQueueGenericSend+0x34>
 800d4b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4b8:	b672      	cpsid	i
 800d4ba:	f383 8811 	msr	BASEPRI, r3
 800d4be:	f3bf 8f6f 	isb	sy
 800d4c2:	f3bf 8f4f 	dsb	sy
 800d4c6:	b662      	cpsie	i
 800d4c8:	62bb      	str	r3, [r7, #40]	; 0x28
 800d4ca:	e7fe      	b.n	800d4ca <xQueueGenericSend+0x32>
 800d4cc:	68bb      	ldr	r3, [r7, #8]
 800d4ce:	2b00      	cmp	r3, #0
 800d4d0:	d103      	bne.n	800d4da <xQueueGenericSend+0x42>
 800d4d2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d4d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d4d6:	2b00      	cmp	r3, #0
 800d4d8:	d101      	bne.n	800d4de <xQueueGenericSend+0x46>
 800d4da:	2301      	movs	r3, #1
 800d4dc:	e000      	b.n	800d4e0 <xQueueGenericSend+0x48>
 800d4de:	2300      	movs	r3, #0
 800d4e0:	2b00      	cmp	r3, #0
 800d4e2:	d10b      	bne.n	800d4fc <xQueueGenericSend+0x64>
 800d4e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4e8:	b672      	cpsid	i
 800d4ea:	f383 8811 	msr	BASEPRI, r3
 800d4ee:	f3bf 8f6f 	isb	sy
 800d4f2:	f3bf 8f4f 	dsb	sy
 800d4f6:	b662      	cpsie	i
 800d4f8:	627b      	str	r3, [r7, #36]	; 0x24
 800d4fa:	e7fe      	b.n	800d4fa <xQueueGenericSend+0x62>
 800d4fc:	683b      	ldr	r3, [r7, #0]
 800d4fe:	2b02      	cmp	r3, #2
 800d500:	d103      	bne.n	800d50a <xQueueGenericSend+0x72>
 800d502:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d504:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d506:	2b01      	cmp	r3, #1
 800d508:	d101      	bne.n	800d50e <xQueueGenericSend+0x76>
 800d50a:	2301      	movs	r3, #1
 800d50c:	e000      	b.n	800d510 <xQueueGenericSend+0x78>
 800d50e:	2300      	movs	r3, #0
 800d510:	2b00      	cmp	r3, #0
 800d512:	d10b      	bne.n	800d52c <xQueueGenericSend+0x94>
 800d514:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d518:	b672      	cpsid	i
 800d51a:	f383 8811 	msr	BASEPRI, r3
 800d51e:	f3bf 8f6f 	isb	sy
 800d522:	f3bf 8f4f 	dsb	sy
 800d526:	b662      	cpsie	i
 800d528:	623b      	str	r3, [r7, #32]
 800d52a:	e7fe      	b.n	800d52a <xQueueGenericSend+0x92>
 800d52c:	f001 f960 	bl	800e7f0 <xTaskGetSchedulerState>
 800d530:	4603      	mov	r3, r0
 800d532:	2b00      	cmp	r3, #0
 800d534:	d102      	bne.n	800d53c <xQueueGenericSend+0xa4>
 800d536:	687b      	ldr	r3, [r7, #4]
 800d538:	2b00      	cmp	r3, #0
 800d53a:	d101      	bne.n	800d540 <xQueueGenericSend+0xa8>
 800d53c:	2301      	movs	r3, #1
 800d53e:	e000      	b.n	800d542 <xQueueGenericSend+0xaa>
 800d540:	2300      	movs	r3, #0
 800d542:	2b00      	cmp	r3, #0
 800d544:	d10b      	bne.n	800d55e <xQueueGenericSend+0xc6>
 800d546:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d54a:	b672      	cpsid	i
 800d54c:	f383 8811 	msr	BASEPRI, r3
 800d550:	f3bf 8f6f 	isb	sy
 800d554:	f3bf 8f4f 	dsb	sy
 800d558:	b662      	cpsie	i
 800d55a:	61fb      	str	r3, [r7, #28]
 800d55c:	e7fe      	b.n	800d55c <xQueueGenericSend+0xc4>
 800d55e:	f001 fc8b 	bl	800ee78 <vPortEnterCritical>
 800d562:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d564:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800d566:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d568:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d56a:	429a      	cmp	r2, r3
 800d56c:	d302      	bcc.n	800d574 <xQueueGenericSend+0xdc>
 800d56e:	683b      	ldr	r3, [r7, #0]
 800d570:	2b02      	cmp	r3, #2
 800d572:	d129      	bne.n	800d5c8 <xQueueGenericSend+0x130>
 800d574:	683a      	ldr	r2, [r7, #0]
 800d576:	68b9      	ldr	r1, [r7, #8]
 800d578:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d57a:	f000 f9b7 	bl	800d8ec <prvCopyDataToQueue>
 800d57e:	62f8      	str	r0, [r7, #44]	; 0x2c
 800d580:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d582:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d584:	2b00      	cmp	r3, #0
 800d586:	d010      	beq.n	800d5aa <xQueueGenericSend+0x112>
 800d588:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d58a:	3324      	adds	r3, #36	; 0x24
 800d58c:	4618      	mov	r0, r3
 800d58e:	f000 ff6f 	bl	800e470 <xTaskRemoveFromEventList>
 800d592:	4603      	mov	r3, r0
 800d594:	2b00      	cmp	r3, #0
 800d596:	d013      	beq.n	800d5c0 <xQueueGenericSend+0x128>
 800d598:	4b3f      	ldr	r3, [pc, #252]	; (800d698 <xQueueGenericSend+0x200>)
 800d59a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d59e:	601a      	str	r2, [r3, #0]
 800d5a0:	f3bf 8f4f 	dsb	sy
 800d5a4:	f3bf 8f6f 	isb	sy
 800d5a8:	e00a      	b.n	800d5c0 <xQueueGenericSend+0x128>
 800d5aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d5ac:	2b00      	cmp	r3, #0
 800d5ae:	d007      	beq.n	800d5c0 <xQueueGenericSend+0x128>
 800d5b0:	4b39      	ldr	r3, [pc, #228]	; (800d698 <xQueueGenericSend+0x200>)
 800d5b2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d5b6:	601a      	str	r2, [r3, #0]
 800d5b8:	f3bf 8f4f 	dsb	sy
 800d5bc:	f3bf 8f6f 	isb	sy
 800d5c0:	f001 fc8c 	bl	800eedc <vPortExitCritical>
 800d5c4:	2301      	movs	r3, #1
 800d5c6:	e063      	b.n	800d690 <xQueueGenericSend+0x1f8>
 800d5c8:	687b      	ldr	r3, [r7, #4]
 800d5ca:	2b00      	cmp	r3, #0
 800d5cc:	d103      	bne.n	800d5d6 <xQueueGenericSend+0x13e>
 800d5ce:	f001 fc85 	bl	800eedc <vPortExitCritical>
 800d5d2:	2300      	movs	r3, #0
 800d5d4:	e05c      	b.n	800d690 <xQueueGenericSend+0x1f8>
 800d5d6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d5d8:	2b00      	cmp	r3, #0
 800d5da:	d106      	bne.n	800d5ea <xQueueGenericSend+0x152>
 800d5dc:	f107 0314 	add.w	r3, r7, #20
 800d5e0:	4618      	mov	r0, r3
 800d5e2:	f000 ffa9 	bl	800e538 <vTaskInternalSetTimeOutState>
 800d5e6:	2301      	movs	r3, #1
 800d5e8:	637b      	str	r3, [r7, #52]	; 0x34
 800d5ea:	f001 fc77 	bl	800eedc <vPortExitCritical>
 800d5ee:	f000 fd21 	bl	800e034 <vTaskSuspendAll>
 800d5f2:	f001 fc41 	bl	800ee78 <vPortEnterCritical>
 800d5f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d5f8:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800d5fc:	b25b      	sxtb	r3, r3
 800d5fe:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d602:	d103      	bne.n	800d60c <xQueueGenericSend+0x174>
 800d604:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d606:	2200      	movs	r2, #0
 800d608:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800d60c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d60e:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800d612:	b25b      	sxtb	r3, r3
 800d614:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d618:	d103      	bne.n	800d622 <xQueueGenericSend+0x18a>
 800d61a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d61c:	2200      	movs	r2, #0
 800d61e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800d622:	f001 fc5b 	bl	800eedc <vPortExitCritical>
 800d626:	1d3a      	adds	r2, r7, #4
 800d628:	f107 0314 	add.w	r3, r7, #20
 800d62c:	4611      	mov	r1, r2
 800d62e:	4618      	mov	r0, r3
 800d630:	f000 ff98 	bl	800e564 <xTaskCheckForTimeOut>
 800d634:	4603      	mov	r3, r0
 800d636:	2b00      	cmp	r3, #0
 800d638:	d124      	bne.n	800d684 <xQueueGenericSend+0x1ec>
 800d63a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d63c:	f000 fa28 	bl	800da90 <prvIsQueueFull>
 800d640:	4603      	mov	r3, r0
 800d642:	2b00      	cmp	r3, #0
 800d644:	d018      	beq.n	800d678 <xQueueGenericSend+0x1e0>
 800d646:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d648:	3310      	adds	r3, #16
 800d64a:	687a      	ldr	r2, [r7, #4]
 800d64c:	4611      	mov	r1, r2
 800d64e:	4618      	mov	r0, r3
 800d650:	f000 fee8 	bl	800e424 <vTaskPlaceOnEventList>
 800d654:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d656:	f000 f9b3 	bl	800d9c0 <prvUnlockQueue>
 800d65a:	f000 fcf9 	bl	800e050 <xTaskResumeAll>
 800d65e:	4603      	mov	r3, r0
 800d660:	2b00      	cmp	r3, #0
 800d662:	f47f af7c 	bne.w	800d55e <xQueueGenericSend+0xc6>
 800d666:	4b0c      	ldr	r3, [pc, #48]	; (800d698 <xQueueGenericSend+0x200>)
 800d668:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d66c:	601a      	str	r2, [r3, #0]
 800d66e:	f3bf 8f4f 	dsb	sy
 800d672:	f3bf 8f6f 	isb	sy
 800d676:	e772      	b.n	800d55e <xQueueGenericSend+0xc6>
 800d678:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d67a:	f000 f9a1 	bl	800d9c0 <prvUnlockQueue>
 800d67e:	f000 fce7 	bl	800e050 <xTaskResumeAll>
 800d682:	e76c      	b.n	800d55e <xQueueGenericSend+0xc6>
 800d684:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800d686:	f000 f99b 	bl	800d9c0 <prvUnlockQueue>
 800d68a:	f000 fce1 	bl	800e050 <xTaskResumeAll>
 800d68e:	2300      	movs	r3, #0
 800d690:	4618      	mov	r0, r3
 800d692:	3738      	adds	r7, #56	; 0x38
 800d694:	46bd      	mov	sp, r7
 800d696:	bd80      	pop	{r7, pc}
 800d698:	e000ed04 	.word	0xe000ed04

0800d69c <xQueueSemaphoreTake>:
 800d69c:	b580      	push	{r7, lr}
 800d69e:	b08e      	sub	sp, #56	; 0x38
 800d6a0:	af00      	add	r7, sp, #0
 800d6a2:	6078      	str	r0, [r7, #4]
 800d6a4:	6039      	str	r1, [r7, #0]
 800d6a6:	2300      	movs	r3, #0
 800d6a8:	637b      	str	r3, [r7, #52]	; 0x34
 800d6aa:	687b      	ldr	r3, [r7, #4]
 800d6ac:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d6ae:	2300      	movs	r3, #0
 800d6b0:	633b      	str	r3, [r7, #48]	; 0x30
 800d6b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d6b4:	2b00      	cmp	r3, #0
 800d6b6:	d10b      	bne.n	800d6d0 <xQueueSemaphoreTake+0x34>
 800d6b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6bc:	b672      	cpsid	i
 800d6be:	f383 8811 	msr	BASEPRI, r3
 800d6c2:	f3bf 8f6f 	isb	sy
 800d6c6:	f3bf 8f4f 	dsb	sy
 800d6ca:	b662      	cpsie	i
 800d6cc:	623b      	str	r3, [r7, #32]
 800d6ce:	e7fe      	b.n	800d6ce <xQueueSemaphoreTake+0x32>
 800d6d0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d6d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d6d4:	2b00      	cmp	r3, #0
 800d6d6:	d00b      	beq.n	800d6f0 <xQueueSemaphoreTake+0x54>
 800d6d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6dc:	b672      	cpsid	i
 800d6de:	f383 8811 	msr	BASEPRI, r3
 800d6e2:	f3bf 8f6f 	isb	sy
 800d6e6:	f3bf 8f4f 	dsb	sy
 800d6ea:	b662      	cpsie	i
 800d6ec:	61fb      	str	r3, [r7, #28]
 800d6ee:	e7fe      	b.n	800d6ee <xQueueSemaphoreTake+0x52>
 800d6f0:	f001 f87e 	bl	800e7f0 <xTaskGetSchedulerState>
 800d6f4:	4603      	mov	r3, r0
 800d6f6:	2b00      	cmp	r3, #0
 800d6f8:	d102      	bne.n	800d700 <xQueueSemaphoreTake+0x64>
 800d6fa:	683b      	ldr	r3, [r7, #0]
 800d6fc:	2b00      	cmp	r3, #0
 800d6fe:	d101      	bne.n	800d704 <xQueueSemaphoreTake+0x68>
 800d700:	2301      	movs	r3, #1
 800d702:	e000      	b.n	800d706 <xQueueSemaphoreTake+0x6a>
 800d704:	2300      	movs	r3, #0
 800d706:	2b00      	cmp	r3, #0
 800d708:	d10b      	bne.n	800d722 <xQueueSemaphoreTake+0x86>
 800d70a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d70e:	b672      	cpsid	i
 800d710:	f383 8811 	msr	BASEPRI, r3
 800d714:	f3bf 8f6f 	isb	sy
 800d718:	f3bf 8f4f 	dsb	sy
 800d71c:	b662      	cpsie	i
 800d71e:	61bb      	str	r3, [r7, #24]
 800d720:	e7fe      	b.n	800d720 <xQueueSemaphoreTake+0x84>
 800d722:	f001 fba9 	bl	800ee78 <vPortEnterCritical>
 800d726:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d728:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d72a:	62bb      	str	r3, [r7, #40]	; 0x28
 800d72c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d72e:	2b00      	cmp	r3, #0
 800d730:	d024      	beq.n	800d77c <xQueueSemaphoreTake+0xe0>
 800d732:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d734:	1e5a      	subs	r2, r3, #1
 800d736:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d738:	639a      	str	r2, [r3, #56]	; 0x38
 800d73a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d73c:	681b      	ldr	r3, [r3, #0]
 800d73e:	2b00      	cmp	r3, #0
 800d740:	d104      	bne.n	800d74c <xQueueSemaphoreTake+0xb0>
 800d742:	f001 fa17 	bl	800eb74 <pvTaskIncrementMutexHeldCount>
 800d746:	4602      	mov	r2, r0
 800d748:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d74a:	609a      	str	r2, [r3, #8]
 800d74c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d74e:	691b      	ldr	r3, [r3, #16]
 800d750:	2b00      	cmp	r3, #0
 800d752:	d00f      	beq.n	800d774 <xQueueSemaphoreTake+0xd8>
 800d754:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d756:	3310      	adds	r3, #16
 800d758:	4618      	mov	r0, r3
 800d75a:	f000 fe89 	bl	800e470 <xTaskRemoveFromEventList>
 800d75e:	4603      	mov	r3, r0
 800d760:	2b00      	cmp	r3, #0
 800d762:	d007      	beq.n	800d774 <xQueueSemaphoreTake+0xd8>
 800d764:	4b54      	ldr	r3, [pc, #336]	; (800d8b8 <xQueueSemaphoreTake+0x21c>)
 800d766:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d76a:	601a      	str	r2, [r3, #0]
 800d76c:	f3bf 8f4f 	dsb	sy
 800d770:	f3bf 8f6f 	isb	sy
 800d774:	f001 fbb2 	bl	800eedc <vPortExitCritical>
 800d778:	2301      	movs	r3, #1
 800d77a:	e098      	b.n	800d8ae <xQueueSemaphoreTake+0x212>
 800d77c:	683b      	ldr	r3, [r7, #0]
 800d77e:	2b00      	cmp	r3, #0
 800d780:	d112      	bne.n	800d7a8 <xQueueSemaphoreTake+0x10c>
 800d782:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d784:	2b00      	cmp	r3, #0
 800d786:	d00b      	beq.n	800d7a0 <xQueueSemaphoreTake+0x104>
 800d788:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d78c:	b672      	cpsid	i
 800d78e:	f383 8811 	msr	BASEPRI, r3
 800d792:	f3bf 8f6f 	isb	sy
 800d796:	f3bf 8f4f 	dsb	sy
 800d79a:	b662      	cpsie	i
 800d79c:	617b      	str	r3, [r7, #20]
 800d79e:	e7fe      	b.n	800d79e <xQueueSemaphoreTake+0x102>
 800d7a0:	f001 fb9c 	bl	800eedc <vPortExitCritical>
 800d7a4:	2300      	movs	r3, #0
 800d7a6:	e082      	b.n	800d8ae <xQueueSemaphoreTake+0x212>
 800d7a8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d7aa:	2b00      	cmp	r3, #0
 800d7ac:	d106      	bne.n	800d7bc <xQueueSemaphoreTake+0x120>
 800d7ae:	f107 030c 	add.w	r3, r7, #12
 800d7b2:	4618      	mov	r0, r3
 800d7b4:	f000 fec0 	bl	800e538 <vTaskInternalSetTimeOutState>
 800d7b8:	2301      	movs	r3, #1
 800d7ba:	637b      	str	r3, [r7, #52]	; 0x34
 800d7bc:	f001 fb8e 	bl	800eedc <vPortExitCritical>
 800d7c0:	f000 fc38 	bl	800e034 <vTaskSuspendAll>
 800d7c4:	f001 fb58 	bl	800ee78 <vPortEnterCritical>
 800d7c8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d7ca:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800d7ce:	b25b      	sxtb	r3, r3
 800d7d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d7d4:	d103      	bne.n	800d7de <xQueueSemaphoreTake+0x142>
 800d7d6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d7d8:	2200      	movs	r2, #0
 800d7da:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800d7de:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d7e0:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800d7e4:	b25b      	sxtb	r3, r3
 800d7e6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d7ea:	d103      	bne.n	800d7f4 <xQueueSemaphoreTake+0x158>
 800d7ec:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d7ee:	2200      	movs	r2, #0
 800d7f0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800d7f4:	f001 fb72 	bl	800eedc <vPortExitCritical>
 800d7f8:	463a      	mov	r2, r7
 800d7fa:	f107 030c 	add.w	r3, r7, #12
 800d7fe:	4611      	mov	r1, r2
 800d800:	4618      	mov	r0, r3
 800d802:	f000 feaf 	bl	800e564 <xTaskCheckForTimeOut>
 800d806:	4603      	mov	r3, r0
 800d808:	2b00      	cmp	r3, #0
 800d80a:	d132      	bne.n	800d872 <xQueueSemaphoreTake+0x1d6>
 800d80c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d80e:	f000 f929 	bl	800da64 <prvIsQueueEmpty>
 800d812:	4603      	mov	r3, r0
 800d814:	2b00      	cmp	r3, #0
 800d816:	d026      	beq.n	800d866 <xQueueSemaphoreTake+0x1ca>
 800d818:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d81a:	681b      	ldr	r3, [r3, #0]
 800d81c:	2b00      	cmp	r3, #0
 800d81e:	d109      	bne.n	800d834 <xQueueSemaphoreTake+0x198>
 800d820:	f001 fb2a 	bl	800ee78 <vPortEnterCritical>
 800d824:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d826:	689b      	ldr	r3, [r3, #8]
 800d828:	4618      	mov	r0, r3
 800d82a:	f000 ffff 	bl	800e82c <xTaskPriorityInherit>
 800d82e:	6338      	str	r0, [r7, #48]	; 0x30
 800d830:	f001 fb54 	bl	800eedc <vPortExitCritical>
 800d834:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d836:	3324      	adds	r3, #36	; 0x24
 800d838:	683a      	ldr	r2, [r7, #0]
 800d83a:	4611      	mov	r1, r2
 800d83c:	4618      	mov	r0, r3
 800d83e:	f000 fdf1 	bl	800e424 <vTaskPlaceOnEventList>
 800d842:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d844:	f000 f8bc 	bl	800d9c0 <prvUnlockQueue>
 800d848:	f000 fc02 	bl	800e050 <xTaskResumeAll>
 800d84c:	4603      	mov	r3, r0
 800d84e:	2b00      	cmp	r3, #0
 800d850:	f47f af67 	bne.w	800d722 <xQueueSemaphoreTake+0x86>
 800d854:	4b18      	ldr	r3, [pc, #96]	; (800d8b8 <xQueueSemaphoreTake+0x21c>)
 800d856:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d85a:	601a      	str	r2, [r3, #0]
 800d85c:	f3bf 8f4f 	dsb	sy
 800d860:	f3bf 8f6f 	isb	sy
 800d864:	e75d      	b.n	800d722 <xQueueSemaphoreTake+0x86>
 800d866:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d868:	f000 f8aa 	bl	800d9c0 <prvUnlockQueue>
 800d86c:	f000 fbf0 	bl	800e050 <xTaskResumeAll>
 800d870:	e757      	b.n	800d722 <xQueueSemaphoreTake+0x86>
 800d872:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d874:	f000 f8a4 	bl	800d9c0 <prvUnlockQueue>
 800d878:	f000 fbea 	bl	800e050 <xTaskResumeAll>
 800d87c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d87e:	f000 f8f1 	bl	800da64 <prvIsQueueEmpty>
 800d882:	4603      	mov	r3, r0
 800d884:	2b00      	cmp	r3, #0
 800d886:	f43f af4c 	beq.w	800d722 <xQueueSemaphoreTake+0x86>
 800d88a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d88c:	2b00      	cmp	r3, #0
 800d88e:	d00d      	beq.n	800d8ac <xQueueSemaphoreTake+0x210>
 800d890:	f001 faf2 	bl	800ee78 <vPortEnterCritical>
 800d894:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800d896:	f000 f811 	bl	800d8bc <prvGetDisinheritPriorityAfterTimeout>
 800d89a:	6278      	str	r0, [r7, #36]	; 0x24
 800d89c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d89e:	689b      	ldr	r3, [r3, #8]
 800d8a0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800d8a2:	4618      	mov	r0, r3
 800d8a4:	f001 f8ca 	bl	800ea3c <vTaskPriorityDisinheritAfterTimeout>
 800d8a8:	f001 fb18 	bl	800eedc <vPortExitCritical>
 800d8ac:	2300      	movs	r3, #0
 800d8ae:	4618      	mov	r0, r3
 800d8b0:	3738      	adds	r7, #56	; 0x38
 800d8b2:	46bd      	mov	sp, r7
 800d8b4:	bd80      	pop	{r7, pc}
 800d8b6:	bf00      	nop
 800d8b8:	e000ed04 	.word	0xe000ed04

0800d8bc <prvGetDisinheritPriorityAfterTimeout>:
 800d8bc:	b480      	push	{r7}
 800d8be:	b085      	sub	sp, #20
 800d8c0:	af00      	add	r7, sp, #0
 800d8c2:	6078      	str	r0, [r7, #4]
 800d8c4:	687b      	ldr	r3, [r7, #4]
 800d8c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d8c8:	2b00      	cmp	r3, #0
 800d8ca:	d006      	beq.n	800d8da <prvGetDisinheritPriorityAfterTimeout+0x1e>
 800d8cc:	687b      	ldr	r3, [r7, #4]
 800d8ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d8d0:	681b      	ldr	r3, [r3, #0]
 800d8d2:	f1c3 0307 	rsb	r3, r3, #7
 800d8d6:	60fb      	str	r3, [r7, #12]
 800d8d8:	e001      	b.n	800d8de <prvGetDisinheritPriorityAfterTimeout+0x22>
 800d8da:	2300      	movs	r3, #0
 800d8dc:	60fb      	str	r3, [r7, #12]
 800d8de:	68fb      	ldr	r3, [r7, #12]
 800d8e0:	4618      	mov	r0, r3
 800d8e2:	3714      	adds	r7, #20
 800d8e4:	46bd      	mov	sp, r7
 800d8e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8ea:	4770      	bx	lr

0800d8ec <prvCopyDataToQueue>:
 800d8ec:	b580      	push	{r7, lr}
 800d8ee:	b086      	sub	sp, #24
 800d8f0:	af00      	add	r7, sp, #0
 800d8f2:	60f8      	str	r0, [r7, #12]
 800d8f4:	60b9      	str	r1, [r7, #8]
 800d8f6:	607a      	str	r2, [r7, #4]
 800d8f8:	2300      	movs	r3, #0
 800d8fa:	617b      	str	r3, [r7, #20]
 800d8fc:	68fb      	ldr	r3, [r7, #12]
 800d8fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d900:	613b      	str	r3, [r7, #16]
 800d902:	68fb      	ldr	r3, [r7, #12]
 800d904:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d906:	2b00      	cmp	r3, #0
 800d908:	d10d      	bne.n	800d926 <prvCopyDataToQueue+0x3a>
 800d90a:	68fb      	ldr	r3, [r7, #12]
 800d90c:	681b      	ldr	r3, [r3, #0]
 800d90e:	2b00      	cmp	r3, #0
 800d910:	d14d      	bne.n	800d9ae <prvCopyDataToQueue+0xc2>
 800d912:	68fb      	ldr	r3, [r7, #12]
 800d914:	689b      	ldr	r3, [r3, #8]
 800d916:	4618      	mov	r0, r3
 800d918:	f001 f808 	bl	800e92c <xTaskPriorityDisinherit>
 800d91c:	6178      	str	r0, [r7, #20]
 800d91e:	68fb      	ldr	r3, [r7, #12]
 800d920:	2200      	movs	r2, #0
 800d922:	609a      	str	r2, [r3, #8]
 800d924:	e043      	b.n	800d9ae <prvCopyDataToQueue+0xc2>
 800d926:	687b      	ldr	r3, [r7, #4]
 800d928:	2b00      	cmp	r3, #0
 800d92a:	d119      	bne.n	800d960 <prvCopyDataToQueue+0x74>
 800d92c:	68fb      	ldr	r3, [r7, #12]
 800d92e:	6858      	ldr	r0, [r3, #4]
 800d930:	68fb      	ldr	r3, [r7, #12]
 800d932:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d934:	461a      	mov	r2, r3
 800d936:	68b9      	ldr	r1, [r7, #8]
 800d938:	f001 fd8c 	bl	800f454 <memcpy>
 800d93c:	68fb      	ldr	r3, [r7, #12]
 800d93e:	685a      	ldr	r2, [r3, #4]
 800d940:	68fb      	ldr	r3, [r7, #12]
 800d942:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d944:	441a      	add	r2, r3
 800d946:	68fb      	ldr	r3, [r7, #12]
 800d948:	605a      	str	r2, [r3, #4]
 800d94a:	68fb      	ldr	r3, [r7, #12]
 800d94c:	685a      	ldr	r2, [r3, #4]
 800d94e:	68fb      	ldr	r3, [r7, #12]
 800d950:	689b      	ldr	r3, [r3, #8]
 800d952:	429a      	cmp	r2, r3
 800d954:	d32b      	bcc.n	800d9ae <prvCopyDataToQueue+0xc2>
 800d956:	68fb      	ldr	r3, [r7, #12]
 800d958:	681a      	ldr	r2, [r3, #0]
 800d95a:	68fb      	ldr	r3, [r7, #12]
 800d95c:	605a      	str	r2, [r3, #4]
 800d95e:	e026      	b.n	800d9ae <prvCopyDataToQueue+0xc2>
 800d960:	68fb      	ldr	r3, [r7, #12]
 800d962:	68d8      	ldr	r0, [r3, #12]
 800d964:	68fb      	ldr	r3, [r7, #12]
 800d966:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d968:	461a      	mov	r2, r3
 800d96a:	68b9      	ldr	r1, [r7, #8]
 800d96c:	f001 fd72 	bl	800f454 <memcpy>
 800d970:	68fb      	ldr	r3, [r7, #12]
 800d972:	68da      	ldr	r2, [r3, #12]
 800d974:	68fb      	ldr	r3, [r7, #12]
 800d976:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d978:	425b      	negs	r3, r3
 800d97a:	441a      	add	r2, r3
 800d97c:	68fb      	ldr	r3, [r7, #12]
 800d97e:	60da      	str	r2, [r3, #12]
 800d980:	68fb      	ldr	r3, [r7, #12]
 800d982:	68da      	ldr	r2, [r3, #12]
 800d984:	68fb      	ldr	r3, [r7, #12]
 800d986:	681b      	ldr	r3, [r3, #0]
 800d988:	429a      	cmp	r2, r3
 800d98a:	d207      	bcs.n	800d99c <prvCopyDataToQueue+0xb0>
 800d98c:	68fb      	ldr	r3, [r7, #12]
 800d98e:	689a      	ldr	r2, [r3, #8]
 800d990:	68fb      	ldr	r3, [r7, #12]
 800d992:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d994:	425b      	negs	r3, r3
 800d996:	441a      	add	r2, r3
 800d998:	68fb      	ldr	r3, [r7, #12]
 800d99a:	60da      	str	r2, [r3, #12]
 800d99c:	687b      	ldr	r3, [r7, #4]
 800d99e:	2b02      	cmp	r3, #2
 800d9a0:	d105      	bne.n	800d9ae <prvCopyDataToQueue+0xc2>
 800d9a2:	693b      	ldr	r3, [r7, #16]
 800d9a4:	2b00      	cmp	r3, #0
 800d9a6:	d002      	beq.n	800d9ae <prvCopyDataToQueue+0xc2>
 800d9a8:	693b      	ldr	r3, [r7, #16]
 800d9aa:	3b01      	subs	r3, #1
 800d9ac:	613b      	str	r3, [r7, #16]
 800d9ae:	693b      	ldr	r3, [r7, #16]
 800d9b0:	1c5a      	adds	r2, r3, #1
 800d9b2:	68fb      	ldr	r3, [r7, #12]
 800d9b4:	639a      	str	r2, [r3, #56]	; 0x38
 800d9b6:	697b      	ldr	r3, [r7, #20]
 800d9b8:	4618      	mov	r0, r3
 800d9ba:	3718      	adds	r7, #24
 800d9bc:	46bd      	mov	sp, r7
 800d9be:	bd80      	pop	{r7, pc}

0800d9c0 <prvUnlockQueue>:
 800d9c0:	b580      	push	{r7, lr}
 800d9c2:	b084      	sub	sp, #16
 800d9c4:	af00      	add	r7, sp, #0
 800d9c6:	6078      	str	r0, [r7, #4]
 800d9c8:	f001 fa56 	bl	800ee78 <vPortEnterCritical>
 800d9cc:	687b      	ldr	r3, [r7, #4]
 800d9ce:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800d9d2:	73fb      	strb	r3, [r7, #15]
 800d9d4:	e011      	b.n	800d9fa <prvUnlockQueue+0x3a>
 800d9d6:	687b      	ldr	r3, [r7, #4]
 800d9d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d9da:	2b00      	cmp	r3, #0
 800d9dc:	d012      	beq.n	800da04 <prvUnlockQueue+0x44>
 800d9de:	687b      	ldr	r3, [r7, #4]
 800d9e0:	3324      	adds	r3, #36	; 0x24
 800d9e2:	4618      	mov	r0, r3
 800d9e4:	f000 fd44 	bl	800e470 <xTaskRemoveFromEventList>
 800d9e8:	4603      	mov	r3, r0
 800d9ea:	2b00      	cmp	r3, #0
 800d9ec:	d001      	beq.n	800d9f2 <prvUnlockQueue+0x32>
 800d9ee:	f000 fe1d 	bl	800e62c <vTaskMissedYield>
 800d9f2:	7bfb      	ldrb	r3, [r7, #15]
 800d9f4:	3b01      	subs	r3, #1
 800d9f6:	b2db      	uxtb	r3, r3
 800d9f8:	73fb      	strb	r3, [r7, #15]
 800d9fa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800d9fe:	2b00      	cmp	r3, #0
 800da00:	dce9      	bgt.n	800d9d6 <prvUnlockQueue+0x16>
 800da02:	e000      	b.n	800da06 <prvUnlockQueue+0x46>
 800da04:	bf00      	nop
 800da06:	687b      	ldr	r3, [r7, #4]
 800da08:	22ff      	movs	r2, #255	; 0xff
 800da0a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800da0e:	f001 fa65 	bl	800eedc <vPortExitCritical>
 800da12:	f001 fa31 	bl	800ee78 <vPortEnterCritical>
 800da16:	687b      	ldr	r3, [r7, #4]
 800da18:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800da1c:	73bb      	strb	r3, [r7, #14]
 800da1e:	e011      	b.n	800da44 <prvUnlockQueue+0x84>
 800da20:	687b      	ldr	r3, [r7, #4]
 800da22:	691b      	ldr	r3, [r3, #16]
 800da24:	2b00      	cmp	r3, #0
 800da26:	d012      	beq.n	800da4e <prvUnlockQueue+0x8e>
 800da28:	687b      	ldr	r3, [r7, #4]
 800da2a:	3310      	adds	r3, #16
 800da2c:	4618      	mov	r0, r3
 800da2e:	f000 fd1f 	bl	800e470 <xTaskRemoveFromEventList>
 800da32:	4603      	mov	r3, r0
 800da34:	2b00      	cmp	r3, #0
 800da36:	d001      	beq.n	800da3c <prvUnlockQueue+0x7c>
 800da38:	f000 fdf8 	bl	800e62c <vTaskMissedYield>
 800da3c:	7bbb      	ldrb	r3, [r7, #14]
 800da3e:	3b01      	subs	r3, #1
 800da40:	b2db      	uxtb	r3, r3
 800da42:	73bb      	strb	r3, [r7, #14]
 800da44:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800da48:	2b00      	cmp	r3, #0
 800da4a:	dce9      	bgt.n	800da20 <prvUnlockQueue+0x60>
 800da4c:	e000      	b.n	800da50 <prvUnlockQueue+0x90>
 800da4e:	bf00      	nop
 800da50:	687b      	ldr	r3, [r7, #4]
 800da52:	22ff      	movs	r2, #255	; 0xff
 800da54:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800da58:	f001 fa40 	bl	800eedc <vPortExitCritical>
 800da5c:	bf00      	nop
 800da5e:	3710      	adds	r7, #16
 800da60:	46bd      	mov	sp, r7
 800da62:	bd80      	pop	{r7, pc}

0800da64 <prvIsQueueEmpty>:
 800da64:	b580      	push	{r7, lr}
 800da66:	b084      	sub	sp, #16
 800da68:	af00      	add	r7, sp, #0
 800da6a:	6078      	str	r0, [r7, #4]
 800da6c:	f001 fa04 	bl	800ee78 <vPortEnterCritical>
 800da70:	687b      	ldr	r3, [r7, #4]
 800da72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800da74:	2b00      	cmp	r3, #0
 800da76:	d102      	bne.n	800da7e <prvIsQueueEmpty+0x1a>
 800da78:	2301      	movs	r3, #1
 800da7a:	60fb      	str	r3, [r7, #12]
 800da7c:	e001      	b.n	800da82 <prvIsQueueEmpty+0x1e>
 800da7e:	2300      	movs	r3, #0
 800da80:	60fb      	str	r3, [r7, #12]
 800da82:	f001 fa2b 	bl	800eedc <vPortExitCritical>
 800da86:	68fb      	ldr	r3, [r7, #12]
 800da88:	4618      	mov	r0, r3
 800da8a:	3710      	adds	r7, #16
 800da8c:	46bd      	mov	sp, r7
 800da8e:	bd80      	pop	{r7, pc}

0800da90 <prvIsQueueFull>:
 800da90:	b580      	push	{r7, lr}
 800da92:	b084      	sub	sp, #16
 800da94:	af00      	add	r7, sp, #0
 800da96:	6078      	str	r0, [r7, #4]
 800da98:	f001 f9ee 	bl	800ee78 <vPortEnterCritical>
 800da9c:	687b      	ldr	r3, [r7, #4]
 800da9e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800daa0:	687b      	ldr	r3, [r7, #4]
 800daa2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800daa4:	429a      	cmp	r2, r3
 800daa6:	d102      	bne.n	800daae <prvIsQueueFull+0x1e>
 800daa8:	2301      	movs	r3, #1
 800daaa:	60fb      	str	r3, [r7, #12]
 800daac:	e001      	b.n	800dab2 <prvIsQueueFull+0x22>
 800daae:	2300      	movs	r3, #0
 800dab0:	60fb      	str	r3, [r7, #12]
 800dab2:	f001 fa13 	bl	800eedc <vPortExitCritical>
 800dab6:	68fb      	ldr	r3, [r7, #12]
 800dab8:	4618      	mov	r0, r3
 800daba:	3710      	adds	r7, #16
 800dabc:	46bd      	mov	sp, r7
 800dabe:	bd80      	pop	{r7, pc}

0800dac0 <xTaskCreateStatic>:
 800dac0:	b580      	push	{r7, lr}
 800dac2:	b08e      	sub	sp, #56	; 0x38
 800dac4:	af04      	add	r7, sp, #16
 800dac6:	60f8      	str	r0, [r7, #12]
 800dac8:	60b9      	str	r1, [r7, #8]
 800daca:	607a      	str	r2, [r7, #4]
 800dacc:	603b      	str	r3, [r7, #0]
 800dace:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800dad0:	2b00      	cmp	r3, #0
 800dad2:	d10b      	bne.n	800daec <xTaskCreateStatic+0x2c>
 800dad4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dad8:	b672      	cpsid	i
 800dada:	f383 8811 	msr	BASEPRI, r3
 800dade:	f3bf 8f6f 	isb	sy
 800dae2:	f3bf 8f4f 	dsb	sy
 800dae6:	b662      	cpsie	i
 800dae8:	623b      	str	r3, [r7, #32]
 800daea:	e7fe      	b.n	800daea <xTaskCreateStatic+0x2a>
 800daec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800daee:	2b00      	cmp	r3, #0
 800daf0:	d10b      	bne.n	800db0a <xTaskCreateStatic+0x4a>
 800daf2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daf6:	b672      	cpsid	i
 800daf8:	f383 8811 	msr	BASEPRI, r3
 800dafc:	f3bf 8f6f 	isb	sy
 800db00:	f3bf 8f4f 	dsb	sy
 800db04:	b662      	cpsie	i
 800db06:	61fb      	str	r3, [r7, #28]
 800db08:	e7fe      	b.n	800db08 <xTaskCreateStatic+0x48>
 800db0a:	2358      	movs	r3, #88	; 0x58
 800db0c:	613b      	str	r3, [r7, #16]
 800db0e:	693b      	ldr	r3, [r7, #16]
 800db10:	2b58      	cmp	r3, #88	; 0x58
 800db12:	d00b      	beq.n	800db2c <xTaskCreateStatic+0x6c>
 800db14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db18:	b672      	cpsid	i
 800db1a:	f383 8811 	msr	BASEPRI, r3
 800db1e:	f3bf 8f6f 	isb	sy
 800db22:	f3bf 8f4f 	dsb	sy
 800db26:	b662      	cpsie	i
 800db28:	61bb      	str	r3, [r7, #24]
 800db2a:	e7fe      	b.n	800db2a <xTaskCreateStatic+0x6a>
 800db2c:	693b      	ldr	r3, [r7, #16]
 800db2e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800db30:	2b00      	cmp	r3, #0
 800db32:	d01e      	beq.n	800db72 <xTaskCreateStatic+0xb2>
 800db34:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800db36:	2b00      	cmp	r3, #0
 800db38:	d01b      	beq.n	800db72 <xTaskCreateStatic+0xb2>
 800db3a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800db3c:	627b      	str	r3, [r7, #36]	; 0x24
 800db3e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800db40:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800db42:	631a      	str	r2, [r3, #48]	; 0x30
 800db44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800db46:	2202      	movs	r2, #2
 800db48:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
 800db4c:	2300      	movs	r3, #0
 800db4e:	9303      	str	r3, [sp, #12]
 800db50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800db52:	9302      	str	r3, [sp, #8]
 800db54:	f107 0314 	add.w	r3, r7, #20
 800db58:	9301      	str	r3, [sp, #4]
 800db5a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800db5c:	9300      	str	r3, [sp, #0]
 800db5e:	683b      	ldr	r3, [r7, #0]
 800db60:	687a      	ldr	r2, [r7, #4]
 800db62:	68b9      	ldr	r1, [r7, #8]
 800db64:	68f8      	ldr	r0, [r7, #12]
 800db66:	f000 f850 	bl	800dc0a <prvInitialiseNewTask>
 800db6a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800db6c:	f000 f8e0 	bl	800dd30 <prvAddNewTaskToReadyList>
 800db70:	e001      	b.n	800db76 <xTaskCreateStatic+0xb6>
 800db72:	2300      	movs	r3, #0
 800db74:	617b      	str	r3, [r7, #20]
 800db76:	697b      	ldr	r3, [r7, #20]
 800db78:	4618      	mov	r0, r3
 800db7a:	3728      	adds	r7, #40	; 0x28
 800db7c:	46bd      	mov	sp, r7
 800db7e:	bd80      	pop	{r7, pc}

0800db80 <xTaskCreate>:
 800db80:	b580      	push	{r7, lr}
 800db82:	b08c      	sub	sp, #48	; 0x30
 800db84:	af04      	add	r7, sp, #16
 800db86:	60f8      	str	r0, [r7, #12]
 800db88:	60b9      	str	r1, [r7, #8]
 800db8a:	603b      	str	r3, [r7, #0]
 800db8c:	4613      	mov	r3, r2
 800db8e:	80fb      	strh	r3, [r7, #6]
 800db90:	88fb      	ldrh	r3, [r7, #6]
 800db92:	009b      	lsls	r3, r3, #2
 800db94:	4618      	mov	r0, r3
 800db96:	f001 fa4f 	bl	800f038 <pvPortMalloc>
 800db9a:	6178      	str	r0, [r7, #20]
 800db9c:	697b      	ldr	r3, [r7, #20]
 800db9e:	2b00      	cmp	r3, #0
 800dba0:	d00e      	beq.n	800dbc0 <xTaskCreate+0x40>
 800dba2:	2058      	movs	r0, #88	; 0x58
 800dba4:	f001 fa48 	bl	800f038 <pvPortMalloc>
 800dba8:	61f8      	str	r0, [r7, #28]
 800dbaa:	69fb      	ldr	r3, [r7, #28]
 800dbac:	2b00      	cmp	r3, #0
 800dbae:	d003      	beq.n	800dbb8 <xTaskCreate+0x38>
 800dbb0:	69fb      	ldr	r3, [r7, #28]
 800dbb2:	697a      	ldr	r2, [r7, #20]
 800dbb4:	631a      	str	r2, [r3, #48]	; 0x30
 800dbb6:	e005      	b.n	800dbc4 <xTaskCreate+0x44>
 800dbb8:	6978      	ldr	r0, [r7, #20]
 800dbba:	f001 fb09 	bl	800f1d0 <vPortFree>
 800dbbe:	e001      	b.n	800dbc4 <xTaskCreate+0x44>
 800dbc0:	2300      	movs	r3, #0
 800dbc2:	61fb      	str	r3, [r7, #28]
 800dbc4:	69fb      	ldr	r3, [r7, #28]
 800dbc6:	2b00      	cmp	r3, #0
 800dbc8:	d017      	beq.n	800dbfa <xTaskCreate+0x7a>
 800dbca:	69fb      	ldr	r3, [r7, #28]
 800dbcc:	2200      	movs	r2, #0
 800dbce:	f883 2055 	strb.w	r2, [r3, #85]	; 0x55
 800dbd2:	88fa      	ldrh	r2, [r7, #6]
 800dbd4:	2300      	movs	r3, #0
 800dbd6:	9303      	str	r3, [sp, #12]
 800dbd8:	69fb      	ldr	r3, [r7, #28]
 800dbda:	9302      	str	r3, [sp, #8]
 800dbdc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800dbde:	9301      	str	r3, [sp, #4]
 800dbe0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dbe2:	9300      	str	r3, [sp, #0]
 800dbe4:	683b      	ldr	r3, [r7, #0]
 800dbe6:	68b9      	ldr	r1, [r7, #8]
 800dbe8:	68f8      	ldr	r0, [r7, #12]
 800dbea:	f000 f80e 	bl	800dc0a <prvInitialiseNewTask>
 800dbee:	69f8      	ldr	r0, [r7, #28]
 800dbf0:	f000 f89e 	bl	800dd30 <prvAddNewTaskToReadyList>
 800dbf4:	2301      	movs	r3, #1
 800dbf6:	61bb      	str	r3, [r7, #24]
 800dbf8:	e002      	b.n	800dc00 <xTaskCreate+0x80>
 800dbfa:	f04f 33ff 	mov.w	r3, #4294967295
 800dbfe:	61bb      	str	r3, [r7, #24]
 800dc00:	69bb      	ldr	r3, [r7, #24]
 800dc02:	4618      	mov	r0, r3
 800dc04:	3720      	adds	r7, #32
 800dc06:	46bd      	mov	sp, r7
 800dc08:	bd80      	pop	{r7, pc}

0800dc0a <prvInitialiseNewTask>:
 800dc0a:	b580      	push	{r7, lr}
 800dc0c:	b088      	sub	sp, #32
 800dc0e:	af00      	add	r7, sp, #0
 800dc10:	60f8      	str	r0, [r7, #12]
 800dc12:	60b9      	str	r1, [r7, #8]
 800dc14:	607a      	str	r2, [r7, #4]
 800dc16:	603b      	str	r3, [r7, #0]
 800dc18:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dc1a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800dc1c:	687b      	ldr	r3, [r7, #4]
 800dc1e:	009b      	lsls	r3, r3, #2
 800dc20:	461a      	mov	r2, r3
 800dc22:	21a5      	movs	r1, #165	; 0xa5
 800dc24:	f001 fc21 	bl	800f46a <memset>
 800dc28:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dc2a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800dc2c:	6879      	ldr	r1, [r7, #4]
 800dc2e:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
 800dc32:	440b      	add	r3, r1
 800dc34:	009b      	lsls	r3, r3, #2
 800dc36:	4413      	add	r3, r2
 800dc38:	61bb      	str	r3, [r7, #24]
 800dc3a:	69bb      	ldr	r3, [r7, #24]
 800dc3c:	f023 0307 	bic.w	r3, r3, #7
 800dc40:	61bb      	str	r3, [r7, #24]
 800dc42:	69bb      	ldr	r3, [r7, #24]
 800dc44:	f003 0307 	and.w	r3, r3, #7
 800dc48:	2b00      	cmp	r3, #0
 800dc4a:	d00b      	beq.n	800dc64 <prvInitialiseNewTask+0x5a>
 800dc4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc50:	b672      	cpsid	i
 800dc52:	f383 8811 	msr	BASEPRI, r3
 800dc56:	f3bf 8f6f 	isb	sy
 800dc5a:	f3bf 8f4f 	dsb	sy
 800dc5e:	b662      	cpsie	i
 800dc60:	617b      	str	r3, [r7, #20]
 800dc62:	e7fe      	b.n	800dc62 <prvInitialiseNewTask+0x58>
 800dc64:	68bb      	ldr	r3, [r7, #8]
 800dc66:	2b00      	cmp	r3, #0
 800dc68:	d01f      	beq.n	800dcaa <prvInitialiseNewTask+0xa0>
 800dc6a:	2300      	movs	r3, #0
 800dc6c:	61fb      	str	r3, [r7, #28]
 800dc6e:	e012      	b.n	800dc96 <prvInitialiseNewTask+0x8c>
 800dc70:	68ba      	ldr	r2, [r7, #8]
 800dc72:	69fb      	ldr	r3, [r7, #28]
 800dc74:	4413      	add	r3, r2
 800dc76:	7819      	ldrb	r1, [r3, #0]
 800dc78:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800dc7a:	69fb      	ldr	r3, [r7, #28]
 800dc7c:	4413      	add	r3, r2
 800dc7e:	3334      	adds	r3, #52	; 0x34
 800dc80:	460a      	mov	r2, r1
 800dc82:	701a      	strb	r2, [r3, #0]
 800dc84:	68ba      	ldr	r2, [r7, #8]
 800dc86:	69fb      	ldr	r3, [r7, #28]
 800dc88:	4413      	add	r3, r2
 800dc8a:	781b      	ldrb	r3, [r3, #0]
 800dc8c:	2b00      	cmp	r3, #0
 800dc8e:	d006      	beq.n	800dc9e <prvInitialiseNewTask+0x94>
 800dc90:	69fb      	ldr	r3, [r7, #28]
 800dc92:	3301      	adds	r3, #1
 800dc94:	61fb      	str	r3, [r7, #28]
 800dc96:	69fb      	ldr	r3, [r7, #28]
 800dc98:	2b0f      	cmp	r3, #15
 800dc9a:	d9e9      	bls.n	800dc70 <prvInitialiseNewTask+0x66>
 800dc9c:	e000      	b.n	800dca0 <prvInitialiseNewTask+0x96>
 800dc9e:	bf00      	nop
 800dca0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dca2:	2200      	movs	r2, #0
 800dca4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800dca8:	e003      	b.n	800dcb2 <prvInitialiseNewTask+0xa8>
 800dcaa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcac:	2200      	movs	r2, #0
 800dcae:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800dcb2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dcb4:	2b06      	cmp	r3, #6
 800dcb6:	d901      	bls.n	800dcbc <prvInitialiseNewTask+0xb2>
 800dcb8:	2306      	movs	r3, #6
 800dcba:	62bb      	str	r3, [r7, #40]	; 0x28
 800dcbc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcbe:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800dcc0:	62da      	str	r2, [r3, #44]	; 0x2c
 800dcc2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcc4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800dcc6:	645a      	str	r2, [r3, #68]	; 0x44
 800dcc8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcca:	2200      	movs	r2, #0
 800dccc:	649a      	str	r2, [r3, #72]	; 0x48
 800dcce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcd0:	3304      	adds	r3, #4
 800dcd2:	4618      	mov	r0, r3
 800dcd4:	f7ff f9b7 	bl	800d046 <vListInitialiseItem>
 800dcd8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcda:	3318      	adds	r3, #24
 800dcdc:	4618      	mov	r0, r3
 800dcde:	f7ff f9b2 	bl	800d046 <vListInitialiseItem>
 800dce2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dce4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800dce6:	611a      	str	r2, [r3, #16]
 800dce8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dcea:	f1c3 0207 	rsb	r2, r3, #7
 800dcee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcf0:	619a      	str	r2, [r3, #24]
 800dcf2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcf4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800dcf6:	625a      	str	r2, [r3, #36]	; 0x24
 800dcf8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dcfa:	2200      	movs	r2, #0
 800dcfc:	64da      	str	r2, [r3, #76]	; 0x4c
 800dcfe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd00:	2200      	movs	r2, #0
 800dd02:	651a      	str	r2, [r3, #80]	; 0x50
 800dd04:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd06:	2200      	movs	r2, #0
 800dd08:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
 800dd0c:	683a      	ldr	r2, [r7, #0]
 800dd0e:	68f9      	ldr	r1, [r7, #12]
 800dd10:	69b8      	ldr	r0, [r7, #24]
 800dd12:	f000 ffa9 	bl	800ec68 <pxPortInitialiseStack>
 800dd16:	4602      	mov	r2, r0
 800dd18:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800dd1a:	601a      	str	r2, [r3, #0]
 800dd1c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800dd1e:	2b00      	cmp	r3, #0
 800dd20:	d002      	beq.n	800dd28 <prvInitialiseNewTask+0x11e>
 800dd22:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800dd24:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800dd26:	601a      	str	r2, [r3, #0]
 800dd28:	bf00      	nop
 800dd2a:	3720      	adds	r7, #32
 800dd2c:	46bd      	mov	sp, r7
 800dd2e:	bd80      	pop	{r7, pc}

0800dd30 <prvAddNewTaskToReadyList>:
 800dd30:	b580      	push	{r7, lr}
 800dd32:	b082      	sub	sp, #8
 800dd34:	af00      	add	r7, sp, #0
 800dd36:	6078      	str	r0, [r7, #4]
 800dd38:	f001 f89e 	bl	800ee78 <vPortEnterCritical>
 800dd3c:	4b2a      	ldr	r3, [pc, #168]	; (800dde8 <prvAddNewTaskToReadyList+0xb8>)
 800dd3e:	681b      	ldr	r3, [r3, #0]
 800dd40:	3301      	adds	r3, #1
 800dd42:	4a29      	ldr	r2, [pc, #164]	; (800dde8 <prvAddNewTaskToReadyList+0xb8>)
 800dd44:	6013      	str	r3, [r2, #0]
 800dd46:	4b29      	ldr	r3, [pc, #164]	; (800ddec <prvAddNewTaskToReadyList+0xbc>)
 800dd48:	681b      	ldr	r3, [r3, #0]
 800dd4a:	2b00      	cmp	r3, #0
 800dd4c:	d109      	bne.n	800dd62 <prvAddNewTaskToReadyList+0x32>
 800dd4e:	4a27      	ldr	r2, [pc, #156]	; (800ddec <prvAddNewTaskToReadyList+0xbc>)
 800dd50:	687b      	ldr	r3, [r7, #4]
 800dd52:	6013      	str	r3, [r2, #0]
 800dd54:	4b24      	ldr	r3, [pc, #144]	; (800dde8 <prvAddNewTaskToReadyList+0xb8>)
 800dd56:	681b      	ldr	r3, [r3, #0]
 800dd58:	2b01      	cmp	r3, #1
 800dd5a:	d110      	bne.n	800dd7e <prvAddNewTaskToReadyList+0x4e>
 800dd5c:	f000 fc8c 	bl	800e678 <prvInitialiseTaskLists>
 800dd60:	e00d      	b.n	800dd7e <prvAddNewTaskToReadyList+0x4e>
 800dd62:	4b23      	ldr	r3, [pc, #140]	; (800ddf0 <prvAddNewTaskToReadyList+0xc0>)
 800dd64:	681b      	ldr	r3, [r3, #0]
 800dd66:	2b00      	cmp	r3, #0
 800dd68:	d109      	bne.n	800dd7e <prvAddNewTaskToReadyList+0x4e>
 800dd6a:	4b20      	ldr	r3, [pc, #128]	; (800ddec <prvAddNewTaskToReadyList+0xbc>)
 800dd6c:	681b      	ldr	r3, [r3, #0]
 800dd6e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800dd70:	687b      	ldr	r3, [r7, #4]
 800dd72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd74:	429a      	cmp	r2, r3
 800dd76:	d802      	bhi.n	800dd7e <prvAddNewTaskToReadyList+0x4e>
 800dd78:	4a1c      	ldr	r2, [pc, #112]	; (800ddec <prvAddNewTaskToReadyList+0xbc>)
 800dd7a:	687b      	ldr	r3, [r7, #4]
 800dd7c:	6013      	str	r3, [r2, #0]
 800dd7e:	4b1d      	ldr	r3, [pc, #116]	; (800ddf4 <prvAddNewTaskToReadyList+0xc4>)
 800dd80:	681b      	ldr	r3, [r3, #0]
 800dd82:	3301      	adds	r3, #1
 800dd84:	4a1b      	ldr	r2, [pc, #108]	; (800ddf4 <prvAddNewTaskToReadyList+0xc4>)
 800dd86:	6013      	str	r3, [r2, #0]
 800dd88:	687b      	ldr	r3, [r7, #4]
 800dd8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd8c:	2201      	movs	r2, #1
 800dd8e:	409a      	lsls	r2, r3
 800dd90:	4b19      	ldr	r3, [pc, #100]	; (800ddf8 <prvAddNewTaskToReadyList+0xc8>)
 800dd92:	681b      	ldr	r3, [r3, #0]
 800dd94:	4313      	orrs	r3, r2
 800dd96:	4a18      	ldr	r2, [pc, #96]	; (800ddf8 <prvAddNewTaskToReadyList+0xc8>)
 800dd98:	6013      	str	r3, [r2, #0]
 800dd9a:	687b      	ldr	r3, [r7, #4]
 800dd9c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800dd9e:	4613      	mov	r3, r2
 800dda0:	009b      	lsls	r3, r3, #2
 800dda2:	4413      	add	r3, r2
 800dda4:	009b      	lsls	r3, r3, #2
 800dda6:	4a15      	ldr	r2, [pc, #84]	; (800ddfc <prvAddNewTaskToReadyList+0xcc>)
 800dda8:	441a      	add	r2, r3
 800ddaa:	687b      	ldr	r3, [r7, #4]
 800ddac:	3304      	adds	r3, #4
 800ddae:	4619      	mov	r1, r3
 800ddb0:	4610      	mov	r0, r2
 800ddb2:	f7ff f955 	bl	800d060 <vListInsertEnd>
 800ddb6:	f001 f891 	bl	800eedc <vPortExitCritical>
 800ddba:	4b0d      	ldr	r3, [pc, #52]	; (800ddf0 <prvAddNewTaskToReadyList+0xc0>)
 800ddbc:	681b      	ldr	r3, [r3, #0]
 800ddbe:	2b00      	cmp	r3, #0
 800ddc0:	d00e      	beq.n	800dde0 <prvAddNewTaskToReadyList+0xb0>
 800ddc2:	4b0a      	ldr	r3, [pc, #40]	; (800ddec <prvAddNewTaskToReadyList+0xbc>)
 800ddc4:	681b      	ldr	r3, [r3, #0]
 800ddc6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ddc8:	687b      	ldr	r3, [r7, #4]
 800ddca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ddcc:	429a      	cmp	r2, r3
 800ddce:	d207      	bcs.n	800dde0 <prvAddNewTaskToReadyList+0xb0>
 800ddd0:	4b0b      	ldr	r3, [pc, #44]	; (800de00 <prvAddNewTaskToReadyList+0xd0>)
 800ddd2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ddd6:	601a      	str	r2, [r3, #0]
 800ddd8:	f3bf 8f4f 	dsb	sy
 800dddc:	f3bf 8f6f 	isb	sy
 800dde0:	bf00      	nop
 800dde2:	3708      	adds	r7, #8
 800dde4:	46bd      	mov	sp, r7
 800dde6:	bd80      	pop	{r7, pc}
 800dde8:	20001a1c 	.word	0x20001a1c
 800ddec:	2000191c 	.word	0x2000191c
 800ddf0:	20001a28 	.word	0x20001a28
 800ddf4:	20001a38 	.word	0x20001a38
 800ddf8:	20001a24 	.word	0x20001a24
 800ddfc:	20001920 	.word	0x20001920
 800de00:	e000ed04 	.word	0xe000ed04

0800de04 <vTaskDelayUntil>:
 800de04:	b580      	push	{r7, lr}
 800de06:	b08a      	sub	sp, #40	; 0x28
 800de08:	af00      	add	r7, sp, #0
 800de0a:	6078      	str	r0, [r7, #4]
 800de0c:	6039      	str	r1, [r7, #0]
 800de0e:	2300      	movs	r3, #0
 800de10:	627b      	str	r3, [r7, #36]	; 0x24
 800de12:	687b      	ldr	r3, [r7, #4]
 800de14:	2b00      	cmp	r3, #0
 800de16:	d10b      	bne.n	800de30 <vTaskDelayUntil+0x2c>
 800de18:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de1c:	b672      	cpsid	i
 800de1e:	f383 8811 	msr	BASEPRI, r3
 800de22:	f3bf 8f6f 	isb	sy
 800de26:	f3bf 8f4f 	dsb	sy
 800de2a:	b662      	cpsie	i
 800de2c:	617b      	str	r3, [r7, #20]
 800de2e:	e7fe      	b.n	800de2e <vTaskDelayUntil+0x2a>
 800de30:	683b      	ldr	r3, [r7, #0]
 800de32:	2b00      	cmp	r3, #0
 800de34:	d10b      	bne.n	800de4e <vTaskDelayUntil+0x4a>
 800de36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de3a:	b672      	cpsid	i
 800de3c:	f383 8811 	msr	BASEPRI, r3
 800de40:	f3bf 8f6f 	isb	sy
 800de44:	f3bf 8f4f 	dsb	sy
 800de48:	b662      	cpsie	i
 800de4a:	613b      	str	r3, [r7, #16]
 800de4c:	e7fe      	b.n	800de4c <vTaskDelayUntil+0x48>
 800de4e:	4b2a      	ldr	r3, [pc, #168]	; (800def8 <vTaskDelayUntil+0xf4>)
 800de50:	681b      	ldr	r3, [r3, #0]
 800de52:	2b00      	cmp	r3, #0
 800de54:	d00b      	beq.n	800de6e <vTaskDelayUntil+0x6a>
 800de56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de5a:	b672      	cpsid	i
 800de5c:	f383 8811 	msr	BASEPRI, r3
 800de60:	f3bf 8f6f 	isb	sy
 800de64:	f3bf 8f4f 	dsb	sy
 800de68:	b662      	cpsie	i
 800de6a:	60fb      	str	r3, [r7, #12]
 800de6c:	e7fe      	b.n	800de6c <vTaskDelayUntil+0x68>
 800de6e:	f000 f8e1 	bl	800e034 <vTaskSuspendAll>
 800de72:	4b22      	ldr	r3, [pc, #136]	; (800defc <vTaskDelayUntil+0xf8>)
 800de74:	681b      	ldr	r3, [r3, #0]
 800de76:	623b      	str	r3, [r7, #32]
 800de78:	687b      	ldr	r3, [r7, #4]
 800de7a:	681b      	ldr	r3, [r3, #0]
 800de7c:	683a      	ldr	r2, [r7, #0]
 800de7e:	4413      	add	r3, r2
 800de80:	61fb      	str	r3, [r7, #28]
 800de82:	687b      	ldr	r3, [r7, #4]
 800de84:	681b      	ldr	r3, [r3, #0]
 800de86:	6a3a      	ldr	r2, [r7, #32]
 800de88:	429a      	cmp	r2, r3
 800de8a:	d20b      	bcs.n	800dea4 <vTaskDelayUntil+0xa0>
 800de8c:	687b      	ldr	r3, [r7, #4]
 800de8e:	681b      	ldr	r3, [r3, #0]
 800de90:	69fa      	ldr	r2, [r7, #28]
 800de92:	429a      	cmp	r2, r3
 800de94:	d211      	bcs.n	800deba <vTaskDelayUntil+0xb6>
 800de96:	69fa      	ldr	r2, [r7, #28]
 800de98:	6a3b      	ldr	r3, [r7, #32]
 800de9a:	429a      	cmp	r2, r3
 800de9c:	d90d      	bls.n	800deba <vTaskDelayUntil+0xb6>
 800de9e:	2301      	movs	r3, #1
 800dea0:	627b      	str	r3, [r7, #36]	; 0x24
 800dea2:	e00a      	b.n	800deba <vTaskDelayUntil+0xb6>
 800dea4:	687b      	ldr	r3, [r7, #4]
 800dea6:	681b      	ldr	r3, [r3, #0]
 800dea8:	69fa      	ldr	r2, [r7, #28]
 800deaa:	429a      	cmp	r2, r3
 800deac:	d303      	bcc.n	800deb6 <vTaskDelayUntil+0xb2>
 800deae:	69fa      	ldr	r2, [r7, #28]
 800deb0:	6a3b      	ldr	r3, [r7, #32]
 800deb2:	429a      	cmp	r2, r3
 800deb4:	d901      	bls.n	800deba <vTaskDelayUntil+0xb6>
 800deb6:	2301      	movs	r3, #1
 800deb8:	627b      	str	r3, [r7, #36]	; 0x24
 800deba:	687b      	ldr	r3, [r7, #4]
 800debc:	69fa      	ldr	r2, [r7, #28]
 800debe:	601a      	str	r2, [r3, #0]
 800dec0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dec2:	2b00      	cmp	r3, #0
 800dec4:	d006      	beq.n	800ded4 <vTaskDelayUntil+0xd0>
 800dec6:	69fa      	ldr	r2, [r7, #28]
 800dec8:	6a3b      	ldr	r3, [r7, #32]
 800deca:	1ad3      	subs	r3, r2, r3
 800decc:	2100      	movs	r1, #0
 800dece:	4618      	mov	r0, r3
 800ded0:	f000 fe64 	bl	800eb9c <prvAddCurrentTaskToDelayedList>
 800ded4:	f000 f8bc 	bl	800e050 <xTaskResumeAll>
 800ded8:	61b8      	str	r0, [r7, #24]
 800deda:	69bb      	ldr	r3, [r7, #24]
 800dedc:	2b00      	cmp	r3, #0
 800dede:	d107      	bne.n	800def0 <vTaskDelayUntil+0xec>
 800dee0:	4b07      	ldr	r3, [pc, #28]	; (800df00 <vTaskDelayUntil+0xfc>)
 800dee2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dee6:	601a      	str	r2, [r3, #0]
 800dee8:	f3bf 8f4f 	dsb	sy
 800deec:	f3bf 8f6f 	isb	sy
 800def0:	bf00      	nop
 800def2:	3728      	adds	r7, #40	; 0x28
 800def4:	46bd      	mov	sp, r7
 800def6:	bd80      	pop	{r7, pc}
 800def8:	20001a44 	.word	0x20001a44
 800defc:	20001a20 	.word	0x20001a20
 800df00:	e000ed04 	.word	0xe000ed04

0800df04 <vTaskDelay>:
 800df04:	b580      	push	{r7, lr}
 800df06:	b084      	sub	sp, #16
 800df08:	af00      	add	r7, sp, #0
 800df0a:	6078      	str	r0, [r7, #4]
 800df0c:	2300      	movs	r3, #0
 800df0e:	60fb      	str	r3, [r7, #12]
 800df10:	687b      	ldr	r3, [r7, #4]
 800df12:	2b00      	cmp	r3, #0
 800df14:	d018      	beq.n	800df48 <vTaskDelay+0x44>
 800df16:	4b14      	ldr	r3, [pc, #80]	; (800df68 <vTaskDelay+0x64>)
 800df18:	681b      	ldr	r3, [r3, #0]
 800df1a:	2b00      	cmp	r3, #0
 800df1c:	d00b      	beq.n	800df36 <vTaskDelay+0x32>
 800df1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df22:	b672      	cpsid	i
 800df24:	f383 8811 	msr	BASEPRI, r3
 800df28:	f3bf 8f6f 	isb	sy
 800df2c:	f3bf 8f4f 	dsb	sy
 800df30:	b662      	cpsie	i
 800df32:	60bb      	str	r3, [r7, #8]
 800df34:	e7fe      	b.n	800df34 <vTaskDelay+0x30>
 800df36:	f000 f87d 	bl	800e034 <vTaskSuspendAll>
 800df3a:	2100      	movs	r1, #0
 800df3c:	6878      	ldr	r0, [r7, #4]
 800df3e:	f000 fe2d 	bl	800eb9c <prvAddCurrentTaskToDelayedList>
 800df42:	f000 f885 	bl	800e050 <xTaskResumeAll>
 800df46:	60f8      	str	r0, [r7, #12]
 800df48:	68fb      	ldr	r3, [r7, #12]
 800df4a:	2b00      	cmp	r3, #0
 800df4c:	d107      	bne.n	800df5e <vTaskDelay+0x5a>
 800df4e:	4b07      	ldr	r3, [pc, #28]	; (800df6c <vTaskDelay+0x68>)
 800df50:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df54:	601a      	str	r2, [r3, #0]
 800df56:	f3bf 8f4f 	dsb	sy
 800df5a:	f3bf 8f6f 	isb	sy
 800df5e:	bf00      	nop
 800df60:	3710      	adds	r7, #16
 800df62:	46bd      	mov	sp, r7
 800df64:	bd80      	pop	{r7, pc}
 800df66:	bf00      	nop
 800df68:	20001a44 	.word	0x20001a44
 800df6c:	e000ed04 	.word	0xe000ed04

0800df70 <vTaskStartScheduler>:
 800df70:	b580      	push	{r7, lr}
 800df72:	b08a      	sub	sp, #40	; 0x28
 800df74:	af04      	add	r7, sp, #16
 800df76:	2300      	movs	r3, #0
 800df78:	60bb      	str	r3, [r7, #8]
 800df7a:	2300      	movs	r3, #0
 800df7c:	607b      	str	r3, [r7, #4]
 800df7e:	463a      	mov	r2, r7
 800df80:	1d39      	adds	r1, r7, #4
 800df82:	f107 0308 	add.w	r3, r7, #8
 800df86:	4618      	mov	r0, r3
 800df88:	f7f2 fb2c 	bl	80005e4 <vApplicationGetIdleTaskMemory>
 800df8c:	6839      	ldr	r1, [r7, #0]
 800df8e:	687b      	ldr	r3, [r7, #4]
 800df90:	68ba      	ldr	r2, [r7, #8]
 800df92:	9202      	str	r2, [sp, #8]
 800df94:	9301      	str	r3, [sp, #4]
 800df96:	2300      	movs	r3, #0
 800df98:	9300      	str	r3, [sp, #0]
 800df9a:	2300      	movs	r3, #0
 800df9c:	460a      	mov	r2, r1
 800df9e:	491f      	ldr	r1, [pc, #124]	; (800e01c <vTaskStartScheduler+0xac>)
 800dfa0:	481f      	ldr	r0, [pc, #124]	; (800e020 <vTaskStartScheduler+0xb0>)
 800dfa2:	f7ff fd8d 	bl	800dac0 <xTaskCreateStatic>
 800dfa6:	4602      	mov	r2, r0
 800dfa8:	4b1e      	ldr	r3, [pc, #120]	; (800e024 <vTaskStartScheduler+0xb4>)
 800dfaa:	601a      	str	r2, [r3, #0]
 800dfac:	4b1d      	ldr	r3, [pc, #116]	; (800e024 <vTaskStartScheduler+0xb4>)
 800dfae:	681b      	ldr	r3, [r3, #0]
 800dfb0:	2b00      	cmp	r3, #0
 800dfb2:	d002      	beq.n	800dfba <vTaskStartScheduler+0x4a>
 800dfb4:	2301      	movs	r3, #1
 800dfb6:	617b      	str	r3, [r7, #20]
 800dfb8:	e001      	b.n	800dfbe <vTaskStartScheduler+0x4e>
 800dfba:	2300      	movs	r3, #0
 800dfbc:	617b      	str	r3, [r7, #20]
 800dfbe:	697b      	ldr	r3, [r7, #20]
 800dfc0:	2b01      	cmp	r3, #1
 800dfc2:	d117      	bne.n	800dff4 <vTaskStartScheduler+0x84>
 800dfc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfc8:	b672      	cpsid	i
 800dfca:	f383 8811 	msr	BASEPRI, r3
 800dfce:	f3bf 8f6f 	isb	sy
 800dfd2:	f3bf 8f4f 	dsb	sy
 800dfd6:	b662      	cpsie	i
 800dfd8:	613b      	str	r3, [r7, #16]
 800dfda:	4b13      	ldr	r3, [pc, #76]	; (800e028 <vTaskStartScheduler+0xb8>)
 800dfdc:	f04f 32ff 	mov.w	r2, #4294967295
 800dfe0:	601a      	str	r2, [r3, #0]
 800dfe2:	4b12      	ldr	r3, [pc, #72]	; (800e02c <vTaskStartScheduler+0xbc>)
 800dfe4:	2201      	movs	r2, #1
 800dfe6:	601a      	str	r2, [r3, #0]
 800dfe8:	4b11      	ldr	r3, [pc, #68]	; (800e030 <vTaskStartScheduler+0xc0>)
 800dfea:	2200      	movs	r2, #0
 800dfec:	601a      	str	r2, [r3, #0]
 800dfee:	f000 fec7 	bl	800ed80 <xPortStartScheduler>
 800dff2:	e00f      	b.n	800e014 <vTaskStartScheduler+0xa4>
 800dff4:	697b      	ldr	r3, [r7, #20]
 800dff6:	f1b3 3fff 	cmp.w	r3, #4294967295
 800dffa:	d10b      	bne.n	800e014 <vTaskStartScheduler+0xa4>
 800dffc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e000:	b672      	cpsid	i
 800e002:	f383 8811 	msr	BASEPRI, r3
 800e006:	f3bf 8f6f 	isb	sy
 800e00a:	f3bf 8f4f 	dsb	sy
 800e00e:	b662      	cpsie	i
 800e010:	60fb      	str	r3, [r7, #12]
 800e012:	e7fe      	b.n	800e012 <vTaskStartScheduler+0xa2>
 800e014:	bf00      	nop
 800e016:	3718      	adds	r7, #24
 800e018:	46bd      	mov	sp, r7
 800e01a:	bd80      	pop	{r7, pc}
 800e01c:	0800fe5c 	.word	0x0800fe5c
 800e020:	0800e645 	.word	0x0800e645
 800e024:	20001a40 	.word	0x20001a40
 800e028:	20001a3c 	.word	0x20001a3c
 800e02c:	20001a28 	.word	0x20001a28
 800e030:	20001a20 	.word	0x20001a20

0800e034 <vTaskSuspendAll>:
 800e034:	b480      	push	{r7}
 800e036:	af00      	add	r7, sp, #0
 800e038:	4b04      	ldr	r3, [pc, #16]	; (800e04c <vTaskSuspendAll+0x18>)
 800e03a:	681b      	ldr	r3, [r3, #0]
 800e03c:	3301      	adds	r3, #1
 800e03e:	4a03      	ldr	r2, [pc, #12]	; (800e04c <vTaskSuspendAll+0x18>)
 800e040:	6013      	str	r3, [r2, #0]
 800e042:	bf00      	nop
 800e044:	46bd      	mov	sp, r7
 800e046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e04a:	4770      	bx	lr
 800e04c:	20001a44 	.word	0x20001a44

0800e050 <xTaskResumeAll>:
 800e050:	b580      	push	{r7, lr}
 800e052:	b084      	sub	sp, #16
 800e054:	af00      	add	r7, sp, #0
 800e056:	2300      	movs	r3, #0
 800e058:	60fb      	str	r3, [r7, #12]
 800e05a:	2300      	movs	r3, #0
 800e05c:	60bb      	str	r3, [r7, #8]
 800e05e:	4b42      	ldr	r3, [pc, #264]	; (800e168 <xTaskResumeAll+0x118>)
 800e060:	681b      	ldr	r3, [r3, #0]
 800e062:	2b00      	cmp	r3, #0
 800e064:	d10b      	bne.n	800e07e <xTaskResumeAll+0x2e>
 800e066:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e06a:	b672      	cpsid	i
 800e06c:	f383 8811 	msr	BASEPRI, r3
 800e070:	f3bf 8f6f 	isb	sy
 800e074:	f3bf 8f4f 	dsb	sy
 800e078:	b662      	cpsie	i
 800e07a:	603b      	str	r3, [r7, #0]
 800e07c:	e7fe      	b.n	800e07c <xTaskResumeAll+0x2c>
 800e07e:	f000 fefb 	bl	800ee78 <vPortEnterCritical>
 800e082:	4b39      	ldr	r3, [pc, #228]	; (800e168 <xTaskResumeAll+0x118>)
 800e084:	681b      	ldr	r3, [r3, #0]
 800e086:	3b01      	subs	r3, #1
 800e088:	4a37      	ldr	r2, [pc, #220]	; (800e168 <xTaskResumeAll+0x118>)
 800e08a:	6013      	str	r3, [r2, #0]
 800e08c:	4b36      	ldr	r3, [pc, #216]	; (800e168 <xTaskResumeAll+0x118>)
 800e08e:	681b      	ldr	r3, [r3, #0]
 800e090:	2b00      	cmp	r3, #0
 800e092:	d161      	bne.n	800e158 <xTaskResumeAll+0x108>
 800e094:	4b35      	ldr	r3, [pc, #212]	; (800e16c <xTaskResumeAll+0x11c>)
 800e096:	681b      	ldr	r3, [r3, #0]
 800e098:	2b00      	cmp	r3, #0
 800e09a:	d05d      	beq.n	800e158 <xTaskResumeAll+0x108>
 800e09c:	e02e      	b.n	800e0fc <xTaskResumeAll+0xac>
 800e09e:	4b34      	ldr	r3, [pc, #208]	; (800e170 <xTaskResumeAll+0x120>)
 800e0a0:	68db      	ldr	r3, [r3, #12]
 800e0a2:	68db      	ldr	r3, [r3, #12]
 800e0a4:	60fb      	str	r3, [r7, #12]
 800e0a6:	68fb      	ldr	r3, [r7, #12]
 800e0a8:	3318      	adds	r3, #24
 800e0aa:	4618      	mov	r0, r3
 800e0ac:	f7ff f835 	bl	800d11a <uxListRemove>
 800e0b0:	68fb      	ldr	r3, [r7, #12]
 800e0b2:	3304      	adds	r3, #4
 800e0b4:	4618      	mov	r0, r3
 800e0b6:	f7ff f830 	bl	800d11a <uxListRemove>
 800e0ba:	68fb      	ldr	r3, [r7, #12]
 800e0bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e0be:	2201      	movs	r2, #1
 800e0c0:	409a      	lsls	r2, r3
 800e0c2:	4b2c      	ldr	r3, [pc, #176]	; (800e174 <xTaskResumeAll+0x124>)
 800e0c4:	681b      	ldr	r3, [r3, #0]
 800e0c6:	4313      	orrs	r3, r2
 800e0c8:	4a2a      	ldr	r2, [pc, #168]	; (800e174 <xTaskResumeAll+0x124>)
 800e0ca:	6013      	str	r3, [r2, #0]
 800e0cc:	68fb      	ldr	r3, [r7, #12]
 800e0ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e0d0:	4613      	mov	r3, r2
 800e0d2:	009b      	lsls	r3, r3, #2
 800e0d4:	4413      	add	r3, r2
 800e0d6:	009b      	lsls	r3, r3, #2
 800e0d8:	4a27      	ldr	r2, [pc, #156]	; (800e178 <xTaskResumeAll+0x128>)
 800e0da:	441a      	add	r2, r3
 800e0dc:	68fb      	ldr	r3, [r7, #12]
 800e0de:	3304      	adds	r3, #4
 800e0e0:	4619      	mov	r1, r3
 800e0e2:	4610      	mov	r0, r2
 800e0e4:	f7fe ffbc 	bl	800d060 <vListInsertEnd>
 800e0e8:	68fb      	ldr	r3, [r7, #12]
 800e0ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e0ec:	4b23      	ldr	r3, [pc, #140]	; (800e17c <xTaskResumeAll+0x12c>)
 800e0ee:	681b      	ldr	r3, [r3, #0]
 800e0f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e0f2:	429a      	cmp	r2, r3
 800e0f4:	d302      	bcc.n	800e0fc <xTaskResumeAll+0xac>
 800e0f6:	4b22      	ldr	r3, [pc, #136]	; (800e180 <xTaskResumeAll+0x130>)
 800e0f8:	2201      	movs	r2, #1
 800e0fa:	601a      	str	r2, [r3, #0]
 800e0fc:	4b1c      	ldr	r3, [pc, #112]	; (800e170 <xTaskResumeAll+0x120>)
 800e0fe:	681b      	ldr	r3, [r3, #0]
 800e100:	2b00      	cmp	r3, #0
 800e102:	d1cc      	bne.n	800e09e <xTaskResumeAll+0x4e>
 800e104:	68fb      	ldr	r3, [r7, #12]
 800e106:	2b00      	cmp	r3, #0
 800e108:	d001      	beq.n	800e10e <xTaskResumeAll+0xbe>
 800e10a:	f000 fb51 	bl	800e7b0 <prvResetNextTaskUnblockTime>
 800e10e:	4b1d      	ldr	r3, [pc, #116]	; (800e184 <xTaskResumeAll+0x134>)
 800e110:	681b      	ldr	r3, [r3, #0]
 800e112:	607b      	str	r3, [r7, #4]
 800e114:	687b      	ldr	r3, [r7, #4]
 800e116:	2b00      	cmp	r3, #0
 800e118:	d010      	beq.n	800e13c <xTaskResumeAll+0xec>
 800e11a:	f000 f847 	bl	800e1ac <xTaskIncrementTick>
 800e11e:	4603      	mov	r3, r0
 800e120:	2b00      	cmp	r3, #0
 800e122:	d002      	beq.n	800e12a <xTaskResumeAll+0xda>
 800e124:	4b16      	ldr	r3, [pc, #88]	; (800e180 <xTaskResumeAll+0x130>)
 800e126:	2201      	movs	r2, #1
 800e128:	601a      	str	r2, [r3, #0]
 800e12a:	687b      	ldr	r3, [r7, #4]
 800e12c:	3b01      	subs	r3, #1
 800e12e:	607b      	str	r3, [r7, #4]
 800e130:	687b      	ldr	r3, [r7, #4]
 800e132:	2b00      	cmp	r3, #0
 800e134:	d1f1      	bne.n	800e11a <xTaskResumeAll+0xca>
 800e136:	4b13      	ldr	r3, [pc, #76]	; (800e184 <xTaskResumeAll+0x134>)
 800e138:	2200      	movs	r2, #0
 800e13a:	601a      	str	r2, [r3, #0]
 800e13c:	4b10      	ldr	r3, [pc, #64]	; (800e180 <xTaskResumeAll+0x130>)
 800e13e:	681b      	ldr	r3, [r3, #0]
 800e140:	2b00      	cmp	r3, #0
 800e142:	d009      	beq.n	800e158 <xTaskResumeAll+0x108>
 800e144:	2301      	movs	r3, #1
 800e146:	60bb      	str	r3, [r7, #8]
 800e148:	4b0f      	ldr	r3, [pc, #60]	; (800e188 <xTaskResumeAll+0x138>)
 800e14a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e14e:	601a      	str	r2, [r3, #0]
 800e150:	f3bf 8f4f 	dsb	sy
 800e154:	f3bf 8f6f 	isb	sy
 800e158:	f000 fec0 	bl	800eedc <vPortExitCritical>
 800e15c:	68bb      	ldr	r3, [r7, #8]
 800e15e:	4618      	mov	r0, r3
 800e160:	3710      	adds	r7, #16
 800e162:	46bd      	mov	sp, r7
 800e164:	bd80      	pop	{r7, pc}
 800e166:	bf00      	nop
 800e168:	20001a44 	.word	0x20001a44
 800e16c:	20001a1c 	.word	0x20001a1c
 800e170:	200019dc 	.word	0x200019dc
 800e174:	20001a24 	.word	0x20001a24
 800e178:	20001920 	.word	0x20001920
 800e17c:	2000191c 	.word	0x2000191c
 800e180:	20001a30 	.word	0x20001a30
 800e184:	20001a2c 	.word	0x20001a2c
 800e188:	e000ed04 	.word	0xe000ed04

0800e18c <xTaskGetTickCount>:
 800e18c:	b480      	push	{r7}
 800e18e:	b083      	sub	sp, #12
 800e190:	af00      	add	r7, sp, #0
 800e192:	4b05      	ldr	r3, [pc, #20]	; (800e1a8 <xTaskGetTickCount+0x1c>)
 800e194:	681b      	ldr	r3, [r3, #0]
 800e196:	607b      	str	r3, [r7, #4]
 800e198:	687b      	ldr	r3, [r7, #4]
 800e19a:	4618      	mov	r0, r3
 800e19c:	370c      	adds	r7, #12
 800e19e:	46bd      	mov	sp, r7
 800e1a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1a4:	4770      	bx	lr
 800e1a6:	bf00      	nop
 800e1a8:	20001a20 	.word	0x20001a20

0800e1ac <xTaskIncrementTick>:
 800e1ac:	b580      	push	{r7, lr}
 800e1ae:	b086      	sub	sp, #24
 800e1b0:	af00      	add	r7, sp, #0
 800e1b2:	2300      	movs	r3, #0
 800e1b4:	617b      	str	r3, [r7, #20]
 800e1b6:	4b4f      	ldr	r3, [pc, #316]	; (800e2f4 <xTaskIncrementTick+0x148>)
 800e1b8:	681b      	ldr	r3, [r3, #0]
 800e1ba:	2b00      	cmp	r3, #0
 800e1bc:	f040 8089 	bne.w	800e2d2 <xTaskIncrementTick+0x126>
 800e1c0:	4b4d      	ldr	r3, [pc, #308]	; (800e2f8 <xTaskIncrementTick+0x14c>)
 800e1c2:	681b      	ldr	r3, [r3, #0]
 800e1c4:	3301      	adds	r3, #1
 800e1c6:	613b      	str	r3, [r7, #16]
 800e1c8:	4a4b      	ldr	r2, [pc, #300]	; (800e2f8 <xTaskIncrementTick+0x14c>)
 800e1ca:	693b      	ldr	r3, [r7, #16]
 800e1cc:	6013      	str	r3, [r2, #0]
 800e1ce:	693b      	ldr	r3, [r7, #16]
 800e1d0:	2b00      	cmp	r3, #0
 800e1d2:	d121      	bne.n	800e218 <xTaskIncrementTick+0x6c>
 800e1d4:	4b49      	ldr	r3, [pc, #292]	; (800e2fc <xTaskIncrementTick+0x150>)
 800e1d6:	681b      	ldr	r3, [r3, #0]
 800e1d8:	681b      	ldr	r3, [r3, #0]
 800e1da:	2b00      	cmp	r3, #0
 800e1dc:	d00b      	beq.n	800e1f6 <xTaskIncrementTick+0x4a>
 800e1de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1e2:	b672      	cpsid	i
 800e1e4:	f383 8811 	msr	BASEPRI, r3
 800e1e8:	f3bf 8f6f 	isb	sy
 800e1ec:	f3bf 8f4f 	dsb	sy
 800e1f0:	b662      	cpsie	i
 800e1f2:	603b      	str	r3, [r7, #0]
 800e1f4:	e7fe      	b.n	800e1f4 <xTaskIncrementTick+0x48>
 800e1f6:	4b41      	ldr	r3, [pc, #260]	; (800e2fc <xTaskIncrementTick+0x150>)
 800e1f8:	681b      	ldr	r3, [r3, #0]
 800e1fa:	60fb      	str	r3, [r7, #12]
 800e1fc:	4b40      	ldr	r3, [pc, #256]	; (800e300 <xTaskIncrementTick+0x154>)
 800e1fe:	681b      	ldr	r3, [r3, #0]
 800e200:	4a3e      	ldr	r2, [pc, #248]	; (800e2fc <xTaskIncrementTick+0x150>)
 800e202:	6013      	str	r3, [r2, #0]
 800e204:	4a3e      	ldr	r2, [pc, #248]	; (800e300 <xTaskIncrementTick+0x154>)
 800e206:	68fb      	ldr	r3, [r7, #12]
 800e208:	6013      	str	r3, [r2, #0]
 800e20a:	4b3e      	ldr	r3, [pc, #248]	; (800e304 <xTaskIncrementTick+0x158>)
 800e20c:	681b      	ldr	r3, [r3, #0]
 800e20e:	3301      	adds	r3, #1
 800e210:	4a3c      	ldr	r2, [pc, #240]	; (800e304 <xTaskIncrementTick+0x158>)
 800e212:	6013      	str	r3, [r2, #0]
 800e214:	f000 facc 	bl	800e7b0 <prvResetNextTaskUnblockTime>
 800e218:	4b3b      	ldr	r3, [pc, #236]	; (800e308 <xTaskIncrementTick+0x15c>)
 800e21a:	681b      	ldr	r3, [r3, #0]
 800e21c:	693a      	ldr	r2, [r7, #16]
 800e21e:	429a      	cmp	r2, r3
 800e220:	d348      	bcc.n	800e2b4 <xTaskIncrementTick+0x108>
 800e222:	4b36      	ldr	r3, [pc, #216]	; (800e2fc <xTaskIncrementTick+0x150>)
 800e224:	681b      	ldr	r3, [r3, #0]
 800e226:	681b      	ldr	r3, [r3, #0]
 800e228:	2b00      	cmp	r3, #0
 800e22a:	d104      	bne.n	800e236 <xTaskIncrementTick+0x8a>
 800e22c:	4b36      	ldr	r3, [pc, #216]	; (800e308 <xTaskIncrementTick+0x15c>)
 800e22e:	f04f 32ff 	mov.w	r2, #4294967295
 800e232:	601a      	str	r2, [r3, #0]
 800e234:	e03e      	b.n	800e2b4 <xTaskIncrementTick+0x108>
 800e236:	4b31      	ldr	r3, [pc, #196]	; (800e2fc <xTaskIncrementTick+0x150>)
 800e238:	681b      	ldr	r3, [r3, #0]
 800e23a:	68db      	ldr	r3, [r3, #12]
 800e23c:	68db      	ldr	r3, [r3, #12]
 800e23e:	60bb      	str	r3, [r7, #8]
 800e240:	68bb      	ldr	r3, [r7, #8]
 800e242:	685b      	ldr	r3, [r3, #4]
 800e244:	607b      	str	r3, [r7, #4]
 800e246:	693a      	ldr	r2, [r7, #16]
 800e248:	687b      	ldr	r3, [r7, #4]
 800e24a:	429a      	cmp	r2, r3
 800e24c:	d203      	bcs.n	800e256 <xTaskIncrementTick+0xaa>
 800e24e:	4a2e      	ldr	r2, [pc, #184]	; (800e308 <xTaskIncrementTick+0x15c>)
 800e250:	687b      	ldr	r3, [r7, #4]
 800e252:	6013      	str	r3, [r2, #0]
 800e254:	e02e      	b.n	800e2b4 <xTaskIncrementTick+0x108>
 800e256:	68bb      	ldr	r3, [r7, #8]
 800e258:	3304      	adds	r3, #4
 800e25a:	4618      	mov	r0, r3
 800e25c:	f7fe ff5d 	bl	800d11a <uxListRemove>
 800e260:	68bb      	ldr	r3, [r7, #8]
 800e262:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e264:	2b00      	cmp	r3, #0
 800e266:	d004      	beq.n	800e272 <xTaskIncrementTick+0xc6>
 800e268:	68bb      	ldr	r3, [r7, #8]
 800e26a:	3318      	adds	r3, #24
 800e26c:	4618      	mov	r0, r3
 800e26e:	f7fe ff54 	bl	800d11a <uxListRemove>
 800e272:	68bb      	ldr	r3, [r7, #8]
 800e274:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e276:	2201      	movs	r2, #1
 800e278:	409a      	lsls	r2, r3
 800e27a:	4b24      	ldr	r3, [pc, #144]	; (800e30c <xTaskIncrementTick+0x160>)
 800e27c:	681b      	ldr	r3, [r3, #0]
 800e27e:	4313      	orrs	r3, r2
 800e280:	4a22      	ldr	r2, [pc, #136]	; (800e30c <xTaskIncrementTick+0x160>)
 800e282:	6013      	str	r3, [r2, #0]
 800e284:	68bb      	ldr	r3, [r7, #8]
 800e286:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e288:	4613      	mov	r3, r2
 800e28a:	009b      	lsls	r3, r3, #2
 800e28c:	4413      	add	r3, r2
 800e28e:	009b      	lsls	r3, r3, #2
 800e290:	4a1f      	ldr	r2, [pc, #124]	; (800e310 <xTaskIncrementTick+0x164>)
 800e292:	441a      	add	r2, r3
 800e294:	68bb      	ldr	r3, [r7, #8]
 800e296:	3304      	adds	r3, #4
 800e298:	4619      	mov	r1, r3
 800e29a:	4610      	mov	r0, r2
 800e29c:	f7fe fee0 	bl	800d060 <vListInsertEnd>
 800e2a0:	68bb      	ldr	r3, [r7, #8]
 800e2a2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e2a4:	4b1b      	ldr	r3, [pc, #108]	; (800e314 <xTaskIncrementTick+0x168>)
 800e2a6:	681b      	ldr	r3, [r3, #0]
 800e2a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e2aa:	429a      	cmp	r2, r3
 800e2ac:	d3b9      	bcc.n	800e222 <xTaskIncrementTick+0x76>
 800e2ae:	2301      	movs	r3, #1
 800e2b0:	617b      	str	r3, [r7, #20]
 800e2b2:	e7b6      	b.n	800e222 <xTaskIncrementTick+0x76>
 800e2b4:	4b17      	ldr	r3, [pc, #92]	; (800e314 <xTaskIncrementTick+0x168>)
 800e2b6:	681b      	ldr	r3, [r3, #0]
 800e2b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e2ba:	4915      	ldr	r1, [pc, #84]	; (800e310 <xTaskIncrementTick+0x164>)
 800e2bc:	4613      	mov	r3, r2
 800e2be:	009b      	lsls	r3, r3, #2
 800e2c0:	4413      	add	r3, r2
 800e2c2:	009b      	lsls	r3, r3, #2
 800e2c4:	440b      	add	r3, r1
 800e2c6:	681b      	ldr	r3, [r3, #0]
 800e2c8:	2b01      	cmp	r3, #1
 800e2ca:	d907      	bls.n	800e2dc <xTaskIncrementTick+0x130>
 800e2cc:	2301      	movs	r3, #1
 800e2ce:	617b      	str	r3, [r7, #20]
 800e2d0:	e004      	b.n	800e2dc <xTaskIncrementTick+0x130>
 800e2d2:	4b11      	ldr	r3, [pc, #68]	; (800e318 <xTaskIncrementTick+0x16c>)
 800e2d4:	681b      	ldr	r3, [r3, #0]
 800e2d6:	3301      	adds	r3, #1
 800e2d8:	4a0f      	ldr	r2, [pc, #60]	; (800e318 <xTaskIncrementTick+0x16c>)
 800e2da:	6013      	str	r3, [r2, #0]
 800e2dc:	4b0f      	ldr	r3, [pc, #60]	; (800e31c <xTaskIncrementTick+0x170>)
 800e2de:	681b      	ldr	r3, [r3, #0]
 800e2e0:	2b00      	cmp	r3, #0
 800e2e2:	d001      	beq.n	800e2e8 <xTaskIncrementTick+0x13c>
 800e2e4:	2301      	movs	r3, #1
 800e2e6:	617b      	str	r3, [r7, #20]
 800e2e8:	697b      	ldr	r3, [r7, #20]
 800e2ea:	4618      	mov	r0, r3
 800e2ec:	3718      	adds	r7, #24
 800e2ee:	46bd      	mov	sp, r7
 800e2f0:	bd80      	pop	{r7, pc}
 800e2f2:	bf00      	nop
 800e2f4:	20001a44 	.word	0x20001a44
 800e2f8:	20001a20 	.word	0x20001a20
 800e2fc:	200019d4 	.word	0x200019d4
 800e300:	200019d8 	.word	0x200019d8
 800e304:	20001a34 	.word	0x20001a34
 800e308:	20001a3c 	.word	0x20001a3c
 800e30c:	20001a24 	.word	0x20001a24
 800e310:	20001920 	.word	0x20001920
 800e314:	2000191c 	.word	0x2000191c
 800e318:	20001a2c 	.word	0x20001a2c
 800e31c:	20001a30 	.word	0x20001a30

0800e320 <vTaskSwitchContext>:
 800e320:	b580      	push	{r7, lr}
 800e322:	b088      	sub	sp, #32
 800e324:	af00      	add	r7, sp, #0
 800e326:	4b3a      	ldr	r3, [pc, #232]	; (800e410 <vTaskSwitchContext+0xf0>)
 800e328:	681b      	ldr	r3, [r3, #0]
 800e32a:	2b00      	cmp	r3, #0
 800e32c:	d003      	beq.n	800e336 <vTaskSwitchContext+0x16>
 800e32e:	4b39      	ldr	r3, [pc, #228]	; (800e414 <vTaskSwitchContext+0xf4>)
 800e330:	2201      	movs	r2, #1
 800e332:	601a      	str	r2, [r3, #0]
 800e334:	e067      	b.n	800e406 <vTaskSwitchContext+0xe6>
 800e336:	4b37      	ldr	r3, [pc, #220]	; (800e414 <vTaskSwitchContext+0xf4>)
 800e338:	2200      	movs	r2, #0
 800e33a:	601a      	str	r2, [r3, #0]
 800e33c:	4b36      	ldr	r3, [pc, #216]	; (800e418 <vTaskSwitchContext+0xf8>)
 800e33e:	681b      	ldr	r3, [r3, #0]
 800e340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e342:	61fb      	str	r3, [r7, #28]
 800e344:	f04f 33a5 	mov.w	r3, #2779096485	; 0xa5a5a5a5
 800e348:	61bb      	str	r3, [r7, #24]
 800e34a:	69fb      	ldr	r3, [r7, #28]
 800e34c:	681b      	ldr	r3, [r3, #0]
 800e34e:	69ba      	ldr	r2, [r7, #24]
 800e350:	429a      	cmp	r2, r3
 800e352:	d111      	bne.n	800e378 <vTaskSwitchContext+0x58>
 800e354:	69fb      	ldr	r3, [r7, #28]
 800e356:	3304      	adds	r3, #4
 800e358:	681b      	ldr	r3, [r3, #0]
 800e35a:	69ba      	ldr	r2, [r7, #24]
 800e35c:	429a      	cmp	r2, r3
 800e35e:	d10b      	bne.n	800e378 <vTaskSwitchContext+0x58>
 800e360:	69fb      	ldr	r3, [r7, #28]
 800e362:	3308      	adds	r3, #8
 800e364:	681b      	ldr	r3, [r3, #0]
 800e366:	69ba      	ldr	r2, [r7, #24]
 800e368:	429a      	cmp	r2, r3
 800e36a:	d105      	bne.n	800e378 <vTaskSwitchContext+0x58>
 800e36c:	69fb      	ldr	r3, [r7, #28]
 800e36e:	330c      	adds	r3, #12
 800e370:	681b      	ldr	r3, [r3, #0]
 800e372:	69ba      	ldr	r2, [r7, #24]
 800e374:	429a      	cmp	r2, r3
 800e376:	d008      	beq.n	800e38a <vTaskSwitchContext+0x6a>
 800e378:	4b27      	ldr	r3, [pc, #156]	; (800e418 <vTaskSwitchContext+0xf8>)
 800e37a:	681a      	ldr	r2, [r3, #0]
 800e37c:	4b26      	ldr	r3, [pc, #152]	; (800e418 <vTaskSwitchContext+0xf8>)
 800e37e:	681b      	ldr	r3, [r3, #0]
 800e380:	3334      	adds	r3, #52	; 0x34
 800e382:	4619      	mov	r1, r3
 800e384:	4610      	mov	r0, r2
 800e386:	f7f2 f91a 	bl	80005be <vApplicationStackOverflowHook>
 800e38a:	4b24      	ldr	r3, [pc, #144]	; (800e41c <vTaskSwitchContext+0xfc>)
 800e38c:	681b      	ldr	r3, [r3, #0]
 800e38e:	60fb      	str	r3, [r7, #12]
 800e390:	68fb      	ldr	r3, [r7, #12]
 800e392:	fab3 f383 	clz	r3, r3
 800e396:	72fb      	strb	r3, [r7, #11]
 800e398:	7afb      	ldrb	r3, [r7, #11]
 800e39a:	f1c3 031f 	rsb	r3, r3, #31
 800e39e:	617b      	str	r3, [r7, #20]
 800e3a0:	491f      	ldr	r1, [pc, #124]	; (800e420 <vTaskSwitchContext+0x100>)
 800e3a2:	697a      	ldr	r2, [r7, #20]
 800e3a4:	4613      	mov	r3, r2
 800e3a6:	009b      	lsls	r3, r3, #2
 800e3a8:	4413      	add	r3, r2
 800e3aa:	009b      	lsls	r3, r3, #2
 800e3ac:	440b      	add	r3, r1
 800e3ae:	681b      	ldr	r3, [r3, #0]
 800e3b0:	2b00      	cmp	r3, #0
 800e3b2:	d10b      	bne.n	800e3cc <vTaskSwitchContext+0xac>
 800e3b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3b8:	b672      	cpsid	i
 800e3ba:	f383 8811 	msr	BASEPRI, r3
 800e3be:	f3bf 8f6f 	isb	sy
 800e3c2:	f3bf 8f4f 	dsb	sy
 800e3c6:	b662      	cpsie	i
 800e3c8:	607b      	str	r3, [r7, #4]
 800e3ca:	e7fe      	b.n	800e3ca <vTaskSwitchContext+0xaa>
 800e3cc:	697a      	ldr	r2, [r7, #20]
 800e3ce:	4613      	mov	r3, r2
 800e3d0:	009b      	lsls	r3, r3, #2
 800e3d2:	4413      	add	r3, r2
 800e3d4:	009b      	lsls	r3, r3, #2
 800e3d6:	4a12      	ldr	r2, [pc, #72]	; (800e420 <vTaskSwitchContext+0x100>)
 800e3d8:	4413      	add	r3, r2
 800e3da:	613b      	str	r3, [r7, #16]
 800e3dc:	693b      	ldr	r3, [r7, #16]
 800e3de:	685b      	ldr	r3, [r3, #4]
 800e3e0:	685a      	ldr	r2, [r3, #4]
 800e3e2:	693b      	ldr	r3, [r7, #16]
 800e3e4:	605a      	str	r2, [r3, #4]
 800e3e6:	693b      	ldr	r3, [r7, #16]
 800e3e8:	685a      	ldr	r2, [r3, #4]
 800e3ea:	693b      	ldr	r3, [r7, #16]
 800e3ec:	3308      	adds	r3, #8
 800e3ee:	429a      	cmp	r2, r3
 800e3f0:	d104      	bne.n	800e3fc <vTaskSwitchContext+0xdc>
 800e3f2:	693b      	ldr	r3, [r7, #16]
 800e3f4:	685b      	ldr	r3, [r3, #4]
 800e3f6:	685a      	ldr	r2, [r3, #4]
 800e3f8:	693b      	ldr	r3, [r7, #16]
 800e3fa:	605a      	str	r2, [r3, #4]
 800e3fc:	693b      	ldr	r3, [r7, #16]
 800e3fe:	685b      	ldr	r3, [r3, #4]
 800e400:	68db      	ldr	r3, [r3, #12]
 800e402:	4a05      	ldr	r2, [pc, #20]	; (800e418 <vTaskSwitchContext+0xf8>)
 800e404:	6013      	str	r3, [r2, #0]
 800e406:	bf00      	nop
 800e408:	3720      	adds	r7, #32
 800e40a:	46bd      	mov	sp, r7
 800e40c:	bd80      	pop	{r7, pc}
 800e40e:	bf00      	nop
 800e410:	20001a44 	.word	0x20001a44
 800e414:	20001a30 	.word	0x20001a30
 800e418:	2000191c 	.word	0x2000191c
 800e41c:	20001a24 	.word	0x20001a24
 800e420:	20001920 	.word	0x20001920

0800e424 <vTaskPlaceOnEventList>:
 800e424:	b580      	push	{r7, lr}
 800e426:	b084      	sub	sp, #16
 800e428:	af00      	add	r7, sp, #0
 800e42a:	6078      	str	r0, [r7, #4]
 800e42c:	6039      	str	r1, [r7, #0]
 800e42e:	687b      	ldr	r3, [r7, #4]
 800e430:	2b00      	cmp	r3, #0
 800e432:	d10b      	bne.n	800e44c <vTaskPlaceOnEventList+0x28>
 800e434:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e438:	b672      	cpsid	i
 800e43a:	f383 8811 	msr	BASEPRI, r3
 800e43e:	f3bf 8f6f 	isb	sy
 800e442:	f3bf 8f4f 	dsb	sy
 800e446:	b662      	cpsie	i
 800e448:	60fb      	str	r3, [r7, #12]
 800e44a:	e7fe      	b.n	800e44a <vTaskPlaceOnEventList+0x26>
 800e44c:	4b07      	ldr	r3, [pc, #28]	; (800e46c <vTaskPlaceOnEventList+0x48>)
 800e44e:	681b      	ldr	r3, [r3, #0]
 800e450:	3318      	adds	r3, #24
 800e452:	4619      	mov	r1, r3
 800e454:	6878      	ldr	r0, [r7, #4]
 800e456:	f7fe fe27 	bl	800d0a8 <vListInsert>
 800e45a:	2101      	movs	r1, #1
 800e45c:	6838      	ldr	r0, [r7, #0]
 800e45e:	f000 fb9d 	bl	800eb9c <prvAddCurrentTaskToDelayedList>
 800e462:	bf00      	nop
 800e464:	3710      	adds	r7, #16
 800e466:	46bd      	mov	sp, r7
 800e468:	bd80      	pop	{r7, pc}
 800e46a:	bf00      	nop
 800e46c:	2000191c 	.word	0x2000191c

0800e470 <xTaskRemoveFromEventList>:
 800e470:	b580      	push	{r7, lr}
 800e472:	b086      	sub	sp, #24
 800e474:	af00      	add	r7, sp, #0
 800e476:	6078      	str	r0, [r7, #4]
 800e478:	687b      	ldr	r3, [r7, #4]
 800e47a:	68db      	ldr	r3, [r3, #12]
 800e47c:	68db      	ldr	r3, [r3, #12]
 800e47e:	613b      	str	r3, [r7, #16]
 800e480:	693b      	ldr	r3, [r7, #16]
 800e482:	2b00      	cmp	r3, #0
 800e484:	d10b      	bne.n	800e49e <xTaskRemoveFromEventList+0x2e>
 800e486:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e48a:	b672      	cpsid	i
 800e48c:	f383 8811 	msr	BASEPRI, r3
 800e490:	f3bf 8f6f 	isb	sy
 800e494:	f3bf 8f4f 	dsb	sy
 800e498:	b662      	cpsie	i
 800e49a:	60fb      	str	r3, [r7, #12]
 800e49c:	e7fe      	b.n	800e49c <xTaskRemoveFromEventList+0x2c>
 800e49e:	693b      	ldr	r3, [r7, #16]
 800e4a0:	3318      	adds	r3, #24
 800e4a2:	4618      	mov	r0, r3
 800e4a4:	f7fe fe39 	bl	800d11a <uxListRemove>
 800e4a8:	4b1d      	ldr	r3, [pc, #116]	; (800e520 <xTaskRemoveFromEventList+0xb0>)
 800e4aa:	681b      	ldr	r3, [r3, #0]
 800e4ac:	2b00      	cmp	r3, #0
 800e4ae:	d11c      	bne.n	800e4ea <xTaskRemoveFromEventList+0x7a>
 800e4b0:	693b      	ldr	r3, [r7, #16]
 800e4b2:	3304      	adds	r3, #4
 800e4b4:	4618      	mov	r0, r3
 800e4b6:	f7fe fe30 	bl	800d11a <uxListRemove>
 800e4ba:	693b      	ldr	r3, [r7, #16]
 800e4bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e4be:	2201      	movs	r2, #1
 800e4c0:	409a      	lsls	r2, r3
 800e4c2:	4b18      	ldr	r3, [pc, #96]	; (800e524 <xTaskRemoveFromEventList+0xb4>)
 800e4c4:	681b      	ldr	r3, [r3, #0]
 800e4c6:	4313      	orrs	r3, r2
 800e4c8:	4a16      	ldr	r2, [pc, #88]	; (800e524 <xTaskRemoveFromEventList+0xb4>)
 800e4ca:	6013      	str	r3, [r2, #0]
 800e4cc:	693b      	ldr	r3, [r7, #16]
 800e4ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e4d0:	4613      	mov	r3, r2
 800e4d2:	009b      	lsls	r3, r3, #2
 800e4d4:	4413      	add	r3, r2
 800e4d6:	009b      	lsls	r3, r3, #2
 800e4d8:	4a13      	ldr	r2, [pc, #76]	; (800e528 <xTaskRemoveFromEventList+0xb8>)
 800e4da:	441a      	add	r2, r3
 800e4dc:	693b      	ldr	r3, [r7, #16]
 800e4de:	3304      	adds	r3, #4
 800e4e0:	4619      	mov	r1, r3
 800e4e2:	4610      	mov	r0, r2
 800e4e4:	f7fe fdbc 	bl	800d060 <vListInsertEnd>
 800e4e8:	e005      	b.n	800e4f6 <xTaskRemoveFromEventList+0x86>
 800e4ea:	693b      	ldr	r3, [r7, #16]
 800e4ec:	3318      	adds	r3, #24
 800e4ee:	4619      	mov	r1, r3
 800e4f0:	480e      	ldr	r0, [pc, #56]	; (800e52c <xTaskRemoveFromEventList+0xbc>)
 800e4f2:	f7fe fdb5 	bl	800d060 <vListInsertEnd>
 800e4f6:	693b      	ldr	r3, [r7, #16]
 800e4f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e4fa:	4b0d      	ldr	r3, [pc, #52]	; (800e530 <xTaskRemoveFromEventList+0xc0>)
 800e4fc:	681b      	ldr	r3, [r3, #0]
 800e4fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e500:	429a      	cmp	r2, r3
 800e502:	d905      	bls.n	800e510 <xTaskRemoveFromEventList+0xa0>
 800e504:	2301      	movs	r3, #1
 800e506:	617b      	str	r3, [r7, #20]
 800e508:	4b0a      	ldr	r3, [pc, #40]	; (800e534 <xTaskRemoveFromEventList+0xc4>)
 800e50a:	2201      	movs	r2, #1
 800e50c:	601a      	str	r2, [r3, #0]
 800e50e:	e001      	b.n	800e514 <xTaskRemoveFromEventList+0xa4>
 800e510:	2300      	movs	r3, #0
 800e512:	617b      	str	r3, [r7, #20]
 800e514:	697b      	ldr	r3, [r7, #20]
 800e516:	4618      	mov	r0, r3
 800e518:	3718      	adds	r7, #24
 800e51a:	46bd      	mov	sp, r7
 800e51c:	bd80      	pop	{r7, pc}
 800e51e:	bf00      	nop
 800e520:	20001a44 	.word	0x20001a44
 800e524:	20001a24 	.word	0x20001a24
 800e528:	20001920 	.word	0x20001920
 800e52c:	200019dc 	.word	0x200019dc
 800e530:	2000191c 	.word	0x2000191c
 800e534:	20001a30 	.word	0x20001a30

0800e538 <vTaskInternalSetTimeOutState>:
 800e538:	b480      	push	{r7}
 800e53a:	b083      	sub	sp, #12
 800e53c:	af00      	add	r7, sp, #0
 800e53e:	6078      	str	r0, [r7, #4]
 800e540:	4b06      	ldr	r3, [pc, #24]	; (800e55c <vTaskInternalSetTimeOutState+0x24>)
 800e542:	681a      	ldr	r2, [r3, #0]
 800e544:	687b      	ldr	r3, [r7, #4]
 800e546:	601a      	str	r2, [r3, #0]
 800e548:	4b05      	ldr	r3, [pc, #20]	; (800e560 <vTaskInternalSetTimeOutState+0x28>)
 800e54a:	681a      	ldr	r2, [r3, #0]
 800e54c:	687b      	ldr	r3, [r7, #4]
 800e54e:	605a      	str	r2, [r3, #4]
 800e550:	bf00      	nop
 800e552:	370c      	adds	r7, #12
 800e554:	46bd      	mov	sp, r7
 800e556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e55a:	4770      	bx	lr
 800e55c:	20001a34 	.word	0x20001a34
 800e560:	20001a20 	.word	0x20001a20

0800e564 <xTaskCheckForTimeOut>:
 800e564:	b580      	push	{r7, lr}
 800e566:	b088      	sub	sp, #32
 800e568:	af00      	add	r7, sp, #0
 800e56a:	6078      	str	r0, [r7, #4]
 800e56c:	6039      	str	r1, [r7, #0]
 800e56e:	687b      	ldr	r3, [r7, #4]
 800e570:	2b00      	cmp	r3, #0
 800e572:	d10b      	bne.n	800e58c <xTaskCheckForTimeOut+0x28>
 800e574:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e578:	b672      	cpsid	i
 800e57a:	f383 8811 	msr	BASEPRI, r3
 800e57e:	f3bf 8f6f 	isb	sy
 800e582:	f3bf 8f4f 	dsb	sy
 800e586:	b662      	cpsie	i
 800e588:	613b      	str	r3, [r7, #16]
 800e58a:	e7fe      	b.n	800e58a <xTaskCheckForTimeOut+0x26>
 800e58c:	683b      	ldr	r3, [r7, #0]
 800e58e:	2b00      	cmp	r3, #0
 800e590:	d10b      	bne.n	800e5aa <xTaskCheckForTimeOut+0x46>
 800e592:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e596:	b672      	cpsid	i
 800e598:	f383 8811 	msr	BASEPRI, r3
 800e59c:	f3bf 8f6f 	isb	sy
 800e5a0:	f3bf 8f4f 	dsb	sy
 800e5a4:	b662      	cpsie	i
 800e5a6:	60fb      	str	r3, [r7, #12]
 800e5a8:	e7fe      	b.n	800e5a8 <xTaskCheckForTimeOut+0x44>
 800e5aa:	f000 fc65 	bl	800ee78 <vPortEnterCritical>
 800e5ae:	4b1d      	ldr	r3, [pc, #116]	; (800e624 <xTaskCheckForTimeOut+0xc0>)
 800e5b0:	681b      	ldr	r3, [r3, #0]
 800e5b2:	61bb      	str	r3, [r7, #24]
 800e5b4:	687b      	ldr	r3, [r7, #4]
 800e5b6:	685b      	ldr	r3, [r3, #4]
 800e5b8:	69ba      	ldr	r2, [r7, #24]
 800e5ba:	1ad3      	subs	r3, r2, r3
 800e5bc:	617b      	str	r3, [r7, #20]
 800e5be:	683b      	ldr	r3, [r7, #0]
 800e5c0:	681b      	ldr	r3, [r3, #0]
 800e5c2:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e5c6:	d102      	bne.n	800e5ce <xTaskCheckForTimeOut+0x6a>
 800e5c8:	2300      	movs	r3, #0
 800e5ca:	61fb      	str	r3, [r7, #28]
 800e5cc:	e023      	b.n	800e616 <xTaskCheckForTimeOut+0xb2>
 800e5ce:	687b      	ldr	r3, [r7, #4]
 800e5d0:	681a      	ldr	r2, [r3, #0]
 800e5d2:	4b15      	ldr	r3, [pc, #84]	; (800e628 <xTaskCheckForTimeOut+0xc4>)
 800e5d4:	681b      	ldr	r3, [r3, #0]
 800e5d6:	429a      	cmp	r2, r3
 800e5d8:	d007      	beq.n	800e5ea <xTaskCheckForTimeOut+0x86>
 800e5da:	687b      	ldr	r3, [r7, #4]
 800e5dc:	685b      	ldr	r3, [r3, #4]
 800e5de:	69ba      	ldr	r2, [r7, #24]
 800e5e0:	429a      	cmp	r2, r3
 800e5e2:	d302      	bcc.n	800e5ea <xTaskCheckForTimeOut+0x86>
 800e5e4:	2301      	movs	r3, #1
 800e5e6:	61fb      	str	r3, [r7, #28]
 800e5e8:	e015      	b.n	800e616 <xTaskCheckForTimeOut+0xb2>
 800e5ea:	683b      	ldr	r3, [r7, #0]
 800e5ec:	681b      	ldr	r3, [r3, #0]
 800e5ee:	697a      	ldr	r2, [r7, #20]
 800e5f0:	429a      	cmp	r2, r3
 800e5f2:	d20b      	bcs.n	800e60c <xTaskCheckForTimeOut+0xa8>
 800e5f4:	683b      	ldr	r3, [r7, #0]
 800e5f6:	681a      	ldr	r2, [r3, #0]
 800e5f8:	697b      	ldr	r3, [r7, #20]
 800e5fa:	1ad2      	subs	r2, r2, r3
 800e5fc:	683b      	ldr	r3, [r7, #0]
 800e5fe:	601a      	str	r2, [r3, #0]
 800e600:	6878      	ldr	r0, [r7, #4]
 800e602:	f7ff ff99 	bl	800e538 <vTaskInternalSetTimeOutState>
 800e606:	2300      	movs	r3, #0
 800e608:	61fb      	str	r3, [r7, #28]
 800e60a:	e004      	b.n	800e616 <xTaskCheckForTimeOut+0xb2>
 800e60c:	683b      	ldr	r3, [r7, #0]
 800e60e:	2200      	movs	r2, #0
 800e610:	601a      	str	r2, [r3, #0]
 800e612:	2301      	movs	r3, #1
 800e614:	61fb      	str	r3, [r7, #28]
 800e616:	f000 fc61 	bl	800eedc <vPortExitCritical>
 800e61a:	69fb      	ldr	r3, [r7, #28]
 800e61c:	4618      	mov	r0, r3
 800e61e:	3720      	adds	r7, #32
 800e620:	46bd      	mov	sp, r7
 800e622:	bd80      	pop	{r7, pc}
 800e624:	20001a20 	.word	0x20001a20
 800e628:	20001a34 	.word	0x20001a34

0800e62c <vTaskMissedYield>:
 800e62c:	b480      	push	{r7}
 800e62e:	af00      	add	r7, sp, #0
 800e630:	4b03      	ldr	r3, [pc, #12]	; (800e640 <vTaskMissedYield+0x14>)
 800e632:	2201      	movs	r2, #1
 800e634:	601a      	str	r2, [r3, #0]
 800e636:	bf00      	nop
 800e638:	46bd      	mov	sp, r7
 800e63a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e63e:	4770      	bx	lr
 800e640:	20001a30 	.word	0x20001a30

0800e644 <prvIdleTask>:
 800e644:	b580      	push	{r7, lr}
 800e646:	b082      	sub	sp, #8
 800e648:	af00      	add	r7, sp, #0
 800e64a:	6078      	str	r0, [r7, #4]
 800e64c:	f000 f854 	bl	800e6f8 <prvCheckTasksWaitingTermination>
 800e650:	4b07      	ldr	r3, [pc, #28]	; (800e670 <prvIdleTask+0x2c>)
 800e652:	681b      	ldr	r3, [r3, #0]
 800e654:	2b01      	cmp	r3, #1
 800e656:	d907      	bls.n	800e668 <prvIdleTask+0x24>
 800e658:	4b06      	ldr	r3, [pc, #24]	; (800e674 <prvIdleTask+0x30>)
 800e65a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e65e:	601a      	str	r2, [r3, #0]
 800e660:	f3bf 8f4f 	dsb	sy
 800e664:	f3bf 8f6f 	isb	sy
 800e668:	f7f1 ffa2 	bl	80005b0 <vApplicationIdleHook>
 800e66c:	e7ee      	b.n	800e64c <prvIdleTask+0x8>
 800e66e:	bf00      	nop
 800e670:	20001920 	.word	0x20001920
 800e674:	e000ed04 	.word	0xe000ed04

0800e678 <prvInitialiseTaskLists>:
 800e678:	b580      	push	{r7, lr}
 800e67a:	b082      	sub	sp, #8
 800e67c:	af00      	add	r7, sp, #0
 800e67e:	2300      	movs	r3, #0
 800e680:	607b      	str	r3, [r7, #4]
 800e682:	e00c      	b.n	800e69e <prvInitialiseTaskLists+0x26>
 800e684:	687a      	ldr	r2, [r7, #4]
 800e686:	4613      	mov	r3, r2
 800e688:	009b      	lsls	r3, r3, #2
 800e68a:	4413      	add	r3, r2
 800e68c:	009b      	lsls	r3, r3, #2
 800e68e:	4a12      	ldr	r2, [pc, #72]	; (800e6d8 <prvInitialiseTaskLists+0x60>)
 800e690:	4413      	add	r3, r2
 800e692:	4618      	mov	r0, r3
 800e694:	f7fe fcb7 	bl	800d006 <vListInitialise>
 800e698:	687b      	ldr	r3, [r7, #4]
 800e69a:	3301      	adds	r3, #1
 800e69c:	607b      	str	r3, [r7, #4]
 800e69e:	687b      	ldr	r3, [r7, #4]
 800e6a0:	2b06      	cmp	r3, #6
 800e6a2:	d9ef      	bls.n	800e684 <prvInitialiseTaskLists+0xc>
 800e6a4:	480d      	ldr	r0, [pc, #52]	; (800e6dc <prvInitialiseTaskLists+0x64>)
 800e6a6:	f7fe fcae 	bl	800d006 <vListInitialise>
 800e6aa:	480d      	ldr	r0, [pc, #52]	; (800e6e0 <prvInitialiseTaskLists+0x68>)
 800e6ac:	f7fe fcab 	bl	800d006 <vListInitialise>
 800e6b0:	480c      	ldr	r0, [pc, #48]	; (800e6e4 <prvInitialiseTaskLists+0x6c>)
 800e6b2:	f7fe fca8 	bl	800d006 <vListInitialise>
 800e6b6:	480c      	ldr	r0, [pc, #48]	; (800e6e8 <prvInitialiseTaskLists+0x70>)
 800e6b8:	f7fe fca5 	bl	800d006 <vListInitialise>
 800e6bc:	480b      	ldr	r0, [pc, #44]	; (800e6ec <prvInitialiseTaskLists+0x74>)
 800e6be:	f7fe fca2 	bl	800d006 <vListInitialise>
 800e6c2:	4b0b      	ldr	r3, [pc, #44]	; (800e6f0 <prvInitialiseTaskLists+0x78>)
 800e6c4:	4a05      	ldr	r2, [pc, #20]	; (800e6dc <prvInitialiseTaskLists+0x64>)
 800e6c6:	601a      	str	r2, [r3, #0]
 800e6c8:	4b0a      	ldr	r3, [pc, #40]	; (800e6f4 <prvInitialiseTaskLists+0x7c>)
 800e6ca:	4a05      	ldr	r2, [pc, #20]	; (800e6e0 <prvInitialiseTaskLists+0x68>)
 800e6cc:	601a      	str	r2, [r3, #0]
 800e6ce:	bf00      	nop
 800e6d0:	3708      	adds	r7, #8
 800e6d2:	46bd      	mov	sp, r7
 800e6d4:	bd80      	pop	{r7, pc}
 800e6d6:	bf00      	nop
 800e6d8:	20001920 	.word	0x20001920
 800e6dc:	200019ac 	.word	0x200019ac
 800e6e0:	200019c0 	.word	0x200019c0
 800e6e4:	200019dc 	.word	0x200019dc
 800e6e8:	200019f0 	.word	0x200019f0
 800e6ec:	20001a08 	.word	0x20001a08
 800e6f0:	200019d4 	.word	0x200019d4
 800e6f4:	200019d8 	.word	0x200019d8

0800e6f8 <prvCheckTasksWaitingTermination>:
 800e6f8:	b580      	push	{r7, lr}
 800e6fa:	b082      	sub	sp, #8
 800e6fc:	af00      	add	r7, sp, #0
 800e6fe:	e019      	b.n	800e734 <prvCheckTasksWaitingTermination+0x3c>
 800e700:	f000 fbba 	bl	800ee78 <vPortEnterCritical>
 800e704:	4b0f      	ldr	r3, [pc, #60]	; (800e744 <prvCheckTasksWaitingTermination+0x4c>)
 800e706:	68db      	ldr	r3, [r3, #12]
 800e708:	68db      	ldr	r3, [r3, #12]
 800e70a:	607b      	str	r3, [r7, #4]
 800e70c:	687b      	ldr	r3, [r7, #4]
 800e70e:	3304      	adds	r3, #4
 800e710:	4618      	mov	r0, r3
 800e712:	f7fe fd02 	bl	800d11a <uxListRemove>
 800e716:	4b0c      	ldr	r3, [pc, #48]	; (800e748 <prvCheckTasksWaitingTermination+0x50>)
 800e718:	681b      	ldr	r3, [r3, #0]
 800e71a:	3b01      	subs	r3, #1
 800e71c:	4a0a      	ldr	r2, [pc, #40]	; (800e748 <prvCheckTasksWaitingTermination+0x50>)
 800e71e:	6013      	str	r3, [r2, #0]
 800e720:	4b0a      	ldr	r3, [pc, #40]	; (800e74c <prvCheckTasksWaitingTermination+0x54>)
 800e722:	681b      	ldr	r3, [r3, #0]
 800e724:	3b01      	subs	r3, #1
 800e726:	4a09      	ldr	r2, [pc, #36]	; (800e74c <prvCheckTasksWaitingTermination+0x54>)
 800e728:	6013      	str	r3, [r2, #0]
 800e72a:	f000 fbd7 	bl	800eedc <vPortExitCritical>
 800e72e:	6878      	ldr	r0, [r7, #4]
 800e730:	f000 f80e 	bl	800e750 <prvDeleteTCB>
 800e734:	4b05      	ldr	r3, [pc, #20]	; (800e74c <prvCheckTasksWaitingTermination+0x54>)
 800e736:	681b      	ldr	r3, [r3, #0]
 800e738:	2b00      	cmp	r3, #0
 800e73a:	d1e1      	bne.n	800e700 <prvCheckTasksWaitingTermination+0x8>
 800e73c:	bf00      	nop
 800e73e:	3708      	adds	r7, #8
 800e740:	46bd      	mov	sp, r7
 800e742:	bd80      	pop	{r7, pc}
 800e744:	200019f0 	.word	0x200019f0
 800e748:	20001a1c 	.word	0x20001a1c
 800e74c:	20001a04 	.word	0x20001a04

0800e750 <prvDeleteTCB>:
 800e750:	b580      	push	{r7, lr}
 800e752:	b084      	sub	sp, #16
 800e754:	af00      	add	r7, sp, #0
 800e756:	6078      	str	r0, [r7, #4]
 800e758:	687b      	ldr	r3, [r7, #4]
 800e75a:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 800e75e:	2b00      	cmp	r3, #0
 800e760:	d108      	bne.n	800e774 <prvDeleteTCB+0x24>
 800e762:	687b      	ldr	r3, [r7, #4]
 800e764:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800e766:	4618      	mov	r0, r3
 800e768:	f000 fd32 	bl	800f1d0 <vPortFree>
 800e76c:	6878      	ldr	r0, [r7, #4]
 800e76e:	f000 fd2f 	bl	800f1d0 <vPortFree>
 800e772:	e019      	b.n	800e7a8 <prvDeleteTCB+0x58>
 800e774:	687b      	ldr	r3, [r7, #4]
 800e776:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 800e77a:	2b01      	cmp	r3, #1
 800e77c:	d103      	bne.n	800e786 <prvDeleteTCB+0x36>
 800e77e:	6878      	ldr	r0, [r7, #4]
 800e780:	f000 fd26 	bl	800f1d0 <vPortFree>
 800e784:	e010      	b.n	800e7a8 <prvDeleteTCB+0x58>
 800e786:	687b      	ldr	r3, [r7, #4]
 800e788:	f893 3055 	ldrb.w	r3, [r3, #85]	; 0x55
 800e78c:	2b02      	cmp	r3, #2
 800e78e:	d00b      	beq.n	800e7a8 <prvDeleteTCB+0x58>
 800e790:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e794:	b672      	cpsid	i
 800e796:	f383 8811 	msr	BASEPRI, r3
 800e79a:	f3bf 8f6f 	isb	sy
 800e79e:	f3bf 8f4f 	dsb	sy
 800e7a2:	b662      	cpsie	i
 800e7a4:	60fb      	str	r3, [r7, #12]
 800e7a6:	e7fe      	b.n	800e7a6 <prvDeleteTCB+0x56>
 800e7a8:	bf00      	nop
 800e7aa:	3710      	adds	r7, #16
 800e7ac:	46bd      	mov	sp, r7
 800e7ae:	bd80      	pop	{r7, pc}

0800e7b0 <prvResetNextTaskUnblockTime>:
 800e7b0:	b480      	push	{r7}
 800e7b2:	b083      	sub	sp, #12
 800e7b4:	af00      	add	r7, sp, #0
 800e7b6:	4b0c      	ldr	r3, [pc, #48]	; (800e7e8 <prvResetNextTaskUnblockTime+0x38>)
 800e7b8:	681b      	ldr	r3, [r3, #0]
 800e7ba:	681b      	ldr	r3, [r3, #0]
 800e7bc:	2b00      	cmp	r3, #0
 800e7be:	d104      	bne.n	800e7ca <prvResetNextTaskUnblockTime+0x1a>
 800e7c0:	4b0a      	ldr	r3, [pc, #40]	; (800e7ec <prvResetNextTaskUnblockTime+0x3c>)
 800e7c2:	f04f 32ff 	mov.w	r2, #4294967295
 800e7c6:	601a      	str	r2, [r3, #0]
 800e7c8:	e008      	b.n	800e7dc <prvResetNextTaskUnblockTime+0x2c>
 800e7ca:	4b07      	ldr	r3, [pc, #28]	; (800e7e8 <prvResetNextTaskUnblockTime+0x38>)
 800e7cc:	681b      	ldr	r3, [r3, #0]
 800e7ce:	68db      	ldr	r3, [r3, #12]
 800e7d0:	68db      	ldr	r3, [r3, #12]
 800e7d2:	607b      	str	r3, [r7, #4]
 800e7d4:	687b      	ldr	r3, [r7, #4]
 800e7d6:	685b      	ldr	r3, [r3, #4]
 800e7d8:	4a04      	ldr	r2, [pc, #16]	; (800e7ec <prvResetNextTaskUnblockTime+0x3c>)
 800e7da:	6013      	str	r3, [r2, #0]
 800e7dc:	bf00      	nop
 800e7de:	370c      	adds	r7, #12
 800e7e0:	46bd      	mov	sp, r7
 800e7e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7e6:	4770      	bx	lr
 800e7e8:	200019d4 	.word	0x200019d4
 800e7ec:	20001a3c 	.word	0x20001a3c

0800e7f0 <xTaskGetSchedulerState>:
 800e7f0:	b480      	push	{r7}
 800e7f2:	b083      	sub	sp, #12
 800e7f4:	af00      	add	r7, sp, #0
 800e7f6:	4b0b      	ldr	r3, [pc, #44]	; (800e824 <xTaskGetSchedulerState+0x34>)
 800e7f8:	681b      	ldr	r3, [r3, #0]
 800e7fa:	2b00      	cmp	r3, #0
 800e7fc:	d102      	bne.n	800e804 <xTaskGetSchedulerState+0x14>
 800e7fe:	2301      	movs	r3, #1
 800e800:	607b      	str	r3, [r7, #4]
 800e802:	e008      	b.n	800e816 <xTaskGetSchedulerState+0x26>
 800e804:	4b08      	ldr	r3, [pc, #32]	; (800e828 <xTaskGetSchedulerState+0x38>)
 800e806:	681b      	ldr	r3, [r3, #0]
 800e808:	2b00      	cmp	r3, #0
 800e80a:	d102      	bne.n	800e812 <xTaskGetSchedulerState+0x22>
 800e80c:	2302      	movs	r3, #2
 800e80e:	607b      	str	r3, [r7, #4]
 800e810:	e001      	b.n	800e816 <xTaskGetSchedulerState+0x26>
 800e812:	2300      	movs	r3, #0
 800e814:	607b      	str	r3, [r7, #4]
 800e816:	687b      	ldr	r3, [r7, #4]
 800e818:	4618      	mov	r0, r3
 800e81a:	370c      	adds	r7, #12
 800e81c:	46bd      	mov	sp, r7
 800e81e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e822:	4770      	bx	lr
 800e824:	20001a28 	.word	0x20001a28
 800e828:	20001a44 	.word	0x20001a44

0800e82c <xTaskPriorityInherit>:
 800e82c:	b580      	push	{r7, lr}
 800e82e:	b084      	sub	sp, #16
 800e830:	af00      	add	r7, sp, #0
 800e832:	6078      	str	r0, [r7, #4]
 800e834:	687b      	ldr	r3, [r7, #4]
 800e836:	60bb      	str	r3, [r7, #8]
 800e838:	2300      	movs	r3, #0
 800e83a:	60fb      	str	r3, [r7, #12]
 800e83c:	687b      	ldr	r3, [r7, #4]
 800e83e:	2b00      	cmp	r3, #0
 800e840:	d069      	beq.n	800e916 <xTaskPriorityInherit+0xea>
 800e842:	68bb      	ldr	r3, [r7, #8]
 800e844:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e846:	4b36      	ldr	r3, [pc, #216]	; (800e920 <xTaskPriorityInherit+0xf4>)
 800e848:	681b      	ldr	r3, [r3, #0]
 800e84a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e84c:	429a      	cmp	r2, r3
 800e84e:	d259      	bcs.n	800e904 <xTaskPriorityInherit+0xd8>
 800e850:	68bb      	ldr	r3, [r7, #8]
 800e852:	699b      	ldr	r3, [r3, #24]
 800e854:	2b00      	cmp	r3, #0
 800e856:	db06      	blt.n	800e866 <xTaskPriorityInherit+0x3a>
 800e858:	4b31      	ldr	r3, [pc, #196]	; (800e920 <xTaskPriorityInherit+0xf4>)
 800e85a:	681b      	ldr	r3, [r3, #0]
 800e85c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e85e:	f1c3 0207 	rsb	r2, r3, #7
 800e862:	68bb      	ldr	r3, [r7, #8]
 800e864:	619a      	str	r2, [r3, #24]
 800e866:	68bb      	ldr	r3, [r7, #8]
 800e868:	6959      	ldr	r1, [r3, #20]
 800e86a:	68bb      	ldr	r3, [r7, #8]
 800e86c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e86e:	4613      	mov	r3, r2
 800e870:	009b      	lsls	r3, r3, #2
 800e872:	4413      	add	r3, r2
 800e874:	009b      	lsls	r3, r3, #2
 800e876:	4a2b      	ldr	r2, [pc, #172]	; (800e924 <xTaskPriorityInherit+0xf8>)
 800e878:	4413      	add	r3, r2
 800e87a:	4299      	cmp	r1, r3
 800e87c:	d13a      	bne.n	800e8f4 <xTaskPriorityInherit+0xc8>
 800e87e:	68bb      	ldr	r3, [r7, #8]
 800e880:	3304      	adds	r3, #4
 800e882:	4618      	mov	r0, r3
 800e884:	f7fe fc49 	bl	800d11a <uxListRemove>
 800e888:	4603      	mov	r3, r0
 800e88a:	2b00      	cmp	r3, #0
 800e88c:	d115      	bne.n	800e8ba <xTaskPriorityInherit+0x8e>
 800e88e:	68bb      	ldr	r3, [r7, #8]
 800e890:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e892:	4924      	ldr	r1, [pc, #144]	; (800e924 <xTaskPriorityInherit+0xf8>)
 800e894:	4613      	mov	r3, r2
 800e896:	009b      	lsls	r3, r3, #2
 800e898:	4413      	add	r3, r2
 800e89a:	009b      	lsls	r3, r3, #2
 800e89c:	440b      	add	r3, r1
 800e89e:	681b      	ldr	r3, [r3, #0]
 800e8a0:	2b00      	cmp	r3, #0
 800e8a2:	d10a      	bne.n	800e8ba <xTaskPriorityInherit+0x8e>
 800e8a4:	68bb      	ldr	r3, [r7, #8]
 800e8a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8a8:	2201      	movs	r2, #1
 800e8aa:	fa02 f303 	lsl.w	r3, r2, r3
 800e8ae:	43da      	mvns	r2, r3
 800e8b0:	4b1d      	ldr	r3, [pc, #116]	; (800e928 <xTaskPriorityInherit+0xfc>)
 800e8b2:	681b      	ldr	r3, [r3, #0]
 800e8b4:	4013      	ands	r3, r2
 800e8b6:	4a1c      	ldr	r2, [pc, #112]	; (800e928 <xTaskPriorityInherit+0xfc>)
 800e8b8:	6013      	str	r3, [r2, #0]
 800e8ba:	4b19      	ldr	r3, [pc, #100]	; (800e920 <xTaskPriorityInherit+0xf4>)
 800e8bc:	681b      	ldr	r3, [r3, #0]
 800e8be:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e8c0:	68bb      	ldr	r3, [r7, #8]
 800e8c2:	62da      	str	r2, [r3, #44]	; 0x2c
 800e8c4:	68bb      	ldr	r3, [r7, #8]
 800e8c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8c8:	2201      	movs	r2, #1
 800e8ca:	409a      	lsls	r2, r3
 800e8cc:	4b16      	ldr	r3, [pc, #88]	; (800e928 <xTaskPriorityInherit+0xfc>)
 800e8ce:	681b      	ldr	r3, [r3, #0]
 800e8d0:	4313      	orrs	r3, r2
 800e8d2:	4a15      	ldr	r2, [pc, #84]	; (800e928 <xTaskPriorityInherit+0xfc>)
 800e8d4:	6013      	str	r3, [r2, #0]
 800e8d6:	68bb      	ldr	r3, [r7, #8]
 800e8d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e8da:	4613      	mov	r3, r2
 800e8dc:	009b      	lsls	r3, r3, #2
 800e8de:	4413      	add	r3, r2
 800e8e0:	009b      	lsls	r3, r3, #2
 800e8e2:	4a10      	ldr	r2, [pc, #64]	; (800e924 <xTaskPriorityInherit+0xf8>)
 800e8e4:	441a      	add	r2, r3
 800e8e6:	68bb      	ldr	r3, [r7, #8]
 800e8e8:	3304      	adds	r3, #4
 800e8ea:	4619      	mov	r1, r3
 800e8ec:	4610      	mov	r0, r2
 800e8ee:	f7fe fbb7 	bl	800d060 <vListInsertEnd>
 800e8f2:	e004      	b.n	800e8fe <xTaskPriorityInherit+0xd2>
 800e8f4:	4b0a      	ldr	r3, [pc, #40]	; (800e920 <xTaskPriorityInherit+0xf4>)
 800e8f6:	681b      	ldr	r3, [r3, #0]
 800e8f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e8fa:	68bb      	ldr	r3, [r7, #8]
 800e8fc:	62da      	str	r2, [r3, #44]	; 0x2c
 800e8fe:	2301      	movs	r3, #1
 800e900:	60fb      	str	r3, [r7, #12]
 800e902:	e008      	b.n	800e916 <xTaskPriorityInherit+0xea>
 800e904:	68bb      	ldr	r3, [r7, #8]
 800e906:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800e908:	4b05      	ldr	r3, [pc, #20]	; (800e920 <xTaskPriorityInherit+0xf4>)
 800e90a:	681b      	ldr	r3, [r3, #0]
 800e90c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e90e:	429a      	cmp	r2, r3
 800e910:	d201      	bcs.n	800e916 <xTaskPriorityInherit+0xea>
 800e912:	2301      	movs	r3, #1
 800e914:	60fb      	str	r3, [r7, #12]
 800e916:	68fb      	ldr	r3, [r7, #12]
 800e918:	4618      	mov	r0, r3
 800e91a:	3710      	adds	r7, #16
 800e91c:	46bd      	mov	sp, r7
 800e91e:	bd80      	pop	{r7, pc}
 800e920:	2000191c 	.word	0x2000191c
 800e924:	20001920 	.word	0x20001920
 800e928:	20001a24 	.word	0x20001a24

0800e92c <xTaskPriorityDisinherit>:
 800e92c:	b580      	push	{r7, lr}
 800e92e:	b086      	sub	sp, #24
 800e930:	af00      	add	r7, sp, #0
 800e932:	6078      	str	r0, [r7, #4]
 800e934:	687b      	ldr	r3, [r7, #4]
 800e936:	613b      	str	r3, [r7, #16]
 800e938:	2300      	movs	r3, #0
 800e93a:	617b      	str	r3, [r7, #20]
 800e93c:	687b      	ldr	r3, [r7, #4]
 800e93e:	2b00      	cmp	r3, #0
 800e940:	d070      	beq.n	800ea24 <xTaskPriorityDisinherit+0xf8>
 800e942:	4b3b      	ldr	r3, [pc, #236]	; (800ea30 <xTaskPriorityDisinherit+0x104>)
 800e944:	681b      	ldr	r3, [r3, #0]
 800e946:	693a      	ldr	r2, [r7, #16]
 800e948:	429a      	cmp	r2, r3
 800e94a:	d00b      	beq.n	800e964 <xTaskPriorityDisinherit+0x38>
 800e94c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e950:	b672      	cpsid	i
 800e952:	f383 8811 	msr	BASEPRI, r3
 800e956:	f3bf 8f6f 	isb	sy
 800e95a:	f3bf 8f4f 	dsb	sy
 800e95e:	b662      	cpsie	i
 800e960:	60fb      	str	r3, [r7, #12]
 800e962:	e7fe      	b.n	800e962 <xTaskPriorityDisinherit+0x36>
 800e964:	693b      	ldr	r3, [r7, #16]
 800e966:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e968:	2b00      	cmp	r3, #0
 800e96a:	d10b      	bne.n	800e984 <xTaskPriorityDisinherit+0x58>
 800e96c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e970:	b672      	cpsid	i
 800e972:	f383 8811 	msr	BASEPRI, r3
 800e976:	f3bf 8f6f 	isb	sy
 800e97a:	f3bf 8f4f 	dsb	sy
 800e97e:	b662      	cpsie	i
 800e980:	60bb      	str	r3, [r7, #8]
 800e982:	e7fe      	b.n	800e982 <xTaskPriorityDisinherit+0x56>
 800e984:	693b      	ldr	r3, [r7, #16]
 800e986:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e988:	1e5a      	subs	r2, r3, #1
 800e98a:	693b      	ldr	r3, [r7, #16]
 800e98c:	649a      	str	r2, [r3, #72]	; 0x48
 800e98e:	693b      	ldr	r3, [r7, #16]
 800e990:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e992:	693b      	ldr	r3, [r7, #16]
 800e994:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e996:	429a      	cmp	r2, r3
 800e998:	d044      	beq.n	800ea24 <xTaskPriorityDisinherit+0xf8>
 800e99a:	693b      	ldr	r3, [r7, #16]
 800e99c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e99e:	2b00      	cmp	r3, #0
 800e9a0:	d140      	bne.n	800ea24 <xTaskPriorityDisinherit+0xf8>
 800e9a2:	693b      	ldr	r3, [r7, #16]
 800e9a4:	3304      	adds	r3, #4
 800e9a6:	4618      	mov	r0, r3
 800e9a8:	f7fe fbb7 	bl	800d11a <uxListRemove>
 800e9ac:	4603      	mov	r3, r0
 800e9ae:	2b00      	cmp	r3, #0
 800e9b0:	d115      	bne.n	800e9de <xTaskPriorityDisinherit+0xb2>
 800e9b2:	693b      	ldr	r3, [r7, #16]
 800e9b4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e9b6:	491f      	ldr	r1, [pc, #124]	; (800ea34 <xTaskPriorityDisinherit+0x108>)
 800e9b8:	4613      	mov	r3, r2
 800e9ba:	009b      	lsls	r3, r3, #2
 800e9bc:	4413      	add	r3, r2
 800e9be:	009b      	lsls	r3, r3, #2
 800e9c0:	440b      	add	r3, r1
 800e9c2:	681b      	ldr	r3, [r3, #0]
 800e9c4:	2b00      	cmp	r3, #0
 800e9c6:	d10a      	bne.n	800e9de <xTaskPriorityDisinherit+0xb2>
 800e9c8:	693b      	ldr	r3, [r7, #16]
 800e9ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9cc:	2201      	movs	r2, #1
 800e9ce:	fa02 f303 	lsl.w	r3, r2, r3
 800e9d2:	43da      	mvns	r2, r3
 800e9d4:	4b18      	ldr	r3, [pc, #96]	; (800ea38 <xTaskPriorityDisinherit+0x10c>)
 800e9d6:	681b      	ldr	r3, [r3, #0]
 800e9d8:	4013      	ands	r3, r2
 800e9da:	4a17      	ldr	r2, [pc, #92]	; (800ea38 <xTaskPriorityDisinherit+0x10c>)
 800e9dc:	6013      	str	r3, [r2, #0]
 800e9de:	693b      	ldr	r3, [r7, #16]
 800e9e0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800e9e2:	693b      	ldr	r3, [r7, #16]
 800e9e4:	62da      	str	r2, [r3, #44]	; 0x2c
 800e9e6:	693b      	ldr	r3, [r7, #16]
 800e9e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9ea:	f1c3 0207 	rsb	r2, r3, #7
 800e9ee:	693b      	ldr	r3, [r7, #16]
 800e9f0:	619a      	str	r2, [r3, #24]
 800e9f2:	693b      	ldr	r3, [r7, #16]
 800e9f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9f6:	2201      	movs	r2, #1
 800e9f8:	409a      	lsls	r2, r3
 800e9fa:	4b0f      	ldr	r3, [pc, #60]	; (800ea38 <xTaskPriorityDisinherit+0x10c>)
 800e9fc:	681b      	ldr	r3, [r3, #0]
 800e9fe:	4313      	orrs	r3, r2
 800ea00:	4a0d      	ldr	r2, [pc, #52]	; (800ea38 <xTaskPriorityDisinherit+0x10c>)
 800ea02:	6013      	str	r3, [r2, #0]
 800ea04:	693b      	ldr	r3, [r7, #16]
 800ea06:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ea08:	4613      	mov	r3, r2
 800ea0a:	009b      	lsls	r3, r3, #2
 800ea0c:	4413      	add	r3, r2
 800ea0e:	009b      	lsls	r3, r3, #2
 800ea10:	4a08      	ldr	r2, [pc, #32]	; (800ea34 <xTaskPriorityDisinherit+0x108>)
 800ea12:	441a      	add	r2, r3
 800ea14:	693b      	ldr	r3, [r7, #16]
 800ea16:	3304      	adds	r3, #4
 800ea18:	4619      	mov	r1, r3
 800ea1a:	4610      	mov	r0, r2
 800ea1c:	f7fe fb20 	bl	800d060 <vListInsertEnd>
 800ea20:	2301      	movs	r3, #1
 800ea22:	617b      	str	r3, [r7, #20]
 800ea24:	697b      	ldr	r3, [r7, #20]
 800ea26:	4618      	mov	r0, r3
 800ea28:	3718      	adds	r7, #24
 800ea2a:	46bd      	mov	sp, r7
 800ea2c:	bd80      	pop	{r7, pc}
 800ea2e:	bf00      	nop
 800ea30:	2000191c 	.word	0x2000191c
 800ea34:	20001920 	.word	0x20001920
 800ea38:	20001a24 	.word	0x20001a24

0800ea3c <vTaskPriorityDisinheritAfterTimeout>:
 800ea3c:	b580      	push	{r7, lr}
 800ea3e:	b088      	sub	sp, #32
 800ea40:	af00      	add	r7, sp, #0
 800ea42:	6078      	str	r0, [r7, #4]
 800ea44:	6039      	str	r1, [r7, #0]
 800ea46:	687b      	ldr	r3, [r7, #4]
 800ea48:	61bb      	str	r3, [r7, #24]
 800ea4a:	2301      	movs	r3, #1
 800ea4c:	617b      	str	r3, [r7, #20]
 800ea4e:	687b      	ldr	r3, [r7, #4]
 800ea50:	2b00      	cmp	r3, #0
 800ea52:	f000 8085 	beq.w	800eb60 <vTaskPriorityDisinheritAfterTimeout+0x124>
 800ea56:	69bb      	ldr	r3, [r7, #24]
 800ea58:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ea5a:	2b00      	cmp	r3, #0
 800ea5c:	d10b      	bne.n	800ea76 <vTaskPriorityDisinheritAfterTimeout+0x3a>
 800ea5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea62:	b672      	cpsid	i
 800ea64:	f383 8811 	msr	BASEPRI, r3
 800ea68:	f3bf 8f6f 	isb	sy
 800ea6c:	f3bf 8f4f 	dsb	sy
 800ea70:	b662      	cpsie	i
 800ea72:	60fb      	str	r3, [r7, #12]
 800ea74:	e7fe      	b.n	800ea74 <vTaskPriorityDisinheritAfterTimeout+0x38>
 800ea76:	69bb      	ldr	r3, [r7, #24]
 800ea78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ea7a:	683a      	ldr	r2, [r7, #0]
 800ea7c:	429a      	cmp	r2, r3
 800ea7e:	d902      	bls.n	800ea86 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800ea80:	683b      	ldr	r3, [r7, #0]
 800ea82:	61fb      	str	r3, [r7, #28]
 800ea84:	e002      	b.n	800ea8c <vTaskPriorityDisinheritAfterTimeout+0x50>
 800ea86:	69bb      	ldr	r3, [r7, #24]
 800ea88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ea8a:	61fb      	str	r3, [r7, #28]
 800ea8c:	69bb      	ldr	r3, [r7, #24]
 800ea8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ea90:	69fa      	ldr	r2, [r7, #28]
 800ea92:	429a      	cmp	r2, r3
 800ea94:	d064      	beq.n	800eb60 <vTaskPriorityDisinheritAfterTimeout+0x124>
 800ea96:	69bb      	ldr	r3, [r7, #24]
 800ea98:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ea9a:	697a      	ldr	r2, [r7, #20]
 800ea9c:	429a      	cmp	r2, r3
 800ea9e:	d15f      	bne.n	800eb60 <vTaskPriorityDisinheritAfterTimeout+0x124>
 800eaa0:	4b31      	ldr	r3, [pc, #196]	; (800eb68 <vTaskPriorityDisinheritAfterTimeout+0x12c>)
 800eaa2:	681b      	ldr	r3, [r3, #0]
 800eaa4:	69ba      	ldr	r2, [r7, #24]
 800eaa6:	429a      	cmp	r2, r3
 800eaa8:	d10b      	bne.n	800eac2 <vTaskPriorityDisinheritAfterTimeout+0x86>
 800eaaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eaae:	b672      	cpsid	i
 800eab0:	f383 8811 	msr	BASEPRI, r3
 800eab4:	f3bf 8f6f 	isb	sy
 800eab8:	f3bf 8f4f 	dsb	sy
 800eabc:	b662      	cpsie	i
 800eabe:	60bb      	str	r3, [r7, #8]
 800eac0:	e7fe      	b.n	800eac0 <vTaskPriorityDisinheritAfterTimeout+0x84>
 800eac2:	69bb      	ldr	r3, [r7, #24]
 800eac4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eac6:	613b      	str	r3, [r7, #16]
 800eac8:	69bb      	ldr	r3, [r7, #24]
 800eaca:	69fa      	ldr	r2, [r7, #28]
 800eacc:	62da      	str	r2, [r3, #44]	; 0x2c
 800eace:	69bb      	ldr	r3, [r7, #24]
 800ead0:	699b      	ldr	r3, [r3, #24]
 800ead2:	2b00      	cmp	r3, #0
 800ead4:	db04      	blt.n	800eae0 <vTaskPriorityDisinheritAfterTimeout+0xa4>
 800ead6:	69fb      	ldr	r3, [r7, #28]
 800ead8:	f1c3 0207 	rsb	r2, r3, #7
 800eadc:	69bb      	ldr	r3, [r7, #24]
 800eade:	619a      	str	r2, [r3, #24]
 800eae0:	69bb      	ldr	r3, [r7, #24]
 800eae2:	6959      	ldr	r1, [r3, #20]
 800eae4:	693a      	ldr	r2, [r7, #16]
 800eae6:	4613      	mov	r3, r2
 800eae8:	009b      	lsls	r3, r3, #2
 800eaea:	4413      	add	r3, r2
 800eaec:	009b      	lsls	r3, r3, #2
 800eaee:	4a1f      	ldr	r2, [pc, #124]	; (800eb6c <vTaskPriorityDisinheritAfterTimeout+0x130>)
 800eaf0:	4413      	add	r3, r2
 800eaf2:	4299      	cmp	r1, r3
 800eaf4:	d134      	bne.n	800eb60 <vTaskPriorityDisinheritAfterTimeout+0x124>
 800eaf6:	69bb      	ldr	r3, [r7, #24]
 800eaf8:	3304      	adds	r3, #4
 800eafa:	4618      	mov	r0, r3
 800eafc:	f7fe fb0d 	bl	800d11a <uxListRemove>
 800eb00:	4603      	mov	r3, r0
 800eb02:	2b00      	cmp	r3, #0
 800eb04:	d115      	bne.n	800eb32 <vTaskPriorityDisinheritAfterTimeout+0xf6>
 800eb06:	69bb      	ldr	r3, [r7, #24]
 800eb08:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800eb0a:	4918      	ldr	r1, [pc, #96]	; (800eb6c <vTaskPriorityDisinheritAfterTimeout+0x130>)
 800eb0c:	4613      	mov	r3, r2
 800eb0e:	009b      	lsls	r3, r3, #2
 800eb10:	4413      	add	r3, r2
 800eb12:	009b      	lsls	r3, r3, #2
 800eb14:	440b      	add	r3, r1
 800eb16:	681b      	ldr	r3, [r3, #0]
 800eb18:	2b00      	cmp	r3, #0
 800eb1a:	d10a      	bne.n	800eb32 <vTaskPriorityDisinheritAfterTimeout+0xf6>
 800eb1c:	69bb      	ldr	r3, [r7, #24]
 800eb1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb20:	2201      	movs	r2, #1
 800eb22:	fa02 f303 	lsl.w	r3, r2, r3
 800eb26:	43da      	mvns	r2, r3
 800eb28:	4b11      	ldr	r3, [pc, #68]	; (800eb70 <vTaskPriorityDisinheritAfterTimeout+0x134>)
 800eb2a:	681b      	ldr	r3, [r3, #0]
 800eb2c:	4013      	ands	r3, r2
 800eb2e:	4a10      	ldr	r2, [pc, #64]	; (800eb70 <vTaskPriorityDisinheritAfterTimeout+0x134>)
 800eb30:	6013      	str	r3, [r2, #0]
 800eb32:	69bb      	ldr	r3, [r7, #24]
 800eb34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb36:	2201      	movs	r2, #1
 800eb38:	409a      	lsls	r2, r3
 800eb3a:	4b0d      	ldr	r3, [pc, #52]	; (800eb70 <vTaskPriorityDisinheritAfterTimeout+0x134>)
 800eb3c:	681b      	ldr	r3, [r3, #0]
 800eb3e:	4313      	orrs	r3, r2
 800eb40:	4a0b      	ldr	r2, [pc, #44]	; (800eb70 <vTaskPriorityDisinheritAfterTimeout+0x134>)
 800eb42:	6013      	str	r3, [r2, #0]
 800eb44:	69bb      	ldr	r3, [r7, #24]
 800eb46:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800eb48:	4613      	mov	r3, r2
 800eb4a:	009b      	lsls	r3, r3, #2
 800eb4c:	4413      	add	r3, r2
 800eb4e:	009b      	lsls	r3, r3, #2
 800eb50:	4a06      	ldr	r2, [pc, #24]	; (800eb6c <vTaskPriorityDisinheritAfterTimeout+0x130>)
 800eb52:	441a      	add	r2, r3
 800eb54:	69bb      	ldr	r3, [r7, #24]
 800eb56:	3304      	adds	r3, #4
 800eb58:	4619      	mov	r1, r3
 800eb5a:	4610      	mov	r0, r2
 800eb5c:	f7fe fa80 	bl	800d060 <vListInsertEnd>
 800eb60:	bf00      	nop
 800eb62:	3720      	adds	r7, #32
 800eb64:	46bd      	mov	sp, r7
 800eb66:	bd80      	pop	{r7, pc}
 800eb68:	2000191c 	.word	0x2000191c
 800eb6c:	20001920 	.word	0x20001920
 800eb70:	20001a24 	.word	0x20001a24

0800eb74 <pvTaskIncrementMutexHeldCount>:
 800eb74:	b480      	push	{r7}
 800eb76:	af00      	add	r7, sp, #0
 800eb78:	4b07      	ldr	r3, [pc, #28]	; (800eb98 <pvTaskIncrementMutexHeldCount+0x24>)
 800eb7a:	681b      	ldr	r3, [r3, #0]
 800eb7c:	2b00      	cmp	r3, #0
 800eb7e:	d004      	beq.n	800eb8a <pvTaskIncrementMutexHeldCount+0x16>
 800eb80:	4b05      	ldr	r3, [pc, #20]	; (800eb98 <pvTaskIncrementMutexHeldCount+0x24>)
 800eb82:	681b      	ldr	r3, [r3, #0]
 800eb84:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800eb86:	3201      	adds	r2, #1
 800eb88:	649a      	str	r2, [r3, #72]	; 0x48
 800eb8a:	4b03      	ldr	r3, [pc, #12]	; (800eb98 <pvTaskIncrementMutexHeldCount+0x24>)
 800eb8c:	681b      	ldr	r3, [r3, #0]
 800eb8e:	4618      	mov	r0, r3
 800eb90:	46bd      	mov	sp, r7
 800eb92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb96:	4770      	bx	lr
 800eb98:	2000191c 	.word	0x2000191c

0800eb9c <prvAddCurrentTaskToDelayedList>:
 800eb9c:	b580      	push	{r7, lr}
 800eb9e:	b084      	sub	sp, #16
 800eba0:	af00      	add	r7, sp, #0
 800eba2:	6078      	str	r0, [r7, #4]
 800eba4:	6039      	str	r1, [r7, #0]
 800eba6:	4b29      	ldr	r3, [pc, #164]	; (800ec4c <prvAddCurrentTaskToDelayedList+0xb0>)
 800eba8:	681b      	ldr	r3, [r3, #0]
 800ebaa:	60fb      	str	r3, [r7, #12]
 800ebac:	4b28      	ldr	r3, [pc, #160]	; (800ec50 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ebae:	681b      	ldr	r3, [r3, #0]
 800ebb0:	3304      	adds	r3, #4
 800ebb2:	4618      	mov	r0, r3
 800ebb4:	f7fe fab1 	bl	800d11a <uxListRemove>
 800ebb8:	4603      	mov	r3, r0
 800ebba:	2b00      	cmp	r3, #0
 800ebbc:	d10b      	bne.n	800ebd6 <prvAddCurrentTaskToDelayedList+0x3a>
 800ebbe:	4b24      	ldr	r3, [pc, #144]	; (800ec50 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ebc0:	681b      	ldr	r3, [r3, #0]
 800ebc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebc4:	2201      	movs	r2, #1
 800ebc6:	fa02 f303 	lsl.w	r3, r2, r3
 800ebca:	43da      	mvns	r2, r3
 800ebcc:	4b21      	ldr	r3, [pc, #132]	; (800ec54 <prvAddCurrentTaskToDelayedList+0xb8>)
 800ebce:	681b      	ldr	r3, [r3, #0]
 800ebd0:	4013      	ands	r3, r2
 800ebd2:	4a20      	ldr	r2, [pc, #128]	; (800ec54 <prvAddCurrentTaskToDelayedList+0xb8>)
 800ebd4:	6013      	str	r3, [r2, #0]
 800ebd6:	687b      	ldr	r3, [r7, #4]
 800ebd8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ebdc:	d10a      	bne.n	800ebf4 <prvAddCurrentTaskToDelayedList+0x58>
 800ebde:	683b      	ldr	r3, [r7, #0]
 800ebe0:	2b00      	cmp	r3, #0
 800ebe2:	d007      	beq.n	800ebf4 <prvAddCurrentTaskToDelayedList+0x58>
 800ebe4:	4b1a      	ldr	r3, [pc, #104]	; (800ec50 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ebe6:	681b      	ldr	r3, [r3, #0]
 800ebe8:	3304      	adds	r3, #4
 800ebea:	4619      	mov	r1, r3
 800ebec:	481a      	ldr	r0, [pc, #104]	; (800ec58 <prvAddCurrentTaskToDelayedList+0xbc>)
 800ebee:	f7fe fa37 	bl	800d060 <vListInsertEnd>
 800ebf2:	e026      	b.n	800ec42 <prvAddCurrentTaskToDelayedList+0xa6>
 800ebf4:	68fa      	ldr	r2, [r7, #12]
 800ebf6:	687b      	ldr	r3, [r7, #4]
 800ebf8:	4413      	add	r3, r2
 800ebfa:	60bb      	str	r3, [r7, #8]
 800ebfc:	4b14      	ldr	r3, [pc, #80]	; (800ec50 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ebfe:	681b      	ldr	r3, [r3, #0]
 800ec00:	68ba      	ldr	r2, [r7, #8]
 800ec02:	605a      	str	r2, [r3, #4]
 800ec04:	68ba      	ldr	r2, [r7, #8]
 800ec06:	68fb      	ldr	r3, [r7, #12]
 800ec08:	429a      	cmp	r2, r3
 800ec0a:	d209      	bcs.n	800ec20 <prvAddCurrentTaskToDelayedList+0x84>
 800ec0c:	4b13      	ldr	r3, [pc, #76]	; (800ec5c <prvAddCurrentTaskToDelayedList+0xc0>)
 800ec0e:	681a      	ldr	r2, [r3, #0]
 800ec10:	4b0f      	ldr	r3, [pc, #60]	; (800ec50 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ec12:	681b      	ldr	r3, [r3, #0]
 800ec14:	3304      	adds	r3, #4
 800ec16:	4619      	mov	r1, r3
 800ec18:	4610      	mov	r0, r2
 800ec1a:	f7fe fa45 	bl	800d0a8 <vListInsert>
 800ec1e:	e010      	b.n	800ec42 <prvAddCurrentTaskToDelayedList+0xa6>
 800ec20:	4b0f      	ldr	r3, [pc, #60]	; (800ec60 <prvAddCurrentTaskToDelayedList+0xc4>)
 800ec22:	681a      	ldr	r2, [r3, #0]
 800ec24:	4b0a      	ldr	r3, [pc, #40]	; (800ec50 <prvAddCurrentTaskToDelayedList+0xb4>)
 800ec26:	681b      	ldr	r3, [r3, #0]
 800ec28:	3304      	adds	r3, #4
 800ec2a:	4619      	mov	r1, r3
 800ec2c:	4610      	mov	r0, r2
 800ec2e:	f7fe fa3b 	bl	800d0a8 <vListInsert>
 800ec32:	4b0c      	ldr	r3, [pc, #48]	; (800ec64 <prvAddCurrentTaskToDelayedList+0xc8>)
 800ec34:	681b      	ldr	r3, [r3, #0]
 800ec36:	68ba      	ldr	r2, [r7, #8]
 800ec38:	429a      	cmp	r2, r3
 800ec3a:	d202      	bcs.n	800ec42 <prvAddCurrentTaskToDelayedList+0xa6>
 800ec3c:	4a09      	ldr	r2, [pc, #36]	; (800ec64 <prvAddCurrentTaskToDelayedList+0xc8>)
 800ec3e:	68bb      	ldr	r3, [r7, #8]
 800ec40:	6013      	str	r3, [r2, #0]
 800ec42:	bf00      	nop
 800ec44:	3710      	adds	r7, #16
 800ec46:	46bd      	mov	sp, r7
 800ec48:	bd80      	pop	{r7, pc}
 800ec4a:	bf00      	nop
 800ec4c:	20001a20 	.word	0x20001a20
 800ec50:	2000191c 	.word	0x2000191c
 800ec54:	20001a24 	.word	0x20001a24
 800ec58:	20001a08 	.word	0x20001a08
 800ec5c:	200019d8 	.word	0x200019d8
 800ec60:	200019d4 	.word	0x200019d4
 800ec64:	20001a3c 	.word	0x20001a3c

0800ec68 <pxPortInitialiseStack>:
 800ec68:	b480      	push	{r7}
 800ec6a:	b085      	sub	sp, #20
 800ec6c:	af00      	add	r7, sp, #0
 800ec6e:	60f8      	str	r0, [r7, #12]
 800ec70:	60b9      	str	r1, [r7, #8]
 800ec72:	607a      	str	r2, [r7, #4]
 800ec74:	68fb      	ldr	r3, [r7, #12]
 800ec76:	3b04      	subs	r3, #4
 800ec78:	60fb      	str	r3, [r7, #12]
 800ec7a:	68fb      	ldr	r3, [r7, #12]
 800ec7c:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800ec80:	601a      	str	r2, [r3, #0]
 800ec82:	68fb      	ldr	r3, [r7, #12]
 800ec84:	3b04      	subs	r3, #4
 800ec86:	60fb      	str	r3, [r7, #12]
 800ec88:	68bb      	ldr	r3, [r7, #8]
 800ec8a:	f023 0201 	bic.w	r2, r3, #1
 800ec8e:	68fb      	ldr	r3, [r7, #12]
 800ec90:	601a      	str	r2, [r3, #0]
 800ec92:	68fb      	ldr	r3, [r7, #12]
 800ec94:	3b04      	subs	r3, #4
 800ec96:	60fb      	str	r3, [r7, #12]
 800ec98:	4a0c      	ldr	r2, [pc, #48]	; (800eccc <pxPortInitialiseStack+0x64>)
 800ec9a:	68fb      	ldr	r3, [r7, #12]
 800ec9c:	601a      	str	r2, [r3, #0]
 800ec9e:	68fb      	ldr	r3, [r7, #12]
 800eca0:	3b14      	subs	r3, #20
 800eca2:	60fb      	str	r3, [r7, #12]
 800eca4:	687a      	ldr	r2, [r7, #4]
 800eca6:	68fb      	ldr	r3, [r7, #12]
 800eca8:	601a      	str	r2, [r3, #0]
 800ecaa:	68fb      	ldr	r3, [r7, #12]
 800ecac:	3b04      	subs	r3, #4
 800ecae:	60fb      	str	r3, [r7, #12]
 800ecb0:	68fb      	ldr	r3, [r7, #12]
 800ecb2:	f06f 0202 	mvn.w	r2, #2
 800ecb6:	601a      	str	r2, [r3, #0]
 800ecb8:	68fb      	ldr	r3, [r7, #12]
 800ecba:	3b20      	subs	r3, #32
 800ecbc:	60fb      	str	r3, [r7, #12]
 800ecbe:	68fb      	ldr	r3, [r7, #12]
 800ecc0:	4618      	mov	r0, r3
 800ecc2:	3714      	adds	r7, #20
 800ecc4:	46bd      	mov	sp, r7
 800ecc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecca:	4770      	bx	lr
 800eccc:	0800ecd1 	.word	0x0800ecd1

0800ecd0 <prvTaskExitError>:
 800ecd0:	b480      	push	{r7}
 800ecd2:	b085      	sub	sp, #20
 800ecd4:	af00      	add	r7, sp, #0
 800ecd6:	2300      	movs	r3, #0
 800ecd8:	607b      	str	r3, [r7, #4]
 800ecda:	4b13      	ldr	r3, [pc, #76]	; (800ed28 <prvTaskExitError+0x58>)
 800ecdc:	681b      	ldr	r3, [r3, #0]
 800ecde:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ece2:	d00b      	beq.n	800ecfc <prvTaskExitError+0x2c>
 800ece4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ece8:	b672      	cpsid	i
 800ecea:	f383 8811 	msr	BASEPRI, r3
 800ecee:	f3bf 8f6f 	isb	sy
 800ecf2:	f3bf 8f4f 	dsb	sy
 800ecf6:	b662      	cpsie	i
 800ecf8:	60fb      	str	r3, [r7, #12]
 800ecfa:	e7fe      	b.n	800ecfa <prvTaskExitError+0x2a>
 800ecfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed00:	b672      	cpsid	i
 800ed02:	f383 8811 	msr	BASEPRI, r3
 800ed06:	f3bf 8f6f 	isb	sy
 800ed0a:	f3bf 8f4f 	dsb	sy
 800ed0e:	b662      	cpsie	i
 800ed10:	60bb      	str	r3, [r7, #8]
 800ed12:	bf00      	nop
 800ed14:	687b      	ldr	r3, [r7, #4]
 800ed16:	2b00      	cmp	r3, #0
 800ed18:	d0fc      	beq.n	800ed14 <prvTaskExitError+0x44>
 800ed1a:	bf00      	nop
 800ed1c:	3714      	adds	r7, #20
 800ed1e:	46bd      	mov	sp, r7
 800ed20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed24:	4770      	bx	lr
 800ed26:	bf00      	nop
 800ed28:	200013c0 	.word	0x200013c0
 800ed2c:	00000000 	.word	0x00000000

0800ed30 <SVC_Handler>:
 800ed30:	4b07      	ldr	r3, [pc, #28]	; (800ed50 <pxCurrentTCBConst2>)
 800ed32:	6819      	ldr	r1, [r3, #0]
 800ed34:	6808      	ldr	r0, [r1, #0]
 800ed36:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed3a:	f380 8809 	msr	PSP, r0
 800ed3e:	f3bf 8f6f 	isb	sy
 800ed42:	f04f 0000 	mov.w	r0, #0
 800ed46:	f380 8811 	msr	BASEPRI, r0
 800ed4a:	4770      	bx	lr
 800ed4c:	f3af 8000 	nop.w

0800ed50 <pxCurrentTCBConst2>:
 800ed50:	2000191c 	.word	0x2000191c
 800ed54:	bf00      	nop
 800ed56:	bf00      	nop

0800ed58 <prvPortStartFirstTask>:
 800ed58:	4808      	ldr	r0, [pc, #32]	; (800ed7c <prvPortStartFirstTask+0x24>)
 800ed5a:	6800      	ldr	r0, [r0, #0]
 800ed5c:	6800      	ldr	r0, [r0, #0]
 800ed5e:	f380 8808 	msr	MSP, r0
 800ed62:	f04f 0000 	mov.w	r0, #0
 800ed66:	f380 8814 	msr	CONTROL, r0
 800ed6a:	b662      	cpsie	i
 800ed6c:	b661      	cpsie	f
 800ed6e:	f3bf 8f4f 	dsb	sy
 800ed72:	f3bf 8f6f 	isb	sy
 800ed76:	df00      	svc	0
 800ed78:	bf00      	nop
 800ed7a:	bf00      	nop
 800ed7c:	e000ed08 	.word	0xe000ed08

0800ed80 <xPortStartScheduler>:
 800ed80:	b580      	push	{r7, lr}
 800ed82:	b084      	sub	sp, #16
 800ed84:	af00      	add	r7, sp, #0
 800ed86:	4b36      	ldr	r3, [pc, #216]	; (800ee60 <xPortStartScheduler+0xe0>)
 800ed88:	60fb      	str	r3, [r7, #12]
 800ed8a:	68fb      	ldr	r3, [r7, #12]
 800ed8c:	781b      	ldrb	r3, [r3, #0]
 800ed8e:	b2db      	uxtb	r3, r3
 800ed90:	607b      	str	r3, [r7, #4]
 800ed92:	68fb      	ldr	r3, [r7, #12]
 800ed94:	22ff      	movs	r2, #255	; 0xff
 800ed96:	701a      	strb	r2, [r3, #0]
 800ed98:	68fb      	ldr	r3, [r7, #12]
 800ed9a:	781b      	ldrb	r3, [r3, #0]
 800ed9c:	b2db      	uxtb	r3, r3
 800ed9e:	70fb      	strb	r3, [r7, #3]
 800eda0:	78fb      	ldrb	r3, [r7, #3]
 800eda2:	b2db      	uxtb	r3, r3
 800eda4:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800eda8:	b2da      	uxtb	r2, r3
 800edaa:	4b2e      	ldr	r3, [pc, #184]	; (800ee64 <xPortStartScheduler+0xe4>)
 800edac:	701a      	strb	r2, [r3, #0]
 800edae:	4b2e      	ldr	r3, [pc, #184]	; (800ee68 <xPortStartScheduler+0xe8>)
 800edb0:	2207      	movs	r2, #7
 800edb2:	601a      	str	r2, [r3, #0]
 800edb4:	e009      	b.n	800edca <xPortStartScheduler+0x4a>
 800edb6:	4b2c      	ldr	r3, [pc, #176]	; (800ee68 <xPortStartScheduler+0xe8>)
 800edb8:	681b      	ldr	r3, [r3, #0]
 800edba:	3b01      	subs	r3, #1
 800edbc:	4a2a      	ldr	r2, [pc, #168]	; (800ee68 <xPortStartScheduler+0xe8>)
 800edbe:	6013      	str	r3, [r2, #0]
 800edc0:	78fb      	ldrb	r3, [r7, #3]
 800edc2:	b2db      	uxtb	r3, r3
 800edc4:	005b      	lsls	r3, r3, #1
 800edc6:	b2db      	uxtb	r3, r3
 800edc8:	70fb      	strb	r3, [r7, #3]
 800edca:	78fb      	ldrb	r3, [r7, #3]
 800edcc:	b2db      	uxtb	r3, r3
 800edce:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800edd2:	2b80      	cmp	r3, #128	; 0x80
 800edd4:	d0ef      	beq.n	800edb6 <xPortStartScheduler+0x36>
 800edd6:	4b24      	ldr	r3, [pc, #144]	; (800ee68 <xPortStartScheduler+0xe8>)
 800edd8:	681b      	ldr	r3, [r3, #0]
 800edda:	f1c3 0307 	rsb	r3, r3, #7
 800edde:	2b04      	cmp	r3, #4
 800ede0:	d00b      	beq.n	800edfa <xPortStartScheduler+0x7a>
 800ede2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ede6:	b672      	cpsid	i
 800ede8:	f383 8811 	msr	BASEPRI, r3
 800edec:	f3bf 8f6f 	isb	sy
 800edf0:	f3bf 8f4f 	dsb	sy
 800edf4:	b662      	cpsie	i
 800edf6:	60bb      	str	r3, [r7, #8]
 800edf8:	e7fe      	b.n	800edf8 <xPortStartScheduler+0x78>
 800edfa:	4b1b      	ldr	r3, [pc, #108]	; (800ee68 <xPortStartScheduler+0xe8>)
 800edfc:	681b      	ldr	r3, [r3, #0]
 800edfe:	021b      	lsls	r3, r3, #8
 800ee00:	4a19      	ldr	r2, [pc, #100]	; (800ee68 <xPortStartScheduler+0xe8>)
 800ee02:	6013      	str	r3, [r2, #0]
 800ee04:	4b18      	ldr	r3, [pc, #96]	; (800ee68 <xPortStartScheduler+0xe8>)
 800ee06:	681b      	ldr	r3, [r3, #0]
 800ee08:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800ee0c:	4a16      	ldr	r2, [pc, #88]	; (800ee68 <xPortStartScheduler+0xe8>)
 800ee0e:	6013      	str	r3, [r2, #0]
 800ee10:	687b      	ldr	r3, [r7, #4]
 800ee12:	b2da      	uxtb	r2, r3
 800ee14:	68fb      	ldr	r3, [r7, #12]
 800ee16:	701a      	strb	r2, [r3, #0]
 800ee18:	4b14      	ldr	r3, [pc, #80]	; (800ee6c <xPortStartScheduler+0xec>)
 800ee1a:	681b      	ldr	r3, [r3, #0]
 800ee1c:	4a13      	ldr	r2, [pc, #76]	; (800ee6c <xPortStartScheduler+0xec>)
 800ee1e:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800ee22:	6013      	str	r3, [r2, #0]
 800ee24:	4b11      	ldr	r3, [pc, #68]	; (800ee6c <xPortStartScheduler+0xec>)
 800ee26:	681b      	ldr	r3, [r3, #0]
 800ee28:	4a10      	ldr	r2, [pc, #64]	; (800ee6c <xPortStartScheduler+0xec>)
 800ee2a:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800ee2e:	6013      	str	r3, [r2, #0]
 800ee30:	f000 f8d4 	bl	800efdc <vPortSetupTimerInterrupt>
 800ee34:	4b0e      	ldr	r3, [pc, #56]	; (800ee70 <xPortStartScheduler+0xf0>)
 800ee36:	2200      	movs	r2, #0
 800ee38:	601a      	str	r2, [r3, #0]
 800ee3a:	f000 f8f3 	bl	800f024 <vPortEnableVFP>
 800ee3e:	4b0d      	ldr	r3, [pc, #52]	; (800ee74 <xPortStartScheduler+0xf4>)
 800ee40:	681b      	ldr	r3, [r3, #0]
 800ee42:	4a0c      	ldr	r2, [pc, #48]	; (800ee74 <xPortStartScheduler+0xf4>)
 800ee44:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800ee48:	6013      	str	r3, [r2, #0]
 800ee4a:	f7ff ff85 	bl	800ed58 <prvPortStartFirstTask>
 800ee4e:	f7ff fa67 	bl	800e320 <vTaskSwitchContext>
 800ee52:	f7ff ff3d 	bl	800ecd0 <prvTaskExitError>
 800ee56:	2300      	movs	r3, #0
 800ee58:	4618      	mov	r0, r3
 800ee5a:	3710      	adds	r7, #16
 800ee5c:	46bd      	mov	sp, r7
 800ee5e:	bd80      	pop	{r7, pc}
 800ee60:	e000e400 	.word	0xe000e400
 800ee64:	20001a48 	.word	0x20001a48
 800ee68:	20001a4c 	.word	0x20001a4c
 800ee6c:	e000ed20 	.word	0xe000ed20
 800ee70:	200013c0 	.word	0x200013c0
 800ee74:	e000ef34 	.word	0xe000ef34

0800ee78 <vPortEnterCritical>:
 800ee78:	b480      	push	{r7}
 800ee7a:	b083      	sub	sp, #12
 800ee7c:	af00      	add	r7, sp, #0
 800ee7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee82:	b672      	cpsid	i
 800ee84:	f383 8811 	msr	BASEPRI, r3
 800ee88:	f3bf 8f6f 	isb	sy
 800ee8c:	f3bf 8f4f 	dsb	sy
 800ee90:	b662      	cpsie	i
 800ee92:	607b      	str	r3, [r7, #4]
 800ee94:	4b0f      	ldr	r3, [pc, #60]	; (800eed4 <vPortEnterCritical+0x5c>)
 800ee96:	681b      	ldr	r3, [r3, #0]
 800ee98:	3301      	adds	r3, #1
 800ee9a:	4a0e      	ldr	r2, [pc, #56]	; (800eed4 <vPortEnterCritical+0x5c>)
 800ee9c:	6013      	str	r3, [r2, #0]
 800ee9e:	4b0d      	ldr	r3, [pc, #52]	; (800eed4 <vPortEnterCritical+0x5c>)
 800eea0:	681b      	ldr	r3, [r3, #0]
 800eea2:	2b01      	cmp	r3, #1
 800eea4:	d110      	bne.n	800eec8 <vPortEnterCritical+0x50>
 800eea6:	4b0c      	ldr	r3, [pc, #48]	; (800eed8 <vPortEnterCritical+0x60>)
 800eea8:	681b      	ldr	r3, [r3, #0]
 800eeaa:	b2db      	uxtb	r3, r3
 800eeac:	2b00      	cmp	r3, #0
 800eeae:	d00b      	beq.n	800eec8 <vPortEnterCritical+0x50>
 800eeb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eeb4:	b672      	cpsid	i
 800eeb6:	f383 8811 	msr	BASEPRI, r3
 800eeba:	f3bf 8f6f 	isb	sy
 800eebe:	f3bf 8f4f 	dsb	sy
 800eec2:	b662      	cpsie	i
 800eec4:	603b      	str	r3, [r7, #0]
 800eec6:	e7fe      	b.n	800eec6 <vPortEnterCritical+0x4e>
 800eec8:	bf00      	nop
 800eeca:	370c      	adds	r7, #12
 800eecc:	46bd      	mov	sp, r7
 800eece:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eed2:	4770      	bx	lr
 800eed4:	200013c0 	.word	0x200013c0
 800eed8:	e000ed04 	.word	0xe000ed04

0800eedc <vPortExitCritical>:
 800eedc:	b480      	push	{r7}
 800eede:	b083      	sub	sp, #12
 800eee0:	af00      	add	r7, sp, #0
 800eee2:	4b12      	ldr	r3, [pc, #72]	; (800ef2c <vPortExitCritical+0x50>)
 800eee4:	681b      	ldr	r3, [r3, #0]
 800eee6:	2b00      	cmp	r3, #0
 800eee8:	d10b      	bne.n	800ef02 <vPortExitCritical+0x26>
 800eeea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eeee:	b672      	cpsid	i
 800eef0:	f383 8811 	msr	BASEPRI, r3
 800eef4:	f3bf 8f6f 	isb	sy
 800eef8:	f3bf 8f4f 	dsb	sy
 800eefc:	b662      	cpsie	i
 800eefe:	607b      	str	r3, [r7, #4]
 800ef00:	e7fe      	b.n	800ef00 <vPortExitCritical+0x24>
 800ef02:	4b0a      	ldr	r3, [pc, #40]	; (800ef2c <vPortExitCritical+0x50>)
 800ef04:	681b      	ldr	r3, [r3, #0]
 800ef06:	3b01      	subs	r3, #1
 800ef08:	4a08      	ldr	r2, [pc, #32]	; (800ef2c <vPortExitCritical+0x50>)
 800ef0a:	6013      	str	r3, [r2, #0]
 800ef0c:	4b07      	ldr	r3, [pc, #28]	; (800ef2c <vPortExitCritical+0x50>)
 800ef0e:	681b      	ldr	r3, [r3, #0]
 800ef10:	2b00      	cmp	r3, #0
 800ef12:	d104      	bne.n	800ef1e <vPortExitCritical+0x42>
 800ef14:	2300      	movs	r3, #0
 800ef16:	603b      	str	r3, [r7, #0]
 800ef18:	683b      	ldr	r3, [r7, #0]
 800ef1a:	f383 8811 	msr	BASEPRI, r3
 800ef1e:	bf00      	nop
 800ef20:	370c      	adds	r7, #12
 800ef22:	46bd      	mov	sp, r7
 800ef24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef28:	4770      	bx	lr
 800ef2a:	bf00      	nop
 800ef2c:	200013c0 	.word	0x200013c0

0800ef30 <PendSV_Handler>:
 800ef30:	f3ef 8009 	mrs	r0, PSP
 800ef34:	f3bf 8f6f 	isb	sy
 800ef38:	4b15      	ldr	r3, [pc, #84]	; (800ef90 <pxCurrentTCBConst>)
 800ef3a:	681a      	ldr	r2, [r3, #0]
 800ef3c:	f01e 0f10 	tst.w	lr, #16
 800ef40:	bf08      	it	eq
 800ef42:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800ef46:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef4a:	6010      	str	r0, [r2, #0]
 800ef4c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800ef50:	f04f 0050 	mov.w	r0, #80	; 0x50
 800ef54:	b672      	cpsid	i
 800ef56:	f380 8811 	msr	BASEPRI, r0
 800ef5a:	f3bf 8f4f 	dsb	sy
 800ef5e:	f3bf 8f6f 	isb	sy
 800ef62:	b662      	cpsie	i
 800ef64:	f7ff f9dc 	bl	800e320 <vTaskSwitchContext>
 800ef68:	f04f 0000 	mov.w	r0, #0
 800ef6c:	f380 8811 	msr	BASEPRI, r0
 800ef70:	bc09      	pop	{r0, r3}
 800ef72:	6819      	ldr	r1, [r3, #0]
 800ef74:	6808      	ldr	r0, [r1, #0]
 800ef76:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef7a:	f01e 0f10 	tst.w	lr, #16
 800ef7e:	bf08      	it	eq
 800ef80:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800ef84:	f380 8809 	msr	PSP, r0
 800ef88:	f3bf 8f6f 	isb	sy
 800ef8c:	4770      	bx	lr
 800ef8e:	bf00      	nop

0800ef90 <pxCurrentTCBConst>:
 800ef90:	2000191c 	.word	0x2000191c
 800ef94:	bf00      	nop
 800ef96:	bf00      	nop

0800ef98 <SysTick_Handler>:
 800ef98:	b580      	push	{r7, lr}
 800ef9a:	b082      	sub	sp, #8
 800ef9c:	af00      	add	r7, sp, #0
 800ef9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efa2:	b672      	cpsid	i
 800efa4:	f383 8811 	msr	BASEPRI, r3
 800efa8:	f3bf 8f6f 	isb	sy
 800efac:	f3bf 8f4f 	dsb	sy
 800efb0:	b662      	cpsie	i
 800efb2:	607b      	str	r3, [r7, #4]
 800efb4:	f7ff f8fa 	bl	800e1ac <xTaskIncrementTick>
 800efb8:	4603      	mov	r3, r0
 800efba:	2b00      	cmp	r3, #0
 800efbc:	d003      	beq.n	800efc6 <SysTick_Handler+0x2e>
 800efbe:	4b06      	ldr	r3, [pc, #24]	; (800efd8 <SysTick_Handler+0x40>)
 800efc0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800efc4:	601a      	str	r2, [r3, #0]
 800efc6:	2300      	movs	r3, #0
 800efc8:	603b      	str	r3, [r7, #0]
 800efca:	683b      	ldr	r3, [r7, #0]
 800efcc:	f383 8811 	msr	BASEPRI, r3
 800efd0:	bf00      	nop
 800efd2:	3708      	adds	r7, #8
 800efd4:	46bd      	mov	sp, r7
 800efd6:	bd80      	pop	{r7, pc}
 800efd8:	e000ed04 	.word	0xe000ed04

0800efdc <vPortSetupTimerInterrupt>:
 800efdc:	b480      	push	{r7}
 800efde:	af00      	add	r7, sp, #0
 800efe0:	4b0b      	ldr	r3, [pc, #44]	; (800f010 <vPortSetupTimerInterrupt+0x34>)
 800efe2:	2200      	movs	r2, #0
 800efe4:	601a      	str	r2, [r3, #0]
 800efe6:	4b0b      	ldr	r3, [pc, #44]	; (800f014 <vPortSetupTimerInterrupt+0x38>)
 800efe8:	2200      	movs	r2, #0
 800efea:	601a      	str	r2, [r3, #0]
 800efec:	4b0a      	ldr	r3, [pc, #40]	; (800f018 <vPortSetupTimerInterrupt+0x3c>)
 800efee:	681b      	ldr	r3, [r3, #0]
 800eff0:	4a0a      	ldr	r2, [pc, #40]	; (800f01c <vPortSetupTimerInterrupt+0x40>)
 800eff2:	fba2 2303 	umull	r2, r3, r2, r3
 800eff6:	099b      	lsrs	r3, r3, #6
 800eff8:	4a09      	ldr	r2, [pc, #36]	; (800f020 <vPortSetupTimerInterrupt+0x44>)
 800effa:	3b01      	subs	r3, #1
 800effc:	6013      	str	r3, [r2, #0]
 800effe:	4b04      	ldr	r3, [pc, #16]	; (800f010 <vPortSetupTimerInterrupt+0x34>)
 800f000:	2207      	movs	r2, #7
 800f002:	601a      	str	r2, [r3, #0]
 800f004:	bf00      	nop
 800f006:	46bd      	mov	sp, r7
 800f008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f00c:	4770      	bx	lr
 800f00e:	bf00      	nop
 800f010:	e000e010 	.word	0xe000e010
 800f014:	e000e018 	.word	0xe000e018
 800f018:	200013b4 	.word	0x200013b4
 800f01c:	10624dd3 	.word	0x10624dd3
 800f020:	e000e014 	.word	0xe000e014

0800f024 <vPortEnableVFP>:
 800f024:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800f034 <vPortEnableVFP+0x10>
 800f028:	6801      	ldr	r1, [r0, #0]
 800f02a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800f02e:	6001      	str	r1, [r0, #0]
 800f030:	4770      	bx	lr
 800f032:	bf00      	nop
 800f034:	e000ed88 	.word	0xe000ed88

0800f038 <pvPortMalloc>:
 800f038:	b580      	push	{r7, lr}
 800f03a:	b08a      	sub	sp, #40	; 0x28
 800f03c:	af00      	add	r7, sp, #0
 800f03e:	6078      	str	r0, [r7, #4]
 800f040:	2300      	movs	r3, #0
 800f042:	61fb      	str	r3, [r7, #28]
 800f044:	f7fe fff6 	bl	800e034 <vTaskSuspendAll>
 800f048:	4b5c      	ldr	r3, [pc, #368]	; (800f1bc <pvPortMalloc+0x184>)
 800f04a:	681b      	ldr	r3, [r3, #0]
 800f04c:	2b00      	cmp	r3, #0
 800f04e:	d101      	bne.n	800f054 <pvPortMalloc+0x1c>
 800f050:	f000 f91a 	bl	800f288 <prvHeapInit>
 800f054:	4b5a      	ldr	r3, [pc, #360]	; (800f1c0 <pvPortMalloc+0x188>)
 800f056:	681a      	ldr	r2, [r3, #0]
 800f058:	687b      	ldr	r3, [r7, #4]
 800f05a:	4013      	ands	r3, r2
 800f05c:	2b00      	cmp	r3, #0
 800f05e:	f040 8090 	bne.w	800f182 <pvPortMalloc+0x14a>
 800f062:	687b      	ldr	r3, [r7, #4]
 800f064:	2b00      	cmp	r3, #0
 800f066:	d01e      	beq.n	800f0a6 <pvPortMalloc+0x6e>
 800f068:	2208      	movs	r2, #8
 800f06a:	687b      	ldr	r3, [r7, #4]
 800f06c:	4413      	add	r3, r2
 800f06e:	607b      	str	r3, [r7, #4]
 800f070:	687b      	ldr	r3, [r7, #4]
 800f072:	f003 0307 	and.w	r3, r3, #7
 800f076:	2b00      	cmp	r3, #0
 800f078:	d015      	beq.n	800f0a6 <pvPortMalloc+0x6e>
 800f07a:	687b      	ldr	r3, [r7, #4]
 800f07c:	f023 0307 	bic.w	r3, r3, #7
 800f080:	3308      	adds	r3, #8
 800f082:	607b      	str	r3, [r7, #4]
 800f084:	687b      	ldr	r3, [r7, #4]
 800f086:	f003 0307 	and.w	r3, r3, #7
 800f08a:	2b00      	cmp	r3, #0
 800f08c:	d00b      	beq.n	800f0a6 <pvPortMalloc+0x6e>
 800f08e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f092:	b672      	cpsid	i
 800f094:	f383 8811 	msr	BASEPRI, r3
 800f098:	f3bf 8f6f 	isb	sy
 800f09c:	f3bf 8f4f 	dsb	sy
 800f0a0:	b662      	cpsie	i
 800f0a2:	617b      	str	r3, [r7, #20]
 800f0a4:	e7fe      	b.n	800f0a4 <pvPortMalloc+0x6c>
 800f0a6:	687b      	ldr	r3, [r7, #4]
 800f0a8:	2b00      	cmp	r3, #0
 800f0aa:	d06a      	beq.n	800f182 <pvPortMalloc+0x14a>
 800f0ac:	4b45      	ldr	r3, [pc, #276]	; (800f1c4 <pvPortMalloc+0x18c>)
 800f0ae:	681b      	ldr	r3, [r3, #0]
 800f0b0:	687a      	ldr	r2, [r7, #4]
 800f0b2:	429a      	cmp	r2, r3
 800f0b4:	d865      	bhi.n	800f182 <pvPortMalloc+0x14a>
 800f0b6:	4b44      	ldr	r3, [pc, #272]	; (800f1c8 <pvPortMalloc+0x190>)
 800f0b8:	623b      	str	r3, [r7, #32]
 800f0ba:	4b43      	ldr	r3, [pc, #268]	; (800f1c8 <pvPortMalloc+0x190>)
 800f0bc:	681b      	ldr	r3, [r3, #0]
 800f0be:	627b      	str	r3, [r7, #36]	; 0x24
 800f0c0:	e004      	b.n	800f0cc <pvPortMalloc+0x94>
 800f0c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0c4:	623b      	str	r3, [r7, #32]
 800f0c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0c8:	681b      	ldr	r3, [r3, #0]
 800f0ca:	627b      	str	r3, [r7, #36]	; 0x24
 800f0cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0ce:	685b      	ldr	r3, [r3, #4]
 800f0d0:	687a      	ldr	r2, [r7, #4]
 800f0d2:	429a      	cmp	r2, r3
 800f0d4:	d903      	bls.n	800f0de <pvPortMalloc+0xa6>
 800f0d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0d8:	681b      	ldr	r3, [r3, #0]
 800f0da:	2b00      	cmp	r3, #0
 800f0dc:	d1f1      	bne.n	800f0c2 <pvPortMalloc+0x8a>
 800f0de:	4b37      	ldr	r3, [pc, #220]	; (800f1bc <pvPortMalloc+0x184>)
 800f0e0:	681b      	ldr	r3, [r3, #0]
 800f0e2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800f0e4:	429a      	cmp	r2, r3
 800f0e6:	d04c      	beq.n	800f182 <pvPortMalloc+0x14a>
 800f0e8:	6a3b      	ldr	r3, [r7, #32]
 800f0ea:	681b      	ldr	r3, [r3, #0]
 800f0ec:	2208      	movs	r2, #8
 800f0ee:	4413      	add	r3, r2
 800f0f0:	61fb      	str	r3, [r7, #28]
 800f0f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0f4:	681a      	ldr	r2, [r3, #0]
 800f0f6:	6a3b      	ldr	r3, [r7, #32]
 800f0f8:	601a      	str	r2, [r3, #0]
 800f0fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f0fc:	685a      	ldr	r2, [r3, #4]
 800f0fe:	687b      	ldr	r3, [r7, #4]
 800f100:	1ad2      	subs	r2, r2, r3
 800f102:	2308      	movs	r3, #8
 800f104:	005b      	lsls	r3, r3, #1
 800f106:	429a      	cmp	r2, r3
 800f108:	d920      	bls.n	800f14c <pvPortMalloc+0x114>
 800f10a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800f10c:	687b      	ldr	r3, [r7, #4]
 800f10e:	4413      	add	r3, r2
 800f110:	61bb      	str	r3, [r7, #24]
 800f112:	69bb      	ldr	r3, [r7, #24]
 800f114:	f003 0307 	and.w	r3, r3, #7
 800f118:	2b00      	cmp	r3, #0
 800f11a:	d00b      	beq.n	800f134 <pvPortMalloc+0xfc>
 800f11c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f120:	b672      	cpsid	i
 800f122:	f383 8811 	msr	BASEPRI, r3
 800f126:	f3bf 8f6f 	isb	sy
 800f12a:	f3bf 8f4f 	dsb	sy
 800f12e:	b662      	cpsie	i
 800f130:	613b      	str	r3, [r7, #16]
 800f132:	e7fe      	b.n	800f132 <pvPortMalloc+0xfa>
 800f134:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f136:	685a      	ldr	r2, [r3, #4]
 800f138:	687b      	ldr	r3, [r7, #4]
 800f13a:	1ad2      	subs	r2, r2, r3
 800f13c:	69bb      	ldr	r3, [r7, #24]
 800f13e:	605a      	str	r2, [r3, #4]
 800f140:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f142:	687a      	ldr	r2, [r7, #4]
 800f144:	605a      	str	r2, [r3, #4]
 800f146:	69b8      	ldr	r0, [r7, #24]
 800f148:	f000 f900 	bl	800f34c <prvInsertBlockIntoFreeList>
 800f14c:	4b1d      	ldr	r3, [pc, #116]	; (800f1c4 <pvPortMalloc+0x18c>)
 800f14e:	681a      	ldr	r2, [r3, #0]
 800f150:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f152:	685b      	ldr	r3, [r3, #4]
 800f154:	1ad3      	subs	r3, r2, r3
 800f156:	4a1b      	ldr	r2, [pc, #108]	; (800f1c4 <pvPortMalloc+0x18c>)
 800f158:	6013      	str	r3, [r2, #0]
 800f15a:	4b1a      	ldr	r3, [pc, #104]	; (800f1c4 <pvPortMalloc+0x18c>)
 800f15c:	681a      	ldr	r2, [r3, #0]
 800f15e:	4b1b      	ldr	r3, [pc, #108]	; (800f1cc <pvPortMalloc+0x194>)
 800f160:	681b      	ldr	r3, [r3, #0]
 800f162:	429a      	cmp	r2, r3
 800f164:	d203      	bcs.n	800f16e <pvPortMalloc+0x136>
 800f166:	4b17      	ldr	r3, [pc, #92]	; (800f1c4 <pvPortMalloc+0x18c>)
 800f168:	681b      	ldr	r3, [r3, #0]
 800f16a:	4a18      	ldr	r2, [pc, #96]	; (800f1cc <pvPortMalloc+0x194>)
 800f16c:	6013      	str	r3, [r2, #0]
 800f16e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f170:	685a      	ldr	r2, [r3, #4]
 800f172:	4b13      	ldr	r3, [pc, #76]	; (800f1c0 <pvPortMalloc+0x188>)
 800f174:	681b      	ldr	r3, [r3, #0]
 800f176:	431a      	orrs	r2, r3
 800f178:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f17a:	605a      	str	r2, [r3, #4]
 800f17c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f17e:	2200      	movs	r2, #0
 800f180:	601a      	str	r2, [r3, #0]
 800f182:	f7fe ff65 	bl	800e050 <xTaskResumeAll>
 800f186:	69fb      	ldr	r3, [r7, #28]
 800f188:	2b00      	cmp	r3, #0
 800f18a:	d101      	bne.n	800f190 <pvPortMalloc+0x158>
 800f18c:	f7f1 fa22 	bl	80005d4 <vApplicationMallocFailedHook>
 800f190:	69fb      	ldr	r3, [r7, #28]
 800f192:	f003 0307 	and.w	r3, r3, #7
 800f196:	2b00      	cmp	r3, #0
 800f198:	d00b      	beq.n	800f1b2 <pvPortMalloc+0x17a>
 800f19a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f19e:	b672      	cpsid	i
 800f1a0:	f383 8811 	msr	BASEPRI, r3
 800f1a4:	f3bf 8f6f 	isb	sy
 800f1a8:	f3bf 8f4f 	dsb	sy
 800f1ac:	b662      	cpsie	i
 800f1ae:	60fb      	str	r3, [r7, #12]
 800f1b0:	e7fe      	b.n	800f1b0 <pvPortMalloc+0x178>
 800f1b2:	69fb      	ldr	r3, [r7, #28]
 800f1b4:	4618      	mov	r0, r3
 800f1b6:	3728      	adds	r7, #40	; 0x28
 800f1b8:	46bd      	mov	sp, r7
 800f1ba:	bd80      	pop	{r7, pc}
 800f1bc:	20009a58 	.word	0x20009a58
 800f1c0:	20009a64 	.word	0x20009a64
 800f1c4:	20009a5c 	.word	0x20009a5c
 800f1c8:	20009a50 	.word	0x20009a50
 800f1cc:	20009a60 	.word	0x20009a60

0800f1d0 <vPortFree>:
 800f1d0:	b580      	push	{r7, lr}
 800f1d2:	b086      	sub	sp, #24
 800f1d4:	af00      	add	r7, sp, #0
 800f1d6:	6078      	str	r0, [r7, #4]
 800f1d8:	687b      	ldr	r3, [r7, #4]
 800f1da:	617b      	str	r3, [r7, #20]
 800f1dc:	687b      	ldr	r3, [r7, #4]
 800f1de:	2b00      	cmp	r3, #0
 800f1e0:	d04a      	beq.n	800f278 <vPortFree+0xa8>
 800f1e2:	2308      	movs	r3, #8
 800f1e4:	425b      	negs	r3, r3
 800f1e6:	697a      	ldr	r2, [r7, #20]
 800f1e8:	4413      	add	r3, r2
 800f1ea:	617b      	str	r3, [r7, #20]
 800f1ec:	697b      	ldr	r3, [r7, #20]
 800f1ee:	613b      	str	r3, [r7, #16]
 800f1f0:	693b      	ldr	r3, [r7, #16]
 800f1f2:	685a      	ldr	r2, [r3, #4]
 800f1f4:	4b22      	ldr	r3, [pc, #136]	; (800f280 <vPortFree+0xb0>)
 800f1f6:	681b      	ldr	r3, [r3, #0]
 800f1f8:	4013      	ands	r3, r2
 800f1fa:	2b00      	cmp	r3, #0
 800f1fc:	d10b      	bne.n	800f216 <vPortFree+0x46>
 800f1fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f202:	b672      	cpsid	i
 800f204:	f383 8811 	msr	BASEPRI, r3
 800f208:	f3bf 8f6f 	isb	sy
 800f20c:	f3bf 8f4f 	dsb	sy
 800f210:	b662      	cpsie	i
 800f212:	60fb      	str	r3, [r7, #12]
 800f214:	e7fe      	b.n	800f214 <vPortFree+0x44>
 800f216:	693b      	ldr	r3, [r7, #16]
 800f218:	681b      	ldr	r3, [r3, #0]
 800f21a:	2b00      	cmp	r3, #0
 800f21c:	d00b      	beq.n	800f236 <vPortFree+0x66>
 800f21e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f222:	b672      	cpsid	i
 800f224:	f383 8811 	msr	BASEPRI, r3
 800f228:	f3bf 8f6f 	isb	sy
 800f22c:	f3bf 8f4f 	dsb	sy
 800f230:	b662      	cpsie	i
 800f232:	60bb      	str	r3, [r7, #8]
 800f234:	e7fe      	b.n	800f234 <vPortFree+0x64>
 800f236:	693b      	ldr	r3, [r7, #16]
 800f238:	685a      	ldr	r2, [r3, #4]
 800f23a:	4b11      	ldr	r3, [pc, #68]	; (800f280 <vPortFree+0xb0>)
 800f23c:	681b      	ldr	r3, [r3, #0]
 800f23e:	4013      	ands	r3, r2
 800f240:	2b00      	cmp	r3, #0
 800f242:	d019      	beq.n	800f278 <vPortFree+0xa8>
 800f244:	693b      	ldr	r3, [r7, #16]
 800f246:	681b      	ldr	r3, [r3, #0]
 800f248:	2b00      	cmp	r3, #0
 800f24a:	d115      	bne.n	800f278 <vPortFree+0xa8>
 800f24c:	693b      	ldr	r3, [r7, #16]
 800f24e:	685a      	ldr	r2, [r3, #4]
 800f250:	4b0b      	ldr	r3, [pc, #44]	; (800f280 <vPortFree+0xb0>)
 800f252:	681b      	ldr	r3, [r3, #0]
 800f254:	43db      	mvns	r3, r3
 800f256:	401a      	ands	r2, r3
 800f258:	693b      	ldr	r3, [r7, #16]
 800f25a:	605a      	str	r2, [r3, #4]
 800f25c:	f7fe feea 	bl	800e034 <vTaskSuspendAll>
 800f260:	693b      	ldr	r3, [r7, #16]
 800f262:	685a      	ldr	r2, [r3, #4]
 800f264:	4b07      	ldr	r3, [pc, #28]	; (800f284 <vPortFree+0xb4>)
 800f266:	681b      	ldr	r3, [r3, #0]
 800f268:	4413      	add	r3, r2
 800f26a:	4a06      	ldr	r2, [pc, #24]	; (800f284 <vPortFree+0xb4>)
 800f26c:	6013      	str	r3, [r2, #0]
 800f26e:	6938      	ldr	r0, [r7, #16]
 800f270:	f000 f86c 	bl	800f34c <prvInsertBlockIntoFreeList>
 800f274:	f7fe feec 	bl	800e050 <xTaskResumeAll>
 800f278:	bf00      	nop
 800f27a:	3718      	adds	r7, #24
 800f27c:	46bd      	mov	sp, r7
 800f27e:	bd80      	pop	{r7, pc}
 800f280:	20009a64 	.word	0x20009a64
 800f284:	20009a5c 	.word	0x20009a5c

0800f288 <prvHeapInit>:
 800f288:	b480      	push	{r7}
 800f28a:	b085      	sub	sp, #20
 800f28c:	af00      	add	r7, sp, #0
 800f28e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f292:	60bb      	str	r3, [r7, #8]
 800f294:	4b27      	ldr	r3, [pc, #156]	; (800f334 <prvHeapInit+0xac>)
 800f296:	60fb      	str	r3, [r7, #12]
 800f298:	68fb      	ldr	r3, [r7, #12]
 800f29a:	f003 0307 	and.w	r3, r3, #7
 800f29e:	2b00      	cmp	r3, #0
 800f2a0:	d00c      	beq.n	800f2bc <prvHeapInit+0x34>
 800f2a2:	68fb      	ldr	r3, [r7, #12]
 800f2a4:	3307      	adds	r3, #7
 800f2a6:	60fb      	str	r3, [r7, #12]
 800f2a8:	68fb      	ldr	r3, [r7, #12]
 800f2aa:	f023 0307 	bic.w	r3, r3, #7
 800f2ae:	60fb      	str	r3, [r7, #12]
 800f2b0:	68ba      	ldr	r2, [r7, #8]
 800f2b2:	68fb      	ldr	r3, [r7, #12]
 800f2b4:	1ad3      	subs	r3, r2, r3
 800f2b6:	4a1f      	ldr	r2, [pc, #124]	; (800f334 <prvHeapInit+0xac>)
 800f2b8:	4413      	add	r3, r2
 800f2ba:	60bb      	str	r3, [r7, #8]
 800f2bc:	68fb      	ldr	r3, [r7, #12]
 800f2be:	607b      	str	r3, [r7, #4]
 800f2c0:	4a1d      	ldr	r2, [pc, #116]	; (800f338 <prvHeapInit+0xb0>)
 800f2c2:	687b      	ldr	r3, [r7, #4]
 800f2c4:	6013      	str	r3, [r2, #0]
 800f2c6:	4b1c      	ldr	r3, [pc, #112]	; (800f338 <prvHeapInit+0xb0>)
 800f2c8:	2200      	movs	r2, #0
 800f2ca:	605a      	str	r2, [r3, #4]
 800f2cc:	687b      	ldr	r3, [r7, #4]
 800f2ce:	68ba      	ldr	r2, [r7, #8]
 800f2d0:	4413      	add	r3, r2
 800f2d2:	60fb      	str	r3, [r7, #12]
 800f2d4:	2208      	movs	r2, #8
 800f2d6:	68fb      	ldr	r3, [r7, #12]
 800f2d8:	1a9b      	subs	r3, r3, r2
 800f2da:	60fb      	str	r3, [r7, #12]
 800f2dc:	68fb      	ldr	r3, [r7, #12]
 800f2de:	f023 0307 	bic.w	r3, r3, #7
 800f2e2:	60fb      	str	r3, [r7, #12]
 800f2e4:	68fb      	ldr	r3, [r7, #12]
 800f2e6:	4a15      	ldr	r2, [pc, #84]	; (800f33c <prvHeapInit+0xb4>)
 800f2e8:	6013      	str	r3, [r2, #0]
 800f2ea:	4b14      	ldr	r3, [pc, #80]	; (800f33c <prvHeapInit+0xb4>)
 800f2ec:	681b      	ldr	r3, [r3, #0]
 800f2ee:	2200      	movs	r2, #0
 800f2f0:	605a      	str	r2, [r3, #4]
 800f2f2:	4b12      	ldr	r3, [pc, #72]	; (800f33c <prvHeapInit+0xb4>)
 800f2f4:	681b      	ldr	r3, [r3, #0]
 800f2f6:	2200      	movs	r2, #0
 800f2f8:	601a      	str	r2, [r3, #0]
 800f2fa:	687b      	ldr	r3, [r7, #4]
 800f2fc:	603b      	str	r3, [r7, #0]
 800f2fe:	683b      	ldr	r3, [r7, #0]
 800f300:	68fa      	ldr	r2, [r7, #12]
 800f302:	1ad2      	subs	r2, r2, r3
 800f304:	683b      	ldr	r3, [r7, #0]
 800f306:	605a      	str	r2, [r3, #4]
 800f308:	4b0c      	ldr	r3, [pc, #48]	; (800f33c <prvHeapInit+0xb4>)
 800f30a:	681a      	ldr	r2, [r3, #0]
 800f30c:	683b      	ldr	r3, [r7, #0]
 800f30e:	601a      	str	r2, [r3, #0]
 800f310:	683b      	ldr	r3, [r7, #0]
 800f312:	685b      	ldr	r3, [r3, #4]
 800f314:	4a0a      	ldr	r2, [pc, #40]	; (800f340 <prvHeapInit+0xb8>)
 800f316:	6013      	str	r3, [r2, #0]
 800f318:	683b      	ldr	r3, [r7, #0]
 800f31a:	685b      	ldr	r3, [r3, #4]
 800f31c:	4a09      	ldr	r2, [pc, #36]	; (800f344 <prvHeapInit+0xbc>)
 800f31e:	6013      	str	r3, [r2, #0]
 800f320:	4b09      	ldr	r3, [pc, #36]	; (800f348 <prvHeapInit+0xc0>)
 800f322:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 800f326:	601a      	str	r2, [r3, #0]
 800f328:	bf00      	nop
 800f32a:	3714      	adds	r7, #20
 800f32c:	46bd      	mov	sp, r7
 800f32e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f332:	4770      	bx	lr
 800f334:	20001a50 	.word	0x20001a50
 800f338:	20009a50 	.word	0x20009a50
 800f33c:	20009a58 	.word	0x20009a58
 800f340:	20009a60 	.word	0x20009a60
 800f344:	20009a5c 	.word	0x20009a5c
 800f348:	20009a64 	.word	0x20009a64

0800f34c <prvInsertBlockIntoFreeList>:
 800f34c:	b480      	push	{r7}
 800f34e:	b085      	sub	sp, #20
 800f350:	af00      	add	r7, sp, #0
 800f352:	6078      	str	r0, [r7, #4]
 800f354:	4b28      	ldr	r3, [pc, #160]	; (800f3f8 <prvInsertBlockIntoFreeList+0xac>)
 800f356:	60fb      	str	r3, [r7, #12]
 800f358:	e002      	b.n	800f360 <prvInsertBlockIntoFreeList+0x14>
 800f35a:	68fb      	ldr	r3, [r7, #12]
 800f35c:	681b      	ldr	r3, [r3, #0]
 800f35e:	60fb      	str	r3, [r7, #12]
 800f360:	68fb      	ldr	r3, [r7, #12]
 800f362:	681b      	ldr	r3, [r3, #0]
 800f364:	687a      	ldr	r2, [r7, #4]
 800f366:	429a      	cmp	r2, r3
 800f368:	d8f7      	bhi.n	800f35a <prvInsertBlockIntoFreeList+0xe>
 800f36a:	68fb      	ldr	r3, [r7, #12]
 800f36c:	60bb      	str	r3, [r7, #8]
 800f36e:	68fb      	ldr	r3, [r7, #12]
 800f370:	685b      	ldr	r3, [r3, #4]
 800f372:	68ba      	ldr	r2, [r7, #8]
 800f374:	4413      	add	r3, r2
 800f376:	687a      	ldr	r2, [r7, #4]
 800f378:	429a      	cmp	r2, r3
 800f37a:	d108      	bne.n	800f38e <prvInsertBlockIntoFreeList+0x42>
 800f37c:	68fb      	ldr	r3, [r7, #12]
 800f37e:	685a      	ldr	r2, [r3, #4]
 800f380:	687b      	ldr	r3, [r7, #4]
 800f382:	685b      	ldr	r3, [r3, #4]
 800f384:	441a      	add	r2, r3
 800f386:	68fb      	ldr	r3, [r7, #12]
 800f388:	605a      	str	r2, [r3, #4]
 800f38a:	68fb      	ldr	r3, [r7, #12]
 800f38c:	607b      	str	r3, [r7, #4]
 800f38e:	687b      	ldr	r3, [r7, #4]
 800f390:	60bb      	str	r3, [r7, #8]
 800f392:	687b      	ldr	r3, [r7, #4]
 800f394:	685b      	ldr	r3, [r3, #4]
 800f396:	68ba      	ldr	r2, [r7, #8]
 800f398:	441a      	add	r2, r3
 800f39a:	68fb      	ldr	r3, [r7, #12]
 800f39c:	681b      	ldr	r3, [r3, #0]
 800f39e:	429a      	cmp	r2, r3
 800f3a0:	d118      	bne.n	800f3d4 <prvInsertBlockIntoFreeList+0x88>
 800f3a2:	68fb      	ldr	r3, [r7, #12]
 800f3a4:	681a      	ldr	r2, [r3, #0]
 800f3a6:	4b15      	ldr	r3, [pc, #84]	; (800f3fc <prvInsertBlockIntoFreeList+0xb0>)
 800f3a8:	681b      	ldr	r3, [r3, #0]
 800f3aa:	429a      	cmp	r2, r3
 800f3ac:	d00d      	beq.n	800f3ca <prvInsertBlockIntoFreeList+0x7e>
 800f3ae:	687b      	ldr	r3, [r7, #4]
 800f3b0:	685a      	ldr	r2, [r3, #4]
 800f3b2:	68fb      	ldr	r3, [r7, #12]
 800f3b4:	681b      	ldr	r3, [r3, #0]
 800f3b6:	685b      	ldr	r3, [r3, #4]
 800f3b8:	441a      	add	r2, r3
 800f3ba:	687b      	ldr	r3, [r7, #4]
 800f3bc:	605a      	str	r2, [r3, #4]
 800f3be:	68fb      	ldr	r3, [r7, #12]
 800f3c0:	681b      	ldr	r3, [r3, #0]
 800f3c2:	681a      	ldr	r2, [r3, #0]
 800f3c4:	687b      	ldr	r3, [r7, #4]
 800f3c6:	601a      	str	r2, [r3, #0]
 800f3c8:	e008      	b.n	800f3dc <prvInsertBlockIntoFreeList+0x90>
 800f3ca:	4b0c      	ldr	r3, [pc, #48]	; (800f3fc <prvInsertBlockIntoFreeList+0xb0>)
 800f3cc:	681a      	ldr	r2, [r3, #0]
 800f3ce:	687b      	ldr	r3, [r7, #4]
 800f3d0:	601a      	str	r2, [r3, #0]
 800f3d2:	e003      	b.n	800f3dc <prvInsertBlockIntoFreeList+0x90>
 800f3d4:	68fb      	ldr	r3, [r7, #12]
 800f3d6:	681a      	ldr	r2, [r3, #0]
 800f3d8:	687b      	ldr	r3, [r7, #4]
 800f3da:	601a      	str	r2, [r3, #0]
 800f3dc:	68fa      	ldr	r2, [r7, #12]
 800f3de:	687b      	ldr	r3, [r7, #4]
 800f3e0:	429a      	cmp	r2, r3
 800f3e2:	d002      	beq.n	800f3ea <prvInsertBlockIntoFreeList+0x9e>
 800f3e4:	68fb      	ldr	r3, [r7, #12]
 800f3e6:	687a      	ldr	r2, [r7, #4]
 800f3e8:	601a      	str	r2, [r3, #0]
 800f3ea:	bf00      	nop
 800f3ec:	3714      	adds	r7, #20
 800f3ee:	46bd      	mov	sp, r7
 800f3f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3f4:	4770      	bx	lr
 800f3f6:	bf00      	nop
 800f3f8:	20009a50 	.word	0x20009a50
 800f3fc:	20009a58 	.word	0x20009a58

0800f400 <__errno>:
 800f400:	4b01      	ldr	r3, [pc, #4]	; (800f408 <__errno+0x8>)
 800f402:	6818      	ldr	r0, [r3, #0]
 800f404:	4770      	bx	lr
 800f406:	bf00      	nop
 800f408:	200013c4 	.word	0x200013c4

0800f40c <__libc_init_array>:
 800f40c:	b570      	push	{r4, r5, r6, lr}
 800f40e:	4e0d      	ldr	r6, [pc, #52]	; (800f444 <__libc_init_array+0x38>)
 800f410:	4c0d      	ldr	r4, [pc, #52]	; (800f448 <__libc_init_array+0x3c>)
 800f412:	1ba4      	subs	r4, r4, r6
 800f414:	10a4      	asrs	r4, r4, #2
 800f416:	2500      	movs	r5, #0
 800f418:	42a5      	cmp	r5, r4
 800f41a:	d109      	bne.n	800f430 <__libc_init_array+0x24>
 800f41c:	4e0b      	ldr	r6, [pc, #44]	; (800f44c <__libc_init_array+0x40>)
 800f41e:	4c0c      	ldr	r4, [pc, #48]	; (800f450 <__libc_init_array+0x44>)
 800f420:	f000 fc28 	bl	800fc74 <_init>
 800f424:	1ba4      	subs	r4, r4, r6
 800f426:	10a4      	asrs	r4, r4, #2
 800f428:	2500      	movs	r5, #0
 800f42a:	42a5      	cmp	r5, r4
 800f42c:	d105      	bne.n	800f43a <__libc_init_array+0x2e>
 800f42e:	bd70      	pop	{r4, r5, r6, pc}
 800f430:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800f434:	4798      	blx	r3
 800f436:	3501      	adds	r5, #1
 800f438:	e7ee      	b.n	800f418 <__libc_init_array+0xc>
 800f43a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800f43e:	4798      	blx	r3
 800f440:	3501      	adds	r5, #1
 800f442:	e7f2      	b.n	800f42a <__libc_init_array+0x1e>
 800f444:	08011dec 	.word	0x08011dec
 800f448:	08011dec 	.word	0x08011dec
 800f44c:	08011dec 	.word	0x08011dec
 800f450:	08011df0 	.word	0x08011df0

0800f454 <memcpy>:
 800f454:	b510      	push	{r4, lr}
 800f456:	1e43      	subs	r3, r0, #1
 800f458:	440a      	add	r2, r1
 800f45a:	4291      	cmp	r1, r2
 800f45c:	d100      	bne.n	800f460 <memcpy+0xc>
 800f45e:	bd10      	pop	{r4, pc}
 800f460:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f464:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f468:	e7f7      	b.n	800f45a <memcpy+0x6>

0800f46a <memset>:
 800f46a:	4402      	add	r2, r0
 800f46c:	4603      	mov	r3, r0
 800f46e:	4293      	cmp	r3, r2
 800f470:	d100      	bne.n	800f474 <memset+0xa>
 800f472:	4770      	bx	lr
 800f474:	f803 1b01 	strb.w	r1, [r3], #1
 800f478:	e7f9      	b.n	800f46e <memset+0x4>
	...

0800f47c <siprintf>:
 800f47c:	b40e      	push	{r1, r2, r3}
 800f47e:	b500      	push	{lr}
 800f480:	b09c      	sub	sp, #112	; 0x70
 800f482:	ab1d      	add	r3, sp, #116	; 0x74
 800f484:	9002      	str	r0, [sp, #8]
 800f486:	9006      	str	r0, [sp, #24]
 800f488:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800f48c:	4809      	ldr	r0, [pc, #36]	; (800f4b4 <siprintf+0x38>)
 800f48e:	9107      	str	r1, [sp, #28]
 800f490:	9104      	str	r1, [sp, #16]
 800f492:	4909      	ldr	r1, [pc, #36]	; (800f4b8 <siprintf+0x3c>)
 800f494:	f853 2b04 	ldr.w	r2, [r3], #4
 800f498:	9105      	str	r1, [sp, #20]
 800f49a:	6800      	ldr	r0, [r0, #0]
 800f49c:	9301      	str	r3, [sp, #4]
 800f49e:	a902      	add	r1, sp, #8
 800f4a0:	f000 f866 	bl	800f570 <_svfiprintf_r>
 800f4a4:	9b02      	ldr	r3, [sp, #8]
 800f4a6:	2200      	movs	r2, #0
 800f4a8:	701a      	strb	r2, [r3, #0]
 800f4aa:	b01c      	add	sp, #112	; 0x70
 800f4ac:	f85d eb04 	ldr.w	lr, [sp], #4
 800f4b0:	b003      	add	sp, #12
 800f4b2:	4770      	bx	lr
 800f4b4:	200013c4 	.word	0x200013c4
 800f4b8:	ffff0208 	.word	0xffff0208

0800f4bc <__ssputs_r>:
 800f4bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f4c0:	688e      	ldr	r6, [r1, #8]
 800f4c2:	429e      	cmp	r6, r3
 800f4c4:	4682      	mov	sl, r0
 800f4c6:	460c      	mov	r4, r1
 800f4c8:	4690      	mov	r8, r2
 800f4ca:	4699      	mov	r9, r3
 800f4cc:	d837      	bhi.n	800f53e <__ssputs_r+0x82>
 800f4ce:	898a      	ldrh	r2, [r1, #12]
 800f4d0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800f4d4:	d031      	beq.n	800f53a <__ssputs_r+0x7e>
 800f4d6:	6825      	ldr	r5, [r4, #0]
 800f4d8:	6909      	ldr	r1, [r1, #16]
 800f4da:	1a6f      	subs	r7, r5, r1
 800f4dc:	6965      	ldr	r5, [r4, #20]
 800f4de:	2302      	movs	r3, #2
 800f4e0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800f4e4:	fb95 f5f3 	sdiv	r5, r5, r3
 800f4e8:	f109 0301 	add.w	r3, r9, #1
 800f4ec:	443b      	add	r3, r7
 800f4ee:	429d      	cmp	r5, r3
 800f4f0:	bf38      	it	cc
 800f4f2:	461d      	movcc	r5, r3
 800f4f4:	0553      	lsls	r3, r2, #21
 800f4f6:	d530      	bpl.n	800f55a <__ssputs_r+0x9e>
 800f4f8:	4629      	mov	r1, r5
 800f4fa:	f000 fb21 	bl	800fb40 <_malloc_r>
 800f4fe:	4606      	mov	r6, r0
 800f500:	b950      	cbnz	r0, 800f518 <__ssputs_r+0x5c>
 800f502:	230c      	movs	r3, #12
 800f504:	f8ca 3000 	str.w	r3, [sl]
 800f508:	89a3      	ldrh	r3, [r4, #12]
 800f50a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f50e:	81a3      	strh	r3, [r4, #12]
 800f510:	f04f 30ff 	mov.w	r0, #4294967295
 800f514:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f518:	463a      	mov	r2, r7
 800f51a:	6921      	ldr	r1, [r4, #16]
 800f51c:	f7ff ff9a 	bl	800f454 <memcpy>
 800f520:	89a3      	ldrh	r3, [r4, #12]
 800f522:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800f526:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f52a:	81a3      	strh	r3, [r4, #12]
 800f52c:	6126      	str	r6, [r4, #16]
 800f52e:	6165      	str	r5, [r4, #20]
 800f530:	443e      	add	r6, r7
 800f532:	1bed      	subs	r5, r5, r7
 800f534:	6026      	str	r6, [r4, #0]
 800f536:	60a5      	str	r5, [r4, #8]
 800f538:	464e      	mov	r6, r9
 800f53a:	454e      	cmp	r6, r9
 800f53c:	d900      	bls.n	800f540 <__ssputs_r+0x84>
 800f53e:	464e      	mov	r6, r9
 800f540:	4632      	mov	r2, r6
 800f542:	4641      	mov	r1, r8
 800f544:	6820      	ldr	r0, [r4, #0]
 800f546:	f000 fa93 	bl	800fa70 <memmove>
 800f54a:	68a3      	ldr	r3, [r4, #8]
 800f54c:	1b9b      	subs	r3, r3, r6
 800f54e:	60a3      	str	r3, [r4, #8]
 800f550:	6823      	ldr	r3, [r4, #0]
 800f552:	441e      	add	r6, r3
 800f554:	6026      	str	r6, [r4, #0]
 800f556:	2000      	movs	r0, #0
 800f558:	e7dc      	b.n	800f514 <__ssputs_r+0x58>
 800f55a:	462a      	mov	r2, r5
 800f55c:	f000 fb4a 	bl	800fbf4 <_realloc_r>
 800f560:	4606      	mov	r6, r0
 800f562:	2800      	cmp	r0, #0
 800f564:	d1e2      	bne.n	800f52c <__ssputs_r+0x70>
 800f566:	6921      	ldr	r1, [r4, #16]
 800f568:	4650      	mov	r0, sl
 800f56a:	f000 fa9b 	bl	800faa4 <_free_r>
 800f56e:	e7c8      	b.n	800f502 <__ssputs_r+0x46>

0800f570 <_svfiprintf_r>:
 800f570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f574:	461d      	mov	r5, r3
 800f576:	898b      	ldrh	r3, [r1, #12]
 800f578:	061f      	lsls	r7, r3, #24
 800f57a:	b09d      	sub	sp, #116	; 0x74
 800f57c:	4680      	mov	r8, r0
 800f57e:	460c      	mov	r4, r1
 800f580:	4616      	mov	r6, r2
 800f582:	d50f      	bpl.n	800f5a4 <_svfiprintf_r+0x34>
 800f584:	690b      	ldr	r3, [r1, #16]
 800f586:	b96b      	cbnz	r3, 800f5a4 <_svfiprintf_r+0x34>
 800f588:	2140      	movs	r1, #64	; 0x40
 800f58a:	f000 fad9 	bl	800fb40 <_malloc_r>
 800f58e:	6020      	str	r0, [r4, #0]
 800f590:	6120      	str	r0, [r4, #16]
 800f592:	b928      	cbnz	r0, 800f5a0 <_svfiprintf_r+0x30>
 800f594:	230c      	movs	r3, #12
 800f596:	f8c8 3000 	str.w	r3, [r8]
 800f59a:	f04f 30ff 	mov.w	r0, #4294967295
 800f59e:	e0c8      	b.n	800f732 <_svfiprintf_r+0x1c2>
 800f5a0:	2340      	movs	r3, #64	; 0x40
 800f5a2:	6163      	str	r3, [r4, #20]
 800f5a4:	2300      	movs	r3, #0
 800f5a6:	9309      	str	r3, [sp, #36]	; 0x24
 800f5a8:	2320      	movs	r3, #32
 800f5aa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f5ae:	2330      	movs	r3, #48	; 0x30
 800f5b0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f5b4:	9503      	str	r5, [sp, #12]
 800f5b6:	f04f 0b01 	mov.w	fp, #1
 800f5ba:	4637      	mov	r7, r6
 800f5bc:	463d      	mov	r5, r7
 800f5be:	f815 3b01 	ldrb.w	r3, [r5], #1
 800f5c2:	b10b      	cbz	r3, 800f5c8 <_svfiprintf_r+0x58>
 800f5c4:	2b25      	cmp	r3, #37	; 0x25
 800f5c6:	d13e      	bne.n	800f646 <_svfiprintf_r+0xd6>
 800f5c8:	ebb7 0a06 	subs.w	sl, r7, r6
 800f5cc:	d00b      	beq.n	800f5e6 <_svfiprintf_r+0x76>
 800f5ce:	4653      	mov	r3, sl
 800f5d0:	4632      	mov	r2, r6
 800f5d2:	4621      	mov	r1, r4
 800f5d4:	4640      	mov	r0, r8
 800f5d6:	f7ff ff71 	bl	800f4bc <__ssputs_r>
 800f5da:	3001      	adds	r0, #1
 800f5dc:	f000 80a4 	beq.w	800f728 <_svfiprintf_r+0x1b8>
 800f5e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f5e2:	4453      	add	r3, sl
 800f5e4:	9309      	str	r3, [sp, #36]	; 0x24
 800f5e6:	783b      	ldrb	r3, [r7, #0]
 800f5e8:	2b00      	cmp	r3, #0
 800f5ea:	f000 809d 	beq.w	800f728 <_svfiprintf_r+0x1b8>
 800f5ee:	2300      	movs	r3, #0
 800f5f0:	f04f 32ff 	mov.w	r2, #4294967295
 800f5f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f5f8:	9304      	str	r3, [sp, #16]
 800f5fa:	9307      	str	r3, [sp, #28]
 800f5fc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f600:	931a      	str	r3, [sp, #104]	; 0x68
 800f602:	462f      	mov	r7, r5
 800f604:	2205      	movs	r2, #5
 800f606:	f817 1b01 	ldrb.w	r1, [r7], #1
 800f60a:	4850      	ldr	r0, [pc, #320]	; (800f74c <_svfiprintf_r+0x1dc>)
 800f60c:	f7f0 fe00 	bl	8000210 <memchr>
 800f610:	9b04      	ldr	r3, [sp, #16]
 800f612:	b9d0      	cbnz	r0, 800f64a <_svfiprintf_r+0xda>
 800f614:	06d9      	lsls	r1, r3, #27
 800f616:	bf44      	itt	mi
 800f618:	2220      	movmi	r2, #32
 800f61a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800f61e:	071a      	lsls	r2, r3, #28
 800f620:	bf44      	itt	mi
 800f622:	222b      	movmi	r2, #43	; 0x2b
 800f624:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800f628:	782a      	ldrb	r2, [r5, #0]
 800f62a:	2a2a      	cmp	r2, #42	; 0x2a
 800f62c:	d015      	beq.n	800f65a <_svfiprintf_r+0xea>
 800f62e:	9a07      	ldr	r2, [sp, #28]
 800f630:	462f      	mov	r7, r5
 800f632:	2000      	movs	r0, #0
 800f634:	250a      	movs	r5, #10
 800f636:	4639      	mov	r1, r7
 800f638:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f63c:	3b30      	subs	r3, #48	; 0x30
 800f63e:	2b09      	cmp	r3, #9
 800f640:	d94d      	bls.n	800f6de <_svfiprintf_r+0x16e>
 800f642:	b1b8      	cbz	r0, 800f674 <_svfiprintf_r+0x104>
 800f644:	e00f      	b.n	800f666 <_svfiprintf_r+0xf6>
 800f646:	462f      	mov	r7, r5
 800f648:	e7b8      	b.n	800f5bc <_svfiprintf_r+0x4c>
 800f64a:	4a40      	ldr	r2, [pc, #256]	; (800f74c <_svfiprintf_r+0x1dc>)
 800f64c:	1a80      	subs	r0, r0, r2
 800f64e:	fa0b f000 	lsl.w	r0, fp, r0
 800f652:	4318      	orrs	r0, r3
 800f654:	9004      	str	r0, [sp, #16]
 800f656:	463d      	mov	r5, r7
 800f658:	e7d3      	b.n	800f602 <_svfiprintf_r+0x92>
 800f65a:	9a03      	ldr	r2, [sp, #12]
 800f65c:	1d11      	adds	r1, r2, #4
 800f65e:	6812      	ldr	r2, [r2, #0]
 800f660:	9103      	str	r1, [sp, #12]
 800f662:	2a00      	cmp	r2, #0
 800f664:	db01      	blt.n	800f66a <_svfiprintf_r+0xfa>
 800f666:	9207      	str	r2, [sp, #28]
 800f668:	e004      	b.n	800f674 <_svfiprintf_r+0x104>
 800f66a:	4252      	negs	r2, r2
 800f66c:	f043 0302 	orr.w	r3, r3, #2
 800f670:	9207      	str	r2, [sp, #28]
 800f672:	9304      	str	r3, [sp, #16]
 800f674:	783b      	ldrb	r3, [r7, #0]
 800f676:	2b2e      	cmp	r3, #46	; 0x2e
 800f678:	d10c      	bne.n	800f694 <_svfiprintf_r+0x124>
 800f67a:	787b      	ldrb	r3, [r7, #1]
 800f67c:	2b2a      	cmp	r3, #42	; 0x2a
 800f67e:	d133      	bne.n	800f6e8 <_svfiprintf_r+0x178>
 800f680:	9b03      	ldr	r3, [sp, #12]
 800f682:	1d1a      	adds	r2, r3, #4
 800f684:	681b      	ldr	r3, [r3, #0]
 800f686:	9203      	str	r2, [sp, #12]
 800f688:	2b00      	cmp	r3, #0
 800f68a:	bfb8      	it	lt
 800f68c:	f04f 33ff 	movlt.w	r3, #4294967295
 800f690:	3702      	adds	r7, #2
 800f692:	9305      	str	r3, [sp, #20]
 800f694:	4d2e      	ldr	r5, [pc, #184]	; (800f750 <_svfiprintf_r+0x1e0>)
 800f696:	7839      	ldrb	r1, [r7, #0]
 800f698:	2203      	movs	r2, #3
 800f69a:	4628      	mov	r0, r5
 800f69c:	f7f0 fdb8 	bl	8000210 <memchr>
 800f6a0:	b138      	cbz	r0, 800f6b2 <_svfiprintf_r+0x142>
 800f6a2:	2340      	movs	r3, #64	; 0x40
 800f6a4:	1b40      	subs	r0, r0, r5
 800f6a6:	fa03 f000 	lsl.w	r0, r3, r0
 800f6aa:	9b04      	ldr	r3, [sp, #16]
 800f6ac:	4303      	orrs	r3, r0
 800f6ae:	3701      	adds	r7, #1
 800f6b0:	9304      	str	r3, [sp, #16]
 800f6b2:	7839      	ldrb	r1, [r7, #0]
 800f6b4:	4827      	ldr	r0, [pc, #156]	; (800f754 <_svfiprintf_r+0x1e4>)
 800f6b6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800f6ba:	2206      	movs	r2, #6
 800f6bc:	1c7e      	adds	r6, r7, #1
 800f6be:	f7f0 fda7 	bl	8000210 <memchr>
 800f6c2:	2800      	cmp	r0, #0
 800f6c4:	d038      	beq.n	800f738 <_svfiprintf_r+0x1c8>
 800f6c6:	4b24      	ldr	r3, [pc, #144]	; (800f758 <_svfiprintf_r+0x1e8>)
 800f6c8:	bb13      	cbnz	r3, 800f710 <_svfiprintf_r+0x1a0>
 800f6ca:	9b03      	ldr	r3, [sp, #12]
 800f6cc:	3307      	adds	r3, #7
 800f6ce:	f023 0307 	bic.w	r3, r3, #7
 800f6d2:	3308      	adds	r3, #8
 800f6d4:	9303      	str	r3, [sp, #12]
 800f6d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f6d8:	444b      	add	r3, r9
 800f6da:	9309      	str	r3, [sp, #36]	; 0x24
 800f6dc:	e76d      	b.n	800f5ba <_svfiprintf_r+0x4a>
 800f6de:	fb05 3202 	mla	r2, r5, r2, r3
 800f6e2:	2001      	movs	r0, #1
 800f6e4:	460f      	mov	r7, r1
 800f6e6:	e7a6      	b.n	800f636 <_svfiprintf_r+0xc6>
 800f6e8:	2300      	movs	r3, #0
 800f6ea:	3701      	adds	r7, #1
 800f6ec:	9305      	str	r3, [sp, #20]
 800f6ee:	4619      	mov	r1, r3
 800f6f0:	250a      	movs	r5, #10
 800f6f2:	4638      	mov	r0, r7
 800f6f4:	f810 2b01 	ldrb.w	r2, [r0], #1
 800f6f8:	3a30      	subs	r2, #48	; 0x30
 800f6fa:	2a09      	cmp	r2, #9
 800f6fc:	d903      	bls.n	800f706 <_svfiprintf_r+0x196>
 800f6fe:	2b00      	cmp	r3, #0
 800f700:	d0c8      	beq.n	800f694 <_svfiprintf_r+0x124>
 800f702:	9105      	str	r1, [sp, #20]
 800f704:	e7c6      	b.n	800f694 <_svfiprintf_r+0x124>
 800f706:	fb05 2101 	mla	r1, r5, r1, r2
 800f70a:	2301      	movs	r3, #1
 800f70c:	4607      	mov	r7, r0
 800f70e:	e7f0      	b.n	800f6f2 <_svfiprintf_r+0x182>
 800f710:	ab03      	add	r3, sp, #12
 800f712:	9300      	str	r3, [sp, #0]
 800f714:	4622      	mov	r2, r4
 800f716:	4b11      	ldr	r3, [pc, #68]	; (800f75c <_svfiprintf_r+0x1ec>)
 800f718:	a904      	add	r1, sp, #16
 800f71a:	4640      	mov	r0, r8
 800f71c:	f3af 8000 	nop.w
 800f720:	f1b0 3fff 	cmp.w	r0, #4294967295
 800f724:	4681      	mov	r9, r0
 800f726:	d1d6      	bne.n	800f6d6 <_svfiprintf_r+0x166>
 800f728:	89a3      	ldrh	r3, [r4, #12]
 800f72a:	065b      	lsls	r3, r3, #25
 800f72c:	f53f af35 	bmi.w	800f59a <_svfiprintf_r+0x2a>
 800f730:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f732:	b01d      	add	sp, #116	; 0x74
 800f734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f738:	ab03      	add	r3, sp, #12
 800f73a:	9300      	str	r3, [sp, #0]
 800f73c:	4622      	mov	r2, r4
 800f73e:	4b07      	ldr	r3, [pc, #28]	; (800f75c <_svfiprintf_r+0x1ec>)
 800f740:	a904      	add	r1, sp, #16
 800f742:	4640      	mov	r0, r8
 800f744:	f000 f882 	bl	800f84c <_printf_i>
 800f748:	e7ea      	b.n	800f720 <_svfiprintf_r+0x1b0>
 800f74a:	bf00      	nop
 800f74c:	08011db0 	.word	0x08011db0
 800f750:	08011db6 	.word	0x08011db6
 800f754:	08011dba 	.word	0x08011dba
 800f758:	00000000 	.word	0x00000000
 800f75c:	0800f4bd 	.word	0x0800f4bd

0800f760 <_printf_common>:
 800f760:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f764:	4691      	mov	r9, r2
 800f766:	461f      	mov	r7, r3
 800f768:	688a      	ldr	r2, [r1, #8]
 800f76a:	690b      	ldr	r3, [r1, #16]
 800f76c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800f770:	4293      	cmp	r3, r2
 800f772:	bfb8      	it	lt
 800f774:	4613      	movlt	r3, r2
 800f776:	f8c9 3000 	str.w	r3, [r9]
 800f77a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800f77e:	4606      	mov	r6, r0
 800f780:	460c      	mov	r4, r1
 800f782:	b112      	cbz	r2, 800f78a <_printf_common+0x2a>
 800f784:	3301      	adds	r3, #1
 800f786:	f8c9 3000 	str.w	r3, [r9]
 800f78a:	6823      	ldr	r3, [r4, #0]
 800f78c:	0699      	lsls	r1, r3, #26
 800f78e:	bf42      	ittt	mi
 800f790:	f8d9 3000 	ldrmi.w	r3, [r9]
 800f794:	3302      	addmi	r3, #2
 800f796:	f8c9 3000 	strmi.w	r3, [r9]
 800f79a:	6825      	ldr	r5, [r4, #0]
 800f79c:	f015 0506 	ands.w	r5, r5, #6
 800f7a0:	d107      	bne.n	800f7b2 <_printf_common+0x52>
 800f7a2:	f104 0a19 	add.w	sl, r4, #25
 800f7a6:	68e3      	ldr	r3, [r4, #12]
 800f7a8:	f8d9 2000 	ldr.w	r2, [r9]
 800f7ac:	1a9b      	subs	r3, r3, r2
 800f7ae:	42ab      	cmp	r3, r5
 800f7b0:	dc28      	bgt.n	800f804 <_printf_common+0xa4>
 800f7b2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800f7b6:	6822      	ldr	r2, [r4, #0]
 800f7b8:	3300      	adds	r3, #0
 800f7ba:	bf18      	it	ne
 800f7bc:	2301      	movne	r3, #1
 800f7be:	0692      	lsls	r2, r2, #26
 800f7c0:	d42d      	bmi.n	800f81e <_printf_common+0xbe>
 800f7c2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800f7c6:	4639      	mov	r1, r7
 800f7c8:	4630      	mov	r0, r6
 800f7ca:	47c0      	blx	r8
 800f7cc:	3001      	adds	r0, #1
 800f7ce:	d020      	beq.n	800f812 <_printf_common+0xb2>
 800f7d0:	6823      	ldr	r3, [r4, #0]
 800f7d2:	68e5      	ldr	r5, [r4, #12]
 800f7d4:	f8d9 2000 	ldr.w	r2, [r9]
 800f7d8:	f003 0306 	and.w	r3, r3, #6
 800f7dc:	2b04      	cmp	r3, #4
 800f7de:	bf08      	it	eq
 800f7e0:	1aad      	subeq	r5, r5, r2
 800f7e2:	68a3      	ldr	r3, [r4, #8]
 800f7e4:	6922      	ldr	r2, [r4, #16]
 800f7e6:	bf0c      	ite	eq
 800f7e8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800f7ec:	2500      	movne	r5, #0
 800f7ee:	4293      	cmp	r3, r2
 800f7f0:	bfc4      	itt	gt
 800f7f2:	1a9b      	subgt	r3, r3, r2
 800f7f4:	18ed      	addgt	r5, r5, r3
 800f7f6:	f04f 0900 	mov.w	r9, #0
 800f7fa:	341a      	adds	r4, #26
 800f7fc:	454d      	cmp	r5, r9
 800f7fe:	d11a      	bne.n	800f836 <_printf_common+0xd6>
 800f800:	2000      	movs	r0, #0
 800f802:	e008      	b.n	800f816 <_printf_common+0xb6>
 800f804:	2301      	movs	r3, #1
 800f806:	4652      	mov	r2, sl
 800f808:	4639      	mov	r1, r7
 800f80a:	4630      	mov	r0, r6
 800f80c:	47c0      	blx	r8
 800f80e:	3001      	adds	r0, #1
 800f810:	d103      	bne.n	800f81a <_printf_common+0xba>
 800f812:	f04f 30ff 	mov.w	r0, #4294967295
 800f816:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f81a:	3501      	adds	r5, #1
 800f81c:	e7c3      	b.n	800f7a6 <_printf_common+0x46>
 800f81e:	18e1      	adds	r1, r4, r3
 800f820:	1c5a      	adds	r2, r3, #1
 800f822:	2030      	movs	r0, #48	; 0x30
 800f824:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800f828:	4422      	add	r2, r4
 800f82a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800f82e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800f832:	3302      	adds	r3, #2
 800f834:	e7c5      	b.n	800f7c2 <_printf_common+0x62>
 800f836:	2301      	movs	r3, #1
 800f838:	4622      	mov	r2, r4
 800f83a:	4639      	mov	r1, r7
 800f83c:	4630      	mov	r0, r6
 800f83e:	47c0      	blx	r8
 800f840:	3001      	adds	r0, #1
 800f842:	d0e6      	beq.n	800f812 <_printf_common+0xb2>
 800f844:	f109 0901 	add.w	r9, r9, #1
 800f848:	e7d8      	b.n	800f7fc <_printf_common+0x9c>
	...

0800f84c <_printf_i>:
 800f84c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f850:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 800f854:	460c      	mov	r4, r1
 800f856:	7e09      	ldrb	r1, [r1, #24]
 800f858:	b085      	sub	sp, #20
 800f85a:	296e      	cmp	r1, #110	; 0x6e
 800f85c:	4617      	mov	r7, r2
 800f85e:	4606      	mov	r6, r0
 800f860:	4698      	mov	r8, r3
 800f862:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800f864:	f000 80b3 	beq.w	800f9ce <_printf_i+0x182>
 800f868:	d822      	bhi.n	800f8b0 <_printf_i+0x64>
 800f86a:	2963      	cmp	r1, #99	; 0x63
 800f86c:	d036      	beq.n	800f8dc <_printf_i+0x90>
 800f86e:	d80a      	bhi.n	800f886 <_printf_i+0x3a>
 800f870:	2900      	cmp	r1, #0
 800f872:	f000 80b9 	beq.w	800f9e8 <_printf_i+0x19c>
 800f876:	2958      	cmp	r1, #88	; 0x58
 800f878:	f000 8083 	beq.w	800f982 <_printf_i+0x136>
 800f87c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800f880:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 800f884:	e032      	b.n	800f8ec <_printf_i+0xa0>
 800f886:	2964      	cmp	r1, #100	; 0x64
 800f888:	d001      	beq.n	800f88e <_printf_i+0x42>
 800f88a:	2969      	cmp	r1, #105	; 0x69
 800f88c:	d1f6      	bne.n	800f87c <_printf_i+0x30>
 800f88e:	6820      	ldr	r0, [r4, #0]
 800f890:	6813      	ldr	r3, [r2, #0]
 800f892:	0605      	lsls	r5, r0, #24
 800f894:	f103 0104 	add.w	r1, r3, #4
 800f898:	d52a      	bpl.n	800f8f0 <_printf_i+0xa4>
 800f89a:	681b      	ldr	r3, [r3, #0]
 800f89c:	6011      	str	r1, [r2, #0]
 800f89e:	2b00      	cmp	r3, #0
 800f8a0:	da03      	bge.n	800f8aa <_printf_i+0x5e>
 800f8a2:	222d      	movs	r2, #45	; 0x2d
 800f8a4:	425b      	negs	r3, r3
 800f8a6:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800f8aa:	486f      	ldr	r0, [pc, #444]	; (800fa68 <_printf_i+0x21c>)
 800f8ac:	220a      	movs	r2, #10
 800f8ae:	e039      	b.n	800f924 <_printf_i+0xd8>
 800f8b0:	2973      	cmp	r1, #115	; 0x73
 800f8b2:	f000 809d 	beq.w	800f9f0 <_printf_i+0x1a4>
 800f8b6:	d808      	bhi.n	800f8ca <_printf_i+0x7e>
 800f8b8:	296f      	cmp	r1, #111	; 0x6f
 800f8ba:	d020      	beq.n	800f8fe <_printf_i+0xb2>
 800f8bc:	2970      	cmp	r1, #112	; 0x70
 800f8be:	d1dd      	bne.n	800f87c <_printf_i+0x30>
 800f8c0:	6823      	ldr	r3, [r4, #0]
 800f8c2:	f043 0320 	orr.w	r3, r3, #32
 800f8c6:	6023      	str	r3, [r4, #0]
 800f8c8:	e003      	b.n	800f8d2 <_printf_i+0x86>
 800f8ca:	2975      	cmp	r1, #117	; 0x75
 800f8cc:	d017      	beq.n	800f8fe <_printf_i+0xb2>
 800f8ce:	2978      	cmp	r1, #120	; 0x78
 800f8d0:	d1d4      	bne.n	800f87c <_printf_i+0x30>
 800f8d2:	2378      	movs	r3, #120	; 0x78
 800f8d4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800f8d8:	4864      	ldr	r0, [pc, #400]	; (800fa6c <_printf_i+0x220>)
 800f8da:	e055      	b.n	800f988 <_printf_i+0x13c>
 800f8dc:	6813      	ldr	r3, [r2, #0]
 800f8de:	1d19      	adds	r1, r3, #4
 800f8e0:	681b      	ldr	r3, [r3, #0]
 800f8e2:	6011      	str	r1, [r2, #0]
 800f8e4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800f8e8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800f8ec:	2301      	movs	r3, #1
 800f8ee:	e08c      	b.n	800fa0a <_printf_i+0x1be>
 800f8f0:	681b      	ldr	r3, [r3, #0]
 800f8f2:	6011      	str	r1, [r2, #0]
 800f8f4:	f010 0f40 	tst.w	r0, #64	; 0x40
 800f8f8:	bf18      	it	ne
 800f8fa:	b21b      	sxthne	r3, r3
 800f8fc:	e7cf      	b.n	800f89e <_printf_i+0x52>
 800f8fe:	6813      	ldr	r3, [r2, #0]
 800f900:	6825      	ldr	r5, [r4, #0]
 800f902:	1d18      	adds	r0, r3, #4
 800f904:	6010      	str	r0, [r2, #0]
 800f906:	0628      	lsls	r0, r5, #24
 800f908:	d501      	bpl.n	800f90e <_printf_i+0xc2>
 800f90a:	681b      	ldr	r3, [r3, #0]
 800f90c:	e002      	b.n	800f914 <_printf_i+0xc8>
 800f90e:	0668      	lsls	r0, r5, #25
 800f910:	d5fb      	bpl.n	800f90a <_printf_i+0xbe>
 800f912:	881b      	ldrh	r3, [r3, #0]
 800f914:	4854      	ldr	r0, [pc, #336]	; (800fa68 <_printf_i+0x21c>)
 800f916:	296f      	cmp	r1, #111	; 0x6f
 800f918:	bf14      	ite	ne
 800f91a:	220a      	movne	r2, #10
 800f91c:	2208      	moveq	r2, #8
 800f91e:	2100      	movs	r1, #0
 800f920:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800f924:	6865      	ldr	r5, [r4, #4]
 800f926:	60a5      	str	r5, [r4, #8]
 800f928:	2d00      	cmp	r5, #0
 800f92a:	f2c0 8095 	blt.w	800fa58 <_printf_i+0x20c>
 800f92e:	6821      	ldr	r1, [r4, #0]
 800f930:	f021 0104 	bic.w	r1, r1, #4
 800f934:	6021      	str	r1, [r4, #0]
 800f936:	2b00      	cmp	r3, #0
 800f938:	d13d      	bne.n	800f9b6 <_printf_i+0x16a>
 800f93a:	2d00      	cmp	r5, #0
 800f93c:	f040 808e 	bne.w	800fa5c <_printf_i+0x210>
 800f940:	4665      	mov	r5, ip
 800f942:	2a08      	cmp	r2, #8
 800f944:	d10b      	bne.n	800f95e <_printf_i+0x112>
 800f946:	6823      	ldr	r3, [r4, #0]
 800f948:	07db      	lsls	r3, r3, #31
 800f94a:	d508      	bpl.n	800f95e <_printf_i+0x112>
 800f94c:	6923      	ldr	r3, [r4, #16]
 800f94e:	6862      	ldr	r2, [r4, #4]
 800f950:	429a      	cmp	r2, r3
 800f952:	bfde      	ittt	le
 800f954:	2330      	movle	r3, #48	; 0x30
 800f956:	f805 3c01 	strble.w	r3, [r5, #-1]
 800f95a:	f105 35ff 	addle.w	r5, r5, #4294967295
 800f95e:	ebac 0305 	sub.w	r3, ip, r5
 800f962:	6123      	str	r3, [r4, #16]
 800f964:	f8cd 8000 	str.w	r8, [sp]
 800f968:	463b      	mov	r3, r7
 800f96a:	aa03      	add	r2, sp, #12
 800f96c:	4621      	mov	r1, r4
 800f96e:	4630      	mov	r0, r6
 800f970:	f7ff fef6 	bl	800f760 <_printf_common>
 800f974:	3001      	adds	r0, #1
 800f976:	d14d      	bne.n	800fa14 <_printf_i+0x1c8>
 800f978:	f04f 30ff 	mov.w	r0, #4294967295
 800f97c:	b005      	add	sp, #20
 800f97e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f982:	4839      	ldr	r0, [pc, #228]	; (800fa68 <_printf_i+0x21c>)
 800f984:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 800f988:	6813      	ldr	r3, [r2, #0]
 800f98a:	6821      	ldr	r1, [r4, #0]
 800f98c:	1d1d      	adds	r5, r3, #4
 800f98e:	681b      	ldr	r3, [r3, #0]
 800f990:	6015      	str	r5, [r2, #0]
 800f992:	060a      	lsls	r2, r1, #24
 800f994:	d50b      	bpl.n	800f9ae <_printf_i+0x162>
 800f996:	07ca      	lsls	r2, r1, #31
 800f998:	bf44      	itt	mi
 800f99a:	f041 0120 	orrmi.w	r1, r1, #32
 800f99e:	6021      	strmi	r1, [r4, #0]
 800f9a0:	b91b      	cbnz	r3, 800f9aa <_printf_i+0x15e>
 800f9a2:	6822      	ldr	r2, [r4, #0]
 800f9a4:	f022 0220 	bic.w	r2, r2, #32
 800f9a8:	6022      	str	r2, [r4, #0]
 800f9aa:	2210      	movs	r2, #16
 800f9ac:	e7b7      	b.n	800f91e <_printf_i+0xd2>
 800f9ae:	064d      	lsls	r5, r1, #25
 800f9b0:	bf48      	it	mi
 800f9b2:	b29b      	uxthmi	r3, r3
 800f9b4:	e7ef      	b.n	800f996 <_printf_i+0x14a>
 800f9b6:	4665      	mov	r5, ip
 800f9b8:	fbb3 f1f2 	udiv	r1, r3, r2
 800f9bc:	fb02 3311 	mls	r3, r2, r1, r3
 800f9c0:	5cc3      	ldrb	r3, [r0, r3]
 800f9c2:	f805 3d01 	strb.w	r3, [r5, #-1]!
 800f9c6:	460b      	mov	r3, r1
 800f9c8:	2900      	cmp	r1, #0
 800f9ca:	d1f5      	bne.n	800f9b8 <_printf_i+0x16c>
 800f9cc:	e7b9      	b.n	800f942 <_printf_i+0xf6>
 800f9ce:	6813      	ldr	r3, [r2, #0]
 800f9d0:	6825      	ldr	r5, [r4, #0]
 800f9d2:	6961      	ldr	r1, [r4, #20]
 800f9d4:	1d18      	adds	r0, r3, #4
 800f9d6:	6010      	str	r0, [r2, #0]
 800f9d8:	0628      	lsls	r0, r5, #24
 800f9da:	681b      	ldr	r3, [r3, #0]
 800f9dc:	d501      	bpl.n	800f9e2 <_printf_i+0x196>
 800f9de:	6019      	str	r1, [r3, #0]
 800f9e0:	e002      	b.n	800f9e8 <_printf_i+0x19c>
 800f9e2:	066a      	lsls	r2, r5, #25
 800f9e4:	d5fb      	bpl.n	800f9de <_printf_i+0x192>
 800f9e6:	8019      	strh	r1, [r3, #0]
 800f9e8:	2300      	movs	r3, #0
 800f9ea:	6123      	str	r3, [r4, #16]
 800f9ec:	4665      	mov	r5, ip
 800f9ee:	e7b9      	b.n	800f964 <_printf_i+0x118>
 800f9f0:	6813      	ldr	r3, [r2, #0]
 800f9f2:	1d19      	adds	r1, r3, #4
 800f9f4:	6011      	str	r1, [r2, #0]
 800f9f6:	681d      	ldr	r5, [r3, #0]
 800f9f8:	6862      	ldr	r2, [r4, #4]
 800f9fa:	2100      	movs	r1, #0
 800f9fc:	4628      	mov	r0, r5
 800f9fe:	f7f0 fc07 	bl	8000210 <memchr>
 800fa02:	b108      	cbz	r0, 800fa08 <_printf_i+0x1bc>
 800fa04:	1b40      	subs	r0, r0, r5
 800fa06:	6060      	str	r0, [r4, #4]
 800fa08:	6863      	ldr	r3, [r4, #4]
 800fa0a:	6123      	str	r3, [r4, #16]
 800fa0c:	2300      	movs	r3, #0
 800fa0e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800fa12:	e7a7      	b.n	800f964 <_printf_i+0x118>
 800fa14:	6923      	ldr	r3, [r4, #16]
 800fa16:	462a      	mov	r2, r5
 800fa18:	4639      	mov	r1, r7
 800fa1a:	4630      	mov	r0, r6
 800fa1c:	47c0      	blx	r8
 800fa1e:	3001      	adds	r0, #1
 800fa20:	d0aa      	beq.n	800f978 <_printf_i+0x12c>
 800fa22:	6823      	ldr	r3, [r4, #0]
 800fa24:	079b      	lsls	r3, r3, #30
 800fa26:	d413      	bmi.n	800fa50 <_printf_i+0x204>
 800fa28:	68e0      	ldr	r0, [r4, #12]
 800fa2a:	9b03      	ldr	r3, [sp, #12]
 800fa2c:	4298      	cmp	r0, r3
 800fa2e:	bfb8      	it	lt
 800fa30:	4618      	movlt	r0, r3
 800fa32:	e7a3      	b.n	800f97c <_printf_i+0x130>
 800fa34:	2301      	movs	r3, #1
 800fa36:	464a      	mov	r2, r9
 800fa38:	4639      	mov	r1, r7
 800fa3a:	4630      	mov	r0, r6
 800fa3c:	47c0      	blx	r8
 800fa3e:	3001      	adds	r0, #1
 800fa40:	d09a      	beq.n	800f978 <_printf_i+0x12c>
 800fa42:	3501      	adds	r5, #1
 800fa44:	68e3      	ldr	r3, [r4, #12]
 800fa46:	9a03      	ldr	r2, [sp, #12]
 800fa48:	1a9b      	subs	r3, r3, r2
 800fa4a:	42ab      	cmp	r3, r5
 800fa4c:	dcf2      	bgt.n	800fa34 <_printf_i+0x1e8>
 800fa4e:	e7eb      	b.n	800fa28 <_printf_i+0x1dc>
 800fa50:	2500      	movs	r5, #0
 800fa52:	f104 0919 	add.w	r9, r4, #25
 800fa56:	e7f5      	b.n	800fa44 <_printf_i+0x1f8>
 800fa58:	2b00      	cmp	r3, #0
 800fa5a:	d1ac      	bne.n	800f9b6 <_printf_i+0x16a>
 800fa5c:	7803      	ldrb	r3, [r0, #0]
 800fa5e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800fa62:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800fa66:	e76c      	b.n	800f942 <_printf_i+0xf6>
 800fa68:	08011dc1 	.word	0x08011dc1
 800fa6c:	08011dd2 	.word	0x08011dd2

0800fa70 <memmove>:
 800fa70:	4288      	cmp	r0, r1
 800fa72:	b510      	push	{r4, lr}
 800fa74:	eb01 0302 	add.w	r3, r1, r2
 800fa78:	d807      	bhi.n	800fa8a <memmove+0x1a>
 800fa7a:	1e42      	subs	r2, r0, #1
 800fa7c:	4299      	cmp	r1, r3
 800fa7e:	d00a      	beq.n	800fa96 <memmove+0x26>
 800fa80:	f811 4b01 	ldrb.w	r4, [r1], #1
 800fa84:	f802 4f01 	strb.w	r4, [r2, #1]!
 800fa88:	e7f8      	b.n	800fa7c <memmove+0xc>
 800fa8a:	4283      	cmp	r3, r0
 800fa8c:	d9f5      	bls.n	800fa7a <memmove+0xa>
 800fa8e:	1881      	adds	r1, r0, r2
 800fa90:	1ad2      	subs	r2, r2, r3
 800fa92:	42d3      	cmn	r3, r2
 800fa94:	d100      	bne.n	800fa98 <memmove+0x28>
 800fa96:	bd10      	pop	{r4, pc}
 800fa98:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800fa9c:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800faa0:	e7f7      	b.n	800fa92 <memmove+0x22>
	...

0800faa4 <_free_r>:
 800faa4:	b538      	push	{r3, r4, r5, lr}
 800faa6:	4605      	mov	r5, r0
 800faa8:	2900      	cmp	r1, #0
 800faaa:	d045      	beq.n	800fb38 <_free_r+0x94>
 800faac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800fab0:	1f0c      	subs	r4, r1, #4
 800fab2:	2b00      	cmp	r3, #0
 800fab4:	bfb8      	it	lt
 800fab6:	18e4      	addlt	r4, r4, r3
 800fab8:	f000 f8d2 	bl	800fc60 <__malloc_lock>
 800fabc:	4a1f      	ldr	r2, [pc, #124]	; (800fb3c <_free_r+0x98>)
 800fabe:	6813      	ldr	r3, [r2, #0]
 800fac0:	4610      	mov	r0, r2
 800fac2:	b933      	cbnz	r3, 800fad2 <_free_r+0x2e>
 800fac4:	6063      	str	r3, [r4, #4]
 800fac6:	6014      	str	r4, [r2, #0]
 800fac8:	4628      	mov	r0, r5
 800faca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800face:	f000 b8c8 	b.w	800fc62 <__malloc_unlock>
 800fad2:	42a3      	cmp	r3, r4
 800fad4:	d90c      	bls.n	800faf0 <_free_r+0x4c>
 800fad6:	6821      	ldr	r1, [r4, #0]
 800fad8:	1862      	adds	r2, r4, r1
 800fada:	4293      	cmp	r3, r2
 800fadc:	bf04      	itt	eq
 800fade:	681a      	ldreq	r2, [r3, #0]
 800fae0:	685b      	ldreq	r3, [r3, #4]
 800fae2:	6063      	str	r3, [r4, #4]
 800fae4:	bf04      	itt	eq
 800fae6:	1852      	addeq	r2, r2, r1
 800fae8:	6022      	streq	r2, [r4, #0]
 800faea:	6004      	str	r4, [r0, #0]
 800faec:	e7ec      	b.n	800fac8 <_free_r+0x24>
 800faee:	4613      	mov	r3, r2
 800faf0:	685a      	ldr	r2, [r3, #4]
 800faf2:	b10a      	cbz	r2, 800faf8 <_free_r+0x54>
 800faf4:	42a2      	cmp	r2, r4
 800faf6:	d9fa      	bls.n	800faee <_free_r+0x4a>
 800faf8:	6819      	ldr	r1, [r3, #0]
 800fafa:	1858      	adds	r0, r3, r1
 800fafc:	42a0      	cmp	r0, r4
 800fafe:	d10b      	bne.n	800fb18 <_free_r+0x74>
 800fb00:	6820      	ldr	r0, [r4, #0]
 800fb02:	4401      	add	r1, r0
 800fb04:	1858      	adds	r0, r3, r1
 800fb06:	4282      	cmp	r2, r0
 800fb08:	6019      	str	r1, [r3, #0]
 800fb0a:	d1dd      	bne.n	800fac8 <_free_r+0x24>
 800fb0c:	6810      	ldr	r0, [r2, #0]
 800fb0e:	6852      	ldr	r2, [r2, #4]
 800fb10:	605a      	str	r2, [r3, #4]
 800fb12:	4401      	add	r1, r0
 800fb14:	6019      	str	r1, [r3, #0]
 800fb16:	e7d7      	b.n	800fac8 <_free_r+0x24>
 800fb18:	d902      	bls.n	800fb20 <_free_r+0x7c>
 800fb1a:	230c      	movs	r3, #12
 800fb1c:	602b      	str	r3, [r5, #0]
 800fb1e:	e7d3      	b.n	800fac8 <_free_r+0x24>
 800fb20:	6820      	ldr	r0, [r4, #0]
 800fb22:	1821      	adds	r1, r4, r0
 800fb24:	428a      	cmp	r2, r1
 800fb26:	bf04      	itt	eq
 800fb28:	6811      	ldreq	r1, [r2, #0]
 800fb2a:	6852      	ldreq	r2, [r2, #4]
 800fb2c:	6062      	str	r2, [r4, #4]
 800fb2e:	bf04      	itt	eq
 800fb30:	1809      	addeq	r1, r1, r0
 800fb32:	6021      	streq	r1, [r4, #0]
 800fb34:	605c      	str	r4, [r3, #4]
 800fb36:	e7c7      	b.n	800fac8 <_free_r+0x24>
 800fb38:	bd38      	pop	{r3, r4, r5, pc}
 800fb3a:	bf00      	nop
 800fb3c:	20009a68 	.word	0x20009a68

0800fb40 <_malloc_r>:
 800fb40:	b570      	push	{r4, r5, r6, lr}
 800fb42:	1ccd      	adds	r5, r1, #3
 800fb44:	f025 0503 	bic.w	r5, r5, #3
 800fb48:	3508      	adds	r5, #8
 800fb4a:	2d0c      	cmp	r5, #12
 800fb4c:	bf38      	it	cc
 800fb4e:	250c      	movcc	r5, #12
 800fb50:	2d00      	cmp	r5, #0
 800fb52:	4606      	mov	r6, r0
 800fb54:	db01      	blt.n	800fb5a <_malloc_r+0x1a>
 800fb56:	42a9      	cmp	r1, r5
 800fb58:	d903      	bls.n	800fb62 <_malloc_r+0x22>
 800fb5a:	230c      	movs	r3, #12
 800fb5c:	6033      	str	r3, [r6, #0]
 800fb5e:	2000      	movs	r0, #0
 800fb60:	bd70      	pop	{r4, r5, r6, pc}
 800fb62:	f000 f87d 	bl	800fc60 <__malloc_lock>
 800fb66:	4a21      	ldr	r2, [pc, #132]	; (800fbec <_malloc_r+0xac>)
 800fb68:	6814      	ldr	r4, [r2, #0]
 800fb6a:	4621      	mov	r1, r4
 800fb6c:	b991      	cbnz	r1, 800fb94 <_malloc_r+0x54>
 800fb6e:	4c20      	ldr	r4, [pc, #128]	; (800fbf0 <_malloc_r+0xb0>)
 800fb70:	6823      	ldr	r3, [r4, #0]
 800fb72:	b91b      	cbnz	r3, 800fb7c <_malloc_r+0x3c>
 800fb74:	4630      	mov	r0, r6
 800fb76:	f000 f863 	bl	800fc40 <_sbrk_r>
 800fb7a:	6020      	str	r0, [r4, #0]
 800fb7c:	4629      	mov	r1, r5
 800fb7e:	4630      	mov	r0, r6
 800fb80:	f000 f85e 	bl	800fc40 <_sbrk_r>
 800fb84:	1c43      	adds	r3, r0, #1
 800fb86:	d124      	bne.n	800fbd2 <_malloc_r+0x92>
 800fb88:	230c      	movs	r3, #12
 800fb8a:	6033      	str	r3, [r6, #0]
 800fb8c:	4630      	mov	r0, r6
 800fb8e:	f000 f868 	bl	800fc62 <__malloc_unlock>
 800fb92:	e7e4      	b.n	800fb5e <_malloc_r+0x1e>
 800fb94:	680b      	ldr	r3, [r1, #0]
 800fb96:	1b5b      	subs	r3, r3, r5
 800fb98:	d418      	bmi.n	800fbcc <_malloc_r+0x8c>
 800fb9a:	2b0b      	cmp	r3, #11
 800fb9c:	d90f      	bls.n	800fbbe <_malloc_r+0x7e>
 800fb9e:	600b      	str	r3, [r1, #0]
 800fba0:	50cd      	str	r5, [r1, r3]
 800fba2:	18cc      	adds	r4, r1, r3
 800fba4:	4630      	mov	r0, r6
 800fba6:	f000 f85c 	bl	800fc62 <__malloc_unlock>
 800fbaa:	f104 000b 	add.w	r0, r4, #11
 800fbae:	1d23      	adds	r3, r4, #4
 800fbb0:	f020 0007 	bic.w	r0, r0, #7
 800fbb4:	1ac3      	subs	r3, r0, r3
 800fbb6:	d0d3      	beq.n	800fb60 <_malloc_r+0x20>
 800fbb8:	425a      	negs	r2, r3
 800fbba:	50e2      	str	r2, [r4, r3]
 800fbbc:	e7d0      	b.n	800fb60 <_malloc_r+0x20>
 800fbbe:	428c      	cmp	r4, r1
 800fbc0:	684b      	ldr	r3, [r1, #4]
 800fbc2:	bf16      	itet	ne
 800fbc4:	6063      	strne	r3, [r4, #4]
 800fbc6:	6013      	streq	r3, [r2, #0]
 800fbc8:	460c      	movne	r4, r1
 800fbca:	e7eb      	b.n	800fba4 <_malloc_r+0x64>
 800fbcc:	460c      	mov	r4, r1
 800fbce:	6849      	ldr	r1, [r1, #4]
 800fbd0:	e7cc      	b.n	800fb6c <_malloc_r+0x2c>
 800fbd2:	1cc4      	adds	r4, r0, #3
 800fbd4:	f024 0403 	bic.w	r4, r4, #3
 800fbd8:	42a0      	cmp	r0, r4
 800fbda:	d005      	beq.n	800fbe8 <_malloc_r+0xa8>
 800fbdc:	1a21      	subs	r1, r4, r0
 800fbde:	4630      	mov	r0, r6
 800fbe0:	f000 f82e 	bl	800fc40 <_sbrk_r>
 800fbe4:	3001      	adds	r0, #1
 800fbe6:	d0cf      	beq.n	800fb88 <_malloc_r+0x48>
 800fbe8:	6025      	str	r5, [r4, #0]
 800fbea:	e7db      	b.n	800fba4 <_malloc_r+0x64>
 800fbec:	20009a68 	.word	0x20009a68
 800fbf0:	20009a6c 	.word	0x20009a6c

0800fbf4 <_realloc_r>:
 800fbf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fbf6:	4607      	mov	r7, r0
 800fbf8:	4614      	mov	r4, r2
 800fbfa:	460e      	mov	r6, r1
 800fbfc:	b921      	cbnz	r1, 800fc08 <_realloc_r+0x14>
 800fbfe:	4611      	mov	r1, r2
 800fc00:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800fc04:	f7ff bf9c 	b.w	800fb40 <_malloc_r>
 800fc08:	b922      	cbnz	r2, 800fc14 <_realloc_r+0x20>
 800fc0a:	f7ff ff4b 	bl	800faa4 <_free_r>
 800fc0e:	4625      	mov	r5, r4
 800fc10:	4628      	mov	r0, r5
 800fc12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fc14:	f000 f826 	bl	800fc64 <_malloc_usable_size_r>
 800fc18:	42a0      	cmp	r0, r4
 800fc1a:	d20f      	bcs.n	800fc3c <_realloc_r+0x48>
 800fc1c:	4621      	mov	r1, r4
 800fc1e:	4638      	mov	r0, r7
 800fc20:	f7ff ff8e 	bl	800fb40 <_malloc_r>
 800fc24:	4605      	mov	r5, r0
 800fc26:	2800      	cmp	r0, #0
 800fc28:	d0f2      	beq.n	800fc10 <_realloc_r+0x1c>
 800fc2a:	4631      	mov	r1, r6
 800fc2c:	4622      	mov	r2, r4
 800fc2e:	f7ff fc11 	bl	800f454 <memcpy>
 800fc32:	4631      	mov	r1, r6
 800fc34:	4638      	mov	r0, r7
 800fc36:	f7ff ff35 	bl	800faa4 <_free_r>
 800fc3a:	e7e9      	b.n	800fc10 <_realloc_r+0x1c>
 800fc3c:	4635      	mov	r5, r6
 800fc3e:	e7e7      	b.n	800fc10 <_realloc_r+0x1c>

0800fc40 <_sbrk_r>:
 800fc40:	b538      	push	{r3, r4, r5, lr}
 800fc42:	4c06      	ldr	r4, [pc, #24]	; (800fc5c <_sbrk_r+0x1c>)
 800fc44:	2300      	movs	r3, #0
 800fc46:	4605      	mov	r5, r0
 800fc48:	4608      	mov	r0, r1
 800fc4a:	6023      	str	r3, [r4, #0]
 800fc4c:	f7f6 fb10 	bl	8006270 <_sbrk>
 800fc50:	1c43      	adds	r3, r0, #1
 800fc52:	d102      	bne.n	800fc5a <_sbrk_r+0x1a>
 800fc54:	6823      	ldr	r3, [r4, #0]
 800fc56:	b103      	cbz	r3, 800fc5a <_sbrk_r+0x1a>
 800fc58:	602b      	str	r3, [r5, #0]
 800fc5a:	bd38      	pop	{r3, r4, r5, pc}
 800fc5c:	2000a150 	.word	0x2000a150

0800fc60 <__malloc_lock>:
 800fc60:	4770      	bx	lr

0800fc62 <__malloc_unlock>:
 800fc62:	4770      	bx	lr

0800fc64 <_malloc_usable_size_r>:
 800fc64:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800fc68:	1f18      	subs	r0, r3, #4
 800fc6a:	2b00      	cmp	r3, #0
 800fc6c:	bfbc      	itt	lt
 800fc6e:	580b      	ldrlt	r3, [r1, r0]
 800fc70:	18c0      	addlt	r0, r0, r3
 800fc72:	4770      	bx	lr

0800fc74 <_init>:
 800fc74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc76:	bf00      	nop
 800fc78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fc7a:	bc08      	pop	{r3}
 800fc7c:	469e      	mov	lr, r3
 800fc7e:	4770      	bx	lr

0800fc80 <_fini>:
 800fc80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc82:	bf00      	nop
 800fc84:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800fc86:	bc08      	pop	{r3}
 800fc88:	469e      	mov	lr, r3
 800fc8a:	4770      	bx	lr
